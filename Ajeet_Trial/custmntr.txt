**free

//---------------------------------------------------------------------------**
// Program     : CUSTMNTR                                                    **
// Description : Customer maintenance program                                **
//---------------------------------------------------------------------------**

ctl-opt option(*nodebugio: *srcstmt: *nounref);

//---------------------------------------------------------------
// File Definitions
//---------------------------------------------------------------
dcl-f CUSTMST usage(*update: *output) keyed;
dcl-f CUSTDSPF workstn indds(CUSTINDDS);

//---------------------------------------------------------------
// Data Structures
//---------------------------------------------------------------
dcl-ds PgmDS PSDS qualified;
  PgmName char(10) pos(1);
end-ds;

dcl-ds CUSTINDDS;
  EXIT         ind pos(3);
  REFRESH      ind pos(5);
  CANCEL       ind pos(12);
  OPTION_RI    ind pos(27);
  CUSTID_RI    ind pos(30);
  CUSTFNAME_RI ind pos(31);
  CUSTREGDT_RI ind pos(32);
end-ds;

//---------------------------------------------------------------
// Standalone variables
//---------------------------------------------------------------
dcl-s INDPOINTER pointer inz(%addr(*IN));
dcl-s ERROR char(1);
dcl-s DateVal date;

//---------------------------------------------------------------
// Constants
//---------------------------------------------------------------
dcl-c C_DISPLAY const('1');
dcl-c C_ADD const('2');
dcl-c C_YES const('Y');
dcl-c C_NO const('N');

//---------------------------------------------------------------
// Mainline Processing
//---------------------------------------------------------------

// Set Program Name.
PGMNAME = PgmDS.PgmName;

DoU EXIT = *On;
  // If no error, clear add fields.
  If ERROR = C_NO;
    ExSr RefreshDisplayFields;
  EndIf;

  // Show Customer Menu.
  Exfmt CUSTMENU;

  // If Exit pressed, leave.
  If EXIT = *On;
    Leave;
  EndIf;

  // Clear Message.
  Clear MMSG;

  // Set Error flag to 'N';
  ERROR = C_NO;

  // If Refresh pressed.
  If REFRESH = *On;
    ExSr RefreshDisplayFields;

  Else;
    // Reset Display Indicators.
    ExSr ResetDisplayInds;

    // Invalid Option.
    If MENUOPT <> C_DISPLAY and MENUOPT <> C_ADD;
      MMSG = 'Invalid Option. Please try again.';
      OPTION_RI = *On;
      ERROR = C_YES;

    // Display Customer details.
    ElseIf MENUOPT = C_DISPLAY;
      // Get Customer ID.
      Exfmt CUSTRCD;

      // Proceed if Customer ID is not blanks.
      If KCUSTID <> *Blanks;
        KCUSTID = %trim(KCUSTID);
        ExSr DisplayCustomer;
      EndIf;

    // Add new Customer.
    ElseIf MENUOPT = C_ADD;
      ExSr AddCustomer;
      ERROR = C_NO;
    Endif;
  EndIf;
EndDo;

*Inlr = *On;

//---------------------------------------------------------------
// Display Customer details.
//---------------------------------------------------------------
BegSr DisplayCustomer;
  Chain KCUSTID CUSTMST;
  If %found(CUSTMST);
    // Get display fields.
    ExSr GetDisplayFields;

    // Show the display screen.
    DoU CANCEL = *On;
      Exfmt CUSTDISP;

      // If Cancel pressed.
      If CANCEL = *On;
        CANCEL = *Off;
        Leave;
      EndIf;
    EndDo;
  Else;
    MMSG = 'Customer ID ' + %trim(KCUSTID) + ' not found.';
  EndIf;
EndSr;

//---------------------------------------------------------------
// Reset Display indicators.
//---------------------------------------------------------------
BegSr ResetDisplayInds;
  OPTION_RI = *Off;
EndSr;

//---------------------------------------------------------------
// Refresh Display fields.
//---------------------------------------------------------------
BegSr RefreshDisplayFields;
  Clear MENUOPT;
  ExSr ResetDisplayInds;
EndSr;

//---------------------------------------------------------------
// Get Display fields.
//---------------------------------------------------------------
BegSr GetDisplayFields;
  DCUSTID = CUSTID;
  DCUSTLNAME = CUSTLNAME;
  DCUSTFNAME = CUSTFNAME;
  DCUSTADDR1 = CUSTADDR1;
  DCUSTADDR2 = CUSTADDR2;
  DCUSTCITY = CUSTCITY;
  DCUSTSTATE = CUSTSTATE;
  DCUSTZIP = CUSTZIP;
  DCUSTPHONE = CUSTPHONE;
  DCUSTEMAIL = CUSTEMAIL;
  DCUSTREGDT = CUSTREGDT;
  DCUSTSTAT = CUSTSTAT;
EndSr;

//---------------------------------------------------------------
// Add new customer.
//---------------------------------------------------------------
BegSr AddCustomer;
  // Show the add sreen.
  DoU CANCEL = *On;
    // If no error, clear add fields.
    If ERROR = C_NO;
      ExSr RefreshAddFields;
    EndIf;

    Exfmt CUSTADD;

    // If Cancel pressed.
    If CANCEL = *On;
      CANCEL = *Off;
      Leave;
    EndIf;

    // Clear Add Message.
    Clear AMSG;

    // If Refresh pressed.
    If REFRESH = *On;
      ExSr RefreshAddFields;
      REFRESH = *Off;
    Else;
      // Reset Add indicators.
      ExSr ResetAddInds;

      // Validate Add fields.
      ExSr ValdateAddFields;

      // If no error.
      If ERROR = C_NO;
        // Get new customer details.
        ExSr GetNewCustDetails;

        // Write new customer details.
        Write CUSTMSTR;

        AMSG = 'Customer ' + %trim(ACUSTID) + ' added successfully.';
      EndIf;
    EndIf;
  EndDo;
EndSr;

//---------------------------------------------------------------
// Clear Add fields.
//---------------------------------------------------------------
BegSr ClearAddFields;
  CLear ACUSTID;
  Clear ACUSTLNAME;
  Clear ACUSTFNAME;
  Clear ACUSTADDR1;
  Clear ACUSTADDR2;
  Clear ACUSTCITY;
  Clear ACUSTSTATE;
  Clear ACUSTZIP;
  Clear ACUSTPHONE;
  Clear ACUSTEMAIL;
  Clear ACUSTREGDT;
  Clear ACUSTSTAT;
EndSr;

//---------------------------------------------------------------
// Reset Add indicators.
//---------------------------------------------------------------
BegSr ResetAddInds;
  CUSTID_RI = *Off;
  CUSTFNAME_RI = *Off;
  CUSTREGDT_RI = *Off;
EndSr;

//---------------------------------------------------------------
// Refresh Add fields.
//---------------------------------------------------------------
BegSr RefreshAddFields;
  ExSr ClearAddFields;
  ExSr ResetAddInds;
EndSr;

//---------------------------------------------------------------
// Validate Add fields.
//---------------------------------------------------------------
BegSr ValdateAddFields;
  // Initially, set error flag to 'N';
  ERROR = C_NO;

  // Customer ID cannot be blank.
  If ACUSTID = *Blanks;
    AMSG = 'Customer ID cannot be blank.';
    CUSTID_RI = *On;

  // Check if customer id already exists.
  ElseIf ACUSTID <> *Blanks;
    Chain ACUSTID CUSTMST;
    If %found(CUSTMST);
      AMSG = 'Customer ID ' + %trim(ACUSTID) + ' already exists.';
      CUSTID_RI = *On;
    EndIf;
  EndIf;

  If AMSG = *Blanks;
    // Customer First Name cannot be blank.
    If ACUSTFNAME = *Blanks;
      AMSG = 'Customer First Name cannot be blank';
      CUSTFNAME_RI = *On;
    Else;
      // Validate Registration Date.
      monitor;
        DateVal = %date(ACUSTREGDT: *ISO);
        on-error;
          AMSG = 'Invalid Registration Date.';
          CUSTREGDT_RI = *On;
      endmon;
    EndIf;
  EndIf;

  // Set Error flag.
  If AMSG <> *Blanks;
    ERROR = C_YES;
  EndIf;
EndSr;

//---------------------------------------------------------------
// Get new customer details.
//---------------------------------------------------------------
BegSr GetNewCustDetails;
  CUSTID = %trim(ACUSTID);
  CUSTLNAME = %trim(ACUSTLNAME);
  CUSTFNAME = %trim(ACUSTFNAME);
  CUSTADDR1 = %trim(ACUSTADDR1);
  CUSTADDR2 = %trim(ACUSTADDR2);
  CUSTCITY = %trim(ACUSTCITY);
  CUSTSTATE = %trim(ACUSTSTATE);
  CUSTZIP = %trim(ACUSTZIP);
  CUSTPHONE = %trim(ACUSTPHONE);
  CUSTEMAIL = %trim(ACUSTEMAIL);
  CUSTREGDT = ACUSTREGDT;
  CUSTSTAT = ACUSTSTAT;
  CUSTCRTTSP = %char(%timestamp());
  CUSTCRTPGM = PgmDS.PgmName;
EndSr;

//---------------------------------------------------------------
// *PSSR error handling.
//---------------------------------------------------------------
BegSr *PSSR;
  Dump(A);
EndSr;

