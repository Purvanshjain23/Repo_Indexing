**free

//---------------------------------------------------------------------------**
// Program     : SHIPMNTR                                                    **
// Description : Shipement maintenance program                               **
//---------------------------------------------------------------------------**

ctl-opt option(*nodebugio: *srcstmt: *nounref);

//---------------------------------------------------------------
// File Definitions
//---------------------------------------------------------------
dcl-f SHIPMST usage(*update: *output) keyed;
dcl-f OEP0101 usage(*input) keyed;
dcl-f WRHMAST usage(*input) keyed;
dcl-f SHIPDSPF workstn indds(SHIPINDDS);

//---------------------------------------------------------------
// Data Structures
//---------------------------------------------------------------
dcl-ds PgmDS PSDS qualified;
  PgmName char(10) pos(1);
end-ds;

dcl-ds SHIPINDDS;
  EXIT         ind pos(3);
  CANCEL       ind pos(12);
  REFRESH      ind pos(5);
  OPTION_RI    ind pos(27);
  SHIPID_RI    ind pos(30);
  SHIPORDID_RI ind pos(31);
  SHIPWHID_RI  ind pos(32);
  SHIPDATE_RI  ind pos(33);
end-ds;

//---------------------------------------------------------------
// Standalone variables
//---------------------------------------------------------------
dcl-s INDPOINTER pointer inz(%addr(*IN));
dcl-s ERROR char(1);
dcl-s DateVal date;

//---------------------------------------------------------------
// Constants
//---------------------------------------------------------------
dcl-c C_DISPLAY const('1');
dcl-c C_ADD const('2');
dcl-c C_YES const('Y');
dcl-c C_NO const('N');

//---------------------------------------------------------------
// Mainline Processing
//---------------------------------------------------------------

// Set Program Name.
PGMNAME = PgmDS.PgmName;

DoU EXIT = *On;
  // If no error, clear add fields.
  If ERROR = C_NO;
    ExSr RefreshDisplayFields;
  EndIf;

  // Show Shipment Menu.
  Exfmt SHIPMENU;

  // If Exit pressed, leave.
  If EXIT = *On;
    Leave;
  EndIf;

  // Clear Message.
  Clear MMSG;

  // Set Error flag to 'N';
  ERROR = C_NO;

  // If Refresh pressed.
  If REFRESH = *On;
    ExSr RefreshDisplayFields;

  Else;
    // Invalid Option.
    If MENUOPT <> C_DISPLAY and MENUOPT <> C_ADD;
      MMSG = 'Invalid Option. Please try again.';
      OPTION_RI = *On;
      ERROR = C_YES;

    // Display Shipment details.
    ElseIf MENUOPT = C_DISPLAY;
      // Get Shipment ID.
      Exfmt SHIPRCD;

      // Proceed if Shipment ID is not blanks.
      If KSHIPID <> *Blanks;
        KSHIPID = %trim(KSHIPID);
        ExSr DisplayShipment;
      EndIf;

    // Add new Shipment.
    ElseIf MENUOPT = C_ADD;
      ExSr AddShipment;
      ERROR = C_NO;
    Endif;
  EndIf;
EndDo;

*Inlr = *On;

//---------------------------------------------------------------
// Display Shipment details.
//---------------------------------------------------------------
BegSr DisplayShipment;
  Chain KSHIPID SHIPMST;
  If %found(SHIPMST);
    // Get display fields.
    ExSr GetDisplayFields;

    // Show the display screen.
    DoU CANCEL = *On;
      Exfmt SHIPDISP;

      // If Cancel pressed.
      If CANCEL = *On;
        CANCEL = *Off;
        Leave;
      EndIf;
    EndDo;
  Else;
    MMSG = 'Shipment ID ' + %trim(KSHIPID) + ' not found.';
  EndIf;
EndSr;

//---------------------------------------------------------------
// Reset Display indicators.
//---------------------------------------------------------------
BegSr ResetDisplayInds;
  OPTION_RI = *Off;
EndSr;

//---------------------------------------------------------------
// Refresh Display fields.
//---------------------------------------------------------------
BegSr RefreshDisplayFields;
  Clear MENUOPT;
  ExSr ResetDisplayInds;
EndSr;

//---------------------------------------------------------------
// Get Display fields.
//---------------------------------------------------------------
BegSr GetDisplayFields;
  DSHIPID = SHIPID;
  DSHIPORDID = SHIPORDID;
  DSHIPWHID = SHIPWHID;
  DSHIPDATE = SHIPDATE;
  DSHIPSTAT = SHIPSTAT;
EndSr;

//---------------------------------------------------------------
// Add new Shipment.
//---------------------------------------------------------------
BegSr AddShipment;
  // Show the add sreen.
  DoU CANCEL = *On;
    // If no error, clear add fields.
    If ERROR = C_NO;
      ExSr ClearAddFields;
    EndIf;

    Exfmt SHIPADD;

    // If Cancel pressed.
    If CANCEL = *On;
      CANCEL = *Off;
      Leave;
    EndIf;

    // Clear Add Message.
    Clear AMSG;

    // If Refresh pressed.
    If REFRESH = *On;
      ExSr RefreshAddFields;
      REFRESH = *Off;
    Else;
      // Reset Add indicators.
      ExSr ResetAddInds;

      // Validate Add fields.
      ExSr ValdateAddFields;

      // If no error.
      If ERROR = C_NO;
        // Get new Shipment details.
        ExSr GetNewShipDetails;

        // Write new Shipment details.
        Write SHIPMSTR;

        AMSG = 'Shipment ' + %trim(ASHIPID) + ' added successfully.';
      EndIf;
    EndIf;
  EndDo;
EndSr;

//---------------------------------------------------------------
// Clear Add fields.
//---------------------------------------------------------------
BegSr ClearAddFields;
  CLear ASHIPID;
  Clear ASHIPORDID;
  Clear ASHIPWHID;
  Clear ASHIPDATE;
  Clear ASHIPSTAT;
EndSr;

//---------------------------------------------------------------
// Reset Add indicators.
//---------------------------------------------------------------
BegSr ResetAddInds;
  SHIPID_RI = *Off;
  SHIPORDID_RI = *Off;
  SHIPWHID_RI = *Off;
  SHIPDATE_RI = *Off;
EndSr;

//---------------------------------------------------------------
// Refresh Add fields.
//---------------------------------------------------------------
BegSr RefreshAddFields;
  ExSr ClearAddFields;
  ExSr ResetAddInds;
EndSr;

//---------------------------------------------------------------
// Validate Add fields.
//---------------------------------------------------------------
BegSr ValdateAddFields;
  // Initially, set error flag to 'N';
  ERROR = C_NO;

  // Shipment ID cannot be blank.
  If ASHIPID = *Blanks;
    AMSG = 'Shipment ID cannot be blank.';
    SHIPID_RI = *On;
  Else;
    // Check if Shipment id already exists.
    Chain ASHIPID SHIPMST;
    If %found(SHIPMST);
      AMSG = 'Shipment ID ' + %trim(ASHIPID) + ' already exists.';
      SHIPID_RI = *On;
    EndIf;
  EndIf;

  If AMSG = *Blanks;
    // Order ID cannot be blank.
    If ASHIPORDID = *Blanks;
      AMSG = 'Order ID cannot be blank.';
      SHIPORDID_RI = *On;
    Else;
      // Check if Order id exists.
      Chain ASHIPORDID OEP0101;
      If not %found(OEP0101);
        AMSG = 'Order ID ' + %trim(ASHIPORDID) + ' doesn''t exist.';
        SHIPORDID_RI = *On;
      EndIf;
    EndIf;
  EndIf;

  If AMSG = *Blanks;
    // Warehouse ID cannot be blank.
    If ASHIPWHID = *Blanks;
      AMSG = 'Warehouse ID cannot be blank.';
      SHIPWHID_RI = *On;
    Else;
      // Check if Warehouse id exists.
      Chain ASHIPWHID WRHMAST;
      If not %found(WRHMAST);
        AMSG = 'Warehouse ID ' + %trim(ASHIPWHID) + ' doesn''t exist.';
        SHIPWHID_RI = *On;
      EndIf;
    EndIf;
  EndIf;

  If AMSG = *Blanks;
    // Validate Shipment Date.
    monitor;
      DateVal = %date(ASHIPDATE: *ISO);
    on-error;
      AMSG = 'Invalid Shipment Date.';
      SHIPDATE_RI = *On;
    endmon;
  EndIf;

  // Set Error flag.
  If AMSG <> *Blanks;
    ERROR = C_YES;
  EndIf;
EndSr;

//---------------------------------------------------------------
// Get new Shipment details.
//---------------------------------------------------------------
BegSr GetNewShipDetails;
  SHIPID = ASHIPID;
  SHIPORDID = ASHIPORDID;
  SHIPWHID = ASHIPWHID;
  SHIPDATE = ASHIPDATE;
  SHIPSTAT = ASHIPSTAT;
  SHIPCRTTSP = %char(%timestamp());
  SHIPCRTPGM = PgmDS.PgmName;
EndSr;

//---------------------------------------------------------------
// *PSSR error handling.
//---------------------------------------------------------------
BegSr *PSSR;
  Dump(A);
EndSr;

