     H/TITLE Dsp Load Plan Tm Sch  DF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 03/08/12  Time  : 14:55:31
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPBBRDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: Dsp Load Plan Tm Sch  DF  Display file
      *
     FPBAGCPL1IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Load Plan Time Key        Retrieval index
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FPBAEREL2IF  E           K        DISK
      * RSQ : Load Plan Category Codes  Co/Seq/Categ/SelActv
      *
     FPBAFCPL2IF  E           K        DISK
      * RSQ : Load Plan Time Schedule   Co/Whs/LdPlDt/Start Tm
      *
     FOMFJCPL0IF  E           K        DISK
      * RTV : Load Header               Retrieval index
      *
     FPBAFCPL1IF  E           K        DISK
      * RTV : Load Plan Time Schedule   Retrieval index
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FOMFJCPL1UF  E           K        DISK
      * UPD : Load Header               Update index
      *
     FPBAFCPL0UF  E           K        DISK
      * UPD : Load Plan Time Schedule   Update index
      *
     E                    #L3         3  1
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 035  5 0A
     E                    W0END   7 035  5 0A
     E                    W0NAM   7 035 10
      * Long constants
     E                    @CN#    1  07  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@AFCPMV
      * Load Plan Time Schedule   Retrieval index
      * Renamed input format fields
     I              AFAIC3                          WAAIC3
     I              AFAJCD                          WAAJCD
     I              AFUIDT                          WAUIDT
     I              AFOWAA                          WAOWAA
     I              AFABTH                          WAABTH
     I              AFACTH                          WAACTH
     I              AFUSNY                          WAUSNY
     I              AFN0ST                          WAN0ST
     I              AFYOT1                          WAYOT1
     I              AFVSST                          WAVSST
     I              AFMJDT                          WAMJDT
     I              AFBETM                          WABETM
     I              AFCCVN                          WACCVN
     I              AFCDVN                          WACDVN
     I              AFMKDT                          WAMKDT
     I              AFBFTM                          WABFTM
     I              AFCEVN                          WACEVN
     I              AFCFVN                          WACFVN
      *
     I@FJCPBO
      * Load Header               Update index
      * Renamed input format fields
     I              FJRMNB                          WBRMNB
     I              FJAIC3                          WBAIC3
     I              FJAODT                          WBAODT
     I              FJPJST                          WBPJST
     I              FJPKST                          WBPKST
     I              FJRNNB                          WBRNNB
     I              FJDMTX                          WBDMTX
     I              FJDNTX                          WBDNTX
     I              FJDOTX                          WBDOTX
     I              FJWTTX                          WBWTTX
     I              FJWUTX                          WBWUTX
     I              FJRPNB                          WBRPNB
     I              FJFLAM                          WBFLAM
     I              FJXQST                          WBXQST
     I              FJRRNB                          WBRRNB
     I              FJDXTX                          WBDXTX
     I              FJDYTX                          WBDYTX
     I              FJSBNB                          WBSBNB
     I              FJBZNA                          WBBZNA
     I              FJRONB                          WBRONB
     I              FJSQNB                          WBSQNB
     I              FJR1NB                          WBR1NB
     I              FJVCST                          WBVCST
     I              FJVDST                          WBVDST
     I              FJSDNB                          WBSDNB
     I              FJPAOU                          WBPAOU
     I              FJDGWG                          WBDGWG
     I              FJSXNB                          WBSXNB
     I              FJHADT                          WBHADT
     I              FJAART                          WBAART
     I              FJDHWG                          WBDHWG
     I              FJDIWG                          WBDIWG
     I              FJAQDT                          WBAQDT
     I              FJS6NB                          WBS6NB
     I              FJT4NB                          WBT4NB
     I              FJPRTM                          WBPRTM
     I              FJNPSV                          WBNPSV
     I              FJJ8TX                          WBJ8TX
     I              FJTLMI                          WBTLMI
     I              FJJ9TX                          WBJ9TX
     I              FJQ2CD                          WBQ2CD
     I              FJVPCD                          WBVPCD
     I              FJDBCD                          WBDBCD
     I              FJGRWE                          WBGRWE
     I              FJXCCD                          WBXCCD
     I              FJU2ST                          WBU2ST
     I              FJF9DT                          WBF9DT
     I              FJONTM                          WBONTM
     I              FJJ4DT                          WBJ4DT
     I              FJTRTM                          WBTRTM
     I              FJJ5DT                          WBJ5DT
     I              FJSPTM                          WBSPTM
     I              FJJ6DT                          WBJ6DT
     I              FJLFTM                          WBLFTM
     I              FJJ7DT                          WBJ7DT
     I              FJBOTM                          WBBOTM
     I              FJJ8DT                          WBJ8DT
     I              FJBLTM                          WBBLTM
     I              FJKIDT                          WBKIDT
     I              FJASTM                          WBASTM
     I              FJKADT                          WBKADT
     I              FJAJCM                          WBAJCM
     I              FJXACD                          WBXACD
     I              FJOANA                          WBOANA
     I              FJK4TX                          WBK4TX
     I              FJVOAG                          WBVOAG
     I              FJKBDT                          WBKBDT
     I              FJNBBO                          WBNBBO
     I              FJW4CD                          WBW4CD
     I              FJEFDT                          WBEFDT
     I              FJCNTN                          WBCNTN
     I              FJKCDT                          WBKCDT
     I              FJTMIN                          WBTMIN
     I              FJKDDT                          WBKDDT
     I              FJVMNB                          WBVMNB
     I              FJOCFR                          WBOCFR
     I              FJKJDT                          WBKJDT
     I              FJATTM                          WBATTM
     I              FJOTRS                          WBOTRS
     I              FJRNST                          WBRNST
     I              FJBRBK                          WBBRBK
     I              FJEIDT                          WBEIDT
     I              FJRMST                          WBRMST
     I              FJAJCD                          WBAJCD
     I              FJKKDT                          WBKKDT
     I              FJAVTM                          WBAVTM
     I              FJKZDT                          WBKZDT
     I              FJAXTM                          WBAXTM
     I              FJLHOS                          WBLHOS
     I              FJLHOR                          WBLHOR
     I              FJWNTX                          WBWNTX
     I              FJOITX                          WBOITX
     I              FJOJTX                          WBOJTX
     I              FJLLDT                          WBLLDT
     I              FJLSHG                          WBLSHG
     I              FJYPST                          WBYPST
     I              FJK0DT                          WBK0DT
     I              FJAYTM                          WBAYTM
     I              FJKNNX                          WBKNNX
     I              FJICWG                          WBICWG
     I              FJIDWG                          WBIDWG
     I              FJH9SX                          WBH9SX
     I              FJWOTX                          WBWOTX
     I              FJK1DT                          WBK1DT
     I              FJAZTM                          WBAZTM
     I              FJK2DT                          WBK2DT
     I              FJA0TM                          WBA0TM
     I              FJROST                          WBROST
     I              FJRPST                          WBRPST
     I              FJRQST                          WBRQST
     I              FJRRST                          WBRRST
     I              FJZBVA                          WBZBVA
     I              FJWPTX                          WBWPTX
     I              FJWQTX                          WBWQTX
     I              FJWRTX                          WBWRTX
     I              FJWSTX                          WBWSTX
     I              FJRVSX                          WBRVSX
     I              FJRUSX                          WBRUSX
     I              FJRWSX                          WBRWSX
     I              FJRXSX                          WBRXSX
     I              FJRYSX                          WBRYSX
     I              FJRZSX                          WBRZSX
     I              FJR0SX                          WBR0SX
     I              FJR1SX                          WBR1SX
     I              FJR2SX                          WBR2SX
     I              FJR3SX                          WBR3SX
     I              FJR4SX                          WBR4SX
     I              FJPYDT                          WBPYDT
     I              FJCKTM                          WBCKTM
     I              FJPZDT                          WBPZDT
     I              FJCLTM                          WBCLTM
     I              FJP0DT                          WBP0DT
     I              FJCMTM                          WBCMTM
     I              FJP1DT                          WBP1DT
     I              FJCNTM                          WBCNTM
     I              FJP2DT                          WBP2DT
     I              FJCOTM                          WBCOTM
     I              FJP3DT                          WBP3DT
     I              FJCQTM                          WBCQTM
     I              FJUVST                          WBUVST
     I              FJUWST                          WBUWST
     I              FJUXST                          WBUXST
     I              FJAATM                          WBAATM
     I              FJAYNA                          WBAYNA
     I              FJA0NA                          WBA0NA
     I              FJAXDT                          WBAXDT
      *
     I@AFCPMU
      * Load Plan Time Schedule   Update index
      * Renamed input format fields
     I              AFAIC3                          WCAIC3
     I              AFAJCD                          WCAJCD
     I              AFUIDT                          WCUIDT
     I              AFOWAA                          WCOWAA
     I              AFABTH                          WCABTH
     I              AFACTH                          WCACTH
     I              AFUSNY                          WCUSNY
     I              AFN0ST                          WCN0ST
     I              AFYOT1                          WCYOT1
     I              AFVSST                          WCVSST
     I              AFMJDT                          WCMJDT
     I              AFBETM                          WCBETM
     I              AFCCVN                          WCCCVN
     I              AFCDVN                          WCCDVN
     I              AFMKDT                          WCMKDT
     I              AFBFTM                          WCBFTM
     I              AFCEVN                          WCCEVN
     I              AFCFVN                          WCCFVN
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
     IXTCK2       DS
      * Time: hours, minutes, seconds (2)
     I                                        1   60XTTIM2
     I                                        1   20XTHH2
     I                                        3   40XTNN2
     I                                        5   60XTSS2
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQOMFJ1    E DSOMFJCPL1
      * UPD : Load Header               Update index
      * Renamed input format fields
     I              FJRMNB                          WBRMNB
     I              FJAIC3                          WBAIC3
     I              FJAODT                          WBAODT
     I              FJPJST                          WBPJST
     I              FJPKST                          WBPKST
     I              FJRNNB                          WBRNNB
     I              FJDMTX                          WBDMTX
     I              FJDNTX                          WBDNTX
     I              FJDOTX                          WBDOTX
     I              FJWTTX                          WBWTTX
     I              FJWUTX                          WBWUTX
     I              FJRPNB                          WBRPNB
     I              FJFLAM                          WBFLAM
     I              FJXQST                          WBXQST
     I              FJRRNB                          WBRRNB
     I              FJDXTX                          WBDXTX
     I              FJDYTX                          WBDYTX
     I              FJSBNB                          WBSBNB
     I              FJBZNA                          WBBZNA
     I              FJRONB                          WBRONB
     I              FJSQNB                          WBSQNB
     I              FJR1NB                          WBR1NB
     I              FJVCST                          WBVCST
     I              FJVDST                          WBVDST
     I              FJSDNB                          WBSDNB
     I              FJPAOU                          WBPAOU
     I              FJDGWG                          WBDGWG
     I              FJSXNB                          WBSXNB
     I              FJHADT                          WBHADT
     I              FJAART                          WBAART
     I              FJDHWG                          WBDHWG
     I              FJDIWG                          WBDIWG
     I              FJAQDT                          WBAQDT
     I              FJS6NB                          WBS6NB
     I              FJT4NB                          WBT4NB
     I              FJPRTM                          WBPRTM
     I              FJNPSV                          WBNPSV
     I              FJJ8TX                          WBJ8TX
     I              FJTLMI                          WBTLMI
     I              FJJ9TX                          WBJ9TX
     I              FJQ2CD                          WBQ2CD
     I              FJVPCD                          WBVPCD
     I              FJDBCD                          WBDBCD
     I              FJGRWE                          WBGRWE
     I              FJXCCD                          WBXCCD
     I              FJU2ST                          WBU2ST
     I              FJF9DT                          WBF9DT
     I              FJONTM                          WBONTM
     I              FJJ4DT                          WBJ4DT
     I              FJTRTM                          WBTRTM
     I              FJJ5DT                          WBJ5DT
     I              FJSPTM                          WBSPTM
     I              FJJ6DT                          WBJ6DT
     I              FJLFTM                          WBLFTM
     I              FJJ7DT                          WBJ7DT
     I              FJBOTM                          WBBOTM
     I              FJJ8DT                          WBJ8DT
     I              FJBLTM                          WBBLTM
     I              FJKIDT                          WBKIDT
     I              FJASTM                          WBASTM
     I              FJKADT                          WBKADT
     I              FJAJCM                          WBAJCM
     I              FJXACD                          WBXACD
     I              FJOANA                          WBOANA
     I              FJK4TX                          WBK4TX
     I              FJVOAG                          WBVOAG
     I              FJKBDT                          WBKBDT
     I              FJNBBO                          WBNBBO
     I              FJW4CD                          WBW4CD
     I              FJEFDT                          WBEFDT
     I              FJCNTN                          WBCNTN
     I              FJKCDT                          WBKCDT
     I              FJTMIN                          WBTMIN
     I              FJKDDT                          WBKDDT
     I              FJVMNB                          WBVMNB
     I              FJOCFR                          WBOCFR
     I              FJKJDT                          WBKJDT
     I              FJATTM                          WBATTM
     I              FJOTRS                          WBOTRS
     I              FJRNST                          WBRNST
     I              FJBRBK                          WBBRBK
     I              FJEIDT                          WBEIDT
     I              FJRMST                          WBRMST
     I              FJAJCD                          WBAJCD
     I              FJKKDT                          WBKKDT
     I              FJAVTM                          WBAVTM
     I              FJKZDT                          WBKZDT
     I              FJAXTM                          WBAXTM
     I              FJLHOS                          WBLHOS
     I              FJLHOR                          WBLHOR
     I              FJWNTX                          WBWNTX
     I              FJOITX                          WBOITX
     I              FJOJTX                          WBOJTX
     I              FJLLDT                          WBLLDT
     I              FJLSHG                          WBLSHG
     I              FJYPST                          WBYPST
     I              FJK0DT                          WBK0DT
     I              FJAYTM                          WBAYTM
     I              FJKNNX                          WBKNNX
     I              FJICWG                          WBICWG
     I              FJIDWG                          WBIDWG
     I              FJH9SX                          WBH9SX
     I              FJWOTX                          WBWOTX
     I              FJK1DT                          WBK1DT
     I              FJAZTM                          WBAZTM
     I              FJK2DT                          WBK2DT
     I              FJA0TM                          WBA0TM
     I              FJROST                          WBROST
     I              FJRPST                          WBRPST
     I              FJRQST                          WBRQST
     I              FJRRST                          WBRRST
     I              FJZBVA                          WBZBVA
     I              FJWPTX                          WBWPTX
     I              FJWQTX                          WBWQTX
     I              FJWRTX                          WBWRTX
     I              FJWSTX                          WBWSTX
     I              FJRVSX                          WBRVSX
     I              FJRUSX                          WBRUSX
     I              FJRWSX                          WBRWSX
     I              FJRXSX                          WBRXSX
     I              FJRYSX                          WBRYSX
     I              FJRZSX                          WBRZSX
     I              FJR0SX                          WBR0SX
     I              FJR1SX                          WBR1SX
     I              FJR2SX                          WBR2SX
     I              FJR3SX                          WBR3SX
     I              FJR4SX                          WBR4SX
     I              FJPYDT                          WBPYDT
     I              FJCKTM                          WBCKTM
     I              FJPZDT                          WBPZDT
     I              FJCLTM                          WBCLTM
     I              FJP0DT                          WBP0DT
     I              FJCMTM                          WBCMTM
     I              FJP1DT                          WBP1DT
     I              FJCNTM                          WBCNTM
     I              FJP2DT                          WBP2DT
     I              FJCOTM                          WBCOTM
     I              FJP3DT                          WBP3DT
     I              FJCQTM                          WBCQTM
     I              FJUVST                          WBUVST
     I              FJUWST                          WBUWST
     I              FJUXST                          WBUXST
     I              FJAATM                          WBAATM
     I              FJAYNA                          WBAYNA
     I              FJA0NA                          WBA0NA
     I              FJAXDT                          WBAXDT
      *
     IYARDCS      DS                            793
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IQPBAF1    E DSPBAFCPL0
      * UPD : Load Plan Time Schedule   Update index
      * Renamed input format fields
     I              AFAIC3                          WCAIC3
     I              AFAJCD                          WCAJCD
     I              AFUIDT                          WCUIDT
     I              AFOWAA                          WCOWAA
     I              AFABTH                          WCABTH
     I              AFACTH                          WCACTH
     I              AFUSNY                          WCUSNY
     I              AFN0ST                          WCN0ST
     I              AFYOT1                          WCYOT1
     I              AFVSST                          WCVSST
     I              AFMJDT                          WCMJDT
     I              AFBETM                          WCBETM
     I              AFCCVN                          WCCCVN
     I              AFCDVN                          WCCDVN
     I              AFMKDT                          WCMKDT
     I              AFBFTM                          WCBFTM
     I              AFCEVN                          WCCEVN
     I              AFCFVN                          WCCFVN
      *
     IYBRDCS      DS                            118
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Load Plan Time Schedule
      * N :  Company Number
     I                                    P   1   20P1AIC3
      * N :  Warehouse Code
     I                                        3   5 P1AJCD
      * N :  LPT Load Plan Date
     I                                    P   6   90P1UIDT
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Application Code
     I                                        1   6 P2DNCD
      * N :  Salesperson Code
     I                                        7   9 P2BCCD
      * N :  User Profile Name
     I                                       10  19 P2AJVN
      * N :  Allow Multi-Company
     I                                       20  20 P2I6ST
      * N :  Default Printer
     I                                       21  30 P2MPNA
      * N :  First Time Flag
     I                                       31  31 P2TAST
     IP3PARM      DS
      * FLD: *Arrays
      * N :  LPT Category 1
     I                                        1  15 P3OYAA
      * N :  Load Id 1
     I                                    P  16  190P3UTNY
      * N :  LPT Category 2
     I                                       20  34 P3OZAA
      * N :  Load Id 2
     I                                    P  35  380P3UUNY
      * N :  LPT Category 3
     I                                       39  53 P3O0AA
      * N :  Load Id 3
     I                                    P  54  570P3UVNY
      * N :  LPT Category 4
     I                                       58  72 P3O1AA
      * N :  Load Id 4
     I                                    P  73  760P3UWNY
      * N :  LPT Category 5
     I                                       77  91 P3O2AA
      * N :  Load Id 5
     I                                    P  92  950P3UXNY
      * N :  LPT Category 6
     I                                       96 110 P3O3AA
      * N :  Load Id 6
     I                                    P 111 1140P3UYNY
      * N :  LPT Category 7
     I                                      115 129 P3O4AA
      * N :  Load Id 7
     I                                    P 130 1330P3UZNY
      * N :  Load Count 1 USR
     I                                    P 134 1350P3U0NY
      * N :  Load Count 2 USR
     I                                    P 136 1370P3U1NY
      * N :  Load Count 3 USR
     I                                    P 138 1390P3U2NY
      * N :  Load Count 4 USR
     I                                    P 140 1410P3U3NY
      * N :  Load Count 5 USR
     I                                    P 142 1430P3U4NY
      * N :  Load Count 6 USR
     I                                    P 144 1450P3U5NY
      * N :  Load Count 7 USR
     I                                    P 146 1470P3U6NY
     IP4PARM      DS
      * N :  USR Hours 5.0
     I                                        1   50P4
     IP5PARM      DS
      * N :  USR Output Only Status
     I                                        1   1 P5E5ST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Warehouse cant ship f/co'
      * Warehouse Code
     I                                        1   3 ZA0001
      * Company Number
     I                                        4   6 ZA0002
      * Message data for 'CD3 Non numeric data'
      * Message data for 'Exe Sequel Load Plan'
      * Company Number
     I                                        1   3 ZA0003
      * Warehouse Code
     I                                        4   6 ZA0004
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0005
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0006
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0007
      * Deadline Departure Date
     I                                    P   4   70ZA0008
      * Deadline Departure Time
     I                                    P   8  110ZA0009
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0010
      * Deadline Departure Date
     I                                    P   4   70ZA0011
      * Deadline Departure Time
     I                                    P   8  110ZA0012
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0013
      * Deadline Departure Date
     I                                    P   4   70ZA0014
      * Deadline Departure Time
     I                                    P   8  110ZA0015
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0016
      * Deadline Departure Date
     I                                    P   4   70ZA0017
      * Deadline Departure Time
     I                                    P   8  110ZA0018
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0019
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0020
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0021
      * Deadline Departure Date
     I                                    P   4   70ZA0022
      * Deadline Departure Time
     I                                    P   8  110ZA0023
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0024
      * Deadline Departure Date
     I                                    P   4   70ZA0025
      * Deadline Departure Time
     I                                    P   8  110ZA0026
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0027
      * Deadline Departure Date
     I                                    P   4   70ZA0028
      * Deadline Departure Time
     I                                    P   8  110ZA0029
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0030
      * Deadline Departure Date
     I                                    P   4   70ZA0031
      * Deadline Departure Time
     I                                    P   8  110ZA0032
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0033
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0034
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0035
      * Deadline Departure Date
     I                                    P   4   70ZA0036
      * Deadline Departure Time
     I                                    P   8  110ZA0037
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0038
      * Deadline Departure Date
     I                                    P   4   70ZA0039
      * Deadline Departure Time
     I                                    P   8  110ZA0040
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0041
      * Deadline Departure Date
     I                                    P   4   70ZA0042
      * Deadline Departure Time
     I                                    P   8  110ZA0043
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0044
      * Deadline Departure Date
     I                                    P   4   70ZA0045
      * Deadline Departure Time
     I                                    P   8  110ZA0046
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0047
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0048
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0049
      * Deadline Departure Date
     I                                    P   4   70ZA0050
      * Deadline Departure Time
     I                                    P   8  110ZA0051
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0052
      * Deadline Departure Date
     I                                    P   4   70ZA0053
      * Deadline Departure Time
     I                                    P   8  110ZA0054
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0055
      * Deadline Departure Date
     I                                    P   4   70ZA0056
      * Deadline Departure Time
     I                                    P   8  110ZA0057
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0058
      * Deadline Departure Date
     I                                    P   4   70ZA0059
      * Deadline Departure Time
     I                                    P   8  110ZA0060
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0061
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0062
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0063
      * Deadline Departure Date
     I                                    P   4   70ZA0064
      * Deadline Departure Time
     I                                    P   8  110ZA0065
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0066
      * Deadline Departure Date
     I                                    P   4   70ZA0067
      * Deadline Departure Time
     I                                    P   8  110ZA0068
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0069
      * Deadline Departure Date
     I                                    P   4   70ZA0070
      * Deadline Departure Time
     I                                    P   8  110ZA0071
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0072
      * Deadline Departure Date
     I                                    P   4   70ZA0073
      * Deadline Departure Time
     I                                    P   8  110ZA0074
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0075
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0076
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0077
      * Deadline Departure Date
     I                                    P   4   70ZA0078
      * Deadline Departure Time
     I                                    P   8  110ZA0079
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0080
      * Deadline Departure Date
     I                                    P   4   70ZA0081
      * Deadline Departure Time
     I                                    P   8  110ZA0082
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0083
      * Deadline Departure Date
     I                                    P   4   70ZA0084
      * Deadline Departure Time
     I                                    P   8  110ZA0085
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0086
      * Deadline Departure Date
     I                                    P   4   70ZA0087
      * Deadline Departure Time
     I                                    P   8  110ZA0088
      * Message data for 'Load has status'
      * Condition Desc. 1  USR
     I                                        1  25 ZA0089
      * Message data for 'Load Id is not found'
      * Load ID
     I                                    P   1   40ZA0090
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0091
      * Deadline Departure Date
     I                                    P   4   70ZA0092
      * Deadline Departure Time
     I                                    P   8  110ZA0093
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0094
      * Deadline Departure Date
     I                                    P   4   70ZA0095
      * Deadline Departure Time
     I                                    P   8  110ZA0096
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0097
      * Deadline Departure Date
     I                                    P   4   70ZA0098
      * Deadline Departure Time
     I                                    P   8  110ZA0099
      * Message data for 'Time must be prior ddt-n'
      * USR Hours 5.0
     I                                    P   1   30ZA0100
      * Deadline Departure Date
     I                                    P   4   70ZA0101
      * Deadline Departure Time
     I                                    P   8  110ZA0102
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0103
      * Application Code
     I                                       11  16 ZA0104
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0105
      * Application Code
     I                                       11  16 ZA0106
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * CASE: PAR.Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
     C                     Z-ADDYL0001    #2AIC3           Company Number
     C                     MOVELYL0002    #2AJCD           Warehouse Code
     C                     MOVEL'N'       P2TAST           First Time Flag
     C                     END                             *FI
      * CASE: CTL.LPT Load Plan Date is not entered
     C           #2UIDT    IFEQ *ZERO                      *IF
     C                     Z-ADD##JDT     #2UIDT           LPT Load Plan D
     C                     END                             *FI
     C                     Z-ADD#2AIC3    P1AIC3           Company Number
     C                     MOVEL#2AJCD    P1AJCD           Warehouse Code
     C                     Z-ADD#2UIDT    P1UIDT           LPT Load Plan D
      * VAL Shipp/Co Whs      RT - Warehouse  * 
     C                     EXSR SARVGN
      * CASE: LCL.Warehouse Description is equal to blank
     C           YL0003    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#2AJCD    ZA0001           Warehouse Code
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0002           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0002           CD3 Ext Numeric
     C                     END                             *FI
      * Send message 'Warehouse cant ship f/co'
     C                     MOVEL'USR3362' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993231*
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Put the categories in the array in seq
      * Rtv BLD Category Hdg  RT - Load Plan Category Codes  * 
     C                     EXSR SBRVGN
      * Put the load counts in the heading
     C                     Z-ADD*ZERO     #CU0NY           Load Count 1 US
     C                     Z-ADD*ZERO     #CU1NY           Load Count 2 US
     C                     Z-ADD*ZERO     #CU2NY           Load Count 3 US
     C                     Z-ADD*ZERO     #CU3NY           Load Count 4 US
     C                     Z-ADD*ZERO     #CU4NY           Load Count 5 US
     C                     Z-ADD*ZERO     #CU5NY           Load Count 6 US
     C                     Z-ADD*ZERO     #CU6NY           Load Count 7 US
      * Exc Gen Ld Pln Tm Sch XF - Load Plan Category Codes  * 
     C                     CALL 'PBBQXFR'              90  Exc Gen Ld Pln
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0001  30       Company Number
     C                     PARM #2AJCD    WQ0002  3        Warehouse Code
     C                     PARM #2UIDT    WQ0003  70       LPT Load Plan D
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBQXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     SETON                     33    *
     C                     END
      * Rtv BLD Load# total   RT - Load Plan Time Schedule  * 
     C                     EXSR SCRVGN
     C                     END                             *FI
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           AGAIC3           Company Number
     C                     KFLD           AGAJCD           Warehouse Code
     C                     KFLD           AGUIDT           LPT Load Plan D
     C                     KFLD           AGABTH           LPT Load Plan T
      * Setup key
     C                     Z-ADD#2AIC3    AGAIC3
     C                     MOVEL#2AJCD    AGAJCD
     C                     Z-ADD#2UIDT    AGUIDT
     C                     Z-ADD#2ABTH    AGABTH
     C           KPOS      SETLL@AGCPMZ
     C                     READ @AGCPMZ                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2AJCD    WZAJCD
     C                     MOVEL#2AJCD    WZAJCD           Warehouse Code
     C           *LIKE     DEFN #2UIDT    WZUIDT
     C                     MOVEL#2UIDT    WZUIDT           LPT Load Plan D
     C           *LIKE     DEFN #2ABTH    WZABTH
     C                     MOVEL#2ABTH    WZABTH           LPT Load Plan T
     C           *LIKE     DEFN #2ACTH    WZACTH
     C                     MOVEL#2ACTH    WZACTH           LPT On Yard Tim
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@AGCPMZ                  90*
     C  N82                READ @AGCPMZ                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  7
     C                     MOVEAWKIND0    *IN,35
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2AJCD    IFNE *BLANK                     Warehouse Code
     C           AGAJCD    CABNE#2AJCD    BB020            Warehouse Code
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2AJCD    OREQ *BLANK                     Warehouse Code
     C           #2UIDT    IFNE *ZERO                      LPT Load Plan D
     C           AGUIDT    CABNE#2UIDT    BB020            LPT Load Plan D
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2AJCD    OREQ *BLANK                     Warehouse Code
     C           #2UIDT    OREQ *ZERO                      LPT Load Plan D
     C           #2ABTH    IFNE *ZERO                      LPT Load Plan T
     C           AGABTH    CABNE#2ABTH    BB020            LPT Load Plan T
     C                     END
     C                     END
     C           #2ACTH    IFNE *ZERO                      LPT On Yard Tim
     C           AGACTH    CABNE#2ACTH    BB020            LPT On Yard Tim
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : RCD.LPT Load Plan Date NE CTL.LPT Load Plan Date
      *   |- c2    : RCD.Company Number NE CTL.Company Number
      *   |- c3    : RCD.Warehouse Code NE CTL.Warehouse Code
      *   '-
     C           #1UIDT    IFNE #2UIDT                     *IF
     C           #1AIC3    ORNE #2AIC3                     *OR
     C           #1AJCD    ORNE #2AJCD                     *OR
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Put the Load id in the array under the corr category
      * Rtv BLD Array f/dsp   RT - Load Plan Time Schedule  * 
     C                     EXSR SDRVGN
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @AGCPMZ                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ @CN,002                    *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate LPT Load Plan Date
      * External date
     C                     Z-ADDV2UIDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9933  *
     C                     END
     C                     Z-ADDXDINDT    #2UIDT
      * Validate LPT Load Plan Time
     C                     Z-ADD#2ABTH    XTTIM
      * Check time
     C                     EXSR XTCKTM
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZAJCD    CASNE#2AJCD    FBRQRL
     C           WZUIDT    CASNE#2UIDT    FBRQRL
     C           WZABTH    CASNE#2ABTH    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * F4=Prompt
      * CASE: CTL.*CMD key is CF04
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Company Number
     C           W0CFL     IFEQ 'V2AIC3'                   *IF
      * SEL Company - plants   SR - Company Name and Address  * 
     C                     CALL 'PPF2SRR'              90  SEL Company - p
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0004  30       Company Number
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPF2SRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> CTL.Warehouse Code
     C           W0CFL     IFEQ '#2AJCD'                   *IF
      * SEL ShipCo/Warehouse   SR - Warehouse  * 
     C                     CALL 'PPHQSRR'              90  SEL ShipCo/Ware
     C                     PARM *BLANK    W0RTN   7
     C           #2AJCD    PARM #2AJCD    WQ0005  3        Warehouse Code
     C                     PARM #2AIC3    WQ0006  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPHQSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993231*
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> CTL.LPT Load Plan Date
     C           W0CFL     IFEQ 'V2UIDT'                   *IF
      * Sel Load Plan Date    SL - Load Plan Time Key  * 
     C                     CALL 'PBBTSRR'              90  Sel Load Plan D
     C                     PARM *BLANK    W0RTN   7
     C           #2AIC3    PARM #2AIC3    WQ0007  30       Company Number
     C           #2AJCD    PARM #2AJCD    WQ0008  3        Warehouse Code
     C           #2UIDT    PARM #2UIDT    WQ0009  70       LPT Load Plan D
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBTSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     993132*
     C                     SETON                     33    *
     C                     END
     C                     END                             *FI
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
      * CASE:
      *  - c1ORc2ORc3
      *   |- c1    : CTL.Company Number NE PAR.Company Number
      *   |- c2    : CTL.Warehouse Code NE PAR.Warehouse Code
      *   |- c3    : CTL.LPT Load Plan Date NE PAR.LPT Load Plan Date
      *   '-
     C           #2AIC3    IFNE P1AIC3                     *IF
     C           #2AJCD    ORNE P1AJCD                     *OR
     C           #2UIDT    ORNE P1UIDT                     *OR
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END                             *FI
      * F10=Inq
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
      * DSP Ord Inq for Shppng DF - Order Header TRG  * 
     C                     CALL 'PDRBDFR'              90  DSP Ord Inq for
     C                     PARM *BLANK    W0RTN   7
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDRBDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
      * F21=Email
      * CASE: CTL.*CMD key is CF21
     C           *IN21     IFEQ '1'                        *IF
      * LCL.Number Value - 7 = CTL.LPT Load Plan Date
     C                     Z-ADD#2UIDT    YL0004           Number Value -
      * Setup message data for message
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    ZA0003           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0003           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL#2AJCD    ZA0004           Warehouse Code
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'USR4486' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     993132*
     C                     END
      *
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPRCF
      * Exit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO DAEXIT
     C                     END
      * Process subfile (pass 2)
     C                     EXSR EAPRSF
      * If error during 2nd pass exit:
     C           *IN99     CABEQ'1'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,35
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * SFLNXTCHG
     C                     SETON                     84
      * USER: Process subfile record (Pre-confirm)
      * F4=Load Id
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 1
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUTNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUTNY    PARM #RUTNY    WQ0010  70       Load ID
     C                     PARM #2UIDT    WQ0011  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0012  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983533*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 2
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUUNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUUNY    PARM #RUUNY    WQ0013  70       Load ID
     C                     PARM #2UIDT    WQ0014  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0015  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983633*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 3
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUVNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUVNY    PARM #RUVNY    WQ0016  70       Load ID
     C                     PARM #2UIDT    WQ0017  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0018  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983733*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 4
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUWNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUWNY    PARM #RUWNY    WQ0019  70       Load ID
     C                     PARM #2UIDT    WQ0020  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0021  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983833*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 5
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUXNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUXNY    PARM #RUXNY    WQ0022  70       Load ID
     C                     PARM #2UIDT    WQ0023  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0024  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     983933*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 6
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUYNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUYNY    PARM #RUYNY    WQ0025  70       Load ID
     C                     PARM #2UIDT    WQ0026  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0027  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     984033*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> RCD.Load Id 7
     C           W0CSRR    IFEQ ##RR                       *
     C           W0CFL     ANDEQ'#RUZNY'                   *IF
      * SEL Load ID by Whs     SR - Load Header  * 
     C                     CALL 'PBBUSRR'              90  SEL Load ID by
     C                     PARM *BLANK    W0RTN   7
     C           #RUZNY    PARM #RUZNY    WQ0028  70       Load ID
     C                     PARM #2UIDT    WQ0029  70       Scheduled Ship
     C                     PARM #2AJCD    WQ0030  3        Ship From Wareh
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PBBUSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     984133*
     C                     SETON                     32    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL'N'       YL0005           Error Status
      * Validate Load Id 1
      * CASE: RCD.Load Id 1 is NE Blank
     C           #RUTNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUTNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNLAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     MOVELYL0011    ZA0005           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
      * *Set Cursor: RCD.Load Id 1  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD018       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     Z-ADD#RUTNY    ZA0006           Load Id 1
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0007           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0008
     C                     Z-ADDYL0010    ZA0009           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0010           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0011
     C                     Z-ADDYL0010    ZA0012           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0013           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0014
     C                     Z-ADDYL0010    ZA0015           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0016           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0017
     C                     Z-ADDYL0010    ZA0018           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9835  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Load Id 2
      * CASE: RCD.Load Id 2 is NE Blank
     C           #RUUNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUUNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNMAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     MOVELYL0011    ZA0019           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
     C                     MOVEL'Y'       YL0005           Error Status
      * *Set Cursor: RCD.Load Id 2  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD035       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
      * Setup message data for message
     C                     Z-ADD#RUUNY    ZA0020           Load Id 2
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0021           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0022
     C                     Z-ADDYL0010    ZA0023           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0024           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0025
     C                     Z-ADDYL0010    ZA0026           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0027           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0028
     C                     Z-ADDYL0010    ZA0029           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0030           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0031
     C                     Z-ADDYL0010    ZA0032           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9836  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Load Id 3
      * CASE: RCD.Load Id 3 is NE Blank
     C           #RUVNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUVNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNNAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
     C                     MOVEL'Y'       YL0005           Error Status
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
      * Setup message data for message
     C                     MOVELYL0011    ZA0033           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
     C                     MOVEL'Y'       YL0005           Error Status
      * *Set Cursor: RCD.Load Id 3  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD052       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
      * Setup message data for message
     C                     Z-ADD#RUVNY    ZA0034           Load Id 3
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0035           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0036
     C                     Z-ADDYL0010    ZA0037           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0038           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0039
     C                     Z-ADDYL0010    ZA0040           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0041           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0042
     C                     Z-ADDYL0010    ZA0043           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0044           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0045
     C                     Z-ADDYL0010    ZA0046           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9837  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Load Id 4
      * CASE: RCD.Load Id 4 is NE Blank
     C           #RUWNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUWNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNOAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     MOVELYL0011    ZA0047           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
      * *Set Cursor: RCD.Load Id 4  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD069       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     Z-ADD#RUWNY    ZA0048           Load Id 4
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0049           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0050
     C                     Z-ADDYL0010    ZA0051           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0052           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0053
     C                     Z-ADDYL0010    ZA0054           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0055           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0056
     C                     Z-ADDYL0010    ZA0057           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0058           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0059
     C                     Z-ADDYL0010    ZA0060           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9838  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Load Id 5
      * CASE: RCD.Load Id 5 is NE Blank
     C           #RUXNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUXNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNPAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     MOVELYL0011    ZA0061           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
      * *Set Cursor: RCD.Load Id 5  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD085       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     Z-ADD#RUXNY    ZA0062           Load Id 5
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0063           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0064
     C                     Z-ADDYL0010    ZA0065           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0066           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0067
     C                     Z-ADDYL0010    ZA0068           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0069           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0070
     C                     Z-ADDYL0010    ZA0071           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0072           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0073
     C                     Z-ADDYL0010    ZA0074           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9839  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Load Id 6
      * CASE: RCD.Load Id 6 is NE Blank
     C           #RUYNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUYNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNQAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     MOVELYL0011    ZA0075           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
      * *Set Cursor: RCD.Load Id 6  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD101       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     Z-ADD#RUYNY    ZA0076           Load Id 6
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0077           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0078
     C                     Z-ADDYL0010    ZA0079           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0080           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0081
     C                     Z-ADDYL0010    ZA0082           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0083           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0084
     C                     Z-ADDYL0010    ZA0085           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0086           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0087
     C                     Z-ADDYL0010    ZA0088           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9840  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Validate Load Id 7
      * CASE: RCD.Load Id 7 is NE Blank
     C           #RUZNY    IFNE *ZERO                      *IF
      * RTV LoadSts/Carrier    RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUZNY    WL0003           Load ID
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0004    YL0006    P      Load Status
     C                     MOVELWL0005    #RNRAA    P      Carrier Code
     C                     MOVELWL0006    YL0007    P      Export Status
     C                     MOVELWL0007    YL0008    P      Load Acceptance
     C                     Z-ADDWL0008    YL0009           Deadline Depart
     C                     Z-ADDWL0009    YL0010           Deadline Depart
      * CASE: LCL.Load Status is Shipped or Invoiced
     C           YL0006    IFEQ 'I'                        *IF
     C           YL0006    OREQ 'S'
      * LCL.Condition Desc. 1  USR = Condition name of LCL.Load Status
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1195931   Y2LSNO  70       List number
     C                     PARM YL0006    W0INVL 25        Load Status
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           YL0011    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVEL'Y'       YL0005           Error Status
      * Setup message data for message
     C                     MOVELYL0011    ZA0089           Condition Desc.
      * Send message 'Load has status'
     C                     MOVEL'USR4485' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     ELSE
      * CASE: LCL.Load Status is *Blank
     C           YL0006    IFEQ *BLANK                     *IF
      * *Set Cursor: RCD.Load Id 7  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  009       W0ROW0
     C                     Z-ADD117       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
      * Setup message data for message
     C                     Z-ADD#RUZNY    ZA0090           Load Id 7
      * Send message 'Load Id is not found'
     C                     MOVEL'USR2783' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     MOVEL'Y'       YL0005           Error Status
     C                     MOVEL*BLANK    YL0011           Condition Desc.
     C                     MOVEL'Error'   YL0011           Condition Desc.
     C                     ELSE
      * CASE: *OTHERWISE
     C           #1ABTH    MULT 100       YL0012           Time Entered
      * Validate Load Plan Time earlier than DDT
      * CASE: RCD.LPT Load Plan Date EQ LCL.Deadline Departure Date
     C           #1UIDT    IFEQ YL0009                     *IF
      * Entered time must be at least N hours prior ddt
      * CASE: LCL.Deadline Departure Time GT LCL.Time Entered
     C           YL0010    IFGT YL0012                     *IF
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0091           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0092
     C                     Z-ADDYL0010    ZA0093           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     Z-ADDP4        ZA0094           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0095
     C                     Z-ADDYL0010    ZA0096           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: RCD.LPT Load Plan Date GT LCL.Deadline Departure Date
     C           #1UIDT    IFGT YL0009                     *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0097           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0098
     C                     Z-ADDYL0010    ZA0099           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Days = LCL.Deadline Departure Date - CTL.LPT Load Plan Date *
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,004   XDCDW   7
     C                     EXSR XDOWS
     C           #2UIDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           YL0009    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     YL0014
     C                     ELSE
     C           XDURR     MULT -1        YL0014
     C                     END
      * CASE: LCL.Days is gt 1 day
     C           YL0014    IFGT 1                          *IF
      * ok
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Hour 1 USR = LCL.Deadline Departure Time - LCL.Time Entered *
     C                     Z-ADDYL0012    XTTIM2
     C                     Z-ADDYL0010    XTTIM
     C                     EXSR XTCEL
     C                     Z-ADDXTHH      YL0013
     C                     MULT XSGN      YL0013
     C                     ADD  24        YL0013           Hour 1 USR
      * CASE: LCL.Hour 1 USR LT PAR.USR Hours 5.0
     C           YL0013    IFLT P4                         *IF
      * Setup message data for message
     C                     Z-ADDP4        ZA0100           USR Hours 5.0
      * Convert Deadline Departure Date to display format
      * Convert date
     C           1000000   ADD  YL0009    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0101
     C                     Z-ADDYL0010    ZA0102           Deadline Depart
      * Send message 'Time must be prior ddt-n'
     C                     MOVEL'USR4499' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9841  *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Error Status is Not Yes
     C           YL0005    IFEQ *BLANK                     *IF
     C           YL0005    OREQ 'N'
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     GOTO DCEXIT                     *QUIT
     C                     END                             *FI
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#COYAA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUTNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#COZAA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUUNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#CO0AA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUVNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#CO1AA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUWNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#CO2AA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUXNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#CO3AA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUYNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL#1AJCD    WL0011    P      Warehouse Code
     C                     Z-ADD#1UIDT    WL0012           LPT Load Plan D
     C                     MOVEL#CO4AA    WL0013    P      LPC Category
     C                     Z-ADD#1ABTH    WL0014           LPT Load Plan T
     C                     Z-ADD#RUZNY    WL0015           LPT Load Id
     C                     EXSR SGRVGN
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DHPRCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#SFLCTL
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
      * USER: Process subfile control (Post-confirm)
      * CASE: LCL.Error Status is Not Yes
     C           YL0005    IFEQ *BLANK                     *IF
     C           YL0005    OREQ 'N'
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     ELSE
      * CASE: *OTHERWISE
     C                     END                             *FI
     C           *IN81     IFEQ '1'
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END                             WOD *92
     C                     END                             FI *81
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,35
     C                     SETOF                     98
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C                     SETON                     84    SFLNXTCHG
     C  N99                Z-ADD##RR      ##SFRC     99    *
     C                     GOTO EBEXIT
     C                     ELSE
      * SFLRCD valid
     C                     SETOF                     84    SFLNXTCHG
     C                     END                             FI *IN98
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN78
     C           P5E5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           P2I6ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @AGCPMZ fields to subfile
      *================================================================
     C                     Z-ADDAGAIC3    #1AIC3           Company Number
     C                     MOVELAGAJCD    #1AJCD           Warehouse Code
     C                     Z-ADDAGUIDT    #1UIDT           LPT Load Plan D
     C                     Z-ADDAGABTH    #1ABTH           LPT Load Plan T
     C                     Z-ADDAGACTH    #1ACTH           LPT On Yard Tim
     C                     Z-ADD*ZERO     #RUTNY           Load Id 1
     C                     MOVEL*BLANK    #RNLAA           Carrier Code Us
     C                     Z-ADD*ZERO     #RUUNY           Load Id 2
     C                     MOVEL*BLANK    #RNMAA           Carrier Code Us
     C                     Z-ADD*ZERO     #RUVNY           Load Id 3
     C                     MOVEL*BLANK    #RNNAA           Carrier Code Us
     C                     Z-ADD*ZERO     #RUWNY           Load Id 4
     C                     MOVEL*BLANK    #RNOAA           Carrier Code Us
     C                     Z-ADD*ZERO     #RUXNY           Load Id 5
     C                     MOVEL*BLANK    #RNPAA           Carrier Code Us
     C                     Z-ADD*ZERO     #RUYNY           Load Id 6
     C                     MOVEL*BLANK    #RNQAA           Carrier Code Us
     C                     Z-ADD*ZERO     #RUZNY           Load Id 7
     C                     MOVEL*BLANK    #RNRAA           Carrier Code Us
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVEL*BLANK    #2AJCD           Warehouse Code
     C                     Z-ADD*ZERO     #2UIDT           LPT Load Plan D
      * Clear external version also
     C                     Z-ADD*ZERO     V2UIDT
     C                     MOVEL*BLANK    #COYAA           LPT Category 1
     C                     MOVEL*BLANK    #COZAA           LPT Category 2
     C                     MOVEL*BLANK    #CO0AA           LPT Category 3
     C                     MOVEL*BLANK    #CO1AA           LPT Category 4
     C                     MOVEL*BLANK    #CO2AA           LPT Category 5
     C                     MOVEL*BLANK    #CO3AA           LPT Category 6
     C                     MOVEL*BLANK    #CO4AA           LPT Category 7
     C                     Z-ADD*ZERO     #2ABTH           LPT Load Plan T
     C                     Z-ADD*ZERO     #2ACTH           LPT On Yard Tim
     C                     Z-ADD*ZERO     #CU0NY           Load Count 1 US
     C                     Z-ADD*ZERO     #CU1NY           Load Count 2 US
     C                     Z-ADD*ZERO     #CU2NY           Load Count 3 US
     C                     Z-ADD*ZERO     #CU3NY           Load Count 4 US
     C                     Z-ADD*ZERO     #CU4NY           Load Count 5 US
     C                     Z-ADD*ZERO     #CU5NY           Load Count 6 US
     C                     Z-ADD*ZERO     #CU6NY           Load Count 7 US
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert LPT Load Plan Date to display format
      * Convert date
     C           1000000   ADD  #2UIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2UIDT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * VAL Shipp/Co Whs      RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN ADBWC3    WQSA01           Shipping Compan
     C           *LIKE     DEFN ADAJCD    WQSA02           Warehouse Code
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Shipping Compan
     C                     KFLD           WQSA02           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSA01           Shipping Compan
     C                     MOVEL#2AJCD    WQSA02           Warehouse Code
      * Establish starting position
     C           KRSSA     SETLL@ADREWA                    *
     C           KRSSA     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0003           Warehouse Descr
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELADF8NA    YL0003           Warehouse Descr
     C           KRSSA     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv BLD Category Hdg  RT - Load Plan Category Codes  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AEAIC3    WQSB01           Company Number
      * Define keylist
     C           KPSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           AEURNY           LPC Display/Pri
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    WQSB01           Company Number
     C                     Z-ADD*ZERO     AEURNY           LPC Display/Pri
      * Establish starting position
     C           KPSSB     SETLL@AEREMW                    *
     C           KRSSB     READE@AEREMW                  90*
      * Data record not found
     C   90                MOVEL'USR4475' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.LPC Display/Print Seq is one
     C           AEURNY    IFEQ 1                          *IF
     C                     MOVELAEOWAA    #COYAA           LPT Category 1
     C                     ELSE
      * CASE: DB1.LPC Display/Print Seq is two
     C           AEURNY    IFEQ 2                          *IF
     C                     MOVELAEOWAA    #COZAA           LPT Category 2
     C                     ELSE
      * CASE: DB1.LPC Display/Print Seq is three
     C           AEURNY    IFEQ 3                          *IF
     C                     MOVELAEOWAA    #CO0AA           LPT Category 3
     C                     ELSE
      * CASE: DB1.LPC Display/Print Seq is four
     C           AEURNY    IFEQ 4                          *IF
     C                     MOVELAEOWAA    #CO1AA           LPT Category 4
     C                     ELSE
      * CASE: DB1.LPC Display/Print Seq is five
     C           AEURNY    IFEQ 5                          *IF
     C                     MOVELAEOWAA    #CO2AA           LPT Category 5
     C                     ELSE
      * CASE: DB1.LPC Display/Print Seq is six
     C           AEURNY    IFEQ 6                          *IF
     C                     MOVELAEOWAA    #CO3AA           LPT Category 6
     C                     ELSE
      * CASE: DB1.LPC Display/Print Seq is seven
     C           AEURNY    IFEQ 7                          *IF
     C                     MOVELAEOWAA    #CO4AA           LPT Category 7
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@AEREMW                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv BLD Load# total   RT - Load Plan Time Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSC01           Company Number
     C           *LIKE     DEFN AFAJCD    WQSC02           Warehouse Code
     C           *LIKE     DEFN AFUIDT    WQSC03           LPT Load Plan D
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           WQSC02           Warehouse Code
     C                     KFLD           WQSC03           LPT Load Plan D
      * Setup key
     C                     Z-ADD#2AIC3    WQSC01           Company Number
     C                     MOVEL#2AJCD    WQSC02           Warehouse Code
     C                     Z-ADD#2UIDT    WQSC03           LPT Load Plan D
      * Establish starting position
     C           KRSSC     SETLL@AFCPM0                    *
     C           KRSSC     READE@AFCPM0                  90*
      * Data record not found
     C   90                MOVEL'USR4477' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.LPC Category EQ PAR.LPT Category 1
     C           AFOWAA    IFEQ #COYAA                     *IF
      * CASE: DB1.LPT Load Id is GT Zero
     C           AFUSNY    IFGT *ZERO                      *IF
     C                     ADD  1         #CU0NY           Load Count 1 US
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.LPC Category EQ PAR.LPT Category 2
     C           AFOWAA    IFEQ #COZAA                     *IF
      * CASE: DB1.LPT Load Id is NE Blank
     C           AFUSNY    IFNE *ZERO                      *IF
     C                     ADD  1         #CU1NY           Load Count 2 US
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 3 EQ DB1.LPC Category
     C           #CO0AA    IFEQ AFOWAA                     *IF
      * CASE: DB1.LPT Load Id is NE Blank
     C           AFUSNY    IFNE *ZERO                      *IF
     C                     ADD  1         #CU2NY           Load Count 3 US
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 4 EQ DB1.LPC Category
     C           #CO1AA    IFEQ AFOWAA                     *IF
      * CASE: DB1.LPT Load Id is NE Blank
     C           AFUSNY    IFNE *ZERO                      *IF
     C                     ADD  1         #CU3NY           Load Count 4 US
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 5 EQ DB1.LPC Category
     C           #CO2AA    IFEQ AFOWAA                     *IF
      * CASE: DB1.LPT Load Id is NE Blank
     C           AFUSNY    IFNE *ZERO                      *IF
     C                     ADD  1         #CU4NY           Load Count 5 US
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 6 EQ DB1.LPC Category
     C           #CO3AA    IFEQ AFOWAA                     *IF
      * CASE: DB1.LPT Load Id is NE Blank
     C           AFUSNY    IFNE *ZERO                      *IF
     C                     ADD  1         #CU5NY           Load Count 6 US
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 7 EQ DB1.LPC Category
     C           #CO4AA    IFEQ AFOWAA                     *IF
      * CASE: DB1.LPT Load Id is NE Blank
     C           AFUSNY    IFNE *ZERO                      *IF
     C                     ADD  1         #CU6NY           Load Count 7 US
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSC     READE@AFCPM0                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv BLD Array f/dsp   RT - Load Plan Time Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSD01           Company Number
     C           *LIKE     DEFN AFAJCD    WQSD02           Warehouse Code
     C           *LIKE     DEFN AFUIDT    WQSD03           LPT Load Plan D
     C           *LIKE     DEFN AFABTH    WQSD04           LPT Load Plan T
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Warehouse Code
     C                     KFLD           WQSD03           LPT Load Plan D
     C                     KFLD           WQSD04           LPT Load Plan T
      * Setup key
     C                     Z-ADD#1AIC3    WQSD01           Company Number
     C                     MOVEL#1AJCD    WQSD02           Warehouse Code
     C                     Z-ADD#1UIDT    WQSD03           LPT Load Plan D
     C                     Z-ADD#1ABTH    WQSD04           LPT Load Plan T
      * Establish starting position
     C           KRSSD     SETLL@AFCPM0                    *
     C           KRSSD     READE@AFCPM0                  90*
      * Data record not found
     C   90                MOVEL'USR4477' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.LPC Category EQ PAR.LPT Category 1
     C           AFOWAA    IFEQ #COYAA                     *IF
     C                     Z-ADDAFUSNY    #RUTNY           Load Id 1
      * CASE: PAR.Load Id 1 is NE Blank
     C           #RUTNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUTNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNLAA    P      Carrier Code
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.LPC Category EQ PAR.LPT Category 2
     C           AFOWAA    IFEQ #COZAA                     *IF
     C                     Z-ADDAFUSNY    #RUUNY           Load Id 2
      * CASE: PAR.Load Id 2 is NE Blank
     C           #RUUNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUUNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNMAA    P      Carrier Code
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 3 EQ DB1.LPC Category
     C           #CO0AA    IFEQ AFOWAA                     *IF
     C                     Z-ADDAFUSNY    #RUVNY           Load Id 3
      * CASE: PAR.Load Id 3 is NE Blank
     C           #RUVNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUVNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNNAA    P      Carrier Code
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 4 EQ DB1.LPC Category
     C           #CO1AA    IFEQ AFOWAA                     *IF
     C                     Z-ADDAFUSNY    #RUWNY           Load Id 4
      * CASE: PAR.Load Id 4 is NE Blank
     C           #RUWNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUWNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNOAA    P      Carrier Code
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 5 EQ DB1.LPC Category
     C           #CO2AA    IFEQ AFOWAA                     *IF
     C                     Z-ADDAFUSNY    #RUXNY           Load Id 5
      * CASE: PAR.Load Id 5 is NE Blank
     C           #RUXNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUXNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNPAA    P      Carrier Code
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 6 EQ DB1.LPC Category
     C           #CO3AA    IFEQ AFOWAA                     *IF
     C                     Z-ADDAFUSNY    #RUYNY           Load Id 6
      * CASE: PAR.Load Id 6 is NE Blank
     C           #RUYNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUYNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNQAA    P      Carrier Code
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.LPT Category 7 EQ DB1.LPC Category
     C           #CO4AA    IFEQ AFOWAA                     *IF
     C                     Z-ADDAFUSNY    #RUZNY           Load Id 7
      * CASE: PAR.Load Id 7 is NE Blank
     C           #RUZNY    IFNE *ZERO                      *IF
      * RTV Carrier Code       RT - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#RUZNY    WL0001           Load ID
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #RNRAA    P      Carrier Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@AFCPM0                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Carrier Code       RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADDWL0001    FJRMNB           Load ID
      * Establish starting position
     C           KRSSE     CHAIN@FJCPBN              90    *
      * Data record not found
     C   90                MOVEL'USR1188' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFJBZNA    WL0002           Carrier Code
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV LoadSts/Carrier    RT - Load Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           FJRMNB           Load ID
      * Setup key
     C                     Z-ADDWL0003    FJRMNB           Load ID
      * Establish starting position
     C           KRSSF     CHAIN@FJCPBN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1188' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0004           Load Status
     C                     MOVEL*BLANK    WL0005           Carrier Code
     C                     MOVEL*BLANK    WL0006           Export Status
     C                     MOVEL*BLANK    WL0007           Load Acceptance
     C                     Z-ADD*ZERO     WL0008           Deadline Depart
     C                     Z-ADD*ZERO     WL0009           Deadline Depart
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL@CN,003   W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELFJPKST    WL0004           Load Status
     C                     MOVELFJBZNA    WL0005           Carrier Code
     C                     MOVELFJU2ST    WL0006           Export Status
     C                     MOVELFJRMST    WL0007           Load Acceptance
     C                     Z-ADDFJKZDT    WL0008           Deadline Depart
     C                     Z-ADDFJAXTM    WL0009           Deadline Depart
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Chg Load Id       RT - Load Plan Time Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAAJCD           Warehouse Code
     C                     KFLD           WAUIDT           LPT Load Plan D
     C                     KFLD           WAOWAA           LPC Category
     C                     KFLD           WAABTH           LPT Load Plan T
      * Setup key
     C                     Z-ADDWL0010    WAAIC3           Company Number
     C                     MOVELWL0011    WAAJCD           Warehouse Code
     C                     Z-ADDWL0012    WAUIDT           LPT Load Plan D
     C                     MOVELWL0013    WAOWAA           LPC Category
     C                     Z-ADDWL0014    WAABTH           LPT Load Plan T
      * Establish starting position
     C           KRSSG     CHAIN@AFCPMV              90    *
      * Data record not found
     C   90                MOVEL'USR4477' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: PAR.LPT Load Id NE DB1.LPT Load Id
     C           WL0015    IFNE WAUSNY                     *IF
      * Undo orig load in this time slot if there was one
      * CASE: DB1.LPT Load Id is NE Blank
     C           WAUSNY    IFNE *ZERO                      *IF
      * CHG Load Plan DtTm    CH - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAUSNY    WL0016           Load ID
     C                     Z-ADD*ZERO     WL0017           LPT Load Plan S
     C                     Z-ADD*ZERO     WL0018           LPT Load Plan S
     C                     EXSR SHCHRC
     C                     END                             *FI
      * ***
      * Chg Load Plan Tm Sch  CH - Load Plan Time Schedule  * 
     C                     EXSR SICHRC
      * ***
      * Upd New Load Id with time slot
      * CASE: PAR.LPT Load Id is NE Blank
     C           WL0015    IFNE *ZERO                      *IF
     C           WL0014    MULT 100       YL0015           LPT Load Plan S
      * CHG Load Plan DtTm    CH - Load Header  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0015    WL0016           Load ID
     C                     Z-ADDWL0012    WL0017           LPT Load Plan S
     C                     Z-ADDYL0015    WL0018           LPT Load Plan S
     C                     EXSR SHCHRC
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * CHG Load Plan DtTm    CH - Load Header  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  30       Company Number
     C                     Z-ADD*ZERO     WN0002  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0003  1        LTL Flag
     C                     MOVEL*BLANK    WN0004  1        Load Status
     C                     Z-ADD*ZERO     WN0005  52       Reefer Temperat
     C                     MOVEL*BLANK    WN0006 15        Seal 1
     C                     MOVEL*BLANK    WN0007 15        Seal 2
     C                     MOVEL*BLANK    WN0008 15        Seal 3
     C                     MOVEL*BLANK    WN0009 15        Seal 1 Unused
     C                     MOVEL*BLANK    WN0010 15        Seal 2 Unused
     C                     Z-ADD*ZERO     WN0011  70       Total Load Orde
     C                     Z-ADD*ZERO     WN0012 112       Flat Amount
     C                     MOVEL*BLANK    WN0013  1        Allocate Pounds
     C                     Z-ADD*ZERO     WN0014  50       Total Stops
     C                     MOVEL*BLANK    WN0015 20        Trailer Id
     C                     MOVEL*BLANK    WN0016  3        Transloader Car
     C                     Z-ADD*ZERO     WN0017  40       BOL Time
     C                     MOVEL*BLANK    WN0018  3        Carrier Code
     C                     MOVEL*BLANK    WN0019  7        Truck Size
     C                     Z-ADD*ZERO     WN0020  70       Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WN0021 112       Rated Freight
     C                     MOVEL*BLANK    WN0022  1        Ship Status
     C                     MOVEL*BLANK    WN0023  1        Load Type
     C                     Z-ADD*ZERO     WN0024  50       Number Pallets
     C                     Z-ADD*ZERO     WN0025  50       Number Pallets
     C                     Z-ADD*ZERO     WN0026 112       Load Carrier Pa
     C                     Z-ADD*ZERO     WN0027  60       Estimated Arriv
     C                     Z-ADD*ZERO     WN0028  70       Actual Arrival
     C                     Z-ADD*ZERO     WN0029  40       Actual Arrival
     C                     Z-ADD*ZERO     WN0030 112       Trailer IN Weig
     C                     Z-ADD*ZERO     WN0031 112       Trailer OUT Wei
     C                     Z-ADD*ZERO     WN0032  70       Actual Departur
     C                     Z-ADD*ZERO     WN0033  40       Departure Time
     C                     Z-ADD*ZERO     WN0034  50       Schedule Sequen
     C                     Z-ADD*ZERO     WN0035  52       Product Tempera
     C                     Z-ADD*ZERO     WN0036  50       Number Pallets
     C                     MOVEL*BLANK    WN0037 12        Car/Veh. Initia
     C                     Z-ADD*ZERO     WN0038  70       Total Load Mile
     C                     MOVEL*BLANK    WN0039 12        Recorder ID
     C                     MOVEL*BLANK    WN0040  2        Shipping Method
     C                     MOVEL*BLANK    WN0041  3        Ship From Wareh
     C                     MOVEL*BLANK    WN0042  2        Ship To State C
     C                     Z-ADD*ZERO     WN0043  70       Gross Weight
     C                     MOVEL*BLANK    WN0044  3        Carrier Broker
     C                     MOVEL*BLANK    WN0045  1        Export Status
     C                     Z-ADD*ZERO     WN0046  70       Actual Ship Dat
     C                     MOVEL*BLANK    WN0047  1        On Time - (Y/N)
     C                     Z-ADD*ZERO     WN0048  70       Truck Ready Dat
     C                     Z-ADD*ZERO     WN0049  60       Truck Ready Tim
     C                     Z-ADD*ZERO     WN0050  70       Spotted Date
     C                     Z-ADD*ZERO     WN0051  60       Spotted Time
     C                     Z-ADD*ZERO     WN0052  70       Load Finished D
     C                     Z-ADD*ZERO     WN0053  60       Load Finished T
     C                     Z-ADD*ZERO     WN0054  70       BOL Complete Da
     C                     Z-ADD*ZERO     WN0055  60       BOL Complete Ti
     C                     Z-ADD*ZERO     WN0056  70       BOL Received Da
     C                     Z-ADD*ZERO     WN0057  60       BOL Received Ti
     C                     Z-ADD*ZERO     WN0058  70       Truck Departure
     C                     Z-ADD*ZERO     WN0059  60       Truck Departure
     C                     Z-ADD*ZERO     WN0060  70       Adjusted Depart
     C                     Z-ADD*ZERO     WN0061  60       Adjusted Depart
     C                     MOVEL*BLANK    WN0062  3        Shipping Line
     C                     MOVEL*BLANK    WN0063 20        Port Delv Termi
     C                     MOVEL*BLANK    WN0064 30        Vessel Name
     C                     Z-ADD*ZERO     WN0065  50       Voyage
     C                     Z-ADD*ZERO     WN0066  70       Sail Date
     C                     MOVEL*BLANK    WN0067 12        Booking Number
     C                     MOVEL*BLANK    WN0068 20        Discharge Port
     C                     Z-ADD*ZERO     WN0069  70       Arrival Date
     C                     MOVEL*BLANK    WN0070 12        Container Numbe
     C                     Z-ADD*ZERO     WN0071  70       Date In
     C                     Z-ADD*ZERO     WN0072  60       Time In
     C                     Z-ADD*ZERO     WN0073  70       Date Out
     C                     Z-ADD*ZERO     WN0074  60       Time Out
     C                     Z-ADD*ZERO     WN0075 112       Load Total Frei
     C                     Z-ADD*ZERO     WN0076  70       Scheduled Deliv
     C                     Z-ADD*ZERO     WN0077  60       Scheduled Deliv
     C                     MOVEL*BLANK    WN0078  1        LH Unused Sts
     C                     MOVEL*BLANK    WN0079  1        LH Carrier Paym
     C                     Z-ADD*ZERO     WN0080  70       Bring Back Mile
     C                     Z-ADD*ZERO     WN0081  70       Requested Deliv
     C                     MOVEL*BLANK    WN0082  1        Load Acceptance
     C                     MOVEL*BLANK    WN0083  3        Warehouse Code
     C                     Z-ADD*ZERO     WN0084  70       On Yard Date
     C                     Z-ADD*ZERO     WN0085  60       On Yard Time
     C                     Z-ADD*ZERO     WN0086  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0087  60       Deadline Depart
     C                     MOVEL*BLANK    WN0088  1        Load Held Over
     C                     MOVEL*BLANK    WN0089  1        Load Held Over
     C                     MOVEL*BLANK    WN0090 15        Load Held Over
     C                     MOVEL*BLANK    WN0091 25        Ocean BOL Numbe
     C                     MOVEL*BLANK    WN0092 20        Express Mail Nu
     C                     Z-ADD*ZERO     WN0093  70       Express Mail Da
     C                     MOVEL*BLANK    WN0094  1        Load Shag Flag
     C                     MOVEL*BLANK    WN0095  1        Load Wash Flag
     C                     Z-ADD*ZERO     WN0096  70       Product Complet
     C                     Z-ADD*ZERO     WN0097  60       Product Complet
     C                     Z-ADD*ZERO     WN0098  50       Pallets Loaded
     C                     Z-ADD*ZERO     WN0099  92       Avg Pallet Tare
     C                     Z-ADD*ZERO     WN0100  92       Tot Pallet Tare
     C                     MOVEL*BLANK    WN0101  1        Load Confirmed
     C                     MOVEL*BLANK    WN0102 25        Load Confirmed
     C                     Z-ADD*ZERO     WN0103  70       Load Confirmati
     C                     Z-ADD*ZERO     WN0104  60       Load Door 1
     C                     Z-ADD*ZERO     WN0105  70       Override Total
     C                     Z-ADD*ZERO     WN0106  60       Load Door 2
     C                     MOVEL*BLANK    WN0107  1        Partial Load
     C                     MOVEL*BLANK    WN0108  1        Load Confirmati
     C                     MOVEL*BLANK    WN0109  1        Export Load USD
     C                     MOVEL*BLANK    WN0110  1        Late Delivery E
     C                     Z-ADD*ZERO     WN0111 112       Load Actual Fre
     C                     MOVEL*BLANK    WN0112 15        Hide on WW Load
     C                     MOVEL*BLANK    WN0113 15        Late Billing Em
     C                     MOVEL*BLANK    WN0114 25        Shipping Temp C
     C                     MOVEL*BLANK    WN0115 25        LH Held Over Rs
     C                     MOVEL*BLANK    WN0116  1        Multi Company L
     C                     MOVEL*BLANK    WN0117  1        Fax Sent to SSI
     C                     MOVEL*BLANK    WN0118  1        Schedule Pos Lo
     C                     MOVEL*BLANK    WN0119  1        LH Power Only L
     C                     MOVEL*BLANK    WN0120  1        LH Unused Sts 4
     C                     MOVEL*BLANK    WN0121  1        LH Unused Sts 5
     C                     MOVEL*BLANK    WN0122  2        Load U/M
     C                     MOVEL*BLANK    WN0123  2        LH Unused Sts 7
     C                     MOVEL*BLANK    WN0124  2        LH Unused Sts 8
     C                     MOVEL*BLANK    WN0125  3        LH On-Time Reas
     C                     MOVEL*BLANK    WN0126  3        LH Held Over Re
     C                     Z-ADD*ZERO     WN0127  70       LH Carrier Paid
     C                     Z-ADD*ZERO     WN0128  60       LH Carrier Paid
     C                     Z-ADD*ZERO     WN0129  70       LH Last Combo P
     C                     Z-ADD*ZERO     WN0130  60       LH Last Combo P
     C                     Z-ADD*ZERO     WN0131  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0132  60       LH Unused Time
     C                     Z-ADD*ZERO     WN0133  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0134  60       LH Unused Time
     C                     Z-ADD*ZERO     WN0135  70       LH Unused Date
     C                     Z-ADD*ZERO     WN0136  60       LH Unused Time
     C                     MOVEL*BLANK    WN0137  1        EDI Status 1
     C                     MOVEL*BLANK    WN0138  1        EDI Status 2
     C                     MOVEL*BLANK    WN0139  1        EDI Status 3
     C                     Z-ADD*ZERO     WN0140  60       Job Time
     C                     MOVEL*BLANK    WN0141 10        User Id
     C                     MOVEL*BLANK    WN0142 10        Job Name
     C                     Z-ADD*ZERO     WN0143  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @FJCPBO
     C                     Z-ADDWL0016    WBRMNB           Load ID
      *
     C           KLCHSH    KLIST
     C                     KFLD           WBRMNB           Load ID
     C           KLCHSH    CHAIN@FJCPBO              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'OMFJCPL1'MDACP
     C                     MOVEL'@FJCPBO' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QOMFJ1    YARDCS
      * Move non-key fields to @FJCPBO
     C                     Z-ADDWL0017    WBP0DT           LPT Load Plan S
     C                     Z-ADDWL0018    WBCMTM           LPT Load Plan S
      *
      * Set PGM.*Record Data Changed flag
     C           QOMFJ1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WBAATM           Job Time
     C                     MOVEL##USR     WBAYNA           User Id
     C                     MOVEL##JOB     WBA0NA           Job Name
     C                     Z-ADD##JDT     WBAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QOMFJ1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@FJCPBO                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKOMFJCPL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SICHRC    BEGSR
      *================================================================
      * Chg Load Plan Tm Sch  CH - Load Plan Time Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @AFCPMU
     C                     Z-ADDWAAIC3    WCAIC3           Company Number
     C                     MOVELWAAJCD    WCAJCD    P      Warehouse Code
     C                     Z-ADDWAUIDT    WCUIDT           LPT Load Plan D
     C                     MOVELWAOWAA    WCOWAA    P      LPC Category
     C                     Z-ADDWAABTH    WCABTH           LPT Load Plan T
      *
     C           KLCHSI    KLIST
     C                     KFLD           WCAIC3           Company Number
     C                     KFLD           WCAJCD           Warehouse Code
     C                     KFLD           WCUIDT           LPT Load Plan D
     C                     KFLD           WCOWAA           LPC Category
     C                     KFLD           WCABTH           LPT Load Plan T
     C           KLCHSI    CHAIN@AFCPMU              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PBAFCPL0'MDACP
     C                     MOVEL'@AFCPMU' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SIEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPBAF1    YBRDCS
      * Move non-key fields to @AFCPMU
     C                     Z-ADDWAACTH    WCACTH           LPT On Yard Tim
     C                     Z-ADDWL0015    WCUSNY           LPT Load Id
     C                     MOVELWAN0ST    WCN0ST    P      LPT Unused Sts
     C                     MOVELWAYOT1    WCYOT1    P      LPT Unused Text
     C                     MOVELWAVSST    WCVSST    P      Record Status
     C                     Z-ADDWAMJDT    WCMJDT           Create Date
     C                     Z-ADDWABETM    WCBETM           Create Time
     C                     MOVELWACCVN    WCCCVN    P      Create User
     C                     MOVELWACDVN    WCCDVN    P      Create Program
     C                     Z-ADDWAMKDT    WCMKDT           Change Date
     C                     Z-ADDWABFTM    WCBFTM           Change Time
     C                     MOVELWACEVN    WCCEVN    P      Change User
     C                     MOVELWACFVN    WCCFVN    P      Change Program
      *
      * Set PGM.*Record Data Changed flag
     C           QPBAF1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Chg Date/Time      IF
     C                     Z-ADD##JDT     WCMKDT           Change Date
     C                     Z-ADD##JTM     WCBFTM           Change Time
     C                     MOVEL##USR     WCCEVN           Change User
     C                     MOVEL##PGM     WCCFVN           Change Program
      * Set PGM.*Record Data Changed flag
     C           QPBAF1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@AFCPMU                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPBAFCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0144    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSJ     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0016           Company Number
     C                     MOVELDRBUVN    WN0145           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0019    DTAJVN           User Profile Na
     C                     MOVELWL0020    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSK     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0021           Company Number
     C                     MOVELDTAJCD    WL0022           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSL01           Application Cod
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSL01           Application Cod
     C                     MOVEL'OMS'     WQSL01           Application Cod
      * Establish starting position
     C           KRSSL     SETLL@DNRESF                    *
     C           KRSSL     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SMRVGN
     C                     END                             *FI
     C           KRSSL     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSM01           Application Cod
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WQSM01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSM01           Application Cod
      * Establish starting position
     C           KRSSM     SETLL@DNRESF                    *
     C           KRSSM     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSM     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           KMAIC3           Company Number
     C                     KFLD           KMV8CD           Company Value C
      * Setup key
     C                     Z-ADDYL0001    KMAIC3           Company Number
     C                     MOVEL@CN,007   KMV8CD           Company Value C
      * Establish starting position
     C           KRSSN     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDKMM8NB    P4               System Value Nu
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         XTCEL     BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C           XTTIM     IFGE XTTIM2
     C                     Z-ADD1         XSGN    10
     C                     Z-ADDXTNN      XTNNL   30
     C                     Z-ADDXTSS      XTSSL   30
     C           XTSSL     IFLT XTSS2
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS2     XTSS
     C           XTNNL     IFLT XTNN2
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH
     C                     END
     C           XTNNL     SUB  XTNN2     XTNN
     C                     SUB  XTHH2     XTHH
     C                     ELSE
     C                     Z-ADD-1        XSGN
     C                     Z-ADDXTNN2     XTNNL
     C                     Z-ADDXTSS2     XTSSL
     C           XTSSL     IFLT XTSS
     C                     ADD  60        XTSSL
     C                     SUB  1         XTNNL
     C                     END
     C           XTSSL     SUB  XTSS      XTSS
     C           XTNNL     IFLT XTNN
     C                     ADD  60        XTNNL
     C                     SUB  1         XTHH2
     C                     END
     C           XTNNL     SUB  XTNN      XTNN
     C           XTHH2     SUB  XTHH      XTHH
     C                     END
      *================================================================
     CSR         XTCELE    ENDSR
      /EJECT
     CSR         XTCKTM    BEGSR
      *================================================================
      * Validate time format
      *================================================================
      * If time is zero, do not check
     C           XTTIM     CABEQ*ZERO     XTCKTE
     C                     MOVEL*BLANK    W0RTN   7
     C           YPMTFD    CABNE*BLANK    XTCKTE
      *
      * Check hours in range 0 to 23
      * Check minutes in range 0 to 59
      * Check seconds in range 0 to 59
     C           XTHH      IFLT *ZERO
     C           XTHH      ORGT 23
     C           XTNN      ORLT *ZERO
     C           XTNN      ORGT 59
     C           XTSS      ORLT *ZERO
     C           XTSS      ORGT 59
      * Send error message
      * Send message '*Invalid time'
     C                     MOVEL'Y2U0019' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0019' W0RTN
     C                     END
      *================================================================
     CSR         XTCKTE    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C           W0RR0     IFNE *ZERO
     C           W0RR0     IFGT ##RRMX
     C                     Z-ADD##RRMX    ##SFRC
     C                     ELSE
     C                     Z-ADDW0RR0     ##SFRC
     C                     END
     C                     END
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 02304
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  09        W0CSRR  50
     C           02304     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0RR0   40
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD9         ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     MOVEL*BLANK    P1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P1UIDT           LPT Load Plan D
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P2TAST           First Time Flag
     C                     MOVEL*BLANK    P3OYAA           LPT Category 1
     C                     Z-ADD*ZERO     P3UTNY           Load Id 1
     C                     MOVEL*BLANK    P3OZAA           LPT Category 2
     C                     Z-ADD*ZERO     P3UUNY           Load Id 2
     C                     MOVEL*BLANK    P3O0AA           LPT Category 3
     C                     Z-ADD*ZERO     P3UVNY           Load Id 3
     C                     MOVEL*BLANK    P3O1AA           LPT Category 4
     C                     Z-ADD*ZERO     P3UWNY           Load Id 4
     C                     MOVEL*BLANK    P3O2AA           LPT Category 5
     C                     Z-ADD*ZERO     P3UXNY           Load Id 5
     C                     MOVEL*BLANK    P3O3AA           LPT Category 6
     C                     Z-ADD*ZERO     P3UYNY           Load Id 6
     C                     MOVEL*BLANK    P3O4AA           LPT Category 7
     C                     Z-ADD*ZERO     P3UZNY           Load Id 7
     C                     Z-ADD*ZERO     P3U0NY           Load Count 1 US
     C                     Z-ADD*ZERO     P3U1NY           Load Count 2 US
     C                     Z-ADD*ZERO     P3U2NY           Load Count 3 US
     C                     Z-ADD*ZERO     P3U3NY           Load Count 4 US
     C                     Z-ADD*ZERO     P3U4NY           Load Count 5 US
     C                     Z-ADD*ZERO     P3U5NY           Load Count 6 US
     C                     Z-ADD*ZERO     P3U6NY           Load Count 7 US
     C                     Z-ADD*ZERO     P4               USR Hours 5.0
     C                     MOVEL*BLANK    P5E5ST           USR Output Only
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAUIDT           LPT Load Plan D
     C                     Z-ADD*ZERO     WAABTH           LPT Load Plan T
     C                     Z-ADD*ZERO     WAACTH           LPT On Yard Tim
     C                     Z-ADD*ZERO     WAUSNY           LPT Load Id
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBRMNB           Load ID
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WBRNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WBRPNB           Total Load Orde
     C                     Z-ADD*ZERO     WBFLAM           Flat Amount
     C                     Z-ADD*ZERO     WBRRNB           Total Stops
     C                     Z-ADD*ZERO     WBSBNB           BOL Time
     C                     Z-ADD*ZERO     WBSQNB           Ld Hdr/Ld Dtl U
     C                     Z-ADD*ZERO     WBR1NB           Rated Freight
     C                     Z-ADD*ZERO     WBSDNB           Number Pallets
     C                     Z-ADD*ZERO     WBPAOU           Number Pallets
     C                     Z-ADD*ZERO     WBDGWG           Load Carrier Pa
     C                     Z-ADD*ZERO     WBSXNB           Estimated Arriv
     C                     Z-ADD*ZERO     WBHADT           Actual Arrival
     C                     Z-ADD*ZERO     WBAART           Actual Arrival
     C                     Z-ADD*ZERO     WBDHWG           Trailer IN Weig
     C                     Z-ADD*ZERO     WBDIWG           Trailer OUT Wei
     C                     Z-ADD*ZERO     WBAQDT           Actual Departur
     C                     Z-ADD*ZERO     WBS6NB           Departure Time
     C                     Z-ADD*ZERO     WBT4NB           Schedule Sequen
     C                     Z-ADD*ZERO     WBPRTM           Product Tempera
     C                     Z-ADD*ZERO     WBNPSV           Number Pallets
     C                     Z-ADD*ZERO     WBTLMI           Total Load Mile
     C                     Z-ADD*ZERO     WBGRWE           Gross Weight
     C                     Z-ADD*ZERO     WBF9DT           Actual Ship Dat
     C                     Z-ADD*ZERO     WBJ4DT           Truck Ready Dat
     C                     Z-ADD*ZERO     WBTRTM           Truck Ready Tim
     C                     Z-ADD*ZERO     WBJ5DT           Spotted Date
     C                     Z-ADD*ZERO     WBSPTM           Spotted Time
     C                     Z-ADD*ZERO     WBJ6DT           Load Finished D
     C                     Z-ADD*ZERO     WBLFTM           Load Finished T
     C                     Z-ADD*ZERO     WBJ7DT           BOL Complete Da
     C                     Z-ADD*ZERO     WBBOTM           BOL Complete Ti
     C                     Z-ADD*ZERO     WBJ8DT           BOL Received Da
     C                     Z-ADD*ZERO     WBBLTM           BOL Received Ti
     C                     Z-ADD*ZERO     WBKIDT           Truck Departure
     C                     Z-ADD*ZERO     WBASTM           Truck Departure
     C                     Z-ADD*ZERO     WBKADT           Adjusted Depart
     C                     Z-ADD*ZERO     WBAJCM           Adjusted Depart
     C                     Z-ADD*ZERO     WBVOAG           Voyage
     C                     Z-ADD*ZERO     WBKBDT           Sail Date
     C                     Z-ADD*ZERO     WBEFDT           Arrival Date
     C                     Z-ADD*ZERO     WBKCDT           Date In
     C                     Z-ADD*ZERO     WBTMIN           Time In
     C                     Z-ADD*ZERO     WBKDDT           Date Out
     C                     Z-ADD*ZERO     WBVMNB           Time Out
     C                     Z-ADD*ZERO     WBOCFR           Load Total Frei
     C                     Z-ADD*ZERO     WBKJDT           Scheduled Deliv
     C                     Z-ADD*ZERO     WBATTM           Scheduled Deliv
     C                     Z-ADD*ZERO     WBBRBK           Bring Back Mile
     C                     Z-ADD*ZERO     WBEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WBKKDT           On Yard Date
     C                     Z-ADD*ZERO     WBAVTM           On Yard Time
     C                     Z-ADD*ZERO     WBKZDT           Deadline Depart
     C                     Z-ADD*ZERO     WBAXTM           Deadline Depart
     C                     Z-ADD*ZERO     WBLLDT           Express Mail Da
     C                     Z-ADD*ZERO     WBK0DT           Product Complet
     C                     Z-ADD*ZERO     WBAYTM           Product Complet
     C                     Z-ADD*ZERO     WBKNNX           Pallets Loaded
     C                     Z-ADD*ZERO     WBICWG           Avg Pallet Tare
     C                     Z-ADD*ZERO     WBIDWG           Tot Pallet Tare
     C                     Z-ADD*ZERO     WBK1DT           Load Confirmati
     C                     Z-ADD*ZERO     WBAZTM           Load Door 1
     C                     Z-ADD*ZERO     WBK2DT           Override Total
     C                     Z-ADD*ZERO     WBA0TM           Load Door 2
     C                     Z-ADD*ZERO     WBZBVA           Load Actual Fre
     C                     Z-ADD*ZERO     WBPYDT           LH Carrier Paid
     C                     Z-ADD*ZERO     WBCKTM           LH Carrier Paid
     C                     Z-ADD*ZERO     WBPZDT           LH Last Combo P
     C                     Z-ADD*ZERO     WBCLTM           LH Last Combo P
     C                     Z-ADD*ZERO     WBP0DT           LPT Load Plan S
     C                     Z-ADD*ZERO     WBCMTM           LPT Load Plan S
     C                     Z-ADD*ZERO     WBP1DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCNTM           LH Unused Time
     C                     Z-ADD*ZERO     WBP2DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCOTM           LH Unused Time
     C                     Z-ADD*ZERO     WBP3DT           LH Unused Date
     C                     Z-ADD*ZERO     WBCQTM           LH Unused Time
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Generic Heading
     C                     MOVEL*BLANK    WUNATX  8
      * Define work field Generic Heading 1
     C                     MOVEL*BLANK    WUMWTX  8
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0001  70
     C                     MOVEL*BLANK    WL0002  3
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0003  70
     C                     MOVEL*BLANK    WL0004  1
     C                     MOVEL*BLANK    WL0005  3
     C                     MOVEL*BLANK    WL0006  1
     C                     MOVEL*BLANK    WL0007  1
     C                     Z-ADD*ZERO     WL0008  70
     C                     Z-ADD*ZERO     WL0009  60
      * Define local variables for subroutine SGRVGN.
     C                     Z-ADD*ZERO     WL0010  30
     C                     MOVEL*BLANK    WL0011  3
     C                     Z-ADD*ZERO     WL0012  70
     C                     MOVEL*BLANK    WL0013 15
     C                     Z-ADD*ZERO     WL0014  40
     C                     Z-ADD*ZERO     WL0015  70
      * Define local variables for subroutine SHCHRC.
     C                     Z-ADD*ZERO     WL0016  70
     C                     Z-ADD*ZERO     WL0017  70
     C                     Z-ADD*ZERO     WL0018  60
      * Define local variables for subroutine SKRVGN.
     C                     MOVEL*BLANK    WL0019 10
     C                     MOVEL*BLANK    WL0020  6
     C                     Z-ADD*ZERO     WL0021  30
     C                     MOVEL*BLANK    WL0022  3
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0002  3
      * Define local work field Warehouse Description
     C                     MOVEL*BLANK    YL0003 30
      * Define local work field Number Value - 7
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Error Status
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Load Status
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Export Status
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Load Acceptance Flag
     C                     MOVEL*BLANK    YL0008  1
      * Define local work field Deadline Departure Date
     C                     Z-ADD*ZERO     YL0009  70
      * Define local work field Deadline Departure Time
     C                     Z-ADD*ZERO     YL0010  60
      * Define local work field Condition Desc. 1  USR
     C                     MOVEL*BLANK    YL0011 25
      * Define local work field Time Entered
     C                     Z-ADD*ZERO     YL0012  60
      * Define local work field Hour 1 USR
     C                     Z-ADD*ZERO     YL0013  20
      * Define local work field Days
     C                     Z-ADD*ZERO     YL0014  50
      * Define local work field LPT Load Plan Start Tm
     C                     Z-ADD*ZERO     YL0015  60
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0016  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0017  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD15        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0144 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0144           User Profile Na
      *
     C                     MOVEL*BLANK    WN0145 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SJRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0144    ZA0103           User Profile Na
     C                     MOVEL'OMS'     ZA0104           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL@CN,005   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0145    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0144    WL0019    P      User Profile Na
     C                     MOVEL'OMS'     WL0020    P      Application Cod
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0021    YL0001           Company Number
     C                     MOVELWL0022    YL0017    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0145    WL0019    P      User Profile Na
     C                     MOVEL'OMS'     WL0020    P      Application Cod
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0021    YL0001           Company Number
     C                     MOVELWL0022    YL0017    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0017    YL0002           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0144    ZA0105           User Profile Na
     C                     MOVEL'OMS'     ZA0106           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL@CN,005   P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0016    IFNE *ZERO                      *IF
     C                     Z-ADDYL0016    YL0001           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0017    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           YL0002    PARM *BLANK    WQ0031  3        Warehouse Code
     C                     PARM YL0016    WQ0032  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SLRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       P2TAST           First Time Flag
      * Traffic cannot change anything
     C                     MOVEL@CN,006   WUNATX           Generic Heading
     C                     MOVEL##USR     WUMWTX           Generic Heading
      * CASE: WRK.Generic Heading EQ WRK.Generic Heading 1
     C           WUNATX    IFEQ WUMWTX                     *IF
     C                     MOVEL'Y'       P5E5ST           USR Output Only
     C                     END                             *FI
      * RTV Numeric Value      RT - Company Values  * 
     C                     EXSR SNRVGN
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01045010720109901554015710158801605
01621016370165302051020580207002087
02104021210213702153021690230702314
02322023310233902348023560236502373
02382023890239802405024140242102430
** W0END
01047010740110601568015850160201619
01635016510166702055020610207202089
02106021230213902155021710231102318
02328023330234502350023620236702379
02384023950240002411024160242702432
** W0NAM
V2AIC3    #2AJCD    V2UIDT    #COYAA    #COZAA    #CO0AA    #CO1AA
#CO2AA    #CO3AA    #CO4AA    #2ABTH    #2ACTH    #CU0NY    #CU1NY
#CU2NY    #CU3NY    #CU4NY    #CU5NY    #CU6NY    #1ABTH    #1ACTH
#RUTNY    #RNLAA    #RUUNY    #RNMAA    #RUVNY    #RNNAA    #RUWNY
#RNOAA    #RUXNY    #RNPAA    #RUYNY    #RNQAA    #RUZNY    #RNRAA
** @CN
00001 Y2U0005
00002 USR0752
00003 Y2U0003
00004 1111111
00005 Y2U9999
00006 PORKTRAF
00007 LPTDDTDIFF
