      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1014
      * TITLE:       Revise Transportation Office
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/23/02
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete records in the master file.
      *
      *           This program is called from HP4014 - Work with Transportation Offices.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/12/09  LeAnne Ramsey
      *           Added additional edit to validate our new Driver/Trucker
      *           relationship.
      *
      * 03/18/09  LeAnne Ramsey
      *           Trucker Code/Name were added as output parms on the call
      *           to HP574-Select Driver. We do not use them in this program; but,
      *           they are used in the Synon Delivery Tracking program(s).
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/21/13  LeAnne Ramsey (E2831)
      *           Added MTech Reference as a parm on the calls to:
      *               HP574-Select Driver
      *               HP592-Select Load Crew
      *               HP538-Select Trucker
      *
      * 11/11/13  LeAnne Ramsey (E2831)
      *           Added for Susan Mason:
      *           Trucker MTech Reference as a parm on the calls to:
      *               HP574-Select Driver
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1014   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsl018f   if   e           k disk
      *    Farm sites
      *
      *
     Fhsp046    if   e           k disk
      *    Truckers
      *
      *
     Fhsp107    if   e           k disk
      *    Drivers
      *
      *
     Fhsl107a   if   e           k disk    rename(direc:direca)
      *    Drivers
      *
      *
     Fhsp108    if   e           k disk
      *    Load crews
      *
      *
     Fhsl108a   if   e           k disk    rename(lcrec:lcreca)
      *    Crew members
      *
      *
     Fhsp109    uf a e           k disk
      *    Transportation offices
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parm fields
      *
     D xxtocd          s                   like(totocd)
     D xxticd          s                   like(titicd)
     D xxtinm          s                   like(titinm)
     D xxtiref         s                   like(dimtechref)
     D xxlccd          s                   like(lclccd)
     D xxlcds          s                   like(lclcds)
     D xxdicd          s                   like(didicd)
     D xxdinm          s                   like(didinm)
     D xxdiref         s                   like(dimtechref)
     D xxrspcd         s                   like(d1rspcd)
     D xxrspds         s                   like(d1rspds)
     D xxaist          s                   like(toaist)
     D xxmtechref      s                   like(dimtechref)
      *
     D xxerror         s              1
     D xxtype          s             10
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear fields on display panel if creating
      *
     C                   select
     C                   when      mode = create                                WH create
     C                   move      *blank        d1tocd
     C                   move      *blank        d1tonm
     C                   move      *blank        d1outq
     C                   move      *blank        d1ticd
     C                   move      *blank        d1tinm
     C                   move      *blank        d1lccd
     C                   move      *blank        d1lcds
     C                   move      *blank        d1dicd
     C                   move      *blank        d1dinm
     C                   move      *blank        d1rspcd
     C                   move      *blank        d1rspds
     C                   move      *blank        d1aist
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   when      mode = revise or mode = delete               WH revise/delete
     C     d1tocd        chain(n)  hsp109                             92
     C                   if        *in92 = *off                                 If found
     C                   move      totonm        d1tonm
     C                   move      toticd        d1ticd
     C                   move      tolccd        d1lccd
     C                   move      todicd        d1dicd
     C                   move      tooutq        d1outq
     C                   move      torspcd       d1rspcd
     C                   move      toaist        d1aist
      *
      * Hardcode or retrieve:
      *   trucker name
      *   load crew description
      *   driver name
      *   route start point description
      *
     C                   if        d1ticd <> *blank
     C                   exsr      $tinm
     C                   endif
      *
     C                   if        d1lccd <> *blank
     C                   exsr      $lcds
     C                   endif
      *
     C                   if        d1dicd <> *blank
     C                   exsr      $dinm
     C                   endif
      *
     C                   if        d1rspcd <> *blank
     C                   exsr      $rspds
     C                   endif
     C                   else
      *
      * Record not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1014k1
     C                   write     hp1014ec
     C                   exfmt     hp1014r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in12 = *on                                  F12-previous
     C                   eval      rtncd = '12'
     C                   eval      routne = exit
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * If creating a new record, validate:
      *   1) transportation office code
      *
     C                   if        action = create                              If create
     C                   exsr      $tocd
     C                   endif                                                  If create
      *
      * Always validate:
      *   1) transportation office name
      *   2) output queue
      *   3) trucker
      *   4) driver
      *   5) load crew
      *   6) route start point
      *   7) status
     C                   exsr      $tonm
     C                   exsr      $outq
     C                   exsr      $ticd
     C                   exsr      $dicd
     C                   exsr      $lccd
     C                   exsr      $rspcd
     C                   exsr      $aist
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the write/update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate transportation office code
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) cannot already exist in the master file
      *
      *
     C     $tocd         begsr
      *
      * Eliminate leading spaces
      *
     C                   eval      d1tocd = %triml(d1tocd)
      *
     C                   select
     C                   when      d1tocd = *blank
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1tocd        chain(n)  hsp109                             92
     C                   if        *in92 = *off                                 If found
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01195'
     C                   clear                   mgw
     C                   movea     d1tocd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Transportation Office name
      *---------------------------------------------------------------
      *
     C     $tonm         begsr
      *
     C                   if        d1tonm = *blank
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Trucker
      *---------------------------------------------------------------
      *
     C     $ticd         begsr
      *
     C                   move      *blank        d1tinm
      *
     C                   select
     C                   when      d1ticd = *blank
     C                   other
      *
     C     d1ticd        chain     hsp046                             92
     C                   if        *in92 = *off                                 If found
     C                   move      titinm        d1tinm
     C                   else
      *
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00235'
     C                   clear                   mgw
     C                   movea     d1ticd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Trucker Name
      *---------------------------------------------------------------
      *
     C     $tinm         begsr
      *
     C     d1ticd        chain     hsp046                             92
     C                   if        *in92 = *off                                 If found
     C                   move      titinm        d1tinm
     C                   else
     C                   movel(p)  'Unknown'     d1tinm
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Load Crew
      *---------------------------------------------------------------
      *
     C     $lccd         begsr
      *
     C                   move      *blank        d1lcds
      *
     C                   select
     C                   when      d1lccd = *blank
     C                   other
      *
     C     d1lccd        chain     hsp108                             92
     C                   if        *in92 = *off                                 If found
     C                   move      lclcds        d1lcds
     C                   else
      *
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01200'
     C                   clear                   mgw
     C                   movea     d1lccd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Load Crew Description
      *---------------------------------------------------------------
      *
     C     $lcds         begsr
      *
     C     d1lccd        chain     hsp108                             92
     C                   if        *in92 = *off                                 If found
     C                   move      lclcds        d1lcds
     C                   else
     C                   movel(p)  'Unknown'     d1lcds
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Driver
      *---------------------------------------------------------------
      *
     C     $dicd         begsr
      *
     C                   move      *blank        d1dinm
      *
     C                   select
     C                   when      d1dicd = *blank
     C                   other
      *
     C     d1dicd        chain     hsp107                             92
     C                   if        *in92 = *off                                 If found
     C                   move      didinm        d1dinm
     C                   else
      *
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01198'
     C                   clear                   mgw
     C                   movea     d1dicd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
      * If both a valid Trucker and a valid Driver were entered, check that
      * the Driver is associated with that Trucker.
      *
     C                   if        d1ticd <> *blank and d1dicd <> *blank        If mismatch
     C                             and *in33 = *off and *in39 = *off
     C                             and d1ticd <> diticd
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01234'
     C                   clear                   mgw
     C                   movea     d1dicd        mgw(1)
     C                   movea     d1ticd        mgw(6)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If mismatch
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Driver Name
      *---------------------------------------------------------------
      *
     C     $dinm         begsr
      *
     C     d1dicd        chain     hsp107                             92
     C                   if        *in92 = *off                                 If found
     C                   move      didinm        d1dinm
     C                   else
     C                   movel(p)  'Unknown'     d1dinm
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Route Start Point
      *---------------------------------------------------------------
      *
     C     $rspcd        begsr
      *
     C                   select
     C                   when      d1rspcd <> 'P' and
     C                             d1rspcd <> 'T' and
     C                             d1rspcd <> 'O'
     C                   move      *blank        d1rspds
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09206'
     C                   endif
     C                   other
      *
     C                   exsr      $rspds
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Hardcode Route Start Point
      *---------------------------------------------------------------
      *
     C     $rspds        begsr
      *
     C                   select
     C                   when      d1rspcd = 'P'
     C                   eval      d1rspds = 'Plant'
      *
     C                   when      d1rspcd = 'T'
     C                   eval      d1rspds = 'Transportation Office'
      *
     C                   when      d1rspcd = 'O'
     C                   eval      d1rspds = 'Other'
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate status
      *---------------------------------------------------------------
      *
     C     $aist         begsr
      *
     C                   select
     C                   when      d1aist = *blank
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1aist <> 'A' and d1aist <> 'I'
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09105'
     C                   endif
      *
      *
      * In Revise mode:
      * A transportation office cannot be Inactivated if it has been used in:
      *  1) driver file
      *  2) load crew file
      *  3) farm site file
      *
     C                   when      mode = revise and d1aist = 'I'
      *
     C     d1tocd        chain     hsl107a                            92
     C                   if        *in92 = *off
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01201'
     C                   endif
     C                   endif
      *
     C     d1tocd        chain     hsl108a                            92
     C                   if        *in92 = *off
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01202'
     C                   endif
     C                   endif
      *
     C     d1tocd        chain     hsl018f                            92
     C                   if        *in92 = *off
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01205'
     C                   endif
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate output queue
      *---------------------------------------------------------------
      *
     C     $outq         begsr
      *
     C                   select
     C                   when      d1outq = *blank
     C                   other
      *
     C                   call      'HPCHKOBJCL'
     C                   parm                    d1outq
     C                   parm      '*OUTQ'       xxtype
     C                   parm      *blank        xxerror
     C                   if        xxerror = 'Y'                                If invalid
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09111'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1outq        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If invalid
     C                   endsl                                                  If invalid
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      *  F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Trucker
     C                   select
     C                   when      fld = 'D1TICD'
     C                   call      'HP538'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxticd
     C                   parm      *blank        xxtinm
     C                   parm      *blank        xxmtechref
     C                   seton                                        53
     C                   if        xxticd <> *blank
     C                   move      xxticd        d1ticd
     C                   move      xxtinm        d1tinm
     C                   endif
      *
      * Driver
     C                   when      fld = 'D1DICD'
     C                   call      'HP574'
     C                   parm      'A'           xxaist
     C                   parm      *blank        xxdicd
     C                   parm      *blank        xxdinm
     C                   parm      d1tocd        xxtocd
     C                   parm      *blank        xxticd
     C                   parm      *blank        xxtinm
     C                   parm      *blank        xxtiref
     C                   parm      *blank        xxdiref
     C                   seton                                        59
     C                   if        xxdicd <> *blank
     C                   move      xxdicd        d1dicd
     C                   move      xxdinm        d1dinm
     C                   endif
      *
      * Load crew
     C                   when      fld = 'D1LCCD'
     C                   call      'HP592'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxlccd
     C                   parm      *blank        xxlcds
     C                   parm      *blank        xxmtechref
     C                   seton                                        54
     C                   if        xxlccd <> *blank
     C                   move      xxlccd        d1lccd
     C                   move      xxlcds        d1lcds
     C                   endif
      *
      * Route start point
     C                   when      fld = 'D1RSPCD'
     C                   call      'HP5028'
     C                   parm      *blank        xxrspcd
     C                   parm      *blank        xxrspds
     C                   seton                                        52
     C                   if        xxrspcd <> *blank
     C                   move      xxrspcd       d1rspcd
     C                   move      xxrspds       d1rspds
     C                   endif
      *
      * Active/inactive status
      *
     C                   when      fld = 'D1AIST'
     C                   call      'HP512'
     C                   parm      *blank        xxaist
     C                   seton                                        56
     C                   if        xxaist <> *blank
     C                   move      xxaist        d1aist
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting,
      *   perform deletion integrity checks
      *
     C                   if        action = delete                              If delete
     C                   exsr      $dltck
     C                   endif                                                  If delete
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
      *
     C     d1tocd        chain     hsp109                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   delete    torec
     C                   other
      *
      * Move DSPF fields to database file fields
      *
     C                   move      d1tocd        totocd
     C                   move      d1tonm        totonm
     C                   move      d1outq        tooutq
     C                   move      d1ticd        toticd
     C                   move      d1lccd        tolccd
     C                   move      d1dicd        todicd
     C                   move      d1rspcd       torspcd
     C                   move      d1aist        toaist
      *
     C                   if        action = create                              If create
     C                   write     torec
     C                   else
     C                   update    torec
     C                   endif                                                  If create
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   select
     C                   when      mode = create                                Wh creating
     C                   if        error = 0
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09040'
     C                   eval      routne = set1
     c                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Deletion integrity checks
      *----------------------------------------------------------------
      *
     C     $dltck        begsr
      *
      * A transportation office cannot be deleted if it has been used in:
      *  1) driver file
      *  2) crew member file
      *
     C     d1tocd        chain     hsl107a                            92
     C                   if        *in92 = *off and error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01193'
     C                   clear                   mgw
     C                   movea     d1tocd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C     d1tocd        chain     hsl108a                            92
     C                   if        *in92 = *off and error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01194'
     C                   clear                   mgw
     C                   movea     d1tocd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *   None
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    d1tocd
     C                   parm                    rtncd
      *
     C                   eval      action = mode
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
