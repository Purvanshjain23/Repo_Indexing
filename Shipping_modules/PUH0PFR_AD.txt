// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUH0PFR
// ?Date: 14.08.2025 Time: 12:06:55
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Company_Number);
PARAMETER('EXPDISTRCT');
PARAMETER(LCL.Text_USR_9);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.Count USR = CON.*ZERO
LCL.Count_USR = *ZERO;

//?JPN - print KG?
CASE;

// IF PAR.Country Code is Japan
IF PAR.Country_Code = 'JPN';

// Call program Rtv Alpha Value       XF.
CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
PARAMETER(PAR.Company_Number);
PARAMETER('MPGJPNKG');
PARAMETER(PAR.ED_Print_Kilograms);

//?JPN - print KG?
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.ED Print Kilograms = CND.No
PAR.ED_Print_Kilograms = 'N';

ENDIF;

//?R13944 DN 02/28/19-Get # of Unique Item Details.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Ext Count No Dtls Cmb2XF.
CALL PROGRAM(Ext Count No Dtls Cmb2XF) ('PULXXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(LCL.#_of_Unique_Item_Dtls_USR);

ENDIF;

//?DO2642 DN 06/30/22-Initialize.
// LCL.First Time Through USR = CND.Yes
LCL.First_Time_Through_USR = 'Y';

//?USER: Record selection processing

EXECUTE FUNCTION(Rtv Health Cert Ovrflw RT) TYPE(RTVOBJ) FILE(PDMRREP)          AC2153049;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(DB1.ED_Export_Document_Type);
PARAMETER(DB1.Country_Code);
PARAMETER(LCL.ED_Xlate_Desc_to_Country);
PARAMETER(PAR.ED_Shipping_Marks_Txt);
PARAMETER(PAR.ED_Inspector_Name);
PARAMETER(PAR.ED_Nbr_of_prods_on_1st_pg);
PARAMETER(NLL.ED_Export_Certificate_Nbr);
PARAMETER(PAR.Date_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?DO2642 DN 06/22/22-Commented Out Old & Created New Selection.
//?DO2642 DN 06/22/22-New Selection Processing from Exp Doc Order Dtl PRT.
CASE;

// IF DB1.ED Product Net Weight lbs EQ WRK.ZERO
IF DB1.ED_Product_Net_Weight_lbs = WRK.ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?DO2642 DN 06/22/22-New Selection Processing from Exp Doc Order Dtl PRT.
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DB1.ED Item Code NE LCL.ED Item Code
IF DB1.ED_Item_Code <> LCL.ED_Item_Code;

// LCL.ED Item Code = DB1.ED Item Code
LCL.ED_Item_Code = DB1.ED_Item_Code;

EXECUTE FUNCTION(Rtv Overflow          RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2205561;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(DB1.ED_Item_Code);
PARAMETER(LCL.Overflow);
{
 //?USER: Initialize routine

 // PAR.Overflow = CND.No
 PAR.Overflow = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Overflow On, Print on New Page.
CASE;

// IF LCL.Overflow is Yes
IF LCL.Overflow = 'Y';

// LCL.Flag 3 = CND.*YES
LCL.Flag_3 = *YES;

// PGM.*new page flag = CND.*Yes
PGM.*new_page_flag = 'Y';

// LCL.Print On Form = CND.Print on Form
LCL.Print_On_Form = 1;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

//?Same Item Code, Do Not Select.
// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

CASE;

IF NEW Order_Number;
CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

// CUR.ED Export Certificate Nbr = PAR.ED Export Certificate Nbr
CUR.ED_Export_Certificate_Nbr = PAR.ED_Export_Certificate_Nbr;

EXECUTE FUNCTION(Rtv Health Cert Ovrflw RT) TYPE(RTVOBJ) FILE(PDMRREP)          AC2153049;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(DB1.ED_Export_Document_Type);
PARAMETER(DB1.Country_Code);
PARAMETER(LCL.ED_Xlate_Desc_to_Country);
PARAMETER(PAR.ED_Shipping_Marks_Txt);
PARAMETER(PAR.ED_Inspector_Name);
PARAMETER(PAR.ED_Nbr_of_prods_on_1st_pg);
PARAMETER(CUR.ED_Export_Certificate_Nbr);
PARAMETER(PAR.Date_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?print 6 digits to pick up leading 0 as in cert # 021644    7/20/05
// CUR.Export Cert Nbr 6.0 = CUR.ED Export Certificate Nbr
CUR.Export_Cert_Nbr_6_0 = CUR.ED_Export_Certificate_Nbr;

//?E00198 RMC new - print MPH if they've entered it on the JPN 9290f form
CASE;

// IF PAR.Country Code is Canada
IF PAR.Country_Code = 'CAN';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Form letters      RT) TYPE(RTVOBJ) FILE(PDMRREP)           AC1900079;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(DB1.ED_Export_Document_Type);
PARAMETER(CUR.ED_USDA_Cert_Nbr_US);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?Get from company values if blank 10/18
CASE;

// IF CUR.ED USDA Cert Nbr US is not entered
IF CUR.ED_USDA_Cert_Nbr_US = *BLANK;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(CUR.Company_Number);
PARAMETER('MPGFRLTR');
PARAMETER(CUR.ED_USDA_Cert_Nbr_US);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?S312778 - Move "ED USDA Cert Nbr US" to LCL context if not blank
CASE;

// IF CUR.ED USDA Cert Nbr US is not entered
IF CUR.ED_USDA_Cert_Nbr_US = *BLANK;

// LCL.ED USDA Cert Nbr US = CND.not entered
LCL.ED_USDA_Cert_Nbr_US = *BLANK;

//?S312778 - Move "ED USDA Cert Nbr US" to LCL context if not blank
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.ED USDA Cert Nbr US = CUR.ED USDA Cert Nbr US
LCL.ED_USDA_Cert_Nbr_US = CUR.ED_USDA_Cert_Nbr_US;

ENDIF;

ENDIF;

// Print Order Number header format
PRINT Order Number header format;

ENDIF;

// SUPPRESSED PRINT ED Export Document Type header format

// SUPPRESSED PRINT Country Code header format

// SUPPRESSED PRINT ED Item Code header format

// SUPPRESSED PRINT Order Sequence Number header format

//?USER: Process after print of detail format

// Call program Ext Sum Wgt/# Pkgs Itm XF.
CALL PROGRAM(Ext Sum Wgt/# Pkgs Itm XF) ('PVKHXFR');
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.ED_Item_Code);
PARAMETER(NXT.Net_Weight_SUM);
PARAMETER(NXT.Net_Quantity_SUM);

//?USER: Print required level totals

// SUPPRESSED PRINT Order Sequence Number totals format

CASE;

IF NEW ED_Item_Code;
// LCL.Print Blank Line Usr = CND.no
LCL.Print_Blank_Line_Usr = 'N';

//?DO2642 DN 06/24/22-Get Overflow Info & Print Blank Lines.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Overflow Info     RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2206349;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.ED_Item_Code);
PARAMETER(CUR.Description_Xlate_Line_2);
PARAMETER(CUR.Overflow_Pg_Dsc_Xlate_Ln1);
PARAMETER(NLL.Overflow);
PARAMETER(NLL.EDODP_Unused_Number);
PARAMETER(LCL.Skip_Ln_Before_Xlate_Ln1);
PARAMETER(LCL.Skip_Ln_After_Xlate_Ln2);
PARAMETER(LCL.Prt_Inspector_Name_Date);
PARAMETER(NLL.Prt_Continuation_Text);
PARAMETER(NLL.#_of_Blank_Line_Item_Ln1);
PARAMETER(NLL.#_of_Blank_Line_Item_Ln2);
PARAMETER(NLL.#_of_Blank_Line_Xlate_Ln1);
PARAMETER(NLL.#_of_Blank_Line_Xlate_Ln2);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Do Not Print Translated Desc if Not Entered.
CASE;

// IF CUR.Overflow Pg Dsc Xlate Ln1 is Not Entered
IF CUR.Overflow_Pg_Dsc_Xlate_Ln1 = *BLANK;

// LCL.Prt Overflow Dsc Xlate L1 = CND.No
LCL.Prt_Overflow_Dsc_Xlate_L1 = 'N';

//?Do Not Print Translated Desc if Not Entered.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Prt Overflow Dsc Xlate L1 = CND.Yes
LCL.Prt_Overflow_Dsc_Xlate_L1 = 'Y';

ENDIF;

//?Force Print of 1 Blank Line Before Xlate Desc Line 1.
CASE;

// IF LCL.Skip Ln Before Xlate Ln1 is Yes
IF LCL.Skip_Ln_Before_Xlate_Ln1 = 'Y';

//?If true, field 'Blank 5 USR' prints a blank line.
// LCL.Prt Blank Before Xlate U = CND.Yes
LCL.Prt_Blank_Before_Xlate_U = 'Y';

//?Force Print of 1 Blank Line Before Xlate Desc Line 1.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Prt Blank Before Xlate U = CND.No
LCL.Prt_Blank_Before_Xlate_U = 'N';

ENDIF;

//?Force Print of 1 Blank Line After Xlate Desc Line 2.
CASE;

// IF LCL.Skip Ln After Xlate Ln2 is Yes
IF LCL.Skip_Ln_After_Xlate_Ln2 = 'Y';

//?If true, field 'Blank for 4           USR' prints a blank line.
// LCL.Print Blank Line Usr = CND.yes
LCL.Print_Blank_Line_Usr = 'Y';

ENDIF;

ENDIF;

//?DO2642 DN 06/30/22-Commented Out Blank Line Counters.
// CUR.ED Species = CON.PORK
CUR.ED_Species = 'PORK';

// CUR.ED Shipping Marks Txt = PAR.ED Shipping Marks Txt
CUR.ED_Shipping_Marks_Txt = PAR.ED_Shipping_Marks_Txt;

//?DO2642 DN 06/23/22-Commented Out. Export Doc Order Dtl PRT Record has it.
//?Print Kilograms.
CASE;

// IF PAR.ED Print Kilograms is Yes
IF PAR.ED_Print_Kilograms = 'Y';

// CUR.Net Weight Kilograms = CUR.Net Weight SUM * CON..45359 *Rounded
CUR.Net_Weight_Kilograms = CUR.Net_Weight_SUM * .45359 'H';

// CUR.USR UOM 2 = CON.KG
CUR.USR_UOM_2 = 'KG';

//?Print Kilograms.
// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Net Weight Kilograms = CON.*ZERO
CUR.Net_Weight_Kilograms = *ZERO;

// CUR.USR UOM 2 = CON.*BLANK
CUR.USR_UOM_2 = *BLANK;

ENDIF;

//?DO2642 DN 06/24/22-Commented Out Old Method to Prt Inspector/Get Overflow.
//?DO2642 DN 06/24/22-Print Inspector Name & Date Signed.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Prt Inspector Nm/Dte Sign = CND.No
LCL.Prt_Inspector_Nm_Dte_Sign = 'N';

//?More than 34 Detail Lines will Print Inspector Name/Date on Each Cont Page
CASE;

// IF LCL.Prt Inspector Name/Date is Yes
IF LCL.Prt_Inspector_Name_Date = 'Y';

// LCL.Prt Inspector Nm/Dte Sign = CND.Yes
LCL.Prt_Inspector_Nm_Dte_Sign = 'Y';

// CUR.ED Inspector Name = PAR.ED Inspector Name
CUR.ED_Inspector_Name = PAR.ED_Inspector_Name;

//?Check/Get Date Signed.
CASE;

// IF PAR.Date                  USR is Not Entered
IF PAR.Date_USR = *ZERO;

// Call program RTV System Date/Time   UP.
CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
PARAMETER(LCL.Date_USR);
PARAMETER(WRK.Current_System_Time);

//?Check/Get Date Signed.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Date                  USR = PAR.Date                  USR
LCL.Date_USR = PAR.Date_USR;

ENDIF;

// WRK.Date (Alpha) USR = CVTVAR(LCL.Date                  USR)
WRK.Date_Alpha_USR = CVTVAR(LCL.Date_USR);

// WRK.Month/Day Alpha MMDD = SUBSTRING(WRK.Date (Alpha) USR,CON.4,CON.4)
WRK.Month_Day_Alpha_MMDD = SUBSTRING(WRK.Date_Alpha_USR:4:4);

// WRK.Year  (Char) USR = SUBSTRING(WRK.Date (Alpha) USR,CON.2,CON.2)
WRK.Year_Char_USR = SUBSTRING(WRK.Date_Alpha_USR:2:2);

// WRK.Year Alpha (YYYY) USR = CONCAT(CON.20,WRK.Year  (Char) USR,CON.*ZERO)
WRK.Year_Alpha_YYYY_USR = '20' + WRK.Year_Char_USR (*ZERO);

// WRK.Date (Char-8) USR = CONCAT(WRK.Month/Day Alpha MMDD,WRK.Year Alpha (YYYY) USR,CON.*ZERO)
WRK.Date_Char_8_USR = WRK.Month_Day_Alpha_MMDD + WRK.Year_Alpha_YYYY_USR (*ZERO);

// CUR.Date 8.0 USR = CVTVAR(WRK.Date (Char-8) USR)
CUR.Date_8_0_USR = CVTVAR(WRK.Date_Char_8_USR);

ENDIF;

ENDIF;

//?DO2642 DN 07/07/22-Commented Out & Move to Record Selection.
//?DO2642 DN 06/27/22-Update Item Printed Flag.
EXECUTE FUNCTION(Upd Item Printed      RT) TYPE(RTVOBJ) FILE(PUCFCPP)           AC2205562;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.ED_Export_Document_Type);
PARAMETER(CUR.Country_Code);
PARAMETER(CUR.ED_Item_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg Doc Ord Dtl PRT   CH) TYPE(CHGOBJ) FILE(PUCFCPP)           AC2204918;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Description_Xlate_Line_1);
 PARAMETER(DB1.Description_Xlate_Line_2);
 PARAMETER(DB1.Overflow_Pg_Dsc_Xlate_Ln1);
 PARAMETER(DB1.Overflow);
 PARAMETER(DB1.EDODP_Unused_Number);
 PARAMETER(DB1.Skip_Ln_Before_Xlate_Ln1);
 PARAMETER(DB1.Skip_Ln_After_Xlate_Ln2);
 PARAMETER(DB1.Prt_Inspector_Name_Date);
 PARAMETER('Y');
 PARAMETER(DB1.Prt_Continuation_Text);
 PARAMETER(DB1.#_of_Blank_Line_Item_Ln1);
 PARAMETER(DB1.#_of_Blank_Line_Item_Ln2);
 PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln1);
 PARAMETER(DB1.#_of_Blank_Line_Xlate_Ln2);
 PARAMETER(DB1.EDODP_Unused_Sts_2);
 PARAMETER(DB1.EDODP_Unused_Sts_3);
 PARAMETER(DB1.EDODP_Unused_Nbr_1);
 PARAMETER(DB1.EDODP_Unused_Dte_1);
 PARAMETER(DB1.EDODP_Unused_Txt_1);
 PARAMETER(DB1.EDODP_Unused_Txt_2);
}


// LCL.First Time Through USR = CND.No
LCL.First_Time_Through_USR = 'N';

// Print ED Item Code totals format
PRINT ED Item Code totals format;

ENDIF;

// SUPPRESSED PRINT Country Code totals format

// SUPPRESSED PRINT ED Export Document Type totals format

CASE;

IF NEW Order_Number;
// CUR.ED Inspector Name = PAR.ED Inspector Name
CUR.ED_Inspector_Name = PAR.ED_Inspector_Name;

CASE;

// IF PAR.Date                  USR is Not Entered
IF PAR.Date_USR = *ZERO;

// Call program RTV System Date/Time   UP.
CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
PARAMETER(LCL.Date_USR);
PARAMETER(WRK.Current_System_Time);

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Date                  USR = PAR.Date                  USR
LCL.Date_USR = PAR.Date_USR;

ENDIF;

// WRK.Date (Alpha) USR = CVTVAR(LCL.Date                  USR)
WRK.Date_Alpha_USR = CVTVAR(LCL.Date_USR);

// WRK.Month/Day Alpha MMDD = SUBSTRING(WRK.Date (Alpha) USR,CON.4,CON.4)
WRK.Month_Day_Alpha_MMDD = SUBSTRING(WRK.Date_Alpha_USR:4:4);

// WRK.Year  (Char) USR = SUBSTRING(WRK.Date (Alpha) USR,CON.2,CON.2)
WRK.Year_Char_USR = SUBSTRING(WRK.Date_Alpha_USR:2:2);

// WRK.Year Alpha (YYYY) USR = CONCAT(CON.20,WRK.Year  (Char) USR,CON.*ZERO)
WRK.Year_Alpha_YYYY_USR = '20' + WRK.Year_Char_USR (*ZERO);

// WRK.Date (Char-8) USR = CONCAT(WRK.Month/Day Alpha MMDD,WRK.Year Alpha (YYYY) USR,CON.*ZERO)
WRK.Date_Char_8_USR = WRK.Month_Day_Alpha_MMDD + WRK.Year_Alpha_YYYY_USR (*ZERO);

// CUR.Date 8.0 USR = CVTVAR(WRK.Date (Char-8) USR)
CUR.Date_8_0_USR = CVTVAR(WRK.Date_Char_8_USR);

// Print Order Number totals format
PRINT Order Number totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

