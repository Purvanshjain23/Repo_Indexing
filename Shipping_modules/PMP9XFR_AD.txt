// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMP9XFR
// ?Date: 14.08.2025 Time: 03:43:45
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?** Calc from Req Delv instead                         E01523 RMC 4/29/11
//?** RTV carrier appt date/time                         E00495
EXECUTE FUNCTION(Rtv 1st Ord Schd Dt/Tm RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1856911;
PARAMETER(PAR.Load_ID);
PARAMETER(1);
PARAMETER(WRK.Requested_Delivery_Date);
PARAMETER(WRK.Requested_Delivery_Time);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Req Dlv Dt/Time   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1956386;
 PARAMETER(NLL.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(NLL.Order_Type_Sales);
 PARAMETER(PAR.Requested_Delivery_Date);
 PARAMETER(PAR.Requested_Delivery_Time);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


// PAR.Deadline Depart DT    HDR = WRK.Requested Delivery Date
PAR.Deadline_Depart_DT_HDR = WRK.Requested_Delivery_Date;

// PAR.Requested Delivery Time = WRK.Requested Delivery Time
PAR.Requested_Delivery_Time = WRK.Requested_Delivery_Time;

EXECUTE FUNCTION(CLC Deadline Date/Time IF) TYPE(EXCINTFUN)                     AC1496951;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Requested_Delivery_Time);
PARAMETER(PAR.Deadline_Depart_DT_HDR);
PARAMETER(PAR.Deadline_Departure_Time);
{
 //?Execute internal function

 //?** Convert time from 4.0 to 6.0
 // PAR.Deadline Depart Time  HDR = PAR.Requested Delivery Time * CON.100 *Rounded
 PAR.Deadline_Depart_Time_HDR = PAR.Requested_Delivery_Time * 100 'H';

 EXECUTE FUNCTION(CLC Departure Date/TimeIF) TYPE(EXCINTFUN)                     AC1456426;
 PARAMETER(PAR.Load_ID);
 PARAMETER(PAR.Deadline_Depart_DT_HDR);
 PARAMETER(PAR.Deadline_Depart_Time_HDR);
 {
  //?Execute internal function

  //?***** Change Log and Comments
  DO;

  //?** The Date and Time being calculated are the latest date and time
  //?** that the truck can leave the warehouse and still make the
  //?** delivery on time.
  //?*****
  //?** E00495 LJB 09.23.2009
  //?** Carrier Appt Date and Time are in the parm Deadline Departure
  //?** date and time, if called from "UPD Ld Mi,Whse,DDD/T IF"
  //?*****
  //?** E00207 LJB 08/11/2008
  //?** Override Total Load Miles has been added to the
  //?** Retrieve Total Load Miles function
  //?*****
  //?** FP1251 LJB 12/26/2007
  //?** If no Miles To Next record, change SSD/T to zeros.
  //?** Scheduled Deliv Date has (should have) Requested Delivery Date in it
  ENDDO;

  EXECUTE FUNCTION(RTV Shipping Method    RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1572676;
  PARAMETER(PAR.Load_ID);
  PARAMETER(LCL.Shipping_Method);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF LCL.Shipping Method is Collect Truck
  IF LCL.Shipping_Method = 'CT';

  // OR LCL.Shipping Method is Collect Rail
  OR LCL.Shipping_Method = 'CR';

  //?** Treat CT & CR the same           FP1251 LJB 12/26/2007
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV 1st Stop Mileage   RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1456048;
  PARAMETER(PAR.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Miles_to_next_stop);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  //?** Calc miles between all stops then retrieve 1st stop miles
  CASE;

  // IF PAR.Miles to next stop is Not Entered
  IF PAR.Miles_to_next_stop = *ZERO;

  //?** Override miles will be returned, if entered
  // Call program CLC Total Load Miles   XF.
  CALL PROGRAM(CLC Total Load Miles   XF) ('PDW3XFR');
  PARAMETER(PAR.Load_ID);
  PARAMETER(WRK.Total_Load_Miles);
  PARAMETER(WRK.Override_Total_Load_Miles);

  EXECUTE FUNCTION(RTV 1st Stop Mileage   RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1456048;
  PARAMETER(PAR.Load_ID);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Miles_to_next_stop);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  ENDIF;

  //?** 11/16/2007 LJB FP1251 Error if no miles, set SDD/SDT to zeros
  CASE;

  // IF PAR.Miles to next stop is Not Entered
  IF PAR.Miles_to_next_stop = *ZERO;

  // PAR.Scheduled Delivery Date = CND.not entered
  PAR.Scheduled_Delivery_Date = *ZERO;

  // PAR.Scheduled Delivery Time = CND.Not Entered
  PAR.Scheduled_Delivery_Time = *ZERO;

  //?** 11/16/2007 LJB FP1251 Error if no miles, set SDD/SDT to zeros
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Hours Required = CON.*ZERO
  PAR.Hours_Required = *ZERO;

  // LCL.Hours Required = CON.*ZERO
  LCL.Hours_Required = *ZERO;

  EXECUTE FUNCTION(RTV Legal Run Miles DscRT) TYPE(RTVOBJ) FILE(PDLGCPP)          AC1456042;
  PARAMETER(PAR.Miles_to_next_stop);
  PARAMETER(LCL.Hours_Required);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  //?09/09/11 PKD E1659 Additional Route Hours
  // Call program Rtv Addtnl Route Hrs  XF.
  CALL PROGRAM(Rtv Addtnl Route Hrs  XF) ('PMACXFR');
  PARAMETER(PAR.Load_ID);
  PARAMETER(LCL.Additional_Route_Hours);

  // PAR.Hours Required = LCL.Hours Required + LCL.Additional Route Hours
  PAR.Hours_Required = LCL.Hours_Required + LCL.Additional_Route_Hours;

  //?get number of whole days + remaining hours
  CASE;

  // IF PAR.Hours Required is Zero
  IF PAR.Hours_Required = *ZERO;

  //?get number of whole days + remaining hours
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.@Days 5 = PAR.Hours Required / CON.24 *
  PAR.@Days_5 = PAR.Hours_Required / 24;

  // WRK.USR Hours 5.0 = PAR.@Days 5 * CON.24 *
  WRK.USR_Hours_5_0 = PAR.@Days_5 * 24;

  // PAR.USR Hours 5.0 = PAR.Hours Required - WRK.USR Hours 5.0
  PAR.USR_Hours_5_0 = PAR.Hours_Required - WRK.USR_Hours_5_0;

  // WRK.@Numeric 6,0 = PAR.USR Hours 5.0 * CON.10000 *
  WRK.@Numeric_60 = PAR.USR_Hours_5_0 * 10000;

  //?Subtract whole days
  CASE;

  // IF PAR.@Days 5 is greater than zero
  IF PAR.@Days_5 > *ZERO;

  // PAR.@Days 5 = PAR.@Days 5 * CON.-1 *
  PAR.@Days_5 = PAR.@Days_5 * -1;

  // PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + PAR.@Days 5 *DAYS
  PAR.Scheduled_Delivery_Date = DATEINCR(PAR.Scheduled_Delivery_Date PAR.@Days_5 'DY'
  1111111 'NONE' 'N' 1);

  ENDIF;

  //?Calculate # whole days + hours left
  CASE;

  // IF WRK.@Numeric 6,0 GE PAR.Scheduled Delivery Time
  IF WRK.@Numeric_60 >= PAR.Scheduled_Delivery_Time;

  // WRK.@Numeric 6,0 = WRK.@Numeric 6,0 - PAR.Scheduled Delivery Time
  WRK.@Numeric_60 = WRK.@Numeric_60 - PAR.Scheduled_Delivery_Time;

  // PAR.@Days 5 = CON.-1
  PAR.@Days_5 = -1;

  // PAR.Scheduled Delivery Date = PAR.Scheduled Delivery Date + PAR.@Days 5 *DAYS
  PAR.Scheduled_Delivery_Date = DATEINCR(PAR.Scheduled_Delivery_Date PAR.@Days_5 'DY'
  1111111 'NONE' 'N' 1);

  // PAR.Scheduled Delivery Time = CON.240000 - WRK.@Numeric 6,0
  PAR.Scheduled_Delivery_Time = 240000 - WRK.@Numeric_60;

  //?Calculate # whole days + hours left
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Scheduled Delivery Time = PAR.Scheduled Delivery Time - WRK.@Numeric 6,0
  PAR.Scheduled_Delivery_Time = PAR.Scheduled_Delivery_Time - WRK.@Numeric_60;

  ENDIF;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(RTV Total Ld Mi/Sts    RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1496186;
  PARAMETER(PAR.Load_ID);
  PARAMETER(WRK.TXT_field_not_needed);
  PARAMETER(WRK.Total_Load_Miles);
  PARAMETER(WRK.Override_Total_Load_Miles);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

 }

 //?** Convert time back to 6.0
 // PAR.Deadline Departure Time = PAR.Deadline Depart Time  HDR
 PAR.Deadline_Departure_Time = PAR.Deadline_Depart_Time_HDR;

 //?***** Change Log and Comments
 DO;

 //?** 08/12/2008 LJB E00207
 //?** Total Load Miles can be overriden. This will not change the
 //?** Deadline Depart date, however.
 //?*****
 //?** 11/16/2007 LJB FP1251
 //?** Date and time are set to zeros if there is no
 //?** Miles Between Cites record which means there were no
 //?** total load miles calculated.
 ENDDO;

}


// PAR.Requested Delivery Date = WRK.Requested Delivery Date
PAR.Requested_Delivery_Date = WRK.Requested_Delivery_Date;

