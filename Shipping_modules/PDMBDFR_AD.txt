// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDMBDFR
// ?Date: 14.08.2025 Time: 03:35:10
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

//?***** Change Log and Comments
DO;

//?** 11/20/2007 LJB FP1251
//?** Added "No Miles Between Cities Record" error message
ENDDO;

//?USER: Initialize subfile control

// CTL.Scheduled Ship Date = PAR.Scheduled Ship Date
CTL.Scheduled_Ship_Date = PAR.Scheduled_Ship_Date;

//?** DDD/T will be zeros if no Miles Between Cities record
EXECUTE FUNCTION(RTV Deadln DepartDT/TM RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1497302;
PARAMETER(CTL.Load_ID);
PARAMETER(CTL.Deadline_Departure_Date);
PARAMETER(CTL.Deadline_Departure_Time);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 QUIT;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?USER: Initialize subfile record from DBF record

// LCL.Must Ship Error = CND.Req Ship should =Must Shp
LCL.Must_Ship_Error = 'RSD';

EXECUTE FUNCTION(RTV All Header Fields  RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1326885;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(RCD.Ship_To_City);
PARAMETER(RCD.Ship_To_State_Code);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(RCD.Carrier_Code);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(RCD.Requested_Delivery_Date);
PARAMETER(RCD.Requested_Delivery_Time);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
PARAMETER(WRK.TXT_field_not_needed);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.Warehouse Code PASS   USR = CON.*BLANK
WRK.Warehouse_Code_PASS_USR = *BLANK;

// Call program CLC Must Ship Date     XF.
CALL PROGRAM(CLC Must Ship Date     XF) ('PDJBXFR');
PARAMETER(RCD.Must_Ship_Error);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Ship_To_City);
PARAMETER(RCD.Ship_To_State_Code);
PARAMETER(RCD.Requested_Ship_Date);
PARAMETER(CTL.Scheduled_Ship_Date);
PARAMETER(RCD.Requested_Delivery_Date);
PARAMETER(RCD.Requested_Delivery_Time);
PARAMETER(RCD.Load_ID);
PARAMETER(WRK.Warehouse_Code_PASS_USR);
PARAMETER(RCD.Must_Ship_Date_USR);
PARAMETER(RCD.Must_Ship_Time_USR);

// RCD.USR Time 4.0 = RCD.Must Ship Time        USR / CON.100 *
RCD.USR_Time_4_0 = RCD.Must_Ship_Time_USR / 100;

EXECUTE FUNCTION(PMT Must Ship Err Msg  IF) TYPE(EXCINTFUN)                     AC1521273;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Must_Ship_Error);
PARAMETER(RCD.Explaination_Text_1);
{
 //?Execute internal function

 // PAR.Explaination Text 1 = CON.*BLANK
 PAR.Explaination_Text_1 = *BLANK;

 CASE;

 // IF PAR.Must Ship Error is No Error
 IF PAR.Must_Ship_Error = *BLANK;

 // IF PAR.Must Ship Error is Must Ship before NOW
 IF PAR.Must_Ship_Error = 'NOW';

 // PAR.Explaination Text 1 = CON.Order should have already
 PAR.Explaination_Text_1 = 'Order should have already';

 // PAR.Explaination Text 1 = CONCAT(PAR.Explaination Text 1,CON. shipped,CON.*ZERO)
 PAR.Explaination_Text_1 = PAR.Explaination_Text_1 + ' shipped' (*ZERO);

 // IF PAR.Must Ship Error is Deadline not bef Delivery
 IF PAR.Must_Ship_Error = 'DDD';

 // PAR.Explaination Text 1 = CON.Deadline after Delivery
 PAR.Explaination_Text_1 = 'Deadline after Delivery';

 // IF PAR.Must Ship Error is Must Shp not bef Deadline
 IF PAR.Must_Ship_Error = 'MSD';

 // PAR.Explaination Text 1 = CON.Must Ship after Deadline
 PAR.Explaination_Text_1 = 'Must Ship after Deadline';

 // IF PAR.Must Ship Error is Schd Shp not bef Must Shp
 IF PAR.Must_Ship_Error = 'SSD';

 // PAR.Explaination Text 1 = CON.Scheduled Ship after Must
 PAR.Explaination_Text_1 = 'Scheduled Ship after Must';

 // PAR.Explaination Text 1 = CONCAT(PAR.Explaination Text 1,CON. Ship,CON.*ZERO)
 PAR.Explaination_Text_1 = PAR.Explaination_Text_1 + ' Ship' (*ZERO);

 // IF PAR.Must Ship Error is Miles to Next=Zeros
 IF PAR.Must_Ship_Error = 'MTN';

 // PAR.Explaination Text 1 = CON.No Miles Between Cities
 PAR.Explaination_Text_1 = 'No Miles Between Cities';

 // IF PAR.Must Ship Error is Req Ship should =Must Shp
 IF PAR.Must_Ship_Error = 'RSD';

 // PAR.Explaination Text 1 = CON.Requested Ship Date shoul
 PAR.Explaination_Text_1 = 'Requested Ship Date shoul';

 // PAR.Explaination Text 1 = CONCAT(PAR.Explaination Text 1,CON.d = Must Ship,CON.*ZERO)
 PAR.Explaination_Text_1 = PAR.Explaination_Text_1 + 'd = Must Ship' (*ZERO);

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?--- unexpected error ---
 // PAR.Explaination Text 1 = Condition name of PAR.Must Ship Error
 PAR.Explaination_Text_1 = RTVCND(PAR.Must_Ship_Error);

 ENDIF;

}


//?** Requested Ship should = Must Ship is not an error here.
CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// AND RCD.Must Ship Error NE LCL.Must Ship Error
AND RCD.Must_Ship_Error <> LCL.Must_Ship_Error;

// Call program CRT Load/Order Chg Log XF.
CALL PROGRAM(CRT Load/Order Chg Log XF) ('PDADXFR');
PARAMETER(RCD.Load_ID);
PARAMETER(RCD.Stop_Drop);
PARAMETER('DEADLN');
PARAMETER('TRF');
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(RCD.Carrier_Code);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);

ENDIF;

