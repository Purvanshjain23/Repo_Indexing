// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POVAXFR
// ?Date: 14.08.2025 Time: 03:39:08
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Yld Transaction Comment = CON.*BLANK
PAR.Yld_Transaction_Comment = *BLANK;

// PAR.Yld Transaction Source = CND.System
PAR.Yld_Transaction_Source = 'S';

// PAR.Transaction Time = JOB.*Job time
PAR.Transaction_Time = JOB.*Job_time;

EXECUTE FUNCTION(Rtv Item Typ/Grp/Cls  RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1298334;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Item_Structure_Class_Code);
PARAMETER(PAR.Item_Structure_Group_Code);
PARAMETER(PAR.Item_Structure_Type_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Dept/Line         RT) TYPE(RTVOBJ) FILE(POCNREP)           AC1664090;
PARAMETER(PAR.Item_Structure_Type_Code);
PARAMETER(PAR.Item_Structure_Group_Code);
PARAMETER(PAR.Item_Structure_Class_Code);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Line_Code);
PARAMETER(NLL.WIP_Usage_Dept_Code);
PARAMETER(NLL.WIP_Usage_Prod_Line_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Next Sequence #   RT) TYPE(RTVOBJ) FILE(POCQCPP)           AC1664089;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Line_Code);
PARAMETER(PAR.Transaction_Date_Code);
PARAMETER(PAR.Transaction_Time);
PARAMETER(PAR.Partial_Item_Code);
PARAMETER(PAR.Yld_Transaction_Seq);
{
 //?USER: Processing if Data record not found

 // PAR.Yld Transaction Seq = CON.1
 PAR.Yld_Transaction_Seq = 1;

 //?USER: Process Data record

 // PAR.Yld Transaction Seq = DB1.Yld Transaction Seq + CON.1
 PAR.Yld_Transaction_Seq = DB1.Yld_Transaction_Seq + 1;

 QUIT;

}


// LCL.Production Shift = PAR.Production Shift
LCL.Production_Shift = PAR.Production_Shift;

CASE;

// IF PAR.Transaction Time is Midnight to 6:00am
IF PAR.Transaction_Time >= 000000;
AND PAR.Transaction_Time <= 060000;

// LCL.Production Shift = CND.Shift 2
LCL.Production_Shift = 2;

ENDIF;

EXECUTE FUNCTION(Crt Yield Partial Trn CR) TYPE(CRTOBJ) FILE(POCQCPP)           AC1664052;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Department_Code);
PARAMETER(PAR.Production_Line_Code);
PARAMETER(PAR.Transaction_Date_Code);
PARAMETER(PAR.Transaction_Time);
PARAMETER(PAR.Partial_Item_Code);
PARAMETER(PAR.Yld_Transaction_Seq);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(LCL.Production_Shift);
PARAMETER(PAR.Yld_Transaction_Quantity);
PARAMETER(PAR.Yld_Transaction_Weight);
PARAMETER(PAR.Yld_Transaction_Comment);
PARAMETER(PAR.Yld_Transaction_Source);
PARAMETER(PAR.Yld_Inv_Balance_Type);
PARAMETER(PAR.Item_Structure_Type_Code);
PARAMETER(PAR.Item_Structure_Group_Code);
PARAMETER(PAR.Item_Structure_Class_Code);
PARAMETER(PAR.EDI_Status_1);
PARAMETER(PAR.EDI_Status_2);
PARAMETER(PAR.EDI_Status_3);
PARAMETER(PAR.Record_Status);
PARAMETER(PAR.Job_Time);
PARAMETER(PAR.User_Id);
PARAMETER(PAR.Job_Name);
PARAMETER(PAR.Job_Date);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


