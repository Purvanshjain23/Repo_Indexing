// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPF3XFR
// ?Date: 14.08.2025 Time: 03:40:21
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?E4119  08/24/16 RMC TMS -  DONT DO 1ST. DONT NEED IT, AND DONT WANT
//?   DONT WANT TMS ORDER TRIGGER FOR THAT CO/ORDER
//?E2542  C4/18/13 RMC OHE PMAMREP to transfer process
EXECUTE FUNCTION(RTV Ship to, Country  RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1705588;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(0);
PARAMETER(0);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Country_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(RTV Load ID            RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1384375;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Load_ID);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Upd Co/Whse Dealc Ord RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1705584;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Initialize routine

 //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
 //?USER: Process Data record

 // PAR.Quantity Scheduled = DB1.Quantity Scheduled
 PAR.Quantity_Scheduled = DB1.Quantity_Scheduled;

 // PAR.Weight Scheduled = DB1.Weight Scheduled
 PAR.Weight_Scheduled = DB1.Weight_Scheduled;

 // Call program UPD Avail-To-Sell  ORD XF.
 CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 PARAMETER('OD');
 PARAMETER('TRANSCO');
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);

 EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


//?Transfer an order to another co/whse. Can be done before its on a load.
EXECUTE FUNCTION(RTV Transfer Order    RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1702922;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.USR_Hold_Company_Number);
PARAMETER(PAR.Transfer_Warehouse_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr  RT) TYPE(RTVOBJ) FILE(OPCOCPP)          AC1702923;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CRT OP Order Com  PRG  CR) TYPE(CRTOBJ) FILE(OPCOCPP)          AC1595061;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Comment_Type);
  PARAMETER(DB1.Sequence_Number);
  PARAMETER(DB1.Comment_Text);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing before Data update

   //?** Do not change the dates when purging       C001078
  }

  EXECUTE FUNCTION(DLT OP Order Comment   DL) TYPE(DLTOBJ) FILE(OPCOCPP)          AC1127678;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Comment_Type);
  PARAMETER(DB1.Sequence_Number);
 }

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr RT) TYPE(RTVOBJ) FILE(OPEYCPP)           AC1702924;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CRT OP Order Event PRG CR) TYPE(CRTOBJ) FILE(OPEYCPP)          AC1595065;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Event_Number);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Invoice_Memo_Company);
  PARAMETER(DB1.Invoice_Memo_Number);
  PARAMETER(DB1.Invoice_Memo_Suffix);
  PARAMETER(DB1.Event_Date);
  PARAMETER(DB1.Activity_Completion);
  PARAMETER(DB1.Activity_Hold);
  PARAMETER(DB1.Post_Cash_Complete);
  PARAMETER(DB1.Cross_Event_Ref_Comp);
  PARAMETER(DB1.Cross_Event_Ref_Order);
  PARAMETER(DB1.Cross_Event_Ref_Event);
  PARAMETER(DB1.Ship_To_Customer);
  EXECUTE FUNCTION(DLT OP Order Events    DL) TYPE(DLTOBJ) FILE(OPEYCPP)          AC1170143;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Event_Number);
 }

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr RT) TYPE(RTVOBJ) FILE(PDNDCPP)           AC1702926;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CRT Ham Group/OrderPRG CR) TYPE(CRTOBJ) FILE(PDNDCPP)          AC1595069;
  PARAMETER(DB1.Ham_Group_Number);
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Ham_Group_Production_Date);
  PARAMETER(DB1.Ham_Group_Processing_Seq);
  PARAMETER(DB1.Ham_Group_Sched_Comment);
  PARAMETER(DB1.Deadline_Departure_Date);
  PARAMETER(DB1.Deadline_Departure_Time);
  EXECUTE FUNCTION(DLT Ham Group/Order    DL) TYPE(DLTOBJ) FILE(PDNDCPP)          AC1564714;
  PARAMETER(DB1.Ham_Group_Number);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
 }

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr RT) TYPE(RTVOBJ) FILE(OMCQWKP)           AC1702928;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CRT OM Order Finan PRG CR) TYPE(CRTOBJ) FILE(OMCQWKP)          AC1595082;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Sequence_Number);
  PARAMETER(DB1.Financial_Type);
  PARAMETER(DB1.Transaction_Amount);
  PARAMETER(DB1.Financial_Text);
  PARAMETER(DB1.Enterprise_Code_1);
  PARAMETER(DB1.Enterprise_Code_2);
  PARAMETER(DB1.SH_Expense_Bucket);
  PARAMETER(DB1.G_L_Sub_Account);
  PARAMETER(DB1.Financial_Charge_Status);
  PARAMETER(DB1.Special_Charge_Rate);
  PARAMETER(DB1.Accrual_Code);
  PARAMETER(DB1.GL_Document_Number);
  PARAMETER(DB1.GL_Update_Status);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  EXECUTE FUNCTION(DLT OM Order Financial DL) TYPE(DLTOBJ) FILE(OMCQWKP)          AC1202349;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Sequence_Number);
 }

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr RT) TYPE(RTVOBJ) FILE(PDIECPP)           AC1702929;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CRT PD Shipping In PRG CR) TYPE(CRTOBJ) FILE(PDIECPP)          AC1595086;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Sequence_Number);
  PARAMETER(DB1.Shipping_Instructions);
  EXECUTE FUNCTION(Rtv Chg Post Sts      RT) TYPE(DLTOBJ) FILE(PDIECPP)           AB1249412;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Sequence_Number);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.DSD HPS Post Status is Error
   IF DB1.DSD_HPS_Post_Status = 'E';

   // OR DB1.DSD HPS Post Status is Posted
   OR DB1.DSD_HPS_Post_Status = 'P';

   // LCL.DSD Movement Printed = DB1.DSD Movement Printed
   LCL.DSD_Movement_Printed = DB1.DSD_Movement_Printed;

   CASE;

   // IF DB1.DSD Movement Printed is Printed
   IF DB1.DSD_Movement_Printed = 'P';

   // LCL.DSD Movement Printed = CND.Reprint
   LCL.DSD_Movement_Printed = 'R';

   ENDIF;

   EXECUTE FUNCTION(Chg Delv Sched Dtl    CH) TYPE(CHGOBJ) FILE(PLAECPP)           AB1244728;
   PARAMETER(DB1.CC_Company_Number);
   PARAMETER(DB1.DSH_Kill_Date);
   PARAMETER(DB1.DSD_Delivery_Date);
   PARAMETER(DB1.DSD_Delivery_Time);
   PARAMETER(DB1.DSD_Delivery_Time_Seq);
   PARAMETER(DB1.DSD_Scheduled_Hour);
   PARAMETER(DB1.DSD_Farm_Site_Code);
   PARAMETER(DB1.DSD_Building);
   PARAMETER(DB1.DSD_Room);
   PARAMETER(DB1.DSD_Sire_Line_Code);
   PARAMETER(DB1.DSD_Hog_Group_Code);
   PARAMETER(DB1.DSD_Unused_Head);
   PARAMETER(DB1.DSD_Scheduled_Delv_Head);
   PARAMETER(DB1.DSD_Scheduled_Kill_Head);
   PARAMETER(DB1.DSD_Transportation_Office);
   PARAMETER(DB1.DSD_Trucker_Code_HPS);
   PARAMETER(DB1.DSD_Driver);
   PARAMETER(DB1.DSD_Loading_Crew);
   PARAMETER(DB1.CHR_Code);
   PARAMETER(DB1.DSD_Load_Type);
   PARAMETER(DB1.DSD_Full_Split_Load);
   PARAMETER(DB1.DSD_Movement_Number);
   PARAMETER(DB1.DSD_Truck_ID);
   PARAMETER(DB1.DSD_Trailer_ID);
   PARAMETER(LCL.DSD_Movement_Printed);
   PARAMETER(DB1.DSD_Sched_Route_Start_Pnt);
   PARAMETER(DB1.DSD_Sched_Route_Start_Dte);
   PARAMETER(DB1.DSD_Sched_Route_Start_Tim);
   PARAMETER(DB1.DSD_Sch_Farm_Arrival_Date);
   PARAMETER(DB1.DSD_Sch_Farm_Arrival_Time);
   PARAMETER(DB1.DSD_Sch_Start_Load_Date);
   PARAMETER(DB1.DSD_Sch_Start_Load_Time);
   PARAMETER(DB1.DSD_Receiving_Shift);
   PARAMETER(DB1.DSD_Kill_Shift);
   PARAMETER(DB1.DSD_BOL_Kill_Shift);
   PARAMETER('R');
   PARAMETER(DB1.DSD_HPE_Post_Status);
   PARAMETER(DB1.DSD_Lock_Status);
   PARAMETER(DB1.DSD_Source_Type);
   PARAMETER(DB1.DSD_Transfer_Sts);
   PARAMETER(DB1.DSD_Unused_Date);
   PARAMETER(DB1.DSD_Unused_Time);
   PARAMETER(DB1.SR_Source_Code);
   PARAMETER(DB1.PD_Producer_Code);
   PARAMETER(DB1.PL_Location_Code);
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
   PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
   PARAMETER(DB1.DSD_Ref_1);
   PARAMETER(DB1.DSD_Ref_2);
   PARAMETER(DB1.DSD_Ref_Status);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

   ENDIF;

  }

 }

 // Call program Rtv & Chg for Co Txfr XF.
 CALL PROGRAM(Rtv & Chg for Co Txfr XF) ('PPF6XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(PAR.Transfer_Warehouse_Code);

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr RT) TYPE(RTVOBJ) FILE(OPCPCPP)           AC1848247;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(PAR.Transfer_Warehouse_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CRT Ord Dtl Comm Purge CR) TYPE(CRTOBJ) FILE(OPCPCPP)          AC1842113;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Sequence_Number);
  PARAMETER(DB1.Comment_Text);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  {
   //?USER: Processing before Data update

   //?** Do not change the dates when purging       C001078
  }

  EXECUTE FUNCTION(DLT Detail Comments    RT) TYPE(RTVOBJ) FILE(OPCPCPP)          AC1131904;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Sequence_Number);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(DLT OP Detail Comment  DL) TYPE(DLTOBJ) FILE(OPCPCPP)          AC1128513;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.Order_Sequence_Number);
   PARAMETER(DB1.Order_Secondary_Line_Seq);
   PARAMETER(DB1.Sequence_Number);
  }

 }

 //?Rtv absorbed rate for new company cust        RMC 6/7/6
 //?S12522 DN 03/02/18-Get Trans Contol AS400/Plant & update OH TRG.
 EXECUTE FUNCTION(RTV Warehouse Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1304300;
 PARAMETER(PAR.Transfer_Warehouse_Code);
 PARAMETER(LCL.Trans_Contol_AS400_Plant);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?R12926 DN 05/03/18-Commented Out AFR & Moved Below.
 //?R15161 DN 09/12/19-If Co Chgs & Method='PT' use AFR from Co Cust else OH.
 CASE;

 // IF PAR.Company Number NE PAR.USR Hold Company Number
 IF PAR.Company_Number <> PAR.USR_Hold_Company_Number;

 // AND DB1.Shipping Method is Prepaid Truck
 AND DB1.Shipping_Method = 'PT';

 EXECUTE FUNCTION(RTV Abs Freight Rate   RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1391554;
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Absorbed_Freight_Rate_CWT);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?R15161 DN 09/12/19-If Co Chgs & Method='PT' use AFR from Co Cust else OH.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Absorbed Freight Rate CWT = DB1.Absorbed Freight Rate CWT
 LCL.Absorbed_Freight_Rate_CWT = DB1.Absorbed_Freight_Rate_CWT;

 ENDIF;

 EXECUTE FUNCTION(CRT Order Header       CR) TYPE(CRTOBJ) FILE(OPBFCPP)          AC1113750;
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(LCL.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 {
  //?USER: Processing before Data update

  // DB1.Age Code = CND.Blank
  DB1.Age_Code = *BLANK;

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program RTV System Date/Time   UP.
  CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Time_of_Original_Entry);

  //?USER: Processing if Data record already exists

  //?** Set flag so it can be tested on the return    T075 03/28/2006 LJB
  PGM.*Return_code = 'Y2U0003';

  RETURN;

 }

 EXECUTE FUNCTION(Rtv & Chg for Co Txfr RT) TYPE(RTVOBJ) FILE(PMAMREP)           AC2064577;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(LCL.Absorbed_Freight_Rate_CWT);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.OHE Orig ABS Freight Rate NE PAR.Absorbed Freight Rate CWT
  IF DB1.OHE_Orig_ABS_Freight_Rate <> PAR.Absorbed_Freight_Rate_CWT;

  // LCL.OHE Abs Rate Override Rsn = CND.NOT ENTERED
  LCL.OHE_Abs_Rate_Override_Rsn = *BLANK;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.OHE Abs Rate Override Rsn = DB1.OHE Abs Rate Override Rsn
  LCL.OHE_Abs_Rate_Override_Rsn = DB1.OHE_Abs_Rate_Override_Rsn;

  ENDIF;

  //?R15161 DN  08/01/19-Set New OHE Fields.
  EXECUTE FUNCTION(CRT Existing OHE       CR) TYPE(CRTOBJ) FILE(PMAMREP)          AC1816936;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Stop_Drop_Sequence_Number);
  PARAMETER(DB1.Shipping_Line);
  PARAMETER(DB1.Port_Delv_Terminal);
  PARAMETER(DB1.OHE_City);
  PARAMETER(DB1.OHE_Vessel_Airline);
  PARAMETER(DB1.OHE_Voyage_Flight);
  PARAMETER(DB1.OHE_Booking_Number);
  PARAMETER(DB1.OHE_Discharge_Port_Airprt);
  PARAMETER(DB1.OHE_Sail_Flight_Date);
  PARAMETER(DB1.OHE_Port_Cut_Date);
  PARAMETER(DB1.OHE_Arrival_Date);
  PARAMETER(DB1.OHE_Late_Delivery_Code);
  PARAMETER(DB1.OHE_Ship_Status);
  PARAMETER(DB1.OHE_Container_Number);
  PARAMETER(DB1.OHE_Comment_1);
  PARAMETER(DB1.OHE_Comment_2);
  PARAMETER(DB1.OHE_Unused_Number_1_11_0);
  PARAMETER(DB1.OHE_Unused_Number_2_11_0);
  PARAMETER(DB1.OHE_Unused_Number_3_11_0);
  PARAMETER(DB1.OHE_Unused_Number_4_11_0);
  PARAMETER(DB1.OHE_HPB_RIN_Equiv_Value);
  PARAMETER(DB1.OHE_HPB_RIN_Price);
  PARAMETER(DB1.Transload_Terminal_Fees);
  PARAMETER(DB1.OHE_Est_Arrv_at_Dest_Date);
  PARAMETER(DB1.OHE_Backhaul_ETA_RtrnDate);
  PARAMETER(DB1.OHE_Port_Pier_Paid_Date);
  PARAMETER(DB1.OHE_Actual_Ship_Date);
  PARAMETER(DB1.OHE_Carrier_SCAC_Code);
  PARAMETER(DB1.OHE_Spot_Buy);
  PARAMETER(DB1.OHE_PO_ACK_Flag);
  PARAMETER(DB1.OHE_Override_Type_Code);
  PARAMETER(DB1.OHE_Backhaul_Status);
  PARAMETER(DB1.OHE_Backhaul_ETA_AM_PM);
  PARAMETER(DB1.OHE_Load_Haul_Type);
  PARAMETER(DB1.OHE_Backhaul_Carrier_Code);
  PARAMETER(DB1.OHE_Bookings_Confirmed);
  PARAMETER(DB1.OHE_EDI_Error_Reasons);
  PARAMETER(DB1.OHE_EDI_Error_Reasons_2);
  PARAMETER(DB1.HPB_COA_Batch_Number);
  PARAMETER(DB1.Delivery_P_O_Number);
  PARAMETER(DB1.OHE_Intended_for_ExportCC);
  PARAMETER(DB1.OHE_EDI_943_Action);
  PARAMETER(DB1.OHE_EDI_944_Action);
  PARAMETER(DB1.OHE_EDI_940_Action);
  PARAMETER(DB1.OHE_EDI_945_Action);
  PARAMETER(DB1.OHE_EDI_856_Action);
  PARAMETER(DB1.OHE_EDI_824_Action);
  PARAMETER(DB1.OHE_Transload_Seal_Nbr);
  PARAMETER(LCL.OHE_Abs_Rate_Override_Rsn);
  PARAMETER(DB1.OHE_Appt_Confirmation_#);
  PARAMETER(DB1.OHE_Backhaul_Container#);
  PARAMETER(DB1.OHE_Backhaul_Chassis_#);
  PARAMETER(DB1.OHE_Transload_Container#);
  PARAMETER(DB1.OHE_Pier_Pass_Invoice);
  PARAMETER(DB1.OHE_Carrier_Nm);
  PARAMETER(DB1.OHE_Appt_Confirmation_Nm);
  PARAMETER(DB1.OHE_Backhaul_Comment);
  PARAMETER(DB1.Letter_of_Credit_Number);
  PARAMETER(DB1.OHE_Backhaul_Return_to_Co);
  PARAMETER(DB1.LD_Stop_Drop);
  PARAMETER(DB1.OHE_Unused_Number_3_0);
  PARAMETER(DB1.OHE_Pier_Pass_Fee_Amount);
  PARAMETER(DB1.OHE_Port_Check_Fee_Amount);
  PARAMETER(DB1.OHE_Port_Cut_Time);
  PARAMETER(DB1.OHE_Backhaul_Truck_Number);
  PARAMETER(DB1.OHE_Load_Sched_Seq_Num);
  PARAMETER(DB1.Original_Appointment_Date);
  PARAMETER(DB1.Original_Appointment_Time);
  PARAMETER(DB1.OHE_PowerPro_Load#_Outbnd);
  PARAMETER(DB1.OHE_PowerPro_Load#_Bckhl);
  PARAMETER(DB1.OHE_Unused_Numeric_9_0_3);
  PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.OHE_Genset_Number);
  PARAMETER(DB1.OHE_Email_BOL_Sent);
  PARAMETER(DB1.OHE_EDI_Order_Automated);
  PARAMETER(DB1.OHE_EDI_601_Action);
  PARAMETER(DB1.OHE_Unused_Status_4);
  PARAMETER(DB1.OHE_Unused_Text_1);
  PARAMETER(DB1.OHE_Unused_Text_2);
  PARAMETER(DB1.OHE_Customer_Vendor_f_PO);
  PARAMETER(DB1.OHE_EDI_824_AES_ITN_#);
  PARAMETER(DB1.OHE_Unused_Text_5);
  PARAMETER(DB1.OHE_Unused_Date_1);
  PARAMETER(DB1.OHE_Unused_Date_2);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing before Data update

   // DB1.Job Time = JOB.*Job time
   DB1.Job_Time = JOB.*Job_time;

   // DB1.Job Date = JOB.*Job date
   DB1.Job_Date = JOB.*Job_date;

   // DB1.Job Name = JOB.*PROGRAM
   DB1.Job_Name = JOB.*PROGRAM;

   // DB1.User Id = JOB.*USER
   DB1.User_Id = JOB.*USER;

  }

  EXECUTE FUNCTION(Delete Order Header Exten) TYPE(DLTOBJ) FILE(PMAMREP)          AC1814353;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
 }

 EXECUTE FUNCTION(DLT Order Header       DL) TYPE(DLTOBJ) FILE(OPBFCPP)          AC1113752;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 //?If export sts is yes, del/recreate documents - some flds saved from orig
 CASE;

 // IF DB1.Export Status is yes
 IF DB1.Export_Status = 'Y';

 //?*  E00994 02/07/2011 next routine will purge the
 //?the export doc ord hdr and the export doc ord comment
 //?R13944 DN 01/03/19-Send Back Original Order PHIS info from Doc Type A.
 //?R16637 DN 9/23/20-Remove All PHIS Fields Except PHIS Telephone.
 //?          Get New Consignor/Consignee Fields.
 EXECUTE FUNCTION(Rtv & Del for Co Txfr RT) TYPE(RTVOBJ) FILE(PDMRREP)           AC1702927;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.ED_Consignee_Address_Nbr);
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.ED_Consignor_Name);
 PARAMETER(PAR.ED_Consignor_Addr_1);
 PARAMETER(PAR.ED_Consignor_Addr_2);
 PARAMETER(PAR.ED_Consignor_Addr_3);
 PARAMETER(PAR.ED_Consignor_Addr_4);
 PARAMETER(PAR.ED_Consignor_State);
 PARAMETER(PAR.ED_Consignor_Postal);
 PARAMETER(PAR.ED_Consignor_Country_Code);
 PARAMETER(PAR.ED_Consignee_Name);
 PARAMETER(PAR.ED_Consignee_Addr_1);
 PARAMETER(PAR.ED_Consignee_Addr_2);
 PARAMETER(PAR.ED_Consignee_Addr_3);
 PARAMETER(PAR.ED_Consignee_Addr_4);
 PARAMETER(PAR.ED_Consignee_State);
 PARAMETER(PAR.ED_Consignee_Postal);
 PARAMETER(PAR.ED_Consignee_Country_Code);
 PARAMETER(PAR.ED_Shipping_Marks_Txt);
 PARAMETER(PAR.ED_Remark_Constant_1);
 PARAMETER(PAR.ED_Remark_Constant_2);
 PARAMETER(PAR.ED_Remark_Constant_3);
 PARAMETER(PAR.ED_Remark_Constant_4);
 PARAMETER(PAR.ED_Remark_Constant_5);
 PARAMETER(PAR.ED_Remark_Constant_7);
 PARAMETER(PAR.ED_Remark_Constant_8);
 PARAMETER(PAR.ED_Remark_Constant_6);
 PARAMETER(PAR.ED_MPR_Canadian_Province);
 PARAMETER(PAR.EDE_Shipment_Type_Sts);
 PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
 PARAMETER(PAR.EDE_ISO_Alpha_2_code);
 PARAMETER(PAR.EDE_USDA_Export_Mark_Sts);
 PARAMETER(PAR.EDE_Appl_Billing_First_Nm);
 PARAMETER(PAR.EDE_Appl_Billing_Last_Nm);
 PARAMETER(PAR.EDE_Country_of_Final_Dest);
 PARAMETER(PAR.EDE_I_Certify_Stmt);
 PARAMETER(PAR.EDE_Transit_Country);
 PARAMETER(PAR.EDE_Consignee_Tele_PHIS);
 PARAMETER(PAR.EDE_Consignor_Tele_PHIS);
 {
  //?USER: Initialize routine

  // LCL.Doc Type A Live w/PHIS U = CND.No
  LCL.Doc_Type_A_Live_w_PHIS_U = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  //?03/21/07   Save fields from MPG for recreation with new plant
  //?R13944 DN 1/7/19-Commented Out & Replaced Logic.
  //?R13944 DN 1/7/19-Check Country is Live with PHIS to Set Doc Type.
  CASE;

  // IF DB1.ED Live with PHIS is yes
  IF DB1.ED_Live_with_PHIS = 'Y';

  //?NOTE: Doc Type H has the true Consignor exporter (3rd party)
  //?      address info. Consignor address info for Doc Type A will have
  //?      Seaboard's plant address.
  EXECUTE FUNCTION(Rtv Live with PHIS    RT) TYPE(RTVOBJ) FILE(PDMMREP)           AC2160999;
  PARAMETER(PAR.USR_Hold_Company_Number);
  PARAMETER('A');
  PARAMETER(DB1.Country_Code);
  PARAMETER(LCL.ED_Live_with_PHIS);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Transfer To Company is Live with PHIS. Save Original Info from Doc Type A.
  CASE;

  // IF LCL.ED Live with PHIS is yes
  IF LCL.ED_Live_with_PHIS = 'Y';

  // AND DB1.ED Export Document Type is Application for Export
  AND DB1.ED_Export_Document_Type = 'A';

  //?Doc Type A will take precedence over Doc Type H.
  MOVE *ALL (To: PAR From: DB1);

  // LCL.Doc Type A Live w/PHIS U = CND.Yes
  LCL.Doc_Type_A_Live_w_PHIS_U = 'Y';

  ENDIF;

  //?R13944 DN 1/7/19-Check Country is Live with PHIS to Set Doc Type.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Save Original Info from Doc Type 'H' If 'Doc Type A Live w/PHIS U'=No.
  CASE;

  // IF DB1.ED Export Document Type is Health Certificate 9060-5
  IF DB1.ED_Export_Document_Type = 'H';

  // AND LCL.Doc Type A Live w/PHIS U is No
  AND LCL.Doc_Type_A_Live_w_PHIS_U = 'N';

  MOVE *ALL (To: PAR From: DB1);

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(Del Exp Doc Order Hdr  DL) TYPE(DLTOBJ) FILE(PDMRREP)          AC1523844;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  //?Remove the comments based on the header
  EXECUTE FUNCTION(Rtv/DelExpDocOrdComm  RT) TYPE(RTVOBJ) FILE(PNGTCPP)           AC2010983;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Dlt Export DocOrderC  DO) TYPE(DLTOBJ) FILE(PNGTCPP)           AC2009165;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(DB1.EDO_Comment_Line_No);
   PARAMETER(DB1.EDO_Comment_Line_Seq);
  }

  //?Remove the EXT based on the header
  //?R13944 DN 1/8/19-Save Doc Type A or H PHIS Info Based on Live with PHIS.
  //?R16637 DN 9/23/20-Remove All PHIS Fields Except PHIS Telephone.
  EXECUTE FUNCTION(Rtv/Del EDE per Txfr  RT) TYPE(RTVOBJ) FILE(PUA6CPP)           AC2151557;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(LCL.Doc_Type_A_Live_w_PHIS_U);
  PARAMETER(PAR.EDE_Shipment_Type_Sts);
  PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
  PARAMETER(PAR.EDE_ISO_Alpha_2_code);
  PARAMETER(PAR.EDE_USDA_Export_Mark_Sts);
  PARAMETER(PAR.EDE_Appl_Billing_First_Nm);
  PARAMETER(PAR.EDE_Appl_Billing_Last_Nm);
  PARAMETER(PAR.EDE_Country_of_Final_Dest);
  PARAMETER(PAR.EDE_I_Certify_Stmt);
  PARAMETER(PAR.EDE_Transit_Country);
  PARAMETER(PAR.EDE_Consignee_Tele_PHIS);
  PARAMETER(PAR.EDE_Consignor_Tele_PHIS);
  {
   //?USER: Process Data record

   //?Save Original PHIS Info from Doc Type A or H Based on Live w/PHIS.
   CASE;

   // IF PAR.Doc Type A Live w/PHIS U is Yes
   IF PAR.Doc_Type_A_Live_w_PHIS_U = 'Y';

   CASE;

   // IF PAR.ED Export Document Type is Application for Export
   IF PAR.ED_Export_Document_Type = 'A';

   MOVE *ALL (To: PAR From: DB1);

   ENDIF;

   //?Save Original PHIS Info from Doc Type A or H Based on Live w/PHIS.
   // IF *OTHERWISE
   IF *OTHERWISE;

   CASE;

   // IF PAR.ED Export Document Type is Health Certificate 9060-5
   IF PAR.ED_Export_Document_Type = 'H';

   MOVE *ALL (To: PAR From: DB1);

   ENDIF;

   ENDIF;

   EXECUTE FUNCTION(Del Exp Doc Order Ext DL) TYPE(DLTOBJ) FILE(PUA6CPP)           AC2150709;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
  }

 }

 EXECUTE FUNCTION(Rtv & Del for Co Txfr RT) TYPE(RTVOBJ) FILE(PDMSREP)           AC1812414;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  //?USER: Process Data record

  EXECUTE FUNCTION(Del Exp Doc Order Dtl  DL) TYPE(DLTOBJ) FILE(PDMSREP)          AC1524037;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
 }

 //?If an Exp Doc Header was found...
 CASE;

 // IF PAR.Country Code is Entered
 IF PAR.Country_Code <> *BLANK;

 //?R13944 DN 01/03/19-Create Exp Doc Order Hdr/Dtl/Ext from Doc Defaults.
 // Call program Exc Crt/Chg from OE   XF.
 CALL PROGRAM(Exc Crt/Chg from OE   XF) ('POIVXFR');
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.Transfer_Warehouse_Code);

 //?R13944 DN 1/3/19-Allow Update of PHIS Info.
 //?R16637 DN 9/23/20-Remove All PHIS Fields Except PHIS Telephone.
 //?          Pass In New Consignor/Consignee Fields.
 EXECUTE FUNCTION(Chg Exp Doc Order Hdr 2IF) TYPE(EXCINTFUN)                     AC2163328;
 PARAMETER(PAR.USR_Hold_Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.ED_Consignor_Name);
 PARAMETER(PAR.ED_Consignor_Addr_1);
 PARAMETER(PAR.ED_Consignor_Addr_2);
 PARAMETER(PAR.ED_Consignor_Addr_3);
 PARAMETER(PAR.ED_Consignor_Addr_4);
 PARAMETER(PAR.ED_Consignor_State);
 PARAMETER(PAR.ED_Consignor_Postal);
 PARAMETER(PAR.ED_Consignor_Country_Code);
 PARAMETER(PAR.ED_Consignee_Name);
 PARAMETER(PAR.ED_Consignee_Addr_1);
 PARAMETER(PAR.ED_Consignee_Addr_2);
 PARAMETER(PAR.ED_Consignee_Addr_3);
 PARAMETER(PAR.ED_Consignee_Addr_4);
 PARAMETER(PAR.ED_Consignee_State);
 PARAMETER(PAR.ED_Consignee_Postal);
 PARAMETER(PAR.ED_Consignee_Country_Code);
 PARAMETER(PAR.ED_Shipping_Marks_Txt);
 PARAMETER(PAR.ED_Remark_Constant_1);
 PARAMETER(PAR.ED_Remark_Constant_2);
 PARAMETER(PAR.ED_Remark_Constant_3);
 PARAMETER(PAR.ED_Remark_Constant_4);
 PARAMETER(PAR.ED_Remark_Constant_5);
 PARAMETER(PAR.ED_Remark_Constant_7);
 PARAMETER(PAR.ED_Remark_Constant_8);
 PARAMETER(PAR.ED_Remark_Constant_6);
 PARAMETER(PAR.ED_Consignee_Address_Nbr);
 PARAMETER(PAR.ED_MPR_Canadian_Province);
 PARAMETER(PAR.EDE_Shipment_Type_Sts);
 PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
 PARAMETER(PAR.EDE_ISO_Alpha_2_code);
 PARAMETER(PAR.EDE_USDA_Export_Mark_Sts);
 PARAMETER(PAR.EDE_Appl_Billing_First_Nm);
 PARAMETER(PAR.EDE_Appl_Billing_Last_Nm);
 PARAMETER(PAR.EDE_Country_of_Final_Dest);
 PARAMETER(PAR.EDE_I_Certify_Stmt);
 PARAMETER(PAR.EDE_Transit_Country);
 PARAMETER(PAR.EDE_Consignee_Tele_PHIS);
 PARAMETER(PAR.EDE_Consignor_Tele_PHIS);
 {
  //?Execute internal function

  //?Change the consignee/consignor on all documents for the Order
  //?R16637 DN 09/11/20-Pass In New Consignor/Consignee Fields.
  EXECUTE FUNCTION(Rtv/Chg Consignee      RT) TYPE(RTVOBJ) FILE(PDMRREP)          AC1611425;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Consignor_Name);
  PARAMETER(PAR.ED_Consignor_Addr_1);
  PARAMETER(PAR.ED_Consignor_Addr_2);
  PARAMETER(PAR.ED_Consignor_Addr_3);
  PARAMETER(PAR.ED_Consignor_Addr_4);
  PARAMETER(PAR.ED_Consignor_State);
  PARAMETER(PAR.ED_Consignor_Postal);
  PARAMETER(PAR.ED_Consignor_Country_Code);
  PARAMETER(PAR.ED_Consignee_Name);
  PARAMETER(PAR.ED_Consignee_Addr_1);
  PARAMETER(PAR.ED_Consignee_Addr_2);
  PARAMETER(PAR.ED_Consignee_Addr_3);
  PARAMETER(PAR.ED_Consignee_Addr_4);
  PARAMETER(PAR.ED_Consignee_State);
  PARAMETER(PAR.ED_Consignee_Postal);
  PARAMETER(PAR.ED_Consignee_Country_Code);
  PARAMETER(PAR.ED_Shipping_Marks_Txt);
  PARAMETER(PAR.ED_Remark_Constant_1);
  PARAMETER(PAR.ED_Remark_Constant_2);
  PARAMETER(PAR.ED_Remark_Constant_3);
  PARAMETER(PAR.ED_Remark_Constant_4);
  PARAMETER(PAR.ED_Remark_Constant_5);
  PARAMETER(PAR.ED_Remark_Constant_7);
  PARAMETER(PAR.ED_Remark_Constant_8);
  PARAMETER(PAR.ED_Remark_Constant_6);
  PARAMETER(PAR.ED_Consignee_Address_Nbr);
  PARAMETER(PAR.ED_MPR_Canadian_Province);
  {
   //?USER: Process Data record

   //?R13944 DN 1/8/19-Added Check of 'ED Live with PHIS=No'.
   CASE;

   // IF DB1.ED Export Document Type is Application for Export
   IF DB1.ED_Export_Document_Type = 'A';

   // AND DB1.ED Live with PHIS is Not Yes
   AND DB1.ED_Live_with_PHIS = *BLANK/'N';

   //?the applicant(02/27/07 RMC) &  remarks are different than other documents
   //?R16637 DN 09/11/20-Set New Consignor Flds to DB1 & Consignee to PAR Ctxt.
   //?WHD 75298 RMC 3/11/21 Chg Consignor Flds to PAR for Appl. to be same as HC
   //?WHD 75298 RMC 5/16/22 Chg Consignor Flds BACK TO PAR.DO  MATCH HC
   EXECUTE FUNCTION(Chg Exp Doc Consignee  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1611424;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(PAR.ED_Consignor_Name);
   PARAMETER(PAR.ED_Consignor_Addr_1);
   PARAMETER(PAR.ED_Consignor_Addr_2);
   PARAMETER(PAR.ED_Consignor_Addr_3);
   PARAMETER(PAR.ED_Consignor_Addr_4);
   PARAMETER(PAR.ED_Consignor_State);
   PARAMETER(PAR.ED_Consignor_Postal);
   PARAMETER(PAR.ED_Consignor_Country_Code);
   PARAMETER(PAR.ED_Consignee_Name);
   PARAMETER(PAR.ED_Consignee_Addr_1);
   PARAMETER(PAR.ED_Consignee_Addr_2);
   PARAMETER(PAR.ED_Consignee_Addr_3);
   PARAMETER(PAR.ED_Consignee_Addr_4);
   PARAMETER(PAR.ED_Consignee_State);
   PARAMETER(PAR.ED_Consignee_Postal);
   PARAMETER(PAR.ED_Consignee_Country_Code);
   PARAMETER(PAR.ED_Shipping_Marks_Txt);
   PARAMETER(DB1.ED_Remark_Constant_1);
   PARAMETER(DB1.ED_Remark_Constant_2);
   PARAMETER(DB1.ED_Remark_Constant_3);
   PARAMETER(DB1.ED_Remark_Constant_4);
   PARAMETER(DB1.ED_Remark_Constant_5);
   PARAMETER(DB1.ED_Remark_Constant_7);
   PARAMETER(DB1.ED_Remark_Constant_8);
   PARAMETER(DB1.ED_Remark_Constant_6);
   PARAMETER(DB1.ED_Consignee_Address_Nbr);
   PARAMETER(DB1.ED_Form_Identification_Tx);
   PARAMETER(DB1.ED_Cold_Storage_Name);
   PARAMETER(DB1.ED_Cold_Storage_Addr_1);
   PARAMETER(DB1.ED_Cold_Storage_Addr_2);
   PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
   PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
   PARAMETER(DB1.ED_Production_mo_yr_ln_1);
   PARAMETER(DB1.ED_Production_mo_yr_ln_2);
   PARAMETER(DB1.ED_Booking_Nbr);
   PARAMETER(PAR.ED_MPR_Canadian_Province);
   PARAMETER(DB1.ED_Submit_Status);
   PARAMETER(DB1.EDOH_Unused_Sts_2);
   PARAMETER(DB1.EDOH_Unused_Text_1);
   PARAMETER(DB1.EDOH_Unused_Text_2);
   PARAMETER(DB1.EDOH_Unused_Number_1);
   PARAMETER(DB1.EDOH_Unused_Date_1);
   {
    //?USER: Processing after Data read

    //?* E00994 Susan Mason
    //?* these functions will execute the new routines
    //?* that will create records to the comment file
    //?* if the consignee or consignor changed
    CASE;

    // IF DB1.ED Export Document Type is MPD
    IF DB1.ED_Export_Document_Type = 'H';

    // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
    OR DB1.ED_Export_Document_Type = 'E';

    //?R16637 DN 09/11/20-Pass in New Consignor/Consignee Fields.
    // Call program Rtv/Consignor/ConsigneXF.
    CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
    PARAMETER(JOB.*PROGRAM);
    PARAMETER(DB1.ED_Consignor_Name);
    PARAMETER(DB1.ED_Consignor_Addr_1);
    PARAMETER(DB1.ED_Consignor_Addr_2);
    PARAMETER(DB1.ED_Consignor_Addr_3);
    PARAMETER(DB1.ED_Consignor_Addr_4);
    PARAMETER(DB1.ED_Consignor_State);
    PARAMETER(DB1.ED_Consignor_Postal);
    PARAMETER(DB1.ED_Consignor_Country_Code);
    PARAMETER(DB1.ED_Consignee_Name);
    PARAMETER(DB1.ED_Consignee_Addr_1);
    PARAMETER(DB1.ED_Consignee_Addr_2);
    PARAMETER(DB1.ED_Consignee_Addr_3);
    PARAMETER(DB1.ED_Consignee_Addr_4);
    PARAMETER(DB1.ED_Consignee_State);
    PARAMETER(DB1.ED_Consignee_Postal);
    PARAMETER(DB1.ED_Consignee_Country_Code);
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Order_Number);
    PARAMETER(PAR.ED_Export_Document_Type);
    PARAMETER(PAR.Country_Code);
    PARAMETER(PAR.ED_Area_Office);
    PARAMETER(PAR.ED_Destination);
    PARAMETER(PAR.ED_Consignor_Name);
    PARAMETER(PAR.ED_Consignor_Addr_1);
    PARAMETER(PAR.ED_Consignor_Addr_2);
    PARAMETER(PAR.ED_Consignor_Addr_3);
    PARAMETER(PAR.ED_Consignor_Addr_4);
    PARAMETER(PAR.ED_Consignor_State);
    PARAMETER(PAR.ED_Consignor_Postal);
    PARAMETER(PAR.ED_Consignor_Country_Code);
    PARAMETER(PAR.ED_Consignee_Name);
    PARAMETER(PAR.ED_Consignee_Addr_1);
    PARAMETER(PAR.ED_Consignee_Addr_2);
    PARAMETER(PAR.ED_Consignee_Addr_3);
    PARAMETER(PAR.ED_Consignee_Addr_4);
    PARAMETER(PAR.ED_Consignee_State);
    PARAMETER(PAR.ED_Consignee_Postal);
    PARAMETER(PAR.ED_Consignee_Country_Code);

    ENDIF;

    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   // IF *OTHERWISE
   IF *OTHERWISE;

   //?S14766 DN 4/2/19-Comment out old logic.
   //?S14766 DN 4/2/19-Update Remarks if Doc Type 'A' or 'H' Else Do Not.
   CASE;

   // IF NOT DB1.ED Export Document Type is Application for Export
   IF ! DB1.ED_Export_Document_Type = 'A';

   // AND NOT DB1.ED Export Document Type is Health Certificate 9060-5
   AND ! DB1.ED_Export_Document_Type = 'H';

   //?For all other Doc Types Not A or H, don't update remarks. They
   //?have their own remarks.
   //?R16637 DN 09/11/20-Set New Consignor/Consignee Fields to PAR Ctxt.
   EXECUTE FUNCTION(Chg Exp Doc Consignee  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1611424;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(PAR.ED_Consignor_Name);
   PARAMETER(PAR.ED_Consignor_Addr_1);
   PARAMETER(PAR.ED_Consignor_Addr_2);
   PARAMETER(PAR.ED_Consignor_Addr_3);
   PARAMETER(PAR.ED_Consignor_Addr_4);
   PARAMETER(PAR.ED_Consignor_State);
   PARAMETER(PAR.ED_Consignor_Postal);
   PARAMETER(PAR.ED_Consignor_Country_Code);
   PARAMETER(PAR.ED_Consignee_Name);
   PARAMETER(PAR.ED_Consignee_Addr_1);
   PARAMETER(PAR.ED_Consignee_Addr_2);
   PARAMETER(PAR.ED_Consignee_Addr_3);
   PARAMETER(PAR.ED_Consignee_Addr_4);
   PARAMETER(PAR.ED_Consignee_State);
   PARAMETER(PAR.ED_Consignee_Postal);
   PARAMETER(PAR.ED_Consignee_Country_Code);
   PARAMETER(PAR.ED_Shipping_Marks_Txt);
   PARAMETER(DB1.ED_Remark_Constant_1);
   PARAMETER(DB1.ED_Remark_Constant_2);
   PARAMETER(DB1.ED_Remark_Constant_3);
   PARAMETER(DB1.ED_Remark_Constant_4);
   PARAMETER(DB1.ED_Remark_Constant_5);
   PARAMETER(DB1.ED_Remark_Constant_7);
   PARAMETER(DB1.ED_Remark_Constant_8);
   PARAMETER(DB1.ED_Remark_Constant_6);
   PARAMETER(PAR.ED_Consignee_Address_Nbr);
   PARAMETER(DB1.ED_Form_Identification_Tx);
   PARAMETER(DB1.ED_Cold_Storage_Name);
   PARAMETER(DB1.ED_Cold_Storage_Addr_1);
   PARAMETER(DB1.ED_Cold_Storage_Addr_2);
   PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
   PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
   PARAMETER(DB1.ED_Production_mo_yr_ln_1);
   PARAMETER(DB1.ED_Production_mo_yr_ln_2);
   PARAMETER(DB1.ED_Booking_Nbr);
   PARAMETER(PAR.ED_MPR_Canadian_Province);
   PARAMETER(DB1.ED_Submit_Status);
   PARAMETER(DB1.EDOH_Unused_Sts_2);
   PARAMETER(DB1.EDOH_Unused_Text_1);
   PARAMETER(DB1.EDOH_Unused_Text_2);
   PARAMETER(DB1.EDOH_Unused_Number_1);
   PARAMETER(DB1.EDOH_Unused_Date_1);
   {
    //?USER: Processing after Data read

    //?* E00994 Susan Mason
    //?* these functions will execute the new routines
    //?* that will create records to the comment file
    //?* if the consignee or consignor changed
    CASE;

    // IF DB1.ED Export Document Type is MPD
    IF DB1.ED_Export_Document_Type = 'H';

    // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
    OR DB1.ED_Export_Document_Type = 'E';

    //?R16637 DN 09/11/20-Pass in New Consignor/Consignee Fields.
    // Call program Rtv/Consignor/ConsigneXF.
    CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
    PARAMETER(JOB.*PROGRAM);
    PARAMETER(DB1.ED_Consignor_Name);
    PARAMETER(DB1.ED_Consignor_Addr_1);
    PARAMETER(DB1.ED_Consignor_Addr_2);
    PARAMETER(DB1.ED_Consignor_Addr_3);
    PARAMETER(DB1.ED_Consignor_Addr_4);
    PARAMETER(DB1.ED_Consignor_State);
    PARAMETER(DB1.ED_Consignor_Postal);
    PARAMETER(DB1.ED_Consignor_Country_Code);
    PARAMETER(DB1.ED_Consignee_Name);
    PARAMETER(DB1.ED_Consignee_Addr_1);
    PARAMETER(DB1.ED_Consignee_Addr_2);
    PARAMETER(DB1.ED_Consignee_Addr_3);
    PARAMETER(DB1.ED_Consignee_Addr_4);
    PARAMETER(DB1.ED_Consignee_State);
    PARAMETER(DB1.ED_Consignee_Postal);
    PARAMETER(DB1.ED_Consignee_Country_Code);
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Order_Number);
    PARAMETER(PAR.ED_Export_Document_Type);
    PARAMETER(PAR.Country_Code);
    PARAMETER(PAR.ED_Area_Office);
    PARAMETER(PAR.ED_Destination);
    PARAMETER(PAR.ED_Consignor_Name);
    PARAMETER(PAR.ED_Consignor_Addr_1);
    PARAMETER(PAR.ED_Consignor_Addr_2);
    PARAMETER(PAR.ED_Consignor_Addr_3);
    PARAMETER(PAR.ED_Consignor_Addr_4);
    PARAMETER(PAR.ED_Consignor_State);
    PARAMETER(PAR.ED_Consignor_Postal);
    PARAMETER(PAR.ED_Consignor_Country_Code);
    PARAMETER(PAR.ED_Consignee_Name);
    PARAMETER(PAR.ED_Consignee_Addr_1);
    PARAMETER(PAR.ED_Consignee_Addr_2);
    PARAMETER(PAR.ED_Consignee_Addr_3);
    PARAMETER(PAR.ED_Consignee_Addr_4);
    PARAMETER(PAR.ED_Consignee_State);
    PARAMETER(PAR.ED_Consignee_Postal);
    PARAMETER(PAR.ED_Consignee_Country_Code);

    ENDIF;

    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   //?S14766 DN 4/2/19-Update Remarks if Doc Type 'A' or 'H' Else Do Not.
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?Update Remarks if Doc Type A or H.
   //?This is Live with PHIS so update the Consignor for all Doc Types.
   //?R16637 DN 09/11/20-Set New Consignor/Consignee Fields to PAR Ctxt.
   EXECUTE FUNCTION(Chg Exp Doc Consignee  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1611424;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(PAR.ED_Consignor_Name);
   PARAMETER(PAR.ED_Consignor_Addr_1);
   PARAMETER(PAR.ED_Consignor_Addr_2);
   PARAMETER(PAR.ED_Consignor_Addr_3);
   PARAMETER(PAR.ED_Consignor_Addr_4);
   PARAMETER(PAR.ED_Consignor_State);
   PARAMETER(PAR.ED_Consignor_Postal);
   PARAMETER(PAR.ED_Consignor_Country_Code);
   PARAMETER(PAR.ED_Consignee_Name);
   PARAMETER(PAR.ED_Consignee_Addr_1);
   PARAMETER(PAR.ED_Consignee_Addr_2);
   PARAMETER(PAR.ED_Consignee_Addr_3);
   PARAMETER(PAR.ED_Consignee_Addr_4);
   PARAMETER(PAR.ED_Consignee_State);
   PARAMETER(PAR.ED_Consignee_Postal);
   PARAMETER(PAR.ED_Consignee_Country_Code);
   PARAMETER(PAR.ED_Shipping_Marks_Txt);
   PARAMETER(PAR.ED_Remark_Constant_1);
   PARAMETER(PAR.ED_Remark_Constant_2);
   PARAMETER(PAR.ED_Remark_Constant_3);
   PARAMETER(PAR.ED_Remark_Constant_4);
   PARAMETER(PAR.ED_Remark_Constant_5);
   PARAMETER(PAR.ED_Remark_Constant_7);
   PARAMETER(PAR.ED_Remark_Constant_8);
   PARAMETER(PAR.ED_Remark_Constant_6);
   PARAMETER(PAR.ED_Consignee_Address_Nbr);
   PARAMETER(DB1.ED_Form_Identification_Tx);
   PARAMETER(DB1.ED_Cold_Storage_Name);
   PARAMETER(DB1.ED_Cold_Storage_Addr_1);
   PARAMETER(DB1.ED_Cold_Storage_Addr_2);
   PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
   PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
   PARAMETER(DB1.ED_Production_mo_yr_ln_1);
   PARAMETER(DB1.ED_Production_mo_yr_ln_2);
   PARAMETER(DB1.ED_Booking_Nbr);
   PARAMETER(PAR.ED_MPR_Canadian_Province);
   PARAMETER(DB1.ED_Submit_Status);
   PARAMETER(DB1.EDOH_Unused_Sts_2);
   PARAMETER(DB1.EDOH_Unused_Text_1);
   PARAMETER(DB1.EDOH_Unused_Text_2);
   PARAMETER(DB1.EDOH_Unused_Number_1);
   PARAMETER(DB1.EDOH_Unused_Date_1);
   {
    //?USER: Processing after Data read

    //?* E00994 Susan Mason
    //?* these functions will execute the new routines
    //?* that will create records to the comment file
    //?* if the consignee or consignor changed
    CASE;

    // IF DB1.ED Export Document Type is MPD
    IF DB1.ED_Export_Document_Type = 'H';

    // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
    OR DB1.ED_Export_Document_Type = 'E';

    //?R16637 DN 09/11/20-Pass in New Consignor/Consignee Fields.
    // Call program Rtv/Consignor/ConsigneXF.
    CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
    PARAMETER(JOB.*PROGRAM);
    PARAMETER(DB1.ED_Consignor_Name);
    PARAMETER(DB1.ED_Consignor_Addr_1);
    PARAMETER(DB1.ED_Consignor_Addr_2);
    PARAMETER(DB1.ED_Consignor_Addr_3);
    PARAMETER(DB1.ED_Consignor_Addr_4);
    PARAMETER(DB1.ED_Consignor_State);
    PARAMETER(DB1.ED_Consignor_Postal);
    PARAMETER(DB1.ED_Consignor_Country_Code);
    PARAMETER(DB1.ED_Consignee_Name);
    PARAMETER(DB1.ED_Consignee_Addr_1);
    PARAMETER(DB1.ED_Consignee_Addr_2);
    PARAMETER(DB1.ED_Consignee_Addr_3);
    PARAMETER(DB1.ED_Consignee_Addr_4);
    PARAMETER(DB1.ED_Consignee_State);
    PARAMETER(DB1.ED_Consignee_Postal);
    PARAMETER(DB1.ED_Consignee_Country_Code);
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Order_Number);
    PARAMETER(PAR.ED_Export_Document_Type);
    PARAMETER(PAR.Country_Code);
    PARAMETER(PAR.ED_Area_Office);
    PARAMETER(PAR.ED_Destination);
    PARAMETER(PAR.ED_Consignor_Name);
    PARAMETER(PAR.ED_Consignor_Addr_1);
    PARAMETER(PAR.ED_Consignor_Addr_2);
    PARAMETER(PAR.ED_Consignor_Addr_3);
    PARAMETER(PAR.ED_Consignor_Addr_4);
    PARAMETER(PAR.ED_Consignor_State);
    PARAMETER(PAR.ED_Consignor_Postal);
    PARAMETER(PAR.ED_Consignor_Country_Code);
    PARAMETER(PAR.ED_Consignee_Name);
    PARAMETER(PAR.ED_Consignee_Addr_1);
    PARAMETER(PAR.ED_Consignee_Addr_2);
    PARAMETER(PAR.ED_Consignee_Addr_3);
    PARAMETER(PAR.ED_Consignee_Addr_4);
    PARAMETER(PAR.ED_Consignee_State);
    PARAMETER(PAR.ED_Consignee_Postal);
    PARAMETER(PAR.ED_Consignee_Country_Code);

    ENDIF;

    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   ENDIF;

   ENDIF;

  }

  //?R13944 DN 1/3/19-Allow Update of PHIS info.
  //?R16637 DN 9/23/20-Remove All PHIS Fields Except PHIS Telephone.
  EXECUTE FUNCTION(Rtv/Chg EDE f/Xfr Ord RT) TYPE(RTVOBJ) FILE(PUA6CPP)           AC2163331;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.EDE_Shipment_Type_Sts);
  PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
  PARAMETER(PAR.EDE_ISO_Alpha_2_code);
  PARAMETER(PAR.EDE_USDA_Export_Mark_Sts);
  PARAMETER(PAR.EDE_Appl_Billing_First_Nm);
  PARAMETER(PAR.EDE_Appl_Billing_Last_Nm);
  PARAMETER(PAR.EDE_Country_of_Final_Dest);
  PARAMETER(PAR.EDE_I_Certify_Stmt);
  PARAMETER(PAR.EDE_Transit_Country);
  PARAMETER(PAR.EDE_Consignee_Tele_PHIS);
  PARAMETER(PAR.EDE_Consignor_Tele_PHIS);
  {
   //?USER: Process Data record

   //?R16637 DN 9/23/20-Remove All PHIS Fields & Update Only PHIS Telephone.
   EXECUTE FUNCTION(Chg Exp Doc Order Ext CH) TYPE(CHGOBJ) FILE(PUA6CPP)           AC2150708;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.ED_Export_Document_Type);
   PARAMETER(DB1.Country_Code);
   PARAMETER(DB1.EDE_Reason_f_Replcmnt_Sts);
   PARAMETER(PAR.EDE_Shipment_Type_Sts);
   PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
   PARAMETER(PAR.EDE_ISO_Alpha_2_code);
   PARAMETER(PAR.EDE_USDA_Export_Mark_Sts);
   PARAMETER(DB1.EDE_Special_Printing_Ctl);
   PARAMETER(PAR.EDE_Appl_Billing_First_Nm);
   PARAMETER(PAR.EDE_Appl_Billing_Last_Nm);
   PARAMETER(DB1.EDE_Unused_Date);
   PARAMETER(PAR.EDE_Country_of_Final_Dest);
   PARAMETER(PAR.EDE_I_Certify_Stmt);
   PARAMETER(DB1.EDE_Attachment_Type_Txt);
   PARAMETER(DB1.EDE_Attachment_Sub_Type);
   PARAMETER(PAR.EDE_Transit_Country);
   PARAMETER(DB1.EDE_Container_Number);
   PARAMETER(DB1.EDE_Unused_Text_25);
   PARAMETER(DB1.EDE_Additional_Stmt);
   PARAMETER(DB1.EDE_Maturity_lt_30_Months);
   PARAMETER(DB1.EDE_Seal_Nos);
   PARAMETER(DB1.EDE_IFS_PHIS_Doc_Filename);
   PARAMETER(DB1.EDE_Port_of_Entry);
   PARAMETER(DB1.EDE_Unused_2);
   PARAMETER(DB1.EDE_Unused_3);
   PARAMETER(DB1.EDE_Unused_4);
   PARAMETER(DB1.EDE_Unused_5);
   PARAMETER(PAR.EDE_Consignee_Tele_PHIS);
   PARAMETER(DB1.EDE_Unused_6);
   PARAMETER(DB1.EDE_Unused_7);
   PARAMETER(DB1.EDE_Unused_8);
   PARAMETER(DB1.EDE_Unused_9);
   PARAMETER(DB1.EDE_Unused_10);
   PARAMETER(DB1.EDE_Unused_11);
   PARAMETER(PAR.EDE_Consignor_Tele_PHIS);
   PARAMETER(DB1.EDE_PHIS_Process_Status);
   PARAMETER(DB1.EDE_ETL_Process_Timestamp);
   PARAMETER(DB1.EDE_PHIS_Action);
   PARAMETER(DB1.EDE_Return_Cde_Error);
   PARAMETER(DB1.EDE_Application_UID);
   PARAMETER(DB1.EDI_Status_1);
   PARAMETER(DB1.EDI_Status_2);
   PARAMETER(DB1.EDI_Status_3);
   PARAMETER(DB1.Record_Status);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

 }

 ENDIF;

 ENDIF;

}


//?E2247 RMC 10/03/12 Crt log for company change - type ORDCMP
// LCL.Company Number Alpha = CVTVAR(PAR.Company Number)
LCL.Company_Number_Alpha = CVTVAR(PAR.Company_Number);

// LCL.Company Alpha = CVTVAR(PAR.USR Hold Company Number)
LCL.Company_Alpha = CVTVAR(PAR.USR_Hold_Company_Number);

EXECUTE FUNCTION(CRT Load/Order Chg Log IF) TYPE(EXCINTFUN)                     AC1849953;
PARAMETER(LCL.Load_ID);
PARAMETER('ORDCMP');
PARAMETER('SLS');
PARAMETER(LCL.Company_Number_Alpha);
PARAMETER(LCL.Company_Alpha);
PARAMETER(PAR.USR_Hold_Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?Execute internal function

 CASE;

 // IF PAR.Load ID is Blank
 IF PAR.Load_ID = *ZERO;

 EXECUTE FUNCTION(RTV Next Key f/crt dt RT) TYPE(RTVOBJ) FILE(PDLHCPP)           AC2052180;
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(LCL.Sequence_Number);
 {
  //?USER: Initialize routine

  // PAR.Sequence Number = CON.1
  PAR.Sequence_Number = 1;

  //?USER: Processing if Data record not found

  // PAR.Sequence Number = CON.1
  PAR.Sequence_Number = 1;

  QUIT;

  //?USER: Process Data record

  CASE;

  // IF DB1.Sequence Number is EQ 999
  IF DB1.Sequence_Number = 999;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Sequence Number = DB1.Sequence Number + CON.1
  PAR.Sequence_Number = DB1.Sequence_Number + 1;

  QUIT;

  ENDIF;

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Next Key           RT) TYPE(RTVOBJ) FILE(PDLHCPP)          AC1485145;
 PARAMETER(PAR.Load_ID);
 PARAMETER(LCL.Sequence_Number);
 {
  //?USER: Initialize routine

  // PAR.Sequence Number = CON.1
  PAR.Sequence_Number = 1;

  //?USER: Processing if Data record not found

  // PAR.Sequence Number = CON.1
  PAR.Sequence_Number = 1;

  QUIT;

  //?USER: Process Data record

  CASE;

  // IF DB1.Sequence Number is EQ 999
  IF DB1.Sequence_Number = 999;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Sequence Number = DB1.Sequence Number + CON.1
  PAR.Sequence_Number = DB1.Sequence_Number + 1;

  QUIT;

  ENDIF;

 }

 ENDIF;

 //?Use system date/time to minimize dup record creation
 // Call program RTV System Date/Time   UP.
 CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(LCL.Current_System_Time);

 EXECUTE FUNCTION(CRT Load/Order Chg Log CR) TYPE(CRTOBJ) FILE(PDLHCPP)          AC1465744;
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(LCL.Current_System_Time);
 PARAMETER(LCL.Sequence_Number);
 PARAMETER(PAR.Load_ID);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Load_Change_Type);
 PARAMETER(PAR.Department_Control_Code);
 PARAMETER(PAR.Change_Log_Prior_Value);
 PARAMETER(PAR.Change_Log_New_Value);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 {
  //?USER: Processing if Data record already exists

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

  //?USER: Processing after Data update

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 //?Add seconds until it can be added successfully
 CASE;

 // IF PGM.*Return code is *Record already exists
 IF PGM.*Return_code = 'Y2U0003';

 // LCL.Created Time = LCL.Current System Time
 LCL.Created_Time = LCL.Current_System_Time;

 // DOW PGM.*Return code is *Record already exists
 DOW PGM.*Return_code = 'Y2U0003';

 // LCL.Created Time = LCL.Created Time + CON.1 *SECONDS
 LCL.Created_Time = TIMEINCR(LCL.Created_Time 1 'SC');

 EXECUTE FUNCTION(CRT Load/Order Chg Log CR) TYPE(CRTOBJ) FILE(PDLHCPP)          AC1465744;
 PARAMETER(LCL.Current_System_Date);
 PARAMETER(LCL.Created_Time);
 PARAMETER(LCL.Sequence_Number);
 PARAMETER(PAR.Load_ID);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Load_Change_Type);
 PARAMETER(PAR.Department_Control_Code);
 PARAMETER(PAR.Change_Log_Prior_Value);
 PARAMETER(PAR.Change_Log_New_Value);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 {
  //?USER: Processing if Data record already exists

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

  //?USER: Processing after Data update

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 ENDDO;

 ENDIF;

}


EXECUTE FUNCTION(Upd Co/Whse Alc b/Ord RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1705587;
PARAMETER(PAR.USR_Hold_Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Initialize routine

 //?***** PA PROCESS - USE REQUESTED SHIP DATE FOR Ship Date USR *****
 //?USER: Process Data record

 // PAR.Quantity Scheduled = CON.*ZERO
 PAR.Quantity_Scheduled = *ZERO;

 // PAR.Weight Scheduled = CON.*ZERO
 PAR.Weight_Scheduled = *ZERO;

 // Call program UPD Avail-To-Sell  ORD XF.
 CALL PROGRAM(UPD Avail-To-Sell  ORD XF) ('PDQNXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 PARAMETER('OA');
 PARAMETER('TRANSCO');
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);

 EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Quantity_Scheduled);
 PARAMETER(PAR.Weight_Scheduled);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


// Call program EDT Post Open Orders   XF.
CALL PROGRAM(EDT Post Open Orders   XF) ('PDHRXFR');
PARAMETER(PAR.USR_Hold_Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Order_Value_Total);
PARAMETER(LCL.Order_Weight_Total);
PARAMETER('OE');

