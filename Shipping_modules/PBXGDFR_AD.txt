// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBXGDFR
// ?Date: 14.08.2025 Time: 03:49:40
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.Application Code = CND.Order Management System
PAR.Application_Code = 'OMS';

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record from DBF record

//?DN R17040 03/18/21-Get TMS Cust Assigned Appt #.
EXECUTE FUNCTION(Rtv for Dsp           RT) TYPE(RTVOBJ) FILE(PBCSCPP)           AC2123480;
PARAMETER(DB1.TMS_Load_ID);
PARAMETER(DB1.TMS_Extract_Date);
PARAMETER(DB1.TMS_Extract_Time);
PARAMETER(RCD.TMS_Extract_File_Name);
PARAMETER(DB1.TMS_Event_Sequence);
PARAMETER(RCD.TMS_Event_Type);
PARAMETER(RCD.TMS_Planned_Date);
PARAMETER(RCD.TMS_Address_Type);
PARAMETER(RCD.TMS_Location_Code);
PARAMETER(LCL.TMS_Weight);
PARAMETER(LCL.TMS_Weight_UOM);
PARAMETER(RCD.TMS_Cust_Assigned_Appt_#);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Company for Ord   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2074443;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.TMS_Order_ID);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?DN R17040 03/22/21-Display the Cust Assigned Appt # if Setup for EDI 856.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV ShpTo,BillTo,OTyp RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1977668;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.TMS_Order_ID);
PARAMETER(NLL.AR_Customer_Number);
PARAMETER(NLL.Ship_To_Customer);
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(NLL.Billing_Activity_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Val Cust Setup 4/856 V2IF) TYPE(EXCINTFUN)                     AC2178250;
PARAMETER(LCL.Create_EDI_ASN_856_V2_USR);
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.TMS_Order_ID);
PARAMETER(LCL.Bill_to_Customer);
PARAMETER(NLL.EDI_Trading_Partner_No);
PARAMETER(NLL.Country_Code);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Warehouse_Location);
PARAMETER(*BLANK);
{
 //?Execute internal function

 //?VALIDATIONS: Is Bill To Customer Setup for EDI 856 ASN V2?
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 EXECUTE FUNCTION(RTV EDI ASN 856 Info  RT) TYPE(RTVOBJ) FILE(PNGQREP)           AC2177034;
 PARAMETER(PAR.Bill_to_Customer);
 PARAMETER('ADVSN');
 PARAMETER(PAR.EDI_Trading_Partner_No);
 PARAMETER(LCL.EDI_Detailed_ASN_856_Rqd);
 PARAMETER(LCL.Record_Status);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
 CASE;

 //?Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Bill To Customer Must Be Active & Setup for EDI 856.
 CASE;

 // IF LCL.EDI Detailed ASN 856 Rqd is Yes
 IF LCL.EDI_Detailed_ASN_856_Rqd = 'Y';

 // AND LCL.Record Status is Active
 AND LCL.Record_Status = 'A';

 // PAR.Create EDI ASN 856 V2 USR = CND.Yes
 PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 ENDIF;

 //?WI609_2 Check Internal or External Warehouse Qualifies for 856 ASN.
 CASE;

 // IF PAR.Create EDI ASN 856 V2 USR is Yes
 IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 EXECUTE FUNCTION(RTV 1st Whse/Country   RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1426676;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(1);
 PARAMETER(1);
 PARAMETER(LCL.Warehouse_Code);
 PARAMETER(PAR.Country_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Rtv EDI 856 ASN Info RT) TYPE(RTVOBJ) FILE(CAADREP)            AC2234972;
 PARAMETER(LCL.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Location);
 PARAMETER(LCL.WHS_Live_with_Carlisle);
 PARAMETER(NLL.WHS_PFS_Interface);
 PARAMETER(LCL.Crt_856_ASN_for_3PL_Whse);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // PAR.Warehouse Location = LCL.Warehouse Location
 PAR.Warehouse_Location = LCL.Warehouse_Location;

 CASE;

 // IF LCL.Warehouse Location is Internal (Plant)
 IF LCL.Warehouse_Location = 'I';

 // AND LCL.WHS Live w/Carlisle is Yes
 AND LCL.WHS_Live_with_Carlisle = 'Y';

 // PAR.Create EDI ASN 856 V2 USR = CND.Yes
 PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 // PAR.Warehouse Code = LCL.Warehouse Code
 PAR.Warehouse_Code = LCL.Warehouse_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 //?WI609_2 JM 10/08/24-Allow External 3PL Warehouses to Receive EDI 856 ASN.
 CASE;

 // IF LCL.Warehouse Location is External
 IF LCL.Warehouse_Location = 'E';

 CASE;

 // IF LCL.Crt 856 ASN for 3PL Whse is Yes
 IF LCL.Crt_856_ASN_for_3PL_Whse = 'Y';

 // PAR.Create EDI ASN 856 V2 USR = CND.Yes
 PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 // PAR.Warehouse Code = LCL.Warehouse Code
 PAR.Warehouse_Code = LCL.Warehouse_Code;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?WI609_2 JM 10/08/24-Check EDI Manual PO.
 CASE;

 // IF PAR.Create EDI ASN 856 V2 USR is Yes
 IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 // Call program Rtv EDI Manual PO Sts XF.
 CALL PROGRAM(Rtv EDI Manual PO Sts XF) ('PUTBXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER('ADVSN');
 PARAMETER(LCL.Send_EDI_Document_Y_N);

 //?If Send EDI Documents = N, set Create EDI ASN 856 V2 USR = N
 CASE;

 // IF LCL.Send EDI Document Y/N is No
 IF LCL.Send_EDI_Document_Y_N = 'N';

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


//?Eligible for EDI 856? No, Clear Cust Assigned Appt # on Screen.
CASE;

// IF LCL.Create EDI ASN 856 V2 USR is Yes
IF LCL.Create_EDI_ASN_856_V2_USR = 'Y';

//?Eligible for EDI 856? No, Clear Cust Assigned Appt # on Screen.
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.TMS Cust Assigned Appt # = CON.*BLANK
RCD.TMS_Cust_Assigned_Appt_# = *BLANK;

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// Call program DSP Ord Inquiry Detail DF.
CALL PROGRAM(DSP Ord Inquiry Detail DF) ('PDPZDFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.TMS_Order_ID);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
PARAMETER(CTL.Application_Code);

ENDIF;

