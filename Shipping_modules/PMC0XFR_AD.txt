// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMC0XFR
// ?Date: 14.08.2025 Time: 03:42:39
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?This should not be run in production only in test
EXECUTE FUNCTION(Upd TestD By Co/Ord   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1804740;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Process Data record

 //?11/01/2024  PKD Save the Price Audit & Price Status
 // PAR.Price Audit = DB1.Price Audit
 PAR.Price_Audit = DB1.Price_Audit;

 // PAR.Price Status = DB1.Price Status
 PAR.Price_Status = DB1.Price_Status;

 //?-----
 EXECUTE FUNCTION(RTV Type Code          RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1441836;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Type_Code);
 PARAMETER(NLL.Customer_Group_Code);
 PARAMETER(NLL.Customer_Group_Code_2);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?E4057 JJH 06/04/15 - Allow Un-Invoice of CM and DM
 //?11/01/2024 PKD Added Price Audit and Price Status to Parms on OH Change
 DO;

 //?For Orders - Change to unpriced and needs price audit
 //?so the pricing routine at the end will go through
 //?re-extending the dollars amounts.
 ENDDO;

 CASE;

 // IF DB1.Order Type - Sales is Credit Memo
 IF DB1.Order_Type_Sales = 'CM';

 // OR DB1.Order Type - Sales is Credit Memo CB
 OR DB1.Order_Type_Sales = 'CB';

 // OR DB1.Order Type - Sales is Debit Memo
 OR DB1.Order_Type_Sales = 'DM';

 // OR DB1.Order Type - Sales is Debit Memo DB
 OR DB1.Order_Type_Sales = 'DB';

 //?Header Status                 FLD   CND Available
 EXECUTE FUNCTION(Chg TestD for OrdHdr  CH) TYPE(CHGOBJ) FILE(OPBFCPP)           AC1804741;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('A');
 PARAMETER('N');
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER('04');
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Header Status                 FLD   CND Confirmed
 EXECUTE FUNCTION(Chg TestD for OrdHdr  CH) TYPE(CHGOBJ) FILE(OPBFCPP)           AC1804741;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('R');
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER('U');
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER('04');
 ENDIF;

 EXECUTE FUNCTION(RTV TestDta OD        RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1804743;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('R');
 PARAMETER('04');
 PARAMETER(LCL.Type_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.Type Code is Inter Company
  IF PAR.Type_Code = 'IC';

  // PAR.Price Overage Override = CON.*ZERO
  PAR.Price_Overage_Override = *ZERO;

  // PAR.Price Status = CND.Unpriced
  PAR.Price_Status = 'U';

  // PAR.Price Audit = CND.No Audit
  PAR.Price_Audit = *BLANK;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Price Overage Override = DB1.Price Overage Override
  PAR.Price_Overage_Override = DB1.Price_Overage_Override;

  // PAR.Price Status = CND.Unpriced
  PAR.Price_Status = 'U';

  // PAR.Price Audit = CND.Needs Price Audit
  PAR.Price_Audit = 'N';

  ENDIF;

  EXECUTE FUNCTION(Chg TestD for Ord Dtl CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1804746;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Detail_Line_Status);
  PARAMETER(PAR.Price_Overage_Override);
  PARAMETER(PAR.Price_Status);
  PARAMETER(PAR.Price_Audit);
  PARAMETER(PAR.Event_Code);
 }

 EXECUTE FUNCTION(RTV TestD Ord Events  RT) TYPE(RTVOBJ) FILE(OPEYCPP)           AC1804748;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.Event Code is Entered Thru 04 Shipped
  IF DB1.Event_Code >= '01';
  AND DB1.Event_Code <= '04';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(DLT OP Order Events    DL) TYPE(DLTOBJ) FILE(OPEYCPP)          AC1170143;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Event_Number);
  ENDIF;

 }

 EXECUTE FUNCTION(RTV TestD Load Hdr    RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1804910;
 PARAMETER(DB1.Load_ID);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Testd LoadHeader  CH) TYPE(CHGOBJ) FILE(OMFJCPP)           AC1804911;
  PARAMETER(DB1.Load_ID);
  PARAMETER('S');
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 EXECUTE FUNCTION(RTV Testb ShpDtlAcrl  RT) TYPE(RTVOBJ) FILE(OMHRCPP)           AC1845943;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt OM Ship Dtl Accrl  DL) TYPE(DLTOBJ) FILE(OMHRCPP)          AC1595109;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Sequence_Number);
 }

 EXECUTE FUNCTION(RTV Whse Acct Co      RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1809259;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(PAR.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  QUIT;

 }

 EXECUTE FUNCTION(RTV Testb Sales Hst   RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1804974;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Testb Sales Hst   DO) TYPE(DLTOBJ) FILE(OMHSTPP)           AC1804975;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
 }

 EXECUTE FUNCTION(RTV Testb Sales HstEx RT) TYPE(RTVOBJ) FILE(PMD0CPP)           AC2059001;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Delete Sales History EXT) TYPE(DLTOBJ) FILE(PMD0CPP)           AC1886774;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
 }

 EXECUTE FUNCTION(Rtv/Dlt if Recald     RT) TYPE(RTVOBJ) FILE(POALCPP)           AC1598602;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Dlt Sales History Exp DL) TYPE(DLTOBJ) FILE(POALCPP)           AC1597713;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Sales_Expense_Code);
 }

 EXECUTE FUNCTION(RTV Testb HistDtlAcrl RT) TYPE(RTVOBJ) FILE(PDICCPP)           AC1845950;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del History Dtl Accrl DL) TYPE(DLTOBJ) FILE(PDICCPP)           AC1845951;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Sequence_Number);
 }

 EXECUTE FUNCTION(RTV Testb HistPrcDtl  RT) TYPE(RTVOBJ) FILE(PDINCPP)           AC1846603;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del History Price Dtl DL) TYPE(DLTOBJ) FILE(PDINCPP)           AC1846604;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.Price_Method_Componant);
 }

 EXECUTE FUNCTION(Rtv Testb HistDtlAcrl RT) TYPE(RTVOBJ) FILE(ARBDCPP)           AC1847410;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(DLT A/R Header         DL) TYPE(DLTOBJ) FILE(ARBDCPP)          AC1108150;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
 }

 EXECUTE FUNCTION(Rtv Testb HistDtlAcrl RT) TYPE(RTVOBJ) FILE(ARBECPP)           AC2236764;
 PARAMETER(LCL.Accounting_Company);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(DLT A/R Detail         DL) TYPE(DLTOBJ) FILE(ARBECPP)          AC1109993;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Sequence_Number);
 }

 EXECUTE FUNCTION(Rtv Plant Co/Org      RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1826265;
 PARAMETER(DB1.Company_Number);
 PARAMETER(NLL.Plant_Company_Sts);
 PARAMETER(LCL.Company_Organization);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Company Organization is Daily's
 IF LCL.Company_Organization = 'D';

 ENDIF;

 //?CLEAR OMP300 jde work file per rose
 // Execute command - 'CLRPFM'
 EXECUTE COMMAND(USR2862);
 PARAMETER('OMP300');

 //?11/02/2024 - Added to reprice and reextend the dollar values.
 // Call program CLC Price/Price Audit  XF.
 CALL PROGRAM(CLC Price/Price Audit  XF) ('PDPRXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('PM');
 PARAMETER(WRK.Order_Value_Total);
 PARAMETER(WRK.Order_Weight_Total);
 PARAMETER(WRK.Production_Hold);
 PARAMETER(*NO);

 //?11/01/2024 PKD Change Price Audit to what it was originally
 EXECUTE FUNCTION(CHG Price Audit        CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1309247;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Price_Audit);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

}


