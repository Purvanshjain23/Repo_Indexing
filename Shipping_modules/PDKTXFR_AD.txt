// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDKTXFR
// ?Date: 14.08.2025 Time: 03:35:00
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?History
DO;

//?10/03/2007 FP1061 If action is on the Un-Confirm list
//?           then perform the Un-Confirm on the Load Header
//?E3796 JJH 03/05/15 - Removed "Requested Ship Date" from "Un-Confirm
//? Load List" of "Load Change Type" field.  Thus, recompile program.
ENDDO;

EXECUTE FUNCTION(RTV Carrier Broker     RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1475617;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Carrier_Broker_Carrier_Co);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Next Key           RT) TYPE(RTVOBJ) FILE(PDLHCPP)          AC1485145;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Sequence_Number);
{
 //?USER: Initialize routine

 // PAR.Sequence Number = CON.1
 PAR.Sequence_Number = 1;

 //?USER: Processing if Data record not found

 // PAR.Sequence Number = CON.1
 PAR.Sequence_Number = 1;

 QUIT;

 //?USER: Process Data record

 CASE;

 // IF DB1.Sequence Number is EQ 999
 IF DB1.Sequence_Number = 999;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Sequence Number = DB1.Sequence Number + CON.1
 PAR.Sequence_Number = DB1.Sequence_Number + 1;

 QUIT;

 ENDIF;

}


EXECUTE FUNCTION(CRT Load/Order Chg Log CR) TYPE(CRTOBJ) FILE(PDLHCPP)          AC1465744;
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(PAR.Sequence_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Stop_Drop);
PARAMETER(PAR.Load_Change_Type);
PARAMETER(PAR.Department_Control_Code);
PARAMETER(PAR.Change_Log_Prior_Value);
PARAMETER(PAR.Change_Log_New_Value);
PARAMETER(PAR.User_Id);
PARAMETER(PAR.Job_Name);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Carrier_Broker_Carrier_Co);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 //?USER: Processing after Data update

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?added new rtv to pull in the Confirm information
//?removed the RTV Load Status
EXECUTE FUNCTION(RTV Load Status&ConfirmRT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1849941;
PARAMETER(PAR.Load_ID);
PARAMETER(LCL.Load_Status);
PARAMETER(LCL.Transloader_Carrier_Code);
PARAMETER(LCL.Load_Confirmed_Sts);
PARAMETER(LCL.Load_Confirmed_Contact);
PARAMETER(LCL.Load_Confirmation_Time);
PARAMETER(LCL.Load_Confirmation_Fax_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 MOVE *ALL (To: PAR From: DB1);

}


//?If this is a confirmed load,unconfirm load if needed
DO;

//?If confirmed load but the action states to make this a
//?unconfirmed load, then
//?Write out the action of Unconfirm and then update the load
//?with n = load confirmed status, and load confirmed contact
//?of blanks and load confirmation time = zero
//?UnConfirm Routine
CASE;

// IF LCL.Load Confirmed Sts is yes
IF LCL.Load_Confirmed_Sts = 'Y';

// AND PAR.Load Change Type is Un-Confirm Load List
AND PAR.Load_Change_Type = 'ADDSTP'/'CARCHG'/'CHGSTP'/'CHGWHS'/'DELOAD'/'DELODA'                   +
/'DELORD'/'LDDLTD'/'CHGLCO'/'RQSDLV'/'ADDORD'/'CANORD'/'SCHSHP'/'SHPCST'/'SHPMTH'                  +
/'PO#CHG';

// WRK.Load Confirmed Sts = LCL.Load Confirmed Sts
WRK.Load_Confirmed_Sts = LCL.Load_Confirmed_Sts;

// LCL.Load Confirmed Sts = CND.no
LCL.Load_Confirmed_Sts = 'N';

EXECUTE FUNCTION(RTV Stop Number       RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC1197795;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.@Calc_50);
PARAMETER(PAR.Order_Number);
PARAMETER(WRK.Numeric_Field_Not_Needed);
PARAMETER(WRK.Numeric_Field_Not_Needed);
{
 //?USER: Initialize routine

 // PAR.Stop/Drop = CON.*ZERO
 PAR.Stop_Drop = *ZERO;

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?If order number is found, retrieve stop number
 CASE;

 // IF PAR.Order Number EQ DB1.Order Number
 IF PAR.Order_Number = DB1.Order_Number;

 // PAR.Stop/Drop = DB1.Stop/Drop
 PAR.Stop_Drop = DB1.Stop_Drop;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


EXECUTE FUNCTION(RTV Carrier Broker     RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1475617;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Carrier_Broker_Carrier_Co);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?**************************************************************************
//?*Comments:
//?*  The following Retrieve Next Key was added for OMS296.  It was
//?*  needed when the users wanted to be able to see the orders added
//?*  and deleted from the Load Change Log.  John Tremper, 10/10/97
//?**************************************************************************
EXECUTE FUNCTION(RTV Next Key           RT) TYPE(RTVOBJ) FILE(PDLHCPP)          AC1485145;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Sequence_Number);
{
 //?USER: Initialize routine

 // PAR.Sequence Number = CON.1
 PAR.Sequence_Number = 1;

 //?USER: Processing if Data record not found

 // PAR.Sequence Number = CON.1
 PAR.Sequence_Number = 1;

 QUIT;

 //?USER: Process Data record

 CASE;

 // IF DB1.Sequence Number is EQ 999
 IF DB1.Sequence_Number = 999;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Sequence Number = DB1.Sequence Number + CON.1
 PAR.Sequence_Number = DB1.Sequence_Number + 1;

 QUIT;

 ENDIF;

}


// PGM.*Return code = CND.*Record already exists
PGM.*Return_code = 'Y2U0003';

//?Loop thru to do create
// DOW PGM.*Return code is *Record already exists
DOW PGM.*Return_code = 'Y2U0003';

//?If order being processed, and no stop passed in, use load stop.
CASE;

// IF PAR.Order Number NE WRK.ZERO
IF PAR.Order_Number <> WRK.ZERO;

CASE;

// IF PAR.Stop/Drop EQ WRK.ZERO
IF PAR.Stop_Drop = WRK.ZERO;

// PAR.USR Stop/Drop = PAR.@Calc 5,0
PAR.USR_Stop_Drop = PAR.@Calc_50;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.USR Stop/Drop = PAR.Stop/Drop
PAR.USR_Stop_Drop = PAR.Stop_Drop;

ENDIF;

ENDIF;

//?WRITE OUT THE UNCONFIRM RECORD
// WRK.Load Change Type = CND.Un-Confirm Load
WRK.Load_Change_Type = 'UNCNFM';

// WRK.Change Log Prior Value = WRK.Load Confirmed Sts
WRK.Change_Log_Prior_Value = WRK.Load_Confirmed_Sts;

// WRK.Change Log New Value = LCL.Load Confirmed Sts
WRK.Change_Log_New_Value = LCL.Load_Confirmed_Sts;

EXECUTE FUNCTION(CRT Load/Order Chg Log CR) TYPE(CRTOBJ) FILE(PDLHCPP)          AC1465744;
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(PAR.Sequence_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.USR_Stop_Drop);
PARAMETER(WRK.Load_Change_Type);
PARAMETER(PAR.Department_Control_Code);
PARAMETER(WRK.Change_Log_Prior_Value);
PARAMETER(WRK.Change_Log_New_Value);
PARAMETER(PAR.User_Id);
PARAMETER(PAR.Job_Name);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Carrier_Broker_Carrier_Co);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 //?USER: Processing after Data update

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// PAR.Sequence Number = PAR.Sequence Number + CON.1
PAR.Sequence_Number = PAR.Sequence_Number + 1;

ENDIF;

ENDDO;

//?Change the Load Header back to a Unconfirmed Load
//?Now the producer to carrier will need to confirm the load
//?again
// LCL.Load Confirmed Contact = CON.*BLANK
LCL.Load_Confirmed_Contact = *BLANK;

// LCL.Load Confirmation Time = CON.*ZERO
LCL.Load_Confirmation_Time = *ZERO;

EXECUTE FUNCTION(CHG Load Confirm to N  CH) TYPE(CHGOBJ) FILE(OMFJCPP)          AC1847496;
PARAMETER(PAR.Load_ID);
PARAMETER(LCL.Load_Confirmed_Sts);
PARAMETER(LCL.Load_Confirmed_Contact);
PARAMETER(LCL.Load_Confirmation_Time);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


ENDIF;

ENDDO;

PGM.*Return_code = *BLANK;

RETURN;

