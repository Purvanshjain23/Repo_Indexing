// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDUPE1R
// ?Date: 14.08.2025 Time: 03:33:12
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?If key is not sent, program is put into add mode.
CASE;

// IF PAR.Shipping Line is not entered
IF PAR.Shipping_Line = *BLANK;

// OR PAR.Sail Port City is Not Entered
OR PAR.Port_Delv_Terminal = *BLANK;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

//?If key is not sent, program is put into add mode.
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Program mode = CND.*CHANGE
PGM.*Program_mode = 'CHG';

ENDIF;

//?** See if we are Live with TPM to control display and edit  P002045
//?USER: Validate key screen

CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

//?Select Shipping Line
CASE;

// IF KEY.*CMD key is *Prompt
IF KEY.*CMD_key = '04';

// AND PGM.*Cursor field <IS> KEY.USR Ship Via
AND PGM.*Cursor_field = KEY.USR_Ship_Via;

// Call program SEL Active Carrier     SR.
CALL PROGRAM(SEL Active Carrier     SR) ('OMY6SRR');
PARAMETER(KEY.USR_Ship_Via);

ENDIF;

//?Validate Shipping Line
CASE;

// IF KEY.USR Ship Via is entered
IF KEY.USR_Ship_Via <> *BLANK;

EXECUTE FUNCTION(RTV Carrier Name       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1382687;
PARAMETER(KEY.USR_Ship_Via);
PARAMETER(KEY.Name);
PARAMETER(PAR.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Shipping line &1 not found'
ERROR(USR2431);
MSGPARM(KEY.USR_Ship_Via);

ENDIF;

//?Validate Shipping Line
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Shipping line is required'
ERROR(USR2432);

ENDIF;

//?Validate Sail Port City is entered
CASE;

// IF KEY.USR City is Blank
IF KEY.USR_City = *BLANK;

// Send error message - 'Sail Port City is required'
ERROR(USR2433);

ENDIF;

ENDIF;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

// PAR.Record Status = CND.Active
PAR.Record_Status = 'A';

// DTL.Status Description = Condition name of DTL.Record Status
DTL.Status_Description = RTVCND(DTL.Record_Status);

// DTL.Shipping Line = KEY.USR Ship Via
DTL.Shipping_Line = KEY.USR_Ship_Via;

// DTL.Sail Port Delv Terminal = KEY.USR City
DTL.Port_Delv_Terminal = KEY.USR_City;

//?USER: Initialize detail screen (existing record)

// DTL.Shipping Line = PAR.Shipping Line
DTL.Shipping_Line = PAR.Shipping_Line;

// DTL.Sail Port City = PAR.Sail Port City
DTL.Port_Delv_Terminal = PAR.Port_Delv_Terminal;

// DTL.Status Description = Condition name of DB1.Record Status
DTL.Status_Description = RTVCND(DB1.Record_Status);

// DTL.Record Status = DB1.Record Status
DTL.Record_Status = DB1.Record_Status;

// PAR.Record Status = DB1.Record Status
PAR.Record_Status = DB1.Record_Status;

EXECUTE FUNCTION(RTV State Description  RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1227485;
PARAMETER(DTL.Sail_Port_State);
PARAMETER(DTL.State_Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?DO4595 DN 02/10/23-Populate CBP Screen Fields.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv CBP Info f/EDI 601 RT) TYPE(RTVOBJ) FILE(PUC1REP)          AC2211898;
PARAMETER(DB1.Shipping_Line);
PARAMETER(DB1.Port_Delv_Terminal);
PARAMETER(DTL.CBP_Export_Port_Code);
PARAMETER(DTL.CBP_Std_Carrier_Alpha_Cde);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Validate detail screen fields

CASE;

// IF DTL.*CMD key is CF09
IF DTL.*CMD_key = '09';

// Call program EDT Mileage Bet Cities EF.
CALL PROGRAM(EDT Mileage Bet Cities EF) ('PDWNEFR');

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?F4=Prompt for TPM Location Code if Live with TPM      P002045
CASE;

// IF PGM.*Cursor field <IS> DTL.TPM Location Code
IF PGM.*Cursor_field = DTL.TPM_Location_Code;

//?RMC 5/23/16 E4119 remove live with tpm=No check
//?* Change SEL to select any facility type
// WRK.TPM Location Code = CND.NOT ENTERED
WRK.TPM_Location_Code = *BLANK;

// WRK.TPM Facility Type = CND.Not Entered
WRK.TPM_Facility_Type = *BLANK;

// Call program SEL TPM Location Code  SL.
CALL PROGRAM(SEL TPM Location Code  SL) ('PBFASRR');
PARAMETER(WRK.TPM_Facility_Type);
PARAMETER(WRK.TPM_Location_Code);

CASE;

// IF WRK.TPM Location Code is ENTERED
IF WRK.TPM_Location_Code <> *BLANK;

// DTL.TPM Location Code = WRK.TPM Location Code
DTL.TPM_Location_Code = WRK.TPM_Location_Code;

ENDIF;

ENDIF;

ENDIF;

// DTL.Status Description = Condition name of DTL.Record Status
DTL.Status_Description = RTVCND(DTL.Record_Status);

EXECUTE FUNCTION(RTV State Description  RT) TYPE(RTVOBJ) FILE(CAACREP)          AC1227485;
PARAMETER(DTL.Sail_Port_State);
PARAMETER(DTL.State_Description);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Val Mileage Existance RT) TYPE(RTVOBJ) FILE(PDLFREP)           AC1557065;
PARAMETER(DTL.Port_City);
PARAMETER(DTL.Sail_Port_State);
PARAMETER(PAR.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


CASE;

// IF PAR.Record Found USR is Record Not Found
IF PAR.Record_Found_USR = 'N';

// Send information message - 'Miles to &1, &2 not found in the Mileage file.'
MESSAGE(USR2834 *INFO);
MSGPARM(DTL.Port_City);
MSGPARM(DTL.Sail_Port_State);

ENDIF;

//?DO4595 DN 02/07/23-Validations for CBP Screen Fields.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Validate CBP Export Port Code.
CASE;

// IF DTL.CBP Std Carrier Alpha Cde is Entered
IF DTL.CBP_Std_Carrier_Alpha_Cde <> *BLANK;

// AND DTL.CBP Export Port Code is Not Entered
AND DTL.CBP_Export_Port_Code = *ZERO;

// LCL.Generic Message 80 USR = CON.CBP ExpC is required.
LCL.Generic_Message_80_USR = 'CBP ExpC is required.';

// LCL.Generic Message 80 USR = CONCAT(CON.CBP Export Port Code is,CON.required.,CON.1)
LCL.Generic_Message_80_USR = 'CBP Export Port Code is' + 'required.' (1);

// Send error message - '&1'
ERROR(USR5117);
MSGPARM(LCL.Generic_Message_80_USR);
MSGPARM(DTL.CBP_Export_Port_Code);

QUIT;

ENDIF;

//?Validate CBP SCAC.
CASE;

// IF DTL.CBP Export Port Code is Entered
IF DTL.CBP_Export_Port_Code <> 0;

// AND DTL.CBP Std Carrier Alpha Cde is Not Entered
AND DTL.CBP_Std_Carrier_Alpha_Cde = *BLANK;

// LCL.Generic Message 80 USR = CON.CBP SCAC is required.
LCL.Generic_Message_80_USR = 'CBP SCAC is required.';

// Send error message - '&1'
ERROR(USR5085);
MSGPARM(LCL.Generic_Message_80_USR);
MSGPARM(DTL.CBP_Std_Carrier_Alpha_Cde);

QUIT;

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT PD Ship Line/Port  CR) TYPE(CRTOBJ) FILE(PDLCREP)          AC1446956;
PARAMETER(DTL.Shipping_Line);
PARAMETER(DTL.Port_Delv_Terminal);
PARAMETER(DTL.Port_City);
PARAMETER(DTL.Port_Address_Line_1);
PARAMETER(DTL.Port_Address_Line_2);
PARAMETER(DTL.Sail_Port_State);
PARAMETER(DTL.Port_Zip_Postal_Code);
PARAMETER(DTL.Port_Phone_Number);
PARAMETER(DTL.Port_Fax_Number);
PARAMETER(DTL.TPM_Location_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
PARAMETER(DTL.CBP_Export_Port_Code);
PARAMETER(DTL.CBP_Std_Carrier_Alpha_Cde);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 //?DO4595 DN 02/08/23-Create Shipping Line/Port Extsn (PUC1REP) Record.
 EXECUTE FUNCTION(Crt Ship Line/Port Ext CR) TYPE(CRTOBJ) FILE(PUC1REP)          AC2211885;
 PARAMETER(DB1.Shipping_Line);
 PARAMETER(DB1.Port_Delv_Terminal);
 PARAMETER(PAR.CBP_Export_Port_Code);
 PARAMETER(PAR.CBP_Std_Carrier_Alpha_Cde);
 PARAMETER(LCL.SLPE_Unused_Sts_1);
 PARAMETER(LCL.SLPE_Unused_Sts_2);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG PD Ship Line/Port2 CH) TYPE(CHGOBJ) FILE(PDLCREP)          AC2211990;
PARAMETER(DTL.Shipping_Line);
PARAMETER(DTL.Port_Delv_Terminal);
PARAMETER(DTL.Port_City);
PARAMETER(DTL.Port_Address_Line_1);
PARAMETER(DTL.Port_Address_Line_2);
PARAMETER(DTL.Sail_Port_State);
PARAMETER(DTL.Port_Zip_Postal_Code);
PARAMETER(DTL.Port_Phone_Number);
PARAMETER(DTL.Port_Fax_Number);
PARAMETER(DTL.TPM_Location_Code);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.CBP_Export_Port_Code);
PARAMETER(DTL.CBP_Std_Carrier_Alpha_Cde);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(Upd Ship Line/Port Ext RT) TYPE(RTVOBJ) FILE(PUC1REP)          AC2211991;
 PARAMETER(DB1.Shipping_Line);
 PARAMETER(DB1.Port_Delv_Terminal);
 PARAMETER(PAR.CBP_Export_Port_Code);
 PARAMETER(PAR.CBP_Std_Carrier_Alpha_Cde);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Ship Line/Port Ext CH) TYPE(CHGOBJ) FILE(PUC1REP)          AC2211886;
  PARAMETER(DB1.Shipping_Line);
  PARAMETER(DB1.Port_Delv_Terminal);
  PARAMETER(PAR.CBP_Export_Port_Code);
  PARAMETER(PAR.CBP_Std_Carrier_Alpha_Cde);
  PARAMETER(DB1.SLPE_Unused_Sts_1);
  PARAMETER(DB1.SLPE_Unused_Sts_2);
  PARAMETER(DB1.SLPE_Unused_Cde_1);
  PARAMETER(DB1.SLPE_Unused_Cde_2);
  PARAMETER(DB1.SLPE_Unused_Nbr_1);
  PARAMETER(DB1.SLPE_Unused_Dte_1);
  PARAMETER(DB1.SLPE_Unused_Txt_1);
  PARAMETER(DB1.SLPE_Unused_Txt_2);
  PARAMETER(DB1.Record_Status);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

}


//?USER: Process command keys

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

QUIT;

ENDIF;

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

