// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNQNXFR
// ?Date: 14.08.2025 Time: 03:46:11
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Error Flag            USR = CND.No
PAR.Error_Flag_USR = 'N';

//?Get the Chill time either the item or the warehouse
// LCL.Chilling Time USR = CON.*ZERO
LCL.Chilling_Time_USR = *ZERO;

EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(NLL.Description_Line_One);
PARAMETER(NLL.UOM_Primary);
PARAMETER(NLL.Unit_Weight);
PARAMETER(NLL.Item_Structure_Class_Code);
PARAMETER(NLL.Item_Structure_Group_Code);
PARAMETER(NLL.Item_Structure_Type_Code);
PARAMETER(NLL.Item_Type_Code);
PARAMETER(NLL.Default_Warehouse);
PARAMETER(LCL.Fresh_Chilling_Time);
PARAMETER(NLL.Base_Conv_Loss_Item);
PARAMETER(NLL.Variety_Rendered_Cut);
PARAMETER(NLL.Credit_Item_Status);
PARAMETER(NLL.Std_Weight_Head_Var_Ren);
PARAMETER(NLL.Pieces_Per_Head);
PARAMETER(NLL.Department_Code);
PARAMETER(NLL.Group_for_Packaging);
PARAMETER(NLL.Seconds_Item);
PARAMETER(NLL.Piece_Count_Item);
PARAMETER(NLL.Pieces_Per_Bag);
PARAMETER(NLL.Bags_Per_Unit);
PARAMETER(NLL.Export_Domestic);
PARAMETER(NLL.Print_On_Schedule);
PARAMETER(NLL.Fresh_Inv_Allocation_Seq);
PARAMETER(NLL.Fresh_Sched_As_Ordered);
PARAMETER(NLL.Frozen_Inv_Allocation_Seq);
PARAMETER(NLL.Primal_Group_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(NLL.Warehouse_Type);
PARAMETER(NLL.Trans_Contol_AS400_Plant);
PARAMETER(NLL.Warehouse_Location);
PARAMETER(LCL.Warehouse_Std_Chill_Time);
PARAMETER(LCL.Warehouse_Chill_Time);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Description_Line_One);
 PARAMETER(PAR.UOM_Primary);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Item_Type_Code);
 PARAMETER(PAR.Default_Warehouse);
 PARAMETER(PAR.Fresh_Chilling_Time);
 PARAMETER(PAR.Base_Conv_Loss_Item);
 PARAMETER(PAR.Variety_Rendered_Cut);
 PARAMETER(PAR.Credit_Item_Status);
 PARAMETER(PAR.Std_Weight_Head_Var_Ren);
 PARAMETER(PAR.Pieces_Per_Head);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Group_for_Packaging);
 PARAMETER(PAR.Seconds_Item);
 PARAMETER(PAR.Piece_Count_Item);
 PARAMETER(PAR.Pieces_Per_Bag);
 PARAMETER(PAR.Bags_Per_Unit);
 PARAMETER(PAR.Export_Domestic);
 PARAMETER(PAR.Print_On_Schedule);
 PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
 PARAMETER(PAR.Fresh_Sched_As_Ordered);
 PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
 PARAMETER(PAR.Primal_Group_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.Trans_Contol_AS400_Plant);
 PARAMETER(PAR.Warehouse_Location);
 PARAMETER(PAR.Warehouse_Std_Chill_Time);
 PARAMETER(PAR.Warehouse_Chill_Time);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF LCL.Warehouse Std Chill Time is yes
IF LCL.Warehouse_Std_Chill_Time = 'Y';

// LCL.Chilling Time USR = LCL.Warehouse Chill Time
LCL.Chilling_Time_USR = LCL.Warehouse_Chill_Time;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Chilling Time USR = LCL.Fresh Chilling Time
LCL.Chilling_Time_USR = LCL.Fresh_Chilling_Time;

ENDIF;

//?information
DO;

//?Error Condition:
//?Product can not be made after the product is shipped
//?Calculate the "Made" production date to verify if
//?the from production is greater then the to production
//?date *** Error condition
ENDDO;

// Call program CLC PA Age FrmToDates XF.
CALL PROGRAM(CLC PA Age FrmToDates XF) ('PNO7XFR');
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Chilling_Time_USR);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Requested_Delivery_Date);
PARAMETER(PAR.Item_Age_Days);
PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
PARAMETER(PAR.Production_Ovr_AgeDte_To);
PARAMETER(PAR.Production_AgeDte_Fr);
PARAMETER(PAR.Production_AgeDte_To);

//?validation 1    Product is made after shipping date
CASE;

// IF PAR.Production AgeDte Fr GT PAR.Production AgeDte To
IF PAR.Production_AgeDte_Fr > PAR.Production_AgeDte_To;

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

// PAR.Error Reason Descript 1 = CON.prd made after ship date
PAR.Error_Reason_Descript_1 = 'prd made after ship date';

ENDIF;

//?validation 2   Days AND ovr dates from/to are not allowed
CASE;

// IF PAR.Item Age Days is Entered
IF PAR.Item_Age_Days <> *ZERO;

CASE;

// IF PAR.Production Ovr AgeDte Fr is Entered
IF PAR.Production_Ovr_AgeDte_Fr <> *ZERO;

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

// PAR.Error Reason Descript 2 = CON.days and dates nallowed
PAR.Error_Reason_Descript_2 = 'days and dates nallowed';

ENDIF;

ENDIF;

//?validation 3 with chill time days or ovr dates are required
CASE;

// IF LCL.Chilling Time USR is GT Zero
IF LCL.Chilling_Time_USR > *ZERO;

//?validation 3
CASE;

// IF PAR.Item Age Days is Not Entered
IF PAR.Item_Age_Days = *ZERO;

//?if item age days  not entered
CASE;

// IF PAR.Production Ovr AgeDte Fr is not entered
IF PAR.Production_Ovr_AgeDte_Fr = *ZERO;

//?and date over ridden is not entered
// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

// PAR.Error Reason Descript 3 = CON.days or dates required
PAR.Error_Reason_Descript_3 = 'days or dates required';

ENDIF;

ENDIF;

ENDIF;

//?validation 4  & 5
CASE;

// IF PAR.Item Age Days is Not Entered
IF PAR.Item_Age_Days = *ZERO;

//?if item age days  not entered
CASE;

// IF PAR.Production Ovr AgeDte Fr LE PAR.Scheduled Ship Date
IF PAR.Production_Ovr_AgeDte_Fr <= PAR.Scheduled_Ship_Date;

//?and date over ridden is not entered
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

// PAR.Error Reason Descript 4 = CON.Frm date > ship date
PAR.Error_Reason_Descript_4 = 'Frm date > ship date';

ENDIF;

CASE;

// IF PAR.Production Ovr AgeDte To LE PAR.Scheduled Ship Date
IF PAR.Production_Ovr_AgeDte_To <= PAR.Scheduled_Ship_Date;

//?and date over ridden is not entered
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

// PAR.Error Reason Descript 5 = CON.to date > ship date
PAR.Error_Reason_Descript_5 = 'to date > ship date';

ENDIF;

ENDIF;

