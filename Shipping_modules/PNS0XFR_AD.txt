// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNS0XFR
// ?Date: 14.08.2025 Time: 03:46:27
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?FP1054 Post orders as they are processed to see if they can come off of
//? prod hold
//?FP1054 6/17/09 REalloc if Prod Plan is " " = Y
CASE;

// IF PAR.Load ID EQ WRK.ZERO
IF PAR.Load_ID = WRK.ZERO;

RETURN;

ENDIF;

EXECUTE FUNCTION(Val ShpDt Alloc ByLoad RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1994471;
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Program_name_USR);
PARAMETER(PAR.Error_Status_3);
{
 //?USER: Initialize routine

 //?05/14/04 SLM PKTR01 Multi-Company - Funct chg remove Company RST or Pos
 EXECUTE FUNCTION(FP1309 Inventory Age  IF) TYPE(EXCINTFUN)                      AC1981251;
 {
  //?Execute internal function

  //?FP1309 Inventory Age Code Description
 }

 //?USER: Process Data record

 // PAR.Error Status  3 = CND.No
 PAR.Error_Status_3 = 'N';

 //?Add the requested delivery update in the same place
 // WRK.Scheduled Ship Date USR = DB1.Scheduled Ship Date
 WRK.Scheduled_Ship_Date_USR = DB1.Scheduled_Ship_Date;

 // Call program RTV Co. Dflt Int All   XF.
 CALL PROGRAM(RTV Co. Dflt Int All   XF) ('PDSTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(NLL.Shipping_Method_Dft);
 PARAMETER(NLL.Load_Type_Dft);
 PARAMETER(NLL.LTL_Flag_Dft);
 PARAMETER(NLL.Export_Status_Dft);
 PARAMETER(NLL.Shrink_Wrap_Dft);
 PARAMETER(NLL.Departure_Time_DFT);
 PARAMETER(NLL.Export_Code_Dft);
 PARAMETER(NLL.Allow_Mult_Whse_to_Order);
 PARAMETER(NLL.Allow_Multi_Export_On_Ord);
 PARAMETER(NLL.Slip_Sheet_Dft);
 PARAMETER(NLL.Palletize_Dft);
 PARAMETER(NLL.Plant_Company_Sts);
 PARAMETER(LCL.Company_Organization);
 PARAMETER(NLL.CDI_Valuation_Grouping);
 PARAMETER(NLL.CDI_Unused_Sts_3);
 PARAMETER(NLL.CDI_Shipper);
 PARAMETER(NLL.CDI_Produced_by_co);

 EXECUTE FUNCTION(Val ShpDt/Alc by Ord  RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1994472;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Scheduled_Ship_Date);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(PAR.Error_Status_3);
 {
  //?USER: Process Data record

  // Call program RTV Co. Dflt Int All   XF.
  CALL PROGRAM(RTV Co. Dflt Int All   XF) ('PDSTXFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(NLL.Shipping_Method_Dft);
  PARAMETER(NLL.Load_Type_Dft);
  PARAMETER(NLL.LTL_Flag_Dft);
  PARAMETER(NLL.Export_Status_Dft);
  PARAMETER(NLL.Shrink_Wrap_Dft);
  PARAMETER(NLL.Departure_Time_DFT);
  PARAMETER(NLL.Export_Code_Dft);
  PARAMETER(NLL.Allow_Mult_Whse_to_Order);
  PARAMETER(NLL.Allow_Multi_Export_On_Ord);
  PARAMETER(NLL.Slip_Sheet_Dft);
  PARAMETER(NLL.Palletize_Dft);
  PARAMETER(NLL.Plant_Company_Sts);
  PARAMETER(LCL.Company_Organization);
  PARAMETER(NLL.CDI_Valuation_Grouping);
  PARAMETER(NLL.CDI_Unused_Sts_3);
  PARAMETER(NLL.CDI_Shipper);
  PARAMETER(NLL.CDI_Produced_by_co);

  CASE;

  // IF LCL.Company Organization is Seaboard
  IF LCL.Company_Organization = 'S';

  EXECUTE FUNCTION(Val Age Information   IF) TYPE(EXCINTFUN)                      AC1984951;
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(PAR.Requested_Delivery_Date);
  PARAMETER(DB1.Item_Age_Days);
  PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
  PARAMETER(DB1.Production_Ovr_AgeDte_To);
  PARAMETER(LCL.Production_AgeDte_Fr);
  PARAMETER(LCL.Production_AgeDte_To);
  PARAMETER(PAR.Error_Status_3);
  PARAMETER(LCL.Company_Organization);
  PARAMETER('V');
  {
   //?Execute internal function

   // WRK.Error Flag            USR = CND.Blank
   WRK.Error_Flag_USR = *BLANK;

   // PAR.Error Status = CND.blank
   PAR.Error_Status = *BLANK;

   // WRK.Error Reason Descript 1 = CON.*BLANK
   WRK.Error_Reason_Descript_1 = *BLANK;

   // WRK.Error Reason Descript 2 = CON.*BLANK
   WRK.Error_Reason_Descript_2 = *BLANK;

   // WRK.Error Reason Descript 3 = CON.*BLANK
   WRK.Error_Reason_Descript_3 = *BLANK;

   // WRK.Error Reason Descript 4 = CON.*BLANK
   WRK.Error_Reason_Descript_4 = *BLANK;

   // WRK.Error Reason Descript 5 = CON.*BLANK
   WRK.Error_Reason_Descript_5 = *BLANK;

   CASE;

   // IF PAR.Company Organization is Seaboard
   IF PAR.Company_Organization = 'S';

   CASE;

   // IF PAR.Requested Delivery Date is not entered
   IF PAR.Requested_Delivery_Date = *ZERO;

   // Send error message - 'Requested Delv Date is required'
   ERROR(USR4329);
   MSGPARM(PAR.Requested_Delivery_Date);

   // IF PAR.Scheduled Ship Date is not entered
   IF PAR.Scheduled_Ship_Date = *ZERO;

   // Send error message - 'Scheduled Ship Date is required when orders are assigned to load.'
   ERROR(USR2230);
   MSGPARM(PAR.Scheduled_Ship_Date);

   // IF *OTHERWISE
   IF *OTHERWISE;

   // Call program Val Age information   XF.
   CALL PROGRAM(Val Age information   XF) ('PNQNXFR');
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(WRK.Error_Flag_USR);
   PARAMETER(WRK.Error_Reason_Descript_1);
   PARAMETER(WRK.Error_Reason_Descript_2);
   PARAMETER(WRK.Error_Reason_Descript_3);
   PARAMETER(WRK.Error_Reason_Descript_4);
   PARAMETER(WRK.Error_Reason_Descript_5);
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Scheduled_Ship_Date);
   PARAMETER(PAR.Requested_Delivery_Date);
   PARAMETER(PAR.Item_Age_Days);
   PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
   PARAMETER(PAR.Production_Ovr_AgeDte_To);
   PARAMETER(PAR.Production_AgeDte_Fr);
   PARAMETER(PAR.Production_AgeDte_To);

   //?Verify if message should be sent if validation is required
   CASE;

   // IF WRK.Error Flag            USR is Yes
   IF WRK.Error_Flag_USR = 'Y';

   // AND PAR.Production Dates Sts Usr is Validation routine
   AND PAR.Production_Dates_Sts_Usr = 'V';

   //?message 1 Product is shipped before product is made
   CASE;

   // IF WRK.Error Reason Descript 1 NE WRK.Blank for 30          USR
   IF WRK.Error_Reason_Descript_1 <> WRK.Blank_for_30_USR;

   // Send error message - 'Prd Date is invalid for requested delivery date'
   ERROR(USR4307);
   MSGPARM(PAR.Production_AgeDte_Fr);

   ENDIF;

   //?message 2 Either Days or override date but not both
   CASE;

   // IF WRK.Error Reason Descript 2 NE WRK.Blank for 30          USR
   IF WRK.Error_Reason_Descript_2 <> WRK.Blank_for_30_USR;

   // Send error message - 'Enter Age Days or Dates'
   ERROR(USR4304);
   MSGPARM(PAR.Item_Age_Days);
   MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
   MSGPARM(PAR.Production_Ovr_AgeDte_To);

   ENDIF;

   //?message 3 With Chill Days Either Days or Override Dates required
   CASE;

   // IF WRK.Error Reason Descript 3 NE WRK.Blank for 30          USR
   IF WRK.Error_Reason_Descript_3 <> WRK.Blank_for_30_USR;

   // Send error message - 'Override Dates is after shipped date'
   ERROR(USR4305);
   MSGPARM(PAR.Item_Age_Days);
   MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
   MSGPARM(PAR.Production_Ovr_AgeDte_To);

   ENDIF;

   //?message 4 From date is > then SHIP DATE
   CASE;

   // IF WRK.Error Reason Descript 4 NE WRK.Blank for 30          USR
   IF WRK.Error_Reason_Descript_4 <> WRK.Blank_for_30_USR;

   // Send error message - 'Override Dates is after shipped date'
   ERROR(USR4305);
   MSGPARM(PAR.Item_Age_Days);
   MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
   MSGPARM(PAR.Production_Ovr_AgeDte_To);

   ENDIF;

   //?message 5 To date is > then SHIP DATE
   CASE;

   // IF WRK.Error Reason Descript 5 NE WRK.Blank for 30          USR
   IF WRK.Error_Reason_Descript_5 <> WRK.Blank_for_30_USR;

   // Send error message - 'Override Dates is after shipped date'
   ERROR(USR4305);
   MSGPARM(PAR.Item_Age_Days);
   MSGPARM(PAR.Production_Ovr_AgeDte_Fr);
   MSGPARM(PAR.Production_Ovr_AgeDte_To);

   ENDIF;

   CASE;

   // IF PAR.Production Ovr AgeDte Fr is not entered
   IF PAR.Production_Ovr_AgeDte_Fr = *ZERO;

   // Send error message - 'Invalid Item Age Days'
   ERROR(USR4309);
   MSGPARM(PAR.Item_Age_Days);

   // IF *OTHERWISE
   IF *OTHERWISE;

   // Send error message - 'Invalid Production Override Age Frm/To Dates'
   ERROR(USR4310);
   MSGPARM(PAR.Production_AgeDte_Fr);
   MSGPARM(PAR.Production_AgeDte_To);

   ENDIF;

   // PAR.Error Status = CND.yes
   PAR.Error_Status = 'Y';

   ENDIF;

   ENDIF;

   ENDIF;

  }

  CASE;

  // IF PAR.Error Status  3 is Yes
  IF PAR.Error_Status_3 = 'Y';

  // PAR.Item Code = DB1.Item Code
  PAR.Item_Code = DB1.Item_Code;

  QUIT;

  ENDIF;

  ENDIF;

 }

 CASE;

 // IF PAR.Error Status  3 is Yes
 IF PAR.Error_Status_3 = 'Y';

 // PAR.Order Number = DB1.Order Number
 PAR.Order_Number = DB1.Order_Number;

 // Send error message - 'Date error for Order &1 Item &2, must be corrected'
 ERROR(USR4743);
 MSGPARM(DB1.Order_Number);
 MSGPARM(PAR.Item_Code);

 QUIT;

 ENDIF;

}


