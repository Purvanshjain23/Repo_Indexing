     H/TITLE Exc Verify Timeout TrsnXF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 02/11/25  Time  : 11:56:09
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPVADCPL4  IF   E           K DISK
      * RSQ : WIM API Failure Log       Surrogate # SEL Timeout
      *
     FCADPREL1  IF   E           K DISK
      * RTV : System Values             Retrieval index       NV
      *
     FPUCICPL3  IF   E           K DISK
      * RSQ : WIM Item Trans Detail     All Keys/Prod Date
      *
     FPVADCPL0  UF   E           K DISK
      * UPD : WIM API Failure Log       Update index
      *
      * Long constants
     D @CN#            S              6    DIM(23)CTDATA PERRCD(1)
     D @CN             S             25    DIM(23) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * Outward parameters
     D PARC            DS           157
      * RCD : PAR API WIM Inv Shipping2
      * I :  Company Number
     D  PAAIC3                 1      2P 0
      * I :  Item Code
     D  PAHGCD                 3      6P 0
      * I :  Ship From Warehouse
     D  PAVPCD                 7      9
      * I :  WIM Inventory Trans ID
     D  PANOSC                10     12
      * I :  WIM Inventory Trans Type
     D  PANPSC                13     15
      * I :  Transaction Date
     D  PAA9DT                16     19P 0
      * I :  Production Date
     D  PAELDT                20     23P 0
      * I :  Item Transaction Source
     D  PAF1ST                24     25
      * I :  Transaction Description
     D  PAVQNA                26     55
      * I :  Transaction Reason Code
     D  PAA1AB                56     58
      * I :  Order Number
     D  PAC4NB                59     62P 0
      * I :  Shift Number
     D  PAXLCD                63     63
      * I :  Ship To Warehouse
     D  PAL9AA                64     66
      * I :  Transaction Weight
     D  PAAHWG                67     72P 2
      * I :  Transaction Quantity
     D  PAA5QT                73     78P 2
      * I :  USR Unship Flag
     D  PAUSST                79     79
      * I :  Inter-Plant Transfer USR
     D  PAA5TX                80     80
      * O :  API EccResult-MsgId U
     D  PACLAB                81     87
      * O :  API EccResult-MsgDesc U
     D  PAVGU1                88    137
      * B :  API Request Key U
     D  PACKAB               138    147
      * I :  API Mode U
     D  PACJAB               148    157
      *
     D QPVAD1        E DS                  EXTNAME(PVADCPL0)
      * UPD : WIM API Failure Log       Update index
      * Renamed input format fields
     D  WCH1NZ       E                     EXTFLD(ADH1NZ)
     D  WCVJU1       E                     EXTFLD(ADVJU1)
     D  WCCNAB       E                     EXTFLD(ADCNAB)
     D  WCVKU1       E                     EXTFLD(ADVKU1)
     D  WCEIAB       E                     EXTFLD(ADEIAB)
     D  WCCOAB       E                     EXTFLD(ADCOAB)
     D  WCAIC3       E                     EXTFLD(ADAIC3)
     D  WCHGCD       E                     EXTFLD(ADHGCD)
     D  WCVPCD       E                     EXTFLD(ADVPCD)
     D  WCNOSC       E                     EXTFLD(ADNOSC)
     D  WCNPSC       E                     EXTFLD(ADNPSC)
     D  WCA9DT       E                     EXTFLD(ADA9DT)
     D  WCELDT       E                     EXTFLD(ADELDT)
     D  WCF1ST       E                     EXTFLD(ADF1ST)
     D  WCVQNA       E                     EXTFLD(ADVQNA)
     D  WCA1AB       E                     EXTFLD(ADA1AB)
     D  WCC4NB       E                     EXTFLD(ADC4NB)
     D  WCXLCD       E                     EXTFLD(ADXLCD)
     D  WCL9AA       E                     EXTFLD(ADL9AA)
     D  WCAHWG       E                     EXTFLD(ADAHWG)
     D  WCA5QT       E                     EXTFLD(ADA5QT)
     D  WCOSSC       E                     EXTFLD(ADOSSC)
     D  WCOTSC       E                     EXTFLD(ADOTSC)
     D  WCN6SC       E                     EXTFLD(ADN6SC)
     D  WCVSST       E                     EXTFLD(ADVSST)
     D  WCBGTS       E                     EXTFLD(ADBGTS)
     D  WCRUU1       E                     EXTFLD(ADRUU1)
     D  WCRVU1       E                     EXTFLD(ADRVU1)
     D  WCBHTS       E                     EXTFLD(ADBHTS)
     D  WCRWU1       E                     EXTFLD(ADRWU1)
     D  WCRXU1       E                     EXTFLD(ADRXU1)
      *
     D YARDCS          DS           392
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      /EJECT
     D XTCK2           DS
      * Time: hours, minutes, seconds (2)
     D  XTTIM2                 1      6  0
     D  XTHH2                  1      2  0
     D  XTNN2                  3      4  0
     D  XTSS2                  5      6  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
     D YL0025          DS           500
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0CLPG         S             10
     D  XDTSDL         S             26
     D  YL0001         S             40
     D  YL0002         S             10
     D  YN0001         S             10
     D  YL0003         S              5  0
     D  WL0001         S             10
     D  WL0002         S             15  5
     D  YL0004         S              7  0
     D  YL0005         S              1
     D  YL0006         S             80
     D  ZQ             S              5  0
     D  YL0007         S              7
     D  YL0008         S             10
     D  YN0002         S             50
     D  WQ0001         S              5  0
     D  WL0003         S             11  0
     D  WL0004         S              1
     D  WN0001         S             45
     D  WN0002         S              7
     D  WN0003         S             50
     D  WN0004         S             10
     D  WN0005         S             10
     D  WN0006         S              3  0
     D  WN0007         S              7  0
     D  WN0008         S              3
     D  WN0009         S              3
     D  WN0010         S              3
     D  WN0011         S              7  0
     D  WN0012         S              7  0
     D  WN0013         S              2
     D  WN0014         S             30
     D  WN0015         S              3
     D  WN0016         S              7  0
     D  WN0017         S              1
     D  WN0018         S              3
     D  WN0019         S             11  2
     D  WN0020         S             11  2
     D  WN0021         S              1
     D  WN0022         S              1
     D  WN0023         S              1
     D  WN0024         S             26
     D  WN0025         S             50
     D  WN0026         S             15
     D  WN0027         S             26
     D  WN0028         S             50
     D  WN0029         S             15
     D  YARDC          S              1
     D  ##TMS          S             26
     D  YL0009         S             26
     D  YL0010         S             26
     D  YL0011         S              2
     D  YL0012         S              2
     D  YL0013         S              2
     D  YL0014         S              6
     D  YL0015         S              6  0
     D  YL0016         S              6  0
     D  YL0017         S              6  0
     D  XSGN           S              1  0
     D  XTNNL          S              3  0
     D  XTSSL          S              3  0
     D  YL0018         S              6
     D  YL0019         S              2
     D  YL0020         S              2
     D  YL0021         S              2  0
     D  YL0022         S              3  0
     D  WUQUNX         S              3  0
     D  YL0023         S              1
     D  WL0005         S              3  0
     D  WL0006         S              7  0
     D  WL0007         S              3
     D  WL0008         S              2
     D  WL0009         S              3
     D  WL0010         S              3
     D  WL0011         S              7  0
     D  WL0012         S              7  0
     D  WL0013         S              2
     D  WL0014         S             30
     D  WL0015         S             11  2
     D  WL0016         S              1
     D  WL0017         S              7  0
     D  WL0018         S              1
     D  WQSF01         S                   LIKE(WDAIC3)
     D  WQSF02         S                   LIKE(WDHGCD)
     D  WQSF03         S                   LIKE(WDAJCD)
     D  WQSF04         S                   LIKE(WDNDSC)
     D  WQSF05         S                   LIKE(WDNOSC)
     D  WQSF06         S                   LIKE(WDNPSC)
     D  WQSF07         S                   LIKE(WDA9DT)
     D  WQSF08         S                   LIKE(WDELDT)
     D  Y0CX01         S              1
     D  WUA5QT         S             11  2
     D  YL0024         S             11  2
     D  WQ0002         S             50
     D  WQ0003         S             80
     D  WQ0004         S            500
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0PMT          S              1
     D                 DS
     D  ZAMSDA                 1    132
     I@ADCPSA
      * WIM API Failure Log       Surrogate # SEL Timeout
      * Renamed input format fields
     I              ADH1NZ                      WAH1NZ
     I              ADVJU1                      WAVJU1
     I              ADCNAB                      WACNAB
     I              ADVKU1                      WAVKU1
     I              ADEIAB                      WAEIAB
     I              ADCOAB                      WACOAB
     I              ADAIC3                      WAAIC3
     I              ADHGCD                      WAHGCD
     I              ADVPCD                      WAVPCD
     I              ADNOSC                      WANOSC
     I              ADNPSC                      WANPSC
     I              ADA9DT                      WAA9DT
     I              ADELDT                      WAELDT
     I              ADF1ST                      WAF1ST
     I              ADVQNA                      WAVQNA
     I              ADA1AB                      WAA1AB
     I              ADC4NB                      WAC4NB
     I              ADXLCD                      WAXLCD
     I              ADL9AA                      WAL9AA
     I              ADAHWG                      WAAHWG
     I              ADA5QT                      WAA5QT
     I              ADOSSC                      WAOSSC
     I              ADOTSC                      WAOTSC
     I              ADN6SC                      WAN6SC
     I              ADVSST                      WAVSST
     I              ADBGTS                      WABGTS
     I              ADRUU1                      WARUU1
     I              ADRVU1                      WARVU1
     I              ADBHTS                      WABHTS
     I              ADRWU1                      WARWU1
     I              ADRXU1                      WARXU1
      *
     I@DPRETD
      * System Values             Retrieval index       NV
      * Renamed input format fields
     I              DPDOCD                      WBDOCD
     I              DPAUNA                      WBAUNA
     I              DPI5ST                      WBI5ST
     I              DPBXTX                      WBBXTX
     I              DPM8NB                      WBM8NB
     I              DPUVST                      WBUVST
     I              DPUWST                      WBUWST
     I              DPUXST                      WBUXST
     I              DPVSST                      WBVSST
     I              DPAATM                      WBAATM
     I              DPAYNA                      WBAYNA
     I              DPA0NA                      WBA0NA
     I              DPAXDT                      WBAXDT
      *
     I@ADCPNK
      * WIM API Failure Log       Update index
      * Renamed input format fields
     I              ADH1NZ                      WCH1NZ
     I              ADVJU1                      WCVJU1
     I              ADCNAB                      WCCNAB
     I              ADVKU1                      WCVKU1
     I              ADEIAB                      WCEIAB
     I              ADCOAB                      WCCOAB
     I              ADAIC3                      WCAIC3
     I              ADHGCD                      WCHGCD
     I              ADVPCD                      WCVPCD
     I              ADNOSC                      WCNOSC
     I              ADNPSC                      WCNPSC
     I              ADA9DT                      WCA9DT
     I              ADELDT                      WCELDT
     I              ADF1ST                      WCF1ST
     I              ADVQNA                      WCVQNA
     I              ADA1AB                      WCA1AB
     I              ADC4NB                      WCC4NB
     I              ADXLCD                      WCXLCD
     I              ADL9AA                      WCL9AA
     I              ADAHWG                      WCAHWG
     I              ADA5QT                      WCA5QT
     I              ADOSSC                      WCOSSC
     I              ADOTSC                      WCOTSC
     I              ADN6SC                      WCN6SC
     I              ADVSST                      WCVSST
     I              ADBGTS                      WCBGTS
     I              ADRUU1                      WCRUU1
     I              ADRVU1                      WCRVU1
     I              ADBHTS                      WCBHTS
     I              ADRWU1                      WCRWU1
     I              ADRXU1                      WCRXU1
      *
     I@CICPW4
      * WIM Item Trans Detail     All Keys/Prod Date
      * Renamed input format fields
     I              CIAIC3                      WDAIC3
     I              CIHGCD                      WDHGCD
     I              CIAJCD                      WDAJCD
     I              CINDSC                      WDNDSC
     I              CINOSC                      WDNOSC
     I              CINPSC                      WDNPSC
     I              CIA9DT                      WDA9DT
     I              CIC4NY                      WDC4NY
     I              CIELDT                      WDELDT
     I              CIBKTS                      WDBKTS
     I              CIBLTS                      WDBLTS
     I              CIAZAB                      WDAZAB
     I              CIF1ST                      WDF1ST
     I              CIVQNA                      WDVQNA
     I              CIA5QT                      WDA5QT
     I              CIAHWG                      WDAHWG
     I              CIA0AB                      WDA0AB
     I              CIA1AB                      WDA1AB
     I              CIXLCD                      WDXLCD
     I              CIC4NB                      WDC4NB
     I              CIRINB                      WDRINB
     I              CIRHNB                      WDRHNB
     I              CIRGNB                      WDRGNB
     I              CIVSST                      WDVSST
     I              CIBGTS                      WDBGTS
     I              CIRUU1                      WDRUU1
     I              CIRVU1                      WDRVU1
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Exc Verify Timeout TrsnXF
      * NOTE: The following JS calls this process every 15 min interval.
      *       From 5AM to 3:00AM.
      *       TEST: WIMUPIVVRT
      *       PROD: WIMUPIVVRF
      * Setup Eradani's Environment Libraries.
      * Upd Setup Eradani Libs CL - /UT User Programs  * 
     C                   CALL      'PVBFUPC'                            90      Upd Setup Erada
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVBFUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * Selects Only 'Timeout' Records.
      * Exc Verify Timeout TrsnRT - WIM API Failure Log  * 
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Exc Verify Timeout TrsnRT - WIM API Failure Log  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * RTV System Value Alpha RT - System Values  * Email for Business
     C                   EXSR      SBRVGN
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
     C                   EXSR      SCRVGN
      * RTV Numeric Value      RT - System Values  * API Wait Time in Sec
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  @CN(005)      WL0001                         System Value Co
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0003                         System Value Nu
      * 01/30/25 DN IN35950-Get API Timeout Transaction Cutoff Mins.
      * RTV Numeric Value      RT - System Values  * API Timeout Trans Cu
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  @CN(006)      WL0001                         System Value Co
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0002        YL0004                         System Value Nu
     C                   EVAL      YL0005 = ' '                                 API Call Failed
      * Format Email Subject Line.
      * CASE: *OTHERWISE
     C                   Z-ADD     *ZERO         ZQ
     C     @CN(007)      CAT(P)    @CN(008):ZQ   YL0006                         Email Subject 2
      * If Not PROD Then Append 'TEST' to Email Subject Line.
      * CASE: LCL.Library List Code is Not PRKFLIB
     C                   IF        YL0002 <> @CN(009)
     C                   Z-ADD     1             ZQ
     C     YL0006        CAT(P)    @CN(010):ZQ   YL0006                         Email Subject 2
     C                   END                                                    *FI
      * Establish starting position
     C     *LOVAL        SETLL     @ADCPSA                                      *
     C                   READ      @ADCPSA                                90    *
      * Data record not found
     C   90              MOVEL     'USR5324'     W0RTN
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   EVAL      YL0007 = ' '                                 API EccResult-M
     C                   MOVEL     WAEIAB        YL0008                         API Request Key
      * Verify Timeout Trsns was Updated in WIM Inventory Transaction Tab
      * *****************************************************************
      * Call API Wrapper Program for wim.ordershipping.inventory API.
      * API WIM Inv Shipping   UP - WIM Item Trans Detail  * Get Received
     C                   CLEAR                   PARC
     C                   Z-ADD     WAAIC3        PAAIC3                         Company Number
     C                   Z-ADD     WAHGCD        PAHGCD                         Item Code
     C                   MOVEL(P)  WAVPCD        PAVPCD                         Ship From Wareh
     C                   MOVEL(P)  WANOSC        PANOSC                         WIM Inventory T
     C                   MOVEL(P)  WANPSC        PANPSC                         WIM Inventory T
     C                   Z-ADD     WAA9DT        PAA9DT                         Transaction Dat
     C                   Z-ADD     WAELDT        PAELDT                         Production Date
     C                   MOVEL(P)  WAF1ST        PAF1ST                         Item Transactio
     C                   MOVEL(P)  WAVQNA        PAVQNA                         Transaction Des
     C                   MOVEL(P)  WAA1AB        PAA1AB                         Transaction Rea
     C                   Z-ADD     WAC4NB        PAC4NB                         Order Number
     C                   MOVEL(P)  WAXLCD        PAXLCD                         Shift Number
     C                   MOVEL(P)  WAL9AA        PAL9AA                         Ship To Warehou
     C                   Z-ADD     WAAHWG        PAAHWG                         Transaction Wei
     C                   Z-ADD     WAA5QT        PAA5QT                         Transaction Qua
     C                   MOVEL(P)  WAOSSC        PAUSST                         USR Unship Flag
     C                   MOVEL(P)  WAOTSC        PAA5TX                         Inter-Plant Tra
     C                   MOVEL(P)  YL0008        PACKAB                         API Request Key
     C                   MOVEL(P)  '*RCVONLY'    PACJAB                         API Mode U
      *
     C                   CALL      'PVAYUPR'                            90      API WIM Inv Shi
     C                   PARM      YL0003        WQ0001                         API Wait Time U
     C                   PARM                    PARC                           RCD: *Arrays
      *
     C                   MOVEL     PACLAB        YL0007                         API EccResult-M
     C                   MOVEL     PACKAB        YL0008                         API Request Key
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PVAYUPR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * *****************************************************************
      * API Call Successful? Yes, Update Record Processed.
      * CASE: LCL.API EccResult-MsgId U is Success
      * It is assumed for 'timeout' again will be very rare. But if timeo
      * happens again it will be reprocessed on next time job runs.
      * If 'Success' Then Update Record as 'Processed'.
      * CASE: LCL.API EccResult-MsgId U is Success
     C                   IF        YL0007 = @CN(011)
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
      * Move input parameters to subroutine local variables.
     C                   IF        YL0007 = @CN(011)
     C                   Z-ADD     WAH1NZ        WL0003                         Surrogate Nbr
     C                   MOVEL(P)  'Y'           WL0004                         Record Processe
     C                   EXSR      SECHRC
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * 01/30/25 DN IN35950-Commented Out & Added Addt'l Check for 'TIMEO
      * 01/30/25 DN IN35950-Check if 'TIMEOUT' & Catch All.
      * CASE: LCL.API EccResult-MsgId U is Timeout
      * Still 'Timeout'. Check Cutoff Threshold Minutes Have Been Reached
      * Format Current/Created Times & Calculate Elapsed Time.
      * CASE: *OTHERWISE
      * Current System Time.
      * LCL.Create Date Timestamp = JOB.*System timestamp
     C                   IF        YL0007 = @CN(012)
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         YL0009                         Create Date Tim
     C                   MOVEL     YL0009        YL0010                         Date Timestamp
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     12            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0010:ZQ     YL0011                 90      Hour 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     15            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0010:ZQ     YL0012                 90      Minute 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     18            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0010:ZQ     YL0013                 90      Second 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0011        CAT(P)    YL0012:ZQ     YL0014                         Time Alpha usr
     C                   Z-ADD     *ZERO         ZQ
     C     YL0014        CAT(P)    YL0013:ZQ     YL0014                         Time Alpha usr
     C                   MOVE      YL0014        YL0015                         Current Time
      * Created Transaction Timestamp.
     C                   MOVEL     WABGTS        YL0010                         Date Timestamp
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     12            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0010:ZQ     YL0011                 90      Hour 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     15            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0010:ZQ     YL0012                 90      Minute 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     18            ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00026 OR
     C                             ZQ > 00026
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0010:ZQ     YL0013                 90      Second 2A USR
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     YL0011        CAT(P)    YL0012:ZQ     YL0014                         Time Alpha usr
     C                   Z-ADD     *ZERO         ZQ
     C     YL0014        CAT(P)    YL0013:ZQ     YL0014                         Time Alpha usr
     C                   MOVE      YL0014        YL0016                         Create Time
      * Consider Comparing for Previous Day Time.
      * CASE: LCL.Current Time LT LCL.Create Time
     C                   IF        YL0015 < YL0016
     C                   ADD       240000        YL0015                         Current Time
     C                   END                                                    *FI
      * LCL.Hours/Mins/Secs Elapsed U = LCL.Current Time - LCL.Create Tim
     C                   Z-ADD     YL0016        XTTIM2
     C                   Z-ADD     YL0015        XTTIM
     C                   EXSR      XTCEL
     C     XTHH          MULT      100           YL0017
     C                   ADD       XTNN          YL0017
     C                   MULT      100           YL0017
     C                   ADD       XTSS          YL0017
     C                   MULT      XSGN          YL0017
     C                   EVAL      YL0018 = ' '                                 Hours/Mins/Secs
     C                   MOVEL     YL0017        YL0018                         Hours/Mins/Secs
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00006 OR
     C                             ZQ > 00006
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0018:ZQ     YL0019                 90      Hours  2A
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00006 OR
     C                             ZQ > 00006
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0018:ZQ     YL0020                 90      Minutes  2A
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0019        YL0021                         @Hour
     C                   Z-ADD     *ZERO         YL0022                         @Minutes 3
     C                   MOVE      YL0020        YL0022                         @Minutes 3
      * Hours Exist, Convert Hours to Minutes & Add It.
      * CASE: LCL.@Hour is GT 0
     C                   IF        YL0021 > 0
     C                   Z-ADD     *ZERO         WUQUNX                         @Minutes 3
      * Max Hours we should be having is about 7 or 8 hours elapsed time.
      * CASE: LCL.@Hour is 1 Hour
     C                   IF        YL0021 = 1
     C                   Z-ADD     60            WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 2 Hours
     C                   IF        YL0021 = 2
     C                   Z-ADD     120           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 3 Hours
     C                   IF        YL0021 = 3
     C                   Z-ADD     180           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 4 Hours
     C                   IF        YL0021 = 4
     C                   Z-ADD     240           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 5 Hours
     C                   IF        YL0021 = 5
     C                   Z-ADD     300           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 6 Hours
     C                   IF        YL0021 = 6
     C                   Z-ADD     360           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 7 Hours
     C                   IF        YL0021 = 7
     C                   Z-ADD     420           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 8 Hours
     C                   IF        YL0021 = 8
     C                   Z-ADD     480           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 9 Hours
     C                   IF        YL0021 = 9
     C                   Z-ADD     540           WUQUNX                         @Minutes 3
     C                   ELSE
      * CASE: LCL.@Hour is 10 Hours
     C                   IF        YL0021 = 10
     C                   Z-ADD     600           WUQUNX                         @Minutes 3
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   ADD       WUQUNX        YL0022                         @Minutes 3
     C                   END                                                    *FI
      * Elapsed Time Reached Cutoff Minutes? Yes, Check Trans Exist in PU
      * CASE: LCL.@Minutes 3 GE LCL.API Timeout Trsn Cutoff U
      * Check if Transaction Exist in WIM Item Trans Detail (PUCICPP) Tab
      * Val API Timeout Trsn ExRT - WIM Item Trans Detail  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0022 >= YL0004
     C                   Z-ADD     WAAIC3        WL0005                         Company Number
     C                   Z-ADD     WAHGCD        WL0006                         Item Code
     C                   MOVEL(P)  WAVPCD        WL0007                         Warehouse Code
     C                   MOVEL(P)  'FG'          WL0008                         Inventory Item
     C                   MOVEL(P)  WANOSC        WL0009                         WIM Inventory T
     C                   MOVEL(P)  WANPSC        WL0010                         WIM Inventory T
     C                   Z-ADD     WAA9DT        WL0011                         Transaction Dat
     C                   Z-ADD     WAELDT        WL0012                         Production Date
     C                   MOVEL(P)  WAF1ST        WL0013                         Item Transactio
     C                   MOVEL(P)  WAVQNA        WL0014                         Transaction Des
     C                   Z-ADD     WAA5QT        WL0015                         Transaction Qua
     C                   MOVEL(P)  WAXLCD        WL0016                         Shift Number
     C                   Z-ADD     WAC4NB        WL0017                         Order Number
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0018        YL0023                         Match Found USR
      * Match Found Set Record Processed=Y Else 'Error' (E).
      * CASE: LCL.Match Found USR is Yes
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
      * Move input parameters to subroutine local variables.
     C                   IF        YL0023 = 'Y'
     C                   Z-ADD     WAH1NZ        WL0003                         Surrogate Nbr
     C                   MOVEL(P)  'Y'           WL0004                         Record Processe
     C                   EXSR      SECHRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Set to 'E' error.
      * Chg Record Processed  CH - WIM API Failure Log  * 'E' Processed
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAH1NZ        WL0003                         Surrogate Nbr
     C                   MOVEL(P)  'E'           WL0004                         Record Processe
     C                   EXSR      SECHRC
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Do nothing. Let next JS run process again.
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * This is a Catch All. P2P Application would be sending 'ECC9100'.
      * CASE: LCL.API EccResult-MsgId U is Catch All Errors-ECC9100
      * Transaction has been deleted from storage hence need to update
      * WIM Inventory files is required.
      * Update Record Processed='N' (Not Processed) for JS WIMUPIVRET to
     C                   IF        YL0007 = @CN(013)
     C                   MOVEL     'Y'           YL0005                         API Call Failed
      * Chg Record Processed  CH - WIM API Failure Log  * 'N' Not Process
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAH1NZ        WL0003                         Surrogate Nbr
     C                   MOVEL(P)  'N'           WL0004                         Record Processe
     C                   EXSR      SECHRC
     C                   ELSE
      * CASE: *OTHERWISE
      * To Catch All Other Than 'ECC9100'. (Not Aware of This Scenario
      * but we should ensure PUCICPP exist or not.)
      * Check if Transaction Exist in WIM Item Trans Detail (PUCICPP) Tab
      * Val API Timeout Trsn ExRT - WIM Item Trans Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAAIC3        WL0005                         Company Number
     C                   Z-ADD     WAHGCD        WL0006                         Item Code
     C                   MOVEL(P)  WAVPCD        WL0007                         Warehouse Code
     C                   MOVEL(P)  'FG'          WL0008                         Inventory Item
     C                   MOVEL(P)  WANOSC        WL0009                         WIM Inventory T
     C                   MOVEL(P)  WANPSC        WL0010                         WIM Inventory T
     C                   Z-ADD     WAA9DT        WL0011                         Transaction Dat
     C                   Z-ADD     WAELDT        WL0012                         Production Date
     C                   MOVEL(P)  WAF1ST        WL0013                         Item Transactio
     C                   MOVEL(P)  WAVQNA        WL0014                         Transaction Des
     C                   Z-ADD     WAA5QT        WL0015                         Transaction Qua
     C                   MOVEL(P)  WAXLCD        WL0016                         Shift Number
     C                   Z-ADD     WAC4NB        WL0017                         Order Number
     C                   EXSR      SFRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0018        YL0023                         Match Found USR
      * Match Found Set Record Processed=Y Else 'Error' (E).
      * CASE: LCL.Match Found USR is Yes
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
      * Move input parameters to subroutine local variables.
     C                   IF        YL0023 = 'Y'
     C                   Z-ADD     WAH1NZ        WL0003                         Surrogate Nbr
     C                   MOVEL(P)  'Y'           WL0004                         Record Processe
     C                   EXSR      SECHRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Set to 'E' error.
      * Chg Record Processed  CH - WIM API Failure Log  * 'E' Processed
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAH1NZ        WL0003                         Surrogate Nbr
     C                   MOVEL(P)  'E'           WL0004                         Record Processe
     C                   EXSR      SECHRC
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @ADCPSA                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Send Email to IT Group to Notify Hardstop Error Occur on API.
      * CASE: LCL.API Call Failed USR is Yes
      * Format/Send Email Message.
      * CASE: *OTHERWISE
     C                   IF        YL0005 = 'Y'
     C                   Z-ADD     *ZERO         ZQ
     C     @CN(014)      CAT(P)    @CN(015):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0025        CAT(P)    @CN(016):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     *ZERO         ZQ
     C     YL0025        CAT(P)    @CN(017):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     *ZERO         ZQ
     C     YL0025        CAT(P)    @CN(018):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0025        CAT(P)    @CN(019):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     *ZERO         ZQ
     C     YL0025        CAT(P)    @CN(020):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     1             ZQ
     C     YL0025        CAT(P)    @CN(021):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     *ZERO         ZQ
     C     YL0025        CAT(P)    @CN(022):ZQ   YL0025                         Email Message 2
     C                   Z-ADD     *ZERO         ZQ
     C     YL0025        CAT(P)    @CN(023):ZQ   YL0025                         Email Message 2
      * Exc ESNDMAIL Generic2 CL - /UT User Programs  * 
     C                   CALL      'PUX2UPC'                            90      Exc ESNDMAIL Ge
     C                   PARM      YL0001        WQ0002                         Email Address
     C                   PARM      YL0006        WQ0003                         Email Subject 2
     C                   PARM      YL0025        WQ0004                         Email Message 2
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUX2UPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV System Value Alpha RT - System Values  * Email for Business
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   MOVEL     @CN(002)      WBDOCD                         System Value Co
      * Establish starting position
     C     KRSSB         CHAIN     @DPRETD                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0759'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      YL0001 = ' '                                 System Value Al
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBBXTX        YL0001                         System Value Al
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Data Libraries     RT - System Values  * In TEST or PROD
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KPSSC         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   EVALR     WBDOCD = ' '                                 System Value Co
     C                   MOVEL     'DTALIB'      WBDOCD                         System Value Co
      * Establish starting position
     C     KPSSC         SETLL     @DPRETD                                      *
     C                   READ      @DPRETD                                90    *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
      * CASE: DB1.System Value Code is Data File Library
     C                   DOW       NOT *IN90
     C                   IF        WBDOCD = @CN(003)
     C                   MOVEL     WBBXTX        YL0002                         Library List Co
     C                   ELSE
      * CASE: DB1.System Value Code is History File Library
     C                   IF        WBDOCD = @CN(004)
     C                   MOVEL     WBBXTX        YN0001                         @Library List C
     C                   GOTO      SCEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   READ      @DPRETD                                90    *
     C                   ENDDO
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * RTV Numeric Value      RT - System Values  * API Wait Time in Se
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WBDOCD                         System Value Co
      * Setup key
     C                   MOVEL     WL0001        WBDOCD                         System Value Co
      * Establish starting position
     C     KRSSD         CHAIN     @DPRETD                            90        *
      * Data record not found
     C   90              MOVEL     'USR0759'     W0RTN
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   Z-ADD     WBM8NB        WL0002                         System Value Nu
     C                   GOTO      SDEXIT                                       *QUIT
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SECHRC        BEGSR
      *================================================================
      * Chg Record Processed  CH - WIM API Failure Log  * 'Y' Processed
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 API Name
     C                   EVAL      WN0002 = ' '                                 API EccResult M
     C                   EVAL      WN0003 = ' '                                 API EccResult-M
     C                   EVAL      WN0004 = ' '                                 API Request Key
     C                   EVAL      WN0005 = ' '                                 Called From Pro
     C                   Z-ADD     *ZERO         WN0006                         Company Number
     C                   Z-ADD     *ZERO         WN0007                         Item Code
     C                   EVAL      WN0008 = ' '                                 Ship From Wareh
     C                   EVAL      WN0009 = ' '                                 WIM Inventory T
     C                   EVAL      WN0010 = ' '                                 WIM Inventory T
     C                   Z-ADD     *ZERO         WN0011                         Transaction Dat
     C                   Z-ADD     *ZERO         WN0012                         Production Date
     C                   EVAL      WN0013 = ' '                                 Item Transactio
     C                   EVAL      WN0014 = ' '                                 Transaction Des
     C                   EVAL      WN0015 = ' '                                 Transaction Rea
     C                   Z-ADD     *ZERO         WN0016                         Order Number
     C                   EVAL      WN0017 = ' '                                 Shift Number
     C                   EVAL      WN0018 = ' '                                 Ship To Warehou
     C                   Z-ADD     *ZERO         WN0019                         Transaction Wei
     C                   Z-ADD     *ZERO         WN0020                         Transaction Qua
     C                   EVAL      WN0021 = ' '                                 Unship Flag
     C                   EVAL      WN0022 = ' '                                 Inter Plant Tra
     C                   EVAL      WN0023 = ' '                                 Record Status
     C                   MOVEL     XDTSDL        WN0024                         Create Date Tim
     C                   EVAL      WN0025 = ' '                                 Create User ID
     C                   EVAL      WN0026 = ' '                                 Create Program
     C                   MOVEL     XDTSDL        WN0027                         Update Date Tim
     C                   EVAL      WN0028 = ' '                                 Update User Id
     C                   EVAL      WN0029 = ' '                                 Update Program
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @ADCPNK
     C                   Z-ADD     WL0003        WCH1NZ                         Surrogate Nbr
      *
     C     KLCHSE        KLIST
     C                   KFLD                    WCH1NZ                         Surrogate Nbr
     C     KLCHSE        CHAIN     @ADCPNK                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PVADCPL0'    MDACP
     C                   MOVEL     '@ADCPNK'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPVAD1        YARDCS
      * Move non-key fields to @ADCPNK
     C                   MOVEL(P)  WL0004        WCN6SC                         Record Processe
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVAD1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * USER: Processing before Data update
      * Set Chg Time Stamp DDL IF
      * *** Set CHANGE Time Stamp Info.
      * PAR.Update Date Timestamp = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WCBHTS                         Update Date Tim
     C                   EVAL      WCRWU1 = ' '                                 Update User Id
     C                   MOVEL     ##USR         WCRWU1                         Update User Id
     C                   EVAL      WCRXU1 = ' '                                 Update Program
     C                   MOVEL     ##PGM         WCRXU1                         Update Program
      * Set PGM.*Record Data Changed flag
     C                   IF        QPVAD1 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @ADCPNK                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PVADCPL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * Val API Timeout Trsn ExRT - WIM Item Trans Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'N'           WL0018                         Match Found USR
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    WQSF01                         Company Number
     C                   KFLD                    WQSF02                         Item Code
     C                   KFLD                    WQSF03                         Warehouse Code
     C                   KFLD                    WQSF04                         Inventory Item
     C                   KFLD                    WQSF05                         WIM Inventory T
     C                   KFLD                    WQSF06                         WIM Inventory T
     C                   KFLD                    WQSF07                         Transaction Dat
     C                   KFLD                    WQSF08                         Production Date
      * Setup key
     C                   Z-ADD     WL0005        WQSF01                         Company Number
     C                   Z-ADD     WL0006        WQSF02                         Item Code
     C                   MOVEL     WL0007        WQSF03                         Warehouse Code
     C                   MOVEL     WL0008        WQSF04                         Inventory Item
     C                   MOVEL     WL0009        WQSF05                         WIM Inventory T
     C                   MOVEL     WL0010        WQSF06                         WIM Inventory T
     C                   Z-ADD     WL0011        WQSF07                         Transaction Dat
     C                   Z-ADD     WL0012        WQSF08                         Production Date
      * Establish starting position
     C     KRSSF         SETLL     @CICPW4                                      *
     C     KRSSF         READE     @CICPW4                                90    *
      * Data record not found
     C   90              MOVEL     'USR5255'     W0RTN
      * USER: Process Data record
      * Must Also Match.
      * CASE:
      *  - c1 AND c2 AND c3 AND c4
      *   |- c1    : DB1.Item Transaction Source EQ PAR.Item Transaction
      *   |- c2    : DB1.Transaction Description EQ PAR.Transaction Descr
      *   |- c3    : DB1.Shift Number EQ PAR.Shift Number
      *   |- c4    : DB1.Order Number EQ PAR.Order Number
      *   '-
     C                   DOW       NOT *IN90
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WDF1ST = WL0013
     C                   IF        WDVQNA = WL0014
     C                   IF        WDXLCD = WL0016
     C                   IF        WDC4NB = WL0017
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     WL0015        WUA5QT                         Transaction Qua
     C                   Z-ADD     WDA5QT        YL0024                         Transaction Qua
      * Use Absolute Value if Negative Qty from PAR Context.
      * CASE: PAR.Transaction Quantity is Less than zero
     C                   IF        WL0015 < 0
     C     WL0015        MULT      -1            WUA5QT                         Transaction Qua
     C                   END                                                    *FI
      * Use Absolute Value if Negative Qty from DB1 Context.
      * CASE: DB1.Transaction Quantity is Less than zero
     C                   IF        WDA5QT < 0
     C     WDA5QT        MULT      -1            YL0024                         Transaction Qua
     C                   END                                                    *FI
      * Qty Must Match.
      * CASE: LCL.Transaction Quantity EQ WRK.Transaction Quantity
     C                   IF        YL0024 = WUA5QT
     C                   MOVEL     'Y'           WL0018                         Match Found USR
     C                   GOTO      SFEXIT                                       *QUIT
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSF         READE     @CICPW4                                90    *
     C                   ENDDO
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   XTCEL         BEGSR
      *================================================================
      * Calculate elapsed time from TME2 to TME1
      *================================================================
     C                   IF        XTTIM >= XTTIM2
     C                   Z-ADD     1             XSGN
     C                   Z-ADD     XTNN          XTNNL
     C                   Z-ADD     XTSS          XTSSL
     C                   IF        XTSSL < XTSS2
     C                   ADD       60            XTSSL
     C                   SUB       1             XTNNL
     C                   END
     C     XTSSL         SUB       XTSS2         XTSS
     C                   IF        XTNNL < XTNN2
     C                   ADD       60            XTNNL
     C                   SUB       1             XTHH
     C                   END
     C     XTNNL         SUB       XTNN2         XTNN
     C                   SUB       XTHH2         XTHH
     C                   ELSE
     C                   Z-ADD     -1            XSGN
     C                   Z-ADD     XTNN2         XTNNL
     C                   Z-ADD     XTSS2         XTSSL
     C                   IF        XTSSL < XTSS
     C                   ADD       60            XTSSL
     C                   SUB       1             XTNNL
     C                   END
     C     XTSSL         SUB       XTSS          XTSS
     C                   IF        XTNNL < XTNN
     C                   ADD       60            XTNNL
     C                   SUB       1             XTHH2
     C                   END
     C     XTNNL         SUB       XTNN          XTNN
     C     XTHH2         SUB       XTHH          XTHH
     C                   END
      *================================================================
     CSR   XTCELE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAH1NZ                         Surrogate Nbr
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAHGCD                         Item Code
     C                   Z-ADD     *ZERO         WAA9DT                         Transaction Dat
     C                   Z-ADD     *ZERO         WAELDT                         Production Date
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WAAHWG                         Transaction Wei
     C                   Z-ADD     *ZERO         WAA5QT                         Transaction Qua
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WABGTS                         Create Date Tim
     C                   MOVEL     XDTSDL        WABHTS                         Update Date Tim
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBM8NB                         System Value Nu
     C                   Z-ADD     *ZERO         WBAATM                         Job Time
     C                   Z-ADD     *ZERO         WBAXDT                         Job Date
      * Define work field @Minutes 3
     C                   Z-ADD     *ZERO         WUQUNX
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDAIC3                         Company Number
     C                   Z-ADD     *ZERO         WDHGCD                         Item Code
     C                   Z-ADD     *ZERO         WDA9DT                         Transaction Dat
     C                   Z-ADD     *ZERO         WDC4NY                         ITD Sequence Nu
     C                   Z-ADD     *ZERO         WDELDT                         Production Date
     C                   MOVEL     XDTSDL        WDBKTS                         Production Date
     C                   MOVEL     XDTSDL        WDBLTS                         Transaction Dt
     C                   Z-ADD     *ZERO         WDA5QT                         Transaction Qua
     C                   Z-ADD     *ZERO         WDAHWG                         Transaction Wei
     C                   Z-ADD     *ZERO         WDC4NB                         Order Number
     C                   Z-ADD     *ZERO         WDRINB                         Item Structure
     C                   Z-ADD     *ZERO         WDRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WDRGNB                         Item Structure
     C                   MOVEL     XDTSDL        WDBGTS                         Create Date Tim
      * Define work field Transaction Quantity
     C                   Z-ADD     *ZERO         WUA5QT
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SDRVGN.
     C                   EVAL      WL0001 = ' '
     C                   Z-ADD     *ZERO         WL0002
      * Define local variables for subroutine SECHRC.
     C                   Z-ADD     *ZERO         WL0003
     C                   EVAL      WL0004 = ' '
      * Define local variables for subroutine SFRVGN.
     C                   Z-ADD     *ZERO         WL0005
     C                   Z-ADD     *ZERO         WL0006
     C                   EVAL      WL0007 = ' '
     C                   EVAL      WL0008 = ' '
     C                   EVAL      WL0009 = ' '
     C                   EVAL      WL0010 = ' '
     C                   Z-ADD     *ZERO         WL0011
     C                   Z-ADD     *ZERO         WL0012
     C                   EVAL      WL0013 = ' '
     C                   EVAL      WL0014 = ' '
     C                   Z-ADD     *ZERO         WL0015
     C                   EVAL      WL0016 = ' '
     C                   Z-ADD     *ZERO         WL0017
     C                   EVAL      WL0018 = ' '
      * Define local work field Email Address f/Bus USR
     C                   EVAL      YL0001 = ' '
      * Define local work field Library List Code
     C                   EVAL      YL0002 = ' '
      * Define null work field @Library List Code
     C                   EVAL      YN0001 = ' '
      * Define local work field API Wait Time U
     C                   Z-ADD     *ZERO         YL0003
      * Define local work field API Timeout Trsn Cutoff U
     C                   Z-ADD     *ZERO         YL0004
      * Define local work field API Call Failed USR
     C                   EVAL      YL0005 = ' '
      * Define local work field Email Subject 2 USR
     C                   EVAL      YL0006 = ' '
      * Define local work field API EccResult-MsgId U
     C                   EVAL      YL0007 = ' '
      * Define local work field API Request Key U
     C                   EVAL      YL0008 = ' '
      * Define null work field API EccResult-MsgDesc U
     C                   EVAL      YN0002 = ' '
      * Define local work field Create Date Timestamp
     C                   MOVEL     XDTSDL        YL0009
      * Define local work field Date Timestamp Txt U
     C                   EVAL      YL0010 = ' '
      * Define local work field Hour 2A USR
     C                   EVAL      YL0011 = ' '
      * Define local work field Minute 2A USR
     C                   EVAL      YL0012 = ' '
      * Define local work field Second 2A USR
     C                   EVAL      YL0013 = ' '
      * Define local work field Time Alpha usr 6
     C                   EVAL      YL0014 = ' '
      * Define local work field Current Time
     C                   Z-ADD     *ZERO         YL0015
      * Define local work field Create Time
     C                   Z-ADD     *ZERO         YL0016
      * Define local work field Hours/Mins/Secs Elapsed U
     C                   Z-ADD     *ZERO         YL0017
      * Define local work field Hours/Mins/Secs Text USR
     C                   EVAL      YL0018 = ' '
      * Define local work field Hours  2A            USR
     C                   EVAL      YL0019 = ' '
      * Define local work field Minutes  2A          USR
     C                   EVAL      YL0020 = ' '
      * Define local work field @Hour
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field @Minutes 3
     C                   Z-ADD     *ZERO         YL0022
      * Define local work field Match Found USR
     C                   EVAL      YL0023 = ' '
      * Define local work field Transaction Quantity
     C                   Z-ADD     *ZERO         YL0024
      * Define local work field Email Message 2 USR
     C                   EVAL      YL0025 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
00002 WIMAPIFLBS
00003 DTALIB
00004 HISLIB
00005 APIWAITTM2
00006 APITOCUTOF
00007 Verify WIM API Call was P
00008 rocess for Timeout Trans
00009 PRKFLIB
00010 - TEST
00011 ECC0000
00012 TIMEOUT
00013 ECC9100
00014 WIMUPIVVRF: The Job Sched
00015 ule for the WIM Outbound
00016 API (wim.ordershipping.in
00017 ventory) call to verify t
00018 he timeout transactions
00019 had a hardstop error on t
00020 he API.
00021 Transaction will be updat
00022 ed to reprocess in the ne
00023 xt run for JS WIMUPIVRET.
