// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDJFPVR
// ?Date: 14.08.2025 Time: 03:34:54
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.STATUS = CND.No
PAR.STATUS = 'N';

//?***** Change Log and Comments
DO;

//?** 03/04/2008 LJB FP1251
//?** Add new error message to the display. Add Requested Ship Date
//?** to the display to accommodate the new message.
ENDDO;

//?USER: Load screen

// DTL.Order Number = PAR.Order Number
DTL.Order_Number = PAR.Order_Number;

// DTL.Must Ship Date        USR = PAR.Must Ship Date        USR
DTL.Must_Ship_Date_USR = PAR.Must_Ship_Date_USR;

// DTL.Requested Delivery Date = PAR.Requested Delivery Date
DTL.Requested_Delivery_Date = PAR.Requested_Delivery_Date;

// DTL.Requested Ship Date = PAR.Requested Ship Date
DTL.Requested_Ship_Date = PAR.Requested_Ship_Date;

// WRK.Must Ship Time        USR = PAR.Must Ship Time        USR / CON.100 *
WRK.Must_Ship_Time_USR = PAR.Must_Ship_Time_USR / 100;

// DTL.@Time 4.0 = WRK.Must Ship Time        USR
DTL.@Time_4_0 = WRK.Must_Ship_Time_USR;

// DTL.Requested Delivery Time = PAR.Requested Delivery Time
DTL.Requested_Delivery_Time = PAR.Requested_Delivery_Time;

EXECUTE FUNCTION(PMT Must Ship Err Msg  IF) TYPE(EXCINTFUN)                     AC1521273;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(PAR.Must_Ship_Error);
PARAMETER(DTL.Explaination_Text_1);
{
 //?Execute internal function

 // PAR.Explaination Text 1 = CON.*BLANK
 PAR.Explaination_Text_1 = *BLANK;

 CASE;

 // IF PAR.Must Ship Error is No Error
 IF PAR.Must_Ship_Error = *BLANK;

 // IF PAR.Must Ship Error is Must Ship before NOW
 IF PAR.Must_Ship_Error = 'NOW';

 // PAR.Explaination Text 1 = CON.Order should have already
 PAR.Explaination_Text_1 = 'Order should have already';

 // PAR.Explaination Text 1 = CONCAT(PAR.Explaination Text 1,CON. shipped,CON.*ZERO)
 PAR.Explaination_Text_1 = PAR.Explaination_Text_1 + ' shipped' (*ZERO);

 // IF PAR.Must Ship Error is Deadline not bef Delivery
 IF PAR.Must_Ship_Error = 'DDD';

 // PAR.Explaination Text 1 = CON.Deadline after Delivery
 PAR.Explaination_Text_1 = 'Deadline after Delivery';

 // IF PAR.Must Ship Error is Must Shp not bef Deadline
 IF PAR.Must_Ship_Error = 'MSD';

 // PAR.Explaination Text 1 = CON.Must Ship after Deadline
 PAR.Explaination_Text_1 = 'Must Ship after Deadline';

 // IF PAR.Must Ship Error is Schd Shp not bef Must Shp
 IF PAR.Must_Ship_Error = 'SSD';

 // PAR.Explaination Text 1 = CON.Scheduled Ship after Must
 PAR.Explaination_Text_1 = 'Scheduled Ship after Must';

 // PAR.Explaination Text 1 = CONCAT(PAR.Explaination Text 1,CON. Ship,CON.*ZERO)
 PAR.Explaination_Text_1 = PAR.Explaination_Text_1 + ' Ship' (*ZERO);

 // IF PAR.Must Ship Error is Miles to Next=Zeros
 IF PAR.Must_Ship_Error = 'MTN';

 // PAR.Explaination Text 1 = CON.No Miles Between Cities
 PAR.Explaination_Text_1 = 'No Miles Between Cities';

 // IF PAR.Must Ship Error is Req Ship should =Must Shp
 IF PAR.Must_Ship_Error = 'RSD';

 // PAR.Explaination Text 1 = CON.Requested Ship Date shoul
 PAR.Explaination_Text_1 = 'Requested Ship Date shoul';

 // PAR.Explaination Text 1 = CONCAT(PAR.Explaination Text 1,CON.d = Must Ship,CON.*ZERO)
 PAR.Explaination_Text_1 = PAR.Explaination_Text_1 + 'd = Must Ship' (*ZERO);

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?--- unexpected error ---
 // PAR.Explaination Text 1 = Condition name of PAR.Must Ship Error
 PAR.Explaination_Text_1 = RTVCND(PAR.Must_Ship_Error);

 ENDIF;

}


//?CALC: Screen function fields

//?9=Order is accepted.
CASE;

// IF DTL.*CMD key is *Add
IF DTL.*CMD_key = '09';

// PAR.STATUS = CND.Yes
PAR.STATUS = 'Y';

PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

//?USER: Exit program processing

//?Exiting program
CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

// PAR.STATUS = CND.No
PAR.STATUS = 'N';

ENDIF;

