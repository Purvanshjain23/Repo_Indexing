// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POIYXFR
// ?Date: 14.08.2025 Time: 03:37:32
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Live with PHIS    RT) TYPE(RTVOBJ) FILE(PDMMREP)           AC2160999;
PARAMETER(PAR.Company_Number);
PARAMETER('A');
PARAMETER(PAR.Country_Code);
PARAMETER(LCL.ED_Live_with_PHIS);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?not sure why i added below on 2/06/19
EXECUTE FUNCTION(RTV Header Status      RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1231329;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Header_Status);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?RMC 8/23/19 get amts on A rcd to use-thats where the default maxes are
//?Do this if live with PHIS - else use input doc type        RMC    6/24/20
CASE;

// IF LCL.ED Live with PHIS is yes
IF LCL.ED_Live_with_PHIS = 'Y';

EXECUTE FUNCTION(Rtv/Chg Hdr Shpd Amts RT) TYPE(RTVOBJ) FILE(PDMSREP)           AC1612851;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER('A');
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.ED_Total_Net_Weight_lbs);
PARAMETER(PAR.ED_Total_Net_Weight_MT);
PARAMETER(PAR.ED_Nbr_of_Packages);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 // PAR.ED Total Net Weight lbs = PAR.ED Total Net Weight lbs + DB1.ED Product Net Weight lbs
 PAR.ED_Total_Net_Weight_lbs = PAR.ED_Total_Net_Weight_lbs
 + DB1.ED_Product_Net_Weight_lbs;

 // PAR.ED Nbr of Packages = PAR.ED Nbr of Packages + DB1.ED Product Nbr of Pkgs
 PAR.ED_Nbr_of_Packages = PAR.ED_Nbr_of_Packages + DB1.ED_Product_Nbr_of_Pkgs;

 // PAR.ED Total Net Weight MT = PAR.ED Total Net Weight MT + DB1.ED Product Net Weight MT
 PAR.ED_Total_Net_Weight_MT = PAR.ED_Total_Net_Weight_MT + DB1.ED_Product_Net_Weight_MT;

 ENDIF;

}


// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv/Chg Hdr Shpd Amts RT) TYPE(RTVOBJ) FILE(PDMSREP)           AC1612851;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Export_Document_Type);
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.ED_Total_Net_Weight_lbs);
PARAMETER(PAR.ED_Total_Net_Weight_MT);
PARAMETER(PAR.ED_Nbr_of_Packages);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 // PAR.ED Total Net Weight lbs = PAR.ED Total Net Weight lbs + DB1.ED Product Net Weight lbs
 PAR.ED_Total_Net_Weight_lbs = PAR.ED_Total_Net_Weight_lbs
 + DB1.ED_Product_Net_Weight_lbs;

 // PAR.ED Nbr of Packages = PAR.ED Nbr of Packages + DB1.ED Product Nbr of Pkgs
 PAR.ED_Nbr_of_Packages = PAR.ED_Nbr_of_Packages + DB1.ED_Product_Nbr_of_Pkgs;

 // PAR.ED Total Net Weight MT = PAR.ED Total Net Weight MT + DB1.ED Product Net Weight MT
 PAR.ED_Total_Net_Weight_MT = PAR.ED_Total_Net_Weight_MT + DB1.ED_Product_Net_Weight_MT;

 ENDIF;

}


ENDIF;

//?DONT do this:  type wasnt getting shpAmts!RST ON EXP DOC TYPE/COUNTRY TOO
EXECUTE FUNCTION(Rtv/Chg Order Hdr Amts RT) TYPE(RTVOBJ) FILE(PDMRREP)          AC1612853;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.ED_Total_Net_Weight_lbs);
PARAMETER(PAR.ED_Total_Net_Weight_MT);
PARAMETER(PAR.ED_Nbr_of_Packages);
PARAMETER(LCL.Header_Status);
{
 //?USER: Process Data record

 //?New 3/17/09
 //?4/23/19  Put orig code in CASE If shipped/invoiced
 //?If shipped/invoiced - update with manifest totals
 CASE;

 // IF PAR.Header Status is Confirmed & Complete
 IF PAR.Header_Status = 'C'/'R';

 EXECUTE FUNCTION(RTV Sum Gross Wt      RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1927373;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.ED_Total_Gross_Weight_lbs);
 {
  //?USER: Initialize routine

  //?RMC 3/17/09  new for exp docs
  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Weight Total 13.2     USR = PAR.Weight Total 13.2     USR + DB1.Manifest Gross Weight
  PAR.Weight_Total_13_2_USR = PAR.Weight_Total_13_2_USR + DB1.Manifest_Gross_Weight;

 }

 CASE;

 // IF DB1.Country Code is Not China
 IF DB1.Country_Code <> 'CHN';

 // LCL.ED Total Gross Weight MT = LCL.ED Total Gross Weight lbs / CON.2204.6 *Rounded
 LCL.ED_Total_Gross_Weight_MT = LCL.ED_Total_Gross_Weight_lbs / 2204.6 'H';

 // LCL.ED Total Net Weight MT = PAR.ED Total Net Weight MT
 LCL.ED_Total_Net_Weight_MT = PAR.ED_Total_Net_Weight_MT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Total Gross Weight MT = DB1.ED Total Gross Weight MT
 LCL.ED_Total_Gross_Weight_MT = DB1.ED_Total_Gross_Weight_MT;

 // LCL.ED Total Net Weight MT = DB1.ED Total Net Weight MT
 LCL.ED_Total_Net_Weight_MT = DB1.ED_Total_Net_Weight_MT;

 ENDIF;

 CASE;

 // IF DB1.ED Export Document Type is Form 9060-7 (Casings)
 IF DB1.ED_Export_Document_Type = 'G';

 // LCL.ED Nbr of Packages = DB1.ED Nbr of Packages
 LCL.ED_Nbr_of_Packages = DB1.ED_Nbr_of_Packages;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ED Nbr of Packages = PAR.ED Nbr of Packages
 LCL.ED_Nbr_of_Packages = PAR.ED_Nbr_of_Packages;

 ENDIF;

 EXECUTE FUNCTION(Chg Exp Doc Order Hdr  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1523843;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Area_Office);
 PARAMETER(DB1.ED_Destination);
 PARAMETER(DB1.ED_Consignor_Name);
 PARAMETER(DB1.ED_Consignor_Addr_1);
 PARAMETER(DB1.ED_Consignor_Addr_2);
 PARAMETER(DB1.ED_Consignor_Addr_3);
 PARAMETER(DB1.ED_Consignor_Addr_4);
 PARAMETER(DB1.ED_Consignor_State);
 PARAMETER(DB1.ED_Consignor_Postal);
 PARAMETER(DB1.ED_Consignor_Country_Code);
 PARAMETER(DB1.ED_Consignee_Name);
 PARAMETER(DB1.ED_Consignee_Addr_1);
 PARAMETER(DB1.ED_Consignee_Addr_2);
 PARAMETER(DB1.ED_Consignee_Addr_3);
 PARAMETER(DB1.ED_Consignee_Addr_4);
 PARAMETER(DB1.ED_Consignee_State);
 PARAMETER(DB1.ED_Consignee_Postal);
 PARAMETER(DB1.ED_Consignee_Country_Code);
 PARAMETER(DB1.ED_Plant_Location_City);
 PARAMETER(DB1.ED_Plant_Location_State);
 PARAMETER(DB1.ED_Plant_Number);
 PARAMETER(DB1.ED_Processing_Plant_Sts);
 PARAMETER(DB1.ED_Attachment_Subtype);
 PARAMETER(DB1.ED_Attachment_Type_Sts);
 PARAMETER(DB1.ED_Xlate_Desc_to_Country);
 PARAMETER(DB1.ED_Unmarked_Txt);
 PARAMETER(DB1.ED_Shipping_Marks_Txt);
 PARAMETER(DB1.ED_Date_of_Slaughter);
 PARAMETER(DB1.ED_Place_of_Slaughter_Txt);
 PARAMETER(DB1.ED_Date_of_Processing);
 PARAMETER(DB1.ED_Place_of_processing_Tx);
 PARAMETER(DB1.ED_Continue_Comment_Txt);
 PARAMETER(DB1.ED_Remark_Constant_1);
 PARAMETER(DB1.ED_Remark_Constant_2);
 PARAMETER(DB1.ED_Remark_Constant_3);
 PARAMETER(DB1.ED_Remark_Constant_4);
 PARAMETER(DB1.ED_Remark_Constant_5);
 PARAMETER(DB1.ED_Remark_Constant_7);
 PARAMETER(DB1.ED_Remark_Constant_8);
 PARAMETER(DB1.ED_Certify_that_the_meat);
 PARAMETER(DB1.ED_Inspector_Name);
 PARAMETER(DB1.ED_Origin_Country);
 PARAMETER(DB1.ED_Port_of_Loading);
 PARAMETER(DB1.ED_Transportion);
 PARAMETER(DB1.ED_Seal_Number_1);
 PARAMETER(DB1.ED_Seal_Number_2);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Nm);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_1);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_2);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Fax);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Phne);
 PARAMETER(DB1.ED_Seaboard_Plant_Fax);
 PARAMETER(DB1.ED_USDA_Cert_Nbr_US);
 PARAMETER(DB1.ED_USDA_Cert_Nbr_CA);
 PARAMETER(DB1.ED_Can_Port_of_Entry);
 PARAMETER(DB1.ED_Can_Reinsp_Est_Nbr);
 PARAMETER(DB1.ED_Can_Reinsp_Est_Name);
 PARAMETER(DB1.ED_Can_Reinsp_Est_City);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_Sts);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_Type);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_p_Crt);
 PARAMETER(DB1.ED_Whole_Bird_Sts);
 PARAMETER(DB1.ED_Marked_Sts);
 PARAMETER(DB1.ED_Tamper_Evident_Sts);
 PARAMETER(DB1.ED_Plant_Contact_Name);
 PARAMETER(DB1.ED_Plant_Contact_Phone);
 PARAMETER(DB1.ED_Modified_Text);
 PARAMETER(DB1.ED_Issued_Crt_for_Exp_Txt);
 PARAMETER(DB1.ED_Species);
 PARAMETER(DB1.ED_Slaughter_Plant_Name);
 PARAMETER(DB1.ED_Slaughter_Plant_Addr_1);
 PARAMETER(DB1.ED_Slaughter_Plant_Addr_2);
 PARAMETER(DB1.ED_Packaging_Plant_Name);
 PARAMETER(DB1.ED_Packaging_Plant_Addr_1);
 PARAMETER(DB1.ED_Packaging_Plant_Addr_2);
 PARAMETER(DB1.ED_Manufact_Plant_Name);
 PARAMETER(DB1.ED_Manufact_Plant_Addr_1);
 PARAMETER(DB1.ED_Manufact_Plant_Addr_2);
 PARAMETER(DB1.ED_USDA_Name_1);
 PARAMETER(DB1.ED_USDA_Name_2);
 PARAMETER(DB1.ED_USDA_Name_3);
 PARAMETER(DB1.ED_Title_of_Official);
 PARAMETER(DB1.ED_Letter_of_Credit_Nbr);
 PARAMETER(DB1.ED_Unused_prd_mo_yr);
 PARAMETER(DB1.ED_Nbr_of_prods_on_1st_pg);
 PARAMETER(DB1.ED_Importer_Name);
 PARAMETER(DB1.ED_Importer_Addr_1);
 PARAMETER(DB1.ED_Importer_Addr_2);
 PARAMETER(DB1.ED_Purchaser_Name);
 PARAMETER(DB1.ED_Purchaser_Addr_1);
 PARAMETER(DB1.ED_Purchaser_Addr_2);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Nm);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_1);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_2);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_3);
 PARAMETER(DB1.ED_Currency);
 PARAMETER(DB1.ED_Conditions_of_Sale);
 PARAMETER(DB1.ED_Total_Unit_Price);
 PARAMETER(DB1.ED_Invoice_Total);
 PARAMETER(DB1.ED_Live_with_PHIS);
 PARAMETER(DB1.ED_Print_Status);
 PARAMETER(PAR.ED_Total_Net_Weight_lbs);
 PARAMETER(LCL.ED_Total_Net_Weight_MT);
 PARAMETER(LCL.ED_Nbr_of_Packages);
 PARAMETER(DB1.ED_Customer_PO_#);
 PARAMETER(LCL.ED_Total_Gross_Weight_lbs);
 PARAMETER(LCL.ED_Total_Gross_Weight_MT);
 PARAMETER(DB1.ED_Plant_Number_Dtl);
 PARAMETER(DB1.ED_Language_Xlate_Desc_2);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_3);
 PARAMETER(DB1.ED_Production_mo_yr_ln_3);
 PARAMETER(DB1.ED_Remark_Constant_6);
 PARAMETER(DB1.ED_Allow_Print_bef_Ship);
 PARAMETER(DB1.ED_Cert_of_Orig_Sbd_addr);
 PARAMETER(DB1.ED_Use_item_label_1_2);
 PARAMETER(DB1.ED_Slg_Proc_Date_Format);
 PARAMETER(DB1.ED_Total_Package_UOM);
 PARAMETER(DB1.ED_Export_Certificate_Nbr);
 PARAMETER(DB1.ED_Sail_Date);
 PARAMETER(DB1.ED_Sworn_on_Date);
 PARAMETER(DB1.ED_Consignee_Address_Nbr);
 PARAMETER(DB1.ED_Form_Identification_Tx);
 PARAMETER(DB1.ED_Cold_Storage_Name);
 PARAMETER(DB1.ED_Cold_Storage_Addr_1);
 PARAMETER(DB1.ED_Cold_Storage_Addr_2);
 PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
 PARAMETER(DB1.ED_Production_mo_yr_ln_1);
 PARAMETER(DB1.ED_Production_mo_yr_ln_2);
 PARAMETER(DB1.ED_Booking_Nbr);
 PARAMETER(DB1.ED_Document_Date);
 PARAMETER(DB1.ED_Packing_Date);
 PARAMETER(DB1.ED_Expiration_Date);
 PARAMETER(DB1.ED_Packing_Date_To);
 PARAMETER(DB1.ED_Unused_Date_2);
 PARAMETER(DB1.ED_Print_Kilograms);
 PARAMETER(DB1.ED_MPR_Canadian_Province);
 PARAMETER(DB1.ED_Container_Nbrs);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_2);
 PARAMETER(DB1.ED_Submit_Status);
 PARAMETER(DB1.EDOH_Unused_Sts_2);
 PARAMETER(DB1.EDOH_Unused_Text_1);
 PARAMETER(DB1.EDOH_Unused_Text_2);
 PARAMETER(DB1.EDOH_Unused_Number_1);
 PARAMETER(DB1.EDOH_Unused_Date_1);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?USER: Processing after Data read

  CASE;

  // IF DB1.ED Export Document Type is MPD
  IF DB1.ED_Export_Document_Type = 'H';

  // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
  OR DB1.ED_Export_Document_Type = 'E';

  //?The H and or the E record are the only records that we would
  //?want to write out the comments records
  //?on the A record even if the consignee or consignor are
  //?changed do not write out these records
  //?R16637 DN 09/10/20-Pass in New Consignor/Consignee Fields.
  // Call program Rtv/Consignor/ConsigneXF.
  CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(DB1.ED_Consignor_Name);
  PARAMETER(DB1.ED_Consignor_Addr_1);
  PARAMETER(DB1.ED_Consignor_Addr_2);
  PARAMETER(DB1.ED_Consignor_Addr_3);
  PARAMETER(DB1.ED_Consignor_Addr_4);
  PARAMETER(DB1.ED_Consignor_State);
  PARAMETER(DB1.ED_Consignor_Postal);
  PARAMETER(DB1.ED_Consignor_Country_Code);
  PARAMETER(DB1.ED_Consignee_Name);
  PARAMETER(DB1.ED_Consignee_Addr_1);
  PARAMETER(DB1.ED_Consignee_Addr_2);
  PARAMETER(DB1.ED_Consignee_Addr_3);
  PARAMETER(DB1.ED_Consignee_Addr_4);
  PARAMETER(DB1.ED_Consignee_State);
  PARAMETER(DB1.ED_Consignee_Postal);
  PARAMETER(DB1.ED_Consignee_Country_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.ED_Area_Office);
  PARAMETER(PAR.ED_Destination);
  PARAMETER(PAR.ED_Consignor_Name);
  PARAMETER(PAR.ED_Consignor_Addr_1);
  PARAMETER(PAR.ED_Consignor_Addr_2);
  PARAMETER(PAR.ED_Consignor_Addr_3);
  PARAMETER(PAR.ED_Consignor_Addr_4);
  PARAMETER(PAR.ED_Consignor_State);
  PARAMETER(PAR.ED_Consignor_Postal);
  PARAMETER(PAR.ED_Consignor_Country_Code);
  PARAMETER(PAR.ED_Consignee_Name);
  PARAMETER(PAR.ED_Consignee_Addr_1);
  PARAMETER(PAR.ED_Consignee_Addr_2);
  PARAMETER(PAR.ED_Consignee_Addr_3);
  PARAMETER(PAR.ED_Consignee_Addr_4);
  PARAMETER(PAR.ED_Consignee_State);
  PARAMETER(PAR.ED_Consignee_Postal);
  PARAMETER(PAR.ED_Consignee_Country_Code);

  ENDIF;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 //?4/23/19  Put new  code in CASE If NOT shipped/invoiced
 //?If NOT Casing, Then Continue Processing.
 CASE;

 // IF NOT DB1.ED Export Document Type is Form 9060-7 (Casings)
 IF ! DB1.ED_Export_Document_Type = 'G';

 //?Business wants to enter the Qty/Wgts & not system updating it.
 //?If NOT shipped/invoiced - update with max wt and package totals
 CASE;

 // IF PAR.Header Status is Not Comp/Canc/Conf
 IF PAR.Header_Status = 'L'/'A'/'E'/'H';

 // LCL.ED Total Gross Weight MT = PAR.ED Total Net Weight lbs / CON.2204.6 *Rounded
 LCL.ED_Total_Gross_Weight_MT = PAR.ED_Total_Net_Weight_lbs / 2204.6 'H';

 // LCL.ED Total Gross Weight lbs = PAR.ED Total Net Weight lbs
 LCL.ED_Total_Gross_Weight_lbs = PAR.ED_Total_Net_Weight_lbs;

 EXECUTE FUNCTION(Chg Exp Doc Order Hdr  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1523843;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.ED_Export_Document_Type);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.ED_Area_Office);
 PARAMETER(DB1.ED_Destination);
 PARAMETER(DB1.ED_Consignor_Name);
 PARAMETER(DB1.ED_Consignor_Addr_1);
 PARAMETER(DB1.ED_Consignor_Addr_2);
 PARAMETER(DB1.ED_Consignor_Addr_3);
 PARAMETER(DB1.ED_Consignor_Addr_4);
 PARAMETER(DB1.ED_Consignor_State);
 PARAMETER(DB1.ED_Consignor_Postal);
 PARAMETER(DB1.ED_Consignor_Country_Code);
 PARAMETER(DB1.ED_Consignee_Name);
 PARAMETER(DB1.ED_Consignee_Addr_1);
 PARAMETER(DB1.ED_Consignee_Addr_2);
 PARAMETER(DB1.ED_Consignee_Addr_3);
 PARAMETER(DB1.ED_Consignee_Addr_4);
 PARAMETER(DB1.ED_Consignee_State);
 PARAMETER(DB1.ED_Consignee_Postal);
 PARAMETER(DB1.ED_Consignee_Country_Code);
 PARAMETER(DB1.ED_Plant_Location_City);
 PARAMETER(DB1.ED_Plant_Location_State);
 PARAMETER(DB1.ED_Plant_Number);
 PARAMETER(DB1.ED_Processing_Plant_Sts);
 PARAMETER(DB1.ED_Attachment_Subtype);
 PARAMETER(DB1.ED_Attachment_Type_Sts);
 PARAMETER(DB1.ED_Xlate_Desc_to_Country);
 PARAMETER(DB1.ED_Unmarked_Txt);
 PARAMETER(DB1.ED_Shipping_Marks_Txt);
 PARAMETER(DB1.ED_Date_of_Slaughter);
 PARAMETER(DB1.ED_Place_of_Slaughter_Txt);
 PARAMETER(DB1.ED_Date_of_Processing);
 PARAMETER(DB1.ED_Place_of_processing_Tx);
 PARAMETER(DB1.ED_Continue_Comment_Txt);
 PARAMETER(DB1.ED_Remark_Constant_1);
 PARAMETER(DB1.ED_Remark_Constant_2);
 PARAMETER(DB1.ED_Remark_Constant_3);
 PARAMETER(DB1.ED_Remark_Constant_4);
 PARAMETER(DB1.ED_Remark_Constant_5);
 PARAMETER(DB1.ED_Remark_Constant_7);
 PARAMETER(DB1.ED_Remark_Constant_8);
 PARAMETER(DB1.ED_Certify_that_the_meat);
 PARAMETER(DB1.ED_Inspector_Name);
 PARAMETER(DB1.ED_Origin_Country);
 PARAMETER(DB1.ED_Port_of_Loading);
 PARAMETER(DB1.ED_Transportion);
 PARAMETER(DB1.ED_Seal_Number_1);
 PARAMETER(DB1.ED_Seal_Number_2);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Nm);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_1);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_2);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Fax);
 PARAMETER(DB1.ED_Can_Import_Cntrl_Phne);
 PARAMETER(DB1.ED_Seaboard_Plant_Fax);
 PARAMETER(DB1.ED_USDA_Cert_Nbr_US);
 PARAMETER(DB1.ED_USDA_Cert_Nbr_CA);
 PARAMETER(DB1.ED_Can_Port_of_Entry);
 PARAMETER(DB1.ED_Can_Reinsp_Est_Nbr);
 PARAMETER(DB1.ED_Can_Reinsp_Est_Name);
 PARAMETER(DB1.ED_Can_Reinsp_Est_City);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_Sts);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_Type);
 PARAMETER(DB1.ED_Herm_Sealed_Cntr_p_Crt);
 PARAMETER(DB1.ED_Whole_Bird_Sts);
 PARAMETER(DB1.ED_Marked_Sts);
 PARAMETER(DB1.ED_Tamper_Evident_Sts);
 PARAMETER(DB1.ED_Plant_Contact_Name);
 PARAMETER(DB1.ED_Plant_Contact_Phone);
 PARAMETER(DB1.ED_Modified_Text);
 PARAMETER(DB1.ED_Issued_Crt_for_Exp_Txt);
 PARAMETER(DB1.ED_Species);
 PARAMETER(DB1.ED_Slaughter_Plant_Name);
 PARAMETER(DB1.ED_Slaughter_Plant_Addr_1);
 PARAMETER(DB1.ED_Slaughter_Plant_Addr_2);
 PARAMETER(DB1.ED_Packaging_Plant_Name);
 PARAMETER(DB1.ED_Packaging_Plant_Addr_1);
 PARAMETER(DB1.ED_Packaging_Plant_Addr_2);
 PARAMETER(DB1.ED_Manufact_Plant_Name);
 PARAMETER(DB1.ED_Manufact_Plant_Addr_1);
 PARAMETER(DB1.ED_Manufact_Plant_Addr_2);
 PARAMETER(DB1.ED_USDA_Name_1);
 PARAMETER(DB1.ED_USDA_Name_2);
 PARAMETER(DB1.ED_USDA_Name_3);
 PARAMETER(DB1.ED_Title_of_Official);
 PARAMETER(DB1.ED_Letter_of_Credit_Nbr);
 PARAMETER(DB1.ED_Unused_prd_mo_yr);
 PARAMETER(DB1.ED_Nbr_of_prods_on_1st_pg);
 PARAMETER(DB1.ED_Importer_Name);
 PARAMETER(DB1.ED_Importer_Addr_1);
 PARAMETER(DB1.ED_Importer_Addr_2);
 PARAMETER(DB1.ED_Purchaser_Name);
 PARAMETER(DB1.ED_Purchaser_Addr_1);
 PARAMETER(DB1.ED_Purchaser_Addr_2);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Nm);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_1);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_2);
 PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_3);
 PARAMETER(DB1.ED_Currency);
 PARAMETER(DB1.ED_Conditions_of_Sale);
 PARAMETER(DB1.ED_Total_Unit_Price);
 PARAMETER(DB1.ED_Invoice_Total);
 PARAMETER(DB1.ED_Live_with_PHIS);
 PARAMETER(DB1.ED_Print_Status);
 PARAMETER(PAR.ED_Total_Net_Weight_lbs);
 PARAMETER(PAR.ED_Total_Net_Weight_MT);
 PARAMETER(PAR.ED_Nbr_of_Packages);
 PARAMETER(DB1.ED_Customer_PO_#);
 PARAMETER(LCL.ED_Total_Gross_Weight_lbs);
 PARAMETER(LCL.ED_Total_Gross_Weight_MT);
 PARAMETER(DB1.ED_Plant_Number_Dtl);
 PARAMETER(DB1.ED_Language_Xlate_Desc_2);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_3);
 PARAMETER(DB1.ED_Production_mo_yr_ln_3);
 PARAMETER(DB1.ED_Remark_Constant_6);
 PARAMETER(DB1.ED_Allow_Print_bef_Ship);
 PARAMETER(DB1.ED_Cert_of_Orig_Sbd_addr);
 PARAMETER(DB1.ED_Use_item_label_1_2);
 PARAMETER(DB1.ED_Slg_Proc_Date_Format);
 PARAMETER(DB1.ED_Total_Package_UOM);
 PARAMETER(DB1.ED_Export_Certificate_Nbr);
 PARAMETER(DB1.ED_Sail_Date);
 PARAMETER(DB1.ED_Sworn_on_Date);
 PARAMETER(DB1.ED_Consignee_Address_Nbr);
 PARAMETER(DB1.ED_Form_Identification_Tx);
 PARAMETER(DB1.ED_Cold_Storage_Name);
 PARAMETER(DB1.ED_Cold_Storage_Addr_1);
 PARAMETER(DB1.ED_Cold_Storage_Addr_2);
 PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
 PARAMETER(DB1.ED_Production_mo_yr_ln_1);
 PARAMETER(DB1.ED_Production_mo_yr_ln_2);
 PARAMETER(DB1.ED_Booking_Nbr);
 PARAMETER(DB1.ED_Document_Date);
 PARAMETER(DB1.ED_Packing_Date);
 PARAMETER(DB1.ED_Expiration_Date);
 PARAMETER(DB1.ED_Packing_Date_To);
 PARAMETER(DB1.ED_Unused_Date_2);
 PARAMETER(DB1.ED_Print_Kilograms);
 PARAMETER(DB1.ED_MPR_Canadian_Province);
 PARAMETER(DB1.ED_Container_Nbrs);
 PARAMETER(DB1.ED_Slaughter_Date_CofE_2);
 PARAMETER(DB1.ED_Submit_Status);
 PARAMETER(DB1.EDOH_Unused_Sts_2);
 PARAMETER(DB1.EDOH_Unused_Text_1);
 PARAMETER(DB1.EDOH_Unused_Text_2);
 PARAMETER(DB1.EDOH_Unused_Number_1);
 PARAMETER(DB1.EDOH_Unused_Date_1);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?USER: Processing after Data read

  CASE;

  // IF DB1.ED Export Document Type is MPD
  IF DB1.ED_Export_Document_Type = 'H';

  // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
  OR DB1.ED_Export_Document_Type = 'E';

  //?The H and or the E record are the only records that we would
  //?want to write out the comments records
  //?on the A record even if the consignee or consignor are
  //?changed do not write out these records
  //?R16637 DN 09/10/20-Pass in New Consignor/Consignee Fields.
  // Call program Rtv/Consignor/ConsigneXF.
  CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(DB1.ED_Consignor_Name);
  PARAMETER(DB1.ED_Consignor_Addr_1);
  PARAMETER(DB1.ED_Consignor_Addr_2);
  PARAMETER(DB1.ED_Consignor_Addr_3);
  PARAMETER(DB1.ED_Consignor_Addr_4);
  PARAMETER(DB1.ED_Consignor_State);
  PARAMETER(DB1.ED_Consignor_Postal);
  PARAMETER(DB1.ED_Consignor_Country_Code);
  PARAMETER(DB1.ED_Consignee_Name);
  PARAMETER(DB1.ED_Consignee_Addr_1);
  PARAMETER(DB1.ED_Consignee_Addr_2);
  PARAMETER(DB1.ED_Consignee_Addr_3);
  PARAMETER(DB1.ED_Consignee_Addr_4);
  PARAMETER(DB1.ED_Consignee_State);
  PARAMETER(DB1.ED_Consignee_Postal);
  PARAMETER(DB1.ED_Consignee_Country_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.ED_Area_Office);
  PARAMETER(PAR.ED_Destination);
  PARAMETER(PAR.ED_Consignor_Name);
  PARAMETER(PAR.ED_Consignor_Addr_1);
  PARAMETER(PAR.ED_Consignor_Addr_2);
  PARAMETER(PAR.ED_Consignor_Addr_3);
  PARAMETER(PAR.ED_Consignor_Addr_4);
  PARAMETER(PAR.ED_Consignor_State);
  PARAMETER(PAR.ED_Consignor_Postal);
  PARAMETER(PAR.ED_Consignor_Country_Code);
  PARAMETER(PAR.ED_Consignee_Name);
  PARAMETER(PAR.ED_Consignee_Addr_1);
  PARAMETER(PAR.ED_Consignee_Addr_2);
  PARAMETER(PAR.ED_Consignee_Addr_3);
  PARAMETER(PAR.ED_Consignee_Addr_4);
  PARAMETER(PAR.ED_Consignee_State);
  PARAMETER(PAR.ED_Consignee_Postal);
  PARAMETER(PAR.ED_Consignee_Country_Code);

  ENDIF;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

}


