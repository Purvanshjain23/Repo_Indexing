     H/TITLE CLC Must Ship-Reqd Dlv XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 08/06/19  Time  : 15:59:00
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FOPBGWKLAIF  E           K        DISK
      * RSQ : Order Detail              co/
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPMAMREL1IF  E           K        DISK
      * RTV : Order Header Extension    Retrieval index
      *
     FPDLCREL0IF  E           K        DISK
      * RTV : Shipping Line/Port        Retrieval index
      *
     FPDLFREL1IF  E           K        DISK
      * RTV : Mileage Between Cities    Retrieval index
      *
     FPDLGCPL2IF  E           K        DISK
      * RSQ : Legal Run Mileage Hours   Rtv Index w/ Desc Miles
      *
     FCADPREL1IF  E           K        DISK
      * RTV : System Values             Retrieval index       NV
      *
     E                    AR1        30  1               ARRAY 1
     E                    AR2        30  1               ARRAY 2
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@BGWKAE
      * Order Detail              co/
      * Renamed input format fields
     I              OMAIC3                          WAAIC3
     I              OMC4NB                          WAC4NB
     I              OMDPNB                          WADPNB
     I              OMUENB                          WAUENB
     I              OMHGCD                          WAHGCD
     I              OMAJCD                          WAAJCD
     I              OMBKC7                          WABKC7
     I              OMCFC7                          WACFC7
     I              OMGMST                          WAGMST
     I              OMGNST                          WAGNST
     I              OMMAVA                          WAMAVA
     I              OMKDVA                          WAKDVA
     I              OML8VA                          WAL8VA
     I              OML9VA                          WAL9VA
     I              OMGTST                          WAGTST
     I              OMGVST                          WAGVST
     I              OMGUST                          WAGUST
     I              OMQFST                          WAQFST
     I              OMAYVA                          WAAYVA
     I              OMEXDT                          WAEXDT
     I              OMLQCD                          WALQCD
     I              OMRDCD                          WARDCD
     I              OMQ7CD                          WAQ7CD
     I              OMBZPR                          WABZPR
     I              OML6NB                          WAL6NB
     I              OMU1ST                          WAU1ST
     I              OMGIDT                          WAGIDT
     I              OMCRCD                          WACRCD
     I              OMAGCD                          WAAGCD
     I              OMRZST                          WARZST
     I              OMR0ST                          WAR0ST
     I              OMR1ST                          WAR1ST
     I              OMG7NA                          WAG7NA
     I              OMG8NA                          WAG8NA
     I              OMRPCD                          WARPCD
     I              OMVEST                          WAVEST
     I              OMVGST                          WAVGST
     I              OMAVST                          WAAVST
     I              OMU0ST                          WAU0ST
     I              OMRFCD                          WARFCD
     I              OMFZST                          WAFZST
     I              OMR1NB                          WAR1NB
     I              OMAVQT                          WAAVQT
     I              OMD0WG                          WAD0WG
     I              OMCCQT                          WACCQT
     I              OMAUWG                          WAAUWG
     I              OMCBQT                          WACBQT
     I              OMATWG                          WAATWG
     I              OMAQCS                          WAAQCS
     I              OMAGCS                          WAAGCS
     I              OMAKPR                          WAAKPR
     I              OMALPR                          WAALPR
     I              OMAUPR                          WAAUPR
     I              OMAVWG                          WAAVWG
     I              OMA4WG                          WAA4WG
     I              OMA5DT                          WAA5DT
     I              OMAODT                          WAAODT
     I              OMGNDT                          WAGNDT
     I              OMAMST                          WAAMST
     I              OMANST                          WAANST
     I              OMVAST                          WAVAST
     I              OMRGNB                          WARGNB
     I              OMRHNB                          WARHNB
     I              OMRINB                          WARINB
     I              OMRBCD                          WARBCD
     I              OMHICD                          WAHICD
     I              OMRNCD                          WARNCD
     I              OMROCD                          WAROCD
     I              OMCXDT                          WACXDT
     I              OMAJVN                          WAAJVN
     I              OMKXCD                          WAKXCD
     I              OMJPCD                          WAJPCD
     I              OMCQCD                          WACQCD
     I              OMR4CD                          WAR4CD
     I              OMZ1ST                          WAZ1ST
     I              OMZ3ST                          WAZ3ST
     I              OMZ4ST                          WAZ4ST
     I              OMDUPR                          WADUPR
     I              OMB6VL                          WAB6VL
     I              OMA1AA                          WAA1AA
     I              OMFZSX                          WAFZSX
     I              OMF0SX                          WAF0SX
     I              OMF1SX                          WAF1SX
     I              OMF2SX                          WAF2SX
     I              OMF3SX                          WAF3SX
     I              OMF4SX                          WAF4SX
     I              OMF5SX                          WAF5SX
     I              OMF6SX                          WAF6SX
     I              OMF7SX                          WAF7SX
     I              OMNTDT                          WANTDT
     I              OMNUDT                          WANUDT
     I              OMNVDT                          WANVDT
     I              OMNWDT                          WANWDT
     I              OMNXDT                          WANXDT
     I              OMBUTM                          WABUTM
     I              OMBVTM                          WABVTM
     I              OMBWTM                          WABWTM
     I              OMBXTM                          WABXTM
     I              OMBYTM                          WABYTM
     I              OMH5NX                          WAH5NX
     I              OMH6NX                          WAH6NX
     I              OMH7NX                          WAH7NX
     I              OMH8NX                          WAH8NX
     I              OMH9NX                          WAH9NX
     I              OMDVPR                          WADVPR
     I              OMDWPR                          WADWPR
     I              OMDXPR                          WADXPR
     I              OMDYPR                          WADYPR
     I              OMDZPR                          WADZPR
     I              OMGSPR                          WAGSPR
     I              OMGTPR                          WAGTPR
     I              OMGUPR                          WAGUPR
     I              OMHOST                          WAHOST
     I              OMHPST                          WAHPST
     I              OMIOST                          WAIOST
     I              OMPEWG                          WAPEWG
     I              OMRINY                          WARINY
     I              OMTIDT                          WATIDT
     I              OMTJDT                          WATJDT
     I              OMH2ST                          WAH2ST
     I              OMH0ST                          WAH0ST
     I              OMH1ST                          WAH1ST
     I              OMTKDT                          WATKDT
     I              OMTLDT                          WATLDT
     I              OMTMDT                          WATMDT
     I              OMUVST                          WAUVST
     I              OMUWST                          WAUWST
     I              OMUXST                          WAUXST
     I              OMAATM                          WAAATM
     I              OMAYNA                          WAAYNA
     I              OMA0NA                          WAA0NA
     I              OMAXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@AMREJF
      * Order Header Extension    Retrieval index
      * Renamed input format fields
     I              AMAIC3                          WCAIC3
     I              AMC4NB                          WCC4NB
     I              AMRMNB                          WCRMNB
     I              AMRUNB                          WCRUNB
     I              AMXACD                          WCXACD
     I              AMOANA                          WCOANA
     I              AMHBAA                          WCHBAA
     I              AMJ0T1                          WCJ0T1
     I              AMGENY                          WCGENY
     I              AMJ1T1                          WCJ1T1
     I              AMHCAA                          WCHCAA
     I              AMQWDT                          WCQWDT
     I              AMQXDT                          WCQXDT
     I              AMQYDT                          WCQYDT
     I              AMHDAA                          WCHDAA
     I              AMCCTX                          WCCCTX
     I              AMJ2T1                          WCJ2T1
     I              AMRLNA                          WCRLNA
     I              AMRMNA                          WCRMNA
     I              AMGINY                          WCGINY
     I              AMGFNY                          WCGFNY
     I              AMGGNY                          WCGGNY
     I              AMGHNY                          WCGHNY
     I              AMHEVL                          WCHEVL
     I              AMHFVL                          WCHFVL
     I              AMHGVL                          WCHGVL
     I              AMQZDT                          WCQZDT
     I              AMQ0DT                          WCQ0DT
     I              AMQ1DT                          WCQ1DT
     I              AMQ2DT                          WCQ2DT
     I              AMC2TX                          WCC2TX
     I              AMC3TX                          WCC3TX
     I              AMC6TX                          WCC6TX
     I              AMCHTX                          WCCHTX
     I              AMCITX                          WCCITX
     I              AMCLTX                          WCCLTX
     I              AMB4TX                          WCB4TX
     I              AMCUTX                          WCCUTX
     I              AMCVTX                          WCCVTX
     I              AMB9TX                          WCB9TX
     I              AMJWSC                          WCJWSC
     I              AMITNY                          WCITNY
     I              AMLMT1                          WCLMT1
     I              AMLWAA                          WCLWAA
     I              AMFVST                          WCFVST
     I              AMF0ST                          WCF0ST
     I              AMF2ST                          WCF2ST
     I              AMF3ST                          WCF3ST
     I              AMJUSC                          WCJUSC
     I              AMJVSC                          WCJVSC
     I              AMV3T1                          WCV3T1
     I              AMV4T1                          WCV4T1
     I              AMV5T1                          WCV5T1
     I              AMV6T1                          WCV6T1
     I              AMV7T1                          WCV7T1
     I              AMV8T1                          WCV8T1
     I              AMV9T1                          WCV9T1
     I              AMWAT1                          WCWAT1
     I              AMWBT1                          WCWBT1
     I              AMWCT1                          WCWCT1
     I              AMWDT1                          WCWDT1
     I              AMQJNY                          WCQJNY
     I              AMQKNY                          WCQKNY
     I              AMQLNY                          WCQLNY
     I              AMP8NY                          WCP8NY
     I              AMP9NY                          WCP9NY
     I              AMQANY                          WCQANY
     I              AMQCNY                          WCQCNY
     I              AMQDNY                          WCQDNY
     I              AMQENY                          WCQENY
     I              AMQFNY                          WCQFNY
     I              AMQGNY                          WCQGNY
     I              AMQHNY                          WCQHNY
     I              AMQINY                          WCQINY
     I              AMQMNY                          WCQMNY
     I              AMMYU1                          WCMYU1
     I              AMJXSC                          WCJXSC
     I              AMJYSC                          WCJYSC
     I              AMJZSC                          WCJZSC
     I              AMJ0SC                          WCJ0SC
     I              AMMZU1                          WCMZU1
     I              AMM0U1                          WCM0U1
     I              AMM1U1                          WCM1U1
     I              AMM2U1                          WCM2U1
     I              AMM3U1                          WCM3U1
     I              AMW5DT                          WCW5DT
     I              AMW6DT                          WCW6DT
     I              AMUVST                          WCUVST
     I              AMUWST                          WCUWST
     I              AMUXST                          WCUXST
     I              AMVSST                          WCVSST
     I              AMAATM                          WCAATM
     I              AMAYNA                          WCAYNA
     I              AMA0NA                          WCA0NA
     I              AMAXDT                          WCAXDT
      *
     I@LCREL2
      * Shipping Line/Port        Retrieval index
      * Renamed input format fields
     I              LCXACD                          WDXACD
     I              LCOANA                          WDOANA
     I              LCOKTX                          WDOKTX
     I              LCLBTX                          WDLBTX
     I              LCLATX                          WDLATX
     I              LCXBCD                          WDXBCD
     I              LCLCTX                          WDLCTX
     I              LCSPPN                          WDSPPN
     I              LCLDTX                          WDLDTX
     I              LCPYAA                          WDPYAA
     I              LCUVST                          WDUVST
     I              LCUWST                          WDUWST
     I              LCUXST                          WDUXST
     I              LCVSST                          WDVSST
     I              LCAATM                          WDAATM
     I              LCAYNA                          WDAYNA
     I              LCA0NA                          WDA0NA
     I              LCAXDT                          WDAXDT
      *
     I@LFRENA
      * Mileage Between Cities    Retrieval index
      * Renamed input format fields
     I              LFXFCD                          WEXFCD
     I              LFXICD                          WEXICD
     I              LFXGCD                          WEXGCD
     I              LFXHCD                          WEXHCD
     I              LFRWNB                          WERWNB
      *
     I@LGCPNM
      * Legal Run Mileage Hours   Rtv Index w/ Desc Miles
      * Renamed input format fields
     I              LGMILE                          WFMILE
     I              LGHRRQ                          WFHRRQ
     I              LGAATM                          WFAATM
     I              LGAYNA                          WFAYNA
     I              LGA0NA                          WFA0NA
     I              LGAXDT                          WFAXDT
      *
     I@DPRETD
      * System Values             Retrieval index       NV
      * Renamed input format fields
     I              DPDOCD                          WGDOCD
     I              DPAUNA                          WGAUNA
     I              DPI5ST                          WGI5ST
     I              DPBXTX                          WGBXTX
     I              DPM8NB                          WGM8NB
     I              DPUVST                          WGUVST
     I              DPUWST                          WGUWST
     I              DPUXST                          WGUXST
     I              DPVSST                          WGVSST
     I              DPAATM                          WGAATM
     I              DPAYNA                          WGAYNA
     I              DPA0NA                          WGA0NA
     I              DPAXDT                          WGAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * O :  Must Ship Error
     I                                        1   3 P1B7SX
     IP2PARM      DS
      * FLD: *Arrays
      * I :  Order Number
     I                                    P   1   40P2C4NB
      * I :  Requested Ship Date
     I                                    P   5   80P2A5DT
      * I :  Ship To City
     I                                        9  28 P2HNNA
      * I :  Ship To State Code
     I                                       29  30 P2DBCD
      * I :  Company Number
     I                                    P  31  320P2AIC3
      * I :  Requested Delivery Time
     I                                    P  33  350P2AFTM
      * I :  Requested Delivery Date
     I                                    P  36  390P2EIDT
      * B :  Warehouse Code
     I                                       40  42 P2AJCD
      * B :  Must Ship Date        USR
     I                                    P  43  460P2LYDT
      * B :  Must Ship Time        USR
     I                                    P  47  500P2A5TM
     IP3PARM      DS
      * I :  USR Order Number
     I                                    P   1   40P3MPNB
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1B7SX    PARM P1B7SX    WP0001  3        Must Ship Error
     C           P2C4NB    PARM           WP0002  70       Order Number
     C           P2A5DT    PARM           WP0003  70       Requested Ship
     C           P2HNNA    PARM           WP0004 20        Ship To City
     C           P2DBCD    PARM           WP0005  2        Ship To State C
     C           P2AIC3    PARM           WP0006  30       Company Number
     C           P2AFTM    PARM           WP0007  40       Requested Deliv
     C           P2EIDT    PARM           WP0008  70       Requested Deliv
     C           P2AJCD    PARM P2AJCD    WP0009  3        Warehouse Code
     C           P2LYDT    PARM P2LYDT    WP0010  70       Must Ship Date
     C           P2A5TM    PARM P2A5TM    WP0011  60       Must Ship Time
     C           P3MPNB    PARM           WP0012  70       USR Order Numbe
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * CLC Must Ship-Reqd Dlv XF
      * ** This function is for the Order Header More function.
      * ** It does not test for Scheduled Ship Date errors since there
      * ** is no way to change the SSD in this screen.
      *
     C                     Z-ADD*ZERO     WN0001  70       Scheduled Ship
     C                     Z-ADD*ZERO     WN0002  70       Deadline Depart
     C                     Z-ADD*ZERO     WN0003  60       Deadline Depart
     C                     MOVEL*BLANK    WN0004 20        City
     C                     MOVEL*BLANK    WN0005  2        State Code
     C                     Z-ADD*ZERO     WN0006  50       Miles to next s
     C                     Z-ADD*ZERO     WN0007 155       Current System
     C                     Z-ADD*ZERO     WN0008 155       Current System
     C                     Z-ADD*ZERO     WN0009  50       Stop/Drop
     C                     Z-ADD*ZERO     WN0010  60       Must Ship Time
     C                     Z-ADD*ZERO     WN0011  60       Requested Deliv
      *
      * CLC Must Ship-Reqd Dlv IF
      * ** This function is created for Edit Order Header More.
      * ** It does not test for Scheduled Ship Date errors since there
      * ** is no Scheduled Ship Date on this screen (no way to change it)
     C                     MOVEL*BLANK    P1B7SX           Must Ship Error
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                     CALL 'PDGFUPC'              90  RTV System Date
     C           WN0007    PARM *ZERO     WQ0001 155       Current System
     C           WN0008    PARM *ZERO     WQ0002 155       Current System
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGFUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * If no whse passed in, get the 1st whse on the order
      * CASE: PAR.Warehouse Code EQ WRK.BLANK
     C           P2AJCD    IFEQ WUGSTX                     *IF
      * RTV 1st Warehouse/Ctl  RT - Order Detail  * 
     C                     EXSR SARVGN
     C                     END                             *FI
     C                     MOVEL*BLANK    WN0004           City
     C                     MOVEL*BLANK    WN0005           State Code
      * ** Get City and State for the ship from warehouse
      * RTV Warehouse Address  RT - Warehouse  * 
     C                     EXSR SCRVGN
      * ** Convert City and Ship To City to caps before retrieving miles
      * CVT to Upper w/SpclChr XF - /UT User Source  * 
     C                     CALL 'PMREXFR'              90  CVT to Upper w/
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WN0004    WQ0003 30        Case Sensitive
     C           WN0004    PARM *BLANK    WQ0004 30        Case Upper Fiel
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMREXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CVT to Upper w/SpclChr XF - /UT User Source  * 
     C                     CALL 'PMREXFR'              90  CVT to Upper w/
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P2HNNA    WQ0005 30        Case Sensitive
     C           WUHNNA    PARM *BLANK    WQ0006 30        Case Upper Fiel
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMREXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELP2DBCD    WUDBCD           Ship To State C
      * ** Calcs for International shipments            E00452
      * ** If intern'l & ship line exists, use port city to calc mileage
      * CASE: WRK.Ship To State Code is International Accounts
     C           WUDBCD    IFEQ '.'                        *IF
      * RTV OHE Ship fields    RT - Order Header Extension  * 
     C                     EXSR SDRVGN
      * CASE: LCL.Shipping Line NE LCL.Blank for 30          USR
     C           YL0001    IFNE YL0004                     *IF
      * RTV Shipping Line/PortsRT - Shipping Line/Port  * 
     C                     EXSR SERVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * ** For Intern'l with no port city, default mileage to 1
      * ** so no mileage error and so the calcs can continue
     C                     Z-ADD1         WN0006           Miles to next s
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * ** Get miles between warehouse and customer site
      *
     C                     MOVEL*BLANK    WN0012 20        USR City
     C                     MOVEL*BLANK    WN0013 20        Ship To City
      *
      * RTV Miles Between      IF
     C                     Z-ADD0         WN0006           Miles to next s
      * ensure cities are all caps, no punctuation
      * usr city is From City; Ship to City is To city
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEAWN0004    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
      * * * * * * * CHECK FOR ALPHABETIC CHARACTERS * * * * * * *
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WN0012           LOAD OUTPUT
      * CVT Str to Upper Alpha US - /UT User Source  * 
     C                     MOVEAWUHNNA    AR1              LOAD ARRAY
     C                     MOVEA*BLANK    AR2              LOAD ARRAY
     C                     Z-ADD1         X1      20       SET COUNTER
     C                     Z-ADD1         Y1      20       SET COUNTER
     C           X1        DOWLT31
     C           AR1,X1    IFEQ ' '
     C           AR1,X1    ORGE 'a'
     C           AR1,X1    ANDLE'Z'
     C           AR1,X1    ANDNE'~'
     C           AR1,X1    ANDNE'{'
     C           AR1,X1    ANDNE'}'
     C           AR1,X1    ANDNE'\'
     C                     MOVE AR1,X1    AR2,Y1
     C                     ADD  1         Y1
     C                     ADD  1         X1
     C                     ELSE
     C                     ADD  1         X1
     C                     END
     C                     END
     C                     Z-ADD1         Y1
     C           Y1        DOWLT31
     C           AR2,Y1    IFEQ 'a'
     C                     MOVEL'A'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'b'
     C                     MOVEL'B'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'c'
     C                     MOVEL'C'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'd'
     C                     MOVEL'D'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'e'
     C                     MOVEL'E'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'f'
     C                     MOVEL'F'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'g'
     C                     MOVEL'G'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'h'
     C                     MOVEL'H'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'i'
     C                     MOVEL'I'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'j'
     C                     MOVEL'J'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'k'
     C                     MOVEL'K'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'l'
     C                     MOVEL'L'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'm'
     C                     MOVEL'M'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'n'
     C                     MOVEL'N'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'o'
     C                     MOVEL'O'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'p'
     C                     MOVEL'P'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'q'
     C                     MOVEL'Q'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'r'
     C                     MOVEL'R'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 's'
     C                     MOVEL'S'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 't'
     C                     MOVEL'T'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'u'
     C                     MOVEL'U'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'v'
     C                     MOVEL'V'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'w'
     C                     MOVEL'W'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'x'
     C                     MOVEL'X'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'y'
     C                     MOVEL'Y'       AR2,Y1
     C                     ELSE
     C           AR2,Y1    IFEQ 'z'
     C                     MOVEL'Z'       AR2,Y1
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     END
     C                     ADD  1         Y1
     C                     END
     C                     MOVEAAR2       WN0013           LOAD OUTPUT
      * ** Rtv miles, if none, then reverse the order of cities and check
      * RTV Miles Between      RT - Mileage Between Cities  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0012    WL0001    P      From City
     C                     MOVELWN0005    WL0002    P      From State
     C                     MOVELWN0013    WL0003    P      To City
     C                     MOVELWUDBCD    WL0004    P      To State State
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    WN0006           Miles to next s
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
      * RTV Miles Between      RT - Mileage Between Cities  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0013    WL0001    P      From City
     C                     MOVELWUDBCD    WL0002    P      From State
     C                     MOVELWN0012    WL0003    P      To City
     C                     MOVELWN0005    WL0004    P      To State State
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    WN0006           Miles to next s
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.Miles to next stop is Not Entered
     C           WN0006    IFEQ 0                          *IF
     C                     MOVEL'MTN'     P1B7SX           Must Ship Error
     C                     Z-ADD0         P2LYDT           Must Ship Date
     C                     Z-ADD0         P2A5TM           Must Ship Time
     C                     ELSE
      * CASE: *OTHERWISE
      * E01523 RMC 5/02/2011 Use req delv dt/time for ddt calc always
     C                     Z-ADDP2EIDT    WUBQDT           USR Date - ATR
     C                     Z-ADDP2AFTM    WUHLNX           USR To Time 4.0
      * ** Determine date order Must Ship to be delivered on requested da
      *
     C                     Z-ADD*ZERO     WN0014  51       Hours Required
     C                     Z-ADD*ZERO     WN0015  50       @Days 5
     C                     Z-ADD*ZERO     WN0016  51       @Hours
     C                     Z-ADD*ZERO     WN0017  60       USR Time
      *
      * CLC Must Ship Date     IF
      * ***** Change Log and Comments
     C                     EXSR UASUBR                     ***** Change Lo
      * RTV Legal Run Miles DscRT - Legal Run Mileage/Hours  * 
     C                     EXSR SGRVGN
      * RTV Numeric Value      RT - System Values  * 
     C                     EXSR SHRVGN
     C                     ADD  WN0016    WN0014           Hours Required
     C           WUHLNX    MULT 100       WN0017           USR Time
      * calc number of days and left over hours it takes to get to target
     C                     EXSR UBSUBR                     calc number of
      * Set Time to midnight if SSD <> today; otherwise use calc'd time
      * CASE: PAR.Scheduled Ship Date EQ PAR.Current System Date
     C           WN0001    IFEQ WN0007                     *IF
     C                     Z-ADDP2A5TM    WN0010           Must Ship Time
     C                     Z-ADDP2A5TM    WN0011           Requested Deliv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD240000    WUBBTM           Must Ship Time
     C                     Z-ADD240000    WN0011           Requested Deliv
     C                     END                             *FI
      * ** Check must ship date against system date
      * CASE: PAR.Current System Date GT PAR.Must Ship Date        USR
     C           WN0007    IFGT P2LYDT                     *IF
      * ** Error - should have already shipped
     C                     MOVEL'NOW'     P1B7SX           Must Ship Error
     C                     END                             *FI
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV 1st Warehouse/Ctl  RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSA01           Company Number
     C           *LIKE     DEFN WAC4NB    WQSA02           Order Number
      * Define keylist
     C           KPSSA     KLIST
     C                     KFLD           WQSA01           Company Number
     C                     KFLD           WQSA02           Order Number
     C                     KFLD           WADPNB           Order Sequence
     C                     KFLD           WAUENB           Order Secondary
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Company Number
     C                     KFLD           WQSA02           Order Number
      * Setup key
     C                     Z-ADDP2AIC3    WQSA01           Company Number
     C                     Z-ADDP2C4NB    WQSA02           Order Number
     C                     Z-ADD0         WADPNB           Order Sequence
     C                     Z-ADD0         WAUENB           Order Secondary
      * Establish starting position
     C           KPSSA     SETLL@BGWKAE                    *
     C           KRSSA     READE@BGWKAE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     MOVEL*BLANK    WUG0TX           Trans Contol AS
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Warehouse Control  RT - Warehouse  * 
     C                     EXSR SBRVGN
      * PAR = DB1 By name
     C                     MOVELWAAJCD    P2AJCD           Warehouse Code
     C                     GOTO SAEXIT                     *QUIT
     C           KRSSA     READE@BGWKAE                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Warehouse Control  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWAAJCD    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSB     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUG0TX           Trans Contol AS
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBXUST    WUG0TX           Trans Contol AS
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Warehouse Address  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELP2AJCD    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSC     CHAIN@ADREAO              90    *
      * Data record not found
     C   90                MOVEL'USR0007' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBF8NA    WUG0TX           Warehouse Descr
     C                     MOVELWBACNA    WUG0TX           Address Line 1
     C                     MOVELWBADNA    WUG0TX           Address Line 2
     C                     MOVELWBAENA    WUG0TX           Address Line 3
     C                     MOVELWBAJNA    WN0004           City
     C                     MOVELWBBTTX    WUG0TX           Zip/Postal Code
     C                     MOVELWBBGCD    WN0005           State Code
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV OHE Ship fields    RT - Order Header Extension  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WCAIC3           Company Number
     C                     KFLD           WCC4NB           Order Number
      * Setup key
     C                     Z-ADDP2AIC3    WCAIC3           Company Number
     C                     Z-ADDP2C4NB    WCC4NB           Order Number
      * Establish starting position
     C           KRSSD     CHAIN@AMREJF              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3697' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0001           Shipping Line
     C                     MOVEL*BLANK    YL0002           Port Delv Termi
     C                     MOVEL*BLANK    YL0003           OHE City
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCXACD    YL0001           Shipping Line
     C                     MOVELWCOANA    YL0002           Port Delv Termi
     C                     MOVELWCHBAA    YL0003           OHE City
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Shipping Line/PortsRT - Shipping Line/Port  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WDXACD           Shipping Line
     C                     KFLD           WDOANA           Port Delv Termi
      * Setup key
     C                     MOVELYL0001    WDXACD           Shipping Line
     C                     MOVELYL0002    WDOANA           Port Delv Termi
      * Establish starting position
     C           KRSSE     CHAIN@LCREL2              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2419' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUHNNA           Port City
     C                     MOVEL*BLANK    WUDBCD           Sail Port State
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWDOKTX    WUHNNA           Port City
     C                     MOVELWDXBCD    WUDBCD           Sail Port State
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Miles Between      RT - Mileage Between Cities  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WEXFCD           From City
     C                     KFLD           WEXICD           From State
     C                     KFLD           WEXGCD           To City
     C                     KFLD           WEXHCD           To State State
      * Setup key
     C                     MOVELWL0001    WEXFCD           From City
     C                     MOVELWL0002    WEXICD           From State
     C                     MOVELWL0003    WEXGCD           To City
     C                     MOVELWL0004    WEXHCD           To State State
      * Establish starting position
     C           KRSSF     CHAIN@LFRENA              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2457' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWERWNB    WL0005           Miles to next s
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Legal Run Miles DscRT - Legal Run Mileage/Hours  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WFMILE           Miles to First
      * Setup key
     C                     Z-ADDWN0006    WFMILE           Miles to First
      * Establish starting position
     C           KPSSG     SETLL@LGCPNM                    *
     C                     READ @LGCPNM                  90*
      * Data record not found
     C   90                MOVEL'USR2462' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWFHRRQ    WN0014           Hours Required
     C                     GOTO SGEXIT                     *QUIT
     C                     READ @LGCPNM                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - System Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WGDOCD           System Value Co
      * Setup key
     C                     MOVEL@CN,002   WGDOCD           System Value Co
      * Establish starting position
     C           KRSSH     CHAIN@DPRETD              90    *
      * Data record not found
     C   90                MOVEL'USR0759' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     Z-ADDWGM8NB    WN0016           System Value Nu
     C                     GOTO SHEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * ***** CALCULATION LOGIC
      * 1. Total legal run hours DIVIDED BY 24 = Whole Days (drop decimal
      * 2. Whole days TIMES 24 = Whole day hours
      * 3. Total legal run hours MINUS Whole day hours = Hours Left
      * 4. Hours left TIMES 10000 = Hours left time of day
      *                (i.e. 5 hrs * 10000 = 5:00:00 in the morning)
      * 5. Requested delivery date MINUS Whole days = Must Ship Date
      * 6. If Whole days = zeros, then deliver today
      *     Must Ship Date EQUALS Requested Delivery Date
      * 7. IF Hours left time of day IS *GE Requested Delivery Time
      *     Hours left time of day MINUS Requested delivery time = Time t
      *     Must Ship Date MINUS 1 day = new Must Ship Date
      *     Midnight MINUS Time to subtract = new Must Ship Time
      * 8. IF Hours left time of day IS *LT Requested Delivery Time
      *     Requested deliv time MINUS Hours left time of day = Must Ship
      *                (i.e. 6:00:00 MINUS 5:00:00 = 1:00:00 in the morni
      * ** E00495 LJB 09/24/2009
      * ** Req Deliv Date/Time parms contain Carrier Appointment Date
      * ** and either current time or midnight, if they were entered
      * ** FP1251 LJB 12/26/2007
      * ** Req Deliv Date/Time parms contain Deadline Depart Date
      * ** and either current time or midnight.
      * ** Traffic Dept adds the load time to the legal run hours so I ha
      * ** set the LOADTIME in the System Value file to zeros.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * calc number of days and left over hours it takes to get to targe
      *================================================================
      * calculate # whole days
      * PAR.@Days 5 =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.Hours Required
      * /     : PAR.@Days 5 *
      * x2    : CON.24
     C           WN0014    DIV  24        WN0015           @Days 5
     C                     Z-ADDWN0015    WN0015           @Days 5
      * hours in whole days
      * PAR.@Hours =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.@Days 5
      * *     : PAR.@Hours *
      * x2    : CON.24
     C           WN0015    MULT 24        WN0016           @Hours
     C                     Z-ADDWN0016    WN0016           @Hours
      * Get hours left
      * PAR.@Hours =
      *    *COMPUTE (x1 - x2)
      * x1    : PAR.Hours Required
      * -     : PGM.*Synon (15,0) work field
      * x2    : PAR.@Hours
     C           WN0014    SUB  WN0016    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0016           @Hours
      * convert hours left to time
     C           WN0016    MULT 10000     WUAPTM           Time
      * ** Calculate delivery date by backtracking by whole days
      * CASE: PAR.@Days 5 EQ WRK.ZERO
     C           WN0015    IFEQ WUW0NB                     *IF
      * ** Target city is close enough to deliver today
     C                     Z-ADDWUBQDT    P2LYDT           Must Ship Date
     C                     ELSE
      * CASE: *OTHERWISE
      * ** Subtract whole days from requested delivery date
     C           WN0015    MULT -1        WUBDDY           @Days 5
      * PAR.Must Ship Date        USR = PAR.Requested Delivery Date + WRK
     C           WUBQDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUBDDY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2LYDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2LYDT
     C                     END
     C                     END                             *FI
      * calculate must ship time
      * CASE: WRK.Time GE PAR.USR Time
     C           WUAPTM    IFGE WN0017                     *IF
     C                     SUB  WN0017    WUAPTM           Time
      * PAR.Must Ship Date        USR = PAR.Must Ship Date        USR + C
     C           P2LYDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2LYDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2LYDT
     C                     END
     C           240000    SUB  WUAPTM    P2A5TM           Must Ship Time
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0017    SUB  WUAPTM    P2A5TM           Must Ship Time
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field TXT field not needed
     C                     MOVEL*BLANK    WUG0TX 20
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAC4NB           Order Number
     C                     Z-ADD*ZERO     WADPNB           Order Sequence
     C                     Z-ADD*ZERO     WAUENB           Order Secondary
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WABKC7           Ship To Custome
     C                     Z-ADD*ZERO     WACFC7           Order Group Cod
     C                     Z-ADD*ZERO     WAMAVA           Billing Detail
     C                     Z-ADD*ZERO     WAKDVA           Billing Detail
     C                     Z-ADD*ZERO     WAL8VA           Billing Detail
     C                     Z-ADD*ZERO     WAL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WAAYVA           Extended Amount
     C                     Z-ADD*ZERO     WAEXDT           Market Pricing
     C                     Z-ADD*ZERO     WABZPR           Price Overage O
     C                     Z-ADD*ZERO     WAL6NB           Contract Number
     C                     Z-ADD*ZERO     WAGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WAR1NB           Rated Freight
     C                     Z-ADD*ZERO     WAAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WAD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WACCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WAAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WACBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WAATWG           Weight Shipped
     C                     Z-ADD*ZERO     WAAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WAAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WAAKPR           Unit Price
     C                     Z-ADD*ZERO     WAALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WAAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WAAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WAA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WAA5DT           Requested Ship
     C                     Z-ADD*ZERO     WAAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WAGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WACXDT           Date of Origina
     C                     Z-ADD*ZERO     WADUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WAB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WAA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WANTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WANUDT           Consumed Item C
     C                     Z-ADD*ZERO     WANVDT           Deadline Depart
     C                     Z-ADD*ZERO     WANWDT           OD Price Type R
     C                     Z-ADD*ZERO     WANXDT           OD Unused Date
     C                     Z-ADD*ZERO     WABUTM           Deadline Depart
     C                     Z-ADD*ZERO     WABVTM           Price Code
     C                     Z-ADD*ZERO     WABWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WABXTM           Substitution Li
     C                     Z-ADD*ZERO     WABYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WAH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WAH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WAH7NX           OD Item Target
     C                     Z-ADD*ZERO     WAH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WAH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WADVPR           Order Gate/Fina
     C                     Z-ADD*ZERO     WADWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WADXPR           OD Gate/Final P
     C                     Z-ADD*ZERO     WADYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WADZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WAGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WAGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WAGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WAPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WARINY           Item Age Days
     C                     Z-ADD*ZERO     WATIDT           Production Ovr
     C                     Z-ADD*ZERO     WATJDT           Production Ovr
     C                     Z-ADD*ZERO     WATKDT           OD Market Begin
     C                     Z-ADD*ZERO     WATLDT           OD Market Endin
     C                     Z-ADD*ZERO     WATMDT           OD Atch to Ord
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WBBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WBBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WBBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WBBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Ship To City
     C                     MOVEL*BLANK    WUHNNA 20
      * Define work field Ship To State Code
     C                     MOVEL*BLANK    WUDBCD  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCC4NB           Order Number
     C                     Z-ADD*ZERO     WCRMNB           Load ID
     C                     Z-ADD*ZERO     WCRUNB           Stop/Drop Seque
     C                     Z-ADD*ZERO     WCQWDT           OHE Sail/Flight
     C                     Z-ADD*ZERO     WCQXDT           OHE Port Cut Da
     C                     Z-ADD*ZERO     WCQYDT           OHE Arrival Dat
     C                     Z-ADD*ZERO     WCGINY           OHE Unused Numb
     C                     Z-ADD*ZERO     WCGFNY           OHE Unused Numb
     C                     Z-ADD*ZERO     WCGGNY           OHE Unused Numb
     C                     Z-ADD*ZERO     WCGHNY           OHE Unused Numb
     C                     Z-ADD*ZERO     WCHEVL           OHE HPB RIN Equ
     C                     Z-ADD*ZERO     WCHFVL           OHE HPB RIN Pri
     C                     Z-ADD*ZERO     WCHGVL           Transload Termi
     C                     Z-ADD*ZERO     WCQZDT           OHE Est Arrv at
     C                     Z-ADD*ZERO     WCQ0DT           OHE Backhaul ET
     C                     Z-ADD*ZERO     WCQ1DT           OHE Port/Pier P
     C                     Z-ADD*ZERO     WCQ2DT           OHE Actual Ship
     C                     Z-ADD*ZERO     WCITNY           HPB COA Batch N
     C                     Z-ADD*ZERO     WCQJNY           OHE Backhaul Re
     C                     Z-ADD*ZERO     WCQKNY           LD Stop/Drop
     C                     Z-ADD*ZERO     WCQLNY           OHE Unused Numb
     C                     Z-ADD*ZERO     WCP8NY           OHE Pier Pass F
     C                     Z-ADD*ZERO     WCP9NY           OHE Port Check
     C                     Z-ADD*ZERO     WCQANY           OHE Port Cut Ti
     C                     Z-ADD*ZERO     WCQCNY           OHE Backhaul Tr
     C                     Z-ADD*ZERO     WCQDNY           OHE Load Sched
     C                     Z-ADD*ZERO     WCQENY           Original Appoin
     C                     Z-ADD*ZERO     WCQFNY           Original Appoin
     C                     Z-ADD*ZERO     WCQGNY           OHE PowerPro Lo
     C                     Z-ADD*ZERO     WCQHNY           OHE PowerPro Lo
     C                     Z-ADD*ZERO     WCQINY           OHE Unused Nume
     C                     Z-ADD*ZERO     WCQMNY           OHE Orig ABS Fr
     C                     Z-ADD*ZERO     WCW5DT           OHE Unused Date
     C                     Z-ADD*ZERO     WCW6DT           OHE Unused Date
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDSPPN           Port Phone Numb
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WERWNB           Miles to next s
      * Define work field USR Date - ATR
     C                     Z-ADD*ZERO     WUBQDT  70
      * Define work field USR To Time 4.0
     C                     Z-ADD*ZERO     WUHLNX  40
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFMILE           Miles to First
     C                     Z-ADD*ZERO     WFHRRQ           Hours Required
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGM8NB           System Value Nu
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Define work field Time
     C                     Z-ADD*ZERO     WUAPTM  60
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field @Days 5
     C                     Z-ADD*ZERO     WUBDDY  50
      * Define work field Must Ship Time Work   USR
     C                     Z-ADD*ZERO     WUBBTM  60
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SFRVGN.
     C                     MOVEL*BLANK    WL0001 20
     C                     MOVEL*BLANK    WL0002  2
     C                     MOVEL*BLANK    WL0003 20
     C                     MOVEL*BLANK    WL0004  2
     C                     Z-ADD*ZERO     WL0005  50
      * Define local work field Shipping Line
     C                     MOVEL*BLANK    YL0001  3
      * Define local work field Port Delv Terminal
     C                     MOVEL*BLANK    YL0002 20
      * Define local work field OHE City
     C                     MOVEL*BLANK    YL0003 25
      * Define null work field OHE Vessel/Airline
     C                     MOVEL*BLANK    YN0001 30
      * Define null work field OHE Voyage/Flight
     C                     MOVEL*BLANK    YN0002 15
      * Define null work field OHE Booking Number
     C                     MOVEL*BLANK    YN0003 15
      * Define null work field OHE Discharge Port/Airprt
     C                     MOVEL*BLANK    YN0004 20
      * Define null work field OHE Sail/Flight Date
     C                     Z-ADD*ZERO     YN0005  70
      * Define null work field OHE Port Cut Date
     C                     Z-ADD*ZERO     YN0006  70
      * Define null work field OHE Arrival Date
     C                     Z-ADD*ZERO     YN0007  70
      * Define null work field OHE Late Delivery Code
     C                     MOVEL*BLANK    YN0008  3
      * Define null work field OHE Ship Status
     C                     MOVEL*BLANK    YN0009  1
      * Define null work field OHE Container Number
     C                     MOVEL*BLANK    YN0010 12
      * Define null work field OHE Comment 1
     C                     MOVEL*BLANK    YN0011 35
      * Define null work field OHE Comment 2
     C                     MOVEL*BLANK    YN0012 75
      * Define local work field Blank for 30          USR
     C                     MOVEL*BLANK    YL0004 30
      * Define null work field Port Address Line 1
     C                     MOVEL*BLANK    YN0013 25
      * Define null work field Port Address Line 2
     C                     MOVEL*BLANK    YN0014 25
      * Define null work field Port Zip/Postal Code
     C                     MOVEL*BLANK    YN0015 11
      * Define null work field Port Phone Number
     C                     Z-ADD*ZERO     YN0016 110
      * Define null work field Port Fax Number
     C                     MOVEL*BLANK    YN0017 25
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
00002 LOADTIME
