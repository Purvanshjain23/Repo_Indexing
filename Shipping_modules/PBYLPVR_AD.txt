// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBYLPVR
// ?Date: 14.08.2025 Time: 03:49:45
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E4119 09/14/16 RMC New
//?USER: Load screen

// WRK.Error Status = CND.no
WRK.Error_Status = 'N';

//?USER: Validate relations

CASE;

// IF DTL.Company Number NE LCL.Company Number
IF DTL.Company_Number <> LCL.Company_Number;

// OR DTL.Order Number NE LCL.Order Number
OR DTL.Order_Number <> LCL.Order_Number;

// LCL.Company Number = DTL.Company Number
LCL.Company_Number = DTL.Company_Number;

// LCL.Order Number = DTL.Order Number
LCL.Order_Number = DTL.Order_Number;

//?** Validate company if entered
CASE;

// IF DTL.Company Number is not equal to zero
IF DTL.Company_Number <> *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

ENDIF;

//?** Validate Order Number if entered
CASE;

// IF DTL.Order Number is Greater then zero
IF DTL.Order_Number > *ZERO;

EXECUTE FUNCTION(RTV LPR,Sts,SchDt,Ld  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2128070;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(DTL.Header_Status);
PARAMETER(DTL.Scheduled_Ship_Date);
PARAMETER(DTL.Load_ID);
PARAMETER(DTL.OH_Load_Plan_Ready);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Order is not Found'
ERROR(USR3458);
MSGPARM(DTL.Company_Number);
MSGPARM(DTL.Order_Number);

// WRK.Error Status = CND.yes
WRK.Error_Status = 'Y';

ENDIF;

//?check header sts
CASE;

// IF DTL.Header Status is Complete
IF DTL.Header_Status = 'C';

// OR DTL.Header Status is Confirmed
OR DTL.Header_Status = 'R';

// OR DTL.Header Status is Cancelled
OR DTL.Header_Status = 'X';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(LCL.*SFLSEL);

// WRK.Error Status = CND.yes
WRK.Error_Status = 'Y';

ENDIF;

//?check load id
CASE;

// IF DTL.Load ID is Entered
IF DTL.Load_ID <> *ZERO;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(LCL.*SFLSEL);

// WRK.Error Status = CND.yes
WRK.Error_Status = 'Y';

ENDIF;

ENDIF;

// LCL.OH Load Plan Ready = DTL.OH Load Plan Ready
LCL.OH_Load_Plan_Ready = DTL.OH_Load_Plan_Ready;

CASE;

// IF WRK.Error Status is yes
IF WRK.Error_Status = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

SET CURSOR;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

//?USER: User defined action

CASE;

// IF WRK.Error Status is yes
IF WRK.Error_Status = 'Y';

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DTL.OH Load Plan Ready NE LCL.OH Load Plan Ready
IF DTL.OH_Load_Plan_Ready <> LCL.OH_Load_Plan_Ready;

EXECUTE FUNCTION(CHG OH Load Plan Ready CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1733022;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(DTL.OH_Load_Plan_Ready);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


ENDIF;

ENDIF;

