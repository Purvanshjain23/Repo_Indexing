// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBXIXFR
// ?Date: 14.08.2025 Time: 03:49:40
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?S13418 DN 07/23/18-Will no longer process 'TONU'.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?If records came up in this extract, del the charges there,then re-create
EXECUTE FUNCTION(Rtv Val Load Inv Chg  RT) TYPE(RTVOBJ) FILE(PBCVCPP)           AC2123189;
PARAMETER(PAR.TMS_Load_ID);
PARAMETER(PAR.TMS_Extract_Date);
PARAMETER(PAR.TMS_Extract_Time);
PARAMETER(PAR.TMS_Extract_File_Name);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 QUIT;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

EXECUTE FUNCTION(Rtv Del Load Frt Chrg  RT) TYPE(RTVOBJ) FILE(PBCYCPP)          AC2124220;
PARAMETER(PAR.TMS_Load_ID);
{
 //?USER: Process Data record

 //?S13418 DN 07/23/18-Removed 'TMS EDI Code is Truck Order Not Used' Check.
 EXECUTE FUNCTION(Del TMS Load Frt Chrg  DL) TYPE(DLTOBJ) FILE(PBCYCPP)          AC2123453;
 PARAMETER(DB1.TMS_Load_ID);
 PARAMETER(DB1.TMS_Freight_Charge_Seq);
}


EXECUTE FUNCTION(Rtv Crt Load Frt Chrg RT) TYPE(RTVOBJ) FILE(PBCVCPP)           AC2123193;
PARAMETER(PAR.TMS_Load_ID);
PARAMETER(PAR.TMS_Extract_Date);
PARAMETER(PAR.TMS_Extract_Time);
PARAMETER(PAR.TMS_Extract_File_Name);
PARAMETER(1);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Carrier_Code);
PARAMETER(PAR.Rated_Freight);
PARAMETER(PAR.TMS_Carrier_SCAC);
{
 //?USER: Initialize routine

 // Call program CVT *YYMD to *CYMD    XF.
 CALL PROGRAM(CVT *YYMD to *CYMD    XF) ('PDGYXFR');
 PARAMETER(LCL.Date_USR);
 PARAMETER(PAR.TMS_Extract_Date);

 // LCL.LFC TFP Carrier Paid Date = LCL.Date                  USR
 LCL.LFC_TFP_Carrier_Paid_Date = LCL.Date_USR;

 // LCL.Rated Freight = CON.*ZERO
 LCL.Rated_Freight = *ZERO;

 //?USER: Process Data record

 //?EDI Code= ' '=Line haul=Rated Freight in OMS: update LH, dont crt rcd
 //?R12849 DN 03/27/18-Rated Freight Calcs after R12849 Change.
 CASE;

 // IF DB1.TMS Charge Type is ITEM
 IF DB1.TMS_Charge_Type = 'ITEM';

 // OR DB1.TMS Charge Type is Contract Minimum Reached
 OR DB1.TMS_Charge_Type = 'MG_MINMAX_ADJ';

 // OR DB1.TMS Charge Type is DEFICIT
 OR DB1.TMS_Charge_Type = 'DEFICIT';

 // OR DB1.TMS Charge Type is DISCOUNT
 OR DB1.TMS_Charge_Type = 'DISCOUNT';

 // LCL.Rated Freight = LCL.Rated Freight + DB1.TMS Charge Amount
 LCL.Rated_Freight = LCL.Rated_Freight + DB1.TMS_Charge_Amount;

 //?R12849 DN 03/27/18-Rated Freight Calcs after R12849 Change.
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv Last Seq for LFC   RT) TYPE(RTVOBJ) FILE(PBCYCPP)          AC2124488;
 PARAMETER(DB1.TMS_Load_ID);
 PARAMETER(LCL.TMS_Freight_Charge_Seq);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.TMS Freight Charge Seq = LCL.TMS Freight Charge Seq + CON.1
 LCL.TMS_Freight_Charge_Seq = LCL.TMS_Freight_Charge_Seq + 1;

 EXECUTE FUNCTION(Crt TMS Load Frt Chrg  CR) TYPE(CRTOBJ) FILE(PBCYCPP)          AC2123451;
 PARAMETER(DB1.TMS_Load_ID);
 PARAMETER(LCL.TMS_Freight_Charge_Seq);
 PARAMETER(DB1.TMS_Invoice_Date);
 PARAMETER(DB1.TMS_Invoice_Time);
 PARAMETER(DB1.TMS_Charge_Type);
 PARAMETER(DB1.TMS_Charge_Description);
 PARAMETER(DB1.TMS_EDI_Code);
 PARAMETER(DB1.TMS_Charge_Amount);
 PARAMETER(DB1.TMS_Charge_Rate);
 PARAMETER(DB1.TMS_Rate_Qualifier);
 PARAMETER(DB1.TMS_Charge_Quantity);
 PARAMETER(LCL.FC_Code);
 PARAMETER(PAR.TMS_Carrier_SCAC);
 PARAMETER(PAR.Carrier_Code);
 PARAMETER(DB1.TMS_Record_Status);
 PARAMETER(DB1.TMS_Process_Status);
 PARAMETER(DB1.TMS_Error_Reason);
 PARAMETER(DB1.TMS_Change_Date);
 PARAMETER(DB1.TMS_Change_time);
 ENDIF;

 //?*
 EXECUTE FUNCTION(Chg TMS Load Inv Chg  CH) TYPE(CHGOBJ) FILE(PBCVCPP)           AC2123168;
 PARAMETER(DB1.TMS_Load_ID);
 PARAMETER(DB1.TMS_Extract_Date);
 PARAMETER(DB1.TMS_Extract_Time);
 PARAMETER(DB1.TMS_Extract_File_Name);
 PARAMETER(DB1.TMS_Invoice_Sequence);
 PARAMETER(DB1.TMS_Invoice_Date);
 PARAMETER(DB1.TMS_Invoice_Time);
 PARAMETER(DB1.TMS_Charge_Type);
 PARAMETER(DB1.TMS_Charge_Description);
 PARAMETER(DB1.TMS_EDI_Code);
 PARAMETER(DB1.TMS_Charge_Amount);
 PARAMETER(DB1.TMS_Charge_Rate);
 PARAMETER(DB1.TMS_Rate_Qualifier);
 PARAMETER(DB1.TMS_Charge_Quantity);
 PARAMETER(DB1.TMS_Record_Status);
 PARAMETER(1);
 PARAMETER(DB1.TMS_Error_Reason);
 PARAMETER(DB1.TMS_Change_Date);
 PARAMETER(DB1.TMS_Change_time);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set TMS Record Stampp IF) TYPE(EXCINTFUN)                      AC2123222;
  PARAMETER(DB1.TMS_Record_Status);
  PARAMETER(DB1.TMS_Change_Date);
  PARAMETER(DB1.TMS_Change_time);
  {
   //?Execute internal function

   // PAR.TMS Change time = JOB.*Job time
   PAR.TMS_Change_time = JOB.*Job_time;

   // PAR.TMS Change Date = JOB.*Job date
   PAR.TMS_Change_Date = JOB.*Job_date;

  }

 }

 //?USER: Exit processing

 //?Record found
 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 //?Update LH with carrier paid info
 CASE;

 // IF LCL.Rated Freight is EQ Zero
 IF LCL.Rated_Freight = *ZERO;

 //?leave whats on the load if a new one didnt come up
 // LCL.Rated Freight = PAR.Rated Freight
 LCL.Rated_Freight = PAR.Rated_Freight;

 ENDIF;

 EXECUTE FUNCTION(Chg Carr Paysts,dt,tm CH) TYPE(CHGOBJ) FILE(OMFJCPP)           AC2123456;
 PARAMETER(PAR.Load_ID);
 PARAMETER(LCL.Rated_Freight);
 PARAMETER('P');
 PARAMETER(LCL.LFC_TFP_Carrier_Paid_Date);
 PARAMETER(PAR.TMS_Extract_Time);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  CASE;

  // IF PAR.LH Carrier Payment Sts is Not Paid
  IF PAR.LH_Carrier_Payment_Sts = *BLANK;

  // AND DB1.LH Carrier Paid Dte NE WRK.ZERO
  AND DB1.LH_Carrier_Paid_Dte <> WRK.ZERO;

  // DB1.LH Carrier Paid Dte = CON.*ZERO
  DB1.LH_Carrier_Paid_Dte = *ZERO;

  // DB1.LH Carrier Paid Time = CON.*ZERO
  DB1.LH_Carrier_Paid_Time = *ZERO;

  ENDIF;

 }

 ENDIF;

}


ENDIF;

ENDIF;

//?**** CREATE LOAD FREIGHT CHARGES FOR CURRENT LOAD BEING PROCESSED ****
// Call program CVT *YYMD to *CYMD    XF.
CALL PROGRAM(CVT *YYMD to *CYMD    XF) ('PDGYXFR');
PARAMETER(LCL.Date_USR);
PARAMETER(PAR.TMS_Extract_Date);

// Call program Exc Crt Load FC       XF.
CALL PROGRAM(Exc Crt Load FC       XF) ('PBY2XFR');
PARAMETER(PAR.TMS_Load_ID);
PARAMETER(LCL.Date_USR);
PARAMETER(PAR.TMS_Extract_Time);

