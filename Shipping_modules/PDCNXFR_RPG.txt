     H/TITLE UPD ATS Order Allocate XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* OPTION(*SRCDBG) GENOPT(*NOLIST) CVTOPT(*DATETIME)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJMIST
     H* Date          : 07/10/24  Time  : 00:43:11
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar Master           Retrieval index       NV
      *
     FCAAFREL7IF  E           K        DISK
      * RSQ : Calendar Master           RSQ Co/Yr/Period/Week/Da
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse Codes           Active records only
      *
     FPMFDREL2IF  E           K        DISK
      * RSQ : Company Item Ext          RTV, select Active
      *
     FOPBFCPLOIF  E           K        DISK
      * RSQ : Order Header TRG          Ord-D/Co
      *
     FCAAFREL8IF  E           K        DISK
      * RTV : Calendar Master           Co/Date PrdDaySts=Y
      *
     FOPBGWKL1IF  E           K        DISK
      * RTV : Order Detail              Retrieval index
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPOCWCPL1IF  E           K        DISK
      * RTV : PS Prod Item Inventory    Retrieval index
      *
     FPOB5CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched_Inv    Co/Itm/Whs/PDte/Ord
      *
     FPOB5CPL1IF  E           K        DISK
      * RTV : Order Detail Sched_Inv    Retrieval index
      *
     FPDKNCPL1IF  E           K        DISK
      * RTV : Order Detail Schedule     Retrieval index
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FCAAFREL3IF  E           K        DISK
      * RSQ : Calendar Master           Co/Date               NV
      *
     FPDJCCPL1IF  E           K        DISK
      * RTV : PS Prod Schedule          Retrieval index
      *
     FPDI8CPL4IF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FPOB6CPL3IF  E           K        DISK
      * RSQ : Order Detail Sched_Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      *
     FPOB6CPL1IF  E           K        DISK
      * RTV : Order Detail Sched_Consmd Retrieval index
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar Master           RSQ Co/Date Descending
      *
     FPOB5CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched_Inv    Update index
      *
     FPDKNCPL0UF  E           K        DISK                      A
      * UPD : Order Detail Schedule     Update index
      *
     FPDI8CPL0UF  E           K        DISK                      A
      * UPD : PS Prod Item Schedule     Update index
      *
     FPOB6CPL0UF  E           K        DISK                      A
      * UPD : Order Detail Sched_Consmd Update index
      *
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@AFREBE
      * Calendar Master           Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WAAIC3
     I              AFBCDT                          WABCDT
     I              AFCQNB                          WACQNB
     I              AFESNB                          WAESNB
     I              AFETNB                          WAETNB
     I              AFBZNB                          WABZNB
     I              AFA9ST                          WAA9ST
     I              AFEINB                          WAEINB
     I              AFC5ST                          WAC5ST
     I              AFAQNB                          WAAQNB
     I              AFCMST                          WACMST
     I              AFV9ST                          WAV9ST
     I              AFWAST                          WAWAST
     I              AFX2ST                          WAX2ST
     I              AFOJDT                          WAOJDT
     I              AFNQNX                          WANQNX
     I              AFNRNX                          WANRNX
     I              AFI9SX                          WAI9SX
     I              AFJASX                          WAJASX
     I              AFOKDT                          WAOKDT
     I              AFOLDT                          WAOLDT
     I              AFUVST                          WAUVST
     I              AFUWST                          WAUWST
     I              AFUXST                          WAUXST
     I              AFAATM                          WAAATM
     I              AFAYNA                          WAAYNA
     I              AFA0NA                          WAA0NA
     I              AFAXDT                          WAAXDT
      *
     I@AFREQ0
      * Calendar Master           RSQ Co/Yr/Period/Week/Da
      * Renamed input format fields
     I              AFAIC3                          WBAIC3
     I              AFBCDT                          WBBCDT
     I              AFCQNB                          WBCQNB
     I              AFESNB                          WBESNB
     I              AFETNB                          WBETNB
     I              AFBZNB                          WBBZNB
     I              AFA9ST                          WBA9ST
     I              AFEINB                          WBEINB
     I              AFC5ST                          WBC5ST
     I              AFAQNB                          WBAQNB
     I              AFCMST                          WBCMST
     I              AFV9ST                          WBV9ST
     I              AFWAST                          WBWAST
     I              AFX2ST                          WBX2ST
     I              AFOJDT                          WBOJDT
     I              AFNQNX                          WBNQNX
     I              AFNRNX                          WBNRNX
     I              AFI9SX                          WBI9SX
     I              AFJASX                          WBJASX
     I              AFOKDT                          WBOKDT
     I              AFOLDT                          WBOLDT
     I              AFUVST                          WBUVST
     I              AFUWST                          WBUWST
     I              AFUXST                          WBUXST
     I              AFAATM                          WBAATM
     I              AFAYNA                          WBAYNA
     I              AFA0NA                          WBA0NA
     I              AFAXDT                          WBAXDT
      *
     I@ADRET1
      * Warehouse Codes           Active records only
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@FDREAW
      * Company Item Ext          RTV, select Active
      * Renamed input format fields
     I              FDAIC3                          WDAIC3
     I              FDHGCD                          WDHGCD
     I              FDD0ST                          WDD0ST
     I              FDD2ST                          WDD2ST
     I              FDD6ST                          WDD6ST
     I              FDWESP                          WDWESP
     I              FDEDST                          WDEDST
     I              FDEFST                          WDEFST
     I              FDEHST                          WDEHST
     I              FDEMST                          WDEMST
     I              FDENST                          WDENST
     I              FDEOST                          WDEOST
     I              FDEPST                          WDEPST
     I              FDEQST                          WDEQST
     I              FDOQNY                          WDOQNY
     I              FDORNY                          WDORNY
     I              FDS2DT                          WDS2DT
     I              FDUFT1                          WDUFT1
     I              FDKUAA                          WDKUAA
     I              FDVSST                          WDVSST
     I              FDMJDT                          WDMJDT
     I              FDBETM                          WDBETM
     I              FDCCVN                          WDCCVN
     I              FDCDVN                          WDCDVN
     I              FDMKDT                          WDMKDT
     I              FDBFTM                          WDBFTM
     I              FDCEVN                          WDCEVN
     I              FDCFVN                          WDCFVN
      *
     I@BFCPY2
      * Order Header TRG          Ord-D/Co
      * Renamed input format fields
     I              BEAIC3                          WEAIC3
     I              BEC4NB                          WEC4NB
     I              BEJNCD                          WEJNCD
     I              BEANC7                          WEANC7
     I              BEBKC7                          WEBKC7
     I              BEBRTX                          WEBRTX
     I              BEHMNA                          WEHMNA
     I              BEHONA                          WEHONA
     I              BEHPNA                          WEHPNA
     I              BEHNNA                          WEHNNA
     I              BEDBCD                          WEDBCD
     I              BECKTX                          WECKTX
     I              BEB0C7                          WEB0C7
     I              BEAETX                          WEAETX
     I              BEB1NA                          WEB1NA
     I              BEB3NA                          WEB3NA
     I              BEB4NA                          WEB4NA
     I              BEB2NA                          WEB2NA
     I              BEBHCD                          WEBHCD
     I              BEC8TX                          WEC8TX
     I              BEBCNA                          WEBCNA
     I              BEA0DT                          WEA0DT
     I              BEA5DT                          WEA5DT
     I              BEGNDT                          WEGNDT
     I              BEACDT                          WEACDT
     I              BEAQCD                          WEAQCD
     I              BEB6NA                          WEB6NA
     I              BEBYNA                          WEBYNA
     I              BEBZNA                          WEBZNA
     I              BEGTST                          WEGTST
     I              BEGVST                          WEGVST
     I              BEGUST                          WEGUST
     I              BEQFST                          WEQFST
     I              BECQCD                          WECQCD
     I              BEGJST                          WEGJST
     I              BEGWST                          WEGWST
     I              BEGXST                          WEGXST
     I              BEGYST                          WEGYST
     I              BEAODT                          WEAODT
     I              BEAIVN                          WEAIVN
     I              BECXDT                          WECXDT
     I              BEJZVA                          WEJZVA
     I              BEA1WG                          WEA1WG
     I              BEXIST                          WEXIST
     I              BEXJST                          WEXJST
     I              BEXKST                          WEXKST
     I              BEEIDT                          WEEIDT
     I              BEAFTM                          WEAFTM
     I              BEE8CD                          WEE8CD
     I              BEE9CD                          WEE9CD
     I              BERMNB                          WERMNB
     I              BETBNB                          WETBNB
     I              BER1NB                          WER1NB
     I              BEPJST                          WEPJST
     I              BEU0ST                          WEU0ST
     I              BEU1ST                          WEU1ST
     I              BEQ2CD                          WEQ2CD
     I              BEU2ST                          WEU2ST
     I              BEVEST                          WEVEST
     I              BEVFST                          WEVFST
     I              BEVGST                          WEVGST
     I              BERPCD                          WERPCD
     I              BERNNB                          WERNNB
     I              BEVDST                          WEVDST
     I              BEATIN                          WEATIN
     I              BEU4ST                          WEU4ST
     I              BEU5ST                          WEU5ST
     I              BERSRN                          WERSRN
     I              BEMHNA                          WEMHNA
     I              BEMINA                          WEMINA
     I              BEWBST                          WEWBST
     I              BER4CD                          WER4CD
     I              BEBFCD                          WEBFCD
     I              BEQ4CD                          WEQ4CD
     I              BET3NB                          WET3NB
     I              BESICD                          WESICD
     I              BECONB                          WECONB
     I              BECEST                          WECEST
     I              BEAWDT                          WEAWDT
     I              BEJPCD                          WEJPCD
     I              BEXUST                          WEXUST
     I              BEZ1ST                          WEZ1ST
     I              BEVRVA                          WEVRVA
     I              BEOBST                          WEOBST
     I              BEBCST                          WEBCST
     I              BEBDST                          WEBDST
     I              BEB7VL                          WEB7VL
     I              BEGASX                          WEGASX
     I              BEGBSX                          WEGBSX
     I              BEGCSX                          WEGCSX
     I              BEGDSX                          WEGDSX
     I              BEFNSX                          WEFNSX
     I              BEFOSX                          WEFOSX
     I              BEFPSX                          WEFPSX
     I              BEFQSX                          WEFQSX
     I              BEFRSX                          WEFRSX
     I              BEFSSX                          WEFSSX
     I              BEFTSX                          WEFTSX
     I              BEFUSX                          WEFUSX
     I              BEFVSX                          WEFVSX
     I              BEFWSX                          WEFWSX
     I              BEFXSX                          WEFXSX
     I              BEFYSX                          WEFYSX
     I              BENODT                          WENODT
     I              BENPDT                          WENPDT
     I              BENQDT                          WENQDT
     I              BENRDT                          WENRDT
     I              BENSDT                          WENSDT
     I              BEBPTM                          WEBPTM
     I              BEBQTM                          WEBQTM
     I              BEBRTM                          WEBRTM
     I              BEBSTM                          WEBSTM
     I              BEBTTM                          WEBTTM
     I              BEH0NX                          WEH0NX
     I              BEH1NX                          WEH1NX
     I              BEH2NX                          WEH2NX
     I              BEH3NX                          WEH3NX
     I              BEH4NX                          WEH4NX
     I              BEC0C7                          WEC0C7
     I              BEUVST                          WEUVST
     I              BEUWST                          WEUWST
     I              BEUXST                          WEUXST
     I              BEAATM                          WEAATM
     I              BEAYNA                          WEAYNA
     I              BEA0NA                          WEA0NA
     I              BEAXDT                          WEAXDT
      *
     I@AFREY1
      * Calendar Master           Co/Date PrdDaySts=Y
      * Renamed input format fields
     I              AFAIC3                          WFAIC3
     I              AFBCDT                          WFBCDT
     I              AFCQNB                          WFCQNB
     I              AFESNB                          WFESNB
     I              AFETNB                          WFETNB
     I              AFBZNB                          WFBZNB
     I              AFA9ST                          WFA9ST
     I              AFEINB                          WFEINB
     I              AFC5ST                          WFC5ST
     I              AFAQNB                          WFAQNB
     I              AFCMST                          WFCMST
     I              AFV9ST                          WFV9ST
     I              AFWAST                          WFWAST
     I              AFX2ST                          WFX2ST
     I              AFOJDT                          WFOJDT
     I              AFNQNX                          WFNQNX
     I              AFNRNX                          WFNRNX
     I              AFI9SX                          WFI9SX
     I              AFJASX                          WFJASX
     I              AFOKDT                          WFOKDT
     I              AFOLDT                          WFOLDT
     I              AFUVST                          WFUVST
     I              AFUWST                          WFUWST
     I              AFUXST                          WFUXST
     I              AFAATM                          WFAATM
     I              AFAYNA                          WFAYNA
     I              AFA0NA                          WFA0NA
     I              AFAXDT                          WFAXDT
      *
     I@BGWKL1
      * Order Detail              Retrieval index
      * Renamed input format fields
     I              OMAIC3                          WGAIC3
     I              OMC4NB                          WGC4NB
     I              OMDPNB                          WGDPNB
     I              OMUENB                          WGUENB
     I              OMHGCD                          WGHGCD
     I              OMAJCD                          WGAJCD
     I              OMBKC7                          WGBKC7
     I              OMCFC7                          WGCFC7
     I              OMGMST                          WGGMST
     I              OMGNST                          WGGNST
     I              OMMAVA                          WGMAVA
     I              OMKDVA                          WGKDVA
     I              OML8VA                          WGL8VA
     I              OML9VA                          WGL9VA
     I              OMGTST                          WGGTST
     I              OMGVST                          WGGVST
     I              OMGUST                          WGGUST
     I              OMQFST                          WGQFST
     I              OMAYVA                          WGAYVA
     I              OMEXDT                          WGEXDT
     I              OMLQCD                          WGLQCD
     I              OMRDCD                          WGRDCD
     I              OMQ7CD                          WGQ7CD
     I              OMBZPR                          WGBZPR
     I              OML6NB                          WGL6NB
     I              OMU1ST                          WGU1ST
     I              OMGIDT                          WGGIDT
     I              OMCRCD                          WGCRCD
     I              OMAGCD                          WGAGCD
     I              OMRZST                          WGRZST
     I              OMR0ST                          WGR0ST
     I              OMR1ST                          WGR1ST
     I              OMG7NA                          WGG7NA
     I              OMG8NA                          WGG8NA
     I              OMRPCD                          WGRPCD
     I              OMVEST                          WGVEST
     I              OMVGST                          WGVGST
     I              OMAVST                          WGAVST
     I              OMU0ST                          WGU0ST
     I              OMRFCD                          WGRFCD
     I              OMFZST                          WGFZST
     I              OMR1NB                          WGR1NB
     I              OMAVQT                          WGAVQT
     I              OMD0WG                          WGD0WG
     I              OMCCQT                          WGCCQT
     I              OMAUWG                          WGAUWG
     I              OMCBQT                          WGCBQT
     I              OMATWG                          WGATWG
     I              OMAQCS                          WGAQCS
     I              OMAGCS                          WGAGCS
     I              OMAKPR                          WGAKPR
     I              OMALPR                          WGALPR
     I              OMAUPR                          WGAUPR
     I              OMAVWG                          WGAVWG
     I              OMA4WG                          WGA4WG
     I              OMA5DT                          WGA5DT
     I              OMAODT                          WGAODT
     I              OMGNDT                          WGGNDT
     I              OMAMST                          WGAMST
     I              OMANST                          WGANST
     I              OMVAST                          WGVAST
     I              OMRGNB                          WGRGNB
     I              OMRHNB                          WGRHNB
     I              OMRINB                          WGRINB
     I              OMRBCD                          WGRBCD
     I              OMHICD                          WGHICD
     I              OMRNCD                          WGRNCD
     I              OMROCD                          WGROCD
     I              OMCXDT                          WGCXDT
     I              OMAJVN                          WGAJVN
     I              OMKXCD                          WGKXCD
     I              OMJPCD                          WGJPCD
     I              OMCQCD                          WGCQCD
     I              OMR4CD                          WGR4CD
     I              OMZ1ST                          WGZ1ST
     I              OMZ3ST                          WGZ3ST
     I              OMZ4ST                          WGZ4ST
     I              OMDUPR                          WGDUPR
     I              OMB6VL                          WGB6VL
     I              OMA1AA                          WGA1AA
     I              OMFZSX                          WGFZSX
     I              OMF0SX                          WGF0SX
     I              OMF1SX                          WGF1SX
     I              OMF2SX                          WGF2SX
     I              OMF3SX                          WGF3SX
     I              OMF4SX                          WGF4SX
     I              OMF5SX                          WGF5SX
     I              OMF6SX                          WGF6SX
     I              OMF7SX                          WGF7SX
     I              OMNTDT                          WGNTDT
     I              OMNUDT                          WGNUDT
     I              OMNVDT                          WGNVDT
     I              OMNWDT                          WGNWDT
     I              OMNXDT                          WGNXDT
     I              OMBUTM                          WGBUTM
     I              OMBVTM                          WGBVTM
     I              OMBWTM                          WGBWTM
     I              OMBXTM                          WGBXTM
     I              OMBYTM                          WGBYTM
     I              OMH5NX                          WGH5NX
     I              OMH6NX                          WGH6NX
     I              OMH7NX                          WGH7NX
     I              OMH8NX                          WGH8NX
     I              OMH9NX                          WGH9NX
     I              OMDVPR                          WGDVPR
     I              OMDWPR                          WGDWPR
     I              OMDXPR                          WGDXPR
     I              OMDYPR                          WGDYPR
     I              OMDZPR                          WGDZPR
     I              OMGSPR                          WGGSPR
     I              OMGTPR                          WGGTPR
     I              OMGUPR                          WGGUPR
     I              OMHOST                          WGHOST
     I              OMHPST                          WGHPST
     I              OMIOST                          WGIOST
     I              OMPEWG                          WGPEWG
     I              OMRINY                          WGRINY
     I              OMTIDT                          WGTIDT
     I              OMTJDT                          WGTJDT
     I              OMH2ST                          WGH2ST
     I              OMH0ST                          WGH0ST
     I              OMH1ST                          WGH1ST
     I              OMTKDT                          WGTKDT
     I              OMTLDT                          WGTLDT
     I              OMTMDT                          WGTMDT
     I              OMUVST                          WGUVST
     I              OMUWST                          WGUWST
     I              OMUXST                          WGUXST
     I              OMAATM                          WGAATM
     I              OMAYNA                          WGAYNA
     I              OMA0NA                          WGA0NA
     I              OMAXDT                          WGAXDT
      *
     I@BECPFK
      * Order Header TRG          Retrieval index       NV
      * Renamed input format fields
     I              BEAIC3                          WHAIC3
     I              BEC4NB                          WHC4NB
     I              BEJNCD                          WHJNCD
     I              BEANC7                          WHANC7
     I              BEBKC7                          WHBKC7
     I              BEBRTX                          WHBRTX
     I              BEHMNA                          WHHMNA
     I              BEHONA                          WHHONA
     I              BEHPNA                          WHHPNA
     I              BEHNNA                          WHHNNA
     I              BEDBCD                          WHDBCD
     I              BECKTX                          WHCKTX
     I              BEB0C7                          WHB0C7
     I              BEAETX                          WHAETX
     I              BEB1NA                          WHB1NA
     I              BEB3NA                          WHB3NA
     I              BEB4NA                          WHB4NA
     I              BEB2NA                          WHB2NA
     I              BEBHCD                          WHBHCD
     I              BEC8TX                          WHC8TX
     I              BEBCNA                          WHBCNA
     I              BEA0DT                          WHA0DT
     I              BEA5DT                          WHA5DT
     I              BEGNDT                          WHGNDT
     I              BEACDT                          WHACDT
     I              BEAQCD                          WHAQCD
     I              BEB6NA                          WHB6NA
     I              BEBYNA                          WHBYNA
     I              BEBZNA                          WHBZNA
     I              BEGTST                          WHGTST
     I              BEGVST                          WHGVST
     I              BEGUST                          WHGUST
     I              BEQFST                          WHQFST
     I              BECQCD                          WHCQCD
     I              BEGJST                          WHGJST
     I              BEGWST                          WHGWST
     I              BEGXST                          WHGXST
     I              BEGYST                          WHGYST
     I              BEAODT                          WHAODT
     I              BEAIVN                          WHAIVN
     I              BECXDT                          WHCXDT
     I              BEJZVA                          WHJZVA
     I              BEA1WG                          WHA1WG
     I              BEXIST                          WHXIST
     I              BEXJST                          WHXJST
     I              BEXKST                          WHXKST
     I              BEEIDT                          WHEIDT
     I              BEAFTM                          WHAFTM
     I              BEE8CD                          WHE8CD
     I              BEE9CD                          WHE9CD
     I              BERMNB                          WHRMNB
     I              BETBNB                          WHTBNB
     I              BER1NB                          WHR1NB
     I              BEPJST                          WHPJST
     I              BEU0ST                          WHU0ST
     I              BEU1ST                          WHU1ST
     I              BEQ2CD                          WHQ2CD
     I              BEU2ST                          WHU2ST
     I              BEVEST                          WHVEST
     I              BEVFST                          WHVFST
     I              BEVGST                          WHVGST
     I              BERPCD                          WHRPCD
     I              BERNNB                          WHRNNB
     I              BEVDST                          WHVDST
     I              BEATIN                          WHATIN
     I              BEU4ST                          WHU4ST
     I              BEU5ST                          WHU5ST
     I              BERSRN                          WHRSRN
     I              BEMHNA                          WHMHNA
     I              BEMINA                          WHMINA
     I              BEWBST                          WHWBST
     I              BER4CD                          WHR4CD
     I              BEBFCD                          WHBFCD
     I              BEQ4CD                          WHQ4CD
     I              BET3NB                          WHT3NB
     I              BESICD                          WHSICD
     I              BECONB                          WHCONB
     I              BECEST                          WHCEST
     I              BEAWDT                          WHAWDT
     I              BEJPCD                          WHJPCD
     I              BEXUST                          WHXUST
     I              BEZ1ST                          WHZ1ST
     I              BEVRVA                          WHVRVA
     I              BEOBST                          WHOBST
     I              BEBCST                          WHBCST
     I              BEBDST                          WHBDST
     I              BEB7VL                          WHB7VL
     I              BEGASX                          WHGASX
     I              BEGBSX                          WHGBSX
     I              BEGCSX                          WHGCSX
     I              BEGDSX                          WHGDSX
     I              BEFNSX                          WHFNSX
     I              BEFOSX                          WHFOSX
     I              BEFPSX                          WHFPSX
     I              BEFQSX                          WHFQSX
     I              BEFRSX                          WHFRSX
     I              BEFSSX                          WHFSSX
     I              BEFTSX                          WHFTSX
     I              BEFUSX                          WHFUSX
     I              BEFVSX                          WHFVSX
     I              BEFWSX                          WHFWSX
     I              BEFXSX                          WHFXSX
     I              BEFYSX                          WHFYSX
     I              BENODT                          WHNODT
     I              BENPDT                          WHNPDT
     I              BENQDT                          WHNQDT
     I              BENRDT                          WHNRDT
     I              BENSDT                          WHNSDT
     I              BEBPTM                          WHBPTM
     I              BEBQTM                          WHBQTM
     I              BEBRTM                          WHBRTM
     I              BEBSTM                          WHBSTM
     I              BEBTTM                          WHBTTM
     I              BEH0NX                          WHH0NX
     I              BEH1NX                          WHH1NX
     I              BEH2NX                          WHH2NX
     I              BEH3NX                          WHH3NX
     I              BEH4NX                          WHH4NX
     I              BEC0C7                          WHC0C7
     I              BEUVST                          WHUVST
     I              BEUWST                          WHUWST
     I              BEUXST                          WHUXST
     I              BEAATM                          WHAATM
     I              BEAYNA                          WHAYNA
     I              BEA0NA                          WHA0NA
     I              BEAXDT                          WHAXDT
      *
     I@CWCPQW
      * PS Prod Item Inventory    Retrieval index
      * Renamed input format fields
     I              CWAIC3                          WIAIC3
     I              CWHGCD                          WIHGCD
     I              CWAJCD                          WIAJCD
     I              CWELDT                          WIELDT
     I              CWACWG                          WIACWG
     I              CWARQT                          WIARQT
     I              CWK7DT                          WIK7DT
     I              CWUVST                          WIUVST
     I              CWUWST                          WIUWST
     I              CWUXST                          WIUXST
     I              CWVSST                          WIVSST
     I              CWAATM                          WIAATM
     I              CWAYNA                          WIAYNA
     I              CWA0NA                          WIA0NA
     I              CWAXDT                          WIAXDT
      *
     I@B5CPM4
      * Order Detail Sched_Inv    Co/Itm/Whs/PDte/Ord
      * Renamed input format fields
     I              B5AIC3                          WJAIC3
     I              B5C4NB                          WJC4NB
     I              B5DPNB                          WJDPNB
     I              B5UENB                          WJUENB
     I              B5JGDT                          WJJGDT
     I              B5AODT                          WJAODT
     I              B5AJCD                          WJAJCD
     I              B5HGCD                          WJHGCD
     I              B5IUQT                          WJIUQT
     I              B5F3WG                          WJF3WG
     I              B5UVST                          WJUVST
     I              B5UWST                          WJUWST
     I              B5UXST                          WJUXST
     I              B5VSST                          WJVSST
     I              B5AATM                          WJAATM
     I              B5AYNA                          WJAYNA
     I              B5A0NA                          WJA0NA
     I              B5AXDT                          WJAXDT
      *
     I@B5CPM2
      * Order Detail Sched_Inv    Retrieval index
      * Renamed input format fields
     I              B5AIC3                          WKAIC3
     I              B5C4NB                          WKC4NB
     I              B5DPNB                          WKDPNB
     I              B5UENB                          WKUENB
     I              B5JGDT                          WKJGDT
     I              B5AODT                          WKAODT
     I              B5AJCD                          WKAJCD
     I              B5HGCD                          WKHGCD
     I              B5IUQT                          WKIUQT
     I              B5F3WG                          WKF3WG
     I              B5UVST                          WKUVST
     I              B5UWST                          WKUWST
     I              B5UXST                          WKUXST
     I              B5VSST                          WKVSST
     I              B5AATM                          WKAATM
     I              B5AYNA                          WKAYNA
     I              B5A0NA                          WKA0NA
     I              B5AXDT                          WKAXDT
      *
     I@B5CPM1
      * Order Detail Sched_Inv    Update index
      * Renamed input format fields
     I              B5AIC3                          WLAIC3
     I              B5C4NB                          WLC4NB
     I              B5DPNB                          WLDPNB
     I              B5UENB                          WLUENB
     I              B5JGDT                          WLJGDT
     I              B5AODT                          WLAODT
     I              B5AJCD                          WLAJCD
     I              B5HGCD                          WLHGCD
     I              B5IUQT                          WLIUQT
     I              B5F3WG                          WLF3WG
     I              B5UVST                          WLUVST
     I              B5UWST                          WLUWST
     I              B5UXST                          WLUXST
     I              B5VSST                          WLVSST
     I              B5AATM                          WLAATM
     I              B5AYNA                          WLAYNA
     I              B5A0NA                          WLA0NA
     I              B5AXDT                          WLAXDT
      *
     I@KNCPHO
      * Order Detail Schedule     Retrieval index
      * Renamed input format fields
     I              KNAIC3                          WMAIC3
     I              KNC4NB                          WMC4NB
     I              KNDPNB                          WMDPNB
     I              KNUENB                          WMUENB
     I              KNJGDT                          WMJGDT
     I              KNAODT                          WMAODT
     I              KNAJCD                          WMAJCD
     I              KNAYAA                          WMAYAA
     I              KNHGCD                          WMHGCD
     I              KNIGQT                          WMIGQT
     I              KNFLWG                          WMFLWG
     I              KNIUQT                          WMIUQT
     I              KNF3WG                          WMF3WG
     I              KNIVQT                          WMIVQT
     I              KNF4WG                          WMF4WG
     I              KNP7ST                          WMP7ST
     I              KNP8ST                          WMP8ST
     I              KNQAST                          WMQAST
     I              KNUVST                          WMUVST
     I              KNUWST                          WMUWST
     I              KNUXST                          WMUXST
     I              KNVSST                          WMVSST
     I              KNAATM                          WMAATM
     I              KNAYNA                          WMAYNA
     I              KNA0NA                          WMA0NA
     I              KNAXDT                          WMAXDT
      *
     I@KNCPHN
      * Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WOAIC3
     I              KNC4NB                          WOC4NB
     I              KNDPNB                          WODPNB
     I              KNUENB                          WOUENB
     I              KNJGDT                          WOJGDT
     I              KNAODT                          WOAODT
     I              KNAJCD                          WOAJCD
     I              KNAYAA                          WOAYAA
     I              KNHGCD                          WOHGCD
     I              KNIGQT                          WOIGQT
     I              KNFLWG                          WOFLWG
     I              KNIUQT                          WOIUQT
     I              KNF3WG                          WOF3WG
     I              KNIVQT                          WOIVQT
     I              KNF4WG                          WOF4WG
     I              KNP7ST                          WOP7ST
     I              KNP8ST                          WOP8ST
     I              KNQAST                          WOQAST
     I              KNUVST                          WOUVST
     I              KNUWST                          WOUWST
     I              KNUXST                          WOUXST
     I              KNVSST                          WOVSST
     I              KNAATM                          WOAATM
     I              KNAYNA                          WOAYNA
     I              KNA0NA                          WOA0NA
     I              KNAXDT                          WOAXDT
      *
     I@I8CPUS
      * PS Prod Item Schedule     Retrieval index
      * Renamed input format fields
     I              I8AIC3                          WRAIC3
     I              I8V5ST                          WRV5ST
     I              I8ELDT                          WRELDT
     I              I8HGCD                          WRHGCD
     I              I8AJCD                          WRAJCD
     I              I8GPDT                          WRGPDT
     I              I8WTSP                          WRWTSP
     I              I8QTSP                          WRQTSP
     I              I8DJPC                          WRDJPC
     I              I8F8WG                          WRF8WG
     I              I8WTIN                          WRWTIN
     I              I8D5NB                          WRD5NB
     I              I8DXWG                          WRDXWG
     I              I8B2NB                          WRB2NB
     I              I8WTCN                          WRWTCN
     I              I8PSCV                          WRPSCV
     I              I8SAWT                          WRSAWT
     I              I8B9NB                          WRB9NB
     I              I8D1WG                          WRD1WG
     I              I8CBNB                          WRCBNB
     I              I8EZWG                          WREZWG
     I              I8CCNB                          WRCCNB
     I              I8E0WG                          WRE0WG
     I              I8D6NB                          WRD6NB
     I              I8OAWT                          WROAWT
     I              I8CDNB                          WRCDNB
     I              I8UNW2                          WRUNW2
     I              I8CENB                          WRCENB
     I              I8F9WG                          WRF9WG
     I              I8BPNB                          WRBPNB
     I              I8GAWG                          WRGAWG
     I              I8BQNB                          WRBQNB
     I              I8GBWG                          WRGBWG
     I              I8BRNB                          WRBRNB
     I              I8GCWG                          WRGCWG
     I              I8BSNB                          WRBSNB
     I              I8GDWG                          WRGDWG
     I              I8BWNB                          WRBWNB
     I              I8GEWG                          WRGEWG
     I              I8PS6U                          WRPS6U
     I              I8WCST                          WRWCST
     I              I8WPST                          WRWPST
     I              I8B5ST                          WRB5ST
     I              I8TFST                          WRTFST
     I              I8TEST                          WRTEST
     I              I8THST                          WRTHST
     I              I8UDST                          WRUDST
     I              I8UFST                          WRUFST
     I              I8UGST                          WRUGST
     I              I8UHST                          WRUHST
     I              I8B6ST                          WRB6ST
     I              I8B7ST                          WRB7ST
     I              I8DVWG                          WRDVWG
     I              I8D7NB                          WRD7NB
     I              I8FCAD                          WRFCAD
     I              I8D9NB                          WRD9NB
     I              I8DWWG                          WRDWWG
     I              I8EANB                          WREANB
     I              I8SHWT                          WRSHWT
     I              I8EBNB                          WREBNB
     I              I8AVWT                          WRAVWT
     I              I8ECNB                          WRECNB
     I              I8WTON                          WRWTON
     I              I8EDNB                          WREDNB
     I              I8FNWT                          WRFNWT
     I              I8EENB                          WREENB
     I              I8QTAS                          WRQTAS
     I              I8EFNB                          WREFNB
     I              I8WAIO                          WRWAIO
     I              I8EGNB                          WREGNB
     I              I8R3CD                          WRR3CD
     I              I8RGNB                          WRRGNB
     I              I8RHNB                          WRRHNB
     I              I8RINB                          WRRINB
     I              I8XRCD                          WRXRCD
     I              I8UVST                          WRUVST
     I              I8UWST                          WRUWST
     I              I8UXST                          WRUXST
     I              I8VSST                          WRVSST
     I              I8AATM                          WRAATM
     I              I8AYNA                          WRAYNA
     I              I8A0NA                          WRA0NA
     I              I8AXDT                          WRAXDT
      *
     I@I8CPUR
      * PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WSAIC3
     I              I8V5ST                          WSV5ST
     I              I8ELDT                          WSELDT
     I              I8HGCD                          WSHGCD
     I              I8AJCD                          WSAJCD
     I              I8GPDT                          WSGPDT
     I              I8WTSP                          WSWTSP
     I              I8QTSP                          WSQTSP
     I              I8DJPC                          WSDJPC
     I              I8F8WG                          WSF8WG
     I              I8WTIN                          WSWTIN
     I              I8D5NB                          WSD5NB
     I              I8DXWG                          WSDXWG
     I              I8B2NB                          WSB2NB
     I              I8WTCN                          WSWTCN
     I              I8PSCV                          WSPSCV
     I              I8SAWT                          WSSAWT
     I              I8B9NB                          WSB9NB
     I              I8D1WG                          WSD1WG
     I              I8CBNB                          WSCBNB
     I              I8EZWG                          WSEZWG
     I              I8CCNB                          WSCCNB
     I              I8E0WG                          WSE0WG
     I              I8D6NB                          WSD6NB
     I              I8OAWT                          WSOAWT
     I              I8CDNB                          WSCDNB
     I              I8UNW2                          WSUNW2
     I              I8CENB                          WSCENB
     I              I8F9WG                          WSF9WG
     I              I8BPNB                          WSBPNB
     I              I8GAWG                          WSGAWG
     I              I8BQNB                          WSBQNB
     I              I8GBWG                          WSGBWG
     I              I8BRNB                          WSBRNB
     I              I8GCWG                          WSGCWG
     I              I8BSNB                          WSBSNB
     I              I8GDWG                          WSGDWG
     I              I8BWNB                          WSBWNB
     I              I8GEWG                          WSGEWG
     I              I8PS6U                          WSPS6U
     I              I8WCST                          WSWCST
     I              I8WPST                          WSWPST
     I              I8B5ST                          WSB5ST
     I              I8TFST                          WSTFST
     I              I8TEST                          WSTEST
     I              I8THST                          WSTHST
     I              I8UDST                          WSUDST
     I              I8UFST                          WSUFST
     I              I8UGST                          WSUGST
     I              I8UHST                          WSUHST
     I              I8B6ST                          WSB6ST
     I              I8B7ST                          WSB7ST
     I              I8DVWG                          WSDVWG
     I              I8D7NB                          WSD7NB
     I              I8FCAD                          WSFCAD
     I              I8D9NB                          WSD9NB
     I              I8DWWG                          WSDWWG
     I              I8EANB                          WSEANB
     I              I8SHWT                          WSSHWT
     I              I8EBNB                          WSEBNB
     I              I8AVWT                          WSAVWT
     I              I8ECNB                          WSECNB
     I              I8WTON                          WSWTON
     I              I8EDNB                          WSEDNB
     I              I8FNWT                          WSFNWT
     I              I8EENB                          WSEENB
     I              I8QTAS                          WSQTAS
     I              I8EFNB                          WSEFNB
     I              I8WAIO                          WSWAIO
     I              I8EGNB                          WSEGNB
     I              I8R3CD                          WSR3CD
     I              I8RGNB                          WSRGNB
     I              I8RHNB                          WSRHNB
     I              I8RINB                          WSRINB
     I              I8XRCD                          WSXRCD
     I              I8UVST                          WSUVST
     I              I8UWST                          WSUWST
     I              I8UXST                          WSUXST
     I              I8VSST                          WSVSST
     I              I8AATM                          WSAATM
     I              I8AYNA                          WSAYNA
     I              I8A0NA                          WSA0NA
     I              I8AXDT                          WSAXDT
      *
     I@AFREYY
      * Calendar Master           Co/Date               NV
      * Renamed input format fields
     I              AFAIC3                          WTAIC3
     I              AFBCDT                          WTBCDT
     I              AFCQNB                          WTCQNB
     I              AFESNB                          WTESNB
     I              AFETNB                          WTETNB
     I              AFBZNB                          WTBZNB
     I              AFA9ST                          WTA9ST
     I              AFEINB                          WTEINB
     I              AFC5ST                          WTC5ST
     I              AFAQNB                          WTAQNB
     I              AFCMST                          WTCMST
     I              AFV9ST                          WTV9ST
     I              AFWAST                          WTWAST
     I              AFX2ST                          WTX2ST
     I              AFOJDT                          WTOJDT
     I              AFNQNX                          WTNQNX
     I              AFNRNX                          WTNRNX
     I              AFI9SX                          WTI9SX
     I              AFJASX                          WTJASX
     I              AFOKDT                          WTOKDT
     I              AFOLDT                          WTOLDT
     I              AFUVST                          WTUVST
     I              AFUWST                          WTUWST
     I              AFUXST                          WTUXST
     I              AFAATM                          WTAATM
     I              AFAYNA                          WTAYNA
     I              AFA0NA                          WTA0NA
     I              AFAXDT                          WTAXDT
      *
     I@JCCPVC
      * PS Prod Schedule          Retrieval index
      * Renamed input format fields
     I              JCAIC3                          WVAIC3
     I              JCV5ST                          WVV5ST
     I              JCELDT                          WVELDT
     I              JCHVHD                          WVHVHD
     I              JCZ6NB                          WVZ6NB
     I              JCZ7NB                          WVZ7NB
     I              JCDGPC                          WVDGPC
     I              JCAVCW                          WVAVCW
     I              JCDIPC                          WVDIPC
     I              JCZ0NB                          WVZ0NB
     I              JCAVLE                          WVAVLE
     I              JCECWG                          WVECWG
     I              JCUVST                          WVUVST
     I              JCUWST                          WVUWST
     I              JCUXST                          WVUXST
     I              JCVSST                          WVVSST
     I              JCAATM                          WVAATM
     I              JCAYNA                          WVAYNA
     I              JCA0NA                          WVA0NA
     I              JCAXDT                          WVAXDT
      *
     I@I8CPXP
      * PS Prod Item Schedule     Co/Itm/Whs/PrdDte/Typ
      * Renamed input format fields
     I              I8AIC3                          WWAIC3
     I              I8V5ST                          WWV5ST
     I              I8ELDT                          WWELDT
     I              I8HGCD                          WWHGCD
     I              I8AJCD                          WWAJCD
     I              I8GPDT                          WWGPDT
     I              I8WTSP                          WWWTSP
     I              I8QTSP                          WWQTSP
     I              I8DJPC                          WWDJPC
     I              I8F8WG                          WWF8WG
     I              I8WTIN                          WWWTIN
     I              I8D5NB                          WWD5NB
     I              I8DXWG                          WWDXWG
     I              I8B2NB                          WWB2NB
     I              I8WTCN                          WWWTCN
     I              I8PSCV                          WWPSCV
     I              I8SAWT                          WWSAWT
     I              I8B9NB                          WWB9NB
     I              I8D1WG                          WWD1WG
     I              I8CBNB                          WWCBNB
     I              I8EZWG                          WWEZWG
     I              I8CCNB                          WWCCNB
     I              I8E0WG                          WWE0WG
     I              I8D6NB                          WWD6NB
     I              I8OAWT                          WWOAWT
     I              I8CDNB                          WWCDNB
     I              I8UNW2                          WWUNW2
     I              I8CENB                          WWCENB
     I              I8F9WG                          WWF9WG
     I              I8BPNB                          WWBPNB
     I              I8GAWG                          WWGAWG
     I              I8BQNB                          WWBQNB
     I              I8GBWG                          WWGBWG
     I              I8BRNB                          WWBRNB
     I              I8GCWG                          WWGCWG
     I              I8BSNB                          WWBSNB
     I              I8GDWG                          WWGDWG
     I              I8BWNB                          WWBWNB
     I              I8GEWG                          WWGEWG
     I              I8PS6U                          WWPS6U
     I              I8WCST                          WWWCST
     I              I8WPST                          WWWPST
     I              I8B5ST                          WWB5ST
     I              I8TFST                          WWTFST
     I              I8TEST                          WWTEST
     I              I8THST                          WWTHST
     I              I8UDST                          WWUDST
     I              I8UFST                          WWUFST
     I              I8UGST                          WWUGST
     I              I8UHST                          WWUHST
     I              I8B6ST                          WWB6ST
     I              I8B7ST                          WWB7ST
     I              I8DVWG                          WWDVWG
     I              I8D7NB                          WWD7NB
     I              I8FCAD                          WWFCAD
     I              I8D9NB                          WWD9NB
     I              I8DWWG                          WWDWWG
     I              I8EANB                          WWEANB
     I              I8SHWT                          WWSHWT
     I              I8EBNB                          WWEBNB
     I              I8AVWT                          WWAVWT
     I              I8ECNB                          WWECNB
     I              I8WTON                          WWWTON
     I              I8EDNB                          WWEDNB
     I              I8FNWT                          WWFNWT
     I              I8EENB                          WWEENB
     I              I8QTAS                          WWQTAS
     I              I8EFNB                          WWEFNB
     I              I8WAIO                          WWWAIO
     I              I8EGNB                          WWEGNB
     I              I8R3CD                          WWR3CD
     I              I8RGNB                          WWRGNB
     I              I8RHNB                          WWRHNB
     I              I8RINB                          WWRINB
     I              I8XRCD                          WWXRCD
     I              I8UVST                          WWUVST
     I              I8UWST                          WWUWST
     I              I8UXST                          WWUXST
     I              I8VSST                          WWVSST
     I              I8AATM                          WWAATM
     I              I8AYNA                          WWAYNA
     I              I8A0NA                          WWA0NA
     I              I8AXDT                          WWAXDT
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WXAIC3
     I              BZHGCD                          WXHGCD
     I              BZAVNA                          WXAVNA
     I              BZAWNA                          WXAWNA
     I              BZL7NA                          WXL7NA
     I              BZL8NA                          WXL8NA
     I              BZL6NA                          WXL6NA
     I              BZMFNA                          WXMFNA
     I              BZADCD                          WXADCD
     I              BZAWPC                          WXAWPC
     I              BZLXST                          WXLXST
     I              BZAECD                          WXAECD
     I              BZAXPC                          WXAXPC
     I              BZLYST                          WXLYST
     I              BZAFCD                          WXAFCD
     I              BZAICD                          WXAICD
     I              BZAIWG                          WXAIWG
     I              BZHICD                          WXHICD
     I              BZRBCD                          WXRBCD
     I              BZFZST                          WXFZST
     I              BZAVST                          WXAVST
     I              BZCZWG                          WXCZWG
     I              BZC0WG                          WXC0WG
     I              BZURTN                          WXURTN
     I              BZAJC8                          WXAJC8
     I              BZRINB                          WXRINB
     I              BZRHNB                          WXRHNB
     I              BZRGNB                          WXRGNB
     I              BZLNCD                          WXLNCD
     I              BZTFNB                          WXTFNB
     I              BZN0CD                          WXN0CD
     I              BZX4ST                          WXX4ST
     I              BZTMVA                          WXTMVA
     I              BZTNVA                          WXTNVA
     I              BZBLPR                          WXBLPR
     I              BZBMPR                          WXBMPR
     I              BZLRCD                          WXLRCD
     I              BZU9ST                          WXU9ST
     I              BZCMCO                          WXCMCO
     I              BZQ1CD                          WXQ1CD
     I              BZQ8CD                          WXQ8CD
     I              BZCHTM                          WXCHTM
     I              BZQZCD                          WXQZCD
     I              BZXWST                          WXXWST
     I              BZXXST                          WXXXST
     I              BZVMST                          WXVMST
     I              BZSWGH                          WXSWGH
     I              BZPPHE                          WXPPHE
     I              BZR3CD                          WXR3CD
     I              BZSDCD                          WXSDCD
     I              BZICN1                          WXICN1
     I              BZSVCD                          WXSVCD
     I              BZICN2                          WXICN2
     I              BZSWCD                          WXSWCD
     I              BZV2NB                          WXV2NB
     I              BZSXCD                          WXSXCD
     I              BZITCN                          WXITCN
     I              BZSYCD                          WXSYCD
     I              BZITC5                          WXITC5
     I              BZSZCD                          WXSZCD
     I              BZICN6                          WXICN6
     I              BZS0CD                          WXS0CD
     I              BZICN7                          WXICN7
     I              BZS1CD                          WXS1CD
     I              BZICN8                          WXICN8
     I              BZS2CD                          WXS2CD
     I              BZICN9                          WXICN9
     I              BZS3CD                          WXS3CD
     I              BZICN0                          WXICN0
     I              BZS4CD                          WXS4CD
     I              BZSFNB                          WXSFNB
     I              BZA3WG                          WXA3WG
     I              BZSJNB                          WXSJNB
     I              BZLLCD                          WXLLCD
     I              BZLMCD                          WXLMCD
     I              BZP3ST                          WXP3ST
     I              BZSKNB                          WXSKNB
     I              BZSLNB                          WXSLNB
     I              BZSMNB                          WXSMNB
     I              BZP4ST                          WXP4ST
     I              BZCFNB                          WXCFNB
     I              BZCGNB                          WXCGNB
     I              BZILNB                          WXILNB
     I              BZCHNB                          WXCHNB
     I              BZCINB                          WXCINB
     I              BZCJNB                          WXCJNB
     I              BZCMNB                          WXCMNB
     I              BZCNNB                          WXCNNB
     I              BZCRNB                          WXCRNB
     I              BZCSNB                          WXCSNB
     I              BZCVNB                          WXCVNB
     I              BZCWNB                          WXCWNB
     I              BZCXNB                          WXCXNB
     I              BZCZNB                          WXCZNB
     I              BZC0NB                          WXC0NB
     I              BZN1CD                          WXN1CD
     I              BZB4NB                          WXB4NB
     I              BZB5NB                          WXB5NB
     I              BZX5ST                          WXX5ST
     I              BZX6ST                          WXX6ST
     I              BZX7ST                          WXX7ST
     I              BZPCCT                          WXPCCT
     I              BZBDNB                          WXBDNB
     I              BZBJNB                          WXBJNB
     I              BZSUST                          WXSUST
     I              BZSVST                          WXSVST
     I              BZSYST                          WXSYST
     I              BZSZST                          WXSZST
     I              BZS1ST                          WXS1ST
     I              BZXRCD                          WXXRCD
     I              BZXTCD                          WXXTCD
     I              BZXUCD                          WXXUCD
     I              BZF5WG                          WXF5WG
     I              BZF6WG                          WXF6WG
     I              BZF7WG                          WXF7WG
     I              BZBLNB                          WXBLNB
     I              BZBNNB                          WXBNNB
     I              BZS2ST                          WXS2ST
     I              BZS4ST                          WXS4ST
     I              BZS5ST                          WXS5ST
     I              BZS6ST                          WXS6ST
     I              BZS8ST                          WXS8ST
     I              BZS9ST                          WXS9ST
     I              BZTCST                          WXTCST
     I              BZTDST                          WXTDST
     I              BZUVST                          WXUVST
     I              BZUWST                          WXUWST
     I              BZUXST                          WXUXST
     I              BZVSST                          WXVSST
     I              BZAATM                          WXAATM
     I              BZAYNA                          WXAYNA
     I              BZA0NA                          WXA0NA
     I              BZAXDT                          WXAXDT
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WYAJCD
     I              ADF8NA                          WYF8NA
     I              ADACNA                          WYACNA
     I              ADADNA                          WYADNA
     I              ADAENA                          WYAENA
     I              ADAJNA                          WYAJNA
     I              ADBTTX                          WYBTTX
     I              ADAOCD                          WYAOCD
     I              ADBGCD                          WYBGCD
     I              ADVHST                          WYVHST
     I              ADMPNA                          WYMPNA
     I              ADWPST                          WYWPST
     I              ADXUST                          WYXUST
     I              ADT0ST                          WYT0ST
     I              ADT1ST                          WYT1ST
     I              ADDBNB                          WYDBNB
     I              ADT2ST                          WYT2ST
     I              ADT3ST                          WYT3ST
     I              ADT4ST                          WYT4ST
     I              ADT6ST                          WYT6ST
     I              ADBWC3                          WYBWC3
     I              ADBTC3                          WYBTC3
     I              ADBUC3                          WYBUC3
     I              ADBVC3                          WYBVC3
     I              ADFCAA                          WYFCAA
     I              ADRQSX                          WYRQSX
     I              ADRRSX                          WYRRSX
     I              ADRSSX                          WYRSSX
     I              ADRTSX                          WYRTSX
     I              ADT7ST                          WYT7ST
     I              ADT8ST                          WYT8ST
     I              ADRNSX                          WYRNSX
     I              ADROSX                          WYROSX
     I              ADRPSX                          WYRPSX
     I              ADUVST                          WYUVST
     I              ADUWST                          WYUWST
     I              ADUXST                          WYUXST
     I              ADVSST                          WYVSST
     I              ADAATM                          WYAATM
     I              ADAYNA                          WYAYNA
     I              ADA0NA                          WYA0NA
     I              ADAXDT                          WYAXDT
      *
     I@B6CPAG
      * Order Detail Sched_Consmd Co/Ord/PrdDt/Cns/Itm/Seq
      * Renamed input format fields
     I              B6AIC3                          TAAIC3
     I              B6C4NB                          TAC4NB
     I              B6DPNB                          TADPNB
     I              B6UENB                          TAUENB
     I              B6JGDT                          TAJGDT
     I              B6OONY                          TAOONY
     I              B6AODT                          TAAODT
     I              B6AJCD                          TAAJCD
     I              B6NUDT                          TANUDT
     I              B6HGCD                          TAHGCD
     I              B6IGQT                          TAIGQT
     I              B6FLWG                          TAFLWG
     I              B6NSQT                          TANSQT
     I              B6JQWG                          TAJQWG
     I              B6NVDT                          TANVDT
     I              B6BUTM                          TABUTM
     I              B6UVST                          TAUVST
     I              B6UWST                          TAUWST
     I              B6UXST                          TAUXST
     I              B6VSST                          TAVSST
     I              B6AATM                          TAAATM
     I              B6AYNA                          TAAYNA
     I              B6A0NA                          TAA0NA
     I              B6AXDT                          TAAXDT
      *
     I@B6CPNB
      * Order Detail Sched_Consmd Retrieval index
      * Renamed input format fields
     I              B6AIC3                          TBAIC3
     I              B6C4NB                          TBC4NB
     I              B6DPNB                          TBDPNB
     I              B6UENB                          TBUENB
     I              B6JGDT                          TBJGDT
     I              B6OONY                          TBOONY
     I              B6AODT                          TBAODT
     I              B6AJCD                          TBAJCD
     I              B6NUDT                          TBNUDT
     I              B6HGCD                          TBHGCD
     I              B6IGQT                          TBIGQT
     I              B6FLWG                          TBFLWG
     I              B6NSQT                          TBNSQT
     I              B6JQWG                          TBJQWG
     I              B6NVDT                          TBNVDT
     I              B6BUTM                          TBBUTM
     I              B6UVST                          TBUVST
     I              B6UWST                          TBUWST
     I              B6UXST                          TBUXST
     I              B6VSST                          TBVSST
     I              B6AATM                          TBAATM
     I              B6AYNA                          TBAYNA
     I              B6A0NA                          TBA0NA
     I              B6AXDT                          TBAXDT
      *
     I@B6CPNA
      * Order Detail Sched_Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          TCAIC3
     I              B6C4NB                          TCC4NB
     I              B6DPNB                          TCDPNB
     I              B6UENB                          TCUENB
     I              B6JGDT                          TCJGDT
     I              B6OONY                          TCOONY
     I              B6AODT                          TCAODT
     I              B6AJCD                          TCAJCD
     I              B6NUDT                          TCNUDT
     I              B6HGCD                          TCHGCD
     I              B6IGQT                          TCIGQT
     I              B6FLWG                          TCFLWG
     I              B6NSQT                          TCNSQT
     I              B6JQWG                          TCJQWG
     I              B6NVDT                          TCNVDT
     I              B6BUTM                          TCBUTM
     I              B6UVST                          TCUVST
     I              B6UWST                          TCUWST
     I              B6UXST                          TCUXST
     I              B6VSST                          TCVSST
     I              B6AATM                          TCAATM
     I              B6AYNA                          TCAYNA
     I              B6A0NA                          TCA0NA
     I              B6AXDT                          TCAXDT
      *
     I@AFREPU
      * Calendar Master           RSQ Co/Date Descending
      * Renamed input format fields
     I              AFAIC3                          TDAIC3
     I              AFBCDT                          TDBCDT
     I              AFCQNB                          TDCQNB
     I              AFESNB                          TDESNB
     I              AFETNB                          TDETNB
     I              AFBZNB                          TDBZNB
     I              AFA9ST                          TDA9ST
     I              AFEINB                          TDEINB
     I              AFC5ST                          TDC5ST
     I              AFAQNB                          TDAQNB
     I              AFCMST                          TDCMST
     I              AFV9ST                          TDV9ST
     I              AFWAST                          TDWAST
     I              AFX2ST                          TDX2ST
     I              AFOJDT                          TDOJDT
     I              AFNQNX                          TDNQNX
     I              AFNRNX                          TDNRNX
     I              AFI9SX                          TDI9SX
     I              AFJASX                          TDJASX
     I              AFOKDT                          TDOKDT
     I              AFOLDT                          TDOLDT
     I              AFUVST                          TDUVST
     I              AFUWST                          TDUWST
     I              AFUXST                          TDUXST
     I              AFAATM                          TDAATM
     I              AFAYNA                          TDAYNA
     I              AFA0NA                          TDA0NA
     I              AFAXDT                          TDAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPOB51    E DSPOB5CPL0
      * UPD : Order Detail Sched_Inv    Update index
      * Renamed input format fields
     I              B5AIC3                          WLAIC3
     I              B5C4NB                          WLC4NB
     I              B5DPNB                          WLDPNB
     I              B5UENB                          WLUENB
     I              B5JGDT                          WLJGDT
     I              B5AODT                          WLAODT
     I              B5AJCD                          WLAJCD
     I              B5HGCD                          WLHGCD
     I              B5IUQT                          WLIUQT
     I              B5F3WG                          WLF3WG
     I              B5UVST                          WLUVST
     I              B5UWST                          WLUWST
     I              B5UXST                          WLUXST
     I              B5VSST                          WLVSST
     I              B5AATM                          WLAATM
     I              B5AYNA                          WLAYNA
     I              B5A0NA                          WLA0NA
     I              B5AXDT                          WLAXDT
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IYARDCS      DS                             69
     IQPDKN1    E DSPDKNCPL0
      * UPD : Order Detail Schedule     Update index
      * Renamed input format fields
     I              KNAIC3                          WOAIC3
     I              KNC4NB                          WOC4NB
     I              KNDPNB                          WODPNB
     I              KNUENB                          WOUENB
     I              KNJGDT                          WOJGDT
     I              KNAODT                          WOAODT
     I              KNAJCD                          WOAJCD
     I              KNAYAA                          WOAYAA
     I              KNHGCD                          WOHGCD
     I              KNIGQT                          WOIGQT
     I              KNFLWG                          WOFLWG
     I              KNIUQT                          WOIUQT
     I              KNF3WG                          WOF3WG
     I              KNIVQT                          WOIVQT
     I              KNF4WG                          WOF4WG
     I              KNP7ST                          WOP7ST
     I              KNP8ST                          WOP8ST
     I              KNQAST                          WOQAST
     I              KNUVST                          WOUVST
     I              KNUWST                          WOUWST
     I              KNUXST                          WOUXST
     I              KNVSST                          WOVSST
     I              KNAATM                          WOAATM
     I              KNAYNA                          WOAYNA
     I              KNA0NA                          WOA0NA
     I              KNAXDT                          WOAXDT
      *
     IYBRDCS      DS                            100
     IQPDI81    E DSPDI8CPL0
      * UPD : PS Prod Item Schedule     Update index
      * Renamed input format fields
     I              I8AIC3                          WSAIC3
     I              I8V5ST                          WSV5ST
     I              I8ELDT                          WSELDT
     I              I8HGCD                          WSHGCD
     I              I8AJCD                          WSAJCD
     I              I8GPDT                          WSGPDT
     I              I8WTSP                          WSWTSP
     I              I8QTSP                          WSQTSP
     I              I8DJPC                          WSDJPC
     I              I8F8WG                          WSF8WG
     I              I8WTIN                          WSWTIN
     I              I8D5NB                          WSD5NB
     I              I8DXWG                          WSDXWG
     I              I8B2NB                          WSB2NB
     I              I8WTCN                          WSWTCN
     I              I8PSCV                          WSPSCV
     I              I8SAWT                          WSSAWT
     I              I8B9NB                          WSB9NB
     I              I8D1WG                          WSD1WG
     I              I8CBNB                          WSCBNB
     I              I8EZWG                          WSEZWG
     I              I8CCNB                          WSCCNB
     I              I8E0WG                          WSE0WG
     I              I8D6NB                          WSD6NB
     I              I8OAWT                          WSOAWT
     I              I8CDNB                          WSCDNB
     I              I8UNW2                          WSUNW2
     I              I8CENB                          WSCENB
     I              I8F9WG                          WSF9WG
     I              I8BPNB                          WSBPNB
     I              I8GAWG                          WSGAWG
     I              I8BQNB                          WSBQNB
     I              I8GBWG                          WSGBWG
     I              I8BRNB                          WSBRNB
     I              I8GCWG                          WSGCWG
     I              I8BSNB                          WSBSNB
     I              I8GDWG                          WSGDWG
     I              I8BWNB                          WSBWNB
     I              I8GEWG                          WSGEWG
     I              I8PS6U                          WSPS6U
     I              I8WCST                          WSWCST
     I              I8WPST                          WSWPST
     I              I8B5ST                          WSB5ST
     I              I8TFST                          WSTFST
     I              I8TEST                          WSTEST
     I              I8THST                          WSTHST
     I              I8UDST                          WSUDST
     I              I8UFST                          WSUFST
     I              I8UGST                          WSUGST
     I              I8UHST                          WSUHST
     I              I8B6ST                          WSB6ST
     I              I8B7ST                          WSB7ST
     I              I8DVWG                          WSDVWG
     I              I8D7NB                          WSD7NB
     I              I8FCAD                          WSFCAD
     I              I8D9NB                          WSD9NB
     I              I8DWWG                          WSDWWG
     I              I8EANB                          WSEANB
     I              I8SHWT                          WSSHWT
     I              I8EBNB                          WSEBNB
     I              I8AVWT                          WSAVWT
     I              I8ECNB                          WSECNB
     I              I8WTON                          WSWTON
     I              I8EDNB                          WSEDNB
     I              I8FNWT                          WSFNWT
     I              I8EENB                          WSEENB
     I              I8QTAS                          WSQTAS
     I              I8EFNB                          WSEFNB
     I              I8WAIO                          WSWAIO
     I              I8EGNB                          WSEGNB
     I              I8R3CD                          WSR3CD
     I              I8RGNB                          WSRGNB
     I              I8RHNB                          WSRHNB
     I              I8RINB                          WSRINB
     I              I8XRCD                          WSXRCD
     I              I8UVST                          WSUVST
     I              I8UWST                          WSUWST
     I              I8UXST                          WSUXST
     I              I8VSST                          WSVSST
     I              I8AATM                          WSAATM
     I              I8AYNA                          WSAYNA
     I              I8A0NA                          WSA0NA
     I              I8AXDT                          WSAXDT
      *
     IYCRDCS      DS                            326
     IYDRDCS      DS                            100
     IYERDCS      DS                            326
     IYFRDCS      DS                            326
     IQPOB61    E DSPOB6CPL0
      * UPD : Order Detail Sched_Consmd Update index
      * Renamed input format fields
     I              B6AIC3                          TCAIC3
     I              B6C4NB                          TCC4NB
     I              B6DPNB                          TCDPNB
     I              B6UENB                          TCUENB
     I              B6JGDT                          TCJGDT
     I              B6OONY                          TCOONY
     I              B6AODT                          TCAODT
     I              B6AJCD                          TCAJCD
     I              B6NUDT                          TCNUDT
     I              B6HGCD                          TCHGCD
     I              B6IGQT                          TCIGQT
     I              B6FLWG                          TCFLWG
     I              B6NSQT                          TCNSQT
     I              B6JQWG                          TCJQWG
     I              B6NVDT                          TCNVDT
     I              B6BUTM                          TCBUTM
     I              B6UVST                          TCUVST
     I              B6UWST                          TCUWST
     I              B6UXST                          TCUXST
     I              B6VSST                          TCVSST
     I              B6AATM                          TCAATM
     I              B6AYNA                          TCAYNA
     I              B6A0NA                          TCA0NA
     I              B6AXDT                          TCAXDT
      *
     IYGRDCS      DS                             91
     IYHRDCS      DS                            326
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Order Number
     I                                    P   3   60P1C4NB
      * I :  Order Sequence Number
     I                                    P   7   80P1DPNB
      * I :  Order Secondary Line Seq
     I                                    P   9  100P1UENB
      * I :  Item Code
     I                                    P  11  140P1HGCD
      * I :  Warehouse Code
     I                                       15  17 P1AJCD
      * I :  Ship Date USR
     I                                    P  18  210P1HLDT
      * I :  Quantity Ordered
     I                                    P  22  272P1AVQT
      * I :  Weight Ordered
     I                                    P  28  332P1D0WG
      * B :  Quantity Scheduled
     I                                    P  34  392P1CCQT
      * B :  Weight Scheduled
     I                                    P  40  452P1AUWG
      * I :  ATS Adj Type USR
     I                                       46  47 P1ZLST
      * I :  PSAA Program Name
     I                                       48  57 P1BXVN
      * B :  ATS Quantity Need USR
     I                                    P  58  632P1HWQT
      * B :  ATS Weight Need USR
     I                                    P  64  692P1ENWG
      * I :  Unit Weight
     I                                    P  70  752P1AIWG
      * N :  Production Date
     I                                    P  76  790P1ELDT
      * N :  Production Date RGF
     I                                    P  80  830P1GVDT
      * N :  Production Date RGT
     I                                    P  84  870P1GWDT
      * I :  ATS Adj Type USR 2
     I                                       88  89 P1QJST
      * N :  Week Number
     I                                    P  90  910P1EINB
      * N :  Accounting Year Code
     I                                    P  92  940P1ESNB
      * N :  Accounting Period Code
     I                                    P  95  960P1ETNB
      * N :  OM Week
     I                                    P  97  980P1BZNB
      * N :  Week Begin Date      USR
     I                                    P  99 1020P1LHDT
      * N :  Week End Date        USR
     I                                    P 103 1060P1LIDT
      * I :  Production Date USR
     I                                    P 107 1100P1GXDT
      * I :  Order Date
     I                                    P 111 1140P1A0DT
      * I :  Order Type_Sales
     I                                      115 116 P1JNCD
      * I :  Requested Delivery Date
     I                                    P 117 1200P1EIDT
      * I :  Item Age Days
     I                                    P 121 1230P1RINY
      * I :  Production Ovr AgeDte Fr
     I                                    P 124 1270P1TIDT
      * I :  Production Ovr AgeDte To
     I                                    P 128 1310P1TJDT
     IP2PARM      DS
      * FLD: Company Item
      * I :  UOM Primary
     I                                        1   2 P2ADCD
      * I :  Fresh Chilling Time
     I                                    P   3   52P2CHTM
      * I :  Base_Conv_Loss Item
     I                                        6   7 P2QZCD
      * I :  Department Code
     I                                        8  13 P2R3CD
      * I :  Piece Count Item
     I                                       14  14 P2PCCT
      * I :  Pieces Per Bag
     I                                    P  15  180P2BDNB
      * I :  Bags Per Unit
     I                                    P  19  220P2BJNB
      * I :  Export_Domestic
     I                                       23  23 P2SUST
      * I :  Print On Schedule
     I                                       24  24 P2SVST
      * I :  Fresh Inv Allocation Seq
     I                                       25  25 P2SYST
      * I :  Fresh Sched As Ordered
     I                                       26  26 P2SZST
      * I :  Frozen Inv Allocation Seq
     I                                       27  27 P2S1ST
      * I :  Primal Group Code
     I                                       28  33 P2XRCD
      * N :  Sold 100 Percent Frozen
     I                                       34  34 P2S4ST
     IP3PARM      DS
      * FLD: Warehouse Codes
      * N :  Production Warehouse Code
     I                                        1   3 P3AOCD
      * I :  Warehouse Type
     I                                        4   5 P3WPST
      * I :  Warehouse Std Chill Time
     I                                        6   6 P3T1ST
      * I :  Warehouse Chill Time
     I                                    P   7   92P3DBNB
      * I :  WHS Inventory Chill Time
     I                                    P  10  110P3BVC3
     IP4PARM      DS
      * FLD: Order Detail Schedule
      * N :  Scheduled Ship Date
     I                                    P   1   40P4AODT
      * N :  Order From Warehouse
     I                                        5   7 P4AYAA
     IP5PARM      DS
      * N :  Chill Time USR
     I                                    P   1   20P5CSHD
     IP6PARM      DS
      * I :  Item age days usr
     I                                    P   1   30P6RWNY
     IP7PARM      DS
      * I :  Prod Ovr AgeDte Fr Usr
     I                                    P   1   40P7TXDT
     IP8PARM      DS
      * I :  Prod Ovr AgeDte To Usr
     I                                    P   1   40P8TYDT
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1C4NB    PARM           WP0002  70       Order Number
     C           P1DPNB    PARM           WP0003  30       Order Sequence
     C           P1UENB    PARM           WP0004  30       Order Secondary
     C           P1HGCD    PARM           WP0005  70       Item Code
     C           P1AJCD    PARM           WP0006  3        Warehouse Code
     C           P1HLDT    PARM           WP0007  70       Ship Date USR
     C           P1AVQT    PARM           WP0008 112       Quantity Ordere
     C           P1D0WG    PARM           WP0009 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WP0010 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WP0011 112       Weight Schedule
     C           P1ZLST    PARM           WP0012  2        ATS Adj Type US
     C           P1BXVN    PARM           WP0013 10        PSAA Program Na
     C           P1HWQT    PARM P1HWQT    WP0014 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WP0015 112       ATS Weight Need
     C           P1AIWG    PARM           WP0016 112       Unit Weight
     C           P1QJST    PARM           WP0017  2        ATS Adj Type US
     C           P1GXDT    PARM           WP0018  70       Production Date
     C           P1A0DT    PARM           WP0019  70       Order Date
     C           P1JNCD    PARM           WP0020  2        Order Type_Sale
     C           P1EIDT    PARM           WP0021  70       Requested Deliv
     C           P1RINY    PARM           WP0022  40       Item Age Days
     C           P1TIDT    PARM           WP0023  70       Production Ovr
     C           P1TJDT    PARM           WP0024  70       Production Ovr
     C           P2ADCD    PARM           WP0025  2        UOM Primary
     C           P2CHTM    PARM           WP0026  52       Fresh Chilling
     C           P2QZCD    PARM           WP0027  2        Base_Conv_Loss
     C           P2R3CD    PARM           WP0028  6        Department Code
     C           P2PCCT    PARM           WP0029  1        Piece Count Ite
     C           P2BDNB    PARM           WP0030  70       Pieces Per Bag
     C           P2BJNB    PARM           WP0031  70       Bags Per Unit
     C           P2SUST    PARM           WP0032  1        Export_Domestic
     C           P2SVST    PARM           WP0033  1        Print On Schedu
     C           P2SYST    PARM           WP0034  1        Fresh Inv Alloc
     C           P2SZST    PARM           WP0035  1        Fresh Sched As
     C           P2S1ST    PARM           WP0036  1        Frozen Inv Allo
     C           P2XRCD    PARM           WP0037  6        Primal Group Co
     C           P3WPST    PARM           WP0038  2        Warehouse Type
     C           P3T1ST    PARM           WP0039  1        Warehouse Std C
     C           P3DBNB    PARM           WP0040  52       Warehouse Chill
     C           P3BVC3    PARM           WP0041  30       WHS Inventory C
     C           P6RWNY    PARM           WP0042  40       Item age days u
     C           P7TXDT    PARM           WP0043  70       Prod Ovr AgeDte
     C           P8TYDT    PARM           WP0044  70       Prod Ovr AgeDte
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * UPD ATS Order Allocate XF
      * FP1309 Age routines with From and To Date and number of Days
     C                     EXSR UASUBR                     FP1309 Age rout
      * parms on the new fields were also changed
      * E3014  RMC 3/11/14  Get the Sold 100% Frozen Sts
      * Age Limit - Production (PAR Context) (Age Code) removed fp1309
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
      * par.age code=adjusted age code
     C                     Z-ADDP3DBNB    YL0001           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    YL0001           Chilling Time U
     C                     END                             *FI
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0001  30       Company Number
     C                     PARM YL0001    WQ0002  52       Chilling Time U
     C                     PARM P1HLDT    WQ0003  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0004  70       Requested Deliv
     C                     PARM P1RINY    WQ0005  40       Item Age Days
     C                     PARM P1TIDT    WQ0006  70       Production Ovr
     C                     PARM P1TJDT    WQ0007  70       Production Ovr
     C           P1GVDT    PARM P1GVDT    WQ0008  70       Production AgeD
     C           P1GWDT    PARM P1GWDT    WQ0009  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    P1ELDT           Production Date
     C                     Z-ADDP1GXDT    P1GVDT           Production Date
     C                     Z-ADDP1GXDT    P1GWDT           Production Date
     C                     END                             *FI
      * Retrieve Week End date for *JOB DATE
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
     C                     EXSR SARVGN
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
     C                     EXSR SBRVGN
      * FP1054 - new
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0001    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    P3AOCD    P      Production Ware
     C                     Z-ADDWL0003    YL0002           Accounting Comp
      * Ship Off Cut Orders -- adjust TO date to job date FP1054 04/02/09
      * CASE:
      *  - c2ANDc1
      *   |- c2    : PAR.ATS Adj Type USR 2 is Ship Off Cut
      *   |- c1    : PAR.Production Date RGT LT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1QJST    IFEQ 'SC'                       *IF
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * RMC 6/24/19 CHG TO LOOK AT par.ATS adj type usr2 --> it has shipo
     C                     Z-ADD##JDT     P1GWDT           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
     C                     END                             *FI
      * R11918 DN 10/19/17-Get Allocation Method here instead.
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0003    P      Allocation Meth
      * R13899 RMC 10/11/18-If OD is price type= DST/TNK force to suspend
      * Rtv Price Type        RT - Order Detail  * 
     C                     EXSR SGRVGN
      * dst/tnk  - force allocation method to I
      * CASE:
      *  - c1ORc2
      *   |- c1    : LCL.OD Price Type is Distressed
      *   |- c2    : LCL.OD Price Type is Tanked
      *   '-
     C           YL0006    IFEQ 'DST'                      *IF
     C           YL0006    OREQ 'TNK'                      *OR
     C                     MOVEL'I'       YL0003           Allocation Meth
     C                     END                             *FI
      * R13899 RMC 10/11/18-If OH Is a BLOCK order,then do not alloc any
     C                     MOVEL*BLANK    YL0007           Block Order Fla
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0007    P      Block Order Fla
      * Allocate Inventory, Production, and/or Standard Mix
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
      * par.usr age code is the order's age code
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0010  30       Company Number
     C                     PARM YL0001    WQ0011  52       Chilling Time U
     C                     PARM P1HLDT    WQ0012  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0013  70       Requested Deliv
     C                     PARM P6RWNY    WQ0014  40       Item Age Days
     C                     PARM P7TXDT    WQ0015  70       Production Ovr
     C                     PARM P8TYDT    WQ0016  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0017  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0018  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * FP1054 added for ww order sched when selecting the prod dates.  5
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    YL0008           Production Date
     C                     Z-ADDP1GXDT    YL0009           Production Date
     C                     END                             *FI
      * FP1054 - FREEZER - Allow production JIT going backwards, then inv
      *  as long as the RGT is GE curr date-- changed to GE on 2/12/09.
      *  We want to allocate std or prd for current date
      * CASE: LCL.Block Order Flag is Firm Order
     C           YL0007    IFEQ 'F'                        *IF
      * Freezer -- Alloc inventory First       5/26/09
      * CASE: PAR.ATS Adj Type USR is Order Allocate-Inv Last
     C           P1ZLST    IFEQ 'OL'                       *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.WHS Inventory Chill Time is greater than zero
     C           P3BVC3    IFGT *ZERO                      *IF
      * E2073 9/18/12
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0019  30       Company Number
     C                     PARM P3BVC3    WQ0020  52       Chilling Time U
     C                     PARM P1HLDT    WQ0021  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0022  70       Requested Deliv
     C                     PARM P6RWNY    WQ0023  40       Item Age Days
     C                     PARM P1TIDT    WQ0024  70       Production Ovr
     C                     PARM P1TJDT    WQ0025  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0026  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0027  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0028  30       Company Number
     C                     PARM YL0001    WQ0029  52       Chilling Time U
     C                     PARM P1HLDT    WQ0030  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0031  70       Requested Deliv
     C                     PARM P6RWNY    WQ0032  40       Item Age Days
     C                     PARM P1TIDT    WQ0033  70       Production Ovr
     C                     PARM P1TJDT    WQ0034  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0035  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0036  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * FP1054 4/14/09 pass in lcl.prod date rgt+1 day for TO date OR job
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FZ
     C           P1ZLST    IFEQ 'OF'                       *IF
     C                     Z-ADD##JDT     YL0010           To Date
     C                     ELSE
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FO
     C           P1ZLST    IFEQ 'FO'                       *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.-730 *DAY
     C           YL0008    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0008
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0008
     C                     END
      * E2073 8/01/12
     C           P3BVC3    MULT -1        YL0011           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0011    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0010
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0010
     C                     END
      * E14823 JJH 04/19/19 - Added 2009 and commented out now per Avi Di
     C                     ELSE
      * CASE: *OTHERWISE
      * E2073 8/01/12
     C           P3BVC3    MULT -1        YL0011           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0011    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0010
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0010
     C                     END
      * E14823 JJH 04/19/19 - Added 2009 and commented out now per Avi Di
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0002 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0003 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0004  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0008    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0011           Company Number
     C                     Z-ADDP1HGCD    WL0012           Item Code
     C                     MOVELP1AJCD    WL0013    P      Warehouse Code
     C                     Z-ADDYL0008    WL0014           Production Date
     C                     Z-ADDP1AIWG    WL0015           Unit Weight
     C                     MOVELP2PCCT    WL0016    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0017           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0018           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0019           Order Number
     C                     Z-ADDP1DPNB    WL0020           Order Sequence
     C                     Z-ADDP1UENB    WL0021           Order Secondary
     C                     Z-ADDP1AVQT    WL0022           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0023           Weight Ordered
     C                     Z-ADDP1CCQT    WL0024           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0025           Weight Schedule
     C                     Z-ADDP1HWQT    WL0026           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0027           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0028           Ship Date USR
     C                     Z-ADDYL0010    WL0029           To Date
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0025    P1AUWG           Weight Schedule
     C                     Z-ADDWL0026    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0027    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0037  30       Company Number
     C                     PARM YL0001    WQ0038  52       Chilling Time U
     C                     PARM P1HLDT    WQ0039  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0040  70       Requested Deliv
     C                     PARM P6RWNY    WQ0041  40       Item Age Days
     C                     PARM P7TXDT    WQ0042  70       Production Ovr
     C                     PARM P8TYDT    WQ0043  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0044  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0045  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * FP1054 added for ww order sched when selecting the prod dates.  5
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    YL0008           Production Date
     C                     Z-ADDP1GXDT    YL0009           Production Date
     C                     END                             *FI
      * R11918 DN 10/19/17-Commented out routine & moved below.
      * R11918 DN 10/19/17-Do Not Process Allocation if 'I=Suspended Inve
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Allocation Method is Suspended-Inventory Only
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'I'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Do this for FZ only if 2=sched (ie. prod date usr > 0)
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
      * CASE: LCL.Production Date RGT GE JOB.*Job date
     C           YL0009    IFGE ##JDT                      *IF
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0016           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0017           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0018           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0019           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0140  1        Production Type
     C                     Z-ADD*ZERO     WN0141 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0142 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0143  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0144 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0145  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0146  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0147  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0148  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0149  52       Production Yiel
     C                     Z-ADD*ZERO     WN0150  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0151 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UBSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0147           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0147           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UCSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0008    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0140           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0140    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0140    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0142    WL0078           ATS Weight Avai
     C                     Z-ADDWN0143    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0147    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0148           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0142           ATS Weight Avai
     C                     Z-ADDWL0079    WN0143           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0143    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0142    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0141    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0141    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0141                     *IF
     C                     ADD  WN0141    P1CCQT           Quantity Schedu
     C           WN0141    MULT P1AIWG    WN0142           ATS Weight Avai
     C                     ADD  WN0142    P1AUWG           Weight Schedule
     C                     Z-ADDWN0142    WN0145           Weight Allocate
     C                     Z-ADDWN0141    WN0144           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0141                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0145           Weight Allocate
     C                     Z-ADDP1HWQT    WN0144           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0144    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0144    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0146           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0146    MULT WN0148    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0145           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0145    WL0090           Weight Allocate
     C                     Z-ADDWN0144    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0140    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0145    WL0098           Weight Allocate
     C                     Z-ADDWN0146    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0140    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0146    WL0196           Pieces Schedule
     C                     Z-ADDWN0145    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0140    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0145    WL0203           Weight Allocate
     C                     Z-ADDWN0146    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0144           Quantity Alloca
     C                     Z-ADD*ZERO     WN0145           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0140           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0140    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0140    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0142    WL0078           ATS Weight Avai
     C                     Z-ADDWN0143    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0147    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0148           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0142           ATS Weight Avai
     C                     Z-ADDWL0079    WN0143           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0143    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0142    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0141    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0141    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0141                     *IF
     C                     ADD  WN0141    P1CCQT           Quantity Schedu
     C           WN0141    MULT P1AIWG    WN0142           ATS Weight Avai
     C                     ADD  WN0142    P1AUWG           Weight Schedule
     C                     Z-ADDWN0142    WN0145           Weight Allocate
     C                     Z-ADDWN0141    WN0144           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0141                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0145           Weight Allocate
     C                     Z-ADDP1HWQT    WN0144           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0144    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0144    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0146           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0146    MULT WN0148    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0145           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0145    WL0090           Weight Allocate
     C                     Z-ADDWN0144    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0140    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0145    WL0098           Weight Allocate
     C                     Z-ADDWN0146    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0140    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0146    WL0196           Pieces Schedule
     C                     Z-ADDWN0145    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0140    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0145    WL0203           Weight Allocate
     C                     Z-ADDWN0146    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0144           Quantity Alloca
     C                     Z-ADD*ZERO     WN0145           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0147           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0147           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UDSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0140           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0140    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0140           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0140    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0142    WL0078           ATS Weight Avai
     C                     Z-ADDWN0143    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0147    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0148           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0142           ATS Weight Avai
     C                     Z-ADDWL0079    WN0143           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0143    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0142    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0141           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0141    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0141           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0141    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0141                     *IF
     C                     ADD  WN0141    P1CCQT           Quantity Schedu
     C           WN0141    MULT P1AIWG    WN0142           ATS Weight Avai
     C                     ADD  WN0142    P1AUWG           Weight Schedule
     C                     Z-ADDWN0142    WN0145           Weight Allocate
     C                     Z-ADDWN0141    WN0144           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0141                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0145           Weight Allocate
     C                     Z-ADDP1HWQT    WN0144           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0144    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0144    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0146           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0146    MULT WN0148    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0145           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0145    WL0090           Weight Allocate
     C                     Z-ADDWN0144    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0140    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0145    WL0098           Weight Allocate
     C                     Z-ADDWN0146    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0140    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0146    WL0196           Pieces Schedule
     C                     Z-ADDWN0145    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0140    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0145    WL0203           Weight Allocate
     C                     Z-ADDWN0146    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0144           Quantity Alloca
     C                     Z-ADD*ZERO     WN0145           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0016    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0017    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0018    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0019    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Now allocate production normally
      *
     C                     MOVEL*BLANK    WN0671  1        Production Type
     C                     Z-ADD*ZERO     WN0672 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0673 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0674  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0675 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0676  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0677  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0678  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0679  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0680  52       Production Yiel
     C                     Z-ADD*ZERO     WN0681  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0682 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UESUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0678           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0678           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UFSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0008    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0671           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0671    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0671    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0673    WL0078           ATS Weight Avai
     C                     Z-ADDWN0674    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0678    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0679           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0673           ATS Weight Avai
     C                     Z-ADDWL0079    WN0674           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0674    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0673    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0672    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0672    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0672                     *IF
     C                     ADD  WN0672    P1CCQT           Quantity Schedu
     C           WN0672    MULT P1AIWG    WN0673           ATS Weight Avai
     C                     ADD  WN0673    P1AUWG           Weight Schedule
     C                     Z-ADDWN0673    WN0676           Weight Allocate
     C                     Z-ADDWN0672    WN0675           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0672                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0676           Weight Allocate
     C                     Z-ADDP1HWQT    WN0675           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0675    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0675    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0677           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0677    MULT WN0679    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0676           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0676    WL0090           Weight Allocate
     C                     Z-ADDWN0675    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0671    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0676    WL0098           Weight Allocate
     C                     Z-ADDWN0677    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0671    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0677    WL0196           Pieces Schedule
     C                     Z-ADDWN0676    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0671    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0676    WL0203           Weight Allocate
     C                     Z-ADDWN0677    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0675           Quantity Alloca
     C                     Z-ADD*ZERO     WN0676           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0671           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0671    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0671    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0673    WL0078           ATS Weight Avai
     C                     Z-ADDWN0674    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0678    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0679           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0673           ATS Weight Avai
     C                     Z-ADDWL0079    WN0674           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0674    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0673    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0672    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0672    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0672                     *IF
     C                     ADD  WN0672    P1CCQT           Quantity Schedu
     C           WN0672    MULT P1AIWG    WN0673           ATS Weight Avai
     C                     ADD  WN0673    P1AUWG           Weight Schedule
     C                     Z-ADDWN0673    WN0676           Weight Allocate
     C                     Z-ADDWN0672    WN0675           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0672                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0676           Weight Allocate
     C                     Z-ADDP1HWQT    WN0675           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0675    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0675    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0677           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0677    MULT WN0679    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0676           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0676    WL0090           Weight Allocate
     C                     Z-ADDWN0675    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0671    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0676    WL0098           Weight Allocate
     C                     Z-ADDWN0677    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0671    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0677    WL0196           Pieces Schedule
     C                     Z-ADDWN0676    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0671    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0676    WL0203           Weight Allocate
     C                     Z-ADDWN0677    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0675           Quantity Alloca
     C                     Z-ADD*ZERO     WN0676           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0678           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0678           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UGSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0671           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0671    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0671           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0671    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0673    WL0078           ATS Weight Avai
     C                     Z-ADDWN0674    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0678    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0679           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0673           ATS Weight Avai
     C                     Z-ADDWL0079    WN0674           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0674    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0673    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0672           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0672    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0672           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0672    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0672                     *IF
     C                     ADD  WN0672    P1CCQT           Quantity Schedu
     C           WN0672    MULT P1AIWG    WN0673           ATS Weight Avai
     C                     ADD  WN0673    P1AUWG           Weight Schedule
     C                     Z-ADDWN0673    WN0676           Weight Allocate
     C                     Z-ADDWN0672    WN0675           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0672                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0676           Weight Allocate
     C                     Z-ADDP1HWQT    WN0675           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0675    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0675    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0677           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0677    MULT WN0679    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0676           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0676    WL0090           Weight Allocate
     C                     Z-ADDWN0675    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0671    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0676    WL0098           Weight Allocate
     C                     Z-ADDWN0677    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0671    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0677    WL0196           Pieces Schedule
     C                     Z-ADDWN0676    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0671    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0676    WL0203           Weight Allocate
     C                     Z-ADDWN0677    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0675           Quantity Alloca
     C                     Z-ADD*ZERO     WN0676           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * 7/14/09 added whse comp
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0016           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0017           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0018           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0019           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0683  1        Production Type
     C                     Z-ADD*ZERO     WN0684 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0685 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0686  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0687 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0688  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0689  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0690  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0691  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0692  52       Production Yiel
     C                     Z-ADD*ZERO     WN0693  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0694 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UHSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0690           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0690           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UISUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0008    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0683           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0683    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0683    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0685    WL0078           ATS Weight Avai
     C                     Z-ADDWN0686    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0690    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0691           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0685           ATS Weight Avai
     C                     Z-ADDWL0079    WN0686           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0686    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0685    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0684    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0684    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0684                     *IF
     C                     ADD  WN0684    P1CCQT           Quantity Schedu
     C           WN0684    MULT P1AIWG    WN0685           ATS Weight Avai
     C                     ADD  WN0685    P1AUWG           Weight Schedule
     C                     Z-ADDWN0685    WN0688           Weight Allocate
     C                     Z-ADDWN0684    WN0687           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0684                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0688           Weight Allocate
     C                     Z-ADDP1HWQT    WN0687           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0687    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0687    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0689           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0689    MULT WN0691    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0688           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0688    WL0090           Weight Allocate
     C                     Z-ADDWN0687    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0683    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0688    WL0098           Weight Allocate
     C                     Z-ADDWN0689    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0683    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0689    WL0196           Pieces Schedule
     C                     Z-ADDWN0688    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0683    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0688    WL0203           Weight Allocate
     C                     Z-ADDWN0689    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0687           Quantity Alloca
     C                     Z-ADD*ZERO     WN0688           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0683           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0683    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0683    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0685    WL0078           ATS Weight Avai
     C                     Z-ADDWN0686    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0690    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0691           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0685           ATS Weight Avai
     C                     Z-ADDWL0079    WN0686           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0686    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0685    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0684    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0684    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0684                     *IF
     C                     ADD  WN0684    P1CCQT           Quantity Schedu
     C           WN0684    MULT P1AIWG    WN0685           ATS Weight Avai
     C                     ADD  WN0685    P1AUWG           Weight Schedule
     C                     Z-ADDWN0685    WN0688           Weight Allocate
     C                     Z-ADDWN0684    WN0687           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0684                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0688           Weight Allocate
     C                     Z-ADDP1HWQT    WN0687           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0687    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0687    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0689           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0689    MULT WN0691    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0688           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0688    WL0090           Weight Allocate
     C                     Z-ADDWN0687    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0683    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0688    WL0098           Weight Allocate
     C                     Z-ADDWN0689    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0683    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0689    WL0196           Pieces Schedule
     C                     Z-ADDWN0688    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0683    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0688    WL0203           Weight Allocate
     C                     Z-ADDWN0689    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0687           Quantity Alloca
     C                     Z-ADD*ZERO     WN0688           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0690           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0690           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UJSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0683           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0683    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0683           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0683    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0685    WL0078           ATS Weight Avai
     C                     Z-ADDWN0686    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0690    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0691           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0685           ATS Weight Avai
     C                     Z-ADDWL0079    WN0686           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0686    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0685    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0684           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0684    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0684           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0684    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0684                     *IF
     C                     ADD  WN0684    P1CCQT           Quantity Schedu
     C           WN0684    MULT P1AIWG    WN0685           ATS Weight Avai
     C                     ADD  WN0685    P1AUWG           Weight Schedule
     C                     Z-ADDWN0685    WN0688           Weight Allocate
     C                     Z-ADDWN0684    WN0687           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0684                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0688           Weight Allocate
     C                     Z-ADDP1HWQT    WN0687           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0687    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0687    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0689           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0689    MULT WN0691    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0688           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0688    WL0090           Weight Allocate
     C                     Z-ADDWN0687    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0683    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0688    WL0098           Weight Allocate
     C                     Z-ADDWN0689    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0683    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0689    WL0196           Pieces Schedule
     C                     Z-ADDWN0688    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0683    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0688    WL0203           Weight Allocate
     C                     Z-ADDWN0689    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0687           Quantity Alloca
     C                     Z-ADD*ZERO     WN0688           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0016    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0017    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0018    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0019    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Alloc prod or std
      * CASE: LCL.Production Date RGT GE JOB.*Job date
     C           YL0009    IFGE ##JDT                      *IF
      * E2073 RMC allow FZ converted items to be sched for current day or
      * 4/10/09  Call UPD Allocate Prd      IF
      *
     C                     MOVEL*BLANK    WN0695  1        Production Type
     C                     Z-ADD*ZERO     WN0696 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0697 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0698  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0699 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0700  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0701  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0702  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0703  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0704  52       Production Yiel
     C                     Z-ADD*ZERO     WN0705  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0706 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UKSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0702           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0702           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR ULSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0008    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0695           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0695    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0695    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0697    WL0078           ATS Weight Avai
     C                     Z-ADDWN0698    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0702    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0703           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0697           ATS Weight Avai
     C                     Z-ADDWL0079    WN0698           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0698    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0697    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0696    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0696    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0696                     *IF
     C                     ADD  WN0696    P1CCQT           Quantity Schedu
     C           WN0696    MULT P1AIWG    WN0697           ATS Weight Avai
     C                     ADD  WN0697    P1AUWG           Weight Schedule
     C                     Z-ADDWN0697    WN0700           Weight Allocate
     C                     Z-ADDWN0696    WN0699           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0696                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0700           Weight Allocate
     C                     Z-ADDP1HWQT    WN0699           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0699    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0699    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0701           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0701    MULT WN0703    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0700           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0700    WL0090           Weight Allocate
     C                     Z-ADDWN0699    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0695    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0700    WL0098           Weight Allocate
     C                     Z-ADDWN0701    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0695    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0701    WL0196           Pieces Schedule
     C                     Z-ADDWN0700    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0695    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0700    WL0203           Weight Allocate
     C                     Z-ADDWN0701    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0699           Quantity Alloca
     C                     Z-ADD*ZERO     WN0700           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0695           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0695    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0695    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0697    WL0078           ATS Weight Avai
     C                     Z-ADDWN0698    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0702    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0703           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0697           ATS Weight Avai
     C                     Z-ADDWL0079    WN0698           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0698    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0697    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0696    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0696    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0696                     *IF
     C                     ADD  WN0696    P1CCQT           Quantity Schedu
     C           WN0696    MULT P1AIWG    WN0697           ATS Weight Avai
     C                     ADD  WN0697    P1AUWG           Weight Schedule
     C                     Z-ADDWN0697    WN0700           Weight Allocate
     C                     Z-ADDWN0696    WN0699           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0696                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0700           Weight Allocate
     C                     Z-ADDP1HWQT    WN0699           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0699    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0699    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0701           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0701    MULT WN0703    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0700           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0700    WL0090           Weight Allocate
     C                     Z-ADDWN0699    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0695    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0700    WL0098           Weight Allocate
     C                     Z-ADDWN0701    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0695    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0701    WL0196           Pieces Schedule
     C                     Z-ADDWN0700    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0695    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0700    WL0203           Weight Allocate
     C                     Z-ADDWN0701    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0699           Quantity Alloca
     C                     Z-ADD*ZERO     WN0700           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0702           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0702           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDYL0009    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UMSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDYL0008    YL0032           Production Date
     C                     Z-ADDYL0009    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           YL0008    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           YL0009    IFLT ##JDT                      *IF
     C                     Z-ADDYL0009    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDYL0009    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0695           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0695    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0695           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0695    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0697    WL0078           ATS Weight Avai
     C                     Z-ADDWN0698    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0702    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0703           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0697           ATS Weight Avai
     C                     Z-ADDWL0079    WN0698           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0698    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0697    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0696           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0696    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0696           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0696    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0696                     *IF
     C                     ADD  WN0696    P1CCQT           Quantity Schedu
     C           WN0696    MULT P1AIWG    WN0697           ATS Weight Avai
     C                     ADD  WN0697    P1AUWG           Weight Schedule
     C                     Z-ADDWN0697    WN0700           Weight Allocate
     C                     Z-ADDWN0696    WN0699           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0696                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0700           Weight Allocate
     C                     Z-ADDP1HWQT    WN0699           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0699    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0699    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0701           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0701    MULT WN0703    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0700           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0700    WL0090           Weight Allocate
     C                     Z-ADDWN0699    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0695    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0700    WL0098           Weight Allocate
     C                     Z-ADDWN0701    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0695    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0701    WL0196           Pieces Schedule
     C                     Z-ADDWN0700    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0695    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0700    WL0203           Weight Allocate
     C                     Z-ADDWN0701    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0699           Quantity Alloca
     C                     Z-ADD*ZERO     WN0700           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0046  3        Warehouse Code
     C                     PARM P1AIC3    WQ0047  30       Company Number
     C                     PARM P1HGCD    WQ0048  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0049  70       Production Date
     C                     PARM P2ADCD    WQ0050  2        UOM Primary
     C                     PARM P1AIWG    WQ0051 112       Unit Weight
     C                     PARM P2CHTM    WQ0052  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0053  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0054  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0055  70       Bags Per Unit
     C                     PARM P3WPST    WQ0056  2        Warehouse Type
     C                     PARM P3T1ST    WQ0057  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0058  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0059  70       Order Number
     C                     PARM P1DPNB    WQ0060  30       Order Sequence
     C                     PARM P1UENB    WQ0061  30       Order Secondary
     C                     PARM YL0008    WQ0062  70       Production Date
     C                     PARM YL0009    WQ0063  70       Production Date
     C                     PARM P1AVQT    WQ0064 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0065 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0066 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0067 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0068 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0069 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0070  70       Ship Date USR
     C                     PARM P1QJST    WQ0071  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0072 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0073  3        Order From Ware
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Firm Order
     C           YL0007    IFEQ 'F'                        *IF
      * Alloc Inv --- if not Allocating Inv first      5/26/09
      * CASE: PAR.ATS Adj Type USR is Order Allocate-Inv Last
     C           P1ZLST    IFEQ 'OL'                       *IF
      * CASE: PAR.Weight Ordered NE PAR.Weight Scheduled
     C           P1D0WG    IFNE P1AUWG                     *IF
      * CASE: PAR.WHS Inventory Chill Time is greater than zero
     C           P3BVC3    IFGT *ZERO                      *IF
      * E2073 9/18/12
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0074  30       Company Number
     C                     PARM P3BVC3    WQ0075  52       Chilling Time U
     C                     PARM P1HLDT    WQ0076  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0077  70       Requested Deliv
     C                     PARM P6RWNY    WQ0078  40       Item Age Days
     C                     PARM P1TIDT    WQ0079  70       Production Ovr
     C                     PARM P1TJDT    WQ0080  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0081  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0082  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0083  30       Company Number
     C                     PARM YL0001    WQ0084  52       Chilling Time U
     C                     PARM P1HLDT    WQ0085  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0086  70       Requested Deliv
     C                     PARM P6RWNY    WQ0087  40       Item Age Days
     C                     PARM P1TIDT    WQ0088  70       Production Ovr
     C                     PARM P1TJDT    WQ0089  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0090  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0091  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      * FP1054 4/14/09 pass in lcl.prod date rgt+1 day for TO date OR job
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FZ
     C           P1ZLST    IFEQ 'OF'                       *IF
     C                     Z-ADD##JDT     YL0010           To Date
     C                     ELSE
      * CASE: PAR.ATS Adj Type USR is Order Allocate-ovrde FO
     C           P1ZLST    IFEQ 'FO'                       *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.-730 *DAY
     C           YL0008    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-730      XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0008
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0008
     C                     END
      * E2073 8/01/12
     C           P3BVC3    MULT -1        YL0011           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0011    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0010
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0010
     C                     END
      * E14823 JJH 04/19/19 - Added 2009 and commented out now per Avi Di
     C                     ELSE
      * CASE: *OTHERWISE
      * E2073 8/01/12
     C           P3BVC3    MULT -1        YL0011           Days in Freezer
      * LCL.To Date               USR = PAR.Ship Date USR + LCL.Days in F
     C           P1HLDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0011    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0010
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0010
     C                     END
      * E14823 JJH 04/19/19 - Added 2009 and commented out now per Avi Di
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0707 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0708 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0709 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0710  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0008    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0011           Company Number
     C                     Z-ADDP1HGCD    WL0012           Item Code
     C                     MOVELP1AJCD    WL0013    P      Warehouse Code
     C                     Z-ADDYL0008    WL0014           Production Date
     C                     Z-ADDP1AIWG    WL0015           Unit Weight
     C                     MOVELP2PCCT    WL0016    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0017           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0018           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0019           Order Number
     C                     Z-ADDP1DPNB    WL0020           Order Sequence
     C                     Z-ADDP1UENB    WL0021           Order Secondary
     C                     Z-ADDP1AVQT    WL0022           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0023           Weight Ordered
     C                     Z-ADDP1CCQT    WL0024           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0025           Weight Schedule
     C                     Z-ADDP1HWQT    WL0026           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0027           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0028           Ship Date USR
     C                     Z-ADDYL0010    WL0029           To Date
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0025    P1AUWG           Weight Schedule
     C                     Z-ADDWL0026    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0027    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Schedule As Order or Order Allocate
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * SCHEDULE AS ORDERED - WHICH DOES STILL HAPPEN
     C                     EXSR UNSUBR                     SCHEDULE AS ORD
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Alloc INV for any order, not just those in the curr week.
      * FP1054 added for ww order sched when selecting the prod dates.  8
      * CASE: PAR.Production Date USR is Entered
     C           P1GXDT    IFNE *ZERO                      *IF
     C                     Z-ADDP1GXDT    YL0008           Production Date
     C                     Z-ADDP1GXDT    YL0009           Production Date
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    YL0008           Production Date
     C                     Z-ADDP1GWDT    YL0009           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Firm Order
     C           YL0007    IFEQ 'F'                        *IF
      * Alloc inventory if not allocating Inventory LAST     5/26/09
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.ATS Adj Type USR is Order Allocate-Inv Last
      *   |- c2    : PAR.Production Date USR is Entered
      *   '-
     C           P1ZLST    IFEQ 'OL'                       *IF
     C           P1GXDT    ORNE *ZERO                      *OR
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.WHS Inventory Chill Time is greater than zero
     C           P3BVC3    IFGT *ZERO                      *IF
      * E2073 8/01/12
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0157  30       Company Number
     C                     PARM P3BVC3    WQ0158  52       Chilling Time U
     C                     PARM P1HLDT    WQ0159  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0160  70       Requested Deliv
     C                     PARM P6RWNY    WQ0161  40       Item Age Days
     C                     PARM P1TIDT    WQ0162  70       Production Ovr
     C                     PARM P1TJDT    WQ0163  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0164  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0165  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0166  30       Company Number
     C                     PARM YL0001    WQ0167  52       Chilling Time U
     C                     PARM P1HLDT    WQ0168  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0169  70       Requested Deliv
     C                     PARM P6RWNY    WQ0170  40       Item Age Days
     C                     PARM P1TIDT    WQ0171  70       Production Ovr
     C                     PARM P1TJDT    WQ0172  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0173  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0174  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      *  FP1054 4/14/09 pass in job.*job date for TO date
      *
     C                     Z-ADD*ZERO     WN0763 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0764 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0765 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0766  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0008    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0011           Company Number
     C                     Z-ADDP1HGCD    WL0012           Item Code
     C                     MOVELP1AJCD    WL0013    P      Warehouse Code
     C                     Z-ADDYL0008    WL0014           Production Date
     C                     Z-ADDP1AIWG    WL0015           Unit Weight
     C                     MOVELP2PCCT    WL0016    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0017           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0018           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0019           Order Number
     C                     Z-ADDP1DPNB    WL0020           Order Sequence
     C                     Z-ADDP1UENB    WL0021           Order Secondary
     C                     Z-ADDP1AVQT    WL0022           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0023           Weight Ordered
     C                     Z-ADDP1CCQT    WL0024           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0025           Weight Schedule
     C                     Z-ADDP1HWQT    WL0026           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0027           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0028           Ship Date USR
     C                     Z-ADD##JDT     WL0029           To Date
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0025    P1AUWG           Weight Schedule
     C                     Z-ADDWL0026    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0027    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * R11918 DN 10/20/17-Commented out case stmt & moved below.
      * R11918 DN 10/20/17-Do Not Process Allocation if 'I=Suspended Inve
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Allocation Method is Suspended-Inventory Only
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'I'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * 5/07/12 E2073 send in par.production dates RGf, -RGT instead of l
      *     lcl has the inventory date range which is different.
      * 7/14 dont need whse comp because fresh base items are made at
      * both plants
      *
     C                     MOVEL*BLANK    WN0767  1        Production Type
     C                     Z-ADD*ZERO     WN0768 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0769 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0770  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0771 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0772  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0773  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0774  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0775  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0776  52       Production Yiel
     C                     Z-ADD*ZERO     WN0777  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0778 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR NASUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0774           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0774           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR NBSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0767           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0767    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0767    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0769    WL0078           ATS Weight Avai
     C                     Z-ADDWN0770    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0774    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0775           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0769           ATS Weight Avai
     C                     Z-ADDWL0079    WN0770           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0770    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0769    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0768    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0768    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0768                     *IF
     C                     ADD  WN0768    P1CCQT           Quantity Schedu
     C           WN0768    MULT P1AIWG    WN0769           ATS Weight Avai
     C                     ADD  WN0769    P1AUWG           Weight Schedule
     C                     Z-ADDWN0769    WN0772           Weight Allocate
     C                     Z-ADDWN0768    WN0771           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0768                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0772           Weight Allocate
     C                     Z-ADDP1HWQT    WN0771           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0771    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0771    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0773           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0773    MULT WN0775    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0772           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0772    WL0090           Weight Allocate
     C                     Z-ADDWN0771    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0767    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0772    WL0098           Weight Allocate
     C                     Z-ADDWN0773    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0767    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0773    WL0196           Pieces Schedule
     C                     Z-ADDWN0772    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0767    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0772    WL0203           Weight Allocate
     C                     Z-ADDWN0773    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0771           Quantity Alloca
     C                     Z-ADD*ZERO     WN0772           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0767           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0767    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0767    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0769    WL0078           ATS Weight Avai
     C                     Z-ADDWN0770    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0774    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0775           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0769           ATS Weight Avai
     C                     Z-ADDWL0079    WN0770           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0770    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0769    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0768    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0768    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0768                     *IF
     C                     ADD  WN0768    P1CCQT           Quantity Schedu
     C           WN0768    MULT P1AIWG    WN0769           ATS Weight Avai
     C                     ADD  WN0769    P1AUWG           Weight Schedule
     C                     Z-ADDWN0769    WN0772           Weight Allocate
     C                     Z-ADDWN0768    WN0771           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0768                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0772           Weight Allocate
     C                     Z-ADDP1HWQT    WN0771           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0771    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0771    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0773           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0773    MULT WN0775    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0772           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0772    WL0090           Weight Allocate
     C                     Z-ADDWN0771    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0767    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0772    WL0098           Weight Allocate
     C                     Z-ADDWN0773    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0767    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0773    WL0196           Pieces Schedule
     C                     Z-ADDWN0772    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0767    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0772    WL0203           Weight Allocate
     C                     Z-ADDWN0773    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0771           Quantity Alloca
     C                     Z-ADD*ZERO     WN0772           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0774           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0774           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR NCSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0767           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0767    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0767           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0767    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0769    WL0078           ATS Weight Avai
     C                     Z-ADDWN0770    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0774    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0775           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0769           ATS Weight Avai
     C                     Z-ADDWL0079    WN0770           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0770    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0769    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0768           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0768    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0768           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0768    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0768                     *IF
     C                     ADD  WN0768    P1CCQT           Quantity Schedu
     C           WN0768    MULT P1AIWG    WN0769           ATS Weight Avai
     C                     ADD  WN0769    P1AUWG           Weight Schedule
     C                     Z-ADDWN0769    WN0772           Weight Allocate
     C                     Z-ADDWN0768    WN0771           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0768                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0772           Weight Allocate
     C                     Z-ADDP1HWQT    WN0771           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0771    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0771    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0773           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0773    MULT WN0775    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0772           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0772    WL0090           Weight Allocate
     C                     Z-ADDWN0771    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0767    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0772    WL0098           Weight Allocate
     C                     Z-ADDWN0773    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0767    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0773    WL0196           Pieces Schedule
     C                     Z-ADDWN0772    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0767    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0772    WL0203           Weight Allocate
     C                     Z-ADDWN0773    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0771           Quantity Alloca
     C                     Z-ADD*ZERO     WN0772           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * 7/14 dont need whse comp because fresh converted will already hav
      *   weight std from the std mix
      *
     C                     MOVEL*BLANK    WN0779  1        Production Type
     C                     Z-ADD*ZERO     WN0780 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0781 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0782  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0783 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0784  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0785  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0786  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0787  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0788  52       Production Yiel
     C                     Z-ADD*ZERO     WN0789  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0790 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR NDSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0786           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0786           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR NESUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0779           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0779    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0779    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0781    WL0078           ATS Weight Avai
     C                     Z-ADDWN0782    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0786    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0787           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0781           ATS Weight Avai
     C                     Z-ADDWL0079    WN0782           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0782    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0781    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0780    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0780    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0780                     *IF
     C                     ADD  WN0780    P1CCQT           Quantity Schedu
     C           WN0780    MULT P1AIWG    WN0781           ATS Weight Avai
     C                     ADD  WN0781    P1AUWG           Weight Schedule
     C                     Z-ADDWN0781    WN0784           Weight Allocate
     C                     Z-ADDWN0780    WN0783           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0780                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0784           Weight Allocate
     C                     Z-ADDP1HWQT    WN0783           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0783    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0783    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0785           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0785    MULT WN0787    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0784           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0784    WL0090           Weight Allocate
     C                     Z-ADDWN0783    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0779    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0784    WL0098           Weight Allocate
     C                     Z-ADDWN0785    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0779    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0785    WL0196           Pieces Schedule
     C                     Z-ADDWN0784    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0779    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0784    WL0203           Weight Allocate
     C                     Z-ADDWN0785    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0783           Quantity Alloca
     C                     Z-ADD*ZERO     WN0784           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0779           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0779    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0779    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0781    WL0078           ATS Weight Avai
     C                     Z-ADDWN0782    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0786    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0787           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0781           ATS Weight Avai
     C                     Z-ADDWL0079    WN0782           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0782    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0781    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0780    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0780    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0780                     *IF
     C                     ADD  WN0780    P1CCQT           Quantity Schedu
     C           WN0780    MULT P1AIWG    WN0781           ATS Weight Avai
     C                     ADD  WN0781    P1AUWG           Weight Schedule
     C                     Z-ADDWN0781    WN0784           Weight Allocate
     C                     Z-ADDWN0780    WN0783           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0780                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0784           Weight Allocate
     C                     Z-ADDP1HWQT    WN0783           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0783    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0783    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0785           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0785    MULT WN0787    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0784           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0784    WL0090           Weight Allocate
     C                     Z-ADDWN0783    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0779    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0784    WL0098           Weight Allocate
     C                     Z-ADDWN0785    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0779    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0785    WL0196           Pieces Schedule
     C                     Z-ADDWN0784    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0779    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0784    WL0203           Weight Allocate
     C                     Z-ADDWN0785    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0783           Quantity Alloca
     C                     Z-ADD*ZERO     WN0784           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0786           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0786           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR NFSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0779           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0779    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0779           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0779    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0781    WL0078           ATS Weight Avai
     C                     Z-ADDWN0782    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0786    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0787           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0781           ATS Weight Avai
     C                     Z-ADDWL0079    WN0782           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0782    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0781    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0780           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0780    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0780           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0780    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0780                     *IF
     C                     ADD  WN0780    P1CCQT           Quantity Schedu
     C           WN0780    MULT P1AIWG    WN0781           ATS Weight Avai
     C                     ADD  WN0781    P1AUWG           Weight Schedule
     C                     Z-ADDWN0781    WN0784           Weight Allocate
     C                     Z-ADDWN0780    WN0783           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0780                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0784           Weight Allocate
     C                     Z-ADDP1HWQT    WN0783           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0783    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0783    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0785           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0785    MULT WN0787    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0784           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0784    WL0090           Weight Allocate
     C                     Z-ADDWN0783    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0779    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0784    WL0098           Weight Allocate
     C                     Z-ADDWN0785    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0779    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0785    WL0196           Pieces Schedule
     C                     Z-ADDWN0784    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0779    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0784    WL0203           Weight Allocate
     C                     Z-ADDWN0785    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0783           Quantity Alloca
     C                     Z-ADD*ZERO     WN0784           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0175  3        Warehouse Code
     C                     PARM P1AIC3    WQ0176  30       Company Number
     C                     PARM P1HGCD    WQ0177  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0178  70       Production Date
     C                     PARM P2ADCD    WQ0179  2        UOM Primary
     C                     PARM P1AIWG    WQ0180 112       Unit Weight
     C                     PARM P2CHTM    WQ0181  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0182  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0183  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0184  70       Bags Per Unit
     C                     PARM P3WPST    WQ0185  2        Warehouse Type
     C                     PARM P3T1ST    WQ0186  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0187  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0188  70       Order Number
     C                     PARM P1DPNB    WQ0189  30       Order Sequence
     C                     PARM P1UENB    WQ0190  30       Order Secondary
     C                     PARM P1GVDT    WQ0191  70       Production Date
     C                     PARM P1GWDT    WQ0192  70       Production Date
     C                     PARM P1AVQT    WQ0193 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0194 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0195 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0196 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0197 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0198 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0199  70       Ship Date USR
     C                     PARM P1QJST    WQ0200  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0201 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0202  3        Order From Ware
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Firm Order
     C           YL0007    IFEQ 'F'                        *IF
      * Alloc inventory now if allocating Inventory LAST     5/26/09
      * CASE: PAR.ATS Adj Type USR is Order Allocate-Inv Last
     C           P1ZLST    IFEQ 'OL'                       *IF
      * CASE: PAR.WHS Inventory Chill Time is greater than zero
     C           P3BVC3    IFGT *ZERO                      *IF
      * E2073 8/01/12
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0203  30       Company Number
     C                     PARM P3BVC3    WQ0204  52       Chilling Time U
     C                     PARM P1HLDT    WQ0205  70       Scheduled Ship
     C                     PARM YL0035    WQ0206  70       Requested Deliv
     C                     PARM P6RWNY    WQ0207  40       Item Age Days
     C                     PARM YL0036    WQ0208  70       Production Ovr
     C                     PARM YL0037    WQ0209  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0210  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0211  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0212  30       Company Number
     C                     PARM YL0001    WQ0213  52       Chilling Time U
     C                     PARM P1HLDT    WQ0214  70       Scheduled Ship
     C                     PARM YL0035    WQ0215  70       Requested Deliv
     C                     PARM P6RWNY    WQ0216  40       Item Age Days
     C                     PARM YL0036    WQ0217  70       Production Ovr
     C                     PARM YL0037    WQ0218  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0219  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0220  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
      *  FP1054 4/14/09 pass in job.*job date for TO date
      *
     C                     Z-ADD*ZERO     WN0791 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0792 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0793 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0794  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0008    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0011           Company Number
     C                     Z-ADDP1HGCD    WL0012           Item Code
     C                     MOVELP1AJCD    WL0013    P      Warehouse Code
     C                     Z-ADDYL0008    WL0014           Production Date
     C                     Z-ADDP1AIWG    WL0015           Unit Weight
     C                     MOVELP2PCCT    WL0016    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0017           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0018           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0019           Order Number
     C                     Z-ADDP1DPNB    WL0020           Order Sequence
     C                     Z-ADDP1UENB    WL0021           Order Secondary
     C                     Z-ADDP1AVQT    WL0022           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0023           Weight Ordered
     C                     Z-ADDP1CCQT    WL0024           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0025           Weight Schedule
     C                     Z-ADDP1HWQT    WL0026           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0027           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0028           Ship Date USR
     C                     Z-ADD##JDT     WL0029           To Date
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0025    P1AUWG           Weight Schedule
     C                     Z-ADDWL0026    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0027    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         NASUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         NBSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         NBEXIT    ENDSR
      /EJECT
     CSR         NCSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         NCEXIT    ENDSR
      /EJECT
     CSR         NDSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         NDEXIT    ENDSR
      /EJECT
     CSR         NESUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         NEEXIT    ENDSR
      /EJECT
     CSR         NFSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         NFEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Day/Wk/Prd/Yr     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WABCDT           Post to G_L Dat
      * Setup key
     C                     Z-ADDP1AIC3    WAAIC3           Company Number
     C                     Z-ADD##JDT     WABCDT           Post to G_L Dat
      * Establish starting position
     C           KRSSA     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUCQNB           Julian Date
     C                     Z-ADD*ZERO     P1ESNB           Accounting Year
     C                     Z-ADD*ZERO     P1ETNB           Accounting Peri
     C                     Z-ADD*ZERO     P1BZNB           OM Week
     C                     MOVEL*BLANK    WUA9ST           Day of Week
     C                     Z-ADD*ZERO     P1EINB           Week Number
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWACQNB    WUCQNB           Julian Date
     C                     Z-ADDWAESNB    P1ESNB           Accounting Year
     C                     Z-ADDWAETNB    P1ETNB           Accounting Peri
     C                     Z-ADDWABZNB    P1BZNB           OM Week
     C                     MOVELWAA9ST    WUA9ST           Day of Week
     C                     Z-ADDWAEINB    P1EINB           Week Number
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Bgn/End Dts Prd/Yr RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSB01           Company Number
     C           *LIKE     DEFN WBESNB    WQSB02           Accounting Year
     C           *LIKE     DEFN WBETNB    WQSB03           Accounting Peri
     C           *LIKE     DEFN WBEINB    WQSB04           Week Number
     C           *LIKE     DEFN WBA9ST    WQSB05           Day of Week
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           WQSB02           Accounting Year
     C                     KFLD           WQSB03           Accounting Peri
     C                     KFLD           WQSB04           Week Number
     C                     KFLD           WQSB05           Day of Week
      * Setup key
     C                     Z-ADDP1AIC3    WQSB01           Company Number
     C                     Z-ADDP1ESNB    WQSB02           Accounting Year
     C                     Z-ADDP1ETNB    WQSB03           Accounting Peri
     C                     Z-ADDP1EINB    WQSB04           Week Number
     C                     MOVEL'7'       WQSB05           Day of Week
      * Establish starting position
     C           KRSSB     SETLL@AFREQ0                    *
     C           KRSSB     READE@AFREQ0                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBBCDT    P1LIDT           Post to G_L Dat
     C           KRSSB     READE@AFREQ0                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Productin Whs     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0001    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSSC     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Production Ware
     C                     Z-ADD*ZERO     WL0003           Accounting Comp
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCAOCD    WL0002           Production Ware
     C                     Z-ADDWCBTC3    WL0003           Accounting Comp
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * E2885 RMC 12/4/13 new alloc method="S"tandard -- if shipping with
      *   3 days, force Alloc Method to F-ASAP, else use B-JIT
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSD02           Item Code
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
      * Setup key
     C                     Z-ADDWL0004    WQSD01           Company Number
     C                     Z-ADDWL0005    WQSD02           Item Code
      * Establish starting position
     C           KRSSD     SETLL@FDREAW                    *
     C           KRSSD     READE@FDREAW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4125' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0006           Allocation Meth
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv SchShpDte         RT - Order Header TRG  * 
     C                     EXSR SERVGN
      * CASE: DB1.Allocation Method is Standard or Blank
     C           WDENST    IFEQ *BLANK                     *IF
     C           WDENST    OREQ 'S'
      * Rtv PrdDay Dte -Durtn RT - Calendar  * 
     C                     EXSR SFRVGN
      * CASE: LCL.Scheduled Ship Date LE LCL.Date                  USR
     C           YL0004    IFLE YL0005                     *IF
     C                     MOVEL'F'       WL0006           Allocation Meth
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'B'       WL0006           Allocation Meth
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELWDENST    WL0006           Allocation Meth
     C                     END                             *FI
     C           KRSSD     READE@FDREAW                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv SchShpDte         RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEC4NB    WQSE01           Order Number
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Order Number
      * Setup key
     C                     Z-ADDWL0007    WQSE01           Order Number
      * Establish starting position
     C           KRSSE     SETLL@BFCPY2                    *
     C           KRSSE     READE@BFCPY2                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0004           Scheduled Ship
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWEAODT    YL0004           Scheduled Ship
     C           KRSSE     READE@BFCPY2                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv PrdDay Dte -Durtn RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WFAIC3    WQSF01           Company Number
      * Define keylist
     C           KPSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WFBCDT           Post to G_L Dat
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
      * Setup key
     C                     Z-ADDWDAIC3    WQSF01           Company Number
     C                     Z-ADD##JDT     WFBCDT           Post to G_L Dat
      * Establish starting position
     C           KPSSF     SETLL@AFREY1                    *
     C           KRSSF     READE@AFREY1                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ 3                          *IF
     C                     Z-ADDWFBCDT    YL0005           *DATE
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSSF     READE@AFREY1                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Price Type        RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WGAIC3           Company Number
     C                     KFLD           WGC4NB           Order Number
     C                     KFLD           WGDPNB           Order Sequence
     C                     KFLD           WGUENB           Order Secondary
      * Setup key
     C                     Z-ADDP1AIC3    WGAIC3           Company Number
     C                     Z-ADDP1C4NB    WGC4NB           Order Number
     C                     Z-ADDP1DPNB    WGDPNB           Order Sequence
     C                     Z-ADDP1UENB    WGUENB           Order Secondary
      * Establish starting position
     C           KRSSG     CHAIN@BGWKL1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1309' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0006           OD Price Type
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWGF7SX    YL0006           OD Price Type
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Block Order Flag  RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WHAIC3           Company Number
     C                     KFLD           WHC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0008    WHAIC3           Company Number
     C                     Z-ADDWL0009    WHC4NB           Order Number
      * Establish starting position
     C           KRSSH     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0010           Block Order Fla
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWHBCST    WL0010           Block Order Fla
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0005 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0006 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0007  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0008 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0009  92       Weight Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0008           Quantity Alloca
     C                     Z-ADD*ZERO     WN0009           Weight Allocate
      * Declare restrictor key work fields
     C           *LIKE     DEFN WIAIC3    WQSI01           Company Number
     C           *LIKE     DEFN WIHGCD    WQSI02           Item Code
     C           *LIKE     DEFN WIAJCD    WQSI03           Warehouse Code
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Item Code
     C                     KFLD           WQSI03           Warehouse Code
     C                     KFLD           WIELDT           Production Date
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Item Code
     C                     KFLD           WQSI03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0011    WQSI01           Company Number
     C                     Z-ADDWL0012    WQSI02           Item Code
     C                     MOVELWL0013    WQSI03           Warehouse Code
     C                     Z-ADDWL0014    WIELDT           Production Date
      * Establish starting position
     C           KPSSI     SETLL@CWCPQW                    *
     C           KRSSI     READE@CWCPQW                  90*
      * Data record not found
     C   90                MOVEL'USR3238' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * FP1054 this used to quit when the job date was reached.
      *   now it quits when par.to date is reached. for the freezer it wi
      *   be the freeze time number of days before the sched ship.
      *   For Fresh, it will be the job date
      * RMC 10.2.19 change GE to GT
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.Production Date GT PAR.To Date               USR
      *   |- c2    : PAR.ATS Quantity Need USR is Less than or equal zero
      *   '-
     C           WIELDT    IFGT WL0029                     *IF
     C           WL0026    ORLE 0                          *OR
     C                     GOTO SIEXIT                     *QUIT
     C                     END                             *FI
      * Rtv Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
     C                     EXSR SJRVGN
     C           WIARQT    SUB  YL0012    WN0005           ATS Quantity Av
     C           WIACWG    SUB  YL0013    WN0006           ATS Weight Avai
      * Allocate Available Inventory
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0005    IFGT 0                          *IF
      * Allocate
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           WL0026    IFGT WN0005                     *IF
     C                     ADD  WN0005    WL0024           Quantity Schedu
     C           WN0005    MULT WL0015    WN0006           ATS Weight Avai
     C                     ADD  WN0006    WL0025           Weight Schedule
     C                     Z-ADDWN0005    WN0008           Quantity Alloca
     C                     Z-ADDWN0006    WN0009           Weight Allocate
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           WL0026    IFLE WN0005                     *IF
     C                     ADD  WL0026    WL0024           Quantity Schedu
     C                     ADD  WL0027    WL0025           Weight Schedule
     C                     Z-ADDWL0026    WN0008           Quantity Alloca
     C           WN0008    MULT WL0015    WN0009           Weight Allocate
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     WL0024           Quantity Schedu
     C                     ADD  *ZERO     WL0025           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * Upd Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
     C                     EXSR SKRVGN
      * Upd Qty/Wgt Inv Alc   RT - Order Detail Schedule  * 
     C                     EXSR SORVGN
      * Upd Inv Allocated     RT - PS Prod Item Schedule  * 
     C                     EXSR SSRVGN
     C                     END                             *FI
     C           WL0022    SUB  WL0024    WL0026           ATS Quantity Ne
     C           WL0023    SUB  WL0025    WL0027           ATS Weight Need
     C           KRSSI     READE@CWCPQW                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0012           OD Quantity Inv
     C                     Z-ADD*ZERO     YL0013           OD Weight Inv S
      * Declare restrictor key work fields
     C           *LIKE     DEFN WJAIC3    WQSJ01           Company Number
     C           *LIKE     DEFN WJHGCD    WQSJ02           Item Code
     C           *LIKE     DEFN WJAJCD    WQSJ03           Warehouse Code
     C           *LIKE     DEFN WJJGDT    WQSJ04           OD Production D
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WQSJ02           Item Code
     C                     KFLD           WQSJ03           Warehouse Code
     C                     KFLD           WQSJ04           OD Production D
      * Setup key
     C                     Z-ADDWIAIC3    WQSJ01           Company Number
     C                     Z-ADDWIHGCD    WQSJ02           Item Code
     C                     MOVELWIAJCD    WQSJ03           Warehouse Code
     C                     Z-ADDWIELDT    WQSJ04           OD Production D
      * Establish starting position
     C           KRSSJ     SETLL@B5CPM4                    *
     C           KRSSJ     READE@B5CPM4                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WJIUQT    YL0012           OD Quantity Inv
     C                     ADD  WJF3WG    YL0013           OD Weight Inv S
     C           KRSSJ     READE@B5CPM4                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Upd Ord Dtl Sch-Inv   RT - Order Detail Sched-Inv  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0010  1        EDI Status 1
     C                     MOVEL*BLANK    WN0011  1        EDI Status 2
     C                     MOVEL*BLANK    WN0012  1        EDI Status 3
     C                     MOVEL*BLANK    WN0013  1        Record Status
     C                     Z-ADD*ZERO     WN0014  60       Job Time
     C                     MOVEL*BLANK    WN0015 10        User Id
     C                     MOVEL*BLANK    WN0016 10        Job Name
     C                     Z-ADD*ZERO     WN0017  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WKAIC3           Company Number
     C                     KFLD           WKC4NB           Order Number
     C                     KFLD           WKDPNB           Order Sequence
     C                     KFLD           WKUENB           Order Secondary
     C                     KFLD           WKJGDT           OD Production D
      * Setup key
     C                     Z-ADDWIAIC3    WKAIC3           Company Number
     C                     Z-ADDWL0019    WKC4NB           Order Number
     C                     Z-ADDWL0020    WKDPNB           Order Sequence
     C                     Z-ADDWL0021    WKUENB           Order Secondary
     C                     Z-ADDWIELDT    WKJGDT           OD Production D
      * Establish starting position
     C           KRSSK     CHAIN@B5CPM2              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3150' W0RTN   7
      * USER: Processing if Data record not found
      * Crt Ord Dtl Sch-Inv   CR - Order Detail Sched-Inv  * 
     C                     EXSR SLCRRC
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WKIUQT    ADD  WN0008    YL0014           OD Quantity Inv
     C           WKF3WG    ADD  WN0009    YL0015           OD Weight Inv S
      * CASE: LCL.OD Quantity Inv Sched is LE Zero
     C           YL0014    IFLE 0                          *IF
      * Delete Order Detail Sched - Order Detail Sched-Inv  * 
     C                     EXSR SMDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Ord Dtl Sch-Inv   CH - Order Detail Sched-Inv  * 
     C                     EXSR SNCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLCRRC    BEGSR
      *================================================================
      * Crt Ord Dtl Sch-Inv   CR - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B5CPM1
     C                     Z-ADDWIAIC3    WLAIC3           Company Number
     C                     Z-ADDWL0019    WLC4NB           Order Number
     C                     Z-ADDWL0020    WLDPNB           Order Sequence
     C                     Z-ADDWL0021    WLUENB           Order Secondary
     C                     Z-ADDWIELDT    WLJGDT           OD Production D
     C                     Z-ADDWL0028    WLAODT           Scheduled Ship
     C                     MOVELWIAJCD    WLAJCD           Warehouse Code
     C                     Z-ADDWIHGCD    WLHGCD           Item Code
     C                     Z-ADDWN0008    WLIUQT           OD Quantity Inv
     C                     Z-ADDWN0009    WLF3WG           OD Weight Inv S
     C                     MOVELWN0010    WLUVST           EDI Status 1
     C                     MOVELWN0011    WLUWST           EDI Status 2
     C                     MOVELWN0012    WLUXST           EDI Status 3
     C                     MOVELWN0013    WLVSST           Record Status
     C                     Z-ADDWN0014    WLAATM           Job Time
     C                     MOVELWN0015    WLAYNA           User Id
     C                     MOVELWN0016    WLA0NA           Job Name
     C                     Z-ADDWN0017    WLAXDT           Job Date
      *
      * USER: Processing before Data update
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WLVSST           Record Status
     C                     Z-ADD##JTM     WLAATM           Job Time
     C                     MOVEL##USR     WLAYNA           User Id
     C                     MOVEL##PGM     WLA0NA           Job Name
     C                     Z-ADD##JDT     WLAXDT           Job Date
     C           KLCRSL    KLIST
     C                     KFLD           WLAIC3           Company Number
     C                     KFLD           WLC4NB           Order Number
     C                     KFLD           WLDPNB           Order Sequence
     C                     KFLD           WLUENB           Order Secondary
     C                     KFLD           WLJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRSL    SETLL@B5CPM1                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3151' W0RTN   7
      * Send message 'Order Detail Sched_Inv EX'
     C                     MOVEL'USR3151' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C                     WRITE@B5CPM1                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMDLRC    BEGSR
      *================================================================
      * Delete Order Detail Sched - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B5CPM1
     C                     Z-ADDWKAIC3    WLAIC3           Company Number
     C                     Z-ADDWKC4NB    WLC4NB           Order Number
     C                     Z-ADDWKDPNB    WLDPNB           Order Sequence
     C                     Z-ADDWKUENB    WLUENB           Order Secondary
     C                     Z-ADDWKJGDT    WLJGDT           OD Production D
      *
     C           KLDLSM    KLIST
     C                     KFLD           WLAIC3           Company Number
     C                     KFLD           WLC4NB           Order Number
     C                     KFLD           WLDPNB           Order Sequence
     C                     KFLD           WLUENB           Order Secondary
     C                     KFLD           WLJGDT           OD Production D
     C           KLDLSM    CHAIN@B5CPM1              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB5CPL0'MDACP
     C                     MOVEL'@B5CPM1' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SMEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B5CPM1                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNCHRC    BEGSR
      *================================================================
      * Chg Ord Dtl Sch-Inv   CH - Order Detail Sched-Inv  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0018  1        EDI Status 1
     C                     MOVEL*BLANK    WN0019  1        EDI Status 2
     C                     MOVEL*BLANK    WN0020  1        EDI Status 3
     C                     MOVEL*BLANK    WN0021  1        Record Status
     C                     Z-ADD*ZERO     WN0022  60       Job Time
     C                     MOVEL*BLANK    WN0023 10        User Id
     C                     MOVEL*BLANK    WN0024 10        Job Name
     C                     Z-ADD*ZERO     WN0025  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @B5CPM1
     C                     Z-ADDWKAIC3    WLAIC3           Company Number
     C                     Z-ADDWKC4NB    WLC4NB           Order Number
     C                     Z-ADDWKDPNB    WLDPNB           Order Sequence
     C                     Z-ADDWKUENB    WLUENB           Order Secondary
     C                     Z-ADDWKJGDT    WLJGDT           OD Production D
      *
     C           KLCHSN    KLIST
     C                     KFLD           WLAIC3           Company Number
     C                     KFLD           WLC4NB           Order Number
     C                     KFLD           WLDPNB           Order Sequence
     C                     KFLD           WLUENB           Order Secondary
     C                     KFLD           WLJGDT           OD Production D
     C           KLCHSN    CHAIN@B5CPM1              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB5CPL0'MDACP
     C                     MOVEL'@B5CPM1' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SNEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB51    YARDCS
      * Move non-key fields to @B5CPM1
     C                     Z-ADDWKAODT    WLAODT           Scheduled Ship
     C                     MOVELWIAJCD    WLAJCD    P      Warehouse Code
     C                     Z-ADDWIHGCD    WLHGCD           Item Code
     C                     Z-ADDYL0014    WLIUQT           OD Quantity Inv
     C                     Z-ADDYL0015    WLF3WG           OD Weight Inv S
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB51    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WLAATM           Job Time
     C                     MOVEL##USR     WLAYNA           User Id
     C                     MOVEL##JOB     WLA0NA           Job Name
     C                     Z-ADD##JDT     WLAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB51    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@B5CPM1                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB5CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Upd Qty/Wgt Inv Alc   RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0026 112       OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     WN0027 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0028 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0029 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0030 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0031 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0032  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0033  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0034  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0035  1        EDI Status 1
     C                     MOVEL*BLANK    WN0036  1        EDI Status 2
     C                     MOVEL*BLANK    WN0037  1        EDI Status 3
     C                     MOVEL*BLANK    WN0038  1        Record Status
     C                     Z-ADD*ZERO     WN0039  60       Job Time
     C                     MOVEL*BLANK    WN0040 10        User Id
     C                     MOVEL*BLANK    WN0041 10        Job Name
     C                     Z-ADD*ZERO     WN0042  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WMAIC3           Company Number
     C                     KFLD           WMC4NB           Order Number
     C                     KFLD           WMDPNB           Order Sequence
     C                     KFLD           WMUENB           Order Secondary
     C                     KFLD           WMJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0011    WMAIC3           Company Number
     C                     Z-ADDWL0019    WMC4NB           Order Number
     C                     Z-ADDWL0020    WMDPNB           Order Sequence
     C                     Z-ADDWL0021    WMUENB           Order Secondary
     C                     Z-ADD##JDT     WMJGDT           OD Production D
      * Establish starting position
     C           KRSSO     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0011    WL0030           Company Number
     C                     Z-ADDWL0019    WL0031           Order Number
     C                     Z-ADDWL0020    WL0032           Order Sequence
     C                     Z-ADDWL0021    WL0033           Order Secondary
     C                     Z-ADD##JDT     WL0034           OD Production D
     C                     Z-ADDWL0028    WL0035           Scheduled Ship
     C                     MOVELWL0013    WL0036    P      Warehouse Code
     C                     MOVELWL0013    WL0037    P      Order From Ware
     C                     Z-ADDWL0012    WL0038           Item Code
     C                     Z-ADDWN0026    WL0039           OD Qty_Cnsmd Pi
     C                     Z-ADDWN0027    WL0040           OD Weight Sched
     C                     Z-ADDWN0008    WL0041           OD Quantity Inv
     C                     Z-ADDWN0009    WL0042           OD Weight Inv S
     C                     Z-ADDWN0030    WL0043           OD Quantity Unu
     C                     Z-ADDWN0031    WL0044           OD Unused weigh
     C                     MOVELWN0032    WL0045    P      OD Added to Sch
     C                     MOVELWN0033    WL0046    P      OD Reallocate S
     C                     MOVELWN0034    WL0047    P      OD Status Unuse
     C                     MOVELWN0035    WL0048    P      EDI Status 1
     C                     MOVELWN0036    WL0049    P      EDI Status 2
     C                     MOVELWN0037    WL0050    P      EDI Status 3
     C                     MOVELWN0038    WL0051    P      Record Status
     C                     Z-ADDWN0039    WL0052           Job Time
     C                     MOVELWN0040    WL0053    P      User Id
     C                     MOVELWN0041    WL0054    P      Job Name
     C                     Z-ADDWN0042    WL0055           Job Date
     C                     EXSR SPCRRC
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WMIUQT    ADD  WN0008    WN0028           OD Quantity Inv
     C           WMF3WG    ADD  WN0009    WN0029           OD Weight Inv S
      * CASE: PAR.OD Quantity Inv Sched is LE Zero
     C           WN0028    IFLE 0                          *IF
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWMAIC3    WL0056           Company Number
     C                     Z-ADDWMC4NB    WL0057           Order Number
     C                     Z-ADDWMDPNB    WL0058           Order Sequence
     C                     Z-ADDWMUENB    WL0059           Order Secondary
     C                     Z-ADDWMJGDT    WL0060           OD Production D
     C                     EXSR SQDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Qty/Wgt Inv Alc - Order Detail Schedule  * 
     C                     EXSR SRCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPCRRC    BEGSR
      *================================================================
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @KNCPHN
     C                     Z-ADDWL0030    WOAIC3           Company Number
     C                     Z-ADDWL0031    WOC4NB           Order Number
     C                     Z-ADDWL0032    WODPNB           Order Sequence
     C                     Z-ADDWL0033    WOUENB           Order Secondary
     C                     Z-ADDWL0034    WOJGDT           OD Production D
     C                     Z-ADDWL0035    WOAODT           Scheduled Ship
     C                     MOVELWL0036    WOAJCD           Warehouse Code
     C                     MOVELWL0037    WOAYAA           Order From Ware
     C                     Z-ADDWL0038    WOHGCD           Item Code
     C                     Z-ADDWL0039    WOIGQT           OD Qty_Cnsmd Pi
     C                     Z-ADDWL0040    WOFLWG           OD Weight Sched
     C                     Z-ADDWL0041    WOIUQT           OD Quantity Inv
     C                     Z-ADDWL0042    WOF3WG           OD Weight Inv S
     C                     Z-ADDWL0043    WOIVQT           OD Quantity Unu
     C                     Z-ADDWL0044    WOF4WG           OD Unused weigh
     C                     MOVELWL0045    WOP7ST           OD Added to Sch
     C                     MOVELWL0046    WOP8ST           OD Reallocate S
     C                     MOVELWL0047    WOQAST           OD Status Unuse
     C                     MOVELWL0048    WOUVST           EDI Status 1
     C                     MOVELWL0049    WOUWST           EDI Status 2
     C                     MOVELWL0050    WOUXST           EDI Status 3
     C                     MOVELWL0051    WOVSST           Record Status
     C                     Z-ADDWL0052    WOAATM           Job Time
     C                     MOVELWL0053    WOAYNA           User Id
     C                     MOVELWL0054    WOA0NA           Job Name
     C                     Z-ADDWL0055    WOAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       WOVSST           Record Status
     C                     Z-ADD##JTM     WOAATM           Job Time
     C                     MOVEL##USR     WOAYNA           User Id
     C                     MOVEL##PGM     WOA0NA           Job Name
     C                     Z-ADD##JDT     WOAXDT           Job Date
     C           KLCRSP    KLIST
     C                     KFLD           WOAIC3           Company Number
     C                     KFLD           WOC4NB           Order Number
     C                     KFLD           WODPNB           Order Sequence
     C                     KFLD           WOUENB           Order Secondary
     C                     KFLD           WOJGDT           OD Production D
      * Check for duplicate primary key
     C           KLCRSP    SETLL@KNCPHN                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR2239' W0RTN   7
      * Send message 'Order Detail Schedule  EX'
     C                     MOVEL'USR2239' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C                     WRITE@KNCPHN                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQDLRC    BEGSR
      *================================================================
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0056    WOAIC3           Company Number
     C                     Z-ADDWL0057    WOC4NB           Order Number
     C                     Z-ADDWL0058    WODPNB           Order Sequence
     C                     Z-ADDWL0059    WOUENB           Order Secondary
     C                     Z-ADDWL0060    WOJGDT           OD Production D
      *
     C           KLDLSQ    KLIST
     C                     KFLD           WOAIC3           Company Number
     C                     KFLD           WOC4NB           Order Number
     C                     KFLD           WODPNB           Order Sequence
     C                     KFLD           WOUENB           Order Secondary
     C                     KFLD           WOJGDT           OD Production D
     C           KLDLSQ    CHAIN@KNCPHN              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL003.
     C                     MOVEL'LBL003'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SQEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@KNCPHN                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRCHRC    BEGSR
      *================================================================
      * Chg Qty/Wgt Inv Alc - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0043  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0044  3        Warehouse Code
     C                     MOVEL*BLANK    WN0045  3        Order From Ware
     C                     Z-ADD*ZERO     WN0046  70       Item Code
     C                     Z-ADD*ZERO     WN0047 112       OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     WN0048 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0049 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0050 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0051  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0052  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0053  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0054  1        EDI Status 1
     C                     MOVEL*BLANK    WN0055  1        EDI Status 2
     C                     MOVEL*BLANK    WN0056  1        EDI Status 3
     C                     MOVEL*BLANK    WN0057  1        Record Status
     C                     Z-ADD*ZERO     WN0058  60       Job Time
     C                     MOVEL*BLANK    WN0059 10        User Id
     C                     MOVEL*BLANK    WN0060 10        Job Name
     C                     Z-ADD*ZERO     WN0061  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWL0011    WOAIC3           Company Number
     C                     Z-ADDWL0019    WOC4NB           Order Number
     C                     Z-ADDWL0020    WODPNB           Order Sequence
     C                     Z-ADDWL0021    WOUENB           Order Secondary
     C                     Z-ADD##JDT     WOJGDT           OD Production D
      *
     C           KLCHSR    KLIST
     C                     KFLD           WOAIC3           Company Number
     C                     KFLD           WOC4NB           Order Number
     C                     KFLD           WODPNB           Order Sequence
     C                     KFLD           WOUENB           Order Secondary
     C                     KFLD           WOJGDT           OD Production D
     C           KLCHSR    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL004.
     C                     MOVEL'LBL004'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SREXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YBRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWN0028    WOIUQT           OD Quantity Inv
     C                     Z-ADDWN0029    WOF3WG           OD Weight Inv S
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WOAATM           Job Time
     C                     MOVEL##USR     WOAYNA           User Id
     C                     MOVEL##PGM     WOA0NA           Job Name
     C                     Z-ADD##JDT     WOAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Upd Inv Allocated     RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0062  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0063  70       PS Pieces Inv A
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WRAIC3           Company Number
     C                     KFLD           WRV5ST           Production Type
     C                     KFLD           WRELDT           Production Date
     C                     KFLD           WRHGCD           Item Code
     C                     KFLD           WRAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0011    WRAIC3           Company Number
     C                     MOVEL'S'       WRV5ST           Production Type
     C                     Z-ADD##JDT     WRELDT           Production Date
     C                     Z-ADDWL0012    WRHGCD           Item Code
     C                     MOVELWL0013    WRAJCD           Warehouse Code
      * Establish starting position
     C           KRSSS     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WRUNW2    ADD  WN0009    WN0062           PS Weight Inv A
      * PS Pieces Inv Allocated
      * CASE: PAR.Piece Count Item is yes
     C           WL0016    IFEQ 'Y'                        *IF
      * Pieces Inv Allocated
      * PAR.PS Pieces Inv Allocated =
      *    *COMPUTE (x1 + (x2 * (x3 * x4)))
      * x1    : DB1.PS Pieces Inv Allocated
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Bags Per Unit
     C           WL0017    MULT WL0018    W0WJ02           *Synon (15,0) w
     C           WN0008    MULT W0WJ02    W0WJ01    H      *Synon (15,0) w
     C           WRCENB    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0063           PS Pieces Inv A
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0063           PS Pieces Inv A
     C                     END                             *FI
      * Chg Inv Allocated     CH - PS Prod Item Schedule  * 
     C                     EXSR STCHRC
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STCHRC    BEGSR
      *================================================================
      * Chg Inv Allocated     CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0064  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0065  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0066  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0067  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0068  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0069  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0070  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0071  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0072  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0073  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0074  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0075  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0076  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0077  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0078  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0079  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0080  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0081  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0082  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0083  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0084  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0085 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0086  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0087 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0088  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0089 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0090  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0091 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0092  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0093 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0094  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0095 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0096  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0097  3        PS Item Id
     C                     MOVEL*BLANK    WN0098  2        Warehouse Type
     C                     MOVEL*BLANK    WN0099  1        PS Lock Status
     C                     MOVEL*BLANK    WN0100  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0101  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0102  1        PS Piece Count
     C                     MOVEL*BLANK    WN0103  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0104  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0105  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0106  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0107  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0108  3        PS Production W
     C                     Z-ADD*ZERO     WN0109  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0110  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0111  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0112  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0113  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0114  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0115  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0116  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0117  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0118  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0119  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0120  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0121  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0122  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0123  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0124  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0125  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0126  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0127  6        Department Code
     C                     Z-ADD*ZERO     WN0128  30       Item Structure
     C                     Z-ADD*ZERO     WN0129  30       Item Structure
     C                     Z-ADD*ZERO     WN0130  30       Item Structure
     C                     MOVEL*BLANK    WN0131  6        Primal Group Co
     C                     MOVEL*BLANK    WN0132  1        EDI Status 1
     C                     MOVEL*BLANK    WN0133  1        EDI Status 2
     C                     MOVEL*BLANK    WN0134  1        EDI Status 3
     C                     MOVEL*BLANK    WN0135  1        Record Status
     C                     Z-ADD*ZERO     WN0136  60       Job Time
     C                     MOVEL*BLANK    WN0137 10        User Id
     C                     MOVEL*BLANK    WN0138 10        Job Name
     C                     Z-ADD*ZERO     WN0139  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YCRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWRAIC3    WSAIC3           Company Number
     C                     MOVELWRV5ST    WSV5ST    P      Production Type
     C                     Z-ADDWRELDT    WSELDT           Production Date
     C                     Z-ADDWRHGCD    WSHGCD           Item Code
     C                     MOVELWRAJCD    WSAJCD    P      Warehouse Code
      *
     C           KLCHST    KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
     C           KLCHST    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL005.
     C                     MOVEL'LBL005'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO STEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YCRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0062    WSUNW2           PS Weight Inv A
     C                     Z-ADDWN0063    WSCENB           PS Pieces Inv A
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WSAATM           Job Time
     C                     MOVEL##USR     WSAYNA           User Id
     C                     MOVEL##PGM     WSA0NA           Job Name
     C                     Z-ADD##JDT     WSAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv Prd Day Sts       RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WABCDT           Post to G_L Dat
      * Setup key
     C                     Z-ADDWL0061    WAAIC3           Company Number
     C                     Z-ADDWL0062    WABCDT           Post to G_L Dat
      * Establish starting position
     C           KRSSU     CHAIN@AFREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0063           Production Day
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAWAST    WL0063           Production Day
     C                     ENDIF
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSV01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSV02           Item Code
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           WQSV01           Company Number
     C                     KFLD           WQSV02           Item Code
      * Setup key
     C                     Z-ADDWL0064    WQSV01           Company Number
     C                     Z-ADDWL0065    WQSV02           Item Code
      * Establish starting position
     C           KRSSV     SETLL@FDREAW                    *
     C           KRSSV     READE@FDREAW                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR4125' W0RTN   7
      * USER: Processing if Data record not found
      * default to "Y"es if rcd not found. user isnt overriding it to No
     C                     MOVEL*BLANK    WL0067           Production Day
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Day and Week No.   RT - Calendar  * 
     C                     EXSR SWRVGN
      * CASE: LCL.Day of Week is Sunday
     C           YL0025    IFEQ '1'                        *IF
     C                     MOVELWDD0ST    WL0067           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Monday
     C           YL0025    IFEQ '2'                        *IF
     C                     MOVELWDD2ST    WL0067           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Tuesday
     C           YL0025    IFEQ '3'                        *IF
     C                     MOVELWDD6ST    WL0067           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Wednesday
     C           YL0025    IFEQ '4'                        *IF
     C                     MOVELWDWESP    WL0067           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Thursday
     C           YL0025    IFEQ '5'                        *IF
     C                     MOVELWDEDST    WL0067           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Friday
     C           YL0025    IFEQ '6'                        *IF
     C                     MOVELWDEFST    WL0067           Production Day
     C                     ELSE
      * CASE: LCL.Day of Week is Saturday
     C           YL0025    IFEQ '7'                        *IF
     C                     MOVELWDEHST    WL0067           Production Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSV     READE@FDREAW                  90*
     C                     ENDDO
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * RTV Day and Week No.   RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WTAIC3    WQSW01           Company Number
     C           *LIKE     DEFN WTBCDT    WQSW02           Post to G_L Dat
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           WQSW01           Company Number
     C                     KFLD           WQSW02           Post to G_L Dat
      * Setup key
     C                     Z-ADDWL0064    WQSW01           Company Number
     C                     Z-ADDWL0066    WQSW02           Post to G_L Dat
      * Establish starting position
     C           KRSSW     SETLL@AFREYY                    *
     C           KRSSW     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELWTA9ST    YL0025           Day of Week
     C           KRSSW     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * Val Sched Existance   RT - PS Prod Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           WVAIC3           Company Number
     C                     KFLD           WVV5ST           Production Type
     C                     KFLD           WVELDT           Production Date
      * Setup key
     C                     Z-ADDWL0068    WVAIC3           Company Number
     C                     MOVELWL0069    WVV5ST           Production Type
     C                     Z-ADDWL0070    WVELDT           Production Date
      * Establish starting position
     C           KRSSX     CHAIN@JCCPVC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1795' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0071           Record Found US
     C                     GOTO SXEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0071           Record Found US
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0152  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0153  70       PS Pieces Ship
     C                     MOVEL*BLANK    WN0154  1        Piece Count Ite
     C                     Z-ADD*ZERO     WN0155  70       Pieces Per Bag
     C                     Z-ADD*ZERO     WN0156  70       Bags Per Unit
     C                     Z-ADD*ZERO     WN0157  92       Weight Producti
     C                     Z-ADD*ZERO     WN0158  70       Pieces Producti
     C                     Z-ADD*ZERO     WN0159 112       OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     WN0160 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0161  70       Pieces Allocate
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0077           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0152           PS Weight Ship
     C                     Z-ADD*ZERO     WN0153           PS Pieces Ship
     C                     Z-ADD*ZERO     WL0078           ATS Weight Avai
     C                     Z-ADD*ZERO     WL0079           ATS Pieces Avai
     C                     MOVEL*BLANK    WN0154           Piece Count Ite
     C                     Z-ADD*ZERO     WN0155           Pieces Per Bag
     C                     Z-ADD*ZERO     WN0156           Bags Per Unit
     C                     Z-ADD*ZERO     WN0157           Weight Producti
     C                     Z-ADD*ZERO     WN0158           Pieces Producti
     C                     Z-ADD*ZERO     WN0159           OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     WN0160           OD Weight Sched
     C                     Z-ADD*ZERO     WN0161           Pieces Allocate
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WRAIC3           Company Number
     C                     KFLD           WRV5ST           Production Type
     C                     KFLD           WRELDT           Production Date
     C                     KFLD           WRHGCD           Item Code
     C                     KFLD           WRAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0072    WRAIC3           Company Number
     C                     MOVELWL0073    WRV5ST           Production Type
     C                     Z-ADDWL0074    WRELDT           Production Date
     C                     Z-ADDWL0075    WRHGCD           Item Code
     C                     MOVELWL0076    WRAJCD           Warehouse Code
      * Establish starting position
     C           KRSSY     CHAIN@I8CPUS              90    *
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * so calc is: Production = Planned Prod + Standard + Prod Adj - Con
      *  instead of:
      * Production = Standard + Prod Adj - Converted
      * Prod Avail = Production + Ship Cut Adj + Ship Adj - Prod Alloc
      * CASE: DB1.PS Lock Status is NOT LOCKED
     C           WRB5ST    IFEQ 'N'                        *IF
      * Ship Cut Adjust
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Chilling Time USR is GT Zero
      *   |- c2    : DB1.Production Date EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0080    IFGT 0                          *IF
     C           WRELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
     C                     EXSR SZRVGN
     C                     END                             *FI
      * FP1054 06/02/06 add planned prod wt and pieces to Weight Prod & P
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Weight Planned Prod
      * +     : PGM.*Synon (15,2) work field
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whs Tfr Adj
     C           WRWTSP    ADD  WRDXWG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WRD1WG    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRWTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WRGAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0157           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x5+ x1 + x2 - x3 - x4)
      * x5    : DB1.PS Pieces Planned Prod
      * +     : PGM.*Synon (15,0) work field
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whs Tfr Adj
     C           WRQTSP    ADD  WRB2NB    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  WRCBNB    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WRPSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WRBPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0158           Pieces Producti
      * Weight Available
      * PAR.ATS Weight Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Weight Production USR
      * +     : PGM.*Synon (15,2) work field
      * x2    : PAR.PS Weight Ship Cut Adj
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Shipping Adj
      * -     : PGM.*Synon (15,2) work field
      * x4    : DB1.PS Weight Prod Allocated
     C           WN0157    ADD  WN0152    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WRSAWT    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  WROAWT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WL0078           ATS Weight Avai
      * Pieces Available
      * PAR.ATS Pieces Available USR =
      *    *COMPUTE (x1 + x2 + x3 - x4)
      * x1    : PAR.Pieces Production USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : PAR.PS Pieces Ship Cut Adj
      * +     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Shipping Adj
      * -     : PGM.*Synon (15,0) work field
      * x4    : DB1.PS Pieces Prod Allocated
     C           WN0158    ADD  WN0153    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  WRB9NB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  WRCDNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WL0079           ATS Pieces Avai
      * Weight Avail E1971 RMC   2/27/12 change to leave pieces if > 0
      * CASE: PAR.ATS Weight Available USR is Less than zero
     C           WL0078    IFLT 0                          *IF
      * CASE: PAR.ATS Pieces Available USR is LE Zero
     C           WL0079    IFLE 0                          *IF
     C                     Z-ADD*ZERO     WL0078           ATS Weight Avai
     C                     Z-ADD*ZERO     WL0079           ATS Pieces Avai
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWRF8WG    WL0077           PS Avg Piece Wg
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZRVGN    BEGSR
      *================================================================
      * Rtv Ship Cut Adjust   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WWAIC3    WQSZ01           Company Number
     C           *LIKE     DEFN WWHGCD    WQSZ02           Item Code
     C           *LIKE     DEFN WWAJCD    WQSZ03           Warehouse Code
     C           *LIKE     DEFN WWELDT    WQSZ04           Production Date
     C           *LIKE     DEFN WWV5ST    WQSZ05           Production Type
      * Define keylist
     C           KRSSZ     KLIST
     C                     KFLD           WQSZ01           Company Number
     C                     KFLD           WQSZ02           Item Code
     C                     KFLD           WQSZ03           Warehouse Code
     C                     KFLD           WQSZ04           Production Date
     C                     KFLD           WQSZ05           Production Type
      * Setup key
     C                     Z-ADDWRAIC3    WQSZ01           Company Number
     C                     Z-ADDWRHGCD    WQSZ02           Item Code
     C                     MOVELWRAJCD    WQSZ03           Warehouse Code
     C                     Z-ADDWRGPDT    WQSZ04           Production Date
     C                     MOVEL'P'       WQSZ05           Production Type
      * Establish starting position
     C           KRSSZ     SETLL@I8CPXP                    *
     C           KRSSZ     READE@I8CPXP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0152           PS Weight Ship
     C                     Z-ADD*ZERO     WN0153           PS Pieces Ship
     C                     GOTO SZEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWWE0WG    WN0152           PS Weight Ship
     C                     Z-ADDWWD6NB    WN0153           PS Pieces Ship
     C           KRSSZ     READE@I8CPXP                  90*
     C                     ENDDO
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         TARVGN    BEGSR
      *================================================================
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0162 112       OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     WN0163 112       OD Weight Sched
     C                     Z-ADD*ZERO     WN0164 112       OD Quantity Inv
     C                     Z-ADD*ZERO     WN0165 112       OD Weight Inv S
     C                     Z-ADD*ZERO     WN0166 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0167 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0168  1        OD Added to Sch
     C                     MOVEL*BLANK    WN0169  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0170  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0171  1        EDI Status 1
     C                     MOVEL*BLANK    WN0172  1        EDI Status 2
     C                     MOVEL*BLANK    WN0173  1        EDI Status 3
     C                     MOVEL*BLANK    WN0174  1        Record Status
     C                     Z-ADD*ZERO     WN0175  60       Job Time
     C                     MOVEL*BLANK    WN0176 10        User Id
     C                     MOVEL*BLANK    WN0177 10        Job Name
     C                     Z-ADD*ZERO     WN0178  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTA     KLIST
     C                     KFLD           WMAIC3           Company Number
     C                     KFLD           WMC4NB           Order Number
     C                     KFLD           WMDPNB           Order Sequence
     C                     KFLD           WMUENB           Order Secondary
     C                     KFLD           WMJGDT           OD Production D
      * Setup key
     C                     Z-ADDWL0081    WMAIC3           Company Number
     C                     Z-ADDWL0082    WMC4NB           Order Number
     C                     Z-ADDWL0083    WMDPNB           Order Sequence
     C                     Z-ADDWL0084    WMUENB           Order Secondary
     C                     Z-ADDWL0085    WMJGDT           OD Production D
      * Establish starting position
     C           KRSTA     CHAIN@KNCPHO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2238' W0RTN   7
      * USER: Processing if Data record not found
      * CRT Ord Detail Sched   CR - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0081    WL0030           Company Number
     C                     Z-ADDWL0082    WL0031           Order Number
     C                     Z-ADDWL0083    WL0032           Order Sequence
     C                     Z-ADDWL0084    WL0033           Order Secondary
     C                     Z-ADDWL0085    WL0034           OD Production D
     C                     Z-ADDWL0086    WL0035           Scheduled Ship
     C                     MOVELWL0087    WL0036    P      Warehouse Code
     C                     MOVELWL0088    WL0037    P      Order From Ware
     C                     Z-ADDWL0089    WL0038           Item Code
     C                     Z-ADDWL0091    WL0039           OD Qty_Cnsmd Pi
     C                     Z-ADDWL0090    WL0040           OD Weight Sched
     C                     Z-ADDWN0164    WL0041           OD Quantity Inv
     C                     Z-ADDWN0165    WL0042           OD Weight Inv S
     C                     Z-ADDWN0166    WL0043           OD Quantity Unu
     C                     Z-ADDWN0167    WL0044           OD Unused weigh
     C                     MOVELWN0168    WL0045    P      OD Added to Sch
     C                     MOVELWN0169    WL0046    P      OD Reallocate S
     C                     MOVELWN0170    WL0047    P      OD Status Unuse
     C                     MOVELWN0171    WL0048    P      EDI Status 1
     C                     MOVELWN0172    WL0049    P      EDI Status 2
     C                     MOVELWN0173    WL0050    P      EDI Status 3
     C                     MOVELWN0174    WL0051    P      Record Status
     C                     Z-ADDWN0175    WL0052           Job Time
     C                     MOVELWN0176    WL0053    P      User Id
     C                     MOVELWN0177    WL0054    P      Job Name
     C                     Z-ADDWN0178    WL0055           Job Date
     C                     EXSR SPCRRC
     C                     GOTO TAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WMIGQT    ADD  WL0091    WN0162           OD Qty_Cnsmd Pi
     C           WMFLWG    ADD  WL0090    WN0163           OD Weight Sched
     C                     MOVELWMP7ST    YL0026           OD Added to Sch
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           WL0092    IFEQ 'C'                        *IF
     C           WL0092    OREQ 'F'
      * CASE: PAR.OD Production Date EQ JOB.*Job date
     C           WL0085    IFEQ ##JDT                      *IF
     C                     MOVEL'Y'       YL0026           OD Added to Sch
     C                     END                             *FI
     C                     END                             *FI
      * CASE: PAR.OD Quantity Scheduled is Greater than zero
     C           WN0162    IFGT 0                          *IF
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
     C                     EXSR TBCHRC
     C                     ELSE
      * CASE: *OTHERWISE
      * DLT Ord Detail Sched   DL - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWMAIC3    WL0056           Company Number
     C                     Z-ADDWMC4NB    WL0057           Order Number
     C                     Z-ADDWMDPNB    WL0058           Order Sequence
     C                     Z-ADDWMUENB    WL0059           Order Secondary
     C                     Z-ADDWMJGDT    WL0060           OD Production D
     C                     EXSR SQDLRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TAEXIT    ENDSR
      /EJECT
     CSR         TBCHRC    BEGSR
      *================================================================
      * CHG Qty/Wgt Scheduled  CH - Order Detail Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0179  70       Scheduled Ship
     C                     MOVEL*BLANK    WN0180  3        Warehouse Code
     C                     MOVEL*BLANK    WN0181  3        Order From Ware
     C                     Z-ADD*ZERO     WN0182  70       Item Code
     C                     Z-ADD*ZERO     WN0183 112       OD Quantity Unu
     C                     Z-ADD*ZERO     WN0184 112       OD Unused weigh
     C                     MOVEL*BLANK    WN0185  1        OD Reallocate S
     C                     MOVEL*BLANK    WN0186  2        OD Status Unuse
     C                     MOVEL*BLANK    WN0187  1        EDI Status 1
     C                     MOVEL*BLANK    WN0188  1        EDI Status 2
     C                     MOVEL*BLANK    WN0189  1        EDI Status 3
     C                     MOVEL*BLANK    WN0190  1        Record Status
     C                     Z-ADD*ZERO     WN0191  60       Job Time
     C                     MOVEL*BLANK    WN0192 10        User Id
     C                     MOVEL*BLANK    WN0193 10        Job Name
     C                     Z-ADD*ZERO     WN0194  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YDRDC   1
      *
      * Move key fields to @KNCPHN
     C                     Z-ADDWMAIC3    WOAIC3           Company Number
     C                     Z-ADDWMC4NB    WOC4NB           Order Number
     C                     Z-ADDWMDPNB    WODPNB           Order Sequence
     C                     Z-ADDWMUENB    WOUENB           Order Secondary
     C                     Z-ADDWMJGDT    WOJGDT           OD Production D
      *
     C           KLCHTB    KLIST
     C                     KFLD           WOAIC3           Company Number
     C                     KFLD           WOC4NB           Order Number
     C                     KFLD           WODPNB           Order Sequence
     C                     KFLD           WOUENB           Order Secondary
     C                     KFLD           WOJGDT           OD Production D
     C           KLCHTB    CHAIN@KNCPHN              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDKNCPL0'MDACP
     C                     MOVEL'@KNCPHN' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL006.
     C                     MOVEL'LBL006'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TBEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TBEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDKN1    YDRDCS
      * Move non-key fields to @KNCPHN
     C                     Z-ADDWN0162    WOIGQT           OD Qty_Cnsmd Pi
     C                     Z-ADDWN0163    WOFLWG           OD Weight Sched
     C                     Z-ADDWMIUQT    WOIUQT           OD Quantity Inv
     C                     Z-ADDWMF3WG    WOF3WG           OD Weight Inv S
     C                     MOVELYL0026    WOP7ST    P      OD Added to Sch
      *
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Record Stamp CHGOB IF
     C                     Z-ADD##JTM     WOAATM           Job Time
     C                     MOVEL##USR     WOAYNA           User Id
     C                     MOVEL##PGM     WOA0NA           Job Name
     C                     Z-ADD##JDT     WOAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDKN1    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@KNCPHN                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDKNCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TBEXIT    ENDSR
      /EJECT
     CSR         TCRVGN    BEGSR
      *================================================================
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0195  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0196  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0197  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0198  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0199  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0200  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0201  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0202  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0203  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0204  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0205  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0206  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0207  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0208  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0209  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0210  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0211  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0212  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0213  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0214  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0215  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0216  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0217  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0218 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0219  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0220 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0221  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0222 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0223  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0224 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0225  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0226 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0227  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0228 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0229  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0230  3        PS Item Id
     C                     MOVEL*BLANK    WN0231  2        Warehouse Type
     C                     MOVEL*BLANK    WN0232  1        PS Lock Status
     C                     MOVEL*BLANK    WN0233  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0234  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0235  1        PS Piece Count
     C                     MOVEL*BLANK    WN0236  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0237  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0238  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0239  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0240  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0241  3        PS Production W
     C                     Z-ADD*ZERO     WN0242  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0243  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0244  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0245  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0246  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0247  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0248  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0249  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0250  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0251  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0252  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0253  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0254  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0255  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0256  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0257  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0258  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0259  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0260  6        Department Code
     C                     Z-ADD*ZERO     WN0261  30       Item Structure
     C                     Z-ADD*ZERO     WN0262  30       Item Structure
     C                     Z-ADD*ZERO     WN0263  30       Item Structure
     C                     MOVEL*BLANK    WN0264  6        Primal Group Co
     C                     MOVEL*BLANK    WN0265  1        EDI Status 1
     C                     MOVEL*BLANK    WN0266  1        EDI Status 2
     C                     MOVEL*BLANK    WN0267  1        EDI Status 3
     C                     MOVEL*BLANK    WN0268  1        Record Status
     C                     Z-ADD*ZERO     WN0269  60       Job Time
     C                     MOVEL*BLANK    WN0270 10        User Id
     C                     MOVEL*BLANK    WN0271 10        Job Name
     C                     Z-ADD*ZERO     WN0272  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTC     KLIST
     C                     KFLD           WRAIC3           Company Number
     C                     KFLD           WRV5ST           Production Type
     C                     KFLD           WRELDT           Production Date
     C                     KFLD           WRHGCD           Item Code
     C                     KFLD           WRAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0093    WRAIC3           Company Number
     C                     MOVELWL0094    WRV5ST           Production Type
     C                     Z-ADDWL0095    WRELDT           Production Date
     C                     Z-ADDWL0096    WRHGCD           Item Code
     C                     MOVELWL0097    WRAJCD           Warehouse Code
      * Establish starting position
     C           KRSTC     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0098    WN0220           PS Weight Whs T
     C                     Z-ADDWL0099    WN0219           PS Pieces Whs T
      * CASE: PAR.PS Pieces Whse Tfr Adj is GT Zero
     C           WN0219    IFGT 0                          *IF
      * Average Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Whs Tfr Adj
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Whs Tfr Adj
     C           WN0220    DIV  WN0219    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0199           PS Avg Piece Wg
     C                     END                             *FI
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0093    WL0104           Company Number
     C                     MOVELWL0094    WL0105    P      Production Type
     C                     Z-ADDWL0095    WL0106           Production Date
     C                     Z-ADDWL0096    WL0107           Item Code
     C                     MOVELWL0097    WL0108    P      Warehouse Code
     C                     Z-ADDWN0195    WL0109           PS Available Sh
     C                     Z-ADDWN0196    WL0110           PS Weight Plann
     C                     Z-ADDWN0197    WL0111           PS Pieces Plann
     C                     Z-ADDWN0198    WL0112           PS Pct of Carca
     C                     Z-ADDWN0199    WL0113           PS Avg Piece Wg
     C                     Z-ADDWN0200    WL0114           PS Weight Inv O
     C                     Z-ADDWN0201    WL0115           PS Pieces Inv O
     C                     Z-ADDWN0202    WL0116           PS Weight Stand
     C                     Z-ADDWN0203    WL0117           PS Pieces Stand
     C                     Z-ADDWN0204    WL0118           PS Weight Conve
     C                     Z-ADDWN0205    WL0119           PS Pieces Conve
     C                     Z-ADDWN0206    WL0120           PS Weight Shipp
     C                     Z-ADDWN0207    WL0121           PS Pieces Shipp
     C                     Z-ADDWN0208    WL0122           PS Weight Prod
     C                     Z-ADDWN0209    WL0123           PS Pieces Prod
     C                     Z-ADDWN0210    WL0124           PS Weight Inv A
     C                     Z-ADDWN0211    WL0125           PS Pieces Inv A
     C                     Z-ADDWN0212    WL0126           PS Weight Ship
     C                     Z-ADDWN0213    WL0127           PS Pieces Ship
     C                     Z-ADDWN0214    WL0128           PS Weight Prod
     C                     Z-ADDWN0215    WL0129           PS Pieces Prod
     C                     Z-ADDWN0216    WL0130           PS Weight Inv A
     C                     Z-ADDWN0217    WL0131           PS Pieces Inv A
     C                     Z-ADDWN0218    WL0132           PS Unit Weight
     C                     Z-ADDWN0219    WL0133           PS Pieces Whs T
     C                     Z-ADDWN0220    WL0134           PS Weight Whs T
     C                     Z-ADDWN0221    WL0135           PS Pieces Unuse
     C                     Z-ADDWN0222    WL0136           PS Weight Unuse
     C                     Z-ADDWN0223    WL0137           PS Pieces Unuse
     C                     Z-ADDWN0224    WL0138           PS Weight Unuse
     C                     Z-ADDWN0225    WL0139           PS Pieces Unuse
     C                     Z-ADDWN0226    WL0140           PS Weight Unuse
     C                     Z-ADDWN0227    WL0141           PS Pieces Unuse
     C                     Z-ADDWN0228    WL0142           PS Weight Unuse
     C                     Z-ADDWN0229    WL0143           PS Pieces Unuse
     C                     MOVELWN0230    WL0144    P      PS Item Id
     C                     MOVELWN0231    WL0145    P      Warehouse Type
     C                     MOVELWN0232    WL0146    P      PS Lock Status
     C                     MOVELWN0233    WL0147    P      PS Export/Domes
     C                     MOVELWN0234    WL0148    P      PS Print On Sch
     C                     MOVELWN0235    WL0149    P      PS Piece Count
     C                     MOVELWN0236    WL0150    P      PS Unused Sts 1
     C                     MOVELWN0237    WL0151    P      PS Unused Sts 2
     C                     MOVELWN0238    WL0152    P      PS Unused Sts 3
     C                     MOVELWN0239    WL0153    P      PS Unused Sts 4
     C                     MOVELWN0240    WL0154    P      PS Item Sched N
     C                     MOVELWN0241    WL0155    P      PS Production W
     C                     Z-ADDWN0242    WL0156           PS Weight Order
     C                     Z-ADDWN0243    WL0157           PS Pieces Order
     C                     Z-ADDWN0244    WL0158           PS Weight FC Ad
     C                     Z-ADDWN0245    WL0159           PS Pieces FC Ad
     C                     Z-ADDWN0246    WL0160           PS Weight FX Ad
     C                     Z-ADDWN0247    WL0161           PS Pieces FX Ad
     C                     Z-ADDWN0248    WL0162           PS Weight Sched
     C                     Z-ADDWN0249    WL0163           PS Pieces Sched
     C                     Z-ADDWN0250    WL0164           PS Weight Avail
     C                     Z-ADDWN0251    WL0165           PS Pieces Avail
     C                     Z-ADDWN0252    WL0166           PS Weight Produ
     C                     Z-ADDWN0253    WL0167           PS Pieces Produ
     C                     Z-ADDWN0254    WL0168           PS Weight Fab N
     C                     Z-ADDWN0255    WL0169           PS Pieces Fab N
     C                     Z-ADDWN0256    WL0170           PS Weight Sched
     C                     Z-ADDWN0257    WL0171           PS Pieces Sched
     C                     Z-ADDWN0258    WL0172           PS Weight Sched
     C                     Z-ADDWN0259    WL0173           PS Pieces Sched
     C                     MOVELWN0260    WL0174    P      Department Code
     C                     Z-ADDWN0261    WL0175           Item Structure
     C                     Z-ADDWN0262    WL0176           Item Structure
     C                     Z-ADDWN0263    WL0177           Item Structure
     C                     MOVELWN0264    WL0178    P      Primal Group Co
     C                     MOVELWN0265    WL0179    P      EDI Status 1
     C                     MOVELWN0266    WL0180    P      EDI Status 2
     C                     MOVELWN0267    WL0181    P      EDI Status 3
     C                     MOVELWN0268    WL0182    P      Record Status
     C                     Z-ADDWN0269    WL0183           Job Time
     C                     MOVELWN0270    WL0184    P      User Id
     C                     MOVELWN0271    WL0185    P      Job Name
     C                     Z-ADDWN0272    WL0186           Job Date
     C                     EXSR TDCRRC
      *  not necessary here ...
     C                     GOTO TCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WRGAWG    ADD  WL0098    WN0220           PS Weight Whs T
     C           WRBPNB    ADD  WL0099    WN0219           PS Pieces Whs T
      * Chg Prod Whse Txfr    CH - PS Prod Item Schedule  * 
     C                     EXSR THCHRC
      *  not necessary here ...
      * FP1054 create/delete consumed records - if called from PRD routin
      *  and STD was allocated
     C                     ENDIF
      *================================================================
     CSR         TCEXIT    ENDSR
      /EJECT
     CSR         TDCRRC    BEGSR
      *================================================================
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @I8CPUR
     C                     Z-ADDWL0104    WSAIC3           Company Number
     C                     MOVELWL0105    WSV5ST           Production Type
     C                     Z-ADDWL0106    WSELDT           Production Date
     C                     Z-ADDWL0107    WSHGCD           Item Code
     C                     MOVELWL0108    WSAJCD           Warehouse Code
     C                     Z-ADDWL0109    WSGPDT           PS Available Sh
     C                     Z-ADDWL0110    WSWTSP           PS Weight Plann
     C                     Z-ADDWL0111    WSQTSP           PS Pieces Plann
     C                     Z-ADDWL0112    WSDJPC           PS Pct of Carca
     C                     Z-ADDWL0113    WSF8WG           PS Avg Piece Wg
     C                     Z-ADDWL0114    WSWTIN           PS Weight Inv O
     C                     Z-ADDWL0115    WSD5NB           PS Pieces Inv O
     C                     Z-ADDWL0116    WSDXWG           PS Weight Stand
     C                     Z-ADDWL0117    WSB2NB           PS Pieces Stand
     C                     Z-ADDWL0118    WSWTCN           PS Weight Conve
     C                     Z-ADDWL0119    WSPSCV           PS Pieces Conve
     C                     Z-ADDWL0120    WSSAWT           PS Weight Shipp
     C                     Z-ADDWL0121    WSB9NB           PS Pieces Shipp
     C                     Z-ADDWL0122    WSD1WG           PS Weight Prod
     C                     Z-ADDWL0123    WSCBNB           PS Pieces Prod
     C                     Z-ADDWL0124    WSEZWG           PS Weight Inv A
     C                     Z-ADDWL0125    WSCCNB           PS Pieces Inv A
     C                     Z-ADDWL0126    WSE0WG           PS Weight Ship
     C                     Z-ADDWL0127    WSD6NB           PS Pieces Ship
     C                     Z-ADDWL0128    WSOAWT           PS Weight Prod
     C                     Z-ADDWL0129    WSCDNB           PS Pieces Prod
     C                     Z-ADDWL0130    WSUNW2           PS Weight Inv A
     C                     Z-ADDWL0131    WSCENB           PS Pieces Inv A
     C                     Z-ADDWL0132    WSF9WG           PS Unit Weight
     C                     Z-ADDWL0133    WSBPNB           PS Pieces Whs T
     C                     Z-ADDWL0134    WSGAWG           PS Weight Whs T
     C                     Z-ADDWL0135    WSBQNB           PS Pieces Unuse
     C                     Z-ADDWL0136    WSGBWG           PS Weight Unuse
     C                     Z-ADDWL0137    WSBRNB           PS Pieces Unuse
     C                     Z-ADDWL0138    WSGCWG           PS Weight Unuse
     C                     Z-ADDWL0139    WSBSNB           PS Pieces Unuse
     C                     Z-ADDWL0140    WSGDWG           PS Weight Unuse
     C                     Z-ADDWL0141    WSBWNB           PS Pieces Unuse
     C                     Z-ADDWL0142    WSGEWG           PS Weight Unuse
     C                     Z-ADDWL0143    WSPS6U           PS Pieces Unuse
     C                     MOVELWL0144    WSWCST           PS Item Id
     C                     MOVELWL0145    WSWPST           Warehouse Type
     C                     MOVELWL0146    WSB5ST           PS Lock Status
     C                     MOVELWL0147    WSTFST           PS Export/Domes
     C                     MOVELWL0148    WSTEST           PS Print On Sch
     C                     MOVELWL0149    WSTHST           PS Piece Count
     C                     MOVELWL0150    WSUDST           PS Unused Sts 1
     C                     MOVELWL0151    WSUFST           PS Unused Sts 2
     C                     MOVELWL0152    WSUGST           PS Unused Sts 3
     C                     MOVELWL0153    WSUHST           PS Unused Sts 4
     C                     MOVELWL0154    WSB6ST           PS Item Sched N
     C                     MOVELWL0155    WSB7ST           PS Production W
     C                     Z-ADDWL0156    WSDVWG           PS Weight Order
     C                     Z-ADDWL0157    WSD7NB           PS Pieces Order
     C                     Z-ADDWL0158    WSFCAD           PS Weight FC Ad
     C                     Z-ADDWL0159    WSD9NB           PS Pieces FC Ad
     C                     Z-ADDWL0160    WSDWWG           PS Weight FX Ad
     C                     Z-ADDWL0161    WSEANB           PS Pieces FX Ad
     C                     Z-ADDWL0162    WSSHWT           PS Weight Sched
     C                     Z-ADDWL0163    WSEBNB           PS Pieces Sched
     C                     Z-ADDWL0164    WSAVWT           PS Weight Avail
     C                     Z-ADDWL0165    WSECNB           PS Pieces Avail
     C                     Z-ADDWL0166    WSWTON           PS Weight Produ
     C                     Z-ADDWL0167    WSEDNB           PS Pieces Produ
     C                     Z-ADDWL0168    WSFNWT           PS Weight Fab N
     C                     Z-ADDWL0169    WSEENB           PS Pieces Fab N
     C                     Z-ADDWL0170    WSQTAS           PS Weight Sched
     C                     Z-ADDWL0171    WSEFNB           PS Pieces Sched
     C                     Z-ADDWL0172    WSWAIO           PS Weight Sched
     C                     Z-ADDWL0173    WSEGNB           PS Pieces Sched
     C                     MOVELWL0174    WSR3CD           Department Code
     C                     Z-ADDWL0175    WSRGNB           Item Structure
     C                     Z-ADDWL0176    WSRHNB           Item Structure
     C                     Z-ADDWL0177    WSRINB           Item Structure
     C                     MOVELWL0178    WSXRCD           Primal Group Co
     C                     MOVELWL0179    WSUVST           EDI Status 1
     C                     MOVELWL0180    WSUWST           EDI Status 2
     C                     MOVELWL0181    WSUXST           EDI Status 3
     C                     MOVELWL0182    WSVSST           Record Status
     C                     Z-ADDWL0183    WSAATM           Job Time
     C                     MOVELWL0184    WSAYNA           User Id
     C                     MOVELWL0185    WSA0NA           Job Name
     C                     Z-ADDWL0186    WSAXDT           Job Date
      *
      * USER: Processing before Data update
      * BPS Setup Item Info   IF
      *
     C                     Z-ADD*ZERO     WN0273 155       System Value Nu
      *
      * UPS Rtv Company/Item  IF
      * Rtv Prd Sch Info   PS RT - Company Item  * 
     C                     EXSR TERVGN
      * BPS Rtv Whs Info      RT - Warehouse  * 
     C                     EXSR TFRVGN
      * BPS Set Up Item Id    IF
      * CASE: PAR.Item Type Code is Raw Materials
     C           WUN0CD    IFEQ 'RM'                       *IF
     C                     MOVEL'RMB'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Seconds Item is Yes
     C           WUX5ST    IFEQ 'Y'                        *IF
     C                     MOVEL'FSC'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Variety/Rendered/Cut is Variety
     C           WUXWST    IFEQ 'V'                        *IF
     C                     MOVEL'FVR'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Rendered
     C           WUXWST    IFEQ 'R'                        *IF
     C                     MOVEL'FRD'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Variety/Rendered/Cut is Cut
     C           WUXWST    IFEQ 'C'                        *IF
      * Base/Converted/Fabricated
      * CASE: PAR.Credit Item Status is yes
     C           WUVMST    IFEQ 'Y'                        *IF
      * Setup Base/Converted/Fabricated Credit
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FBC'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCC'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFC'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLC'     WSWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup Base/Converted/Fabricated
      * CASE: PAR.Converted/Base Item is Base
     C           WUQZCD    IFEQ 'B'                        *IF
     C                     MOVEL'FGB'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Converted
     C           WUQZCD    IFEQ 'C'                        *IF
     C                     MOVEL'FCV'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Fabricated
     C           WUQZCD    IFEQ 'F'                        *IF
     C                     MOVEL'FFB'     WSWCST           PS Item Id
     C                     ELSE
      * CASE: PAR.Converted/Base Item is Loss
     C           WUQZCD    IFEQ 'L'                        *IF
     C                     MOVEL'FLS'     WSWCST           PS Item Id
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Output PS Prod Warehouse
      * Rtv Productin Whs     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWSAJCD    WL0001    P      Warehouse Code
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    WSB7ST    P      Production Ware
     C                     Z-ADDWL0003    YL0027           Accounting Comp
      * Available Ship Date
      * CASE: WRK.Warehouse Std Chill Time is yes
     C           WUT1ST    IFEQ 'Y'                        *IF
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAIC3    WL0187           Company Number
     C                     Z-ADDWL0106    WL0188           Post to G_L Dat
     C                     Z-ADDWUDBNB    WL0189           Fresh Chilling
     C                     EXSR TGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0190    WSGPDT           PS Available Sh
     C                     ELSE
      * CASE: *OTHERWISE
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWSAIC3    WL0187           Company Number
     C                     Z-ADDWL0106    WL0188           Post to G_L Dat
     C                     Z-ADDWUCHTM    WL0189           Fresh Chilling
     C                     EXSR TGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0190    WSGPDT           PS Available Sh
     C                     END                             *FI
      * Average Piece Weight
      * CASE: PAR.PS Pieces Planned Prod is GT Zero
     C           WL0111    IFGT 0                          *IF
     C           WL0110    DIV  WL0111    WSF8WG           PS Avg Piece Wg
     C                     END                             *FI
      * UPS CRTOBJ Stamp      IF
     C                     MOVEL'A'       WSVSST           Record Status
     C                     Z-ADD##JTM     WSAATM           Job Time
     C                     MOVEL##USR     WSAYNA           User Id
     C                     MOVEL##PGM     WSA0NA           Job Name
     C                     Z-ADD##JDT     WSAXDT           Job Date
     C                     MOVEL'N'       WSB5ST           PS Lock Status
     C           KLCRTD    KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
      * Check for duplicate primary key
     C           KLCRTD    SETLL@I8CPUR                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR1764' W0RTN   7
      * Send message 'PS Prod Item Schedule  EX'
     C                     MOVEL'USR1764' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO TDEXIT
     C                     ENDIF
      *
     C                     WRITE@I8CPUR                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         TDEXIT    ENDSR
      /EJECT
     CSR         TERVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTE     KLIST
     C                     KFLD           WXAIC3           Company Number
     C                     KFLD           WXHGCD           Item Code
      * Setup key
     C                     Z-ADDWSAIC3    WXAIC3           Company Number
     C                     Z-ADDWSHGCD    WXHGCD           Item Code
      * Establish starting position
     C           KRSTE     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAVNA           Description Lin
     C                     MOVEL*BLANK    WUADCD           UOM Primary
     C                     Z-ADD*ZERO     WUAIWG           Unit Weight
     C                     Z-ADD*ZERO     WSRINB           Item Structure
     C                     Z-ADD*ZERO     WSRHNB           Item Structure
     C                     Z-ADD*ZERO     WSRGNB           Item Structure
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     MOVEL*BLANK    WUQ1CD           Default Warehou
     C                     Z-ADD*ZERO     WUCHTM           Fresh Chilling
     C                     MOVEL*BLANK    WUQZCD           Base_Conv_Loss
     C                     MOVEL*BLANK    WUXWST           Variety_Rendere
     C                     MOVEL*BLANK    WUVMST           Credit Item Sta
     C                     Z-ADD*ZERO     WUSWGH           Std Weight_Head
     C                     Z-ADD*ZERO     WUPPHE           Pieces Per Head
     C                     MOVEL*BLANK    WSR3CD           Department Code
     C                     MOVEL*BLANK    WUSDCD           Group for Packa
     C                     MOVEL*BLANK    WUX5ST           Seconds Item
     C                     MOVEL*BLANK    WSTHST           Piece Count Ite
     C                     Z-ADD*ZERO     WUBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WUBJNB           Bags Per Unit
     C                     MOVEL*BLANK    WSTFST           Export_Domestic
     C                     MOVEL*BLANK    WSTEST           Print On Schedu
     C                     MOVEL*BLANK    WUSYST           Fresh Inv Alloc
     C                     MOVEL*BLANK    WUSZST           Fresh Sched As
     C                     MOVEL*BLANK    WUS1ST           Frozen Inv Allo
     C                     MOVEL*BLANK    WSXRCD           Primal Group Co
     C                     GOTO TEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWXAVNA    WUAVNA           Description Lin
     C                     MOVELWXADCD    WUADCD           UOM Primary
     C                     Z-ADDWXAIWG    WUAIWG           Unit Weight
     C                     Z-ADDWXRINB    WSRINB           Item Structure
     C                     Z-ADDWXRHNB    WSRHNB           Item Structure
     C                     Z-ADDWXRGNB    WSRGNB           Item Structure
     C                     MOVELWXN0CD    WUN0CD           Item Type Code
     C                     MOVELWXQ1CD    WUQ1CD           Default Warehou
     C                     Z-ADDWXCHTM    WUCHTM           Fresh Chilling
     C                     MOVELWXQZCD    WUQZCD           Base_Conv_Loss
     C                     MOVELWXXWST    WUXWST           Variety_Rendere
     C                     MOVELWXVMST    WUVMST           Credit Item Sta
     C                     Z-ADDWXSWGH    WUSWGH           Std Weight_Head
     C                     Z-ADDWXPPHE    WUPPHE           Pieces Per Head
     C                     MOVELWXR3CD    WSR3CD           Department Code
     C                     MOVELWXSDCD    WUSDCD           Group for Packa
     C                     MOVELWXX5ST    WUX5ST           Seconds Item
     C                     MOVELWXPCCT    WSTHST           Piece Count Ite
     C                     Z-ADDWXBDNB    WUBDNB           Pieces Per Bag
     C                     Z-ADDWXBJNB    WUBJNB           Bags Per Unit
     C                     MOVELWXSUST    WSTFST           Export_Domestic
     C                     MOVELWXSVST    WSTEST           Print On Schedu
     C                     MOVELWXSYST    WUSYST           Fresh Inv Alloc
     C                     MOVELWXSZST    WUSZST           Fresh Sched As
     C                     MOVELWXS1ST    WUS1ST           Frozen Inv Allo
     C                     MOVELWXXRCD    WSXRCD           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         TEEXIT    ENDSR
      /EJECT
     CSR         TFRVGN    BEGSR
      *================================================================
      * BPS Rtv Whs Info      RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTF     KLIST
     C                     KFLD           WYAJCD           Warehouse Code
      * Setup key
     C                     MOVELWSAJCD    WYAJCD           Warehouse Code
      * Establish starting position
     C           KRSTF     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WSWPST           Warehouse Type
     C                     MOVEL*BLANK    WUXUST           Trans Contol AS
     C                     MOVEL*BLANK    WUT0ST           Warehouse Locat
     C                     MOVEL*BLANK    WUT1ST           Warehouse Std C
     C                     Z-ADD*ZERO     WUDBNB           Warehouse Chill
     C                     GOTO TFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWYWPST    WSWPST           Warehouse Type
     C                     MOVELWYXUST    WUXUST           Trans Contol AS
     C                     MOVELWYT0ST    WUT0ST           Warehouse Locat
     C                     MOVELWYT1ST    WUT1ST           Warehouse Std C
     C                     Z-ADDWYDBNB    WUDBNB           Warehouse Chill
     C                     ENDIF
      *================================================================
     CSR         TFEXIT    ENDSR
      /EJECT
     CSR         TGRVGN    BEGSR
      *================================================================
      * UPS Clc Avail Shp Dte RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQTG01           Company Number
      * Define keylist
     C           KPSTG     KLIST
     C                     KFLD           WQTG01           Company Number
     C                     KFLD           WABCDT           Post to G_L Dat
      * Define keylist
     C           KRSTG     KLIST
     C                     KFLD           WQTG01           Company Number
      * Setup key
     C                     Z-ADDWL0187    WQTG01           Company Number
     C                     Z-ADDWL0188    WABCDT           Post to G_L Dat
      * Establish starting position
     C           KPSTG     SETLL@AFREBE                    *
     C           KRSTG     READE@AFREBE                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.Count USR EQ PAR.Chilling Time
     C           WUCNTU    IFEQ WL0189                     *IF
     C                     Z-ADDWABCDT    WL0190           PS Available Sh
     C                     GOTO TGEXIT                     *QUIT
     C                     END                             *FI
      * Skip Saturday
      * CASE: DB1.Day of Week is Saturday
     C           WAA9ST    IFEQ '7'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
     C           KRSTG     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         TGEXIT    ENDSR
      /EJECT
     CSR         THCHRC    BEGSR
      *================================================================
      * Chg Prod Whse Txfr    CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0274  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0275  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0276  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0277  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0278  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0279  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0280  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0281  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0282  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0283  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0284  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0285  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0286  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0287  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0288  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0289  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0290  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0291  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0292  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0293  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0294  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0295  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0296 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0297  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0298 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0299  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0300 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0301  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0302 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0303  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0304 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0305  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0306  3        PS Item Id
     C                     MOVEL*BLANK    WN0307  2        Warehouse Type
     C                     MOVEL*BLANK    WN0308  1        PS Lock Status
     C                     MOVEL*BLANK    WN0309  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0310  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0311  1        PS Piece Count
     C                     MOVEL*BLANK    WN0312  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0313  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0314  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0315  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0316  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0317  3        PS Production W
     C                     Z-ADD*ZERO     WN0318  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0319  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0320  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0321  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0322  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0323  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0324  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0325  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0326  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0327  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0328  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0329  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0330  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0331  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0332  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0333  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0334  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0335  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0336  6        Department Code
     C                     Z-ADD*ZERO     WN0337  30       Item Structure
     C                     Z-ADD*ZERO     WN0338  30       Item Structure
     C                     Z-ADD*ZERO     WN0339  30       Item Structure
     C                     MOVEL*BLANK    WN0340  6        Primal Group Co
     C                     MOVEL*BLANK    WN0341  1        EDI Status 1
     C                     MOVEL*BLANK    WN0342  1        EDI Status 2
     C                     MOVEL*BLANK    WN0343  1        EDI Status 3
     C                     MOVEL*BLANK    WN0344  1        Record Status
     C                     Z-ADD*ZERO     WN0345  60       Job Time
     C                     MOVEL*BLANK    WN0346 10        User Id
     C                     MOVEL*BLANK    WN0347 10        Job Name
     C                     Z-ADD*ZERO     WN0348  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YERDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWRAIC3    WSAIC3           Company Number
     C                     MOVELWRV5ST    WSV5ST    P      Production Type
     C                     Z-ADDWRELDT    WSELDT           Production Date
     C                     Z-ADDWRHGCD    WSHGCD           Item Code
     C                     MOVELWRAJCD    WSAJCD    P      Warehouse Code
      *
     C           KLCHTH    KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
     C           KLCHTH    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL007.
     C                     MOVEL'LBL007'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO THEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO THEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YERDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWRF8WG    WSF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0219    WSBPNB           PS Pieces Whs T
     C                     Z-ADDWN0220    WSGAWG           PS Weight Whs T
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WSAATM           Job Time
     C                     MOVEL##USR     WSAYNA           User Id
     C                     MOVEL##PGM     WSA0NA           Job Name
     C                     Z-ADD##JDT     WSAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YERDCS
     C           YERDC     ANDNE'N'
     C                     MOVE 'Y'       YERDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YERDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         THEXIT    ENDSR
      /EJECT
     CSR         TIRVGN    BEGSR
      *================================================================
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0349  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0350  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0351  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0352  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0353  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0354  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0355  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0356  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0357  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0358  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0359  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0360  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0361  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0362  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0363  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0364  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0365  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0366  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0367  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0368  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0369  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0370  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0371  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0372 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0373  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0374 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0375  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0376 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0377  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0378 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0379  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0380 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0381  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0382 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0383  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0384  3        PS Item Id
     C                     MOVEL*BLANK    WN0385  2        Warehouse Type
     C                     MOVEL*BLANK    WN0386  1        PS Lock Status
     C                     MOVEL*BLANK    WN0387  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0388  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0389  1        PS Piece Count
     C                     MOVEL*BLANK    WN0390  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0391  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0392  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0393  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0394  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0395  3        PS Production W
     C                     Z-ADD*ZERO     WN0396  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0397  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0398  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0399  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0400  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0401  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0402  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0403  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0404  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0405  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0406  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0407  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0408  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0409  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0410  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0411  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0412  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0413  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0414  6        Department Code
     C                     Z-ADD*ZERO     WN0415  30       Item Structure
     C                     Z-ADD*ZERO     WN0416  30       Item Structure
     C                     Z-ADD*ZERO     WN0417  30       Item Structure
     C                     MOVEL*BLANK    WN0418  6        Primal Group Co
     C                     MOVEL*BLANK    WN0419  1        EDI Status 1
     C                     MOVEL*BLANK    WN0420  1        EDI Status 2
     C                     MOVEL*BLANK    WN0421  1        EDI Status 3
     C                     MOVEL*BLANK    WN0422  1        Record Status
     C                     Z-ADD*ZERO     WN0423  60       Job Time
     C                     MOVEL*BLANK    WN0424 10        User Id
     C                     MOVEL*BLANK    WN0425 10        Job Name
     C                     Z-ADD*ZERO     WN0426  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTI     KLIST
     C                     KFLD           WRAIC3           Company Number
     C                     KFLD           WRV5ST           Production Type
     C                     KFLD           WRELDT           Production Date
     C                     KFLD           WRHGCD           Item Code
     C                     KFLD           WRAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0191    WRAIC3           Company Number
     C                     MOVELWL0192    WRV5ST           Production Type
     C                     Z-ADDWL0193    WRELDT           Production Date
     C                     Z-ADDWL0194    WRHGCD           Item Code
     C                     MOVELWL0195    WRAJCD           Warehouse Code
      * Establish starting position
     C           KRSTI     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0197    WN0356           PS Weight Stand
     C                     Z-ADDWL0196    WN0357           PS Pieces Stand
      * Average Piece Weight
      * CASE: PAR.PS Pieces Standard is NE Zeros
     C           WN0357    IFNE 0                          *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * Avg Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Standard
     C           WN0356    DIV  WN0357    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0353           PS Avg Piece Wg
      * FP1054 RMC 5/14/09 make positive if negative
      * CASE: PAR.PS Avg Piece Wgt is LT Zero
     C           WN0353    IFLT 0                          *IF
     C                     MULT -1        WN0353           PS Avg Piece Wg
     C                     END                             *FI
     C                     END                             *FI
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.PS Weight Standard is NE Zero
      *   |- c2    : PAR.PS Pieces Standard is NE Zeros
      *   '-
     C           WN0356    IFNE 0                          *IF
     C           WN0357    ORNE 0                          *OR
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0191    WL0104           Company Number
     C                     MOVELWL0192    WL0105    P      Production Type
     C                     Z-ADDWL0193    WL0106           Production Date
     C                     Z-ADDWL0194    WL0107           Item Code
     C                     MOVELWL0195    WL0108    P      Warehouse Code
     C                     Z-ADDWN0349    WL0109           PS Available Sh
     C                     Z-ADDWN0350    WL0110           PS Weight Plann
     C                     Z-ADDWN0351    WL0111           PS Pieces Plann
     C                     Z-ADDWN0352    WL0112           PS Pct of Carca
     C                     Z-ADDWN0353    WL0113           PS Avg Piece Wg
     C                     Z-ADDWN0354    WL0114           PS Weight Inv O
     C                     Z-ADDWN0355    WL0115           PS Pieces Inv O
     C                     Z-ADDWN0356    WL0116           PS Weight Stand
     C                     Z-ADDWN0357    WL0117           PS Pieces Stand
     C                     Z-ADDWN0358    WL0118           PS Weight Conve
     C                     Z-ADDWN0359    WL0119           PS Pieces Conve
     C                     Z-ADDWN0360    WL0120           PS Weight Shipp
     C                     Z-ADDWN0361    WL0121           PS Pieces Shipp
     C                     Z-ADDWN0362    WL0122           PS Weight Prod
     C                     Z-ADDWN0363    WL0123           PS Pieces Prod
     C                     Z-ADDWN0364    WL0124           PS Weight Inv A
     C                     Z-ADDWN0365    WL0125           PS Pieces Inv A
     C                     Z-ADDWN0366    WL0126           PS Weight Ship
     C                     Z-ADDWN0367    WL0127           PS Pieces Ship
     C                     Z-ADDWN0368    WL0128           PS Weight Prod
     C                     Z-ADDWN0369    WL0129           PS Pieces Prod
     C                     Z-ADDWN0370    WL0130           PS Weight Inv A
     C                     Z-ADDWN0371    WL0131           PS Pieces Inv A
     C                     Z-ADDWN0372    WL0132           PS Unit Weight
     C                     Z-ADDWN0373    WL0133           PS Pieces Whs T
     C                     Z-ADDWN0374    WL0134           PS Weight Whs T
     C                     Z-ADDWN0375    WL0135           PS Pieces Unuse
     C                     Z-ADDWN0376    WL0136           PS Weight Unuse
     C                     Z-ADDWN0377    WL0137           PS Pieces Unuse
     C                     Z-ADDWN0378    WL0138           PS Weight Unuse
     C                     Z-ADDWN0379    WL0139           PS Pieces Unuse
     C                     Z-ADDWN0380    WL0140           PS Weight Unuse
     C                     Z-ADDWN0381    WL0141           PS Pieces Unuse
     C                     Z-ADDWN0382    WL0142           PS Weight Unuse
     C                     Z-ADDWN0383    WL0143           PS Pieces Unuse
     C                     MOVELWN0384    WL0144    P      PS Item Id
     C                     MOVELWN0385    WL0145    P      Warehouse Type
     C                     MOVELWN0386    WL0146    P      PS Lock Status
     C                     MOVELWN0387    WL0147    P      PS Export/Domes
     C                     MOVELWN0388    WL0148    P      PS Print On Sch
     C                     MOVELWN0389    WL0149    P      PS Piece Count
     C                     MOVELWN0390    WL0150    P      PS Unused Sts 1
     C                     MOVELWN0391    WL0151    P      PS Unused Sts 2
     C                     MOVELWN0392    WL0152    P      PS Unused Sts 3
     C                     MOVELWN0393    WL0153    P      PS Unused Sts 4
     C                     MOVELWN0394    WL0154    P      PS Item Sched N
     C                     MOVELWN0395    WL0155    P      PS Production W
     C                     Z-ADDWN0396    WL0156           PS Weight Order
     C                     Z-ADDWN0397    WL0157           PS Pieces Order
     C                     Z-ADDWN0398    WL0158           PS Weight FC Ad
     C                     Z-ADDWN0399    WL0159           PS Pieces FC Ad
     C                     Z-ADDWN0400    WL0160           PS Weight FX Ad
     C                     Z-ADDWN0401    WL0161           PS Pieces FX Ad
     C                     Z-ADDWN0402    WL0162           PS Weight Sched
     C                     Z-ADDWN0403    WL0163           PS Pieces Sched
     C                     Z-ADDWN0404    WL0164           PS Weight Avail
     C                     Z-ADDWN0405    WL0165           PS Pieces Avail
     C                     Z-ADDWN0406    WL0166           PS Weight Produ
     C                     Z-ADDWN0407    WL0167           PS Pieces Produ
     C                     Z-ADDWN0408    WL0168           PS Weight Fab N
     C                     Z-ADDWN0409    WL0169           PS Pieces Fab N
     C                     Z-ADDWN0410    WL0170           PS Weight Sched
     C                     Z-ADDWN0411    WL0171           PS Pieces Sched
     C                     Z-ADDWN0412    WL0172           PS Weight Sched
     C                     Z-ADDWN0413    WL0173           PS Pieces Sched
     C                     MOVELWN0414    WL0174    P      Department Code
     C                     Z-ADDWN0415    WL0175           Item Structure
     C                     Z-ADDWN0416    WL0176           Item Structure
     C                     Z-ADDWN0417    WL0177           Item Structure
     C                     MOVELWN0418    WL0178    P      Primal Group Co
     C                     MOVELWN0419    WL0179    P      EDI Status 1
     C                     MOVELWN0420    WL0180    P      EDI Status 2
     C                     MOVELWN0421    WL0181    P      EDI Status 3
     C                     MOVELWN0422    WL0182    P      Record Status
     C                     Z-ADDWN0423    WL0183           Job Time
     C                     MOVELWN0424    WL0184    P      User Id
     C                     MOVELWN0425    WL0185    P      Job Name
     C                     Z-ADDWN0426    WL0186           Job Date
     C                     EXSR TDCRRC
     C                     END                             *FI
     C                     GOTO TIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WRDXWG    ADD  WL0197    WN0356           PS Weight Stand
     C           WRB2NB    ADD  WL0196    WN0357           PS Pieces Stand
      * Average Piece Weight
      * CASE: PAR.PS Pieces Standard is NE Zeros
     C           WN0357    IFNE 0                          *IF
      * FP1054 RMC 5/14/09 chg above CASE to ne 0 , it was gt 0
      * Avg Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Standard
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Standard
     C           WN0356    DIV  WN0357    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0353           PS Avg Piece Wg
      * FP1054 RMC 5/14/09 make positive if negative
      * CASE: PAR.PS Avg Piece Wgt is LT Zero
     C           WN0353    IFLT 0                          *IF
     C                     MULT -1        WN0353           PS Avg Piece Wg
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 RMC 5/14/09 dont do below case - they may be negative now
      * BPS Chg Pcs/Wgt Std   CH - PS Prod Item Schedule  * 
     C                     EXSR TJCHRC
     C                     ENDIF
      *================================================================
     CSR         TIEXIT    ENDSR
      /EJECT
     CSR         TJCHRC    BEGSR
      *================================================================
      * BPS Chg Pcs/Wgt Std   CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0427  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0428  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0429  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0430  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0431  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0432  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0433  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0434  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0435  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0436  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0437  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0438  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0439  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0440  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0441  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0442  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0443  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0444  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0445  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0446  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0447 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0448  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0449 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0450  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0451 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0452  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0453 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0454  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0455 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0456  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0457 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0458  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0459  3        PS Item Id
     C                     MOVEL*BLANK    WN0460  2        Warehouse Type
     C                     MOVEL*BLANK    WN0461  1        PS Lock Status
     C                     MOVEL*BLANK    WN0462  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0463  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0464  1        PS Piece Count
     C                     MOVEL*BLANK    WN0465  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0466  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0467  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0468  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0469  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0470  3        PS Production W
     C                     Z-ADD*ZERO     WN0471  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0472  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0473  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0474  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0475  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0476  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0477  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0478  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0479  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0480  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0481  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0482  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0483  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0484  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0485  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0486  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0487  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0488  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0489  6        Department Code
     C                     Z-ADD*ZERO     WN0490  30       Item Structure
     C                     Z-ADD*ZERO     WN0491  30       Item Structure
     C                     Z-ADD*ZERO     WN0492  30       Item Structure
     C                     MOVEL*BLANK    WN0493  6        Primal Group Co
     C                     MOVEL*BLANK    WN0494  1        EDI Status 1
     C                     MOVEL*BLANK    WN0495  1        EDI Status 2
     C                     MOVEL*BLANK    WN0496  1        EDI Status 3
     C                     MOVEL*BLANK    WN0497  1        Record Status
     C                     Z-ADD*ZERO     WN0498  60       Job Time
     C                     MOVEL*BLANK    WN0499 10        User Id
     C                     MOVEL*BLANK    WN0500 10        Job Name
     C                     Z-ADD*ZERO     WN0501  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YFRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWRAIC3    WSAIC3           Company Number
     C                     MOVELWRV5ST    WSV5ST    P      Production Type
     C                     Z-ADDWRELDT    WSELDT           Production Date
     C                     Z-ADDWRHGCD    WSHGCD           Item Code
     C                     MOVELWRAJCD    WSAJCD    P      Warehouse Code
      *
     C           KLCHTJ    KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
     C           KLCHTJ    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL008.
     C                     MOVEL'LBL008'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TJEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TJEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YFRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWN0353    WSF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0356    WSDXWG           PS Weight Stand
     C                     Z-ADDWN0357    WSB2NB           PS Pieces Stand
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YFRDCS
     C           YFRDC     ANDNE'N'
     C                     MOVE 'Y'       YFRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YFRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TJEXIT    ENDSR
      /EJECT
     CSR         TKRVGN    BEGSR
      *================================================================
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0502  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0503  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0504  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0505  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0506  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0507  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0508  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0509  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0510  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0511  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0512  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0513  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0514  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0515  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0516  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0517  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0518  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0519  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0520  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0521  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0522  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0523  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0524  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0525 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0526  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0527 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0528  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0529 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0530  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0531 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0532  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0533 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0534  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0535 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0536  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0537  3        PS Item Id
     C                     MOVEL*BLANK    WN0538  2        Warehouse Type
     C                     MOVEL*BLANK    WN0539  1        PS Lock Status
     C                     MOVEL*BLANK    WN0540  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0541  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0542  1        PS Piece Count
     C                     MOVEL*BLANK    WN0543  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0544  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0545  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0546  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0547  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0548  3        PS Production W
     C                     Z-ADD*ZERO     WN0549  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0550  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0551  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0552  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0553  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0554  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0555  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0556  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0557  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0558  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0559  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0560  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0561  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0562  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0563  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0564  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0565  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0566  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0567  6        Department Code
     C                     Z-ADD*ZERO     WN0568  30       Item Structure
     C                     Z-ADD*ZERO     WN0569  30       Item Structure
     C                     Z-ADD*ZERO     WN0570  30       Item Structure
     C                     MOVEL*BLANK    WN0571  6        Primal Group Co
     C                     MOVEL*BLANK    WN0572  1        EDI Status 1
     C                     MOVEL*BLANK    WN0573  1        EDI Status 2
     C                     MOVEL*BLANK    WN0574  1        EDI Status 3
     C                     MOVEL*BLANK    WN0575  1        Record Status
     C                     Z-ADD*ZERO     WN0576  60       Job Time
     C                     MOVEL*BLANK    WN0577 10        User Id
     C                     MOVEL*BLANK    WN0578 10        Job Name
     C                     Z-ADD*ZERO     WN0579  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTK     KLIST
     C                     KFLD           WRAIC3           Company Number
     C                     KFLD           WRV5ST           Production Type
     C                     KFLD           WRELDT           Production Date
     C                     KFLD           WRHGCD           Item Code
     C                     KFLD           WRAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0198    WRAIC3           Company Number
     C                     MOVELWL0199    WRV5ST           Production Type
     C                     Z-ADDWL0200    WRELDT           Production Date
     C                     Z-ADDWL0201    WRHGCD           Item Code
     C                     MOVELWL0202    WRAJCD           Warehouse Code
      * Establish starting position
     C           KRSTK     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADDWL0203    WN0521           PS Weight Prod
     C                     Z-ADDWL0204    WN0522           PS Pieces Prod
      * CASE: PAR.PS Pieces Prod Allocated is GT Zero
     C           WN0522    IFGT 0                          *IF
      * Average Piece Weight
      * PAR.PS Avg Piece Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.PS Weight Prod Allocated
      * /     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Pieces Prod Allocated
     C           WN0521    DIV  WN0522    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0506           PS Avg Piece Wg
     C                     END                             *FI
      * UPS Crt Prod Detail   CR - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0198    WL0104           Company Number
     C                     MOVELWL0199    WL0105    P      Production Type
     C                     Z-ADDWL0200    WL0106           Production Date
     C                     Z-ADDWL0201    WL0107           Item Code
     C                     MOVELWL0202    WL0108    P      Warehouse Code
     C                     Z-ADDWN0502    WL0109           PS Available Sh
     C                     Z-ADDWN0503    WL0110           PS Weight Plann
     C                     Z-ADDWN0504    WL0111           PS Pieces Plann
     C                     Z-ADDWN0505    WL0112           PS Pct of Carca
     C                     Z-ADDWN0506    WL0113           PS Avg Piece Wg
     C                     Z-ADDWN0507    WL0114           PS Weight Inv O
     C                     Z-ADDWN0508    WL0115           PS Pieces Inv O
     C                     Z-ADDWN0509    WL0116           PS Weight Stand
     C                     Z-ADDWN0510    WL0117           PS Pieces Stand
     C                     Z-ADDWN0511    WL0118           PS Weight Conve
     C                     Z-ADDWN0512    WL0119           PS Pieces Conve
     C                     Z-ADDWN0513    WL0120           PS Weight Shipp
     C                     Z-ADDWN0514    WL0121           PS Pieces Shipp
     C                     Z-ADDWN0515    WL0122           PS Weight Prod
     C                     Z-ADDWN0516    WL0123           PS Pieces Prod
     C                     Z-ADDWN0517    WL0124           PS Weight Inv A
     C                     Z-ADDWN0518    WL0125           PS Pieces Inv A
     C                     Z-ADDWN0519    WL0126           PS Weight Ship
     C                     Z-ADDWN0520    WL0127           PS Pieces Ship
     C                     Z-ADDWN0521    WL0128           PS Weight Prod
     C                     Z-ADDWN0522    WL0129           PS Pieces Prod
     C                     Z-ADDWN0523    WL0130           PS Weight Inv A
     C                     Z-ADDWN0524    WL0131           PS Pieces Inv A
     C                     Z-ADDWN0525    WL0132           PS Unit Weight
     C                     Z-ADDWN0526    WL0133           PS Pieces Whs T
     C                     Z-ADDWN0527    WL0134           PS Weight Whs T
     C                     Z-ADDWN0528    WL0135           PS Pieces Unuse
     C                     Z-ADDWN0529    WL0136           PS Weight Unuse
     C                     Z-ADDWN0530    WL0137           PS Pieces Unuse
     C                     Z-ADDWN0531    WL0138           PS Weight Unuse
     C                     Z-ADDWN0532    WL0139           PS Pieces Unuse
     C                     Z-ADDWN0533    WL0140           PS Weight Unuse
     C                     Z-ADDWN0534    WL0141           PS Pieces Unuse
     C                     Z-ADDWN0535    WL0142           PS Weight Unuse
     C                     Z-ADDWN0536    WL0143           PS Pieces Unuse
     C                     MOVELWN0537    WL0144    P      PS Item Id
     C                     MOVELWN0538    WL0145    P      Warehouse Type
     C                     MOVELWN0539    WL0146    P      PS Lock Status
     C                     MOVELWN0540    WL0147    P      PS Export/Domes
     C                     MOVELWN0541    WL0148    P      PS Print On Sch
     C                     MOVELWN0542    WL0149    P      PS Piece Count
     C                     MOVELWN0543    WL0150    P      PS Unused Sts 1
     C                     MOVELWN0544    WL0151    P      PS Unused Sts 2
     C                     MOVELWN0545    WL0152    P      PS Unused Sts 3
     C                     MOVELWN0546    WL0153    P      PS Unused Sts 4
     C                     MOVELWN0547    WL0154    P      PS Item Sched N
     C                     MOVELWN0548    WL0155    P      PS Production W
     C                     Z-ADDWN0549    WL0156           PS Weight Order
     C                     Z-ADDWN0550    WL0157           PS Pieces Order
     C                     Z-ADDWN0551    WL0158           PS Weight FC Ad
     C                     Z-ADDWN0552    WL0159           PS Pieces FC Ad
     C                     Z-ADDWN0553    WL0160           PS Weight FX Ad
     C                     Z-ADDWN0554    WL0161           PS Pieces FX Ad
     C                     Z-ADDWN0555    WL0162           PS Weight Sched
     C                     Z-ADDWN0556    WL0163           PS Pieces Sched
     C                     Z-ADDWN0557    WL0164           PS Weight Avail
     C                     Z-ADDWN0558    WL0165           PS Pieces Avail
     C                     Z-ADDWN0559    WL0166           PS Weight Produ
     C                     Z-ADDWN0560    WL0167           PS Pieces Produ
     C                     Z-ADDWN0561    WL0168           PS Weight Fab N
     C                     Z-ADDWN0562    WL0169           PS Pieces Fab N
     C                     Z-ADDWN0563    WL0170           PS Weight Sched
     C                     Z-ADDWN0564    WL0171           PS Pieces Sched
     C                     Z-ADDWN0565    WL0172           PS Weight Sched
     C                     Z-ADDWN0566    WL0173           PS Pieces Sched
     C                     MOVELWN0567    WL0174    P      Department Code
     C                     Z-ADDWN0568    WL0175           Item Structure
     C                     Z-ADDWN0569    WL0176           Item Structure
     C                     Z-ADDWN0570    WL0177           Item Structure
     C                     MOVELWN0571    WL0178    P      Primal Group Co
     C                     MOVELWN0572    WL0179    P      EDI Status 1
     C                     MOVELWN0573    WL0180    P      EDI Status 2
     C                     MOVELWN0574    WL0181    P      EDI Status 3
     C                     MOVELWN0575    WL0182    P      Record Status
     C                     Z-ADDWN0576    WL0183           Job Time
     C                     MOVELWN0577    WL0184    P      User Id
     C                     MOVELWN0578    WL0185    P      Job Name
     C                     Z-ADDWN0579    WL0186           Job Date
     C                     EXSR TDCRRC
      * FP1054 create consumed records
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0205    IFGT 0                          *IF
      * RMC 10-05 20 use ord co instead of par.company which is acctng
      * RTV Company for Ord   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0205    WL0210           Order Number
     C                     EXSR TLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0209    YL0028           Company Number
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0028    WL0211           Company Number
     C                     Z-ADDWL0205    WL0212           Order Number
     C                     Z-ADDWL0206    WL0213           Order Sequence
     C                     Z-ADDWL0207    WL0214           Order Secondary
     C                     Z-ADDWL0200    WL0215           OD Production D
     C                     Z-ADDYL0029    WL0216           ODS Sequence Nu
     C                     Z-ADDWL0201    WL0217           Consumed Item C
     C                     Z-ADDWL0201    WL0218           Item Code
     C                     EXSR TMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0216    YL0029           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0029    IFEQ 0                          *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0028    WL0219           Company Number
     C                     Z-ADDWL0205    WL0220           Order Number
     C                     Z-ADDWL0206    WL0221           Order Sequence
     C                     Z-ADDWL0207    WL0222           Order Secondary
     C                     Z-ADDWL0200    WL0223           OD Production D
     C                     Z-ADDYL0029    WL0224           ODS Sequence Nu
     C                     EXSR TNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0224    YL0029           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0028    WL0225           Company Number
     C                     Z-ADDWL0205    WL0226           Order Number
     C                     Z-ADDWL0206    WL0227           Order Sequence
     C                     Z-ADDWL0207    WL0228           Order Secondary
     C                     Z-ADDWL0200    WL0229           OD Production D
     C                     Z-ADDYL0029    WL0230           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0231           Scheduled Ship
     C                     MOVELWL0202    WL0232    P      Warehouse Code
     C                     Z-ADDWL0201    WL0233           Consumed Item C
     C                     Z-ADDWL0201    WL0234           Item Code
     C                     Z-ADDWL0204    WL0235           OD Qty_Cnsmd Pi
     C                     Z-ADDWL0203    WL0236           OD Weight Sched
     C                     Z-ADD*ZERO     WL0237           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0238           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0239           Deadline Depart
     C                     Z-ADD*ZERO     WL0240           Deadline Depart
     C                     EXSR TORVGN
     C                     END                             *FI
     C                     GOTO TKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           WROAWT    ADD  WL0203    WN0521           PS Weight Prod
     C           WRCDNB    ADD  WL0204    WN0522           PS Pieces Prod
      * Chg Prod Allocated    CH - PS Prod Item Schedule  * 
     C                     EXSR TSCHRC
      * FP1054 create/delete consumed records - if called from PRD routin
      *  and STD was allocated
      * CASE: PAR.Status Flag 19 Y/N is Yes
     C           WL0208    IFEQ 'Y'                        *IF
      * Create/update/delete Order Detail Sched-Consmd (POB6CPP)
      * CASE: PAR.Order Number is Greater then zero
     C           WL0205    IFGT 0                          *IF
      * RMC 10-05-2020 was par.company number which is acctng
      * RTV Company for Ord   RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0205    WL0210           Order Number
     C                     EXSR TLRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0209    YL0028           Company Number
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0028    WL0211           Company Number
     C                     Z-ADDWL0205    WL0212           Order Number
     C                     Z-ADDWL0206    WL0213           Order Sequence
     C                     Z-ADDWL0207    WL0214           Order Secondary
     C                     Z-ADDWL0200    WL0215           OD Production D
     C                     Z-ADDYL0029    WL0216           ODS Sequence Nu
     C                     Z-ADDWL0201    WL0217           Consumed Item C
     C                     Z-ADDWL0201    WL0218           Item Code
     C                     EXSR TMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0216    YL0029           ODS Sequence Nu
      * CASE: LCL.ODS Sequence Number is zero
     C           YL0029    IFEQ 0                          *IF
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0028    WL0219           Company Number
     C                     Z-ADDWL0205    WL0220           Order Number
     C                     Z-ADDWL0206    WL0221           Order Sequence
     C                     Z-ADDWL0207    WL0222           Order Secondary
     C                     Z-ADDWL0200    WL0223           OD Production D
     C                     Z-ADDYL0029    WL0224           ODS Sequence Nu
     C                     EXSR TNRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0224    YL0029           ODS Sequence Nu
     C                     END                             *FI
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0028    WL0225           Company Number
     C                     Z-ADDWL0205    WL0226           Order Number
     C                     Z-ADDWL0206    WL0227           Order Sequence
     C                     Z-ADDWL0207    WL0228           Order Secondary
     C                     Z-ADDWL0200    WL0229           OD Production D
     C                     Z-ADDYL0029    WL0230           ODS Sequence Nu
     C                     Z-ADD*ZERO     WL0231           Scheduled Ship
     C                     MOVELWL0202    WL0232    P      Warehouse Code
     C                     Z-ADDWL0201    WL0233           Consumed Item C
     C                     Z-ADDWL0201    WL0234           Item Code
     C                     Z-ADDWL0204    WL0235           OD Qty_Cnsmd Pi
     C                     Z-ADDWL0203    WL0236           OD Weight Sched
     C                     Z-ADD*ZERO     WL0237           ODS Quantity Sh
     C                     Z-ADD*ZERO     WL0238           ODS Weight Shor
     C                     Z-ADD*ZERO     WL0239           Deadline Depart
     C                     Z-ADD*ZERO     WL0240           Deadline Depart
     C                     EXSR TORVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TKEXIT    ENDSR
      /EJECT
     CSR         TLRVGN    BEGSR
      *================================================================
      * RTV Company for Ord   RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEC4NB    WQTL01           Order Number
      * Define keylist
     C           KRSTL     KLIST
     C                     KFLD           WQTL01           Order Number
      * Setup key
     C                     Z-ADDWL0210    WQTL01           Order Number
      * Establish starting position
     C           KRSTL     SETLL@BFCPY2                    *
     C           KRSTL     READE@BFCPY2                  90*
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWEAIC3    WL0209           Company Number
     C           KRSTL     READE@BFCPY2                  90*
     C                     ENDDO
      *================================================================
     CSR         TLEXIT    ENDSR
      /EJECT
     CSR         TMRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Ord/ItRT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD0         WL0216           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN TAAIC3    WQTM01           Company Number
     C           *LIKE     DEFN TAC4NB    WQTM02           Order Number
     C           *LIKE     DEFN TADPNB    WQTM03           Order Sequence
     C           *LIKE     DEFN TAUENB    WQTM04           Order Secondary
     C           *LIKE     DEFN TAJGDT    WQTM05           OD Production D
     C           *LIKE     DEFN TANUDT    WQTM06           Consumed Item C
     C           *LIKE     DEFN TAHGCD    WQTM07           Item Code
      * Define keylist
     C           KRSTM     KLIST
     C                     KFLD           WQTM01           Company Number
     C                     KFLD           WQTM02           Order Number
     C                     KFLD           WQTM03           Order Sequence
     C                     KFLD           WQTM04           Order Secondary
     C                     KFLD           WQTM05           OD Production D
     C                     KFLD           WQTM06           Consumed Item C
     C                     KFLD           WQTM07           Item Code
      * Setup key
     C                     Z-ADDWL0211    WQTM01           Company Number
     C                     Z-ADDWL0212    WQTM02           Order Number
     C                     Z-ADDWL0213    WQTM03           Order Sequence
     C                     Z-ADDWL0214    WQTM04           Order Secondary
     C                     Z-ADDWL0215    WQTM05           OD Production D
     C                     Z-ADDWL0217    WQTM06           Consumed Item C
     C                     Z-ADDWL0218    WQTM07           Item Code
      * Establish starting position
     C           KRSTM     SETLL@B6CPAG                    *
     C           KRSTM     READE@B6CPAG                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDTAOONY    WL0216           ODS Sequence Nu
     C           KRSTM     READE@B6CPAG                  90*
     C                     ENDDO
      *================================================================
     CSR         TMEXIT    ENDSR
      /EJECT
     CSR         TNRVGN    BEGSR
      *================================================================
      * Rtv Next Seq for Key  RT - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0224           ODS Sequence Nu
      * Declare restrictor key work fields
     C           *LIKE     DEFN TBAIC3    WQTN01           Company Number
     C           *LIKE     DEFN TBC4NB    WQTN02           Order Number
     C           *LIKE     DEFN TBDPNB    WQTN03           Order Sequence
     C           *LIKE     DEFN TBUENB    WQTN04           Order Secondary
     C           *LIKE     DEFN TBJGDT    WQTN05           OD Production D
      * Define keylist
     C           KRSTN     KLIST
     C                     KFLD           WQTN01           Company Number
     C                     KFLD           WQTN02           Order Number
     C                     KFLD           WQTN03           Order Sequence
     C                     KFLD           WQTN04           Order Secondary
     C                     KFLD           WQTN05           OD Production D
      * Setup key
     C                     Z-ADDWL0219    WQTN01           Company Number
     C                     Z-ADDWL0220    WQTN02           Order Number
     C                     Z-ADDWL0221    WQTN03           Order Sequence
     C                     Z-ADDWL0222    WQTN04           Order Secondary
     C                     Z-ADDWL0223    WQTN05           OD Production D
      * Establish starting position
     C           KRSTN     SETLL@B6CPNB                    *
     C           KRSTN     READE@B6CPNB                  90*
      * Data record not found
     C   90                MOVEL'USR3152' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDTBOONY    WL0224           ODS Sequence Nu
     C           KRSTN     READE@B6CPNB                  90*
     C                     ENDDO
      * USER: Exit processing
     C                     ADD  1         WL0224           ODS Sequence Nu
      *================================================================
     CSR         TNEXIT    ENDSR
      /EJECT
     CSR         TORVGN    BEGSR
      *================================================================
      * Upd OrdDtl Sch-Consmd RT - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0580  1        EDI Status 1
     C                     MOVEL*BLANK    WN0581  1        EDI Status 2
     C                     MOVEL*BLANK    WN0582  1        EDI Status 3
     C                     MOVEL*BLANK    WN0583  1        Record Status
     C                     Z-ADD*ZERO     WN0584  60       Job Time
     C                     MOVEL*BLANK    WN0585 10        User Id
     C                     MOVEL*BLANK    WN0586 10        Job Name
     C                     Z-ADD*ZERO     WN0587  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSTO     KLIST
     C                     KFLD           TBAIC3           Company Number
     C                     KFLD           TBC4NB           Order Number
     C                     KFLD           TBDPNB           Order Sequence
     C                     KFLD           TBUENB           Order Secondary
     C                     KFLD           TBJGDT           OD Production D
     C                     KFLD           TBOONY           ODS Sequence Nu
      * Setup key
     C                     Z-ADDWL0225    TBAIC3           Company Number
     C                     Z-ADDWL0226    TBC4NB           Order Number
     C                     Z-ADDWL0227    TBDPNB           Order Sequence
     C                     Z-ADDWL0228    TBUENB           Order Secondary
     C                     Z-ADDWL0229    TBJGDT           OD Production D
     C                     Z-ADDWL0230    TBOONY           ODS Sequence Nu
      * Establish starting position
     C           KRSTO     CHAIN@B6CPNB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3152' W0RTN   7
      * USER: Processing if Data record not found
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.OD Pieces Scheduled is Greater than zero
      *   |- c2    : PAR.OD Weight Scheduled is Greater than zero
      *   '-
     C           WL0235    IFGT 0                          *IF
     C           WL0236    ORGT 0                          *OR
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
     C                     EXSR TPCRRC
     C                     END                             *FI
     C                     GOTO TOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C           TBFLWG    ADD  WL0236    YL0030           OD Weight Sched
     C           TBIGQT    ADD  WL0235    YL0031           OD Qty_Cnsmd Pi
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.OD Pieces Scheduled is Less than or equal zero
      *   |- c2    : LCL.OD Weight Scheduled is Less than or equal zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0031    IFLE 0                          *IF
     C           YL0030    IFLE 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
     C                     EXSR TQDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
     C                     EXSR TRCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         TOEXIT    ENDSR
      /EJECT
     CSR         TPCRRC    BEGSR
      *================================================================
      * Crt OrdDtl Sch-Consmd CR - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B6CPNA
     C                     Z-ADDWL0225    TCAIC3           Company Number
     C                     Z-ADDWL0226    TCC4NB           Order Number
     C                     Z-ADDWL0227    TCDPNB           Order Sequence
     C                     Z-ADDWL0228    TCUENB           Order Secondary
     C                     Z-ADDWL0229    TCJGDT           OD Production D
     C                     Z-ADDWL0230    TCOONY           ODS Sequence Nu
     C                     Z-ADDWL0231    TCAODT           Scheduled Ship
     C                     MOVELWL0232    TCAJCD           Warehouse Code
     C                     Z-ADDWL0233    TCNUDT           Consumed Item C
     C                     Z-ADDWL0234    TCHGCD           Item Code
     C                     Z-ADDWL0235    TCIGQT           OD Qty_Cnsmd Pi
     C                     Z-ADDWL0236    TCFLWG           OD Weight Sched
     C                     Z-ADDWL0237    TCNSQT           ODS Quantity Sh
     C                     Z-ADDWL0238    TCJQWG           ODS Weight Shor
     C                     Z-ADDWL0239    TCNVDT           Deadline Depart
     C                     Z-ADDWL0240    TCBUTM           Deadline Depart
     C                     MOVELWN0580    TCUVST           EDI Status 1
     C                     MOVELWN0581    TCUWST           EDI Status 2
     C                     MOVELWN0582    TCUXST           EDI Status 3
     C                     MOVELWN0583    TCVSST           Record Status
     C                     Z-ADDWN0584    TCAATM           Job Time
     C                     MOVELWN0585    TCAYNA           User Id
     C                     MOVELWN0586    TCA0NA           Job Name
     C                     Z-ADDWN0587    TCAXDT           Job Date
      *
      * USER: Processing before Data update
      * SET Record Stamp CRTOB IF
     C                     MOVEL'A'       TCVSST           Record Status
     C                     Z-ADD##JTM     TCAATM           Job Time
     C                     MOVEL##USR     TCAYNA           User Id
     C                     MOVEL##PGM     TCA0NA           Job Name
     C                     Z-ADD##JDT     TCAXDT           Job Date
     C           KLCRTP    KLIST
     C                     KFLD           TCAIC3           Company Number
     C                     KFLD           TCC4NB           Order Number
     C                     KFLD           TCDPNB           Order Sequence
     C                     KFLD           TCUENB           Order Secondary
     C                     KFLD           TCJGDT           OD Production D
     C                     KFLD           TCOONY           ODS Sequence Nu
      * Check for duplicate primary key
     C           KLCRTP    SETLL@B6CPNA                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3153' W0RTN   7
      * Send message 'Order Detail Sched_Con EX'
     C                     MOVEL'USR3153' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO TPEXIT
     C                     ENDIF
      *
     C                     WRITE@B6CPNA                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         TPEXIT    ENDSR
      /EJECT
     CSR         TQDLRC    BEGSR
      *================================================================
      * Del OrdDtl Sch-Consmd DL - Order Detail Sched-Consmd  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B6CPNA
     C                     Z-ADDTBAIC3    TCAIC3           Company Number
     C                     Z-ADDTBC4NB    TCC4NB           Order Number
     C                     Z-ADDTBDPNB    TCDPNB           Order Sequence
     C                     Z-ADDTBUENB    TCUENB           Order Secondary
     C                     Z-ADDTBJGDT    TCJGDT           OD Production D
     C                     Z-ADDTBOONY    TCOONY           ODS Sequence Nu
      *
     C           KLDLTQ    KLIST
     C                     KFLD           TCAIC3           Company Number
     C                     KFLD           TCC4NB           Order Number
     C                     KFLD           TCDPNB           Order Sequence
     C                     KFLD           TCUENB           Order Secondary
     C                     KFLD           TCJGDT           OD Production D
     C                     KFLD           TCOONY           ODS Sequence Nu
     C           KLDLTQ    CHAIN@B6CPNA              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL009.
     C                     MOVEL'LBL009'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TQEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TQEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B6CPNA                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         TQEXIT    ENDSR
      /EJECT
     CSR         TRCHRC    BEGSR
      *================================================================
      * Chg OrdDtl Sch-Consmd CH - Order Detail Sched-Consmd  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0588  1        EDI Status 1
     C                     MOVEL*BLANK    WN0589  1        EDI Status 2
     C                     MOVEL*BLANK    WN0590  1        EDI Status 3
     C                     MOVEL*BLANK    WN0591  1        Record Status
     C                     Z-ADD*ZERO     WN0592  60       Job Time
     C                     MOVEL*BLANK    WN0593 10        User Id
     C                     MOVEL*BLANK    WN0594 10        Job Name
     C                     Z-ADD*ZERO     WN0595  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YGRDC   1
      *
      * Move key fields to @B6CPNA
     C                     Z-ADDTBAIC3    TCAIC3           Company Number
     C                     Z-ADDTBC4NB    TCC4NB           Order Number
     C                     Z-ADDTBDPNB    TCDPNB           Order Sequence
     C                     Z-ADDTBUENB    TCUENB           Order Secondary
     C                     Z-ADDTBJGDT    TCJGDT           OD Production D
     C                     Z-ADDTBOONY    TCOONY           ODS Sequence Nu
      *
     C           KLCHTR    KLIST
     C                     KFLD           TCAIC3           Company Number
     C                     KFLD           TCC4NB           Order Number
     C                     KFLD           TCDPNB           Order Sequence
     C                     KFLD           TCUENB           Order Secondary
     C                     KFLD           TCJGDT           OD Production D
     C                     KFLD           TCOONY           ODS Sequence Nu
     C           KLCHTR    CHAIN@B6CPNA              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'POB6CPL0'MDACP
     C                     MOVEL'@B6CPNA' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL010.
     C                     MOVEL'LBL010'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TREXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TREXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPOB61    YGRDCS
      * Move non-key fields to @B6CPNA
     C                     Z-ADDWL0231    TCAODT           Scheduled Ship
     C                     MOVELWL0232    TCAJCD    P      Warehouse Code
     C                     Z-ADDWL0233    TCNUDT           Consumed Item C
     C                     Z-ADDWL0234    TCHGCD           Item Code
     C                     Z-ADDYL0031    TCIGQT           OD Qty_Cnsmd Pi
     C                     Z-ADDYL0030    TCFLWG           OD Weight Sched
     C                     Z-ADDTBNSQT    TCNSQT           ODS Quantity Sh
     C                     Z-ADDTBJQWG    TCJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     TCNVDT           Deadline Depart
     C                     Z-ADD*ZERO     TCBUTM           Deadline Depart
      *
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YGRDCS
     C           YGRDC     ANDNE'N'
     C                     MOVE 'Y'       YGRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     TCAATM           Job Time
     C                     MOVEL##USR     TCAYNA           User Id
     C                     MOVEL##JOB     TCA0NA           Job Name
     C                     Z-ADD##JDT     TCAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPOB61    IFNE YGRDCS
     C           YGRDC     ANDNE'N'
     C                     MOVE 'Y'       YGRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YGRDC     IFEQ 'Y'
     C                     UPDAT@B6CPNA                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPOB6CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TREXIT    ENDSR
      /EJECT
     CSR         TSCHRC    BEGSR
      *================================================================
      * Chg Prod Allocated    CH - PS Prod Item Schedule  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0596  70       PS Available Sh
     C                     Z-ADD*ZERO     WN0597  92       PS Weight Plann
     C                     Z-ADD*ZERO     WN0598  70       PS Pieces Plann
     C                     Z-ADD*ZERO     WN0599  72       PS Pct of Carca
     C                     Z-ADD*ZERO     WN0600  92       PS Weight Inv O
     C                     Z-ADD*ZERO     WN0601  70       PS Pieces Inv O
     C                     Z-ADD*ZERO     WN0602  92       PS Weight Stand
     C                     Z-ADD*ZERO     WN0603  70       PS Pieces Stand
     C                     Z-ADD*ZERO     WN0604  92       PS Weight Conve
     C                     Z-ADD*ZERO     WN0605  70       PS Pieces Conve
     C                     Z-ADD*ZERO     WN0606  92       PS Weight Shipp
     C                     Z-ADD*ZERO     WN0607  70       PS Pieces Shipp
     C                     Z-ADD*ZERO     WN0608  92       PS Weight Prod
     C                     Z-ADD*ZERO     WN0609  70       PS Pieces Prod
     C                     Z-ADD*ZERO     WN0610  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0611  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0612  92       PS Weight Ship
     C                     Z-ADD*ZERO     WN0613  70       PS Pieces Ship
     C                     Z-ADD*ZERO     WN0614  92       PS Weight Inv A
     C                     Z-ADD*ZERO     WN0615  70       PS Pieces Inv A
     C                     Z-ADD*ZERO     WN0616 112       PS Unit Weight
     C                     Z-ADD*ZERO     WN0617  70       PS Pieces Whs T
     C                     Z-ADD*ZERO     WN0618 112       PS Weight Whs T
     C                     Z-ADD*ZERO     WN0619  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0620 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0621  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0622 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0623  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0624 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0625  70       PS Pieces Unuse
     C                     Z-ADD*ZERO     WN0626 112       PS Weight Unuse
     C                     Z-ADD*ZERO     WN0627  70       PS Pieces Unuse
     C                     MOVEL*BLANK    WN0628  3        PS Item Id
     C                     MOVEL*BLANK    WN0629  2        Warehouse Type
     C                     MOVEL*BLANK    WN0630  1        PS Lock Status
     C                     MOVEL*BLANK    WN0631  1        PS Export/Domes
     C                     MOVEL*BLANK    WN0632  1        PS Print On Sch
     C                     MOVEL*BLANK    WN0633  1        PS Piece Count
     C                     MOVEL*BLANK    WN0634  1        PS Unused Sts 1
     C                     MOVEL*BLANK    WN0635  1        PS Unused Sts 2
     C                     MOVEL*BLANK    WN0636  1        PS Unused Sts 3
     C                     MOVEL*BLANK    WN0637  1        PS Unused Sts 4
     C                     MOVEL*BLANK    WN0638  2        PS Item Sched N
     C                     MOVEL*BLANK    WN0639  3        PS Production W
     C                     Z-ADD*ZERO     WN0640  92       PS Weight Order
     C                     Z-ADD*ZERO     WN0641  70       PS Pieces Order
     C                     Z-ADD*ZERO     WN0642  92       PS Weight FC Ad
     C                     Z-ADD*ZERO     WN0643  70       PS Pieces FC Ad
     C                     Z-ADD*ZERO     WN0644  92       PS Weight FX Ad
     C                     Z-ADD*ZERO     WN0645  70       PS Pieces FX Ad
     C                     Z-ADD*ZERO     WN0646  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0647  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0648  92       PS Weight Avail
     C                     Z-ADD*ZERO     WN0649  70       PS Pieces Avail
     C                     Z-ADD*ZERO     WN0650  92       PS Weight Produ
     C                     Z-ADD*ZERO     WN0651  70       PS Pieces Produ
     C                     Z-ADD*ZERO     WN0652  92       PS Weight Fab N
     C                     Z-ADD*ZERO     WN0653  70       PS Pieces Fab N
     C                     Z-ADD*ZERO     WN0654  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0655  70       PS Pieces Sched
     C                     Z-ADD*ZERO     WN0656  92       PS Weight Sched
     C                     Z-ADD*ZERO     WN0657  70       PS Pieces Sched
     C                     MOVEL*BLANK    WN0658  6        Department Code
     C                     Z-ADD*ZERO     WN0659  30       Item Structure
     C                     Z-ADD*ZERO     WN0660  30       Item Structure
     C                     Z-ADD*ZERO     WN0661  30       Item Structure
     C                     MOVEL*BLANK    WN0662  6        Primal Group Co
     C                     MOVEL*BLANK    WN0663  1        EDI Status 1
     C                     MOVEL*BLANK    WN0664  1        EDI Status 2
     C                     MOVEL*BLANK    WN0665  1        EDI Status 3
     C                     MOVEL*BLANK    WN0666  1        Record Status
     C                     Z-ADD*ZERO     WN0667  60       Job Time
     C                     MOVEL*BLANK    WN0668 10        User Id
     C                     MOVEL*BLANK    WN0669 10        Job Name
     C                     Z-ADD*ZERO     WN0670  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YHRDC   1
      *
      * Move key fields to @I8CPUR
     C                     Z-ADDWRAIC3    WSAIC3           Company Number
     C                     MOVELWRV5ST    WSV5ST    P      Production Type
     C                     Z-ADDWRELDT    WSELDT           Production Date
     C                     Z-ADDWRHGCD    WSHGCD           Item Code
     C                     MOVELWRAJCD    WSAJCD    P      Warehouse Code
      *
     C           KLCHTS    KLIST
     C                     KFLD           WSAIC3           Company Number
     C                     KFLD           WSV5ST           Production Type
     C                     KFLD           WSELDT           Production Date
     C                     KFLD           WSHGCD           Item Code
     C                     KFLD           WSAJCD           Warehouse Code
     C           KLCHTS    CHAIN@I8CPUR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDI8CPL0'MDACP
     C                     MOVEL'@I8CPUR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL011.
     C                     MOVEL'LBL011'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO TSEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO TSEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDI81    YHRDCS
      * Move non-key fields to @I8CPUR
     C                     Z-ADDWRF8WG    WSF8WG           PS Avg Piece Wg
     C                     Z-ADDWN0521    WSOAWT           PS Weight Prod
     C                     Z-ADDWN0522    WSCDNB           PS Pieces Prod
      *
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YHRDCS
     C           YHRDC     ANDNE'N'
     C                     MOVE 'Y'       YHRDC
     C                     ENDIF
      * USER: Processing before Data update
      * UPS CHGOBJ Stamp      IF
     C                     Z-ADD##JTM     WSAATM           Job Time
     C                     MOVEL##USR     WSAYNA           User Id
     C                     MOVEL##PGM     WSA0NA           Job Name
     C                     Z-ADD##JDT     WSAXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QPDI81    IFNE YHRDCS
     C           YHRDC     ANDNE'N'
     C                     MOVE 'Y'       YHRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YHRDC     IFEQ 'Y'
     C                     UPDAT@I8CPUR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDI8CPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         TSEXIT    ENDSR
      /EJECT
     CSR         TTRVGN    BEGSR
      *================================================================
      * Clc Date (descending) RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN TDAIC3    WQTT01           Company Number
      * Define keylist
     C           KPSTT     KLIST
     C                     KFLD           WQTT01           Company Number
     C                     KFLD           TDBCDT           Post to G_L Dat
      * Define keylist
     C           KRSTT     KLIST
     C                     KFLD           WQTT01           Company Number
      * Setup key
     C                     Z-ADDWL0241    WQTT01           Company Number
     C                     Z-ADDWL0242    TDBCDT           Post to G_L Dat
      * Establish starting position
     C           KPSTT     SETLL@AFREPU                    *
     C           KRSTT     READE@AFREPU                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0242    IFEQ TDBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0245                     *IF
     C                     Z-ADDTDBCDT    WL0243           *Date1 (ending)
     C                     GOTO TTEXIT                     *QUIT
     C                     END                             *FI
     C           KRSTT     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         TTEXIT    ENDSR
      /EJECT
     CSR         TURVGN    BEGSR
      *================================================================
      * Clc Date (ascending)  RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUCNTU           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WTAIC3    WQTU01           Company Number
      * Define keylist
     C           KPSTU     KLIST
     C                     KFLD           WQTU01           Company Number
     C                     KFLD           WTBCDT           Post to G_L Dat
      * Define keylist
     C           KRSTU     KLIST
     C                     KFLD           WQTU01           Company Number
      * Setup key
     C                     Z-ADDWL0246    WQTU01           Company Number
     C                     Z-ADDWL0247    WTBCDT           Post to G_L Dat
      * Establish starting position
     C           KPSTU     SETLL@AFREYY                    *
     C           KRSTU     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Post to G/L Date EQ DB1.Post to G/L Date
     C           WL0247    IFEQ WTBCDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         WUCNTU           Count USR
     C                     END                             *FI
      * CASE: WRK.Count USR EQ PAR.*Duration (factor)
     C           WUCNTU    IFEQ WL0250                     *IF
     C                     Z-ADDWTBCDT    WL0248           *Date1 (ending)
     C                     GOTO TUEXIT                     *QUIT
     C                     END                             *FI
     C           KRSTU     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         TUEXIT    ENDSR
      /EJECT
     CSR         TVRVGN    BEGSR
      *================================================================
      * RTV Next Prod Date     RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQTV01           Company Number
      * Define keylist
     C           KPSTV     KLIST
     C                     KFLD           WQTV01           Company Number
     C                     KFLD           WABCDT           Post to G_L Dat
      * Define keylist
     C           KRSTV     KLIST
     C                     KFLD           WQTV01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQTV01           Company Number
     C                     Z-ADDP1GVDT    WABCDT           Post to G_L Dat
      * Establish starting position
     C           KPSTV     SETLL@AFREBE                    *
     C           KRSTV     READE@AFREBE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P1GVDT           Production Date
     C                     GOTO TVEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Plant Date of Last Order EQ PAR.Plant Date of Last Orde
     C           WABCDT    IFEQ P1GVDT                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Production Day Status is yes
     C           WAWAST    IFEQ 'Y'                        *IF
     C                     Z-ADDWABCDT    P1GVDT           Production Date
     C                     GOTO TVEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSTV     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         TVEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * FP1309 Age routines with From and To Date and number of Days
      *================================================================
      * Add new program ...find new fields changes  to the parm list
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * SCHEDULE AS ORDERED - WHICH DOES STILL HAPPEN
      *================================================================
      * FP1054 remove above rule -- alloc inv for any order, not just cur
      * CLC PA Age FrmToDates XF - Calendar  * 
     C                     CALL 'PNO7XFR'              90  CLC PA Age FrmT
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0092  30       Company Number
     C                     PARM YL0001    WQ0093  52       Chilling Time U
     C                     PARM P1HLDT    WQ0094  70       Scheduled Ship
     C                     PARM P1EIDT    WQ0095  70       Requested Deliv
     C                     PARM P1RINY    WQ0096  40       Item Age Days
     C                     PARM P1TIDT    WQ0097  70       Production Ovr
     C                     PARM P1TJDT    WQ0098  70       Production Ovr
     C           YL0008    PARM YL0008    WQ0099  70       Production AgeD
     C           YL0009    PARM YL0009    WQ0100  70       Production AgeD
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNO7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      *
     C                     Z-ADD*ZERO     WN0711 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0712 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0713 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0714  92       Weight Allocate
      *
      * UPD Allocate Inv      IF
      * FP1054 4/14/09 Changed to pass par.to date usr to RTV
      * Allocate Inventory
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date RGF LT JOB.*Job date
      *   |- c2    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0008    IFLT ##JDT                      *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * UPD Allocate Inv      RT - PS Prod Item Inventory  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0011           Company Number
     C                     Z-ADDP1HGCD    WL0012           Item Code
     C                     MOVELP1AJCD    WL0013    P      Warehouse Code
     C                     Z-ADDYL0008    WL0014           Production Date
     C                     Z-ADDP1AIWG    WL0015           Unit Weight
     C                     MOVELP2PCCT    WL0016    P      Piece Count Ite
     C                     Z-ADDP2BDNB    WL0017           Pieces Per Bag
     C                     Z-ADDP2BJNB    WL0018           Bags Per Unit
     C                     Z-ADDP1C4NB    WL0019           Order Number
     C                     Z-ADDP1DPNB    WL0020           Order Sequence
     C                     Z-ADDP1UENB    WL0021           Order Secondary
     C                     Z-ADDP1AVQT    WL0022           Quantity Ordere
     C                     Z-ADDP1D0WG    WL0023           Weight Ordered
     C                     Z-ADDP1CCQT    WL0024           Quantity Schedu
     C                     Z-ADDP1AUWG    WL0025           Weight Schedule
     C                     Z-ADDP1HWQT    WL0026           ATS Quantity Ne
     C                     Z-ADDP1ENWG    WL0027           ATS Weight Need
     C                     Z-ADDP1HLDT    WL0028           Ship Date USR
     C                     Z-ADD##JDT     WL0029           To Date
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0024    P1CCQT           Quantity Schedu
     C                     Z-ADDWL0025    P1AUWG           Weight Schedule
     C                     Z-ADDWL0026    P1HWQT           ATS Quantity Ne
     C                     Z-ADDWL0027    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * R11918 DN 10/19/17-Commented out 'Rtv CIE Alloc Method  RT' & mov
      * 07/13/09 RMC allow backwards-JIT and forward-ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0003    IFEQ 'F'                        *IF
      * Early as Possible: Schedule as Ordered Adjust From & To Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1GVDT           Production Date
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
     C                     Z-ADDP1GVDT    P1GWDT           Production Date
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1GVDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0034    P      Production Day
      * Retrieve Next Production Date
      * CASE: LCL.Production Day Status is no
     C           YL0034    IFEQ 'N'                        *IF
      * RTV Next Prod Date     RT - Calendar  * 
     C                     EXSR TVRVGN
     C                     END                             *FI
      * CASE: PAR.Production Date RGF GT PAR.Production Date RGT
     C           P1GVDT    IFGT P1GWDT                     *IF
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1GWDT           Production Date
     C                     END                             *FI
     C                     END                             *FI
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0016           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0017           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0018           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0019           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0715  1        Production Type
     C                     Z-ADD*ZERO     WN0716 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0717 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0718  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0719 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0720  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0721  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0722  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0723  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0724  52       Production Yiel
     C                     Z-ADD*ZERO     WN0725  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0726 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UOSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0722           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0722           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UPSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0715           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0715    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0715    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0717    WL0078           ATS Weight Avai
     C                     Z-ADDWN0718    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0722    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0723           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0717           ATS Weight Avai
     C                     Z-ADDWL0079    WN0718           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0718    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0717    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0716    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0716    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0716                     *IF
     C                     ADD  WN0716    P1CCQT           Quantity Schedu
     C           WN0716    MULT P1AIWG    WN0717           ATS Weight Avai
     C                     ADD  WN0717    P1AUWG           Weight Schedule
     C                     Z-ADDWN0717    WN0720           Weight Allocate
     C                     Z-ADDWN0716    WN0719           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0716                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0720           Weight Allocate
     C                     Z-ADDP1HWQT    WN0719           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0719    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0719    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0721           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0721    MULT WN0723    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0720           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0720    WL0090           Weight Allocate
     C                     Z-ADDWN0719    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0715    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0720    WL0098           Weight Allocate
     C                     Z-ADDWN0721    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0715    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0721    WL0196           Pieces Schedule
     C                     Z-ADDWN0720    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0715    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0720    WL0203           Weight Allocate
     C                     Z-ADDWN0721    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           Quantity Alloca
     C                     Z-ADD*ZERO     WN0720           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0715           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0715    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0715    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0717    WL0078           ATS Weight Avai
     C                     Z-ADDWN0718    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0722    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0723           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0717           ATS Weight Avai
     C                     Z-ADDWL0079    WN0718           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0718    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0717    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0716    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0716    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0716                     *IF
     C                     ADD  WN0716    P1CCQT           Quantity Schedu
     C           WN0716    MULT P1AIWG    WN0717           ATS Weight Avai
     C                     ADD  WN0717    P1AUWG           Weight Schedule
     C                     Z-ADDWN0717    WN0720           Weight Allocate
     C                     Z-ADDWN0716    WN0719           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0716                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0720           Weight Allocate
     C                     Z-ADDP1HWQT    WN0719           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0719    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0719    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0721           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0721    MULT WN0723    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0720           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0720    WL0090           Weight Allocate
     C                     Z-ADDWN0719    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0715    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0720    WL0098           Weight Allocate
     C                     Z-ADDWN0721    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0715    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0721    WL0196           Pieces Schedule
     C                     Z-ADDWN0720    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0715    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0720    WL0203           Weight Allocate
     C                     Z-ADDWN0721    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           Quantity Alloca
     C                     Z-ADD*ZERO     WN0720           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0722           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0722           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UQSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0715           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0715    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0715           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0715    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0717    WL0078           ATS Weight Avai
     C                     Z-ADDWN0718    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0722    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0723           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0717           ATS Weight Avai
     C                     Z-ADDWL0079    WN0718           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0718    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0717    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0716           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0716    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0716           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0716    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0716                     *IF
     C                     ADD  WN0716    P1CCQT           Quantity Schedu
     C           WN0716    MULT P1AIWG    WN0717           ATS Weight Avai
     C                     ADD  WN0717    P1AUWG           Weight Schedule
     C                     Z-ADDWN0717    WN0720           Weight Allocate
     C                     Z-ADDWN0716    WN0719           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0716                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0720           Weight Allocate
     C                     Z-ADDP1HWQT    WN0719           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0719    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0719    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0721           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0721    MULT WN0723    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0720           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0720    WL0090           Weight Allocate
     C                     Z-ADDWN0719    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0715    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0720    WL0098           Weight Allocate
     C                     Z-ADDWN0721    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0715    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0721    WL0196           Pieces Schedule
     C                     Z-ADDWN0720    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0715    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0720    WL0203           Weight Allocate
     C                     Z-ADDWN0721    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0719           Quantity Alloca
     C                     Z-ADD*ZERO     WN0720           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0016    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0017    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0018    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0019    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Now allocate production normally
      *
     C                     MOVEL*BLANK    WN0727  1        Production Type
     C                     Z-ADD*ZERO     WN0728 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0729 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0730  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0731 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0732  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0733  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0734  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0735  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0736  52       Production Yiel
     C                     Z-ADD*ZERO     WN0737  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0738 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR URSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0734           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0734           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR USSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0727           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0727    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0727    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0729    WL0078           ATS Weight Avai
     C                     Z-ADDWN0730    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0734    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0735           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0729           ATS Weight Avai
     C                     Z-ADDWL0079    WN0730           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0730    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0729    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0728    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0728    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0728                     *IF
     C                     ADD  WN0728    P1CCQT           Quantity Schedu
     C           WN0728    MULT P1AIWG    WN0729           ATS Weight Avai
     C                     ADD  WN0729    P1AUWG           Weight Schedule
     C                     Z-ADDWN0729    WN0732           Weight Allocate
     C                     Z-ADDWN0728    WN0731           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0728                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0732           Weight Allocate
     C                     Z-ADDP1HWQT    WN0731           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0731    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0731    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0733           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0733    MULT WN0735    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0732           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0732    WL0090           Weight Allocate
     C                     Z-ADDWN0731    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0727    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0732    WL0098           Weight Allocate
     C                     Z-ADDWN0733    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0727    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0733    WL0196           Pieces Schedule
     C                     Z-ADDWN0732    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0727    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0732    WL0203           Weight Allocate
     C                     Z-ADDWN0733    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           Quantity Alloca
     C                     Z-ADD*ZERO     WN0732           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0727           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0727    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0727    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0729    WL0078           ATS Weight Avai
     C                     Z-ADDWN0730    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0734    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0735           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0729           ATS Weight Avai
     C                     Z-ADDWL0079    WN0730           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0730    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0729    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0728    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0728    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0728                     *IF
     C                     ADD  WN0728    P1CCQT           Quantity Schedu
     C           WN0728    MULT P1AIWG    WN0729           ATS Weight Avai
     C                     ADD  WN0729    P1AUWG           Weight Schedule
     C                     Z-ADDWN0729    WN0732           Weight Allocate
     C                     Z-ADDWN0728    WN0731           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0728                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0732           Weight Allocate
     C                     Z-ADDP1HWQT    WN0731           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0731    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0731    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0733           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0733    MULT WN0735    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0732           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0732    WL0090           Weight Allocate
     C                     Z-ADDWN0731    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0727    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0732    WL0098           Weight Allocate
     C                     Z-ADDWN0733    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0727    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0733    WL0196           Pieces Schedule
     C                     Z-ADDWN0732    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0727    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0732    WL0203           Weight Allocate
     C                     Z-ADDWN0733    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           Quantity Alloca
     C                     Z-ADD*ZERO     WN0732           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0734           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0734           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UTSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0727           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0727    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0727           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0727    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0729    WL0078           ATS Weight Avai
     C                     Z-ADDWN0730    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0734    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0735           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0729           ATS Weight Avai
     C                     Z-ADDWL0079    WN0730           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0730    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0729    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0728           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0728    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0728           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0728    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0728                     *IF
     C                     ADD  WN0728    P1CCQT           Quantity Schedu
     C           WN0728    MULT P1AIWG    WN0729           ATS Weight Avai
     C                     ADD  WN0729    P1AUWG           Weight Schedule
     C                     Z-ADDWN0729    WN0732           Weight Allocate
     C                     Z-ADDWN0728    WN0731           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0728                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0732           Weight Allocate
     C                     Z-ADDP1HWQT    WN0731           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0731    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0731    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0733           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0733    MULT WN0735    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0732           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0732    WL0090           Weight Allocate
     C                     Z-ADDWN0731    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0727    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0732    WL0098           Weight Allocate
     C                     Z-ADDWN0733    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0727    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0733    WL0196           Pieces Schedule
     C                     Z-ADDWN0732    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0727    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0732    WL0203           Weight Allocate
     C                     Z-ADDWN0733    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0731           Quantity Alloca
     C                     Z-ADD*ZERO     WN0732           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0101  3        Warehouse Code
     C                     PARM P1AIC3    WQ0102  30       Company Number
     C                     PARM P1HGCD    WQ0103  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0104  70       Production Date
     C                     PARM P2ADCD    WQ0105  2        UOM Primary
     C                     PARM P1AIWG    WQ0106 112       Unit Weight
     C                     PARM P2CHTM    WQ0107  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0108  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0109  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0110  70       Bags Per Unit
     C                     PARM P3WPST    WQ0111  2        Warehouse Type
     C                     PARM P3T1ST    WQ0112  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0113  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0114  70       Order Number
     C                     PARM P1DPNB    WQ0115  30       Order Sequence
     C                     PARM P1UENB    WQ0116  30       Order Secondary
     C                     PARM P1GVDT    WQ0117  70       Production Date
     C                     PARM P1GWDT    WQ0118  70       Production Date
     C                     PARM P1AVQT    WQ0119 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0120 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0121 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0122 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0123 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0124 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0125  70       Ship Date USR
     C                     PARM P1QJST    WQ0126  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0127 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0128  3        Order From Ware
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      *  7/13/09   Default is Backward-JIT
      * R11918 DN 10/19/17-Commented out case stmt & moved below.
      * R11918 DN 10/19/17-Do Not Process Allocation if 'I=Suspended Inve
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Allocation Method is Suspended-Inventory Only
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'I'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Just In Time: Schedule as Ordered
      * CASE: PAR.Production Date RGT GE PAR.Production Date RGF
     C           P1GWDT    IFGE P1GVDT                     *IF
     C                     Z-ADDP1GWDT    P1GVDT           Production Date
      * Allocate Production or Standard
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * IF ord's whse <> prodctn whse, 1st move prod from prod whse to or
      * CASE: PAR.Warehouse Code NE PAR.Production Warehouse Code
     C           P1AJCD    IFNE P3AOCD                     *IF
     C                     Z-ADDP1HWQT    YL0016           ATS Quantity Ne
     C                     Z-ADDP1ENWG    YL0017           ATS Weight Need
     C                     Z-ADDP1CCQT    YL0018           Quantity Schedu
     C                     Z-ADDP1AUWG    YL0019           Weight Schedule
      *
     C                     MOVEL*BLANK    WN0739  1        Production Type
     C                     Z-ADD*ZERO     WN0740 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0741 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0742  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0743 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0744  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0745  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0746  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0747  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0748  52       Production Yiel
     C                     Z-ADD*ZERO     WN0749  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0750 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UUSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0746           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0746           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UVSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0739           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0739    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0739    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0741    WL0078           ATS Weight Avai
     C                     Z-ADDWN0742    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0746    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0747           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0741           ATS Weight Avai
     C                     Z-ADDWL0079    WN0742           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0742    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0741    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0740    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0740    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0740                     *IF
     C                     ADD  WN0740    P1CCQT           Quantity Schedu
     C           WN0740    MULT P1AIWG    WN0741           ATS Weight Avai
     C                     ADD  WN0741    P1AUWG           Weight Schedule
     C                     Z-ADDWN0741    WN0744           Weight Allocate
     C                     Z-ADDWN0740    WN0743           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0740                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0744           Weight Allocate
     C                     Z-ADDP1HWQT    WN0743           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0743    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0743    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0745           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0745    MULT WN0747    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0744           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0744    WL0090           Weight Allocate
     C                     Z-ADDWN0743    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0739    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0744    WL0098           Weight Allocate
     C                     Z-ADDWN0745    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0739    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0745    WL0196           Pieces Schedule
     C                     Z-ADDWN0744    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0739    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0744    WL0203           Weight Allocate
     C                     Z-ADDWN0745    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           Quantity Alloca
     C                     Z-ADD*ZERO     WN0744           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0739           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0739    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0739    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0741    WL0078           ATS Weight Avai
     C                     Z-ADDWN0742    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0746    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0747           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0741           ATS Weight Avai
     C                     Z-ADDWL0079    WN0742           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0742    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0741    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0740    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0740    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0740                     *IF
     C                     ADD  WN0740    P1CCQT           Quantity Schedu
     C           WN0740    MULT P1AIWG    WN0741           ATS Weight Avai
     C                     ADD  WN0741    P1AUWG           Weight Schedule
     C                     Z-ADDWN0741    WN0744           Weight Allocate
     C                     Z-ADDWN0740    WN0743           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0740                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0744           Weight Allocate
     C                     Z-ADDP1HWQT    WN0743           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0743    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0743    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0745           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0745    MULT WN0747    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0744           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0744    WL0090           Weight Allocate
     C                     Z-ADDWN0743    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0739    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0744    WL0098           Weight Allocate
     C                     Z-ADDWN0745    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0739    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0745    WL0196           Pieces Schedule
     C                     Z-ADDWN0744    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0739    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0744    WL0203           Weight Allocate
     C                     Z-ADDWN0745    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           Quantity Alloca
     C                     Z-ADD*ZERO     WN0744           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0746           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0746           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UWSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0739           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0068           Company Number
     C                     MOVELWN0739    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0739           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0072           Company Number
     C                     MOVELWN0739    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP3AOCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0741    WL0078           ATS Weight Avai
     C                     Z-ADDWN0742    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0746    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0747           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0741           ATS Weight Avai
     C                     Z-ADDWL0079    WN0742           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0742    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0741    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0740           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0740    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0740           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0740    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0740                     *IF
     C                     ADD  WN0740    P1CCQT           Quantity Schedu
     C           WN0740    MULT P1AIWG    WN0741           ATS Weight Avai
     C                     ADD  WN0741    P1AUWG           Weight Schedule
     C                     Z-ADDWN0741    WN0744           Weight Allocate
     C                     Z-ADDWN0740    WN0743           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0740                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0744           Weight Allocate
     C                     Z-ADDP1HWQT    WN0743           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0743    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0743    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0745           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0745    MULT WN0747    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0744           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP3AOCD    WL0087    P      Warehouse Code
     C                     MOVELP3AOCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0744    WL0090           Weight Allocate
     C                     Z-ADDWN0743    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P3AOCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0093           Company Number
     C                     MOVELWN0739    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP3AOCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0744    WL0098           Weight Allocate
     C                     Z-ADDWN0745    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'N'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0739    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0745    WL0196           Pieces Schedule
     C                     Z-ADDWN0744    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0198           Company Number
     C                     MOVELWN0739    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP3AOCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0744    WL0203           Weight Allocate
     C                     Z-ADDWN0745    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'N'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0743           Quantity Alloca
     C                     Z-ADD*ZERO     WN0744           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0002    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     Z-ADDYL0016    P1HWQT           ATS Quantity Ne
     C                     Z-ADDYL0017    P1ENWG           ATS Weight Need
     C                     Z-ADDYL0018    P1CCQT           Quantity Schedu
     C                     Z-ADDYL0019    P1AUWG           Weight Schedule
     C                     END                             *FI
      * Now allocate production normally
      *
     C                     MOVEL*BLANK    WN0751  1        Production Type
     C                     Z-ADD*ZERO     WN0752 110       ATS Quantity Av
     C                     Z-ADD*ZERO     WN0753 112       ATS Weight Avai
     C                     Z-ADD*ZERO     WN0754  70       ATS Pieces Avai
     C                     Z-ADD*ZERO     WN0755 112       Quantity Alloca
     C                     Z-ADD*ZERO     WN0756  92       Weight Allocate
     C                     Z-ADD*ZERO     WN0757  70       Pieces Allocate
     C                     Z-ADD*ZERO     WN0758  52       Chilling Time U
     C                     Z-ADD*ZERO     WN0759  92       PS Avg Piece Wg
     C                     Z-ADD*ZERO     WN0760  52       Production Yiel
     C                     Z-ADD*ZERO     WN0761  70       SM Pieces Need
     C                     Z-ADD*ZERO     WN0762 112       SM Weight Need
      *
      * UPD Allocate Prd      IF
      * documentation
     C                     EXSR UXSUBR                     documentation
      * CASE: PAR.PSAA Program Name is Sched as ordered-Override
     C           P1BXVN    IFEQ @CN,001                    *IF
      * IF called from sched override routine, dont get block order flag
     C                     MOVEL*BLANK    YL0020           Block Order Fla
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Block Order Flag  RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0008           Company Number
     C                     Z-ADDP1C4NB    WL0009           Order Number
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0010    YL0020    P      Block Order Fla
     C                     END                             *FI
      * FRESH - Alloc Forward / Backward per Item Allocation Method
      * CASE: PAR.Warehouse Type is Fresh
     C           P3WPST    IFEQ 'FR'                       *IF
      * Rtv CIE Alloc Method  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDP1HGCD    WL0005           Item Code
     C                     Z-ADDP1C4NB    WL0007           Order Number
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    YL0021    P      Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0758           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0758           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UYSUBR                     DOC:  Allocatio
      * CASE: Allocation Method is Forward - ASAP
      * CASE: LCL.Allocation Method is Forward - ASAP
     C           YL0021    IFEQ 'F'                        *IF
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     P1ELDT           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GVDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte <= Prd Dte RGT & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date LE LCL.Production Date To
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFLE YL0022                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0751           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0751    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0751    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0753    WL0078           ATS Weight Avai
     C                     Z-ADDWN0754    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0758    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0759           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0753           ATS Weight Avai
     C                     Z-ADDWL0079    WN0754           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0754    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0753    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0752    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0752    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0752                     *IF
     C                     ADD  WN0752    P1CCQT           Quantity Schedu
     C           WN0752    MULT P1AIWG    WN0753           ATS Weight Avai
     C                     ADD  WN0753    P1AUWG           Weight Schedule
     C                     Z-ADDWN0753    WN0756           Weight Allocate
     C                     Z-ADDWN0752    WN0755           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0752                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0756           Weight Allocate
     C                     Z-ADDP1HWQT    WN0755           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0755    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0755    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0757           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0757    MULT WN0759    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0756           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0756    WL0090           Weight Allocate
     C                     Z-ADDWN0755    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0751    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0756    WL0098           Weight Allocate
     C                     Z-ADDWN0757    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0751    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0757    WL0196           Pieces Schedule
     C                     Z-ADDWN0756    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Upd production by input Warehouse, Co AND order dtl sched-
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0751    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0756    WL0203           Weight Allocate
     C                     Z-ADDWN0757    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           Quantity Alloca
     C                     Z-ADD*ZERO     WN0756           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           1         IFLT 0                          *IF
     C           1         MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           1         IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD1         WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           1         IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
      * CASE: Allocation Method is Backwards - JIT
      * CASE: LCL.Allocation Method is Backwards - JIT
     C           YL0021    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * PAR.Production Date = PAR.Production Date + CON.1 *DAYS
     C           P1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P1ELDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P1ELDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0751           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0751    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0751    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0753    WL0078           ATS Weight Avai
     C                     Z-ADDWN0754    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0758    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0759           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0753           ATS Weight Avai
     C                     Z-ADDWL0079    WN0754           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0754    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0753    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0752    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0752    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0752                     *IF
     C                     ADD  WN0752    P1CCQT           Quantity Schedu
     C           WN0752    MULT P1AIWG    WN0753           ATS Weight Avai
     C                     ADD  WN0753    P1AUWG           Weight Schedule
     C                     Z-ADDWN0753    WN0756           Weight Allocate
     C                     Z-ADDWN0752    WN0755           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0752                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0756           Weight Allocate
     C                     Z-ADDP1HWQT    WN0755           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0755    IFGT 0                          *IF
      * 8/05/11  RMC  MOVED UP HERE FROM BELOW ORDER DTL SCHED UPDATE
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WN0755    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0757           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0757    MULT WN0759    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0756           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0756    WL0090           Weight Allocate
     C                     Z-ADDWN0755    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * FOR BASE ONLY  6/02/09 maybe
      * CASE: PAR.Base/Conv/Loss Item is Base
     C           P2QZCD    IFEQ 'B'                        *IF
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0751    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0756    WL0098           Weight Allocate
     C                     Z-ADDWN0757    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0751    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0757    WL0196           Pieces Schedule
     C                     Z-ADDWN0756    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0751    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0756    WL0203           Weight Allocate
     C                     Z-ADDWN0757    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           Quantity Alloca
     C                     Z-ADD*ZERO     WN0756           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
      * FROZEN - allocate backwards - new for FP1054
      * CASE: PAR.Warehouse Type is Frozen
     C           P3WPST    IFEQ 'FZ'                       *IF
     C                     MOVEL'B'       YL0033           Allocation Meth
      * Chilling Time
      * CASE: PAR.Warehouse Std Chill Time is yes
     C           P3T1ST    IFEQ 'Y'                        *IF
     C                     Z-ADDP3DBNB    WN0758           Chilling Time U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2CHTM    WN0758           Chilling Time U
     C                     END                             *FI
     C                     Z-ADDP1GWDT    YL0022           Production Date
      * DOC:  Allocation
     C                     EXSR UZSUBR                     DOC:  Allocatio
      * CASE: LCL.Allocation Method USR is Backward
     C           YL0033    IFEQ 'B'                        *IF
      * For backwards start with the TO date, then -1 day until FROM date
     C                     Z-ADDP1GVDT    YL0032           Production Date
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
      * Starting Production Date
      * CASE: PAR.Production Date RGF LT JOB.*Job date
     C           P1GVDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     YL0032           Production Date
      * CASE: PAR.Production Date RGT LT JOB.*Job date
     C           P1GWDT    IFLT ##JDT                      *IF
     C                     Z-ADDP1GWDT    YL0022           Production Date
     C                     END                             *FI
      * CASE: LCL.Block Order Flag is Block Order
     C           YL0020    IFEQ 'B'                        *IF
      * LCL.Production Date RGF = LCL.Production Date RGF + CON.1 *DAYS
     C           YL0032    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0032
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0032
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GWDT    P1ELDT           Production Date
     C                     END                             *FI
      * ITR:  Allocate Availability based on AGE CODE.
      * DO WHILE: Prd Dte >= Prd Dte RGF & Need > 0
      *  - c1 AND c3
      *   |- c1    : PAR.Production Date GE LCL.Production Date RGF
      *   |- c3    : PAR.ATS Quantity Need USR is Greater than zero
      *   '-
     C                     DO   *HIVAL                     *DOW
     C                     MOVEL'0'       Y0CX01  1
     C           P1ELDT    IFGE YL0032                     *IF
     C           P1HWQT    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
     C                     LEAVE
     C                     END                             *FI
      * Rtv Prd Day Sts       RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0061           Company Number
     C                     Z-ADDP1ELDT    WL0062           Post to G_L Dat
     C                     EXSR SURVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0063    YL0023    P      Production Day
      * FP1054 Check day for a production day per company item ext file
      * Rtv CIE Prod Day Sts  RT - Company Item Ext  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0064           Company Number
     C                     Z-ADDP1HGCD    WL0065           Item Code
     C                     Z-ADDP1ELDT    WL0066           Production Date
     C                     MOVELYL0024    WL0067    P      Production Day
     C                     EXSR SVRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0067    YL0024    P      Production Day
      * Allocate Production
      * CASE:
      *  - c1ANDc2
      *   |- c1    : LCL.Production Day Status is yes
      *   |- c2    : LCL.Production Day Status USR is not no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0023    IFEQ 'Y'                        *IF
     C           YL0024    IFEQ *BLANK                     *IF
     C           YL0024    OREQ 'Y'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Determine Production Type
      * CASE: PAR.Production Date EQ JOB.*Job date
     C           P1ELDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       WN0751           Production Type
      * Val Sched Existance   RT - PS Prod Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0068           Company Number
     C                     MOVELWN0751    WL0069    P      Production Type
     C                     Z-ADDP1ELDT    WL0070           Production Date
     C                     EXSR SXRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0071    WUWXST    P      Record Found US
      * Set to Plan if record not found
      * CASE: WRK.Record Found USR is Record Not Found
     C           WUWXST    IFEQ 'N'                        *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Production Date GT JOB.*Job date
     C           P1ELDT    IFGT ##JDT                      *IF
     C                     MOVEL'P'       WN0751           Production Type
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 Use input Warehouse and co
      * Rtv Avail Production  RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0072           Company Number
     C                     MOVELWN0751    WL0073    P      Production Type
     C                     Z-ADDP1ELDT    WL0074           Production Date
     C                     Z-ADDP1HGCD    WL0075           Item Code
     C                     MOVELP1AJCD    WL0076    P      Warehouse Code
     C                     Z-ADDWN0753    WL0078           ATS Weight Avai
     C                     Z-ADDWN0754    WL0079           ATS Pieces Avai
     C                     Z-ADDWN0758    WL0080           Chilling Time U
     C                     EXSR SYRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0077    WN0759           PS Avg Piece Wg
     C                     Z-ADDWL0078    WN0753           ATS Weight Avai
     C                     Z-ADDWL0079    WN0754           ATS Pieces Avai
      * Quantity Available
      * CASE: Piece Count = Y
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ 'Y'                        *IF
     C           P2BDNB    IFGT 0                          *IF
     C           P2BJNB    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.ATS Pieces Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           P2BDNB    MULT P2BJNB    W0WJ01           *Synon (15,0) w
     C           WN0754    DIV  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: Piece Count = N
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2PCCT    IFEQ *BLANK                     *IF
     C           P2PCCT    OREQ 'N'
     C           P1AIWG    IFGT 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ATS Quantity Avail USR
      * PAR.ATS Quantity Avail USR =
      *    *COMPUTE (x1 / x2)
      * x1    : PAR.ATS Weight Available USR
      * /     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Unit Weight
     C           WN0753    DIV  P1AIWG    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0752           ATS Quantity Av
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * Schedule As Ordered
      * CASE: PAR.ATS Adj Type USR 2 is Sched/Alloc As Ordered
     C           P1QJST    IFEQ 'AO'                       *IF
      * CASE: PAR.ATS Quantity Avail USR LT PAR.ATS Quantity Need USR
     C           WN0752    IFLT P1HWQT                     *IF
     C                     Z-ADDP1HWQT    WN0752           ATS Quantity Av
     C                     END                             *FI
     C                     END                             *FI
      * If production avail allocate
      * CASE: PAR.ATS Quantity Avail USR is GT Zero
     C           WN0752    IFGT 0                          *IF
      * Allocate Available Quantity
      * CASE: PAR.ATS Quantity Need USR GT PAR.ATS Quantity Avail USR
     C           P1HWQT    IFGT WN0752                     *IF
     C                     ADD  WN0752    P1CCQT           Quantity Schedu
     C           WN0752    MULT P1AIWG    WN0753           ATS Weight Avai
     C                     ADD  WN0753    P1AUWG           Weight Schedule
     C                     Z-ADDWN0753    WN0756           Weight Allocate
     C                     Z-ADDWN0752    WN0755           Quantity Alloca
     C                     ELSE
      * CASE: PAR.ATS Quantity Need USR LE PAR.ATS Quantity Avail USR
     C           P1HWQT    IFLE WN0752                     *IF
     C                     ADD  P1HWQT    P1CCQT           Quantity Schedu
     C           P1HWQT    MULT P1AIWG    P1ENWG           ATS Weight Need
     C                     ADD  P1ENWG    P1AUWG           Weight Schedule
     C                     Z-ADDP1ENWG    WN0756           Weight Allocate
     C                     Z-ADDP1HWQT    WN0755           Quantity Alloca
     C                     END                             *FI
     C                     END                             *FI
      * If quantity allocated is GT zero
      * CASE: PAR.Quantity Allocated USR is GT Zero
     C           WN0755    IFGT 0                          *IF
      * 8/05/11 RMC MOVE UP HERE FROM BELOW ORDER DTL SCHED UPD
      * CASE: PAR.Piece Count Item is yes
     C           P2PCCT    IFEQ 'Y'                        *IF
      * Pieces Allocated
      * PAR.Pieces Allocated USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : PAR.Quantity Allocated USR
      * *     : PGM.*Synon (15,0) work field *
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *
      * x3    : PAR.Bags Per Unit
     C           WN0755    MULT P2BDNB    W0WJ01           *Synon (15,0) w
     C           W0WJ01    MULT P2BJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0757           Pieces Allocate
      * Weight Allocated
      * PAR.Weight Allocated USR =
      *    *COMPUTE (x1 * x2)
      * x1    : PAR.Pieces Allocated USR
      * *     : PGM.*Synon (15,2) work field *
      * x2    : PAR.PS Avg Piece Wgt
     C           WN0757    MULT WN0759    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WN0756           Weight Allocate
     C                     END                             *FI
      * CASE: PAR.Warehouse Code EQ PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFEQ P1AJCD                     *IF
      * Upd Ord Detail Sched  RT - Order Detail Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0081           Company Number
     C                     Z-ADDP1C4NB    WL0082           Order Number
     C                     Z-ADDP1DPNB    WL0083           Order Sequence
     C                     Z-ADDP1UENB    WL0084           Order Secondary
     C                     Z-ADDP1ELDT    WL0085           OD Production D
     C                     Z-ADDP1HLDT    WL0086           Scheduled Ship
     C                     MOVELP1AJCD    WL0087    P      Warehouse Code
     C                     MOVELP1AJCD    WL0088    P      Order From Ware
     C                     Z-ADDP1HGCD    WL0089           Item Code
     C                     Z-ADDWN0756    WL0090           Weight Allocate
     C                     Z-ADDWN0755    WL0091           Quantity Alloca
     C                     MOVELP2QZCD    WL0092    P      Base_Conv_Loss
     C                     EXSR TARVGN
     C                     END                             *FI
      * FP1054  ADD sched  TO PAR.WAREHOUSE CODE PASS USR's standard prod
      * CASE: PAR.Warehouse Code NE PAR.Warehouse Code PASS   USR
     C           P1AJCD    IFNE P1AJCD                     *IF
      * FP1054 Use input Warehouse and co
      * Upd Prod Whse Txfr    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0093           Company Number
     C                     MOVELWN0751    WL0094    P      Production Type
     C                     Z-ADDP1ELDT    WL0095           Production Date
     C                     Z-ADDP1HGCD    WL0096           Item Code
     C                     MOVELP1AJCD    WL0097    P      Warehouse Code
     C                     Z-ADDWN0756    WL0098           Weight Allocate
     C                     Z-ADDWN0757    WL0099           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0100           Order Number
     C                     Z-ADDP1DPNB    WL0101           Order Sequence
     C                     Z-ADDP1UENB    WL0102           Order Secondary
     C                     MOVEL'Y'       WL0103    P      Status Flag 19
     C                     EXSR TCRVGN
      * use order's warehouse and company
      * BPS Upd Pcs/Wgt Std   RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0191           Company Number
     C                     MOVELWN0751    WL0192    P      Production Type
     C                     Z-ADDP1ELDT    WL0193           Production Date
     C                     Z-ADDP1HGCD    WL0194           Item Code
     C                     MOVELP1AJCD    WL0195    P      Warehouse Code
     C                     Z-ADDWN0757    WL0196           Pieces Schedule
     C                     Z-ADDWN0756    WL0197           Weight Schedule
     C                     EXSR TIRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 Use input Warehouse and co
      * Upd Prod Allocated    RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0198           Company Number
     C                     MOVELWN0751    WL0199    P      Production Type
     C                     Z-ADDP1ELDT    WL0200           Production Date
     C                     Z-ADDP1HGCD    WL0201           Item Code
     C                     MOVELP1AJCD    WL0202    P      Warehouse Code
     C                     Z-ADDWN0756    WL0203           Weight Allocate
     C                     Z-ADDWN0757    WL0204           Pieces Allocate
     C                     Z-ADDP1C4NB    WL0205           Order Number
     C                     Z-ADDP1DPNB    WL0206           Order Sequence
     C                     Z-ADDP1UENB    WL0207           Order Secondary
     C                     MOVEL'Y'       WL0208    P      Status Flag 19
     C                     EXSR TKRVGN
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WN0755           Quantity Alloca
     C                     Z-ADD*ZERO     WN0756           Weight Allocate
     C                     Z-ADD*ZERO     P1CCQT           Quantity Schedu
     C                     Z-ADD*ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  *ZERO     P1CCQT           Quantity Schedu
     C                     ADD  *ZERO     P1AUWG           Weight Schedule
     C                     END                             *FI
     C                     END                             *FI
      * FP1054 -  subtract 1 day to go backwards
      * CLC Inc/Dec Date       IF
      * CASE: PAR.*Duration (factor) is LT Zero
     C           -1        IFLT 0                          *IF
     C           -1        MULT -1        WUDUF            *Duration (fact
      * Clc Date (descending) RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0241           Company Number
     C                     Z-ADDP1ELDT    WL0242           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0244           *Date2 (beginni
     C                     Z-ADDWUDUF     WL0245           *Duration (fact
     C                     EXSR TTRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0243    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is GT Zero
     C           -1        IFGT 0                          *IF
      * Clc Date (ascending)  RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDP1AIC3    WL0246           Company Number
     C                     Z-ADDP1ELDT    WL0247           Post to G_L Dat
     C                     Z-ADDP1ELDT    WL0249           *Date2 (beginni
     C                     Z-ADD-1        WL0250           *Duration (fact
     C                     EXSR TURVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0248    P1ELDT           *Date1 (ending)
     C                     ELSE
      * CASE: PAR.*Duration (factor) is EQ Zero
     C           -1        IFEQ 0                          *IF
     C                     Z-ADDP1ELDT    P1ELDT           *Date1 (ending)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *ITR
     C                     END                             *FI
     C           P1AVQT    SUB  P1CCQT    P1HWQT           ATS Quantity Ne
     C           P1D0WG    SUB  P1AUWG    P1ENWG           ATS Weight Need
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Base/Conv/Loss Item is Converted/Fabricated
     C           P2QZCD    IFEQ 'C'                        *IF
     C           P2QZCD    OREQ 'F'
      * UPD Allocate Std      XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDHMXFR'              90  UPD Allocate St
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AJCD    WQ0129  3        Warehouse Code
     C                     PARM P1AIC3    WQ0130  30       Company Number
     C                     PARM P1HGCD    WQ0131  70       Item Code
     C           P1ELDT    PARM P1ELDT    WQ0132  70       Production Date
     C                     PARM P2ADCD    WQ0133  2        UOM Primary
     C                     PARM P1AIWG    WQ0134 112       Unit Weight
     C                     PARM P2CHTM    WQ0135  52       Fresh Chilling
     C                     PARM P2PCCT    WQ0136  1        Piece Count Ite
     C                     PARM P2BDNB    WQ0137  70       Pieces Per Bag
     C                     PARM P2BJNB    WQ0138  70       Bags Per Unit
     C                     PARM P3WPST    WQ0139  2        Warehouse Type
     C                     PARM P3T1ST    WQ0140  1        Warehouse Std C
     C                     PARM P3DBNB    WQ0141  52       Warehouse Chill
     C                     PARM P1C4NB    WQ0142  70       Order Number
     C                     PARM P1DPNB    WQ0143  30       Order Sequence
     C                     PARM P1UENB    WQ0144  30       Order Secondary
     C                     PARM P1GVDT    WQ0145  70       Production Date
     C                     PARM P1GWDT    WQ0146  70       Production Date
     C                     PARM P1AVQT    WQ0147 112       Quantity Ordere
     C                     PARM P1D0WG    WQ0148 112       Weight Ordered
     C           P1CCQT    PARM P1CCQT    WQ0149 112       Quantity Schedu
     C           P1AUWG    PARM P1AUWG    WQ0150 112       Weight Schedule
     C           P1HWQT    PARM P1HWQT    WQ0151 112       ATS Quantity Ne
     C           P1ENWG    PARM P1ENWG    WQ0152 112       ATS Weight Need
     C                     PARM P1HLDT    WQ0153  70       Ship Date USR
     C                     PARM P1QJST    WQ0154  2        ATS Adj Type US
     C                     PARM P1BXVN    WQ0155 10        PSAA Program Na
     C                     PARM P4AYAA    WQ0156  3        Order From Ware
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         UPSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UPEXIT    ENDSR
      /EJECT
     CSR         UQSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UQEXIT    ENDSR
      /EJECT
     CSR         URSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UREXIT    ENDSR
      /EJECT
     CSR         USSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         USEXIT    ENDSR
      /EJECT
     CSR         UTSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UTEXIT    ENDSR
      /EJECT
     CSR         UUSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UUEXIT    ENDSR
      /EJECT
     CSR         UVSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UVEXIT    ENDSR
      /EJECT
     CSR         UWSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UWEXIT    ENDSR
      /EJECT
     CSR         UXSUBR    BEGSR
      *================================================================
      * documentation
      *================================================================
      * FP1054 Added CASE stmts for Fresh and Frozen- frozen is alloc bac
      *       Fresh can be backwards or forwards per company item ext sts
      *  1st call: IF par.warehouse code <> par.warehouse code pass usr,t
      *  We're moving fresh production to a diff warehouse for an order
      *   1st move std prod from the Fresh warehouse to the order's wareh
      *   Dont update the order detail schedule yet.
      *  2nd call: IF par.warehouse code = par.warehouse code pass usr,th
      *   alloc the input warehouse's production to the order
      *   And update the order detail schedule.
      * C01643 RMC 8/05/11  move piece count item wt calc above upd to or
      *  sched so its upd with the same weight as pdi8cpp
      * R13899 RMC 10/11/18-If OH Is a BLOCK order, then add 1 day to job
      *  - dont allocate current day prod to a block order UNLESS SCHED O
      *================================================================
     CSR         UXEXIT    ENDSR
      /EJECT
     CSR         UYSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UYEXIT    ENDSR
      /EJECT
     CSR         UZSUBR    BEGSR
      *================================================================
      * DOC:  Allocation
      *================================================================
      * Backward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      * Forward Allocation
      * c1 & c2 & c3
      * c1: PAR.Production Date GE PAR.Production Date RGF
      * c2: PAR.Production Date GE JOB.*Job date
      * c3: PAR.ATS Quantity Need USR is Greater than zero
      *================================================================
     CSR         UZEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      *
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1ELDT           Production Date
     C                     Z-ADD*ZERO     P1GVDT           Production Date
     C                     Z-ADD*ZERO     P1GWDT           Production Date
     C                     Z-ADD*ZERO     P1EINB           Week Number
     C                     Z-ADD*ZERO     P1ESNB           Accounting Year
     C                     Z-ADD*ZERO     P1ETNB           Accounting Peri
     C                     Z-ADD*ZERO     P1BZNB           OM Week
     C                     Z-ADD*ZERO     P1LHDT           Week Begin Date
     C                     Z-ADD*ZERO     P1LIDT           Week End Date
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2S4ST           Sold 100 Percen
      * Clear all neither parameters
     C                     MOVEL*BLANK    P3AOCD           Production Ware
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P4AODT           Scheduled Ship
     C                     MOVEL*BLANK    P4AYAA           Order From Ware
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P5CSHD           Chill Time USR
      *
      * Initialise indicators for re-entry
     C                     MOVE '0'       *IN
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Julian Date
     C                     Z-ADD*ZERO     WUCQNB  50
      * Define work field Day of Week
     C                     MOVEL*BLANK    WUA9ST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WABCDT           Post to G_L Dat
     C                     Z-ADD*ZERO     WACQNB           Julian Date
     C                     Z-ADD*ZERO     WAESNB           Accounting Year
     C                     Z-ADD*ZERO     WAETNB           Accounting Peri
     C                     Z-ADD*ZERO     WABZNB           OM Week
     C                     Z-ADD*ZERO     WAEINB           Week Number
     C                     Z-ADD*ZERO     WAAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WAOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WANQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WANRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WAOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WAOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WCBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WCBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WCBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WCBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDOQNY           CIE Unused Numb
     C                     Z-ADD*ZERO     WDORNY           CIE Unused Numb
     C                     Z-ADD*ZERO     WDS2DT           CIE Unused Date
     C                     Z-ADD*ZERO     WDMJDT           Create Date
     C                     Z-ADD*ZERO     WDBETM           Create Time
     C                     Z-ADD*ZERO     WDMKDT           Change Date
     C                     Z-ADD*ZERO     WDBFTM           Change Time
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEAIC3           Company Number
     C                     Z-ADD*ZERO     WEC4NB           Order Number
     C                     Z-ADD*ZERO     WEANC7           AR Customer Num
     C                     Z-ADD*ZERO     WEBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WEB0C7           Bill to Custome
     C                     Z-ADD*ZERO     WEA0DT           Order Date
     C                     Z-ADD*ZERO     WEA5DT           Requested Ship
     C                     Z-ADD*ZERO     WEGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WEACDT           Cancel Date
     C                     Z-ADD*ZERO     WEAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WECXDT           Date of Origina
     C                     Z-ADD*ZERO     WEJZVA           Order Value Tot
     C                     Z-ADD*ZERO     WEA1WG           Order Weight To
     C                     Z-ADD*ZERO     WEEIDT           Requested Deliv
     C                     Z-ADD*ZERO     WEAFTM           Requested Deliv
     C                     Z-ADD*ZERO     WERMNB           Load ID
     C                     Z-ADD*ZERO     WETBNB           Absorbed Freigh
     C                     Z-ADD*ZERO     WER1NB           Rated Freight
     C                     Z-ADD*ZERO     WERNNB           Reefer Temperat
     C                     Z-ADD*ZERO     WEATIN           Attach to Invoi
     C                     Z-ADD*ZERO     WERSRN           Resell Referenc
     C                     Z-ADD*ZERO     WET3NB           Attach to Order
     C                     Z-ADD*ZERO     WECONB           Invoice Number
     C                     Z-ADD*ZERO     WEAWDT           Invoice Date
     C                     Z-ADD*ZERO     WEVRVA           A_R order Value
     C                     Z-ADD*ZERO     WEB7VL           Invoice Order V
     C                     Z-ADD*ZERO     WENODT           OH Appt Confirm
     C                     Z-ADD*ZERO     WENPDT           JPN Invoice Iss
     C                     Z-ADD*ZERO     WENQDT           Load Actual Shi
     C                     Z-ADD*ZERO     WENRDT           Load BOL Comple
     C                     Z-ADD*ZERO     WENSDT           Load Truck Depa
     C                     Z-ADD*ZERO     WEBPTM           Maximum Gross W
     C                     Z-ADD*ZERO     WEBQTM           Time of Origina
     C                     Z-ADD*ZERO     WEBRTM           OH Appt Confirm
     C                     Z-ADD*ZERO     WEBSTM           Load BOL Comple
     C                     Z-ADD*ZERO     WEBTTM           Load Truck Depa
     C                     Z-ADD*ZERO     WEH0NX           Act Frt Referen
     C                     Z-ADD*ZERO     WEH1NX           Act Non_Ref Frt
     C                     Z-ADD*ZERO     WEH2NX           OH Fuel Surchar
     C                     Z-ADD*ZERO     WEH3NX           OH Total Non_Re
     C                     Z-ADD*ZERO     WEH4NX           OH Total Ref Fr
     C                     Z-ADD*ZERO     WEC0C7           Claim Number
     C                     Z-ADD*ZERO     WEAATM           Job Time
     C                     Z-ADD*ZERO     WEAXDT           Job Date
      * Define work field Count USR
     C                     Z-ADD*ZERO     WUCNTU  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGAIC3           Company Number
     C                     Z-ADD*ZERO     WGC4NB           Order Number
     C                     Z-ADD*ZERO     WGDPNB           Order Sequence
     C                     Z-ADD*ZERO     WGUENB           Order Secondary
     C                     Z-ADD*ZERO     WGHGCD           Item Code
     C                     Z-ADD*ZERO     WGBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WGCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WGMAVA           Billing Detail
     C                     Z-ADD*ZERO     WGKDVA           Billing Detail
     C                     Z-ADD*ZERO     WGL8VA           Billing Detail
     C                     Z-ADD*ZERO     WGL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WGAYVA           Extended Amount
     C                     Z-ADD*ZERO     WGEXDT           Market Pricing
     C                     Z-ADD*ZERO     WGBZPR           Price Overage O
     C                     Z-ADD*ZERO     WGL6NB           Contract Number
     C                     Z-ADD*ZERO     WGGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WGR1NB           Rated Freight
     C                     Z-ADD*ZERO     WGAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WGD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WGCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WGAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WGCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WGATWG           Weight Shipped
     C                     Z-ADD*ZERO     WGAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WGAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WGAKPR           Unit Price
     C                     Z-ADD*ZERO     WGALPR           Unit Price_Cred
     C                     Z-ADD*ZERO     WGAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WGAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WGA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WGA5DT           Requested Ship
     C                     Z-ADD*ZERO     WGAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WGGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WGRGNB           Item Structure
     C                     Z-ADD*ZERO     WGRHNB           Item Structure
     C                     Z-ADD*ZERO     WGRINB           Item Structure
     C                     Z-ADD*ZERO     WGCXDT           Date of Origina
     C                     Z-ADD*ZERO     WGDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WGB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WGA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WGNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WGNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WGNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WGNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WGNXDT           OD Firm Date
     C                     Z-ADD*ZERO     WGBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WGBVTM           Price Code
     C                     Z-ADD*ZERO     WGBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WGBXTM           Substitution Li
     C                     Z-ADD*ZERO     WGBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WGH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WGH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WGH7NX           OD Item Target
     C                     Z-ADD*ZERO     WGH8NX           OD Estimated Gr
     C                     Z-ADD*ZERO     WGH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WGDVPR           Order Gate_Fina
     C                     Z-ADD*ZERO     WGDWPR           OD Ceiling Pric
     C                     Z-ADD*ZERO     WGDXPR           OD Gate_Final P
     C                     Z-ADD*ZERO     WGDYPR           OD Weighted Avg
     C                     Z-ADD*ZERO     WGDZPR           OD Original Ord
     C                     Z-ADD*ZERO     WGGSPR           OD Cancel Date
     C                     Z-ADD*ZERO     WGGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WGGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WGPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WGRINY           Item Age Days
     C                     Z-ADD*ZERO     WGTIDT           Production Ovr
     C                     Z-ADD*ZERO     WGTJDT           Production Ovr
     C                     Z-ADD*ZERO     WGTKDT           OD Market Begin
     C                     Z-ADD*ZERO     WGTLDT           OD Market Endin
     C                     Z-ADD*ZERO     WGTMDT           OD Atch to Ord
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WIAIC3           Company Number
     C                     Z-ADD*ZERO     WIHGCD           Item Code
     C                     Z-ADD*ZERO     WIELDT           Production Date
     C                     Z-ADD*ZERO     WIACWG           Quantity on Han
     C                     Z-ADD*ZERO     WIARQT           Quantity on Han
     C                     Z-ADD*ZERO     WIK7DT           Label Date
     C                     Z-ADD*ZERO     WIAATM           Job Time
     C                     Z-ADD*ZERO     WIAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WJAIC3           Company Number
     C                     Z-ADD*ZERO     WJC4NB           Order Number
     C                     Z-ADD*ZERO     WJDPNB           Order Sequence
     C                     Z-ADD*ZERO     WJUENB           Order Secondary
     C                     Z-ADD*ZERO     WJJGDT           OD Production D
     C                     Z-ADD*ZERO     WJAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WJHGCD           Item Code
     C                     Z-ADD*ZERO     WJIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WJF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WJAATM           Job Time
     C                     Z-ADD*ZERO     WJAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WMAIC3           Company Number
     C                     Z-ADD*ZERO     WMC4NB           Order Number
     C                     Z-ADD*ZERO     WMDPNB           Order Sequence
     C                     Z-ADD*ZERO     WMUENB           Order Secondary
     C                     Z-ADD*ZERO     WMJGDT           OD Production D
     C                     Z-ADD*ZERO     WMAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WMHGCD           Item Code
     C                     Z-ADD*ZERO     WMIGQT           OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     WMFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     WMIUQT           OD Quantity Inv
     C                     Z-ADD*ZERO     WMF3WG           OD Weight Inv S
     C                     Z-ADD*ZERO     WMIVQT           OD Quantity Unu
     C                     Z-ADD*ZERO     WMF4WG           OD Unused weigh
     C                     Z-ADD*ZERO     WMAATM           Job Time
     C                     Z-ADD*ZERO     WMAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WRAIC3           Company Number
     C                     Z-ADD*ZERO     WRELDT           Production Date
     C                     Z-ADD*ZERO     WRHGCD           Item Code
     C                     Z-ADD*ZERO     WRGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WRWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WRQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WRDJPC           PS Pct of Carca
     C                     Z-ADD*ZERO     WRF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WRWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WRD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WRDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WRB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WRWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WRPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WRSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WRB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WRD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WRCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WREZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WRCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WRE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WRD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WROAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WRCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WRUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WRCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WRF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WRBPNB           PS Pieces Whs T
     C                     Z-ADD*ZERO     WRGAWG           PS Weight Whs T
     C                     Z-ADD*ZERO     WRBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WRGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WRBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WRGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WRBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WRGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WRBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WRGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WRPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WRDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WRD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WRFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WRD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WRDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WREANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WRSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WREBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WRAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WRECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WRWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WREDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WRFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WREENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WRQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WREFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WRWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WREGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WRRGNB           Item Structure
     C                     Z-ADD*ZERO     WRRHNB           Item Structure
     C                     Z-ADD*ZERO     WRRINB           Item Structure
     C                     Z-ADD*ZERO     WRAATM           Job Time
     C                     Z-ADD*ZERO     WRAXDT           Job Date
      * Define work field Record Found USR
     C                     MOVEL*BLANK    WUWXST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WVAIC3           Company Number
     C                     Z-ADD*ZERO     WVELDT           Production Date
     C                     Z-ADD*ZERO     WVHVHD           Hog Volume
     C                     Z-ADD*ZERO     WVZ6NB           Average Live We
     C                     Z-ADD*ZERO     WVZ7NB           Average Hot Wei
     C                     Z-ADD*ZERO     WVDGPC           Cooler Shrink P
     C                     Z-ADD*ZERO     WVAVCW           Average Cold We
     C                     Z-ADD*ZERO     WVDIPC           Average Lean Pe
     C                     Z-ADD*ZERO     WVZ0NB           Average Backfat
     C                     Z-ADD*ZERO     WVAVLE           Average Loin Ey
     C                     Z-ADD*ZERO     WVECWG           Hot Weight Tota
     C                     Z-ADD*ZERO     WVAATM           Job Time
     C                     Z-ADD*ZERO     WVAXDT           Job Date
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field UOM Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field Unit Weight
     C                     Z-ADD*ZERO     WUAIWG 112
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Base_Conv_Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Variety_Rendered_Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Credit Item Status
     C                     MOVEL*BLANK    WUVMST  1
      * Define work field Std Weight_Head_Var_Ren
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Pieces Per Bag
     C                     Z-ADD*ZERO     WUBDNB  70
      * Define work field Bags Per Unit
     C                     Z-ADD*ZERO     WUBJNB  70
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Trans Contol AS400_Plant
     C                     MOVEL*BLANK    WUXUST  1
      * Define work field Warehouse Location
     C                     MOVEL*BLANK    WUT0ST  1
      * Define work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    WUT1ST  1
      * Define work field Warehouse Chill Time
     C                     Z-ADD*ZERO     WUDBNB  52
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WXAIC3           Company Number
     C                     Z-ADD*ZERO     WXHGCD           Item Code
     C                     Z-ADD*ZERO     WXAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WXAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WXAIWG           Unit Weight
     C                     Z-ADD*ZERO     WXCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WXC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WXURTN           Number Cases On
     C                     Z-ADD*ZERO     WXAJC8           Vendor Item Def
     C                     Z-ADD*ZERO     WXRINB           Item Structure
     C                     Z-ADD*ZERO     WXRHNB           Item Structure
     C                     Z-ADD*ZERO     WXRGNB           Item Structure
     C                     Z-ADD*ZERO     WXTFNB           Transportation
     C                     Z-ADD*ZERO     WXTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WXTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WXBLPR           Market Overage
     C                     Z-ADD*ZERO     WXBMPR           Standard Overag
     C                     Z-ADD*ZERO     WXCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WXCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WXSWGH           Std Weight_Head
     C                     Z-ADD*ZERO     WXPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WXICN1           Item Category N
     C                     Z-ADD*ZERO     WXICN2           Item Category N
     C                     Z-ADD*ZERO     WXV2NB           Item Category N
     C                     Z-ADD*ZERO     WXITCN           Item Category N
     C                     Z-ADD*ZERO     WXITC5           Item Category N
     C                     Z-ADD*ZERO     WXICN6           Item Category N
     C                     Z-ADD*ZERO     WXICN7           Item Category N
     C                     Z-ADD*ZERO     WXICN8           Item Category N
     C                     Z-ADD*ZERO     WXICN9           Item Category N
     C                     Z-ADD*ZERO     WXICN0           Item Category N
     C                     Z-ADD*ZERO     WXSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WXA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WXSJNB           Production Lead
     C                     Z-ADD*ZERO     WXSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WXSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WXSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WXCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WXCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WXILNB           Packages per ca
     C                     Z-ADD*ZERO     WXCHNB           Use_Freeze_Sell
     C                     Z-ADD*ZERO     WXCINB           PM Batch Size
     C                     Z-ADD*ZERO     WXCJNB           Package Level s
     C                     Z-ADD*ZERO     WXCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WXCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WXCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WXCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WXCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WXCWNB           PM Std LBS Man
     C                     Z-ADD*ZERO     WXCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WXCZNB           PM Formula LBS
     C                     Z-ADD*ZERO     WXC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WXB4NB           PM Raw Material
     C                     Z-ADD*ZERO     WXB5NB           PM Line Number
     C                     Z-ADD*ZERO     WXBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WXBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WXF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WXF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WXF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WXBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WXBNNB           Production Qty
     C                     Z-ADD*ZERO     WXAATM           Job Time
     C                     Z-ADD*ZERO     WXAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     TAAIC3           Company Number
     C                     Z-ADD*ZERO     TAC4NB           Order Number
     C                     Z-ADD*ZERO     TADPNB           Order Sequence
     C                     Z-ADD*ZERO     TAUENB           Order Secondary
     C                     Z-ADD*ZERO     TAJGDT           OD Production D
     C                     Z-ADD*ZERO     TAOONY           ODS Sequence Nu
     C                     Z-ADD*ZERO     TAAODT           Scheduled Ship
     C                     Z-ADD*ZERO     TANUDT           Consumed Item C
     C                     Z-ADD*ZERO     TAHGCD           Item Code
     C                     Z-ADD*ZERO     TAIGQT           OD Qty_Cnsmd Pi
     C                     Z-ADD*ZERO     TAFLWG           OD Weight Sched
     C                     Z-ADD*ZERO     TANSQT           ODS Quantity Sh
     C                     Z-ADD*ZERO     TAJQWG           ODS Weight Shor
     C                     Z-ADD*ZERO     TANVDT           Deadline Depart
     C                     Z-ADD*ZERO     TABUTM           Deadline Depart
     C                     Z-ADD*ZERO     TAAATM           Job Time
     C                     Z-ADD*ZERO     TAAXDT           Job Date
      * Define work field *Duration (factor)
     C                     Z-ADD*ZERO     WUDUF   80
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL@CN,1     @CN,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     MOVEL*BLANK    WL0002  3
     C                     Z-ADD*ZERO     WL0003  30
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  70
     C                     MOVEL*BLANK    WL0006  1
     C                     Z-ADD*ZERO     WL0007  70
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0008  30
     C                     Z-ADD*ZERO     WL0009  70
     C                     MOVEL*BLANK    WL0010  1
      * Define local variables for subroutine SIRVGN.
     C                     Z-ADD*ZERO     WL0011  30
     C                     Z-ADD*ZERO     WL0012  70
     C                     MOVEL*BLANK    WL0013  3
     C                     Z-ADD*ZERO     WL0014  70
     C                     Z-ADD*ZERO     WL0015 112
     C                     MOVEL*BLANK    WL0016  1
     C                     Z-ADD*ZERO     WL0017  70
     C                     Z-ADD*ZERO     WL0018  70
     C                     Z-ADD*ZERO     WL0019  70
     C                     Z-ADD*ZERO     WL0020  30
     C                     Z-ADD*ZERO     WL0021  30
     C                     Z-ADD*ZERO     WL0022 112
     C                     Z-ADD*ZERO     WL0023 112
     C                     Z-ADD*ZERO     WL0024 112
     C                     Z-ADD*ZERO     WL0025 112
     C                     Z-ADD*ZERO     WL0026 112
     C                     Z-ADD*ZERO     WL0027 112
     C                     Z-ADD*ZERO     WL0028  70
     C                     Z-ADD*ZERO     WL0029  70
      * Define local variables for subroutine SPCRRC.
     C                     Z-ADD*ZERO     WL0030  30
     C                     Z-ADD*ZERO     WL0031  70
     C                     Z-ADD*ZERO     WL0032  30
     C                     Z-ADD*ZERO     WL0033  30
     C                     Z-ADD*ZERO     WL0034  70
     C                     Z-ADD*ZERO     WL0035  70
     C                     MOVEL*BLANK    WL0036  3
     C                     MOVEL*BLANK    WL0037  3
     C                     Z-ADD*ZERO     WL0038  70
     C                     Z-ADD*ZERO     WL0039 112
     C                     Z-ADD*ZERO     WL0040 112
     C                     Z-ADD*ZERO     WL0041 112
     C                     Z-ADD*ZERO     WL0042 112
     C                     Z-ADD*ZERO     WL0043 112
     C                     Z-ADD*ZERO     WL0044 112
     C                     MOVEL*BLANK    WL0045  1
     C                     MOVEL*BLANK    WL0046  1
     C                     MOVEL*BLANK    WL0047  2
     C                     MOVEL*BLANK    WL0048  1
     C                     MOVEL*BLANK    WL0049  1
     C                     MOVEL*BLANK    WL0050  1
     C                     MOVEL*BLANK    WL0051  1
     C                     Z-ADD*ZERO     WL0052  60
     C                     MOVEL*BLANK    WL0053 10
     C                     MOVEL*BLANK    WL0054 10
     C                     Z-ADD*ZERO     WL0055  70
      * Define local variables for subroutine SQDLRC.
     C                     Z-ADD*ZERO     WL0056  30
     C                     Z-ADD*ZERO     WL0057  70
     C                     Z-ADD*ZERO     WL0058  30
     C                     Z-ADD*ZERO     WL0059  30
     C                     Z-ADD*ZERO     WL0060  70
      * Define local variables for subroutine SURVGN.
     C                     Z-ADD*ZERO     WL0061  30
     C                     Z-ADD*ZERO     WL0062  70
     C                     MOVEL*BLANK    WL0063  1
      * Define local variables for subroutine SVRVGN.
     C                     Z-ADD*ZERO     WL0064  30
     C                     Z-ADD*ZERO     WL0065  70
     C                     Z-ADD*ZERO     WL0066  70
     C                     MOVEL*BLANK    WL0067  1
      * Define local variables for subroutine SXRVGN.
     C                     Z-ADD*ZERO     WL0068  30
     C                     MOVEL*BLANK    WL0069  1
     C                     Z-ADD*ZERO     WL0070  70
     C                     MOVEL*BLANK    WL0071  1
      * Define local variables for subroutine SYRVGN.
     C                     Z-ADD*ZERO     WL0072  30
     C                     MOVEL*BLANK    WL0073  1
     C                     Z-ADD*ZERO     WL0074  70
     C                     Z-ADD*ZERO     WL0075  70
     C                     MOVEL*BLANK    WL0076  3
     C                     Z-ADD*ZERO     WL0077  92
     C                     Z-ADD*ZERO     WL0078 112
     C                     Z-ADD*ZERO     WL0079  70
     C                     Z-ADD*ZERO     WL0080  52
      * Define local variables for subroutine TARVGN.
     C                     Z-ADD*ZERO     WL0081  30
     C                     Z-ADD*ZERO     WL0082  70
     C                     Z-ADD*ZERO     WL0083  30
     C                     Z-ADD*ZERO     WL0084  30
     C                     Z-ADD*ZERO     WL0085  70
     C                     Z-ADD*ZERO     WL0086  70
     C                     MOVEL*BLANK    WL0087  3
     C                     MOVEL*BLANK    WL0088  3
     C                     Z-ADD*ZERO     WL0089  70
     C                     Z-ADD*ZERO     WL0090  92
     C                     Z-ADD*ZERO     WL0091 112
     C                     MOVEL*BLANK    WL0092  2
      * Define local variables for subroutine TCRVGN.
     C                     Z-ADD*ZERO     WL0093  30
     C                     MOVEL*BLANK    WL0094  1
     C                     Z-ADD*ZERO     WL0095  70
     C                     Z-ADD*ZERO     WL0096  70
     C                     MOVEL*BLANK    WL0097  3
     C                     Z-ADD*ZERO     WL0098  92
     C                     Z-ADD*ZERO     WL0099  70
     C                     Z-ADD*ZERO     WL0100  70
     C                     Z-ADD*ZERO     WL0101  30
     C                     Z-ADD*ZERO     WL0102  30
     C                     MOVEL*BLANK    WL0103  1
      * Define local variables for subroutine TDCRRC.
     C                     Z-ADD*ZERO     WL0104  30
     C                     MOVEL*BLANK    WL0105  1
     C                     Z-ADD*ZERO     WL0106  70
     C                     Z-ADD*ZERO     WL0107  70
     C                     MOVEL*BLANK    WL0108  3
     C                     Z-ADD*ZERO     WL0109  70
     C                     Z-ADD*ZERO     WL0110  92
     C                     Z-ADD*ZERO     WL0111  70
     C                     Z-ADD*ZERO     WL0112  72
     C                     Z-ADD*ZERO     WL0113  92
     C                     Z-ADD*ZERO     WL0114  92
     C                     Z-ADD*ZERO     WL0115  70
     C                     Z-ADD*ZERO     WL0116  92
     C                     Z-ADD*ZERO     WL0117  70
     C                     Z-ADD*ZERO     WL0118  92
     C                     Z-ADD*ZERO     WL0119  70
     C                     Z-ADD*ZERO     WL0120  92
     C                     Z-ADD*ZERO     WL0121  70
     C                     Z-ADD*ZERO     WL0122  92
     C                     Z-ADD*ZERO     WL0123  70
     C                     Z-ADD*ZERO     WL0124  92
     C                     Z-ADD*ZERO     WL0125  70
     C                     Z-ADD*ZERO     WL0126  92
     C                     Z-ADD*ZERO     WL0127  70
     C                     Z-ADD*ZERO     WL0128  92
     C                     Z-ADD*ZERO     WL0129  70
     C                     Z-ADD*ZERO     WL0130  92
     C                     Z-ADD*ZERO     WL0131  70
     C                     Z-ADD*ZERO     WL0132 112
     C                     Z-ADD*ZERO     WL0133  70
     C                     Z-ADD*ZERO     WL0134 112
     C                     Z-ADD*ZERO     WL0135  70
     C                     Z-ADD*ZERO     WL0136 112
     C                     Z-ADD*ZERO     WL0137  70
     C                     Z-ADD*ZERO     WL0138 112
     C                     Z-ADD*ZERO     WL0139  70
     C                     Z-ADD*ZERO     WL0140 112
     C                     Z-ADD*ZERO     WL0141  70
     C                     Z-ADD*ZERO     WL0142 112
     C                     Z-ADD*ZERO     WL0143  70
     C                     MOVEL*BLANK    WL0144  3
     C                     MOVEL*BLANK    WL0145  2
     C                     MOVEL*BLANK    WL0146  1
     C                     MOVEL*BLANK    WL0147  1
     C                     MOVEL*BLANK    WL0148  1
     C                     MOVEL*BLANK    WL0149  1
     C                     MOVEL*BLANK    WL0150  1
     C                     MOVEL*BLANK    WL0151  1
     C                     MOVEL*BLANK    WL0152  1
     C                     MOVEL*BLANK    WL0153  1
     C                     MOVEL*BLANK    WL0154  2
     C                     MOVEL*BLANK    WL0155  3
     C                     Z-ADD*ZERO     WL0156  92
     C                     Z-ADD*ZERO     WL0157  70
     C                     Z-ADD*ZERO     WL0158  92
     C                     Z-ADD*ZERO     WL0159  70
     C                     Z-ADD*ZERO     WL0160  92
     C                     Z-ADD*ZERO     WL0161  70
     C                     Z-ADD*ZERO     WL0162  92
     C                     Z-ADD*ZERO     WL0163  70
     C                     Z-ADD*ZERO     WL0164  92
     C                     Z-ADD*ZERO     WL0165  70
     C                     Z-ADD*ZERO     WL0166  92
     C                     Z-ADD*ZERO     WL0167  70
     C                     Z-ADD*ZERO     WL0168  92
     C                     Z-ADD*ZERO     WL0169  70
     C                     Z-ADD*ZERO     WL0170  92
     C                     Z-ADD*ZERO     WL0171  70
     C                     Z-ADD*ZERO     WL0172  92
     C                     Z-ADD*ZERO     WL0173  70
     C                     MOVEL*BLANK    WL0174  6
     C                     Z-ADD*ZERO     WL0175  30
     C                     Z-ADD*ZERO     WL0176  30
     C                     Z-ADD*ZERO     WL0177  30
     C                     MOVEL*BLANK    WL0178  6
     C                     MOVEL*BLANK    WL0179  1
     C                     MOVEL*BLANK    WL0180  1
     C                     MOVEL*BLANK    WL0181  1
     C                     MOVEL*BLANK    WL0182  1
     C                     Z-ADD*ZERO     WL0183  60
     C                     MOVEL*BLANK    WL0184 10
     C                     MOVEL*BLANK    WL0185 10
     C                     Z-ADD*ZERO     WL0186  70
      * Define local variables for subroutine TGRVGN.
     C                     Z-ADD*ZERO     WL0187  30
     C                     Z-ADD*ZERO     WL0188  70
     C                     Z-ADD*ZERO     WL0189  52
     C                     Z-ADD*ZERO     WL0190  70
      * Define local variables for subroutine TIRVGN.
     C                     Z-ADD*ZERO     WL0191  30
     C                     MOVEL*BLANK    WL0192  1
     C                     Z-ADD*ZERO     WL0193  70
     C                     Z-ADD*ZERO     WL0194  70
     C                     MOVEL*BLANK    WL0195  3
     C                     Z-ADD*ZERO     WL0196  70
     C                     Z-ADD*ZERO     WL0197 112
      * Define local variables for subroutine TKRVGN.
     C                     Z-ADD*ZERO     WL0198  30
     C                     MOVEL*BLANK    WL0199  1
     C                     Z-ADD*ZERO     WL0200  70
     C                     Z-ADD*ZERO     WL0201  70
     C                     MOVEL*BLANK    WL0202  3
     C                     Z-ADD*ZERO     WL0203  92
     C                     Z-ADD*ZERO     WL0204  70
     C                     Z-ADD*ZERO     WL0205  70
     C                     Z-ADD*ZERO     WL0206  30
     C                     Z-ADD*ZERO     WL0207  30
     C                     MOVEL*BLANK    WL0208  1
      * Define local variables for subroutine TLRVGN.
     C                     Z-ADD*ZERO     WL0209  30
     C                     Z-ADD*ZERO     WL0210  70
      * Define local variables for subroutine TMRVGN.
     C                     Z-ADD*ZERO     WL0211  30
     C                     Z-ADD*ZERO     WL0212  70
     C                     Z-ADD*ZERO     WL0213  30
     C                     Z-ADD*ZERO     WL0214  30
     C                     Z-ADD*ZERO     WL0215  70
     C                     Z-ADD*ZERO     WL0216  30
     C                     Z-ADD*ZERO     WL0217  70
     C                     Z-ADD*ZERO     WL0218  70
      * Define local variables for subroutine TNRVGN.
     C                     Z-ADD*ZERO     WL0219  30
     C                     Z-ADD*ZERO     WL0220  70
     C                     Z-ADD*ZERO     WL0221  30
     C                     Z-ADD*ZERO     WL0222  30
     C                     Z-ADD*ZERO     WL0223  70
     C                     Z-ADD*ZERO     WL0224  30
      * Define local variables for subroutine TORVGN.
     C                     Z-ADD*ZERO     WL0225  30
     C                     Z-ADD*ZERO     WL0226  70
     C                     Z-ADD*ZERO     WL0227  30
     C                     Z-ADD*ZERO     WL0228  30
     C                     Z-ADD*ZERO     WL0229  70
     C                     Z-ADD*ZERO     WL0230  30
     C                     Z-ADD*ZERO     WL0231  70
     C                     MOVEL*BLANK    WL0232  3
     C                     Z-ADD*ZERO     WL0233  70
     C                     Z-ADD*ZERO     WL0234  70
     C                     Z-ADD*ZERO     WL0235 112
     C                     Z-ADD*ZERO     WL0236 112
     C                     Z-ADD*ZERO     WL0237  50
     C                     Z-ADD*ZERO     WL0238  92
     C                     Z-ADD*ZERO     WL0239  70
     C                     Z-ADD*ZERO     WL0240  60
      * Define local variables for subroutine TTRVGN.
     C                     Z-ADD*ZERO     WL0241  30
     C                     Z-ADD*ZERO     WL0242  70
     C                     Z-ADD*ZERO     WL0243  70
     C                     Z-ADD*ZERO     WL0244  70
     C                     Z-ADD*ZERO     WL0245  80
      * Define local variables for subroutine TURVGN.
     C                     Z-ADD*ZERO     WL0246  30
     C                     Z-ADD*ZERO     WL0247  70
     C                     Z-ADD*ZERO     WL0248  70
     C                     Z-ADD*ZERO     WL0249  70
     C                     Z-ADD*ZERO     WL0250  80
      * Define local work field Chilling Time USR
     C                     Z-ADD*ZERO     YL0001  52
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0002  30
      * Define local work field Allocation Method
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Scheduled Ship Date
     C                     Z-ADD*ZERO     YL0004  70
      * Define local work field Date                  USR
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field OD Price Type
     C                     MOVEL*BLANK    YL0006  3
      * Define local work field Block Order Flag
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Production Date RGF
     C                     Z-ADD*ZERO     YL0008  70
      * Define local work field Production Date RGT
     C                     Z-ADD*ZERO     YL0009  70
      * Define local work field To Date               USR
     C                     Z-ADD*ZERO     YL0010  70
      * Define local work field Days in Freezer       USR
     C                     Z-ADD*ZERO     YL0011  50
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0012 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0013 112
      * Define local work field OD Quantity Inv Sched
     C                     Z-ADD*ZERO     YL0014 112
      * Define local work field OD Weight Inv Sched
     C                     Z-ADD*ZERO     YL0015 112
      * Define local work field ATS Quantity Need USR
     C                     Z-ADD*ZERO     YL0016 112
      * Define local work field ATS Weight Need USR
     C                     Z-ADD*ZERO     YL0017 112
      * Define local work field Quantity Scheduled
     C                     Z-ADD*ZERO     YL0018 112
      * Define local work field Weight Scheduled
     C                     Z-ADD*ZERO     YL0019 112
      * Define local work field Block Order Flag
     C                     MOVEL*BLANK    YL0020  1
      * Define local work field Allocation Method
     C                     MOVEL*BLANK    YL0021  1
      * Define local work field Production Date To
     C                     Z-ADD*ZERO     YL0022  70
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0023  1
      * Define local work field Production Day Status USR
     C                     MOVEL*BLANK    YL0024  1
      * Define null work field Accounting Period Code
     C                     Z-ADD*ZERO     YN0001  20
      * Define local work field Day of Week
     C                     MOVEL*BLANK    YL0025  1
      * Define null work field Week Number
     C                     Z-ADD*ZERO     YN0002  20
      * Define local work field OD Added to Sched Today
     C                     MOVEL*BLANK    YL0026  1
      * Define local work field Accounting Company
     C                     Z-ADD*ZERO     YL0027  30
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0028  30
      * Define local work field ODS Sequence Number
     C                     Z-ADD*ZERO     YL0029  30
      * Define local work field OD Weight Scheduled
     C                     Z-ADD*ZERO     YL0030 112
      * Define local work field OD Qty_Cnsmd Pieces Sched
     C                     Z-ADD*ZERO     YL0031 112
      * Define local work field Production Date RGF
     C                     Z-ADD*ZERO     YL0032  70
      * Define local work field Allocation Method USR
     C                     MOVEL*BLANK    YL0033  1
      * Define local work field Production Day Status
     C                     MOVEL*BLANK    YL0034  1
      * Define local work field Requested Delivery Date
     C                     Z-ADD*ZERO     YL0035  70
      * Define local work field Production Ovr AgeDte Fr
     C                     Z-ADD*ZERO     YL0036  70
      * Define local work field Production Ovr AgeDte To
     C                     Z-ADD*ZERO     YL0037  70
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 SCHASORD
