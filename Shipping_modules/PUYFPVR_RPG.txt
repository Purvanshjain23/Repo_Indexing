     H/TITLE Pmt PHIS Resend as New PV Prompt & validate record
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Prompt & validate record
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 03/13/23  Time  : 14:53:39
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPUYFPVR#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Pmt PHIS Resend as New PV Prompt & validate record
      *
     FOPBFCPL1  IF   E           K DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPDMMREL1  IF   E           K DISK
      * RTV : Export Doc Defaults       Retrieval index
      *
      * Set wdw location allowed?
     D YSL             S              1     DIM(1)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              3  0
     D  WP0002         S              7  0
     D  WP0003         S              1
     D  WP0004         S              6
     D  WP0005         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  YWLCTP         S              1
     D  YWRTFN         S             10
     D  YWWDWD         S              3  0
     D  YWWDDP         S              3  0
     D  YWWDCR         S              5
     D  YWWDRW         S              3  0
     D  YWWDCL         S              3  0
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  YWPNNO         S              1  0
     D  W0WASM         S              1  0
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  YWPORW         S              3  0
     D  YWPOC1         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  W0INVL         S             25
     D  WK1X01         S              1
     D  WK1X02         S              1
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  W0CLPG         S             10
     D  WK1X03         S              1
     D  WQ0003         S              3  0
     D  WQ0004         S              6
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  WUDMCD         S              3
     D  WUEOCD         S              7
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  W0GRP          S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZWORK          S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  @1FFL          S             10
     D  @1FLB          S             10
     D  @1FMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D #L3             S              1    DIM(3)
     D #L7             S              1    DIM(7)
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: Export Doc Order Hdr
      * I : MAP Company Number
     D  P1AIC3                 1      2P 0
      * I : MAP Order Number
     D  P1C4NB                 3      6P 0
      * I : MAP ED Export Document Type
     D  P1DGSX                 7      7
      * I : MAP Country Code
     D  P1KXCD                 8     13
     D P2PARM          DS
      * O :  Resend to PHIS as New USR
     D  P2N5SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1AIC3        PARM                    WP0001                         Company Number
     C     P1C4NB        PARM                    WP0002                         Order Number
     C     P1DGSX        PARM                    WP0003                         ED Export Docum
     C     P1KXCD        PARM                    WP0004                         Country Code
     C     P2N5SC        PARM      P2N5SC        WP0005                         Resend to PHIS
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Conduct screen conversation
     C                   DO        *HIVAL
      * Start new transaction
     C                   MOVEL     'Y'           W0TRN
      * Process current transaction
      * Convert fields to external form
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      MNCV#1
      * Display screen
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Reset screen fields
     C   30              CAS                     MALDSC
      * Reposition window
     C   26              CAS                     ZRRPWD
      * Process screen input
     C                   CAS                     DAPRSC
     C                   END
      *
     C                   END
      *
     C                   END
      *****************************************************************
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   Z-ADD     1             YWPNNO                         Panel number
     C                   MOVEL     'R'           YWLCTP                         Locate action t
     C                   EXSR      ZSSTLC                                       Set window loca
     C                   Z-ADD     1             W0WASM
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPRSC        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate screen input
     C                   EXSR      DBVLSC
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * Prompt for confirmation
     C                   EXSR      DHPMCF
      * Quit if not confirmed
     C     *IN99         CABEQ     '1'           DAEXIT
      * USER: User defined action
     C                   MOVEL     #DN5SC        P2N5SC                         Resend to PHIS
      * Exit program
     C                   EXSR      ZXEXPG
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBVLSC        BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Resend to PHIS as New USR
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Resend to PHIS as New USR
     C                   IF        '#DN5SC' = YPMTFD
     C                   MOVEL     #DN5SC        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHN5SC
     C                   SELECT
     C                   WHEN      W0INVL = 'Y'                                 Y
     C                   Z-ADD     1             ZHN5SC
     C                   WHEN      W0INVL = 'N'                                 N
     C                   Z-ADD     2             ZHN5SC
     C                   WHEN      W0INVL = *BLANK                              *BLANK
     C                   Z-ADD     3             ZHN5SC
     C                   ENDSL
     C                   EXFMT     ZGN5SC
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHN5SC = 1
     C                   MOVEL     'Y'           W0INVL                         Y
     C                   WHEN      ZHN5SC = 2
     C                   MOVEL     'N'           W0INVL                         N
     C                   WHEN      ZHN5SC = 3
     C                   EVAL      W0INVL = ' '                                 *BLANK
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #DN5SC
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * Bypass ref file checks if error already detected
     C   99              GOTO      DBEXIT
      * Check reference to Order Header TRG
     C                   EXSR      VACKRL
      * Check reference to Export Doc Defaults
     C                   EXSR      VBCKRL
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DHPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Update screen time
     C                   TIME                    ##TME
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   EXSR      ZVCFPM
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      DHEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'CAVLLWR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   DHEXIT        ENDSR
      /EJECT
     CSR   MALDSC        BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                   Z-ADD     P1AIC3        #1AIC3                         Company Number
      * Clear external version also
     C                   EVAL      V1AIC3 = ' '
     C                   Z-ADD     P1C4NB        #1C4NB                         Order Number
      * Clear external version also
     C                   EVAL      V1C4NB = ' '
     C                   MOVEL     P1KXCD        #1KXCD                         Country Code
     C                   MOVEL     P1DGSX        #1DGSX                         ED Export Docum
     C                   EVAL      #DN5SC = ' '                                 Resend to PHIS
      * USER: Load screen
     C                   MOVEL     'Y'           #DN5SC                         Resend to PHIS
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C                   IF        #1AIC3 <> 0
     C                   EVAL      WUDMCD = ' '                                 CD3 Ext Numeric
     C                   MOVEL     #1AIC3        WUDMCD                         CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUDMCD        #L3                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        3
     C     #L3(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L3(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L3           WUDMCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUDMCD        V1AIC3                         CD3 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1AIC3 = ' '                                 CD3 Ext Numeric
     C                   END                                                    *FI
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C                   IF        #1C4NB <> 0
     C                   EVAL      WUEOCD = ' '                                 CD7 Ext Numeric
     C                   MOVEL     #1C4NB        WUEOCD                         CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                   MOVEA     WUEOCD        #L7                            EDIT ARRAY
     C                   Z-ADD     1             #E                3 0
     C                   MOVE      *IN61         UUIN61            1
     C                   SETOFF                                       61
     C                   DO        7
     C     #L7(#E)       IFEQ      '0'                                          ZERO VALUE
     C     *IN61         IFEQ      '0'
     C                   MOVE      ' '           #L7(#E)
     C                   ADD       1             #E
     C                   END
     C                   ELSE
     C                   SETON                                        61
     C                   END
     C                   END
     C                   MOVEA     #L7           WUEOCD
     C                   MOVE      UUIN61        *IN61
     C                   MOVEL     WUEOCD        V1C4NB                         CD7 Ext Numeric
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      V1C4NB = ' '                                 CD7 Ext Numeric
     C                   END                                                    *FI
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check reference to Order Header TRG
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     V1AIC3        WK1X01
     C                   MOVEL     V1C4NB        WK1X02
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AIC3' defaulted for 'Company Number'.
      * Field '(DTL) #1C4NB' defaulted for 'Order Number'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1AIC3' OR
     C                             WK1X02 = '?' OR
     C                             YPMTFD = '#1C4NB'
     C                   CALL      'PDPCSRR'                            90      SEL Order
     C                   PARM      *BLANK        W0RTN
     C     #1AIC3        PARM      #1AIC3        WQ0001                         Company Number
     C     #1C4NB        PARM      #1C4NB        WQ0002                         Order Number
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDPCSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1AIC3 <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        #1C4NB <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X02 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VAEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1C4NB = *ZERO
     C                   GOTO      VAEXIT
     C                   END
      *
     C     KLVABE        KLIST
     C                   KFLD                    BEAIC3                         Company Number
     C                   KFLD                    BEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     #1AIC3        BEAIC3
     C                   Z-ADD     #1C4NB        BEC4NB
     C     KLVABE        CHAIN     @BECPFK                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   VBCKRL        BEGSR
      *================================================================
      * Check reference to Export Doc Defaults
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     C                   MOVEL     V1AIC3        WK1X01
     C                   MOVEL     #1DGSX        WK1X02
     C                   MOVEL     #1KXCD        WK1X03
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AIC3' defaulted for 'Company Number'.
      * Field '(DTL) #1KXCD' defaulted for 'Country Code'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1AIC3' OR
     C                             WK1X02 = '?' OR
     C                             YPMTFD = '#1DGSX' OR
     C                             WK1X03 = '?' OR
     C                             YPMTFD = '#1KXCD'
     C                   CALL      'PDMRSRR'                            90      Select PD Expor
     C                   PARM      *BLANK        W0RTN
     C     #1AIC3        PARM      #1AIC3        WQ0003                         Company Number
     C     #1KXCD        PARM      #1KXCD        WQ0004                         Country Code
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDMRSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1AIC3 <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        #1DGSX <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X02 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        #1KXCD <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X03 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VBEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1DGSX = ' ' AND
     C                             #1KXCD = ' '
     C                   GOTO      VBEXIT
     C                   END
      *
     C     KLVBMM        KLIST
     C                   KFLD                    MMAIC3                         Company Number
     C                   KFLD                    MMDGSX                         ED Export Docum
     C                   KFLD                    MMKXCD                         Country Code
      * Setup key
     C                   Z-ADD     #1AIC3        MMAIC3
     C                   MOVEL     #1DGSX        MMDGSX
     C                   MOVEL     #1KXCD        MMKXCD
     C     KLVBMM        CHAIN     @MMREWN                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VBEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VBEXIT
     C                   END
      *================================================================
     CSR   VBEXIT        ENDSR
      /EJECT
     CSR   YKDDW1        BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *
      * Calculate window location for DDL - Resend to PHIS as New USR
      * Window width
     C                   Z-ADD     16            YWWDWD
      * Window depth
     C                   Z-ADD     3             YWWDDP
      * Window reference corner
     C                   MOVEL     '*TL  '       YWWDCR
      * Window start row
     C                   Z-ADD     ##WSR         YWWDRW
     C                   ADD       9             YWWDRW
      * Window start column
     C                   Z-ADD     ##WSC         YWWDCL
     C                   ADD       33            YWWDCL
      * Retrieve window location
     C                   EXSR      ZURTLC
      * Window start row
     C                   Z-ADD     YWWDRW        ZG01RW
      * Window start column
     C                   Z-ADD     YWWDCL        ZG01CL
      *================================================================
     CSR   YKEXT1        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ##WSR         MULT      256           ZWORK
     C                   ADD       ##WSC         ZWORK
     C                   SUB       ZWORK         ZINPOS
     C                   SUB       1             ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C     @#WWRC        DIV       256           ZZCSRW                         Row
     C                   MVR                     ZZCSCL                         Column
      *
      *
      * Calculate window offset
     C     009           ADD       ##WSR         YWPORW
     C     032           ADD       ##WSC         YWPOC1
     C                   ADD       1             YWPOC1
     C                   IF        ZHCSRW = YWPORW AND
     C                             ZHCSCL = YWPOC1 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#DN5SC'      YPMTFD                         Resend to PHIS
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C     @#WWRC        DIV       256           ZZCSRW                         Row
     C                   MVR                     ZZCSCL                         Column
      *
     C     ZHCSRW        SUB       ##WSR         YWPORW
     C     ZHCSCL        SUB       ##WSC         YWPOC1
     C                   SUB       1             YWPOC1
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      YWPORW        YYRW                           Row
     C                   PARM      YWPOC1        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZRRPWD        BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                   MOVEL     'Y'           YSL(1)                         Set wdw locatio
     C                   MOVEL     'R'           YWLCTP                         Locate action t
     C                   EXSR      ZSSTLC                                       Set window loca
      *
      * Redisplay previous panel
     C                   WRITE     ASSUME
      *================================================================
     CSR   ZREXIT        ENDSR
      /EJECT
     CSR   ZSSTLC        BEGSR
      *================================================================
      * Set window location
      *================================================================
     C                   IF        YSL(1) = 'Y'
     C                   MOVEL     '*CALC'       YWWDCR                         Window referenc
     C                   Z-ADD     -3            YWWDRW                         Window start ro
     C                   Z-ADD     -3            YWWDCL                         Window start co
     C                   Z-ADD     058           YWWDWD                         Window width
     C                   Z-ADD     014           YWWDDP                         Window depth
     C                   MOVEL     'N'           YSL(1)                         Set wdw locatio
      *
     C                   EXSR      ZURTLC                                       Retrieve window
     C                   EXSR      ZTWDFD                                       Move window fie
     C                   END
      *================================================================
     CSR   ZSEXIT        ENDSR
      /EJECT
     CSR   ZTWDFD        BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                   Z-ADD     YWWDRW        ##WSR                          Window start ro
     C                   Z-ADD     YWWDCL        ##WSC                          Window start co
     C                   EXSR      YKDDW1
      *================================================================
     CSR   ZTEXIT        ENDSR
      /EJECT
     CSR   ZURTLC        BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                   EVAL      W0RTN = ' '
      * Retrieval Function
     C                   EVAL      YWRTFN = ' '
     C                   MOVEL     '*WDWLOC'     YWRTFN
      *
     C                   SETOFF                                         90      *
      *
     C                   CALL      'YWRTLCI'                            90      *
     C                   PARM                    YWRTFN                         Retrieval Funct
     C                   PARM                    YWWDWD                         Window width
     C                   PARM                    YWWDDP                         Window depth
     C                   PARM                    YWWDCR                         Window referenc
     C                   PARM                    YWWDRW                         *Window start r
     C                   PARM                    YWWDCL                         *Window start c
     C                   PARM                    W0RTN                          Return code
      * If error on call to API - default window location to top left cor
     C                   IF        *IN90 OR
     C                             W0RTN <> ' '
     C                   Z-ADD     2             YWWDRW                         *Window start r
     C                   Z-ADD     2             YWWDCL                         *Window start c
     C                   END
      *
      *================================================================
     CSR   ZUEXIT        ENDSR
      /EJECT
     CSR   ZVCFPM        BEGSR
      *================================================================
      * Set Confirm Prompt window location
      *================================================================
      *
     C     ##WSR         ADD       014           YWWDRW
     C     ##WSC         ADD       058           YWWDCL
      *
     C                   ADD       1             YWWDCL
     C                   SUB       1             YWWDRW                         Window start ro
     C                   SUB       21            YWWDCL                         Window start co
     C                   Z-ADD     18            YWWDWD                         Window width
     C                   Z-ADD     2             YWWDDP                         Window depth
     C                   MOVEL     '*TL  '       YWWDCR                         Window referenc
     C                   EVAL      YWRTFN = ' '
     C                   MOVEL     '*WDWLOC'     YWRTFN                         Retrieval Funct
     C                   EXSR      ZURTLC                                       Retrieve window
     C                   Z-ADD     YWWDRW        ##WSRC                         *Window start r
     C                   Z-ADD     YWWDCL        ##WSCC                         *Window start c
      *
      *================================================================
     CSR   ZVEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialise Allow Set Window Location flags
     C                   MOVEA     *ALL'Y'       YSL
      * Set display size
     C                   SETOFF                                           93    *
     C     @#SCRW        COMP      27                                     93    *
      * Initialise window location variables.
     C                   Z-ADD     *ZEROS        ##WSR
     C                   Z-ADD     *ZEROS        ##WSC
      * Define work field CD3 Ext Numeric Key
     C                   EVAL      WUDMCD = ' '
      * Define work field CD7 Ext Numeric Key
     C                   EVAL      WUEOCD = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   MOVE      ZZFFL         @1FFL
     C                   MOVE      ZZFLB         @1FLB
     C                   MOVE      ZZFMB         @1FMB
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
     C                   EVAL      P2N5SC = ' '                                 Resend to PHIS
      * Load screen
     C                   EXSR      MALDSC
      *================================================================
     CSR   ZZEXIT        ENDSR
