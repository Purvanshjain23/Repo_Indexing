// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBJVPVR
// ?Date: 14.08.2025 Time: 03:48:15
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(WRK.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(WRK.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.PRT Printer Device = CND.Not entered
PAR.PRT_Printer_Device = *BLANK;

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.Company Number Pass   USR = PAR.Company Number
PAR.Company_Number_Pass_USR = PAR.Company_Number;

EXECUTE FUNCTION(Rtv Allow Multi-Whs   RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1512192;
PARAMETER(JOB.*USER);
PARAMETER(WRK.Allow_Multi_Warehouse);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

//?***** Change Log and Comments
DO;

//?*****
//?** E9064 JBB 2/17/2017 - Added processing for plant 440
//?*****
//?** E2998 RMC 1/30/2014 - Added GB1 as a valid warehouse
//?*****
//?** E2730 RMC 8/21/2013 - New to print Traffic Cards - prtfil is NATIVE RPG
//?   native RPGLE under the Load Header
//?*****
ENDDO;

//?USER: Load screen

CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// DTL.Company Number CDE = PAR.Company Number
DTL.Company_Number_CDE = PAR.Company_Number;

CASE;

// IF DTL.Company Number CDE is Guymon
IF DTL.Company_Number_CDE = 360;

// DTL.Warehouse Code = CND.Guymon Fresh
DTL.Warehouse_Code = 'GP1';

// DTL.USR CDE Parm 1 = CND.Cloverleaf Freezer
DTL.USR_CDE_Parm_1 = 'CF1';

// IF DTL.Company Number CDE is Seaboard Triumph Foods
IF DTL.Company_Number_CDE = 440;

// DTL.Warehouse Code = CND.Seaboard Triumph - Fresh
DTL.Warehouse_Code = 'ST1';

// DTL.USR CDE Parm 1 = CND.Seaboard Triumph - Frozen
DTL.USR_CDE_Parm_1 = 'STF';

// IF DTL.Company Number CDE is St. Joseph
IF DTL.Company_Number_CDE = 960;

// DTL.Warehouse Code = CND.St. Joseph
DTL.Warehouse_Code = 'SJ1';

// DTL.USR CDE Parm 1 = CND.St. Joseph Cold Storage
DTL.USR_CDE_Parm_1 = 'SF1';

ENDIF;

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

ENDIF;

//?Order Company Name
CASE;

// IF DTL.Company Number CDE is not equal to zero
IF DTL.Company_Number_CDE <> *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Validate fields

//?Process F4 on Load Start Company Number
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Company Number CDE
IF PGM.*Cursor_field = DTL.Company_Number_CDE;

CASE;

// IF PAR.Allow Multi-Company is yes
IF PAR.Allow_Multi_Company = 'Y';

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(DTL.Company_Number_CDE);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Prompt not allowed on output field.'
ERROR(USR2410);

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on Warehouse 1
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Warehouse Code
AND PGM.*Cursor_field = DTL.Warehouse_Code;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.Warehouse_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on Warehouse 2
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.USR CDE Parm 1
AND PGM.*Cursor_field = DTL.USR_CDE_Parm_1;

// Call program SEL Warehouse          SR.
CALL PROGRAM(SEL Warehouse          SR) ('CAANSRR');
PARAMETER(DTL.USR_CDE_Parm_1);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

CASE;

// IF DTL.Scheduled Ship Date is not entered
IF DTL.Scheduled_Ship_Date = *ZERO;

// AND DTL.Number of Times Usr is eq 0
AND DTL.Number_of_Times_Usr = *ZERO;

// AND DTL.Load ID is Blank
AND DTL.Load_ID = *ZERO;

// Send error message - 'Must enter Date, Load, or Print Blank Cards.'
ERROR(USR4634);

ENDIF;

CASE;

// IF DTL.Load ID is NE Blank
IF DTL.Load_ID <> *ZERO;

EXECUTE FUNCTION(VAL Load Exist        RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1197457;
PARAMETER(DTL.Load_ID);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 QUIT;

}


//?Validate load start -triumph
CASE;

// IF DTL.Company Number CDE is St. Joseph
IF DTL.Company_Number_CDE = 960;

//?triumph whses
CASE;

// IF LCL.Ship From Warehouse is St. Joseph
IF LCL.Ship_From_Warehouse = 'SJ1';

// OR LCL.Ship From Warehouse is St. Joseph Cold Storage
OR LCL.Ship_From_Warehouse = 'SF1';

//?triumph whses
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Load Start Company isnt &1'
ERROR(USR4638);
MSGPARM(DTL.Company_Number_CDE);

ENDIF;

ENDIF;

CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Load Header not found.'
ERROR(USR1188);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Load for Load Plan RT) TYPE(RTVOBJ) FILE(OMFJCPP)          AC1264653;
PARAMETER(DTL.Load_ID);
PARAMETER(LCL.Scheduled_Ship_Date);
PARAMETER(LCL.Load_Status);
PARAMETER(LCL.Reefer_Temperature);
PARAMETER(LCL.Total_Load_Order_Weight);
PARAMETER(LCL.Flat_Amount);
PARAMETER(LCL.Allocate_Pounds_Miles);
PARAMETER(LCL.Carrier_Code);
PARAMETER(LCL.Truck_Size);
PARAMETER(LCL.Rated_Freight);
PARAMETER(LCL.Load_Type);
PARAMETER(LCL.Schedule_Sequence_Number);
PARAMETER(LCL.Total_Load_Miles);
PARAMETER(LCL.Shipping_Method);
PARAMETER(LCL.Ship_From_Warehouse);
PARAMETER(LCL.Ship_To_State_Code);
PARAMETER(LCL.Carrier_Broker);
PARAMETER(LCL.Load_Acceptance_Flag);
PARAMETER(LCL.Override_Total_Load_Miles);
PARAMETER(LCL.Shipping_Temp_C_F_txt);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Validate load sts
CASE;

// IF LCL.Load Status is Entered,Comb,Unlck,Locked
IF LCL.Load_Status = 'C'/'E'/'L'/'U';

//?Validate load sts
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Load &1 is shipped/invoiced.'
ERROR(USR4639);
MSGPARM(DTL.Load_ID);

ENDIF;

//?Validate load start - guymon
CASE;

// IF DTL.Company Number CDE is Guymon
IF DTL.Company_Number_CDE = 360;

//?guymon whses
CASE;

// IF LCL.Ship From Warehouse is Guymon Fresh
IF LCL.Ship_From_Warehouse = 'GP1';

// OR LCL.Ship From Warehouse is Cloverleaf Freezer
OR LCL.Ship_From_Warehouse = 'CF1';

// OR LCL.Ship From Warehouse is GB1
OR LCL.Ship_From_Warehouse = 'GB1';

//?guymon whses
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Load Start Company isnt &1'
ERROR(USR4638);
MSGPARM(DTL.Company_Number_CDE);

ENDIF;

ENDIF;

//?Validate load start -seaboard triumph
CASE;

// IF DTL.Company Number CDE is Seaboard Triumph Foods
IF DTL.Company_Number_CDE = 440;

//?seaboard triumph whses
CASE;

// IF LCL.Ship From Warehouse is Seaboard Triumph - Fresh
IF LCL.Ship_From_Warehouse = 'ST1';

// OR LCL.Ship From Warehouse is Seaboard Triumph - Frozen
OR LCL.Ship_From_Warehouse = 'STF';

//?seaboard triumph whses
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Load Start Company isnt &1'
ERROR(USR4638);
MSGPARM(DTL.Company_Number_CDE);

ENDIF;

ENDIF;

ENDIF;

ENDIF;

//?USER: Validate relations

// DTL.Name = CON.*BLANK
DTL.Name = *BLANK;

// DTL.USR Warehouse description = CON.*BLANK
DTL.USR_Warehouse_description = *BLANK;

// DTL.Description = CON.*BLANK
DTL.Description = *BLANK;

// DTL.Company Number = DTL.Company Number CDE
DTL.Company_Number = DTL.Company_Number_CDE;

//?Validate Load Start company if entered
CASE;

// IF DTL.Company Number is not equal to zero
IF DTL.Company_Number_CDE <> *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?02/13/07 PKD Removed hardcoding of Company Number
EXECUTE FUNCTION(Rtv Plant Co Status   RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1761084;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(LCL.Plant_Company_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Plant Company Sts is Plant Company
IF LCL.Plant_Company_Sts = 'P';

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Name = CON.*BLANK
DTL.Name = *BLANK;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

ENDIF;

//?Validate warehouse 1 if entered
CASE;

// IF DTL.Warehouse Code is Warehouse Code not Blank
IF DTL.Warehouse_Code <> *BLANK;

EXECUTE FUNCTION(RTV Whse Desc,Ship co RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1705650;
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.USR_Warehouse_description);
PARAMETER(LCL.Shipping_Company);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

CASE;

// IF LCL.Shipping Company NE DTL.Company Number CDE
IF LCL.Shipping_Company <> DTL.Company_Number_CDE;

// Send error message - 'Warehouse &1 cannot ship from Company &2'
ERROR(USR3362);
MSGPARM(DTL.Warehouse_Code);
MSGPARM(DTL.Company_Number);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Warehouse not found'
ERROR(USR0372);
MSGPARM(DTL.Warehouse_Code);

ENDIF;

//?Validate warehouse 1 if entered
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.USR Warehouse description = CND.equal to blank
DTL.USR_Warehouse_description = *BLANK;

ENDIF;

//?Validate warehouse 2 if entered
CASE;

// IF DTL.USR CDE Parm 1 is Warehouse Code not Blank
IF DTL.USR_CDE_Parm_1 <> *BLANK;

EXECUTE FUNCTION(RTV Whse Desc,Ship co RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1705650;
PARAMETER(DTL.USR_CDE_Parm_1);
PARAMETER(DTL.USR_Comment_1);
PARAMETER(LCL.Shipping_Company);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

CASE;

// IF LCL.Shipping Company NE DTL.Company Number CDE
IF LCL.Shipping_Company <> DTL.Company_Number_CDE;

// Send error message - 'Warehouse &1 cannot ship from Company &2'
ERROR(USR3362);
MSGPARM(DTL.USR_CDE_Parm_1);
MSGPARM(DTL.Company_Number);

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Warehouse not found'
ERROR(USR0372);
MSGPARM(DTL.USR_CDE_Parm_1);

ENDIF;

//?Validate warehouse 2 if entered
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.USR Comment 1 = CND.Eq Blank
DTL.USR_Comment_1 = *BLANK;

ENDIF;

//?USER: User defined action

MOVE *ALL (To: PAR From: DTL);

// Call program PMT Print Option  SHR  PV.
CALL PROGRAM(PMT Print Option  SHR  PV) ('PDG0PVR');
PARAMETER('Print Traffic Cards');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('OMS');

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

//?Submit job for print
//?dont pass whses if load id is entered
CASE;

// IF DTL.Load ID is NE Blank
IF DTL.Load_ID <> *ZERO;

// DTL.Warehouse Code = CON.*BLANK
DTL.Warehouse_Code = *BLANK;

// DTL.USR CDE Parm 1 = CON.*BLANK
DTL.USR_CDE_Parm_1 = *BLANK;

ENDIF;

//?This Company is the Load Start Company
// PAR.System Value Numeric = PAR.PRT Number of Copies
PAR.System_Value_Numeric = PAR.PRT_Number_of_Copies;

// PAR.Company Number Pass   USR = DTL.Company Number CDE
PAR.Company_Number_Pass_USR = DTL.Company_Number_CDE;

// PAR.Date 1          PASS  USR = DTL.Scheduled Ship Date
PAR.Date_1_PASS_USR = DTL.Scheduled_Ship_Date;

// PAR.Order Number 1  PASS  USR = DTL.Load ID
PAR.Order_Number_1_PASS_USR = DTL.Load_ID;

// Call program Natv Prt Traffic Card  CL.
CALL PROGRAM(Natv Prt Traffic Card  CL) ('PBJUUPR');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Date_1_PASS_USR);
PARAMETER(PAR.Order_Number_1_PASS_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.USR_CDE_Parm_1);
PARAMETER(DTL.Number_of_Times_Usr);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

ENDIF;

