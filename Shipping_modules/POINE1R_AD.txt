// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POINE1R
// ?Date: 14.08.2025 Time: 03:37:27
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize key screen

CASE;

// IF KEY.Consignee Number is *zero
IF KEY.Consignee_Number = *ZERO;

EXECUTE FUNCTION(Rtv Last Used Nbr     RT) TYPE(RTVOBJ) FILE(POA2REP)           AC1611130;
PARAMETER(KEY.Consignee_Number);
{
 //?USER: Processing if Data record not found

 // PAR.Consignee Number = CON.*ZERO
 PAR.Consignee_Number = *ZERO;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// KEY.Consignee Number = KEY.Consignee Number + CON.1
KEY.Consignee_Number = KEY.Consignee_Number + 1;

ENDIF;

//?USER: Initialize detail screen (new record)

//?DO2416 DN 03/25/22-Populate 'State/Prov/Add3 USR' Text.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?USER: Initialize detail screen (existing record)

// DTL.Text USR 12 = Condition name of DTL.Consignee/Consignor Type
DTL.Text_USR_12 = RTVCND(DTL.Consignee_Consignor_Type);

EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(DB1.Country_Code);
PARAMETER(DTL.Condition_Desc_1_USR);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?DO2416 DN 03/25/22-Populate 'State/Prov/Add3 USR' Text.
CASE;

// IF DTL.Consignee/Consignor Type is Consignee
IF DTL.Consignee_Consignor_Type = 'E';

//?DO2416 DN 03/25/22-Populate 'State/Prov/Add3 USR' Text.
// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?USER: Validate detail screen fields

//?R16637 DN 09/23/20-Allow for F4=Prompt.
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?State.
CASE;

// IF PGM.*Cursor field <IS> DTL.Consignee State
IF PGM.*Cursor_field = DTL.Consignee_State;

// Call program SEL State              SR.
CALL PROGRAM(SEL State              SR) ('CAAHSRR');
PARAMETER(DTL.Consignee_State);

ENDIF;

//?Country.
CASE;

// IF PGM.*Cursor field <IS> DTL.Address Country Code
IF PGM.*Cursor_field = DTL.Address_Country_Code;

// Call program SEL Country Active     SR.
CALL PROGRAM(SEL Country Active     SR) ('PDEGSRR');
PARAMETER(DTL.Address_Country_Code);

ENDIF;

ENDIF;

CASE;

// IF DTL.Consignee Alpha Search is not entered
IF DTL.Consignee_Alpha_Search = *BLANK;

// DTL.Consignee Alpha Search = DTL.Consignee Name
DTL.Consignee_Alpha_Search = DTL.Consignee_Name;

ENDIF;

// DTL.Text USR 12 = Condition name of DTL.Consignee/Consignor Type
DTL.Text_USR_12 = RTVCND(DTL.Consignee_Consignor_Type);

//?R16637 DN 09/23/20-Validations.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?State.
CASE;

// IF DTL.Consignee State is State code not Blanks
IF DTL.Consignee_State <> *BLANK;

EXECUTE FUNCTION(Val State & Active     RT) TYPE(RTVOBJ) FILE(CAACREP)          AC2188226;
PARAMETER(DTL.Consignee_State);
PARAMETER(LCL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 // PAR.Record Status = DB1.Record Status
 PAR.Record_Status = DB1.Record_Status;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Record Status = CND.Inactive
 PAR.Record_Status = 'I';

 ENDIF;

}


//?Check Return Code.
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

CASE;

// IF LCL.Record Status is Inactive
IF LCL.Record_Status = 'I';

// Send error message - 'State &1 Inactive.'
ERROR(USR5197);
MSGPARM(DTL.Consignee_State);

QUIT;

ENDIF;

//?Check Return Code.
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'State not found'
ERROR(USR1838);
MSGPARM(DTL.Consignee_State);

QUIT;

ENDIF;

ENDIF;

//?Country.
CASE;

// IF DTL.Address Country Code is Entered
IF DTL.Address_Country_Code <> *BLANK;

EXECUTE FUNCTION(Val Country & Active   RT) TYPE(RTVOBJ) FILE(OME5REP)          AC2188228;
PARAMETER(DTL.Address_Country_Code);
PARAMETER(LCL.Record_Status);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 // PAR.Record Status = DB1.Record Status
 PAR.Record_Status = DB1.Record_Status;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Record Status = CND.Inactive
 PAR.Record_Status = 'I';

 ENDIF;

}


//?Check Return Code.
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

CASE;

// IF LCL.Record Status is Inactive
IF LCL.Record_Status = 'I';

// Send error message - 'Country &1 Inactive.'
ERROR(USR5198);
MSGPARM(DTL.Address_Country_Code);

QUIT;

ENDIF;

//?S022945 JM 01/24/25-Validate if country is live with PHIS
CASE;

// IF DTL.Consignee_Consignor Type is Consignee
IF DTL.Consignee_Consignor_Type = 'E';

EXECUTE FUNCTION(Rtv Live with PHIS    RT) TYPE(RTVOBJ) FILE(PDMMREP)           AC2160999;
PARAMETER(360);
PARAMETER('A');
PARAMETER(DTL.Address_Country_Code);
PARAMETER(LCL.ED_Live_with_PHIS);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Check other plants also if PHIS is Not Yes.
CASE;

// IF LCL.ED Live with PHIS is Not Yes
IF LCL.ED_Live_with_PHIS = *BLANK/'N';

EXECUTE FUNCTION(Rtv Live with PHIS    RT) TYPE(RTVOBJ) FILE(PDMMREP)           AC2160999;
PARAMETER(440);
PARAMETER('A');
PARAMETER(DTL.Address_Country_Code);
PARAMETER(LCL.ED_Live_with_PHIS);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.ED Live with PHIS is Not Yes
IF LCL.ED_Live_with_PHIS = *BLANK/'N';

EXECUTE FUNCTION(Rtv Live with PHIS    RT) TYPE(RTVOBJ) FILE(PDMMREP)           AC2160999;
PARAMETER(960);
PARAMETER('A');
PARAMETER(DTL.Address_Country_Code);
PARAMETER(LCL.ED_Live_with_PHIS);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

ENDIF;

CASE;

// IF LCL.ED Live with PHIS is yes
IF LCL.ED_Live_with_PHIS = 'Y';

// AND DTL.Consignee Address Ln4City is Blank
AND DTL.Consignee_Address_Ln4City = *BLANK;

// Send error message - 'Address line 4 can not be blank as Country is Live with PHIS.'
ERROR(USR5535);
MSGPARM(DTL.Consignee_Address_Ln4City);

ENDIF;

ENDIF;

//?Check Return Code.
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Country Code not found.'
ERROR(USR2030);
MSGPARM(DTL.Address_Country_Code);

QUIT;

ENDIF;

ENDIF;

ENDIF;

//?CALC: Detail screen function fields

EXECUTE FUNCTION(Country Description DRV) TYPE(DRVFLD)                          AC2188698;
PARAMETER(DTL.Country_Description_DRV);
PARAMETER(DTL.Address_Country_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Country Desc       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC2188699;
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.Country_Description_DRV);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Create DBF record

EXECUTE FUNCTION(Crt Consignee NameAdd CR) TYPE(CRTOBJ) FILE(POA2REP)           AC1611072;
PARAMETER(DTL.Consignee_Number);
PARAMETER(DTL.Consignee_Consignor_Type);
PARAMETER(DTL.Consignee_Name);
PARAMETER(DTL.Consignee_Address_Line_1);
PARAMETER(DTL.Consignee_Address_Line_2);
PARAMETER(DTL.Consignee_Address_Line_3);
PARAMETER(DTL.Consignee_Address_Ln4City);
PARAMETER(DTL.Consignee_State);
PARAMETER(DTL.Consignee_Postal);
PARAMETER(DTL.Address_Country_Code);
PARAMETER(DTL.Consignee_Telephone);
PARAMETER(DTL.Consignee_Alpha_Search);
PARAMETER(DTL.Consignee_Phone_Number);
PARAMETER(DTL.Consignee_Unused_Number);
PARAMETER(DTL.Consignee_Unused_Text);
PARAMETER(DTL.Consignee_Addr_1_PHIS);
PARAMETER(DTL.Consignee_Addr_2_PHIS);
PARAMETER(DTL.Consignee_Addr_3_PHIS);
PARAMETER(DTL.Consignee_city_PHIS);
PARAMETER(DTL.Country_Code);
PARAMETER(DTL.CNA_Unused_Status_1);
PARAMETER(DTL.CNA_Unused_Status_2);
PARAMETER(DTL.CNA_Unused_Nbr_1);
PARAMETER(DTL.CNA_Unused_Date_1);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Create_Date);
PARAMETER(DTL.Create_Time);
PARAMETER(DTL.Create_User);
PARAMETER(DTL.Create_Program);
PARAMETER(DTL.Change_Date);
PARAMETER(DTL.Change_Time);
PARAMETER(DTL.Change_User);
PARAMETER(DTL.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

 EXECUTE FUNCTION(RTV Alpha Value W/O Co RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1754635;
 PARAMETER('CONSIGNEE');
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Initialize routine

  // PAR.System Value Alpha = CON.*BLANK
  PAR.System_Value_Alpha = *BLANK;

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // WRK.Text 7 Alpha Usr = CVTVAR(PAR.Consignee Number)
 WRK.Text_7_Alpha_Usr = CVTVAR(PAR.Consignee_Number);

 // Execute function CLC Remove LeadZeros 7 US.
 EXECUTE FUNCTION(CLC Remove LeadZeros 7 US) TYPE(EXCUSRSRC) ('PBX0UFR');
 PARAMETER(WRK.Text_7_Alpha_Usr);
 PARAMETER(WRK.Text_USR_7);
 {
  E                    AR1         7  1               ARRAY 1
  E                    AR2         7  1               ARRAY 2
  C                     MOVEAWUZ3TX    AR1              LOAD ARRAY
  C                     Z-ADD1         X       20       SET COUNTER
  C                     Z-ADD1         Y       20       SET COUNTER
  C                     MOVE 'N'       STOP    1        FLAG
  C           X         DOWLT8
  C           AR1,X     IFEQ '0'
  C           STOP      ANDEQ'N'
  C                     ADD  1         X
  C                     ELSE
  C                     MOVE AR1,X     AR2,Y
  C                     ADD  1         Y
  C                     ADD  1         X
  C                     MOVE 'Y'       STOP
  C                     END
  C                     END
  C                     MOVEAAR2       WUY8TX           LOAD OUTPUT
 }

 // LCL.Text Usr 50 = CONCAT(WRK.Text USR 7,PAR.Consignee Name,CON.2)
 LCL.Text_Usr_50 = WRK.Text_USR_7 + PAR.Consignee_Name (2);

 // LCL.Pager Msg 256 USR = CONCAT(CON.Consignee Created:,LCL.Text Usr 50,CON.2)
 LCL.Pager_Msg_256_USR = 'Consignee Created:' + LCL.Text_Usr_50 (2);

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Consignee NameAdd CH) TYPE(CHGOBJ) FILE(POA2REP)           AC1611073;
PARAMETER(DTL.Consignee_Number);
PARAMETER(DTL.Consignee_Consignor_Type);
PARAMETER(DTL.Consignee_Name);
PARAMETER(DTL.Consignee_Address_Line_1);
PARAMETER(DTL.Consignee_Address_Line_2);
PARAMETER(DTL.Consignee_Address_Line_3);
PARAMETER(DTL.Consignee_Address_Ln4City);
PARAMETER(DTL.Consignee_State);
PARAMETER(DTL.Consignee_Postal);
PARAMETER(DTL.Address_Country_Code);
PARAMETER(DTL.Consignee_Telephone);
PARAMETER(DTL.Consignee_Alpha_Search);
PARAMETER(DTL.Consignee_Phone_Number);
PARAMETER(DTL.Consignee_Unused_Number);
PARAMETER(DTL.Consignee_Unused_Text);
PARAMETER(DTL.Consignee_Addr_1_PHIS);
PARAMETER(DTL.Consignee_Addr_2_PHIS);
PARAMETER(DTL.Consignee_Addr_3_PHIS);
PARAMETER(DTL.Consignee_city_PHIS);
PARAMETER(DTL.Country_Code);
PARAMETER(DTL.CNA_Unused_Status_1);
PARAMETER(DTL.CNA_Unused_Status_2);
PARAMETER(DTL.CNA_Unused_Nbr_1);
PARAMETER(DTL.CNA_Unused_Date_1);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Create_Date);
PARAMETER(DTL.Create_Time);
PARAMETER(DTL.Create_User);
PARAMETER(DTL.Create_Program);
PARAMETER(DTL.Change_Date);
PARAMETER(DTL.Change_Time);
PARAMETER(DTL.Change_User);
PARAMETER(DTL.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(RTV Alpha Value W/O Co RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1754635;
 PARAMETER('CONSIGNEE');
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Initialize routine

  // PAR.System Value Alpha = CON.*BLANK
  PAR.System_Value_Alpha = *BLANK;

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // WRK.Text 7 Alpha Usr = CVTVAR(PAR.Consignee Number)
 WRK.Text_7_Alpha_Usr = CVTVAR(PAR.Consignee_Number);

 // Execute function CLC Remove LeadZeros 7 US.
 EXECUTE FUNCTION(CLC Remove LeadZeros 7 US) TYPE(EXCUSRSRC) ('PBX0UFR');
 PARAMETER(WRK.Text_7_Alpha_Usr);
 PARAMETER(WRK.Text_USR_7);
 {
  E                    AR1         7  1               ARRAY 1
  E                    AR2         7  1               ARRAY 2
  C                     MOVEAWUZ3TX    AR1              LOAD ARRAY
  C                     Z-ADD1         X       20       SET COUNTER
  C                     Z-ADD1         Y       20       SET COUNTER
  C                     MOVE 'N'       STOP    1        FLAG
  C           X         DOWLT8
  C           AR1,X     IFEQ '0'
  C           STOP      ANDEQ'N'
  C                     ADD  1         X
  C                     ELSE
  C                     MOVE AR1,X     AR2,Y
  C                     ADD  1         Y
  C                     ADD  1         X
  C                     MOVE 'Y'       STOP
  C                     END
  C                     END
  C                     MOVEAAR2       WUY8TX           LOAD OUTPUT
 }

 // LCL.Text Usr 50 = CONCAT(WRK.Text USR 7,PAR.Consignee Name,CON.2)
 LCL.Text_Usr_50 = WRK.Text_USR_7 + PAR.Consignee_Name (2);

 // LCL.Pager Msg 256 USR = CONCAT(CON.Consignee Changed:,LCL.Text Usr 50,CON.2)
 LCL.Pager_Msg_256_USR = 'Consignee Changed:' + LCL.Text_Usr_50 (2);

}


