// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNJNDFR
// ?Date: 14.08.2025 Time: 03:45:21
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?WI464 RMC 10/4/22
//?  GET PALLET WT FROM PALLET MASTER INSTEAD OF ITEM BOM/ITEM
//?E00196 RMC 8/24/12 chk pfs interface SHPTRN too when chking live w/carlisl
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(LCL.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);

// CTL.*Subfile mode = CND.Truncated
CTL.*Subfile_mode = 1;

//?USER: Initialize subfile control

CASE;

// IF PAR.Header Status is Confirmed & Complete
IF PAR.Header_Status = 'C'/'R';

// CTL.Text USR 9 = CON.Confirmed
CTL.Text_USR_9 = 'Confirmed';

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Text USR 9 = CON.Estimated
CTL.Text_USR_9 = 'Estimated';

ENDIF;

// Call program RTV Gross Wgt/Qty     XF.
CALL PROGRAM(RTV Gross Wgt/Qty     XF) ('PQPQXFR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(CTL.USR_Weight);
PARAMETER(LCL.Order_Quantity);
PARAMETER(CTL.Avg_Pallet_Tare);

//?USER: Initialize subfile record from DBF record

//?SEL: Detail Not Cancelled
CASE;

// IF DB1.Detail Line Status is Not cancelled
IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

//?SEL: Detail Not Cancelled
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SEL: Regular and Transfer Orders
CASE;

// IF DB1.Order Type - Sales is Regular Order
IF DB1.Order_Type_Sales = 'OR';

// OR DB1.Order Type - Sales is Transfer Order
OR DB1.Order_Type_Sales = 'TR';

//?SEL: Regular and Transfer Orders
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?PROCESS RECORD
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

//?* Move values to small fields *
// RCD.Quantity Ordered USR = DB1.Quantity Ordered
RCD.Quantity_Ordered_USR = DB1.Quantity_Ordered;

// RCD.Quantity Sales USR = DB1.Quantity Shipped Total
RCD.Quantity_Sales_USR = DB1.Quantity_Shipped_Total;

// RCD.Weight Order Needs USR = DB1.Weight Ordered
RCD.Weight_Order_Needs_USR = DB1.Weight_Ordered;

// RCD.Weight Sched Prod USR = DB1.Weight Shipped Total
RCD.Weight_Sched_Prod_USR = DB1.Weight_Shipped_Total;

EXECUTE FUNCTION(Rtv Tare Weight        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1228249;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(LCL.Description_Line_One);
PARAMETER(RCD.Misc_Tare_Weight);

EXECUTE FUNCTION(RTV Itm BxID & Tares  RT) TYPE(RTVOBJ) FILE(PDIOREP)           AC1939974;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Box_Weight);
PARAMETER(RCD.Number_Cases_On_A_Pallet);
PARAMETER(RCD.Pallet_Tare_Weight);
PARAMETER(RCD.Box_iD);

EXECUTE FUNCTION(Rtv Pallet Weight     RT) TYPE(RTVOBJ) FILE(PUB6CPP)           AC2209418;
PARAMETER(RCD.OD_Pallet_Type);
PARAMETER(LCL.Pallet_Tare_Weight);

//?Pallet weight per pallet type on the order
CASE;

// IF LCL.Pallet Tare Weight is not 0
IF LCL.Pallet_Tare_Weight <> 0;

// AND LCL.Pallet Tare Weight NE RCD.Pallet Tare Weight
AND LCL.Pallet_Tare_Weight <> RCD.Pallet_Tare_Weight;

// RCD.Pallet Tare Weight = LCL.Pallet Tare Weight
RCD.Pallet_Tare_Weight = LCL.Pallet_Tare_Weight;

ENDIF;

// RCD.Total Tare USR = RCD.Box Weight + RCD.Misc Tare Weight
RCD.Total_Tare_USR = RCD.Box_Weight + RCD.Misc_Tare_Weight;

// Box + Misc Tare
RCD.Weight_1_1_U = ( RCD.Box_Weight + RCD.Misc_Tare_Weight ) * RCD.Quantity_Ordered 'H';

//?Pallet Tare
CASE;

// IF DB1.Palletize is yes
IF DB1.Palletize = 'Y';

CASE;

// IF RCD.Number Cases On A Pallet is GT Zero
IF RCD.Number_Cases_On_A_Pallet > *ZERO;

// Pallet Weight
RCD.Weight_1_2_U = ( DB1.Quantity_Ordered / RCD.Number_Cases_On_A_Pallet 'H' )                     +
 * RCD.Pallet_Tare_Weight 'H';

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Weight 1.2             .U = CON.*ZERO
RCD.Weight_1_2_U = *ZERO;

ENDIF;

//?Pallet Tare
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Weight 1.2             .U = CON.*ZERO
RCD.Weight_1_2_U = *ZERO;

ENDIF;

// Estimated Gross
RCD.Weight_1_3_U = ( RCD.Weight_Ordered + RCD.Weight_1_1_U ) + RCD.Weight_1_2_U;

EXECUTE FUNCTION(Rtv Live w/Carlisle   RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1747217;
PARAMETER(RCD.Warehouse_Code);
PARAMETER(LCL.WHS_Live_with_Carlisle);

//?E00196 RMC 8/24/12 chk pfs interface SHPTRN too
EXECUTE FUNCTION(Rtv Active Status     RT) TYPE(RTVOBJ) FILE(PPBUREP)           AC1740339;
PARAMETER(RCD.Company_Number);
PARAMETER('SHPTRN');
PARAMETER(LCL.PFS_AccuSort_Active);
PARAMETER(LCL.PFS_Carlisle_Active);

//?Box & Miscellaneous Tare
CASE;

// IF LCL.WHS Live w/Carlisle is Yes
IF LCL.WHS_Live_with_Carlisle = 'Y';

// AND LCL.PFS Carlisle Active is Yes
AND LCL.PFS_Carlisle_Active = 'Y';

EXECUTE FUNCTION(Rtv Tare Weight       RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1940018;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Order_Number);
PARAMETER(RCD.Order_Sequence_Number);
PARAMETER(RCD.Order_Secondary_Line_Seq);
PARAMETER(RCD.Weight_2_1_U);
PARAMETER(CTL.Avg_Pallet_Tare);
PARAMETER(RCD.U_M_Ordered);
PARAMETER(RCD.Palletize);

//?Box & Miscellaneous Tare
// IF *OTHERWISE
IF *OTHERWISE;

// Box + Misc Tare
RCD.Weight_2_1_U = ( RCD.Box_Weight + RCD.Misc_Tare_Weight ) * RCD.Quantity_Shipped_Total          +
 'H';

ENDIF;

// RCD.Weight 2.3             .U = RCD.Weight Shipped Total + RCD.Weight 2.1             .U
RCD.Weight_2_3_U = RCD.Weight_Shipped_Total + RCD.Weight_2_1_U;

ENDIF;

