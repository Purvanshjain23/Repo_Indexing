/***************************************************************** */
/*  PROGRAM NUMBER:  PPQHUPC                                       */
/*  PROGRAM NAME:    SEND PFS DOWNLOAD FILE                        */
/*  PROGRAMMER:      PURVA DROGE                                   */
/*  CREATE DATE:     06/21/05                                      */
/*                                                                 */
/*  FUNCTION:        THIS CLP CREATES A FILE IN QTEMP FOR SENDING  */
/*                   TO THE PLANT FLOOR SYSTEM SERVER              */
/*                                                                 */
/*******************************************************************/
/* SAMPLE CALL STATEMENT                                           */
/* ----------------------------------------------------------------*/
/* CALL PGM(PPQHUPC) PARM(&COA  &LIB      &FILE  &UPDIDX           */
/*           &DWNFILE   &SNTFILE   &PGM    &UPDDELPGM)             */
/* CALL PGM(PPQHUPC) PARM('360' PRKTESTF PPA7REP PPA7REL4          */
/*           PPA7REPGUY PPA7REPSNT PPQGXFR PPQJXFR)                */
/* ----------------------------------------------------------------*/
/* DWNFILE: XXXXXXX111 WHERE XXXXXXX = FILE, 111=GUY OR STJ        */
/* SNTFILE: XXXXXXXSNT WHERE XXXXXXX = FILE                        */
/*                              FILE    UPDIDX   PGM     UPDDELPGM */
/*                              ------- -------- ------- --------- */
/* BOX                          PPA7REP PPA7REL4 PPQGXFR PPQJXFR   */
/* CUSTOMER COMMENT             PPBEREP PPBEREL4 PPQKXFR PPQLXFR   */
/* DEPARTMENT                   PPA6REP PPA6REL4 PPQMXFR PPQNXFR   */
/* LOAD HEADER                  PPBACPP PPBACPL5 PPQOXFR PPQPXFR   */
/* ORDER DETAIL                 PPBCCPP PPBCCPL4 PPQQXFR PPQRXFR   */
/* ORDER HEADER                 PPBBCPP PPBBCPL5 PPQSXFR PPQTXFR   */
/* PRODUCT                      PPA5REP PPA5REL4 PPQUXFR PPQVXFR   */
/* PRODUCT PACKAGING            PPBOREP PPBOREL4 PPQWXFR PPQXXFR   */
/* PRODUCTION SCHEDULE          PPA9CPP PPAPCPL4 PPQYXFR PPQZXFR   */
/* REGULATION CODE MASTER       PUC7REP PUC7REL3 PUZCXFR PUZDXFR   */
/* SHIPPING INSTRUCTION         PPBDCPP PPBDCPL4 PPQ0XFR PPQ2XFR   */
/* WAREHOUSE                    PPA8REP PPA8REL4 PPQ2XFR PPQ3XFR   */
/*                                                                 */
/*******************************************************************/
/* Modification History                                            */
/*                                                                 */
/* MM/DD/YY PGMR EXPLANATION OF CHANGE                             */
/* -------- ---- ------------------------------------------------- */
/* 04/07/08 PKD  ADDED &CRTTST AND &TSTLIB PARAMETERS. THIS WILL    */
/*               CREATE THE SUFFIXED FILES INTO A TEST ENVIRONMENT */
/*               AT THE SAME TIME THE PRODUCTION FILES ARE CREATED */
/* 04/17/23 EL   REGULATION CODE MASTER LOGIC (PUC7REP PUC7REL0)   */
/*******************************************************************/
             PGM        PARM(&COA &LIB &FILE &UPDIDX &DWNFILE +
                          &DWNFILE2 &SNTFILE &PGM &UPDDELPGM +
                          &CRTTST &TSTLIB)

/*-----------------------------------------------------------------*/
/* PARAMETER                                                       */
/*-----------------------------------------------------------------*/
             DCL        VAR(&COA) TYPE(*CHAR) LEN(3)
             DCL        VAR(&LIB) TYPE(*CHAR) LEN(10)
             DCL        VAR(&FILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&UPDIDX) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DWNFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&DWNFILE2) TYPE(*CHAR) LEN(10)
             DCL        VAR(&SNTFILE) TYPE(*CHAR) LEN(10)
             DCL        VAR(&PGM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&UPDDELPGM) TYPE(*CHAR) LEN(10)
             DCL        VAR(&CRTTST) TYPE(*CHAR) LEN(1)
             DCL        VAR(&TSTLIB) TYPE(*CHAR) LEN(10)

/*-----------------------------------------------------------------*/
/* PROGRAM VARIABLES                                               */
             DCL        VAR(&CO) TYPE(*DEC) LEN(3 0)
/*-----------------------------------------------------------------*/
             DCL        VAR(&NBRCURRCD) TYPE(*DEC) LEN(10 0) VALUE(0)
             DCL        VAR(&NBRCURRCD2) TYPE(*DEC) LEN(10 0) VALUE(0)

/*-----------------------------------------------------------------*/
/* INITIALIZE                                                      */
/*-----------------------------------------------------------------*/
             CHGVAR     VAR(&CO) VALUE(&COA)

/*-----------------------------------------------------------------*/
/* QTEMP SETUP                                                     */
/*-----------------------------------------------------------------*/
/* PHYSICAL FILE */
             CRTDUPOBJ  OBJ(&FILE) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP) NEWOBJ(&FILE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUPPF))

/* UPDATE INDEX  */
             CRTDUPOBJ  OBJ(&UPDIDX) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP) NEWOBJ(&UPDIDX)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUPLF))

/*-----------------------------------------------------------------*/
/* CREATE RECORDS IN QTEMP                                         */
/*-----------------------------------------------------------------*/

             IF         COND(&CO *EQ 0) THEN(DO)
               CALL       PGM(&PGM) PARM(' ')
               MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(PGMCALL))
             ENDDO
             ELSE DO
               CALL       PGM(&PGM) PARM(' ' &CO)
               MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(PGMCALL))
             ENDDO
/*-----------------------------------------------------------------*/
/* POST PROCESS                                                    */
/*-----------------------------------------------------------------*/
/* COPY QTEMP RECORDS TO DOWNLOAD FILE */
             /* CHECK IF DOWNLOAD FILE HAVE ANY RECORDS         */
             RTVMBRD    FILE(&LIB/&DWNFILE) NBRCURRCD(&NBRCURRCD)
             IF COND(&DWNFILE2 *NE *BLANKS) THEN(DO)
               RTVMBRD    FILE(&LIB/&DWNFILE2) NBRCURRCD(&NBRCURRCD2)
             ENDDO
             /* CREATE THE SUFFIXED FILES IF THE FILE IS EMPTY  */
             /* IF THE FILES IS NOT EMPTY, CARLISLE HAS NOT     */
             /* PULLED DOWN THE DATA FROM THE SUFFIXED FILE YET */
             IF         COND(&NBRCURRCD *EQ 0 *AND &NBRCURRCD2 *EQ +
                          0) THEN(DO)
               /* ADD RECORDS TO THE SUFFIXED FILE */
               CPYF       FROMFILE(QTEMP/&FILE) TOFILE(&DWNFILE) +
                          MBROPT(*ADD) FMTOPT(*MAP *DROP)
               MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYSNT))
               IF         COND(&CRTTST *EQ 'Y' *AND &TSTLIB *NE +
                          *BLANKS) THEN(DO)
                  CPYF       FROMFILE(QTEMP/&FILE) +
                          TOFILE(&TSTLIB/&DWNFILE) MBROPT(*ADD) +
                          FMTOPT(*MAP *DROP)
                  MONMSG MSGID(CPF0000) EXEC(SNDMSG MSG('WARNING:' +
                       *BCAT &DWNFILE *BCAT 'NOT COPIED TO TEST +
                        LIBRARY.') TOUSR(SEABOARD)) /* CONTINUE */
               ENDDO
               /* IF ANOTHER FILE WAS SPECIFIED, THEN ADD RECORDS */
               /* TO IT ALSO. (&DWNFILE2)                         */
               IF COND(&DWNFILE2 *NE *BLANKS) THEN(DO)
                  CPYF       FROMFILE(QTEMP/&FILE) TOFILE(&DWNFILE2) +
                          MBROPT(*ADD) FMTOPT(*MAP *DROP)
                  MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYSNT))
               ENDDO
               ENDDO
             ELSE DO
               /* RECORDS STILL EXISTS IN THE DOWNLOAD FILE.      */
               IF         COND(&CO *EQ 0) THEN(DO)
                  CALL       PGM(&UPDDELPGM) PARM(' ' 'U')
                  MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(UPDRCD))
                  SNDMSG     MSG('WARNING:' *BCAT &DWNFILE *BCAT 'not +
                          downloaded.') TOUSR(SEABOARD)
                  GOTO       CMDLBL(ENDPGM)
                  ENDDO
               ELSE DO
                  CALL       PGM(&UPDDELPGM) PARM(' ' &CO 'U')
                  MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(UPDRCD))
                  SNDMSG     MSG('WARNING:' *BCAT &DWNFILE *BCAT 'not +
                          downloaded.') TOUSR(SEABOARD)
                  GOTO       CMDLBL(ENDPGM)
               ENDDO
             ENDDO

/* ADD QTEMP RECORDS TO SENT FILE         */
             CPYF       FROMFILE(QTEMP/&FILE) TOFILE(&SNTFILE) +
                          MBROPT(*ADD) FMTOPT(*MAP *DROP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYSNT))

/* DELETE PROCESSED RECORDS FROM FILE     */
             IF         COND(&CO *EQ 0) THEN(DO)
               CALL       PGM(&UPDDELPGM) PARM(' ' 'D')
               MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(DELRCD))
               ENDDO
             ELSE DO
               CALL       PGM(&UPDDELPGM) PARM(' ' &CO 'D')
               MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(DELRCD))
             ENDDO

             GOTO       CMDLBL(ENDPGM)
/*-----------------------------------------------------------------*/
/*                      ERROR                                      */
/*-----------------------------------------------------------------*/
 CRTDUPPF:
             SNDPGRMSG  TOPGR(PRKPFSDWN) MSG('ERROR:  Create +
                          duplicate file in qtemp for' *BCAT &FILE)
             CHGJOB     LOG(4 00 *SECLVL)
             GOTO       CMDLBL(ENDPGM)

 CRTDUPLF:
             SNDPGRMSG  TOPGR(PRKPFSDWN) MSG('ERROR:  Create +
                          duplicate file in qtemp for' *BCAT &UPDIDX)
             CHGJOB     LOG(4 00 *SECLVL)
             GOTO       CMDLBL(ENDPGM)

 PGMCALL:
             SNDPGRMSG  TOPGR(PRKPFSDWN) MSG('ERROR:  Call to create +
                          QTEMP file for' *BCAT &FILE)
             CHGJOB     LOG(4 00 *SECLVL)
             GOTO       CMDLBL(ENDPGM)

 CPYSNT:
             SNDPGRMSG  TOPGR(PRKPFSDWN) MSG('ERROR:  Copy QTEMP +
                          records to sent file' *BCAT &SNTFILE)
             CHGJOB     LOG(4 00 *SECLVL)
             GOTO       CMDLBL(ENDPGM)

 DELRCD:
             SNDPGRMSG  TOPGR(PRKPFSDWN) MSG('ERROR:  Delete +
                          processed records from file' *BCAT &FILE)
             CHGJOB     LOG(4 00 *SECLVL)
             GOTO       CMDLBL(ENDPGM)
 UPDRCD:
             SNDPGRMSG  TOPGR(PRKPFSDWN) MSG('ERROR:  Update process +
                          status back to unprocessed for file' +
                          *BCAT &FILE)
             CHGJOB     LOG(4 00 *SECLVL)
             GOTO       CMDLBL(ENDPGM)
/*-----------------------------------------------------------------*/
/*                      PROGRAM END                                */
/*-----------------------------------------------------------------*/
 ENDPGM:

             ENDPGM
