// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVHOXFR
// ?Date: 14.08.2025 Time: 03:52:14
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV Select processed   RT) TYPE(RTVOBJ) FILE(ECP057)           AC2235052;
PARAMETER(PAR.EDI_SURROGATE_NUMBER);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
 PARAMETER('DTALIB');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(NLL.@Library_List_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.System Value Code is Data File Library
  IF DB1.System_Value_Code = 'DTALIB';

  // PAR.Library List Code = DB1.System Value Alpha
  PAR.Library_List_Code = DB1.System_Value_Alpha;

  // IF DB1.System Value Code is History File Library
  IF DB1.System_Value_Code = 'HISLIB';

  // PAR.@Library List Code = DB1.System Value Alpha
  PAR.@Library_List_Code = DB1.System_Value_Alpha;

  QUIT;

  ENDIF;

 }

 // LCL.First Time Through USR = CND.Yes
 LCL.First_Time_Through_USR = 'Y';

 // LCL.Send Email USR = CND.No
 LCL.Send_Email_USR = 'N';

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Get WHS Duns NumberRT) TYPE(RTVOBJ) FILE(ECP059)           AC2235053;
 PARAMETER(DB1.EDI_SURROGATE_NUMBER);
 PARAMETER('WH');
 PARAMETER(LCL.EDI_Whs_Duns_Number);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Get EDT Trad PartneRT) TYPE(RTVOBJ) FILE(PNG0REP)          AC2235055;
 PARAMETER('WHSADV');
 PARAMETER(945);
 PARAMETER(LCL.EDI_Whs_Duns_Number);
 PARAMETER(LCL.EDI_Trading_Partner_No);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(RTV Get SSCC Pallet ID RT) TYPE(RTVOBJ) FILE(PVCKREP)          AC2235047;
 PARAMETER(LCL.EDI_Trading_Partner_No);
 PARAMETER(LCL.ESEND_Distribution_List);
 PARAMETER(LCL.Check_SSCC_Pallet_ID);
 PARAMETER(LCL.Record_Status);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Check SSCC Pallet ID is Yes
 IF LCL.Check_SSCC_Pallet_ID = 'Y';

 // AND LCL.Record Status is Active
 AND LCL.Record_Status = 'A';

 CASE;

 // IF LCL.EDI Trading Partner No is NorAm
 IF LCL.EDI_Trading_Partner_No = 'NORAM';

 //?Get order & company
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Load ID Alpha USR = DB1.W0604 Shipment Num/BOL
 LCL.Load_ID_Alpha_USR = DB1.W0604_Shipment_Num_BOL;

 // LCL.Order Number Alpha = DB1.W0602 Depositor Order Nbr
 LCL.Order_Number_Alpha = DB1.W0602_Depositor_Order_Nbr;

 EXECUTE FUNCTION(Rtv Co and Load       RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2125070;
 PARAMETER(LCL.Company_Number);
 PARAMETER(DB1.W0602_Depositor_Order_Nbr);
 PARAMETER(NLL.Load_ID);
 PARAMETER(NLL.Event_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Company Number is Guymon
 IF LCL.Company_Number = 360;

 // OR LCL.Company Number is Sioux City
 OR LCL.Company_Number = 440;

 // OR LCL.Company Number is St. Joseph
 OR LCL.Company_Number = 960;

 // LCL.Company Number Alpha = CVTVAR(LCL.Company Number)
 LCL.Company_Number_Alpha = CVTVAR(LCL.Company_Number);

 EXECUTE FUNCTION(Rtv All fields        RT) TYPE(RTVOBJ) FILE(PMAMREP)           AC2202538;
 PARAMETER(LCL.Company_Number);
 PARAMETER(DB1.W0602_Depositor_Order_Nbr);
 PARAMETER(NLL.Load_ID);
 PARAMETER(NLL.Stop_Drop_Sequence_Number);
 PARAMETER(NLL.Shipping_Line);
 PARAMETER(NLL.Port_Delv_Terminal);
 PARAMETER(NLL.OHE_City);
 PARAMETER(NLL.OHE_Vessel_Airline);
 PARAMETER(NLL.OHE_Voyage_Flight);
 PARAMETER(NLL.OHE_Booking_Number);
 PARAMETER(NLL.OHE_Discharge_Port_Airprt);
 PARAMETER(NLL.OHE_Sail_Flight_Date);
 PARAMETER(NLL.OHE_Port_Cut_Date);
 PARAMETER(NLL.OHE_Arrival_Date);
 PARAMETER(NLL.OHE_Late_Delivery_Code);
 PARAMETER(NLL.OHE_Ship_Status);
 PARAMETER(NLL.OHE_Container_Number);
 PARAMETER(NLL.OHE_Comment_1);
 PARAMETER(NLL.OHE_Comment_2);
 PARAMETER(NLL.OHE_Unused_Number_1_11_0);
 PARAMETER(NLL.OHE_Unused_Number_2_11_0);
 PARAMETER(NLL.OHE_Unused_Number_3_11_0);
 PARAMETER(NLL.OHE_Unused_Number_4_11_0);
 PARAMETER(NLL.OHE_HPB_RIN_Equiv_Value);
 PARAMETER(NLL.OHE_HPB_RIN_Price);
 PARAMETER(NLL.Transload_Terminal_Fees);
 PARAMETER(NLL.OHE_Est_Arrv_at_Dest_Date);
 PARAMETER(NLL.OHE_Backhaul_ETA_RtrnDate);
 PARAMETER(NLL.OHE_Port_Pier_Paid_Date);
 PARAMETER(NLL.OHE_Actual_Ship_Date);
 PARAMETER(NLL.OHE_Carrier_SCAC_Code);
 PARAMETER(NLL.OHE_Spot_Buy);
 PARAMETER(NLL.OHE_PO_ACK_Flag);
 PARAMETER(NLL.OHE_Override_Type_Code);
 PARAMETER(NLL.OHE_Backhaul_Status);
 PARAMETER(NLL.OHE_Backhaul_ETA_AM_PM);
 PARAMETER(NLL.OHE_Load_Haul_Type);
 PARAMETER(NLL.OHE_Backhaul_Carrier_Code);
 PARAMETER(NLL.OHE_Bookings_Confirmed);
 PARAMETER(LCL.OHE_EDI_Error_Reasons);
 PARAMETER(NLL.OHE_EDI_Error_Reasons_2);
 PARAMETER(NLL.HPB_COA_Batch_Number);
 PARAMETER(NLL.Delivery_P_O_Number);
 PARAMETER(NLL.OHE_Intended_for_ExportCC);
 PARAMETER(NLL.OHE_EDI_943_Action);
 PARAMETER(NLL.OHE_EDI_944_Action);
 PARAMETER(NLL.OHE_EDI_940_Action);
 PARAMETER(LCL.OHE_EDI_945_Action);
 PARAMETER(NLL.OHE_EDI_856_Action);
 PARAMETER(NLL.OHE_EDI_824_Action);
 PARAMETER(NLL.OHE_Transload_Seal_Nbr);
 PARAMETER(NLL.OHE_Abs_Rate_Override_Rsn);
 PARAMETER(NLL.OHE_Appt_Confirmation_#);
 PARAMETER(NLL.OHE_Backhaul_Container#);
 PARAMETER(NLL.OHE_Backhaul_Chassis_#);
 PARAMETER(NLL.OHE_Transload_Container#);
 PARAMETER(NLL.OHE_Pier_Pass_Invoice);
 PARAMETER(NLL.OHE_Carrier_Nm);
 PARAMETER(NLL.OHE_Appt_Confirmation_Nm);
 PARAMETER(NLL.OHE_Backhaul_Comment);
 PARAMETER(NLL.Letter_of_Credit_Number);
 PARAMETER(NLL.OHE_Backhaul_Return_to_Co);
 PARAMETER(NLL.LD_Stop_Drop);
 PARAMETER(NLL.OHE_Unused_Number_3_0);
 PARAMETER(NLL.OHE_Pier_Pass_Fee_Amount);
 PARAMETER(NLL.OHE_Port_Check_Fee_Amount);
 PARAMETER(NLL.OHE_Port_Cut_Time);
 PARAMETER(NLL.OHE_Backhaul_Truck_Number);
 PARAMETER(NLL.OHE_Load_Sched_Seq_Num);
 PARAMETER(NLL.Original_Appointment_Date);
 PARAMETER(NLL.Original_Appointment_Time);
 PARAMETER(NLL.OHE_PowerPro_Load#_Outbnd);
 PARAMETER(NLL.OHE_PowerPro_Load#_Bckhl);
 PARAMETER(NLL.OHE_Unused_Numeric_9_0_3);
 PARAMETER(NLL.OHE_Orig_ABS_Freight_Rate);
 PARAMETER(NLL.OHE_Genset_Number);
 PARAMETER(NLL.OHE_Email_BOL_Sent);
 PARAMETER(NLL.OHE_EDI_Order_Automated);
 PARAMETER(NLL.OHE_EDI_601_Action);
 PARAMETER(NLL.OHE_Unused_Status_4);
 PARAMETER(NLL.OHE_Unused_Text_1);
 PARAMETER(NLL.OHE_Unused_Text_2);
 PARAMETER(NLL.OHE_Customer_Vendor_f_PO);
 PARAMETER(NLL.OHE_EDI_824_AES_ITN_#);
 PARAMETER(NLL.OHE_Unused_Text_5);
 PARAMETER(NLL.OHE_Unused_Date_1);
 PARAMETER(NLL.OHE_Unused_Date_2);
 PARAMETER(NLL.EDI_Status_1);
 PARAMETER(NLL.EDI_Status_2);
 PARAMETER(NLL.EDI_Status_3);
 PARAMETER(NLL.Record_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Company Number Alpha = CVTVAR(CND.Zero)
 LCL.Company_Number_Alpha = CVTVAR('000');

 ENDIF;

 ENDIF;

 CASE;

 // IF LCL.Company Number Alpha is Not Zero
 IF LCL.Company_Number_Alpha <> '000';

 // AND LCL.OHE EDI Error Reasons is Invalid Pallet SSCID
 AND LCL.OHE_EDI_Error_Reasons = 'SSCID';

 // AND LCL.OHE EDI 945 Action is Received
 AND LCL.OHE_EDI_945_Action = 'R';

 //?Format Email Data.
 CASE;

 // IF LCL.First Time Through USR is Yes
 IF LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // LCL.Send Email USR = CND.Yes
 LCL.Send_Email_USR = 'Y';

 //?Format Email Subject Line.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Subject 2 USR = CONCAT(CON.EDI 945 NorAm Pallet ID,CON.Error Received,CON.1)
 LCL.Email_Subject_2_USR = 'EDI 945 NorAm Pallet ID' + 'Error Received' (1);

 //?If Not PROD Then Append 'TEST' to Email Subject Line.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

 ENDIF;

 ENDIF;

 //?Format Email Message.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.From: Seaboard Foods,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'From: Seaboard Foods' (0);

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.The inbound EDI 945 sent,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'The inbound EDI 945 sent' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.to Seaboard Foods consist,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'to Seaboard Foods consist' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.s of Pallet ID not valid.,CON.*ZERO
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 's of Pallet ID not valid.' (0);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.As a result an EDI 856 AS,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'As a result an EDI 856 AS' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.N cannot be generated.,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'N cannot be generated.' (0);

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Resolution: Supply Chain,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Resolution: Supply Chain' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.to work with 3PL to deter,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'to work with 3PL to deter' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.mine root cause & resolut,CON.*ZERO
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'mine root cause & resolut' (0);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.ion.,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'ion.' (0);

 //?Force New Line.Co/Load/Order.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Seaboard Co/Load/Order:,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Seaboard Co/Load/Order:' (1);

 //?Force New Line.Co/Load/Order.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------------,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------------' (1);

 //?Force New Line.Co/Load/Order.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Company Number Alpha,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Company_Number_Alpha (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Load ID Alpha USR,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Load_ID_Alpha_USR (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Order Number Alpha,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Order_Number_Alpha (*ZERO);

 ENDIF;

 //?Format Email Data.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Append additional Load/Order
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Force New Line.Co/Load/Order.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Company Number Alpha,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Company_Number_Alpha (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Load ID Alpha USR,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Load_ID_Alpha_USR (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON./,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '/' (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Order Number Alpha,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Order_Number_Alpha (*ZERO);

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 CASE;

 // IF LCL.Send Email USR is Yes
 IF LCL.Send_Email_USR = 'Y';

 // Call program Exc ESNDMAIL Generic2 CL.
 CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
 PARAMETER(LCL.ESEND_Distribution_List);
 PARAMETER(LCL.Email_Subject_2_USR);
 PARAMETER(LCL.Email_Message_2_USR);

 ENDIF;

}


