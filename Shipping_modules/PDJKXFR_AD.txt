// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDJKXFR
// ?Date: 14.08.2025 Time: 03:28:32
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.USR Orders on Stop = CON.*ZERO
PAR.USR_Orders_on_Stop = *ZERO;

// PAR.USR Stop Total Weight = CON.*ZERO
PAR.USR_Stop_Total_Weight = *ZERO;

// PAR.USR Misc. Amount = CON.*ZERO
PAR.USR_Misc_Amount = *ZERO;

EXECUTE FUNCTION(CLC Stop Totals        RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1292026;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Stop_Drop);
PARAMETER(PAR.USR_Orders_on_Stop);
PARAMETER(PAR.USR_Stop_Total_Weight);
PARAMETER(PAR.USR_Misc_Amount);
{
 //?USER: Initialize routine

 // PAR.USR Weight Accumulated = CON.*ZERO
 PAR.USR_Weight_Accumulated = *ZERO;

 // PAR.USR Misc. Amount = CON.*ZERO
 PAR.USR_Misc_Amount = *ZERO;

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Order Weight       RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1292006;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Order_Weight_Total);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // PAR.USR Weight Accumulated = PAR.USR Weight Accumulated + PAR.Order Weight Total
 PAR.USR_Weight_Accumulated = PAR.USR_Weight_Accumulated + PAR.Order_Weight_Total;

 // PAR.USR Misc. Amount = PAR.USR Misc. Amount + DB1.Freight Misc. Charge
 PAR.USR_Misc_Amount = PAR.USR_Misc_Amount + DB1.Freight_Misc_Charge;

 // PAR.Count USR = PAR.Count USR + CON.1
 PAR.Count_USR = PAR.Count_USR + 1;

 ENDIF;

}


