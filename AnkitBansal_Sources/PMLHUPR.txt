     H/TITLE EUP Bld State Tax Accrual Execute user program
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Y* ADDLIBLE LIB(COMMON) POSITION(*LAST)
     Y* ADDLIBLE LIB(DLY029) POSITION(*LAST)
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     FJRCUSTS   if   e           k disk
      *  JRD Customer Masterfile AS/400 Format
      *
     FCSTMSTL1  if   e           k disk
      *  Active Customer Conversion - By DLYCST
      *
     FJRTAXID   if   e           k disk    prefix(jr_)
      *  JRD Customer Sales Tax ID File
      *
     FOMHOREL1  uf a e           k disk
      *  Customer Accrual          Update index
      *
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      *
      * Standalone fields
     Dcontinue         s              1A                                        Continue processing
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    p1ojcd            3            Accrual Code
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Process JRCUSTS - JRD Customer Masterfile AS/400 Format
     C                   read      jrcust                                 95
     C                   dow       *in95 = *off                                 do loop
      * Determine if JRCUSTS record should be processed
     C                   exsr      $process
      *
      * Continue processing record?
     C                   if        continue = 'Y'                               continue = Y
      *
      * Create Customer Accrual
     C                   exsr      $cusacc
      *
     C                   endif                                                  continue = Y
      * Next record
     C                   read      jrcust                                 95
     C                   enddo                                                  do loop
      *
      *----------------------------------------------------------------
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
      /EJECT
      *---------------------------------------------------------------
      * Determine if JRCUSTS record should be processed
      *---------------------------------------------------------------
      *
     C     $process      begsr
      *
      * Get Ship to Customer
     C                   exsr      $cstmst
      *
      * Continue processing if Customer found in CSTMST
     C                   if        continue = 'Y'                               CSTMST
      *
      * Check for records in JRD Customer Sales Tax ID File
     C                   exsr      $chkjrd
      *
     C                   endif                                                  CSTMST
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Get Ship to Customer
      *---------------------------------------------------------------
      *
     C     $cstmst       begsr
      *
      * Set default values for flags
     C                   eval      continue = 'N'
      *
     C     cust          chain     cstmst                             91
      *
      * If record found
     C                   if        *in91 = *off                                 91 = off
     C                   eval      hobkc7 = shipto                              Ship to Customer
     C                   eval      continue = 'Y'
      *
     C                   endif                                                  91 = off
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Check for records in JRD Customer Sales Tax ID File
      *---------------------------------------------------------------
      *
     C     $chkjrd       begsr
      *
      * Set default values for flags
     C                   eval      continue = 'N'
      * Check JRD Customer Sales Tax ID File
     C                   eval      jr_cust = cust
     C     jr_cust       chain     jrtaxi                             91
      *
      * If record found and TaxId is blank, set to continue
     C                   if        *in91 = *off and jr_taxid = ''               91 = off
     C                   eval      continue = 'Y'
      *
     C                   endif                                                  91 = off
      *
     C                   endsr
     C/EJECT
      *---------------------------------------------------------------
      * Create Customer Accrual
      *---------------------------------------------------------------
      *
     C     $cusacc       begsr
      *
      * Populate fields
     C                   eval      hobkc7 = shipto                              Ship to Customer
     C                   eval      hoojcd = p1ojcd                              Accural Code
     C                   eval      hoguny = 1                                   CAH Sequence No
     C                   eval      hobfdt = ##JDT                               Period Beginning Dte
     C                   eval      hoa2dt = 1991231                             Period Ending Date
     C                   eval      hobkpr = 4.85                                Accrual Rate
     C                   eval      hottst = 'Y'                                 All Products (Y/N)
     C                   eval      hoshsx = 'G '                                Accrual Rate Type
     C                   eval      hoqdsx = *blanks                             Comm Threshold Prd
     C                   eval      hopjdt = *zeros                              CAH Unused Date 1
     C                   eval      hopkdt = *zeros                              CAH Unused Date 2
     C                   eval      hoecvl = *zeros                              Comm Min Amt /Period
     C                   eval      hoqesx = *blanks                             Comm Retroactive sts
     C                   eval      hoqfsx = *blanks                             Accrual Dtl Search
     C                   eval      hohhaa = *blanks                             Broker Code
     C                   eval      hohqvl = *zeros                              Max Accrual Amount
     C                   eval      hoqgsx = '1'                                 Commission/Not Comm
     C                   eval      hoqhsx = *blanks                             CAH Unused sts 3
     C                   eval      hoqisx = *blanks                             CAH Unused sts 4
     C                   eval      hoqjsx = *blanks                             CAH Unused sts 5
     C                   eval      houvst = *blanks                             EDI status 1
     C                   eval      houwst = *blanks                             EDI status 2
     C                   eval      houxst = *blanks                             EDI status 3
     C                   eval      hoaatm = ##JTM                               Job Time
     C                   eval      hoayna = ##USR                               User Id
     C                   eval      hoa0na = ##JOB                               Job Name
     C                   eval      hoaxdt = ##JDT                               Job Date
      *
      * Check for duplicate record
     C     key01         setll     @HORELB                                90
      * If record not found, add
     C                   if        *in90 = *off
     C                   write     @HORELB
      *
     C                   endif
      *
     C                   endsr
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      *
      * Klist for Customer Accrual          Retrieval index
     C     KEY01         klist
     C                   kfld                    hobkc7
     C                   kfld                    hoojcd
     C                   kfld                    hoguny
      *
      *================================================================
     CSR   ZZEXIT        ENDSR
