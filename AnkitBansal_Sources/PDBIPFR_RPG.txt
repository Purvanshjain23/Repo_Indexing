     H/TITLE Prt Prj Cut Flr Items PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDREDD
     H* Date          : 11/04/20  Time  : 10:13:13
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPDI2CPL1IF  E           K        DISK
      * RTV : PS Cutout Value           Retrieval index
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAAQREL1IF  E           K        DISK
      * RTV : Company Defaults          Retrieval index       NV
      *
     FPDBIPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Prj Cut Flr Items PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: PS Cutout Value
      * I : MAP Company Number
     I                                    P   1   20P1AIC3
      * I : MAP Kill Date
     I                                    P   3   60P1GGDT
      * I : MAP Buy Order Number
     I                                    P   7  100P1HFNX
      * I : MAP Buy Order Load
     I                                    P  11  130P1HGNX
      * I : MAP Tattoo Number
     I                                    P  14  160P1UWNB
      * I : MAP Item Code
     I                                    P  17  200P1HGCD
      * I : MAP Hog Producer Code
     I                                       21  26 P1RYCD
      * I : MAP Hog Buyer Code
     I                                       27  29 P1R0CD
      * I : MAP Hog Buyer Type
     I                                       30  30 P1VPST
      * I : MAP Hog Payment Type
     I                                       31  31 P1VQST
     IP2PARM      DS
      * FLD: *Arrays
      * N :  TH Hot Weight USR
     I                                    P   1   41P2THHW
      * N :  TH Head Killed USR
     I                                    P   5   70P2HDKL
      * N :  TH Live Wgt USR
     I                                    P   8  111P2D6WG
      * N :  TH Avg Backfat USR
     I                                    P  12  131P2AVBF
      * N :  TH Avg Loin-Eye USR
     I                                    P  14  151P2AVLI
      * N :  TH Avg Lean % USR
     I                                    P  16  171P2AVLN
      * N :  TH Avg Light Ref USR
     I                                    P  18  191P2AVLR
      * N :  Hog Producer Name USR
     I                                       20  59 P2G7TX
      * N :  Hog Buyer Name USR
     I                                       60  99 P2G8TX
      * N :  TH Avg Live Wgt USR
     I                                    P 100 1021P2THAL
      * N :  TH Avg Hot Wgt USR
     I                                    P 103 1051P2THAH
     IP3PARM      DS
      * FLD: *Arrays
      * I : MAP Application Code
     I                                        1   6 P3DNCD
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1GGDT    PARM           WP0002  70       Kill Date
     C           P1HFNX    PARM           WP0003  70       Buy Order Numbe
     C           P1HGNX    PARM           WP0004  50       Buy Order Load
     C           P1UWNB    PARM           WP0005  50       Tattoo Number
     C           P1HGCD    PARM           WP0006  70       Item Code
     C           P1RYCD    PARM           WP0007  6        Hog Producer Co
     C           P1R0CD    PARM           WP0008  3        Hog Buyer Code
     C           P1VPST    PARM           WP0009  1        Hog Buyer Type
     C           P1VQST    PARM           WP0010  1        Hog Payment Typ
     C           P3DNCD    PARM           WP0011  6        Application Cod
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Prj Cut Flr Items PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$FENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Prj Cut Flr Items PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@I2CPTF                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Kill Date
     C                     MOVEL'Y'       W0AL02  1        Buy Order Numbe
     C                     MOVEL'Y'       W0AL03  1        Buy Order Load
     C                     MOVEL'Y'       W0AL04  1        Tattoo Number
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     MOVEL*BLANK    $BRYCD           Hog Producer Co
     C                     MOVEL*BLANK    $BG7TX           Hog Producer Na
     C                     Z-ADD*ZERO     $BGGDT           Kill Date
     C                     MOVEL*BLANK    $BG5TX           Text 1 USR
     C                     MOVEL*BLANK    $BR0CD           Hog Buyer Code
     C                     MOVEL*BLANK    $BG8TX           Hog Buyer Name
     C                     Z-ADD*ZERO     $BUWNB           Tattoo Number
     C                     MOVEL*BLANK    $BG6TX           Text 2 USR
     C                     MOVEL*BLANK    $BVPST           Hog Buyer Type
     C                     MOVEL*BLANK    $BG9TX           Hog Buyer Type
     C                     Z-ADD*ZERO     $BHGCD           Item Code
     C                     MOVEL*BLANK    $BGENA           Item Descriptio
     C                     MOVEL*BLANK    $BVQST           Hog Payment Typ
     C                     MOVEL*BLANK    $BHATX           Hog Pay Type Cn
     C                     Z-ADD*ZERO     $BHFNX           Buy Order Numbe
     C                     MOVEL*BLANK    $BS4TX           Text 9
     C                     Z-ADD*ZERO     $BHGNX           Buy Order Load
     C                     MOVEL*BLANK    $BIUTX           Text USR
      * USER: Process before print of first page format
      * Company
      * CASE: PAR.Accounting Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $BADTX           Name
     C                     MOVEL'*ALL'    $BADTX           Name
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1AIC3    $BAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SCRVGN
     C                     END                             *FI
      * Kill Date
      * CASE: PAR.Kill Date is EQ 0
     C           P1GGDT    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $BG5TX           Text 1 USR
     C                     MOVEL'*ALL'    $BG5TX           Text 1 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1GGDT    $BGGDT           Kill Date
     C                     END                             *FI
      * Tattoo
      * CASE: PAR.Tattoo Number is EQ 0
     C           P1UWNB    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $BG6TX           Text 2 USR
     C                     MOVEL'*ALL'    $BG6TX           Text 2 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1UWNB    $BUWNB           Tattoo Number
     C                     END                             *FI
      * Item
      * CASE: PAR.Item Code is Not Entered
     C           P1HGCD    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    $BGENA           Item Descriptio
     C                     MOVEL'*ALL'    $BGENA           Item Descriptio
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1HGCD    $BHGCD           Item Code
      * Rtv Descriptions      RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0001           Company Number
     C                     Z-ADD$BHGCD    WL0002           Item Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    $BGENA    P      Description Lin
     C                     MOVELWL0004    WUAWNA    P      Description Lin
     C                     MOVELWL0005    WUADCD    P      U/M - Primary
     C                     MOVELWL0006    WUAECD    P      U/M - Second
     C                     MOVELWL0007    WUAFCD    P      U/M - Third
     C                     END                             *FI
      * Producer
      * CASE: PAR.Hog Producer Code EQ WRK.BLANK
     C           P1RYCD    IFEQ WUGSTX                     *IF
     C                     MOVEL*BLANK    $BG7TX           Hog Producer Na
     C                     MOVEL'*ALL'    $BG7TX           Hog Producer Na
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1RYCD    $BRYCD           Hog Producer Co
     C                     END                             *FI
      * Buyer
      * CASE: PAR.Hog Buyer Code EQ WRK.BLANK
     C           P1R0CD    IFEQ WUGSTX                     *IF
     C                     MOVEL*BLANK    $BG8TX           Hog Buyer Name
     C                     MOVEL'*ALL'    $BG8TX           Hog Buyer Name
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1R0CD    $BR0CD           Hog Buyer Code
     C                     END                             *FI
      * Buyer Type
      * CASE: PAR.Hog Buyer Type EQ WRK.BLANK
     C           P1VPST    IFEQ WUGSTX                     *IF
     C                     MOVEL*BLANK    $BG9TX           Hog Buyer Type
     C                     MOVEL'*ALL'    $BG9TX           Hog Buyer Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1VPST    $BVPST           Hog Buyer Type
      * 1PG.Hog Buyer Type CndNm USR = Condition name of 1PG.Hog Buyer Ty
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1254133   Y2LSNO  70       List number
     C                     PARM $BVPST    W0INVL 25        Hog Buyer Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BG9TX    PARM           W0CNNM 25        Hog Buyer Type
      *
     C                     END                             *FI
      * Payment Type
      * CASE: PAR.Hog Payment Type EQ WRK.BLANK
     C           P1VQST    IFEQ WUGSTX                     *IF
     C                     MOVEL*BLANK    $BHATX           Hog Pay Type Cn
     C                     MOVEL'*ALL'    $BHATX           Hog Pay Type Cn
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1VQST    $BVQST           Hog Payment Typ
      * 1PG.Hog Pay Type CndNm USR = Condition name of 1PG.Hog Payment Ty
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1254137   Y2LSNO  70       List number
     C                     PARM $BVQST    W0INVL 25        Hog Payment Typ
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHATX    PARM           W0CNNM 25        Hog Pay Type Cn
      *
     C                     END                             *FI
      * Buy order number
      * CASE: PAR.Buy Order Number EQ WRK.ZERO
     C           P1HFNX    IFEQ WUW0NB                     *IF
     C                     MOVEL*BLANK    $BS4TX           Text 9
     C                     MOVEL'*ALL'    $BS4TX           Text 9
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1HFNX    $BHFNX           Buy Order Numbe
     C                     END                             *FI
      * Buy Order Load
      * CASE: PAR.Buy Order Load EQ WRK.ZERO
     C           P1HGNX    IFEQ WUW0NB                     *IF
     C                     MOVEL*BLANK    $BIUTX           Text USR
     C                     MOVEL'*ALL'    $BIUTX           Text USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP1HGNX    $BHGNX           Buy Order Load
     C                     END                             *FI
      * Retrieve Producer and/or Buyer Name
      * Retrieve Producer and/or Buyer Name
      * CASE: Producer or buyer not blank
      *  - c1 OR c2
      *   |- c1    : PAR.Hog Producer Code NE WRK.BLANK
      *   |- c2    : PAR.Hog Buyer Code NE WRK.BLANK
      *   '-
     C           P1RYCD    IFNE WUGSTX                     *IF
     C           P1R0CD    ORNE WUGSTX                     *OR
      * Rtv Tattoo Info  2 HPE XF - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'PKO3XFR'              90  Rtv Tattoo Info
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $BAIC3    WQ0001  30       Company Number
     C                     PARM $BGGDT    WQ0002  70       Kill Date
     C                     PARM $BUWNB    WQ0003  50       Tattoo Number
     C           P2THHW    PARM *ZERO     WQ0004  71       TH Hot Weight U
     C           $BRYCD    PARM *BLANK    WQ0005  6        Hog Producer Co
     C           $BR0CD    PARM *BLANK    WQ0006  3        Hog Buyer Code
     C           $BVPST    PARM *BLANK    WQ0007  1        Hog Buyer Type
     C           $BVQST    PARM *BLANK    WQ0008  1        Hog Payment Typ
     C           P2HDKL    PARM *ZERO     WQ0009  50       TH Head Killed
     C           P2D6WG    PARM *ZERO     WQ0010  71       TH Live Wgt USR
     C           P2AVBF    PARM *ZERO     WQ0011  31       TH Avg Backfat
     C           P2AVLI    PARM *ZERO     WQ0012  31       TH Avg Loin-Eye
     C           P2AVLN    PARM *ZERO     WQ0013  31       TH Avg Lean % U
     C           P2AVLR    PARM *ZERO     WQ0014  31       TH Avg Light Re
     C           $BG7TX    PARM *BLANK    WQ0015 40        Hog Producer Na
     C           $BG8TX    PARM *BLANK    WQ0016 40        Hog Buyer Name
     C           P2THAL    PARM *ZERO     WQ0017  51       TH Avg Live Wgt
     C           P2THAH    PARM *ZERO     WQ0018  51       TH Avg Hot Wgt
     C                     PARM $BHFNX    WQ0019  70       Buy Order Numbe
     C                     PARM $BHGNX    WQ0020  50       Buy Order Load
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKO3XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVELP2G7TX    $BG7TX           Hog Producer Na
     C                     MOVELP2G8TX    $BG8TX           Hog Buyer Name
     C                     END                             *FI
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDI2AIC3    $CAIC3           Company Number
     C                     Z-ADDI2GGDT    $CGGDT           Kill Date
     C                     Z-ADDI2HFNX    $CHFNX           Buy Order Numbe
     C                     Z-ADDI2HGNX    $CHGNX           Buy Order Load
     C                     Z-ADDI2UWNB    $CUWNB           Tattoo Number
     C                     MOVELI2RYCD    $CRYCD           Hog Producer Co
     C                     MOVELI2R0CD    $CR0CD           Hog Buyer Code
     C                     MOVELI2VPST    $CVPST           Hog Buyer Type
     C                     MOVELI2VQST    $CVQST           Hog Payment Typ
     C                     Z-ADD*ZERO     $CHDKL           TH Head Killed
     C                     Z-ADD*ZERO     $CD6WG           TH Live Wgt USR
     C                     Z-ADD*ZERO     $CTHHW           TH Hot Weight U
     C                     Z-ADD*ZERO     $CDGPC           Cooler Shrink P
     C                     Z-ADD*ZERO     $CCWUS           Cold Weight USR
     C                     Z-ADD*ZERO     $CAVBF           TH Avg Backfat
     C                     Z-ADD*ZERO     $CAVLI           TH Avg Loin-Eye
     C                     Z-ADD*ZERO     $CAVLN           TH Avg Lean % U
     C                     Z-ADD*ZERO     $CAVLR           TH Avg Light Re
      * Load related totals format
     C                     Z-ADDI2AIC3    $EAIC3           Company Number
     C                     Z-ADDI2GGDT    $EGGDT           Kill Date
     C                     Z-ADDI2HFNX    $EHFNX           Buy Order Numbe
     C                     Z-ADDI2HGNX    $EHGNX           Buy Order Load
     C                     Z-ADDI2UWNB    $EUWNB           Tattoo Number
     C                     Z-ADD*ZERO     $ECYSM           Carcass Yield S
     C                     Z-ADD*ZERO     $ED4WG           Predicted Pound
     C                     Z-ADD*ZERO     $ETQVA           Product Value S
      * USER: Process before print of Tattoo Number format
      * Company
      * CASE: PAR.Accounting Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.Accounting Company Number NE PAR.Accounting Company Num
     C           $CAIC3    IFNE P1AIC3                     *IF
     C                     GOTO A1EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Kill Date
      * CASE: PAR.Kill Date is EQ 0
     C           P1GGDT    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.Kill Date NE PAR.Kill Date
     C           $CGGDT    IFNE P1GGDT                     *IF
     C                     GOTO A1EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Tattoo
      * CASE: PAR.Tattoo Number is EQ 0
     C           P1UWNB    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.Tattoo Number NE PAR.Tattoo Number
     C           $CUWNB    IFNE P1UWNB                     *IF
     C                     GOTO A1EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Buy order number / load
      * CASE: PAR.Buy Order Number EQ WRK.ZERO
     C           P1HFNX    IFEQ WUW0NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CUR.Buy Order Number NE PAR.Buy Order Number
      *   |- c2    : CUR.Buy Order Load NE PAR.Buy Order Load
      *   '-
     C           $CHFNX    IFNE P1HFNX                     *IF
     C           $CHGNX    ORNE P1HGNX                     *OR
     C                     GOTO A1EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Retrieve Tattoo Information from HPE
      * Rtv Tattoo Info  2 HPE XF - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'PKO3XFR'              90  Rtv Tattoo Info
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $CAIC3    WQ0021  30       Company Number
     C                     PARM $CGGDT    WQ0022  70       Kill Date
     C                     PARM $CUWNB    WQ0023  50       Tattoo Number
     C           $CTHHW    PARM *ZERO     WQ0024  71       TH Hot Weight U
     C           $CRYCD    PARM *BLANK    WQ0025  6        Hog Producer Co
     C           $CR0CD    PARM *BLANK    WQ0026  3        Hog Buyer Code
     C           $CVPST    PARM *BLANK    WQ0027  1        Hog Buyer Type
     C           $CVQST    PARM *BLANK    WQ0028  1        Hog Payment Typ
     C           $CHDKL    PARM *ZERO     WQ0029  50       TH Head Killed
     C           $CD6WG    PARM *ZERO     WQ0030  71       TH Live Wgt USR
     C           $CAVBF    PARM *ZERO     WQ0031  31       TH Avg Backfat
     C           $CAVLI    PARM *ZERO     WQ0032  31       TH Avg Loin-Eye
     C           $CAVLN    PARM *ZERO     WQ0033  31       TH Avg Lean % U
     C           $CAVLR    PARM *ZERO     WQ0034  31       TH Avg Light Re
     C           P2G7TX    PARM *BLANK    WQ0035 40        Hog Producer Na
     C           P2G8TX    PARM *BLANK    WQ0036 40        Hog Buyer Name
     C           P2THAL    PARM *ZERO     WQ0037  51       TH Avg Live Wgt
     C           P2THAH    PARM *ZERO     WQ0038  51       TH Avg Hot Wgt
     C                     PARM $CHFNX    WQ0039  70       Buy Order Numbe
     C                     PARM $CHGNX    WQ0040  50       Buy Order Load
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKO3XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Retrieve Cooler Shrink %
      * Rtv Cooler Shrink %   RT - Company Defaults  * 
     C                     EXSR SERVGN
      * Cold Weight = Hot Weight / ((Cooler Shrink % / 100) + 1)
      * Cold Weight
      * CUR.Cold Weight USR =
      *    *COMPUTE (x1 / ((x2 / x3) + x4))
      * x1    : CUR.TH Hot Weight USR
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Cooler Shrink Percent
      * /     : PGM.*Synon (17,7) work field
      * x3    : CON.100
      * +     : PGM.*Synon (17,7) work field
      * x4    : CON.1
     C           $CDGPC    DIV  100       W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  1         W0WD01           *Synon (17,7) w
     C           $CTHHW    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $CCWUS           Cold Weight USR
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDI2AIC3    $DAIC3           Company Number
     C                     Z-ADDI2GGDT    $DGGDT           Kill Date
     C                     Z-ADDI2HFNX    $DHFNX           Buy Order Numbe
     C                     Z-ADDI2HGNX    $DHGNX           Buy Order Load
     C                     Z-ADDI2UWNB    $DUWNB           Tattoo Number
     C                     Z-ADDI2HGCD    $DHGCD           Item Code
     C                     MOVEL*BLANK    $DGENA           Item Descriptio
     C                     Z-ADDI2UUNB    $DUUNB           Carcass Yield
     C                     Z-ADDI2DPWG    $DDPWG           Predicted Pound
     C                     Z-ADDI2B9PR    $DB9PR           Margin Market P
     C                     Z-ADDI2CAPR    $DCAPR           Margin Market O
     C                     Z-ADDI2TOVA    $DTOVA           Product Value
     C                     MOVELI2RYCD    $DRYCD           Hog Producer Co
     C                     MOVELI2R0CD    $DR0CD           Hog Buyer Code
     C                     MOVELI2VPST    $DVPST           Hog Buyer Type
     C                     MOVELI2VQST    $DVQST           Hog Payment Typ
     C                     Z-ADDI2QTYX    $DQTYX           Number of Carca
     C                     Z-ADDI2RGNB    $DRGNB           Item Structure
     C                     Z-ADDI2RHNB    $DRHNB           Item Structure
     C                     Z-ADDI2RINB    $DRINB           Item Structure
     C                     MOVELI2UVST    $DUVST           EDI Status 1
     C                     MOVELI2UWST    $DUWST           EDI Status 2
     C                     MOVELI2UXST    $DUXST           EDI Status 3
     C                     MOVELI2VSST    $DVSST           Record Status
     C                     Z-ADDI2AATM    $DAATM           Job Time
     C                     MOVELI2AYNA    $DAYNA           User Id
     C                     MOVELI2A0NA    $DA0NA           Job Name
     C                     Z-ADDI2AXDT    $DAXDT           Job Date
      * USER: Process before print of detail format
      * Company
      * CASE: PAR.Accounting Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Accounting Company Number NE PAR.Accounting Company Num
     C           I2AIC3    IFNE P1AIC3                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Kill Date
      * CASE: PAR.Kill Date is EQ 0
     C           P1GGDT    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Kill Date NE PAR.Kill Date
     C           I2GGDT    IFNE P1GGDT                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Tattoo
      * CASE: PAR.Tattoo Number is EQ 0
     C           P1UWNB    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Tattoo Number NE PAR.Tattoo Number
     C           I2UWNB    IFNE P1UWNB                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Item
      * CASE: PAR.Item Code is Not Entered
     C           P1HGCD    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Item Code NE PAR.Item Code
     C           I2HGCD    IFNE P1HGCD                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Producer
      * CASE: PAR.Hog Producer Code EQ WRK.BLANK
     C           P1RYCD    IFEQ WUGSTX                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Hog Producer Code NE PAR.Hog Producer Code
     C           I2RYCD    IFNE P1RYCD                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Buyer
      * CASE: PAR.Hog Buyer Code EQ WRK.BLANK
     C           P1R0CD    IFEQ WUGSTX                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Hog Buyer Code NE PAR.Hog Buyer Code
     C           I2R0CD    IFNE P1R0CD                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Buyer Type
      * CASE: PAR.Hog Buyer Type EQ WRK.BLANK
     C           P1VPST    IFEQ WUGSTX                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Hog Buyer Type NE PAR.Hog Buyer Type
     C           I2VPST    IFNE P1VPST                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Payment Type
      * CASE: PAR.Hog Payment Type EQ WRK.BLANK
     C           P1VQST    IFEQ WUGSTX                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Hog Payment Type NE PAR.Hog Payment Type
     C           I2VQST    IFNE P1VQST                     *IF
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Buy order number / load
      * CASE: PAR.Buy Order Number EQ WRK.ZERO
     C           P1HFNX    IFEQ WUW0NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.Buy Order Number NE PAR.Buy Order Number
      *   |- c2    : DB1.Buy Order Load NE PAR.Buy Order Load
      *   '-
     C           I2HFNX    IFNE P1HFNX                     *IF
     C           I2HGNX    ORNE P1HGNX                     *OR
     C                     GOTO A2EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Descriptions      RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0001           Company Number
     C                     Z-ADD$DHGCD    WL0002           Item Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    $DGENA    P      Description Lin
     C                     MOVELWL0004    WUAWNA    P      Description Lin
     C                     MOVELWL0005    WUADCD    P      U/M - Primary
     C                     MOVELWL0006    WUAECD    P      U/M - Second
     C                     MOVELWL0007    WUAFCD    P      U/M - Third
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  $DUUNB    $ECYSM           Carcass Yield S
     C                     ADD  $DDPWG    $ED4WG           Predicted Pound
     C                     ADD  $DTOVA    $ETQVA           Product Value S
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN I2AIC3    WZA001           Company Number
     C                     Z-ADDI2AIC3    WZA001
     C           *LIKE     DEFN I2GGDT    WZA002           Kill Date
     C                     Z-ADDI2GGDT    WZA002
     C           *LIKE     DEFN I2HFNX    WZA003           Buy Order Numbe
     C                     Z-ADDI2HFNX    WZA003
     C           *LIKE     DEFN I2HGNX    WZA004           Buy Order Load
     C                     Z-ADDI2HGNX    WZA004
     C           *LIKE     DEFN I2UWNB    WZA005           Tattoo Number
     C                     Z-ADDI2UWNB    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @I2CPTF                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Kill Date
     C                     MOVEL*BLANK    W0AL02  1        Buy Order Numbe
     C                     MOVEL*BLANK    W0AL03  1        Buy Order Load
     C                     MOVEL*BLANK    W0AL04  1        Tattoo Number
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Kill Date
     C                     MOVEL'Y'       W0AL02  1        Buy Order Numbe
     C                     MOVEL'Y'       W0AL03  1        Buy Order Load
     C                     MOVEL'Y'       W0AL04  1        Tattoo Number
     C                     ELSE
      * Next record - Detect level breaks
     C           I2AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           I2GGDT    IFNE WZA002                     Kill Date
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           I2HFNX    IFNE WZA003                     Buy Order Numbe
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           I2HGNX    IFNE WZA004                     Buy Order Load
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           I2UWNB    IFNE WZA005                     Tattoo Number
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * USER: Process before print of Tattoo Number format
      * Company
      * CASE: PAR.Accounting Company Number is Equal to zero
     C           P1AIC3    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.Accounting Company Number NE PAR.Accounting Company Num
     C           $EAIC3    IFNE P1AIC3                     *IF
     C                     GOTO A4EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Kill Date
      * CASE: PAR.Kill Date is EQ 0
     C           P1GGDT    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.Kill Date NE PAR.Kill Date
     C           $EGGDT    IFNE P1GGDT                     *IF
     C                     GOTO A4EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Tattoo
      * CASE: PAR.Tattoo Number is EQ 0
     C           P1UWNB    IFEQ *ZERO                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CUR.Tattoo Number NE PAR.Tattoo Number
     C           $EUWNB    IFNE P1UWNB                     *IF
     C                     GOTO A4EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * Buy order number / load
      * CASE: PAR.Buy Order Number EQ WRK.ZERO
     C           P1HFNX    IFEQ WUW0NB                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CUR.Buy Order Number NE PAR.Buy Order Number
      *   |- c2    : CUR.Buy Order Load NE PAR.Buy Order Load
      *   '-
     C           $EHFNX    IFNE P1HFNX                     *IF
     C           $EHGNX    ORNE P1HGNX                     *OR
     C                     GOTO A4EXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$EKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Kill Date to display format
      * Convert date
     C           1000000   ADD  $BGGDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBGGDT
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $BHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$BHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VBHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Kill Date of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Buy Order Number of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Buy Order Load of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Tattoo Number of Prt Prj Cut Flr Items PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Kill Date to display format
      * Convert date
     C           1000000   ADD  $CGGDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCGGDT
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Prj Cut Flr Items PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP04    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Prj Cut Flr Items PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  7         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Prj Cut Flr Items PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Kill Date of Prt Prj Cut Flr Items PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Buy Order Number of Prt Prj Cut Flr Items PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Buy Order Load of Prt Prj Cut Flr Items PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Tattoo Number of Prt Prj Cut Flr Items PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  7         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Prj Cut Flr Items PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD4         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVELP3DNCD    WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$BAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BADTX           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $BADTX           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Descriptions      RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0001    BZAIC3           Company Number
     C                     Z-ADDWL0002    BZHGCD           Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0003           Description Lin
     C                     MOVELBZAWNA    WL0004           Description Lin
     C                     MOVELBZADCD    WL0005           U/M - Primary
     C                     MOVELBZAECD    WL0006           U/M - Second
     C                     MOVELBZAFCD    WL0007           U/M - Third
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Cooler Shrink %   RT - Company Defaults  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           AQAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    AQAIC3           Company Number
      * Establish starting position
     C           KRSSE     CHAIN@AQREB9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0041' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $CDGPC           Cooler Shrink P
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDAQDGPC    $CDGPC           Cooler Shrink P
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P2THHW           TH Hot Weight U
     C                     Z-ADD*ZERO     P2HDKL           TH Head Killed
     C                     Z-ADD*ZERO     P2D6WG           TH Live Wgt USR
     C                     Z-ADD*ZERO     P2AVBF           TH Avg Backfat
     C                     Z-ADD*ZERO     P2AVLI           TH Avg Loin-Eye
     C                     Z-ADD*ZERO     P2AVLN           TH Avg Lean % U
     C                     Z-ADD*ZERO     P2AVLR           TH Avg Light Re
     C                     MOVEL*BLANK    P2G7TX           Hog Producer Na
     C                     MOVEL*BLANK    P2G8TX           Hog Buyer Name
     C                     Z-ADD*ZERO     P2THAL           TH Avg Live Wgt
     C                     Z-ADD*ZERO     P2THAH           TH Avg Hot Wgt
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    I2AIC3           Company Number
     C                     MOVEL*LOVAL    I2GGDT           Kill Date
     C                     MOVEL*LOVAL    I2HFNX           Buy Order Numbe
     C                     MOVEL*LOVAL    I2HGNX           Buy Order Load
     C                     MOVEL*LOVAL    I2UWNB           Tattoo Number
     C                     MOVEL*LOVAL    I2HGCD           Item Code
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field U/M - Second
     C                     MOVEL*BLANK    WUAECD  2
      * Define work field U/M - Third
     C                     MOVEL*BLANK    WUAFCD  2
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003 30
     C                     MOVEL*BLANK    WL0004 30
     C                     MOVEL*BLANK    WL0005  2
     C                     MOVEL*BLANK    WL0006  2
     C                     MOVEL*BLANK    WL0007  2
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * 168853 ISE 11/04/20 - Increased the Buy Order Number field length
      * from 5 to 7
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
