// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKO7XFR
// ?Date: 14.08.2025 Time: 02:50:03
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//?E78930 JBB  8/20/21 - Access path PKA2CPLH change
//?                      Access path PKA2CPLH changed to select
//?                      records with Tattoo Number range being 9100
//?                      thru 9850.
//?E78930 JBB  6/03/21 - Access path PKA2CPLH change
//?                      After install, more tattoos were being
//?                      priced 2WK average, so the access path was
//?                      returned to 9100 to 9499.
//?E78930 JBB  5/25/21 - Access path PKA2CPLH change
//?                      Access path PKA2CPLH changed to select
//?                      records with Tattoo Number range being 9500
//?                      thru 9850.  This includes internal Pre-Tattoo
//?                      and Reseach hogs.
//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
//?E3407 - allow only Guymon to perform research hogs on
//?tattoo detail ext
//?Guymon IS the only plant that will used research hogs
//?Method 1    is what we are going with at present time
//?Read the Tattoo Dtl of 7000 for internals and change
//?     the tattoo number in the Eval Tran Upl of (9999) only
//?     also create the tattoo detail ext and count hot head
//?DOC:  03/07/02 100% Tattooing
DO;

//?03/06/02 PKD Starting 03/35/02, all of the Tattoo's are going
//?             to be tattooed 100%.  This includes internal hogs
//?             and externals.  The internals do not need to be in
//?             the 7000 series and Top Loads also do not need to
//?             be in a special series.  The window for valid
//?             Tattoo Number has now been opened from 1111 to 8999.
//?             9999 Tattoo Number carcasses will not be matched with
//?             a 7000 series number.  The following two retrieves
//?             have been commented out.
//?09/08/14 SLM Review how to allow TF not to validate tattoo number
//?on HPERESEARC hogs
//?company value of  HPERESEARC  Create Research Hogs=Y
ENDDO;

//?For Pre-tattooed internal hogs 9100-9850, read the TD for the net head
//? then if received/slaughter, & not resale, read the net head number
//?  of eval trans upl rcds and create the eval trans rcds with that BO,L
ENDDO;

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(PAR.EA_Company_Number);
PARAMETER('HPERESEARC');
PARAMETER(WRK.System_Value_Alpha_USR);

// WRK.Status 4 = WRK.System Value Alpha    USR
WRK.Status_4 = WRK.System_Value_Alpha_USR;

//?If Company processes research hogs. (Currently only Guymon)
CASE;

// IF WRK.Status 4 is Yes
IF WRK.Status_4 = 'Y';

//?9/8/2014 slm
//?9/8/2014 review and do not perform the next if this is Triumph Foods
//?5/25/2021 Access oath PKA2CPLH selection criteria changed
EXECUTE FUNCTION(Rtv TtoDtl-Int9100 Prc RT) TYPE(RTVOBJ) FILE(PKA2CPP)          AB1211826;
PARAMETER(PAR.EA_Company_Number);
PARAMETER(PAR.EA_Kill_Date);
PARAMETER(PAR.EA_Shift);
{
 //?USER: Process Data record

 // WRK.Net Head Usr = DB1.TD Pen Head - DB1.TD Yard Dead
 WRK.Net_Head_Usr = DB1.TD_Pen_Head - DB1.TD_Yard_Dead;

 CASE;

 // IF WRK.Net Head Usr GT WRK.Zero USR
 IF WRK.Net_Head_Usr > WRK.Zero_USR;

 EXECUTE FUNCTION(Rtv Tatts Int Info    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1211961;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Sex);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_Hog_Class_Type);
 PARAMETER(WRK.THP_Process_Code);
 PARAMETER(WRK.HC_Class_Code);
 PARAMETER(WRK.Return_Code_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Return Code USR = CND.*Record does not exist
  PAR.Return_Code_USR = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF WRK.THP Process Code is Receiving
 IF ( WRK.THP_Process_Code = 'RECV';

 // OR WRK.THP Process Code is Slaughter
 OR WRK.THP_Process_Code = 'SLG' );

 // AND WRK.TH Hog Class Type is Not Resale
 AND WRK.TH_Hog_Class_Type = 'M'/'S';

 EXECUTE FUNCTION(RtvCrt TdEX HotHd/CpST RT) TYPE(RTVOBJ) FILE(PKDYCPP)          AB1196904;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TD_Sequence_Number);
 PARAMETER(WRK.Completed_Status);
 PARAMETER(WRK.Hot_Head);
 PARAMETER(WRK.TDE_Head_Condemned);
 {
  //?USER: Processing if Data record not found

  // PAR.Completed Status = CND.No
  PAR.Completed_Status = 'N';

  // PAR.Hot Head = CON.*ZERO
  PAR.Hot_Head = *ZERO;

  EXECUTE FUNCTION(Crt Tattoo Detail Ext  CR) TYPE(CRTOBJ) FILE(PKDYCPP)          AB1196901;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.TD_Sequence_Number);
  PARAMETER('N');
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('N');
  PARAMETER('N');
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('A');
  PARAMETER(JOB.*JOB);
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*Job_date);
  PARAMETER(JOB.*Job_time);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.Net Head Usr = WRK.Net Head Usr - WRK.TDE Head Condemned
 WRK.Net_Head_Usr = WRK.Net_Head_Usr - WRK.TDE_Head_Condemned;

 CASE;

 // IF WRK.Completed Status is No
 IF WRK.Completed_Status = 'N';

 EXECUTE FUNCTION(Rtv/Chg ET IntPre     RT) TYPE(RTVOBJ) FILE(PKCPCPP)           AB1226917;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TD_Sequence_Number);
 PARAMETER(DB1.TD_Pen_Head);
 PARAMETER(DB1.TD_Yard_Dead);
 PARAMETER(WRK.Hot_Head);
 PARAMETER(WRK.Net_Head_Usr);
 PARAMETER(WRK.TH_Sex);
 {
  //?USER: Process Data record

  // PAR.Hot Head = PAR.Hot Head + CON.1
  PAR.Hot_Head = PAR.Hot_Head + 1;

  CASE;

  // IF PAR.Hot Head LE PAR.Net Head Usr
  IF PAR.Hot_Head <= PAR.Net_Head_Usr;

  //?Valid record
  DO;

  CASE;

  // IF DB1.EA Carcass Sex EQ WRK.Blank USR
  IF DB1.EA_Carcass_Sex = WRK.Blank_USR;

  // WRK.ET Carcass Sex = PAR.TH Sex
  WRK.ET_Carcass_Sex = PAR.TH_Sex;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // WRK.ET Carcass Sex = DB1.EA Carcass Sex
  WRK.ET_Carcass_Sex = DB1.EA_Carcass_Sex;

  ENDIF;

  // WRK.ET Lean Percent NPPC = CON.*ZERO
  WRK.ET_Lean_Percent_NPPC = *ZERO;

  // WRK.ET Lean Percent FOM = CON.*ZERO
  WRK.ET_Lean_Percent_FOM = *ZERO;

  EXECUTE FUNCTION(Crt Eval Trans Rec    IF) TYPE(EXCINTFUN)                      AB1136539;
  PARAMETER(DB1.EA_Company_Number);
  PARAMETER(DB1.EA_Kill_Date);
  PARAMETER(WRK.EA_Scale_Sequence_Number);
  PARAMETER(WRK.ET_Carcass_Number);
  PARAMETER(000001);
  PARAMETER(DB1.EA_Tattoo_Number);
  PARAMETER(DB1.EA_Lot);
  PARAMETER(DB1.EA_Shift);
  PARAMETER(DB1.EA_Hot_Weight);
  PARAMETER(DB1.EA_Backfat_Thickness_Inch);
  PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
  PARAMETER(WRK.ET_Lean_Percent_NPPC);
  PARAMETER(DB1.EA_Backfat_MM);
  PARAMETER(DB1.EA_LoinEye_MM);
  PARAMETER(DB1.EA_Light_Refl_MM);
  PARAMETER(WRK.ET_Lean_Percent_FOM);
  PARAMETER(DB1.EA_Light_Reflectance);
  PARAMETER(DB1.EA_Trim_Area);
  PARAMETER(WRK.ET_Carcass_Sex);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER('P');
  PARAMETER('N');
  PARAMETER(*BLANK);
  PARAMETER(DB1.EA_Broken_Back_Sts);
  PARAMETER(WRK.ET_Adjust_Add_Source);
  PARAMETER(DB1.EA_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(DB1.EA_Tattoo_Number);
  PARAMETER(DB1.EA_Kill_Date);
  PARAMETER(DB1.RU_Date);
  PARAMETER(DB1.RU_Time);
  PARAMETER(1);
  {
   //?Execute internal function

   // PAR.Carcass number        USR = PAR.Carcass Count USR
   PAR.Carcass_number_USR = PAR.Carcass_Count_USR;

   // DOW PAR.Carcass number        USR is GT Zero
   DOW PAR.Carcass_number_USR > *ZERO;

   EXECUTE FUNCTION(Rtv Eval Next#        RT) TYPE(RTVOBJ) FILE(PKBVCPP)           AB1135496;
   PARAMETER(PAR.ET_Company_Number);
   PARAMETER(PAR.ET_Kill_Date);
   PARAMETER(PAR.ET_Scale_Sequence_Number);
   {
    //?USER: Processing if Data record not found

    // *MO.VE             1183529*Bu = ilt. in functions
    PAR.ET_Scale_Sequence_Number = 1;

    QUIT;

    //?USER: Process Data record

    CASE;

    // IF DB1.ET Scale Sequence Number is Entry Allowed
    IF DB1.ET_Scale_Sequence_Number >= 000001;
    AND DB1.ET_Scale_Sequence_Number <= 699999;

    // PAR.ET Scale Sequence Number = DB1.ET Scale Sequence Number + CON.1
    PAR.ET_Scale_Sequence_Number = DB1.ET_Scale_Sequence_Number + 1;

    QUIT;

    ENDIF;

   }

   EXECUTE FUNCTION(Create Evaluation Transac) TYPE(CRTOBJ) FILE(PKBVCPP)          AB1102931;
   PARAMETER(PAR.ET_Company_Number);
   PARAMETER(PAR.ET_Kill_Date);
   PARAMETER(PAR.ET_Scale_Sequence_Number);
   PARAMETER(PAR.ET_Scale_Sequence_Number);
   PARAMETER(000001);
   PARAMETER(PAR.ET_Tattoo_Number);
   PARAMETER(PAR.ET_Lot);
   PARAMETER(PAR.ET_Shift);
   PARAMETER(PAR.ET_Hot_Wgt);
   PARAMETER(PAR.ET_Backfat_Thickness_Inch);
   PARAMETER(PAR.ET_Loin_Eye_Depth_Inches);
   PARAMETER(PAR.ET_Lean_Percent_NPPC);
   PARAMETER(PAR.ET_Backfat_Thickness_MM);
   PARAMETER(PAR.ET_Loineye_Depth_MM);
   PARAMETER(PAR.ET_Light_Reflectance_MM);
   PARAMETER(PAR.ET_Lean_Percent_FOM);
   PARAMETER(PAR.ET_Light_Reflectance);
   PARAMETER(PAR.ET_Trim_Area);
   PARAMETER(PAR.ET_Carcass_Sex);
   PARAMETER(PAR.ET_Error_Sts);
   PARAMETER(PAR.ET_Record_Add_Del_Sts);
   PARAMETER(PAR.ET_Record_Created_W_Avg);
   PARAMETER(PAR.ET_Record_Created_Status);
   PARAMETER(PAR.ET_User_Error_Override);
   PARAMETER(PAR.ET_Adjust_Add_Type);
   PARAMETER(PAR.ET_Broken_Back_Sts);
   PARAMETER(PAR.ET_Unused_Sts_2);
   PARAMETER(PAR.ET_Adjust_Add_Source);
   PARAMETER(PAR.ET_Unused_Sts_4);
   PARAMETER(PAR.ET_Unused_Sts_5);
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER('A');
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.RU_Date);
   PARAMETER(PAR.RU_Time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(*MISSING);
    PARAMETER(*MISSING);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   // PAR.Carcass number        USR = PAR.Carcass number        USR - CON.1
   PAR.Carcass_number_USR = PAR.Carcass_number_USR - 1;

   ENDDO;

  }

  EXECUTE FUNCTION(Chg Eval Trans UPL    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1135112;
  PARAMETER(DB1.EA_Company_Number);
  PARAMETER(DB1.EA_Kill_Date);
  PARAMETER(DB1.EA_Scale_Sequence_Number);
  PARAMETER(DB1.EA_Tattoo_Number);
  PARAMETER(DB1.EA_Lot);
  PARAMETER(DB1.EA_Shift);
  PARAMETER(DB1.EA_Hot_Weight);
  PARAMETER(DB1.EA_Backfat_Thickness_Inch);
  PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
  PARAMETER(DB1.EA_Light_Reflectance);
  PARAMETER(DB1.EA_Trim_Area);
  PARAMETER(DB1.EA_Carcass_Sex);
  PARAMETER(DB1.EA_Record_Created_Status);
  PARAMETER('Y');
  PARAMETER(DB1.EA_Backfat_MM);
  PARAMETER(DB1.EA_LoinEye_MM);
  PARAMETER(DB1.EA_Light_Refl_MM);
  PARAMETER(DB1.EA_Trolley_Id);
  PARAMETER(DB1.EA_Broken_Back_Sts);
  PARAMETER(DB1.EA_Unused_Sts_1);
  PARAMETER(DB1.EA_Unused_Sts_2);
  PARAMETER(DB1.EA_Unused_Sts_3);
  PARAMETER(DB1.EA_Unused_Sts_4);
  PARAMETER(DB1.EA_Unused_Sts_5);
  PARAMETER(DB1.EA_Unused_Sts_6);
  PARAMETER(DB1.EA_Unused_Sts_7);
  PARAMETER(DB1.EA_Unused_Sts_8);
  PARAMETER(DB1.RU_Date);
  PARAMETER(DB1.RU_Time);
  ENDDO;

  ENDIF;

  CASE;

  // IF PAR.Hot Head EQ PAR.Net Head Usr
  IF PAR.Hot_Head = PAR.Net_Head_Usr;

  EXECUTE FUNCTION(Chg/Crt TDtlExt HotHd/ RT) TYPE(RTVOBJ) FILE(PKDYCPP)          AB1196905;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.TD_Sequence_Number);
  PARAMETER('Y');
  PARAMETER(PAR.Hot_Head);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Tattoo Detail Ext  CR) TYPE(CRTOBJ) FILE(PKDYCPP)          AB1196901;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.Completed_Status);
   PARAMETER(PAR.Hot_Head);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER('N');
   PARAMETER('N');
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER('A');
   PARAMETER(JOB.*JOB);
   PARAMETER(JOB.*PROGRAM);
   PARAMETER(JOB.*USER);
   PARAMETER(JOB.*Job_date);
   PARAMETER(JOB.*Job_time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   //?USER: Process Data record

   EXECUTE FUNCTION(Chg Tattoo Detail Ext  CH) TYPE(CHGOBJ) FILE(PKDYCPP)          AB1196902;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.Completed_Status);
   PARAMETER(PAR.Hot_Head);
   PARAMETER(DB1.TDE_Head_Condemned);
   PARAMETER(DB1.Head_2);
   PARAMETER(DB1.Status_1);
   PARAMETER(DB1.Status_2);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing after Data read

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

  }

  QUIT;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg/Crt TDtlExt HotHd/ RT) TYPE(RTVOBJ) FILE(PKDYCPP)          AB1196905;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(PAR.TD_Sequence_Number);
  PARAMETER('N');
  PARAMETER(PAR.Hot_Head);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Tattoo Detail Ext  CR) TYPE(CRTOBJ) FILE(PKDYCPP)          AB1196901;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.Completed_Status);
   PARAMETER(PAR.Hot_Head);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER('N');
   PARAMETER('N');
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER('A');
   PARAMETER(JOB.*JOB);
   PARAMETER(JOB.*PROGRAM);
   PARAMETER(JOB.*USER);
   PARAMETER(JOB.*Job_date);
   PARAMETER(JOB.*Job_time);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
    PARAMETER(DB1.RS_Record_Status);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    PARAMETER(DB1.RS_User_Added);
    PARAMETER(DB1.RS_Date_Added);
    PARAMETER(DB1.RS_Time_Added);
    {
     //?Execute internal function

     // PAR.RS Record Status = CND.Active
     PAR.RS_Record_Status = 'A';

     // PAR.RS User Added = JOB.*USER
     PAR.RS_User_Added = JOB.*USER;

     // PAR.RS Date Added = JOB.*Job date
     PAR.RS_Date_Added = JOB.*Job_date;

     // PAR.RS Time Added = JOB.*Job time
     PAR.RS_Time_Added = JOB.*Job_time;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

    }

   }

   //?USER: Process Data record

   EXECUTE FUNCTION(Chg Tattoo Detail Ext  CH) TYPE(CHGOBJ) FILE(PKDYCPP)          AB1196902;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.Completed_Status);
   PARAMETER(PAR.Hot_Head);
   PARAMETER(DB1.TDE_Head_Condemned);
   PARAMETER(DB1.Head_2);
   PARAMETER(DB1.Status_1);
   PARAMETER(DB1.Status_2);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing after Data read

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

  }

  ENDIF;

 }

 ENDIF;

 ENDIF;

 ENDIF;

}


//?Mark remaining 9100-9850 tattoos as processed and write Inv Tt rcd
//?9/8/2014 review and do not perform the next if this is Triumph Foods
EXECUTE FUNCTION(Rtv/Chg Eval Trn IntUnpRT) TYPE(RTVOBJ) FILE(PKCPCPP)          AB1211964;
PARAMETER(PAR.EA_Company_Number);
PARAMETER(PAR.EA_Kill_Date);
{
 //?USER: Process Data record

 //?Mark any remaining 9100-9850 tattoos as processed, and write Inv rcd
 //?Invalid tattoo number
 EXECUTE FUNCTION(CRT Evl Trns Inv    IF) TYPE(EXCINTFUN)                        AB1136780;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(WRK.EB_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('T');
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Evl Trns Inv Next RT) TYPE(RTVOBJ) FILE(PKCQCPP)           AB1136783;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.EB Scale Sequence Number = CON.000001
   PAR.EB_Scale_Sequence_Number = 000001;

   //?USER: Process Data record

   CASE;

   // IF DB1.EB Scale Sequence Number is Entry Allowed
   IF DB1.EB_Scale_Sequence_Number >= 000001;
   AND DB1.EB_Scale_Sequence_Number <= 699999;

   // PAR.EB Scale Sequence Number = DB1.EB Scale Sequence Number + CON.1
   PAR.EB_Scale_Sequence_Number = DB1.EB_Scale_Sequence_Number + 1;

   QUIT;

   ENDIF;

  }

  EXECUTE FUNCTION(Create Eval Trans Invalid) TYPE(CRTOBJ) FILE(PKCQCPP)          AB1135416;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  PARAMETER(PAR.EB_Tattoo_Number);
  PARAMETER(PAR.EB_Lot);
  PARAMETER(PAR.EB_Shift);
  PARAMETER(PAR.EB_Hot_Weight);
  PARAMETER(PAR.EB_Backfat_Thickness_Inch);
  PARAMETER(PAR.EB_Loin_Eye_Depth_Inches);
  PARAMETER(PAR.EB_Light_Reflectance);
  PARAMETER(PAR.EB_Backfat_Thickness_MM);
  PARAMETER(PAR.EB_Loineye_Depth_MM);
  PARAMETER(PAR.EB_Light_Reflectance_MM);
  PARAMETER(PAR.EB_Trim_Area);
  PARAMETER(PAR.EB_Carcass_Sex);
  PARAMETER(PAR.EB_Record_Created_Status);
  PARAMETER(PAR.EB_Error_Type);
  PARAMETER(PAR.EB_Trolley_Id);
  PARAMETER(PAR.EB_Broken_Back_Sts);
  PARAMETER(PAR.EB_Unused_Sts_1);
  PARAMETER(PAR.EB_Unused_Sts_2);
  PARAMETER(PAR.EB_Unused_Sts_3);
  PARAMETER(PAR.EB_Unused_Sts_4);
  PARAMETER(PAR.EB_Unused_Sts_5);
  PARAMETER(PAR.EB_Unused_Sts_6);
  PARAMETER(PAR.EB_Unused_Sts_7);
  PARAMETER(PAR.EB_Unused_Sts_8);
  PARAMETER(PAR.RU_Date);
  PARAMETER(PAR.RU_Time);
 }

 EXECUTE FUNCTION(Chg Eval Trans UPL    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1135112;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('Y');
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
}


ENDIF;

//?Org processing of the Eval Tran Upl
EXECUTE FUNCTION(UPD EvUPL-EvTrans     RT) TYPE(RTVOBJ) FILE(PKCPCPP)           AB1226910;
PARAMETER(PAR.EA_Company_Number);
PARAMETER(PAR.EA_Kill_Date);
{
 //?USER: Process Data record

 CASE;

 // IF WRK.First Time Flag Usr is Yes
 IF WRK.First_Time_Flag_Usr = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(WRK.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);
 {
  //?Execute internal function

  // Call program Val Company Number    XF.
  CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.Oms_Name);
  PARAMETER(WRK.Invalid_Y_N_USR);

  CASE;

  // IF WRK.Invalid Y/N USR is Yes
  IF WRK.Invalid_Y_N_USR = 'Y';

  // Send error message - 'Invalid Company Number'
  ERROR(PRK0299);
  MSGPARM(PAR.CC_Company_Number);

  ENDIF;

  // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
  PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

 }

 // WRK.First Time Flag Usr = CND.Yes
 WRK.First_Time_Flag_Usr = 'Y';

 ENDIF;

 // WRK.Return Code USR = CND.*Normal
 WRK.Return_Code_USR = *BLANK;

 EXECUTE FUNCTION(Rtv Tatts/Bo Load     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1135414;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(WRK.TH_Sex);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_Hog_Class_Type);
 PARAMETER(WRK.THP_Process_Code);
 PARAMETER(WRK.HC_Class_Code);
 PARAMETER(WRK.Return_Code_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Return Code USR = CND.*Record does not exist
  PAR.Return_Code_USR = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF WRK.Return Code USR is *Record does not exist
 IF WRK.Return_Code_USR = 'Y2U0005';

 //?Invalid tattoo number
 EXECUTE FUNCTION(CRT Evl Trns Inv    IF) TYPE(EXCINTFUN)                        AB1136780;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(WRK.EB_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('T');
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Evl Trns Inv Next RT) TYPE(RTVOBJ) FILE(PKCQCPP)           AB1136783;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.EB Scale Sequence Number = CON.000001
   PAR.EB_Scale_Sequence_Number = 000001;

   //?USER: Process Data record

   CASE;

   // IF DB1.EB Scale Sequence Number is Entry Allowed
   IF DB1.EB_Scale_Sequence_Number >= 000001;
   AND DB1.EB_Scale_Sequence_Number <= 699999;

   // PAR.EB Scale Sequence Number = DB1.EB Scale Sequence Number + CON.1
   PAR.EB_Scale_Sequence_Number = DB1.EB_Scale_Sequence_Number + 1;

   QUIT;

   ENDIF;

  }

  EXECUTE FUNCTION(Create Eval Trans Invalid) TYPE(CRTOBJ) FILE(PKCQCPP)          AB1135416;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  PARAMETER(PAR.EB_Tattoo_Number);
  PARAMETER(PAR.EB_Lot);
  PARAMETER(PAR.EB_Shift);
  PARAMETER(PAR.EB_Hot_Weight);
  PARAMETER(PAR.EB_Backfat_Thickness_Inch);
  PARAMETER(PAR.EB_Loin_Eye_Depth_Inches);
  PARAMETER(PAR.EB_Light_Reflectance);
  PARAMETER(PAR.EB_Backfat_Thickness_MM);
  PARAMETER(PAR.EB_Loineye_Depth_MM);
  PARAMETER(PAR.EB_Light_Reflectance_MM);
  PARAMETER(PAR.EB_Trim_Area);
  PARAMETER(PAR.EB_Carcass_Sex);
  PARAMETER(PAR.EB_Record_Created_Status);
  PARAMETER(PAR.EB_Error_Type);
  PARAMETER(PAR.EB_Trolley_Id);
  PARAMETER(PAR.EB_Broken_Back_Sts);
  PARAMETER(PAR.EB_Unused_Sts_1);
  PARAMETER(PAR.EB_Unused_Sts_2);
  PARAMETER(PAR.EB_Unused_Sts_3);
  PARAMETER(PAR.EB_Unused_Sts_4);
  PARAMETER(PAR.EB_Unused_Sts_5);
  PARAMETER(PAR.EB_Unused_Sts_6);
  PARAMETER(PAR.EB_Unused_Sts_7);
  PARAMETER(PAR.EB_Unused_Sts_8);
  PARAMETER(PAR.RU_Date);
  PARAMETER(PAR.RU_Time);
 }

 EXECUTE FUNCTION(Chg Eval Trans UPL    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1135112;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('Y');
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF WRK.TH Hog Class Type is Resale
 IF WRK.TH_Hog_Class_Type = 'R';

 EXECUTE FUNCTION(CRT Evl Trns Inv    IF) TYPE(EXCINTFUN)                        AB1136780;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(WRK.EB_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('R');
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Evl Trns Inv Next RT) TYPE(RTVOBJ) FILE(PKCQCPP)           AB1136783;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.EB Scale Sequence Number = CON.000001
   PAR.EB_Scale_Sequence_Number = 000001;

   //?USER: Process Data record

   CASE;

   // IF DB1.EB Scale Sequence Number is Entry Allowed
   IF DB1.EB_Scale_Sequence_Number >= 000001;
   AND DB1.EB_Scale_Sequence_Number <= 699999;

   // PAR.EB Scale Sequence Number = DB1.EB Scale Sequence Number + CON.1
   PAR.EB_Scale_Sequence_Number = DB1.EB_Scale_Sequence_Number + 1;

   QUIT;

   ENDIF;

  }

  EXECUTE FUNCTION(Create Eval Trans Invalid) TYPE(CRTOBJ) FILE(PKCQCPP)          AB1135416;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  PARAMETER(PAR.EB_Tattoo_Number);
  PARAMETER(PAR.EB_Lot);
  PARAMETER(PAR.EB_Shift);
  PARAMETER(PAR.EB_Hot_Weight);
  PARAMETER(PAR.EB_Backfat_Thickness_Inch);
  PARAMETER(PAR.EB_Loin_Eye_Depth_Inches);
  PARAMETER(PAR.EB_Light_Reflectance);
  PARAMETER(PAR.EB_Backfat_Thickness_MM);
  PARAMETER(PAR.EB_Loineye_Depth_MM);
  PARAMETER(PAR.EB_Light_Reflectance_MM);
  PARAMETER(PAR.EB_Trim_Area);
  PARAMETER(PAR.EB_Carcass_Sex);
  PARAMETER(PAR.EB_Record_Created_Status);
  PARAMETER(PAR.EB_Error_Type);
  PARAMETER(PAR.EB_Trolley_Id);
  PARAMETER(PAR.EB_Broken_Back_Sts);
  PARAMETER(PAR.EB_Unused_Sts_1);
  PARAMETER(PAR.EB_Unused_Sts_2);
  PARAMETER(PAR.EB_Unused_Sts_3);
  PARAMETER(PAR.EB_Unused_Sts_4);
  PARAMETER(PAR.EB_Unused_Sts_5);
  PARAMETER(PAR.EB_Unused_Sts_6);
  PARAMETER(PAR.EB_Unused_Sts_7);
  PARAMETER(PAR.EB_Unused_Sts_8);
  PARAMETER(PAR.RU_Date);
  PARAMETER(PAR.RU_Time);
 }

 EXECUTE FUNCTION(Chg Eval Trans UPL    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1135112;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('Y');
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF WRK.THP Process Code is Receiving
 IF WRK.THP_Process_Code = 'RECV';

 // OR WRK.THP Process Code is Slaughter
 OR WRK.THP_Process_Code = 'SLG';

 //?Valid record
 //?Valid record
 DO;

 CASE;

 // IF DB1.EA Carcass Sex EQ WRK.Blank USR
 IF DB1.EA_Carcass_Sex = WRK.Blank_USR;

 // WRK.ET Carcass Sex = WRK.TH Sex
 WRK.ET_Carcass_Sex = WRK.TH_Sex;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.ET Carcass Sex = DB1.EA Carcass Sex
 WRK.ET_Carcass_Sex = DB1.EA_Carcass_Sex;

 ENDIF;

 // WRK.ET Lean Percent NPPC = CON.*ZERO
 WRK.ET_Lean_Percent_NPPC = *ZERO;

 // WRK.ET Lean Percent FOM = CON.*ZERO
 WRK.ET_Lean_Percent_FOM = *ZERO;

 EXECUTE FUNCTION(Crt Eval Trans Rec    IF) TYPE(EXCINTFUN)                      AB1136539;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(WRK.EA_Scale_Sequence_Number);
 PARAMETER(WRK.ET_Carcass_Number);
 PARAMETER(000001);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(WRK.ET_Lean_Percent_NPPC);
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(WRK.ET_Lean_Percent_FOM);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(WRK.ET_Carcass_Sex);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('P');
 PARAMETER('N');
 PARAMETER(*BLANK);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(WRK.ET_Adjust_Add_Source);
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 PARAMETER(1);
 {
  //?Execute internal function

  // PAR.Carcass number        USR = PAR.Carcass Count USR
  PAR.Carcass_number_USR = PAR.Carcass_Count_USR;

  // DOW PAR.Carcass number        USR is GT Zero
  DOW PAR.Carcass_number_USR > *ZERO;

  EXECUTE FUNCTION(Rtv Eval Next#        RT) TYPE(RTVOBJ) FILE(PKBVCPP)           AB1135496;
  PARAMETER(PAR.ET_Company_Number);
  PARAMETER(PAR.ET_Kill_Date);
  PARAMETER(PAR.ET_Scale_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.ET_Scale_Sequence_Number = 1;

   QUIT;

   //?USER: Process Data record

   CASE;

   // IF DB1.ET Scale Sequence Number is Entry Allowed
   IF DB1.ET_Scale_Sequence_Number >= 000001;
   AND DB1.ET_Scale_Sequence_Number <= 699999;

   // PAR.ET Scale Sequence Number = DB1.ET Scale Sequence Number + CON.1
   PAR.ET_Scale_Sequence_Number = DB1.ET_Scale_Sequence_Number + 1;

   QUIT;

   ENDIF;

  }

  EXECUTE FUNCTION(Create Evaluation Transac) TYPE(CRTOBJ) FILE(PKBVCPP)          AB1102931;
  PARAMETER(PAR.ET_Company_Number);
  PARAMETER(PAR.ET_Kill_Date);
  PARAMETER(PAR.ET_Scale_Sequence_Number);
  PARAMETER(PAR.ET_Scale_Sequence_Number);
  PARAMETER(000001);
  PARAMETER(PAR.ET_Tattoo_Number);
  PARAMETER(PAR.ET_Lot);
  PARAMETER(PAR.ET_Shift);
  PARAMETER(PAR.ET_Hot_Wgt);
  PARAMETER(PAR.ET_Backfat_Thickness_Inch);
  PARAMETER(PAR.ET_Loin_Eye_Depth_Inches);
  PARAMETER(PAR.ET_Lean_Percent_NPPC);
  PARAMETER(PAR.ET_Backfat_Thickness_MM);
  PARAMETER(PAR.ET_Loineye_Depth_MM);
  PARAMETER(PAR.ET_Light_Reflectance_MM);
  PARAMETER(PAR.ET_Lean_Percent_FOM);
  PARAMETER(PAR.ET_Light_Reflectance);
  PARAMETER(PAR.ET_Trim_Area);
  PARAMETER(PAR.ET_Carcass_Sex);
  PARAMETER(PAR.ET_Error_Sts);
  PARAMETER(PAR.ET_Record_Add_Del_Sts);
  PARAMETER(PAR.ET_Record_Created_W_Avg);
  PARAMETER(PAR.ET_Record_Created_Status);
  PARAMETER(PAR.ET_User_Error_Override);
  PARAMETER(PAR.ET_Adjust_Add_Type);
  PARAMETER(PAR.ET_Broken_Back_Sts);
  PARAMETER(PAR.ET_Unused_Sts_2);
  PARAMETER(PAR.ET_Adjust_Add_Source);
  PARAMETER(PAR.ET_Unused_Sts_4);
  PARAMETER(PAR.ET_Unused_Sts_5);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('A');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.RU_Date);
  PARAMETER(PAR.RU_Time);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(*MISSING);
   PARAMETER(*MISSING);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  // PAR.Carcass number        USR = PAR.Carcass number        USR - CON.1
  PAR.Carcass_number_USR = PAR.Carcass_number_USR - 1;

  ENDDO;

 }

 //?We want to do this after the carcasses are balanced.
 EXECUTE FUNCTION(Chg Eval Trans UPL    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1135112;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('Y');
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 ENDDO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Invalid:  Do not want to receive records either to early or
 //?          to late
 //?Tattoo Process is either in scaleing, or payment
 EXECUTE FUNCTION(CRT Evl Trns Inv    IF) TYPE(EXCINTFUN)                        AB1136780;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(WRK.EB_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('P');
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Evl Trns Inv Next RT) TYPE(RTVOBJ) FILE(PKCQCPP)           AB1136783;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.EB Scale Sequence Number = CON.000001
   PAR.EB_Scale_Sequence_Number = 000001;

   //?USER: Process Data record

   CASE;

   // IF DB1.EB Scale Sequence Number is Entry Allowed
   IF DB1.EB_Scale_Sequence_Number >= 000001;
   AND DB1.EB_Scale_Sequence_Number <= 699999;

   // PAR.EB Scale Sequence Number = DB1.EB Scale Sequence Number + CON.1
   PAR.EB_Scale_Sequence_Number = DB1.EB_Scale_Sequence_Number + 1;

   QUIT;

   ENDIF;

  }

  EXECUTE FUNCTION(Create Eval Trans Invalid) TYPE(CRTOBJ) FILE(PKCQCPP)          AB1135416;
  PARAMETER(PAR.EB_Company_Number);
  PARAMETER(PAR.EB_Kill_Date);
  PARAMETER(PAR.EB_Scale_Sequence_Number);
  PARAMETER(PAR.EB_Tattoo_Number);
  PARAMETER(PAR.EB_Lot);
  PARAMETER(PAR.EB_Shift);
  PARAMETER(PAR.EB_Hot_Weight);
  PARAMETER(PAR.EB_Backfat_Thickness_Inch);
  PARAMETER(PAR.EB_Loin_Eye_Depth_Inches);
  PARAMETER(PAR.EB_Light_Reflectance);
  PARAMETER(PAR.EB_Backfat_Thickness_MM);
  PARAMETER(PAR.EB_Loineye_Depth_MM);
  PARAMETER(PAR.EB_Light_Reflectance_MM);
  PARAMETER(PAR.EB_Trim_Area);
  PARAMETER(PAR.EB_Carcass_Sex);
  PARAMETER(PAR.EB_Record_Created_Status);
  PARAMETER(PAR.EB_Error_Type);
  PARAMETER(PAR.EB_Trolley_Id);
  PARAMETER(PAR.EB_Broken_Back_Sts);
  PARAMETER(PAR.EB_Unused_Sts_1);
  PARAMETER(PAR.EB_Unused_Sts_2);
  PARAMETER(PAR.EB_Unused_Sts_3);
  PARAMETER(PAR.EB_Unused_Sts_4);
  PARAMETER(PAR.EB_Unused_Sts_5);
  PARAMETER(PAR.EB_Unused_Sts_6);
  PARAMETER(PAR.EB_Unused_Sts_7);
  PARAMETER(PAR.EB_Unused_Sts_8);
  PARAMETER(PAR.RU_Date);
  PARAMETER(PAR.RU_Time);
 }

 EXECUTE FUNCTION(Chg Eval Trans UPL    CH) TYPE(CHGOBJ) FILE(PKCPCPP)           AB1135112;
 PARAMETER(DB1.EA_Company_Number);
 PARAMETER(DB1.EA_Kill_Date);
 PARAMETER(DB1.EA_Scale_Sequence_Number);
 PARAMETER(DB1.EA_Tattoo_Number);
 PARAMETER(DB1.EA_Lot);
 PARAMETER(DB1.EA_Shift);
 PARAMETER(DB1.EA_Hot_Weight);
 PARAMETER(DB1.EA_Backfat_Thickness_Inch);
 PARAMETER(DB1.EA_Loin_Eye_Depth_Inches);
 PARAMETER(DB1.EA_Light_Reflectance);
 PARAMETER(DB1.EA_Trim_Area);
 PARAMETER(DB1.EA_Carcass_Sex);
 PARAMETER(DB1.EA_Record_Created_Status);
 PARAMETER('Y');
 PARAMETER(DB1.EA_Backfat_MM);
 PARAMETER(DB1.EA_LoinEye_MM);
 PARAMETER(DB1.EA_Light_Refl_MM);
 PARAMETER(DB1.EA_Trolley_Id);
 PARAMETER(DB1.EA_Broken_Back_Sts);
 PARAMETER(DB1.EA_Unused_Sts_1);
 PARAMETER(DB1.EA_Unused_Sts_2);
 PARAMETER(DB1.EA_Unused_Sts_3);
 PARAMETER(DB1.EA_Unused_Sts_4);
 PARAMETER(DB1.EA_Unused_Sts_5);
 PARAMETER(DB1.EA_Unused_Sts_6);
 PARAMETER(DB1.EA_Unused_Sts_7);
 PARAMETER(DB1.EA_Unused_Sts_8);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 ENDIF;

 ENDIF;

 ENDIF;

}


// Call program Prt Eval Trans Inv/Tat PF.
CALL PROGRAM(Prt Eval Trans Inv/Tat PF) ('PKPAPFR');
PARAMETER(PAR.EA_Company_Number);
PARAMETER(PAR.EA_Kill_Date);
PARAMETER(WRK.Oms_System_Value_Alpha);

