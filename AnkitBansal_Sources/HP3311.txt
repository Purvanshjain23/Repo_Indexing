      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: BGF-to-GF Transfers--Sow/Sire Detail
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     06/27/05
      *
      * FUNCTION:    This function builds the detail sow/sire line records for each
      *              Grow Finish group that received pigs directly from a BGF farm...no
      *              nursery groups were involved!
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one in file HSP098-Sire Lines.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp098    if   e           k disk
      *  Sire Lines
      *
      *
     Fhsp325    if   e           k disk
      *  Workfile: Weekly sire line dose percents
      *
      *
     Fhsp351    if   e           k disk
      *  Workfile: BGF-to-GF Transfers
      *
      *
     Fhsp3311   uf a e           k disk
      *  Workfile: BGF-to-GF Transfers-Sow/Sire Detail
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrsicd         s              5a   dim(50)
     D arrrchd         s              5s 0 dim(50)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
      *
      * Workfields
      *
     D wkrchd          s                   like(wcrchd)
     D wkremhd         s                   like(wcrchd)
     D wkhd            s                   like(wcrchd)
     D wkcn            s              3  0
     D wkpr            s             15  8
     D wkrempr         s              5  2
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process each destination group in the workfile.
      *
     C     *loval        setll     hsp351
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsp351                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * First time
     C                   if        first = yes
     C                   exsr      $clear
     C                   move      no            first
     C                   endif
      *
      *
      * Detail processing when the record has a BGF source farm,
      *  1) accumulate total head received into the group
      *  2) retrieve the weekly doses percents and build distribution arrays
      *  3) read the arrays to write records with distributed head
      *
     C                   if        wcorfscd <> 0
     C                   add       wcrchd        wkrchd
     C                   exsr      $doses
     C                   exsr      $wrt3311
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------
      * Retrieve the weekly doses percents and calculate head per sire line
      *---------------------------------------------------------------------
      *
     C     $doses        begsr
      *
     C                   z-add     0             wkcn
     C                   z-add     0             wkhd
     C                   z-add     wcrchd        wkremhd
      *
     C     key01         setll     hsp325
      *
     C                   dou       *in91 = *on                                  Doses loop
     C     key01         reade     hsp325                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   add       1             wkcn
      *
      * Determine how many head should go with this record. If you are on
      * the last record (or only have 1 record), then use all the remaining
      * head; otherwise, go calculate the head to associate with this sire line.
      *
     C                   select
     C                   when      wkcn = w1sino
     C                   z-add     wkremhd       wkhd
     C                   other
     C     w1dopr        mult      .01           wkpr
     C     wcrchd        mult      wkpr          wkhd
     C                   sub       wkhd          wkremhd
     C                   endsl
      *
     C                   z-add     1             x
     C     w1sicd        lookup    arrsicd(x)                             92
     C                   if        *in92 = *on                                  If exists
     C                   add       wkhd          arrrchd(x)
     C                   else
     C                   add       1             y
     C                   move      w1sicd        arrsicd(y)
     C                   z-add     wkhd          arrrchd(y)
     C                   endif                                                  If exists
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Doses loop
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Write Sow/Sire Detail records
      *----------------------------------------------------------------
      *
     C     $wrt3311      begsr
      *
     C                   z-add     100           wkrempr
      *
      * Set up fields that do not change per record.
      *
     C                   z-add     wcorfscd      wgorfscd
     C                   z-add     wcorcell      wgorcell
     C                   z-add     wcsvyr        wgsvyr
     C                   z-add     wcsvwk        wgsvwk
      *
     C                   move      wcdnppcd      wgdnppcd
     C                   z-add     wcdnfscd      wgdnfscd
     C                   z-add     wcdncell      wgdncell
     C                   z-add     wcdnhgsn      wgdnhgsn
     C                   move      wcdnhgcd      wgdnhgcd
      *
     C                   if        y = 0                                        If no sire info
     C                   move      'UNK??'       wgsicd
     C                   move      'UNK??'       wggg0
     C                   z-add     wkrchd        wgrchd
     C                   z-add     100           wgdopr
     C                   z-add     1             wgsino
     C                   write     wgrec
     C                   else
      *
      * We want to know how many records we are writing for this distribution.
      *
     C                   z-add     y             wgsino
      *
      * Write a record for each element in the sire line array.
      *
     C                   do        y             x
     C                   move      arrsicd(x)    wgsicd
     C                   z-add     arrrchd(x)    wgrchd
      *
      * Calculate percent of total
      *
     C                   select
     C                   when      y = x
     C                   z-add     wkrempr       wgdopr
     C                   other
     C                   if        wkrchd <> 0
     C     arrrchd(x)    div       wkrchd        wkpr
     C     wkpr          mult(h)   100           wgdopr
     C                   sub       wgdopr        wkrempr
     C                   endif
     C                   endsl
      *
      * Retrieve Cognos Report Grouping associated with Sire Line
      *
     C     wgsicd        chain     hsp098                             92
     C                   if        *in92 = *off
     C                   move      sigg0         wggg0
     C                   else
     C                   move      'UNK??'       wggg0
     C                   endif
      *
     C                   write     wgrec
     C                   enddo
     C                   endif                                                  If no sire info
      *
      * Clear/initialize for next group
      *
     C                   exsr      $clear
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear routine
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * Clear arrays and set array indexes back to zero
      *
     C                   move      *blank        arrsicd
     C                   z-add     0             arrrchd
     C                   z-add     0             x
     C                   z-add     0             y
      *
      * Clear accumulators
      *
     C                   z-add     0             wkrchd
     C                   z-add     0             wkremhd
     C                   z-add     0             wkhd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key01         klist
     C                   kfld                    wcorfscd
     C                   kfld                    wcsvyr
     C                   kfld                    wcsvwk
      *
     C                   endsr
      /EJECT
