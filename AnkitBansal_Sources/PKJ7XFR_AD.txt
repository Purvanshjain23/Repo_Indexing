// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKJ7XFR
// ?Date: 14.08.2025 Time: 02:49:44
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//?09/30/2016 Brad Baden  E7214 - MMP Floor and Ceiling Pricing
//?  Added a new parameter to function Clc Base SC MultiPrc  XF to
//?  return the Price Type.
//? 3/02/2021 Brad Baden H16853 - Increase Buy Order Field 5 -> 7
//?                               Recompiled only for increase in
//?                               the Buy Order Number field size.
ENDDO;

//?Calculate Purchase Price
CASE;

// IF PAR.BOH Quoted Base Mkt Price GT WRK.Zero USR
IF PAR.BOH_Quoted_Base_Mkt_Price > WRK.Zero_USR;

//?If a price was quoted when the Buy Order was created, then the
//?producer is paid based on the quoted price.
// PAR.TH CM Base Mkt Price = PAR.BOH Quoted Base Mkt Price
PAR.TH_CM_Base_Mkt_Price = PAR.BOH_Quoted_Base_Mkt_Price;

CASE;

// IF PAR.BOH Quote Price Type is Carcass Price
IF PAR.BOH_Quote_Price_Type = 'CP';

// PAR.Pricing UOM USR = CND.Carcass Hundred Weight
PAR.Pricing_UOM_USR = 'CW';

// IF PAR.BOH Quote Price Type is Live Price
IF PAR.BOH_Quote_Price_Type = 'LP';

// PAR.Pricing UOM USR = CND.Live Hundred Weight
PAR.Pricing_UOM_USR = 'LW';

ENDIF;

//?9/27/2010 SLM Made change to pull back the
//?the pricing information even if the this buy order is using the
//?base market price.
// Call program RTV Market Price      XF.
CALL PROGRAM(RTV Market Price      XF) ('PDMWXFR');
PARAMETER(WRK.*Return_code);
PARAMETER(PAR.BOH_Commodity_Market_Code);
PARAMETER(PAR.BOH_Commodity_Price_Group);
PARAMETER(PAR.TH_Purchase_Date);
PARAMETER(*ZERO);
PARAMETER(WRK.OMS_Market_Price_Amt_Usr);
PARAMETER(PAR.Pricing_Date_USR);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Market_Date_Method);
PARAMETER('H');
PARAMETER(WRK.OMS_Error_Return_Usr);

// PAR.Market Price USR = WRK.OMS Market Price Amt Usr * CON.1 *
PAR.Market_Price_USR = WRK.OMS_Market_Price_Amt_Usr * 1;

// Call program Rtv Commod Group U/M  XF.
CALL PROGRAM(Rtv Commod Group U/M  XF) ('PDUVXFR');
PARAMETER(PAR.BOH_Commodity_Price_Group);
PARAMETER(PAR.Pricing_UOM_USR);

//?Calculate Purchase Price
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF PAR.PO Option Code is Multi Market Price
IF PAR.PO_Option_Code = 'MMP';

//?Multi Market Price - Process more then 1 price
// Call program Clc Base SC MultiPrc  XF.
CALL PROGRAM(Clc Base SC MultiPrc  XF) ('PLQBXFR');
PARAMETER(PAR.PC_Contract_Code);
PARAMETER(PAR.PSC_Sub_Contract_Code);
PARAMETER(PAR.BOH_Market_Date_Method);
PARAMETER(PAR.CMP_Program_Code);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Purchase_Date);
PARAMETER(PAR.TH_CM_Base_Mkt_Price);
PARAMETER(PAR.Market_Price_USR);
PARAMETER(PAR.Pricing_UOM_USR);
PARAMETER(PAR.Pricing_Date_USR);
PARAMETER(WRK.Multi_Mkt_Prc_1_usr);
PARAMETER(WRK.Base_Mkt_Price_1_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_2_Usr);
PARAMETER(WRK.Base_Mkt_Price_2_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_3_Usr);
PARAMETER(WRK.Base_Mkt_Price_3_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_4_Usr);
PARAMETER(WRK.Base_Mkt_Price_4_Usr);
PARAMETER(WRK.Multi_Mkt_Prc_5_Usr);
PARAMETER(WRK.Base_Mkt_Price_5_Usr);
PARAMETER(LCL.Floor_Ceiling_Price_Type);

// IF *OTHERWISE
IF *OTHERWISE;

//?*----------------------------------------------------------------*
//?Retrieve Market Price from OMS into PAR.Market Price USR
//?Function for retrieving the price needs to be in the OMS system.
// Call program RTV Market Price      XF.
CALL PROGRAM(RTV Market Price      XF) ('PDMWXFR');
PARAMETER(WRK.*Return_code);
PARAMETER(PAR.BOH_Commodity_Market_Code);
PARAMETER(PAR.BOH_Commodity_Price_Group);
PARAMETER(PAR.TH_Purchase_Date);
PARAMETER(*ZERO);
PARAMETER(WRK.OMS_Market_Price_Amt_Usr);
PARAMETER(PAR.Pricing_Date_USR);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Market_Date_Method);
PARAMETER('H');
PARAMETER(WRK.OMS_Error_Return_Usr);

// PAR.Market Price USR = WRK.OMS Market Price Amt Usr * CON.1 *
PAR.Market_Price_USR = WRK.OMS_Market_Price_Amt_Usr * 1;

// Call program Rtv Commod Group U/M  XF.
CALL PROGRAM(Rtv Commod Group U/M  XF) ('PDUVXFR');
PARAMETER(PAR.BOH_Commodity_Price_Group);
PARAMETER(PAR.Pricing_UOM_USR);

//?*----------------------------------------------------------------*
//?Process special HOT CUTOUT    REVIEW AND ONLY GUYMON IS USING THIS
CASE;

// IF PAR.BOH Commodity Price Group is CUTOUT
IF PAR.BOH_Commodity_Price_Group = 'CUTOUT';

// AND PAR.BOH Commodity Market Code is Hog Purchasing
AND PAR.BOH_Commodity_Market_Code = 'HOG';

//?Decission to HARD code Hog Cutout here
DO;

//?REVIEWED: By Purva and Susan 2013/05/03
//?When the mpr cutout came into this picture all hard code
//?for cutout was review to see what was ok
//?this area only affects guymon and will be treated as such
//?this is being changed to check for hog cutout instead of just
//?CUTOUT
//?The company value has values that affect guymon for the hog cutout
//?at this time triumph foods does not have values that would cause
//?these calculation to be used due to the values are either 100 or zero
ENDDO;

//?ADDED THIS ADJ TO THE BASE PRICE PER THE NEW CONTRACT 1/3/6 JANCIE
// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER('CUTOUTCONT');
PARAMETER(LCL.System_Value_Numeric_USR);

CASE;

// IF LCL.System Value Numeric  USR GT WRK.Zero USR
IF LCL.System_Value_Numeric_USR > WRK.Zero_USR;

// PAR.Market Price USR = PAR.Market Price USR - LCL.System Value Numeric  USR
PAR.Market_Price_USR = PAR.Market_Price_USR - LCL.System_Value_Numeric_USR;

ENDIF;

// Call program Rtv Company Value Nbr XF.
CALL PROGRAM(Rtv Company Value Nbr XF) ('PDHGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER('CUTOUT');
PARAMETER(LCL.System_Value_Numeric_USR);

CASE;

// IF LCL.System Value Numeric  USR GT WRK.Zero USR
IF LCL.System_Value_Numeric_USR > WRK.Zero_USR;

// LCL.Percent Decimal       USR = LCL.System Value Numeric  USR / CON.100 *
LCL.Percent_Decimal_USR = LCL.System_Value_Numeric_USR / 100;

// PAR.Market Price USR = LCL.Percent Decimal       USR * PAR.Market Price USR *Rounded
PAR.Market_Price_USR = LCL.Percent_Decimal_USR * PAR.Market_Price_USR 'H';

ENDIF;

ENDIF;

//?*----------------------------------------------------------------*
//?06/20/05 PKD HPE011 Adjust Market Price with Percent of Market
//?             if the Carcass Merit Program Grading Type is Meat
//?             Value.
//?12/15/05 PKD p061215a-Do not adjust the Base Price if Commodity
//?             Group is not CUTOUT.
// LCL.Market Price USR = PAR.Market Price USR
LCL.Market_Price_USR = PAR.Market_Price_USR;

EXECUTE FUNCTION(Rtv CMP Payment Info  RT) TYPE(RTVOBJ) FILE(PKARREP)           AB1263785;
PARAMETER(PAR.CMP_Program_Code);
PARAMETER(NLL.CMP_Description);
PARAMETER(PAR.CMP_Grading_Type);
PARAMETER(NLL.CMP_Sort_Basis);
PARAMETER(NLL.CMP_Carc_Wgt_Type);
PARAMETER(NLL.CMP_Std_Lean_Percent);
PARAMETER(NLL.CMP_Lean_Factor);
PARAMETER(NLL.CMP_Optimal_Row_Nbr_f_srt);
PARAMETER(NLL.CMP_Type);
PARAMETER(NLL.CMP_Market_Add_Deduct);
PARAMETER(PAR.CMP_of_Carcass_Cutout);
PARAMETER(NLL.CMP_Fixed_Cost_Per_Head);
PARAMETER(NLL.RS_Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?1/24/2008 slm * out this section of code due to
//?          we will be calculating the Market Price Usr
//?          using the % Market from the Producer Sub-Contract level
//?          and not at the Carcass Merit Program level
//?          this will only be done if the PSC MKT PRICE >0
//?*----------------------------------------------------------------*
//?1/24/2008 SLM Add the changes to the Adjust the Market Price
//?in the Cash Basis Price only.  the Shrd risk is already getting
//?it correctly.
//?Process Pricing Options
CASE;

// IF PAR.PO Option Code is Cash Basis Price
IF PAR.PO_Option_Code = 'CBP';

CASE;

// IF PAR.PSC Mkt Percent is Not Zeros
IF PAR.PSC_Mkt_Percent <> *ZERO;

// Market Price
LCL.Market_Price_USR = LCL.Market_Price_USR * ( PAR.PSC_Mkt_Percent / 100 'H' ) 'H';

ENDIF;

//?add market + or -
// PAR.TH CM Base Mkt Price = LCL.Market Price USR + PAR.BOH Market Add/Deduct
PAR.TH_CM_Base_Mkt_Price = LCL.Market_Price_USR + PAR.BOH_Market_Add_Deduct;

//?Process Pricing Options
// IF PAR.PO Option Code is Shared Risk Base Price
IF PAR.PO_Option_Code = 'SRB';

//?Market + or - is added to adjusted market price inside this function
// Call program Zzz Shrd Risk Base    XF.
CALL PROGRAM(Zzz Shrd Risk Base    XF) ('PKJ2XFR');
PARAMETER(PAR.BOH_Market_Add_Deduct);
PARAMETER(PAR.TH_CM_Base_Mkt_Price);
PARAMETER(PAR.PSC_Floor_Price);
PARAMETER(PAR.PSC_Market_Percent_NU);
PARAMETER(PAR.PSC_Mkt_Percent);
PARAMETER(LCL.Market_Price_USR);

//?Process Pricing Options
// IF PAR.PO Option Code is Shared Risk Sliding Price
IF PAR.PO_Option_Code = 'SRS';

//?Market + or - is not used for this pricing opition
// Call program Zzz Shrd Risk Sliding XF.
CALL PROGRAM(Zzz Shrd Risk Sliding XF) ('PKJ3XFR');
PARAMETER(PAR.TH_CM_Base_Mkt_Price);
PARAMETER(PAR.PSC_Floor_Price);
PARAMETER(PAR.PSC_Ceiling_Price);
PARAMETER(LCL.Market_Price_USR);

ENDIF;

ENDIF;

ENDIF;

