      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP300 - Delete/Build BGF Quarterly Averages
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/05/02
      *
      * Function:  This function:
      *                1) determines the accounting quarter prior to the current quarter
      *                2) deletes all records for the prior quarter
      *                3) rebuilds all records for the prior quarter
      *
      * The 'quarterly averages' file is used in the BGF predictions.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/05/02  LeAnne Fedor
      *           Changed Fall-out Rate calculation.
      *
      * 06/12/02  LeAnne Fedor
      *           Changed logic to call a generic calculation program.
      *           Also, added 'totals' for raw data to Quarterly Averages file so that
      *           we could roll up farms and make accurate 'cell' calculations.
      *           We, also, now do the calcs for the Quarterly Averages using the 'raw'
      *           values instead of the 'averages' values.
      *
      * 06/19/02  LeAnne Fedor
      *           Added Removal-Rate logic.
      *
      * 09/10/03  LeAnne Fedor
      *           The 'averages' calculations will now be made with a 'count' that is specific
      *           to each calculation. So, 9 more 'count' fields were added to the Quarterly
      *           Averages file to hold these new fields.
      *
      * 02/01/05  LeAnne Fedor
      *           Recompile only. New fields (Sire Line Company and Prime Line) added
      *           to Datamart FIN: Group Header and Datamart BGF: Weekly Production files.
      *
      * 02/07/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *                    Added: Transferred In Open Gilts
      *                  Removed: Total Lactation Pounds
      *
      * 07/05/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *           Added 1 new field: Average Daily Beginning Piglet Inventory
      *
      * 08/23/05  LeAnne Fedor
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Man hours
      *
      * 03/23/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *
      * 04/24/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *                 Cognos Report Grouping
      *                 Weaning Cognos Report Grouping
      *                 Report PCP Cognos Report Grouping
      *                 Report Farrowed Cognos Report Grouping
      *
      * 06/15/06  LeAnne Ramsey
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Total Gilt Weight @ 28 Weeks
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 08/10/07  LeAnne Ramsey
      *           Recompile only. New "target" fields renamed in the Datamart Group
      *           Header file.
      *
      * 08/04/08  LeAnne Ramsey
      *           Recompile only. Fields deleted from Weekly Production file.
      *             BPPSGLSV - Nbr Gilts Bred w/Passed Date
      *             BPWSLB   - Weekly Ending Lbs Supplement Used
      *             BPP2LT   - Total P2 Litters Farrowed
      *             BPTDGB   - Total Days Gilt Breeding Age
      *
      * 11/07/08  LeAnne Ramsey
      *           Recompile only:
      *           Added 3 new fields to HPPB092-Datamart BGF: Weekly Production
      *            1) Target open gilt pool eligible
      *            2) Target litters farrowed/mated female/year
      *            3) Target pigs weaned/mated female/year
      *
      * 05/28/09  LeAnne Ramsey
      *           Recompile only:
      *           Added new field "Farrowing Crates" to:
      *                HPPB092-Datamart BGF: Weekly Production
      *
      * 09/01/09  LeAnne Ramsey
      *           Recompile only. Added new field "Report Total Litters Farrowed" to:
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 01/14/10  LeAnne Ramsey
      *           Recompile only. Changed text on BPLVHD and BPLVLB in:
      *                HPPB092-Datamart BGF: Weekly Production
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 11/10/10  LeAnne Ramsey (E1151)
      *           Recompile only. Increased 'total born alive' in HSP100 to 6,0.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Added fields Sold days in phase, Avg Sold days in phase,
      *           Wgt open date, and company number to HPPF034.         E6136
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsp100    uf a e           k disk
      *    Quarterly averages
      *
      *
     Fhplf034a  if   e           k disk
      *    DataMart FIN: Group header
      *
      *
     Fhplb092c  if   e           k disk
      *    DataMart BGF: Weekly production
      *
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Control fields
      *
     D count           s              2  0
     D tosvcn          s              2  0
     D rsgrcn          s              2  0
     D rpgrcn          s              2  0
     D fsgrcn          s              2  0
     D fpgrcn          s              2  0
     D rfgrcn          s              2  0
     D toltcn          s              2  0
     D bahdcn          s              2  0
     D pmhdcn          s              2  0
      *
      *
      * Work fields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
     D wksysdt         s              8  0
     D wkyymmdd        s              6  0
      *
      *
      * Work fields for accumulations
      *
     D wkppcd          s                   like(hgppcd)
      *
     D wkajtihd        s              9  0
     D wkrmhd          s              9  0
      *
      *
      * Parm fields
      *
     D xxcocd          s              3  0
     D xxreturn        s              7a
      *
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
      *
     D xxhpscdyr       s                   like(bpcdyr)
     D xxhpscdwk       s                   like(bpcdwk)
     D xxhpspicdt      s                   like(bppicdt)
      *
     D xxcdwk          s                   like(bpcdwk)
     D xxday           s              1a
      *
     D xxacyr          s                   like(bpacyr)
     D xxacpe          s                   like(bpacpe)
     D xxacwk          s                   like(bpacwk)
     D xxacqr          s              1  0
      *
     D xxrsgrsv        s              9  0
     D xxrpgrhd        s              9  0
     D xxfsgrhd        s              9  0
     D xxfpgrhd        s              9  0
     D xxrfgrhd        s              9  0
     D xxtolt          s              9  0
     D xxbahd          s              9  0
     D xxpmhd          s              9  0
     D xxnrmhd         s              9  0
     D xxnajtihd       s              9  0
     D xxfrmhd         s              9  0
     D xxfajtihd       s              9  0
      *
     D xxltbahd        s              5  2
     D xxcrpr          s              5  2
     D xxfrpr          s              5  2
     D xxfopr          s              5  2
     D xxpmpr          s              5  2
     D xxnrmpr         s              5  2
     D xxfrmpr         s              5  2
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Determine the accounting quarter that is prior to the current quarter.
      * We only want to delete/rebuild 'completed' quarters of data; so, we
      * want to work with the 'prior' quarter's data.
      *
     C                   exsr      $quarter
      *
      * Delete all of the existing 'quarterly average' records for this
      * prior quarter.
      *
     C                   exsr      $delete
      *
      *
      * Now, process each BGF farm writing a 'quarterly averages' record
      * for the farm for the prior quarter.
      *
     C                   exsr      $farms
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------------------
      * Process each BGF farm and build a quarterly averages record
      *---------------------------------------------------------------------------------
      *
     C     $farms        begsr
      *
     C                   dou       *in90 = *on                                  Do farms
     C                   read      hsp018                                 90
     C                   if        *in90 = *off and fsppcd = 'BGF'              If not EOF
      *
      * For each farm, accumulate for the quarter:
      *   1) BGF production data
      *   2) Destination Nursery removal data
      *   3) Destination Grow Finish removal data
      *
     C                   exsr      $accumbgf
     C                   exsr      $accumnur
     C                   exsr      $accumgf
      *
      * If you had any weekly records, then make your calculations and
      * write a 'quarterly averages' record for the farm.
      *
     C                   if        count > 0
     C                   exsr      $calcs
     C                   exsr      $write
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do farms
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------
      * Accumulate values from the Datamart BGF weekly production records
      *--------------------------------------------------------------------------
      *
     C     $accumbgf     begsr
      *
      * Read each Datamart BGF Weekly Production record for the farm/accounting year/quarter.
      * Accumulate the values you will need to calculate the 'quarterly averages'.
      *
     C     key02         setll     hplb092c
      *
     C                   dou       *in91 = *on                                  Do build
     C     key02         reade     hplb092c                               91
     C                   if        *in91 = *off                                 If not EOF
      *
      * Increment the counter that holds the number of records read for this
      * farm/year/quarter.
     C                   add       1             count
      *
      * Total services
      *  1) sum of number of weaners + number of open sow pool served +
      *            number of returns + number of gilts
      *
     C                   add       bpwnsv        qatosv
     C                   add       bplwnsv       qatosv
     C                   add       bprtsv        qatosv
     C                   add       bpglsv        qatosv
      *
     C                   if        bpwnsv <> 0 or
     C                             bplwnsv <> 0 or
     C                             bprtsv <> 0 or
     C                             bpglsv <> 0
     C                   add       1             tosvcn
     C                   endif
      *
      * Accumulate for conception rate calculation.
      *  1) report PCP services-group
      *  2) report PCP head-group
      *
     C                   add       bprsgrsv      qarsgrsv
     C                   if        bprsgrsv <> 0
     C                   add       1             rsgrcn
     C                   endif
      *
      *
     C                   add       bprpgrhd      qarpgrhd
     C                   if        bprpgrhd <> 0
     C                   add       1             rpgrcn
     C                   endif
      *
      * Accumulate for farrowing and fallout rate calculations.
      *  1) report farrowed services-group
      *  2) report farrowed PCP head-group
      *  3) report farrowed head-group
      *
     C                   add       bpfsgrhd      qafsgrhd
     C                   if        bpfsgrhd <> 0
     C                   add       1             fsgrcn
     C                   endif
      *
     C                   add       bpfpgrhd      qafpgrhd
     C                   if        bpfpgrhd <> 0
     C                   add       1             fpgrcn
     C                   endif
      *
     C                   add       bprfgrhd      qarfgrhd
     C                   if        bprfgrhd <> 0
     C                   add       1             rfgrcn
     C                   endif
      *
      *
      *
      * Accumulate for born alive per litter calculation.
      *  1) total litters farrowed
      *  2) total born alive head
      *
     C                   add       bptolt        qatolt
     C                   if        bptolt <> 0
     C                   add       1             toltcn
     C                   endif
      *
     C                   add       bpbahd        qabahd
     C                   if        bpbahd <> 0
     C                   add       1             bahdcn
     C                   endif
      *
      *
      * Accumulate head for mortality rate calculation.
      *  1) total prewean losses + DOA + reported pigs weaned - quality head
      *     - reject head - live head from sales - DOA
      * (NOTE: I know it looks like this formula doubles up on DOA head.
      *  But, Alice has verified that it matches the COGNOS formula and is
      *  what we want to use here. It first accumulates the 'reported dead'--that
      *  is the 'total prewean losses' and the recorded DOAs. Then, it tosses any
      *  any discrepancy in head between what was shipped 'out' and what 'arrived'
      *  at the destinations.
      *
     C                   add       bptolshd      qapmhd
     C                   add       bpdohd        qapmhd
      *
     C                   add       bptownhd      qapmhd
     C                   sub       bpqlhd        qapmhd
     C                   sub       bprjhd        qapmhd
     C                   sub       bplvhd        qapmhd
     C                   sub       bpdohd        qapmhd
      *
     C                   if        bptolshd <> 0 or
     C                             bpdohd   <> 0 or
     C                             bptownhd <> 0 or
     C                             bpqlhd   <> 0 or
     C                             bprjhd   <> 0 or
     C                             bplvhd   <> 0 or
     C                             bpdohd   <> 0
     C                   add       1             pmhdcn
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do build
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------
      * Accumulate values from destination Nursery groups
      *--------------------------------------------------------------------------
      *
      *
     C     $accumnur     begsr
      *
      * Accumulate values for each disposed/closed Nursery group that:
      *  A) had this BGF farm as its single source of hogs
      *  B) disposed in the quarter being processed
      *
     C                   z-add     0             wkrmhd
     C                   z-add     0             wkajtihd
      *
     C                   move      'NUR  '       wkppcd
     C     key03         setll     hplf034a
      *
     C                   dou       *in91 = *on                                  Do nursery
     C     key03         reade     hplf034a                               91
     C                   if        *in91 = *off and                             If not EOF
     C                             (hgdscdyr = xxacyr and hgdsacqr = xxacqr)
     C                   exsr      $removal
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do nursery
      *
     C                   z-add     wkrmhd        qanrmhd
     C                   z-add     wkajtihd      qanajtihd
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------
      * Accumulate values from destination Grow Finish groups
      *--------------------------------------------------------------------------
      *
     C     $accumgf      begsr
      *
      * Accumulate values for each disposed/closed Grow Finish group that:
      *  A) had this BGF farm as its single source of hogs
      *  B) disposed in the quarter being processed
      *
     C                   z-add     0             wkrmhd
     C                   z-add     0             wkajtihd
      *
     C                   move      'GF   '       wkppcd
     C     key03         setll     hplf034a
      *
     C                   dou       *in91 = *on                                  Do grow
     C     key03         reade     hplf034a                               91
     C                   if        *in91 = *off and                             If not EOF
     C                             (hgdscdyr = xxacyr and hgdsacqr = xxacqr)
     C                   exsr      $removal
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do grow
      *
     C                   z-add     wkrmhd        qafrmhd
     C                   z-add     wkajtihd      qafajtihd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------
      * Accumulate removal head values
      *---------------------------------------------------------------------
      *
     C     $removal      begsr
      *
      * Adjusted transferred in head
      *
     C                   add       hgajtihd      wkajtihd
      *
      * Accumulate 'removal' head values:
      *  1) daily dead head
      *  2) DOA head
      *  3) Cull sale head
      *  4) Inventory adjustment head
      *
     C                   add       hgddhd        wkrmhd
     C                   add       hgdoahd       wkrmhd
     C                   add       hgcuhd        wkrmhd
     C                   sub       hgiahd        wkrmhd
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------
      * Make calculations
      *------------------------------------------------------------------
      *
     C     $calcs        begsr
      *
      * Populate 'key' fields
      *
     C                   z-add     fsfscd        qafscd
     C                   move      fsgtcd        qagtcd
     C                   z-add     xxacyr        qaacyr
     C                   z-add     xxacqr        qaacqr
      *
      * Populate 'counter' fields
      *
     C                   z-add     count         qacount
     C                   z-add     tosvcn        qatosvcn
     C                   z-add     toltcn        qatoltcn
     C                   z-add     bahdcn        qabahdcn
     C                   z-add     pmhdcn        qapmhdcn
     C                   z-add     rfgrcn        qarfgrcn
     C                   z-add     rsgrcn        qarsgrcn
     C                   z-add     rpgrcn        qarpgrcn
     C                   z-add     fsgrcn        qafsgrcn
     C                   z-add     fpgrcn        qafpgrcn
      *
      * Calculate all averages as the total divided by the record count of records having
      * a value in the appropriate field.
      *
     C                   if        qatosvcn <> 0
     C     qatosv        div(h)    qatosvcn      qaatosv
     C                   endif
      *
     C                   if        qarsgrcn <> 0
     C     qarsgrsv      div(h)    qarsgrcn      qaarsgrsv
     C                   endif
      *
     C                   if        qarpgrcn <> 0
     C     qarpgrhd      div(h)    qarpgrcn      qaarpgrhd
     C                   endif
      *
     C                   if        qafsgrcn <> 0
     C     qafsgrhd      div(h)    qafsgrcn      qaafsgrhd
     C                   endif
      *
     C                   if        qafpgrcn <> 0
     C     qafpgrhd      div(h)    qafpgrcn      qaafpgrhd
     C                   endif
      *
     C                   if        qarfgrcn <> 0
     C     qarfgrhd      div(h)    qarfgrcn      qaarfgrhd
     C                   endif
      *
     C                   if        qatoltcn <> 0
     C     qatolt        div(h)    qatoltcn      qaatolt
     C                   endif
      *
     C                   if        qabahdcn <> 0
     C     qabahd        div(h)    qabahdcn      qaabahd
     C                   endif
      *
     C                   if        qapmhdcn <> 0
     C     qapmhd        div(h)    qapmhdcn      qaapmhd
     C                   endif
      *
      * Call the generic program that does the calculations
      *
     C                   call      'HP8009'
     C                   parm      qarsgrsv      xxrsgrsv
     C                   parm      qarpgrhd      xxrpgrhd
     C                   parm      qafsgrhd      xxfsgrhd
     C                   parm      qafpgrhd      xxfpgrhd
     C                   parm      qarfgrhd      xxrfgrhd
     C                   parm      qatolt        xxtolt
     C                   parm      qabahd        xxbahd
     C                   parm      qapmhd        xxpmhd
     C                   parm      qanrmhd       xxnrmhd
     C                   parm      qanajtihd     xxnajtihd
     C                   parm      qafrmhd       xxfrmhd
     C                   parm      qafajtihd     xxfajtihd
      * Sends back
     C     qaltbahd      parm      0             xxltbahd
     C     qacrpr        parm      0             xxcrpr
     C     qafrpr        parm      0             xxfrpr
     C     qafopr        parm      0             xxfopr
     C     qapmpr        parm      0             xxpmpr
     C     qanrmpr       parm      0             xxnrmpr
     C     qafrmpr       parm      0             xxfrmpr
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------
      * Write a record and reset counters
      *------------------------------------------------------------------
      *
     C     $write        begsr
      *
     C                   write     qarec
     C                   clear                   qarec
      *
     C                   z-add     0             count
     C                   z-add     0             tosvcn
     C                   z-add     0             toltcn
     C                   z-add     0             bahdcn
     C                   z-add     0             pmhdcn
     C                   z-add     0             rfgrcn
     C                   z-add     0             rsgrcn
     C                   z-add     0             rpgrcn
     C                   z-add     0             fsgrcn
     C                   z-add     0             fpgrcn
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------
      * Determine the accounting quarter prior to the system date
      *------------------------------------------------------------------
      *
     C     $quarter      begsr
      *
      * Get the system date into CCYYMMDD format.
      *
     C                   move      *date         wkcymdiso
     C                   move      wkcymdiso     wksysdt
      *
      *
      * Get the system date into the SYNON format of CYYMMDD.
      *
     C                   z-add     wksysdt       wkyymmdd
     C                   if        wksysdt >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmdd
     C                   else
     C                   z-add     wkyymmdd      xxcyymmdd
     C                   endif
      *
      * Call a Synon program to retrieve the accounting year/period associated
      * with the system date.
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm      350           xxcocd
     C                   parm                    xxcyymmdd
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C                   parm      0             xxhpscdyr
     C                   parm      0             xxhpscdwk
      *
      * Call a generic HPS program to assign an accounting quarter to the
      * accounting period just retrieved.
      *
     C                   call      'HP8006'
     C                   parm                    xxacpe
     C                   parm      0             xxacqr
      *
      * You now have the accounting year/quarter associated with the system date.
      * Determine the quarter prior to this 'current' quarter. The prior quarter
      * is the quarter you will be deleting/rebuilding.
      *
     C                   select
     C                   when      xxacqr > 1
     C                   sub       1             xxacqr
     C                   other
     C                   z-add     4             xxacqr
     C                   sub       1             xxacyr
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Delete all existing records for the prior quarter
      *---------------------------------------------------------------
      *
     C     $delete       begsr
      *
     C     key01         setll     hsp100
      *
     C                   dou       *in91 = *on                                  Do deletes
     C     key01         reade     hsp100                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   delete    qarec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do deletes
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    xxacyr
     C                   kfld                    xxacqr
      *
     C     key02         klist
     C                   kfld                    fsfscd
     C                   kfld                    xxacyr
     C                   kfld                    xxacqr
      *
     C     key03         klist
     C                   kfld                    fsfscd
     C                   kfld                    wkppcd
      *
     C                   endsr
      /eject
