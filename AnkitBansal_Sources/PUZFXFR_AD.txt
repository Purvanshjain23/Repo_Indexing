// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUZFXFR
// ?Date: 14.08.2025 Time: 03:51:44
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Auto EDI 846 CmpWIMRT) TYPE(RTVOBJ) FILE(PDJYREP)          AC2214468;
{
 //?USER: Process Data record

 //?If record is active, process it
 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 //?Determine if Auto Inventory Restoration set up for company
 //?  and if it ran today - send email if not
 EXECUTE FUNCTION(RTV WHS Auto EDI846 WIMRT) TYPE(RTVOBJ) FILE(CAADREP)          AC2214469;
 PARAMETER(DB1.Company_Number);
 {
  //?USER: Initialize routine

  // LCL.WHS Auto Inv Rest Cnt USR = CND.Eq Zero
  LCL.WHS_Auto_Inv_Rest_Cnt_USR = *ZERO;

  // LCL.Company Number Alpha = CVTVAR(PAR.Shipping Company)
  LCL.Company_Number_Alpha = CVTVAR(PAR.Shipping_Company);

  // LCL.First Time Through USR = CND.Yes
  LCL.First_Time_Through_USR = 'Y';

  // LCL.Physical Start Date = JOB.*Job date
  LCL.Physical_Start_Date = JOB.*Job_date;

  // LCL.Current Date D8# = LCL.Physical Start Date
  LCL.Current_Date_D8# = LCL.Physical_Start_Date;

  // LCL.BAI04 Adjustment Date = LCL.Current Date D8#
  LCL.BAI04_Adjustment_Date = LCL.Current_Date_D8#;

  //?Initialize for Email Messaging.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
  PARAMETER(PAR.Shipping_Company);
  PARAMETER('EDI846CMP');
  PARAMETER(LCL.Email_Address);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // LCL.Send Email USR = CND.No
  LCL.Send_Email_USR = 'N';

  // LCL.Email Message 2 USR = CON.*BLANK
  LCL.Email_Message_2_USR = *BLANK;

  // LCL.Subject Line USR = CONCAT(CON.EDI 846 INVENTORY RESTORA,CON.TION FOR COMPANY,CON.*ZERO)
  LCL.Subject_Line_USR = 'EDI 846 INVENTORY RESTORA' + 'TION FOR COMPANY' (0);

  // LCL.Subject Line USR = CONCAT(LCL.Subject Line USR,LCL.Company Number Alpha,CON.1)
  LCL.Subject_Line_USR = LCL.Subject_Line_USR + LCL.Company_Number_Alpha (1);

  EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
  PARAMETER('DTALIB');
  PARAMETER(LCL.Library_List_Code);
  PARAMETER(NLL.@Library_List_Code);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.System Value Code is Data File Library
   IF DB1.System_Value_Code = 'DTALIB';

   // PAR.Library List Code = DB1.System Value Alpha
   PAR.Library_List_Code = DB1.System_Value_Alpha;

   // IF DB1.System Value Code is History File Library
   IF DB1.System_Value_Code = 'HISLIB';

   // PAR.@Library List Code = DB1.System Value Alpha
   PAR.@Library_List_Code = DB1.System_Value_Alpha;

   QUIT;

   ENDIF;

  }

  //?If Not PROD Then Append 'TEST' to Subject Line.
  CASE;

  // IF LCL.Library List Code is Not PRKFLIB
  IF LCL.Library_List_Code <> 'PRKFLIB';

  // LCL.Subject Line USR = CONCAT(LCL.Subject Line USR,CON.- TEST,CON.1)
  LCL.Subject_Line_USR = LCL.Subject_Line_USR + '- TEST' (1);

  ENDIF;

  // LCL.Email Msg Line-Posted U = CON.           Posted:
  LCL.Email_Msg_Line_Posted_U = 'Posted:';

  // LCL.Email Msg Line-In Error U = CON.          In Error:
  LCL.Email_Msg_Line_In_Error_U = 'In Error:';

  // LCL.Email Msg Line-Not Rcvd U = CON.Not Received:
  LCL.Email_Msg_Line_Not_Rcvd_U = 'Not Received:';

  // LCL.Email Msg Line-Late/NotPU = CON.                Late:
  LCL.Email_Msg_Line_Late_NotPU = 'Late:';

  ENDIF;

  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv WIM EDI 846 Info  RT) TYPE(RTVOBJ) FILE(PNG0REP)           AC2214471;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER('WHSRST');
  PARAMETER(LCL.EDI_Trading_Partner_No);
  PARAMETER(LCL.EDI_Frequency);
  PARAMETER(LCL.Record_Status);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Warehouse Must Be Active for 'WHSRST' EDI 846.
  CASE;

  // IF LCL.Record Status is Active
  IF LCL.Record_Status = 'A';

  //?First Time Thru Processing to See if Email Should Be Sent or Not.
  CASE;

  // IF LCL.First Time Through USR is Yes
  IF LCL.First_Time_Through_USR = 'Y';

  //?Check EDI Frequency.
  CASE;

  // IF NOT LCL.EDI Frequency is Not Entered
  IF ! LCL.EDI_Frequency = *BLANK;

  //?Send Email If ALL Else Check Day of Week.
  CASE;

  // IF LCL.EDI Frequency is All
  IF LCL.EDI_Frequency = 'ALL';

  // LCL.Send Email USR = CND.Yes
  LCL.Send_Email_USR = 'Y';

  // LCL.First Time Through USR = CND.No
  LCL.First_Time_Through_USR = 'N';

  //?Send Email If ALL Else Check Day of Week.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Set DOW Value from EDI Frequency.
  CASE;

  // IF LCL.EDI Frequency is Monday
  IF LCL.EDI_Frequency = 'MON';

  // PAR.Day of the Week # USR = CND.Monday
  PAR.Day_of_the_Week_#_USR = 1;

  //?Set DOW Value from EDI Frequency.
  // IF LCL.EDI Frequency is Tuesday
  IF LCL.EDI_Frequency = 'TUE';

  // PAR.Day of the Week # USR = CND.Tuesday
  PAR.Day_of_the_Week_#_USR = 2;

  //?Set DOW Value from EDI Frequency.
  // IF LCL.EDI Frequency is Wednesday
  IF LCL.EDI_Frequency = 'WED';

  // PAR.Day of the Week # USR = CND.Wednesday
  PAR.Day_of_the_Week_#_USR = 3;

  //?Set DOW Value from EDI Frequency.
  // IF LCL.EDI Frequency is Thurdsday
  IF LCL.EDI_Frequency = 'THU';

  // PAR.Day of the Week # USR = CND.Thursday
  PAR.Day_of_the_Week_#_USR = 4;

  //?Set DOW Value from EDI Frequency.
  // IF LCL.EDI Frequency is Friday
  IF LCL.EDI_Frequency = 'FRI';

  // PAR.Day of the Week # USR = CND.Friday
  PAR.Day_of_the_Week_#_USR = 5;

  //?Set DOW Value from EDI Frequency.
  // IF LCL.EDI Frequency is Saturday
  IF LCL.EDI_Frequency = 'SAT';

  // PAR.Day of the Week # USR = CND.Saturday
  PAR.Day_of_the_Week_#_USR = 6;

  //?Set DOW Value from EDI Frequency.
  // IF LCL.EDI Frequency is Sunday
  IF LCL.EDI_Frequency = 'SUN';

  // PAR.Day of the Week # USR = CND.Sunday
  PAR.Day_of_the_Week_#_USR = 7;

  ENDIF;

  // LCL.Day of the Week # USR = JOB.*Job date *DAY OF WEEK
  LCL.Day_of_the_Week_#_USR = DATEDTLS(JOB.*Job_date 'DW' 1111111 'NONE' 'N' 1);

  //?If DOW from Job Date & from EDI Frequency Match Then Send Email.
  CASE;

  // IF LCL.Day of the Week # USR EQ PAR.Day of the Week # USR
  IF LCL.Day_of_the_Week_#_USR = PAR.Day_of_the_Week_#_USR;

  // LCL.Send Email USR = CND.Yes
  LCL.Send_Email_USR = 'Y';

  // LCL.First Time Through USR = CND.No
  LCL.First_Time_Through_USR = 'N';

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  EXECUTE FUNCTION(Rtv Auto Inv Rest Cmp  RT) TYPE(RTVOBJ) FILE(OMHCCPP)          AC2094281;
  PARAMETER(DB1.Shipping_Company);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.Physical_Start_Date);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   // PGM.*Return code = CND.*Record already exists
   PGM.*Return_code = 'Y2U0003';

  }

  //?Physical Count Control Exist?
  CASE;

  // IF PGM.*Return code is *Record already exists
  IF PGM.*Return_code = 'Y2U0003';

  //?Check Warehouse Code was Posted to the correct transaction set.
  // LCL.Warehouse Match USR = CND.No
  LCL.Warehouse_Match_USR = 'N';

  EXECUTE FUNCTION(Val WHS Auto EDI846 WIMRT) TYPE(RTVOBJ) FILE(ECP780)           AC2214470;
  PARAMETER(LCL.BAI04_Adjustment_Date);
  PARAMETER(LCL.EDI_Trading_Partner_No);
  PARAMETER(LCL.EDI_Record_Processed);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.Warehouse_Match_USR);
  {
   //?USER: Initialize routine

   // PAR.EDI-Record Processed = CND.Not Processed-blank
   PAR.EDI_Record_Processed = *BLANK;

   // PAR.Warehouse Match USR = CND.No
   PAR.Warehouse_Match_USR = 'N';

   //?USER: Process Data record

   EXECUTE FUNCTION(Val WHS Auto EDI846 WIMRT) TYPE(RTVOBJ) FILE(ECP782)           AC2214472;
   PARAMETER(DB1.EDI_SURROGATE_NUMBER);
   PARAMETER('WH');
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Warehouse_Match_USR);
   {
    //?USER: Initialize routine

    // PAR.Warehouse Match USR = CND.No
    PAR.Warehouse_Match_USR = 'N';

    //?USER: Process Data record

    // PAR.Warehouse Match USR = CND.Yes
    PAR.Warehouse_Match_USR = 'Y';

   }

   CASE;

   // IF PAR.Warehouse Match USR is Yes
   IF PAR.Warehouse_Match_USR = 'Y';

   // PAR.EDI-Record Processed = DB1.EDI-Record Processed
   PAR.EDI_Record_Processed = DB1.EDI_Record_Processed;

   QUIT;

   ENDIF;

  }

  //?Warehouse Code Matched?
  CASE;

  // IF LCL.Warehouse Match USR is Yes
  IF LCL.Warehouse_Match_USR = 'Y';

  //?Append Warehouse to Email Message Group.
  CASE;

  // IF LCL.EDI-Record Processed is Processed
  IF LCL.EDI_Record_Processed = 'Y';

  //?Add to 'Posted' Email Message Line.
  // LCL.Email Msg Line-Posted U = CONCAT(LCL.Email Msg Line-Posted U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Posted_U = LCL.Email_Msg_Line_Posted_U + DB1.Warehouse_Code (1);

  //?Append Warehouse to Email Message Group.
  // IF LCL.EDI-Record Processed is Error
  IF LCL.EDI_Record_Processed = 'E';

  //?Add to 'In Error' Email Message Line.
  // LCL.Email Msg Line-In Error U = CONCAT(LCL.Email Msg Line-In Error U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_In_Error_U = LCL.Email_Msg_Line_In_Error_U + DB1.Warehouse_Code (1);

  //?Append Warehouse to Email Message Group.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Add to 'Late/Not Posted' Email Message Line.
  // LCL.Email Msg Line-Late/NotPU = CONCAT(LCL.Email Msg Line-Late/NotPU,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Late_NotPU = LCL.Email_Msg_Line_Late_NotPU + DB1.Warehouse_Code (1);

  ENDIF;

  //?Warehouse Code Matched?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Warehouse Code Not Matched, Add to 'In Error' Email Message Line.
  // LCL.Email Msg Line-In Error U = CONCAT(LCL.Email Msg Line-In Error U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_In_Error_U = LCL.Email_Msg_Line_In_Error_U + DB1.Warehouse_Code (1);

  ENDIF;

  //?Physical Count Control Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Not Exist, Add to 'Not Received' Email Msg Line.
  // LCL.Email Msg Line-Not Rcvd U = CONCAT(LCL.Email Msg Line-Not Rcvd U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Not_Rcvd_U = LCL.Email_Msg_Line_Not_Rcvd_U + DB1.Warehouse_Code (1);

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  //?Send Email?
  CASE;

  // IF LCL.Send Email USR is Yes
  IF LCL.Send_Email_USR = 'Y';

  //?Format Email Message Body.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Force New Line USR = CND.No
  LCL.Force_New_Line_USR = 'N';

  //?Posted Transactions Exist?
  CASE;

  // IF LCL.Email Msg Line-Posted U is            Posted:
  IF LCL.Email_Msg_Line_Posted_U = '           Posted:';

  //?No Warehouse recorded.
  //?Posted Transactions Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = LCL.Email Msg Line-Posted U
  LCL.Email_Message_2_USR = LCL.Email_Msg_Line_Posted_U;

  // LCL.Force New Line USR = CND.Yes
  LCL.Force_New_Line_USR = 'Y';

  ENDIF;

  //?In Error Transactions Exist?
  CASE;

  // IF LCL.Email Msg Line-In Error U is           In Error:
  IF LCL.Email_Msg_Line_In_Error_U = '          In Error:';

  //?No Warehouse recorded.
  //?In Error Transactions Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line?
  CASE;

  // IF LCL.Force New Line USR is Yes
  IF LCL.Force_New_Line_USR = 'Y';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Email Msg Line-In Error U,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Email_Msg_Line_In_Error_U (1);

  //?Force New Line?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = LCL.Email Msg Line-In Error U
  LCL.Email_Message_2_USR = LCL.Email_Msg_Line_In_Error_U;

  ENDIF;

  // LCL.Force New Line USR = CND.Yes
  LCL.Force_New_Line_USR = 'Y';

  ENDIF;

  //?Not Received Transactions Exist?
  CASE;

  // IF LCL.Email Msg Line-Not Rcvd U is Not Received:
  IF LCL.Email_Msg_Line_Not_Rcvd_U = 'Not Received:';

  //?No Warehouse recorded.
  //?Not Received Transactions Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line?
  CASE;

  // IF LCL.Force New Line USR is Yes
  IF LCL.Force_New_Line_USR = 'Y';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Email Msg Line-Not Rcvd U,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Email_Msg_Line_Not_Rcvd_U (1);

  //?Force New Line?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = LCL.Email Msg Line-Not Rcvd U
  LCL.Email_Message_2_USR = LCL.Email_Msg_Line_Not_Rcvd_U;

  ENDIF;

  // LCL.Force New Line USR = CND.Yes
  LCL.Force_New_Line_USR = 'Y';

  ENDIF;

  //?Late Transactions Exist?
  CASE;

  // IF LCL.Email Msg Line-Late/NotPU is                 Late:
  IF LCL.Email_Msg_Line_Late_NotPU = '                Late:';

  //?No Warehouse recorded.
  //?Late Transactions Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line?
  CASE;

  // IF LCL.Force New Line USR is Yes
  IF LCL.Force_New_Line_USR = 'Y';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Email Msg Line-Late/NotPU,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Email_Msg_Line_Late_NotPU (1);

  //?Force New Line?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = LCL.Email Msg Line-Late/NotPU
  LCL.Email_Message_2_USR = LCL.Email_Msg_Line_Late_NotPU;

  ENDIF;

  ENDIF;

  ENDIF;

  // Call program Exc ESNDMAIL Generic2 CL.
  CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
  PARAMETER(LCL.Email_Address);
  PARAMETER(LCL.Subject_Line_USR);
  PARAMETER(LCL.Email_Message_2_USR);

  ENDIF;

 }

 ENDIF;

}


