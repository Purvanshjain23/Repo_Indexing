     H/TITLE Prt Aged Invent-N/Alc PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 05/26/20  Time  : 11:38:39
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAB0REL1IF  E           K        DISK
      * RTV : Item Balance              Retrieval index       NV
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FPDILREL0IF  E           K        DISK
      * RTV : Item Level                Retrieval index
      *
     FCAAIREL1IF  E           K        DISK
      * RTV : Quality Level             Retrieval index       NV
      *
     FPDKKREL1IF  E           K        DISK
      * RTV : Availability Group        Retrieval index
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FCAB1RELAIF  E           K        DISK
      * RSQ : Item Balance Detail       Co/Item/Whse/Prod Date(D
      *
     FPDL5CPL1IF  E           K        DISK
      * RTV : Item Lot Location         Retrieval index
      *
     FPOB5CPL4IF  E           K        DISK
      * RSQ : Order Detail Sched-Inv    Co/Itm/Whs/PDte(d)/Ord
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPDKLREL1IF  E           K        DISK
      * RTV : Company Item Avail Group  Retrieval index
      *
     FPBALPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Aged Invent-N/Alc PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
     E                    YDOW        7  1               *Days of week
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WAAJCD
     I              ADF8NA                          WAF8NA
     I              ADACNA                          WAACNA
     I              ADADNA                          WAADNA
     I              ADAENA                          WAAENA
     I              ADAJNA                          WAAJNA
     I              ADBTTX                          WABTTX
     I              ADAOCD                          WAAOCD
     I              ADBGCD                          WABGCD
     I              ADVHST                          WAVHST
     I              ADMPNA                          WAMPNA
     I              ADWPST                          WAWPST
     I              ADXUST                          WAXUST
     I              ADT0ST                          WAT0ST
     I              ADT1ST                          WAT1ST
     I              ADDBNB                          WADBNB
     I              ADT2ST                          WAT2ST
     I              ADT3ST                          WAT3ST
     I              ADT4ST                          WAT4ST
     I              ADT6ST                          WAT6ST
     I              ADBWC3                          WABWC3
     I              ADBTC3                          WABTC3
     I              ADBUC3                          WABUC3
     I              ADBVC3                          WABVC3
     I              ADFCAA                          WAFCAA
     I              ADRQSX                          WARQSX
     I              ADRRSX                          WARRSX
     I              ADRSSX                          WARSSX
     I              ADRTSX                          WARTSX
     I              ADT7ST                          WAT7ST
     I              ADT8ST                          WAT8ST
     I              ADRNSX                          WARNSX
     I              ADROSX                          WAROSX
     I              ADRPSX                          WARPSX
     I              ADUVST                          WAUVST
     I              ADUWST                          WAUWST
     I              ADUXST                          WAUXST
     I              ADVSST                          WAVSST
     I              ADAATM                          WAAATM
     I              ADAYNA                          WAAYNA
     I              ADA0NA                          WAA0NA
     I              ADAXDT                          WAAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Item Balance
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Item Code
     I                                    P   3   60P1HGCD
      * I :  Warehouse Code
     I                                        7   9 P1AJCD
      * I :  Item Structure Class Code
     I                                    P  10  110P1RINB
      * I :  Item Structure Group Code
     I                                    P  12  130P1RHNB
      * I :  Item Structure Type Code
     I                                    P  14  150P1RGNB
     IP2PARM      DS
      * FLD: *Arrays
      * I :  Item Type Code
     I                                        1   3 P2N0CD
      * I :  Prt Non-Zero Qty Only USR
     I                                        4   4 P2ZYST
      * I :  Item Level
     I                                        5   6 P2RBCD
      * I :  Quality Level
     I                                        7   8 P2HICD
      * I :  Include Todays Trans
     I                                        9   9 P2KOST
     IP3PARM      DS
      * N :  USR Display 1
     I                                        1   1 P3TIST
     IP4PARM      DS
      * FLD: Company Item
      * N :  Production Date Control
     I                                        1   1 P4FZST
     IP5PARM      DS
      * FLD: *Arrays
      * N :  USR Day 1
     I                                    P   1   40P5FFDT
      * N :  USR Day 2
     I                                    P   5   80P5E1DT
      * N :  USR Day 3
     I                                    P   9  120P5E2DT
      * N :  USR Day 4
     I                                    P  13  160P5E3DT
      * N :  USR Day 5
     I                                    P  17  200P5E4DT
      * N :  USR Day 6
     I                                    P  21  240P5E5DT
      * N :  USR Day 7
     I                                    P  25  280P5E6DT
      * N :  USR Day 8
     I                                    P  29  320P5FKDT
      * N :  Quantity Age Day 1   USR
     I                                    P  33  382P5H5QT
      * N :  Quantity Age Day 2   USR
     I                                    P  39  442P5H6QT
      * N :  Quantity Age Day 3   USR
     I                                    P  45  502P5H7QT
      * N :  Quantity Age Day 4   USR
     I                                    P  51  562P5H8QT
      * N :  Quantity Age Day 5   USR
     I                                    P  57  622P5H9QT
      * N :  Quantity Age Day 6   USR
     I                                    P  63  682P5IAQT
      * N :  Quantity Age Day 7   USR
     I                                    P  69  742P5IBQT
      * N :  Quantity Age Day 8   USR
     I                                    P  75  802P5ICQT
      * N :  Quantity On Hand   USR
     I                                    P  81  872P5U9VA
      * N :  Quantity on Hold     USR
     I                                    P  88  932P5L3QT
     IP6PARM      DS
      * N :  Quantity on Hand - U/M1
     I                                    P   1   62P6ARQT
     IP7PARM      DS
      * FLD: Warehouse
      * N :  Lot Tracking Flag
     I                                        1   1 P7VHST
     IP8PARM      DS
      * I :  Ageing Days Usr
     I                                    P   1   30P8B7DY
     IP9PARM      DS
      * I :  Availability Group Code
     I                                        1   3 P9V4CD
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1HGCD    PARM           WP0002  70       Item Code
     C           P1AJCD    PARM           WP0003  3        Warehouse Code
     C           P1RINB    PARM           WP0004  30       Item Structure
     C           P1RHNB    PARM           WP0005  30       Item Structure
     C           P1RGNB    PARM           WP0006  30       Item Structure
     C           P2N0CD    PARM           WP0007  3        Item Type Code
     C           P2ZYST    PARM           WP0008  1        Prt Non-Zero Qt
     C           P2RBCD    PARM           WP0009  2        Item Level
     C           P2HICD    PARM           WP0010  2        Quality Level
     C           P2KOST    PARM           WP0011  1        Include Todays
     C           P8B7DY    PARM           WP0012  50       Ageing Days Usr
     C           P9V4CD    PARM           WP0013  3        Availability Gr
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Aged Invent-N/Alc PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$HENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Aged Invent-N/Alc PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@B0REJX                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
      * USER: Null report processing
      * CLC Set for Null Rpt   US - /UT User Source  * 
     C                     MOVEL'Y'       W0AP1P
     C                     MOVEL'Y'       W0NEWP
     C                     MOVEL'Y'       P3TIST           USR Display 1
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     MOVEL*BLANK    $BZYST           Prt Non-Zero Qt
     C                     MOVEL*BLANK    $BHMTX           Condition Desc.
     C                     MOVEL*BLANK    $BKOST           Include Todays
     C                     MOVEL*BLANK    $BHNTX           Condition Desc.
     C                     Z-ADD*ZERO     $BB7DY           Ageing Days Usr
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     MOVEL*BLANK    $BAJCD           Warehouse Code
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     $BHGCD           Item Code
     C                     MOVEL*BLANK    $BGENA           Item Descriptio
     C                     MOVEL*BLANK    $BN0CD           Item Type Code
     C                     MOVEL*BLANK    $BHLTX           Condition Desc.
     C                     MOVEL*BLANK    $BRBCD           Item Level
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     MOVEL*BLANK    $BHICD           Quality Level
     C                     MOVEL*BLANK    $BDL01           Description. .
     C                     MOVEL*BLANK    $BV4CD           Availability Gr
     C                     MOVEL*BLANK    $BNVNA           Availability Gr
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     Z-ADD*ZERO     $BRHNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     Z-ADD*ZERO     $BRINB           Item Structure
     C                     MOVEL*BLANK    $BDETX           Item Structure
      * Load related totals format
     C                     Z-ADD*ZERO     $GBKQT           Quantity Total
     C                     Z-ADD*ZERO     $GARQT           Quantity on Han
     C                     Z-ADD*ZERO     $GH5QT           Quantity Age Da
     C                     Z-ADD*ZERO     $GH6QT           Quantity Age Da
     C                     Z-ADD*ZERO     $GH7QT           Quantity Age Da
     C                     Z-ADD*ZERO     $GH8QT           Quantity Age Da
     C                     Z-ADD*ZERO     $GH9QT           Quantity Age Da
     C                     Z-ADD*ZERO     $GIAQT           Quantity Age Da
     C                     Z-ADD*ZERO     $GIBQT           Quantity Age Da
     C                     Z-ADD*ZERO     $GICQT           Quantity Age Da
     C                     Z-ADD*ZERO     $GG3NX           Quantity on Hol
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB0AIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CADTX           Name
     C                     MOVEL*BLANK    $CEKT1           Age Heading 1 U
     C                     MOVEL*BLANK    $CELT1           Age Heading 2 U
     C                     MOVEL*BLANK    $CEMT1           Age Heading 3 U
     C                     MOVEL*BLANK    $CENT1           Age Heading 4 U
     C                     MOVEL*BLANK    $CEOT1           Age Heading 5 U
     C                     MOVEL*BLANK    $CEPT1           Age Heading 6 U
     C                     MOVEL*BLANK    $CEQT1           Age Heading 7 U
     C                     MOVEL*BLANK    $CERT1           Age Heading 8 U
     C                     Z-ADD*ZERO     $CJFDT           Date To
     C                     Z-ADD*ZERO     $CFFDT           USR Day 1
     C                     Z-ADD*ZERO     $CE1DT           USR Day 2
     C                     Z-ADD*ZERO     $CE2DT           USR Day 3
     C                     Z-ADD*ZERO     $CE3DT           USR Day 4
     C                     Z-ADD*ZERO     $CE4DT           USR Day 5
     C                     Z-ADD*ZERO     $CE5DT           USR Day 6
     C                     Z-ADD*ZERO     $CE6DT           USR Day 7
     C                     Z-ADD*ZERO     $CFKDT           USR Day 8
      * Load related totals format
     C                     MOVEL*BLANK    $FTIST           USR Display 1
     C                     Z-ADD*ZERO     $FJAQT           Combos Total Qu
     C                     Z-ADD*ZERO     $FJBQT           Combos After Da
     C                     Z-ADD*ZERO     $FJCQT           Combos Day 1 Qu
     C                     Z-ADD*ZERO     $FJDQT           Combos Day 2 Qu
     C                     Z-ADD*ZERO     $FJEQT           Combos Day 3 Qu
     C                     Z-ADD*ZERO     $FJFQT           Combos Day 4 Qu
     C                     Z-ADD*ZERO     $FJGQT           Combos Day 5 Qu
     C                     Z-ADD*ZERO     $FJHQT           Combos Day 6 Qu
     C                     Z-ADD*ZERO     $FJIQT           Combos Day 7 Qu
     C                     Z-ADD*ZERO     $FJJQT           Combos Over Dat
     C                     Z-ADD*ZERO     $FL4QT           Combos on Hold
     C                     MOVEL*BLANK    $FTJST           USR Display 2
     C                     Z-ADD*ZERO     $FI0QT           Boxes Total Qua
     C                     Z-ADD*ZERO     $FI1QT           Boxes After Dat
     C                     Z-ADD*ZERO     $FI2QT           Boxes Day 1 Qua
     C                     Z-ADD*ZERO     $FI3QT           Boxes Day 2 Qua
     C                     Z-ADD*ZERO     $FI4QT           Boxes Day 3 Qua
     C                     Z-ADD*ZERO     $FI5QT           Boxes Day 4 Qua
     C                     Z-ADD*ZERO     $FI6QT           Boxes Day 5 Qua
     C                     Z-ADD*ZERO     $FI7QT           Boxes Day 6 Qua
     C                     Z-ADD*ZERO     $FI8QT           Boxes Day 7 Qua
     C                     Z-ADD*ZERO     $FI9QT           Boxes Over Date
     C                     Z-ADD*ZERO     $FL5QT           Boxes on Hold
     C                     MOVEL*BLANK    $FASTS           USR Display 3
     C                     Z-ADD*ZERO     $FJKQT           Other Total Qua
     C                     Z-ADD*ZERO     $FJLQT           Other After Dat
     C                     Z-ADD*ZERO     $FJMQT           Other Day 1 Qua
     C                     Z-ADD*ZERO     $FJNQT           Other Day 2 Qua
     C                     Z-ADD*ZERO     $FJOQT           Other Day 3 Qua
     C                     Z-ADD*ZERO     $FJPQT           Other Day 4 Qua
     C                     Z-ADD*ZERO     $FJQQT           Other Day 5 Qua
     C                     Z-ADD*ZERO     $FJRQT           Other Day 6 Qua
     C                     Z-ADD*ZERO     $FJSQT           Other Day 7 Qua
     C                     Z-ADD*ZERO     $FJTQT           Other Over Date
     C                     Z-ADD*ZERO     $FL6QT           Other on Hold
     C                     Z-ADDB0AIC3    $FAIC3           Company Number
     C                     Z-ADD*ZERO     $FBKQT           Quantity Total
     C                     Z-ADD*ZERO     $FARQT           Quantity on Han
     C                     Z-ADD*ZERO     $FH5QT           Quantity Age Da
     C                     Z-ADD*ZERO     $FH6QT           Quantity Age Da
     C                     Z-ADD*ZERO     $FH7QT           Quantity Age Da
     C                     Z-ADD*ZERO     $FH8QT           Quantity Age Da
     C                     Z-ADD*ZERO     $FH9QT           Quantity Age Da
     C                     Z-ADD*ZERO     $FIAQT           Quantity Age Da
     C                     Z-ADD*ZERO     $FIBQT           Quantity Age Da
     C                     Z-ADD*ZERO     $FICQT           Quantity Age Da
     C                     Z-ADD*ZERO     $FG3NX           Quantity on Hol
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDB0AIC3    $EAIC3           Company Number
     C                     Z-ADDB0HGCD    $EHGCD           Item Code
     C                     MOVEL*BLANK    $ES5TX           Item Descriptio
     C                     Z-ADD*ZERO     $EBKQT           Quantity Total
     C                     Z-ADD*ZERO     $EARQT           Quantity on Han
     C                     Z-ADD*ZERO     $EH5QT           Quantity Age Da
     C                     Z-ADD*ZERO     $EH6QT           Quantity Age Da
     C                     Z-ADD*ZERO     $EH7QT           Quantity Age Da
     C                     Z-ADD*ZERO     $EH8QT           Quantity Age Da
     C                     Z-ADD*ZERO     $EH9QT           Quantity Age Da
     C                     Z-ADD*ZERO     $EIAQT           Quantity Age Da
     C                     Z-ADD*ZERO     $EIBQT           Quantity Age Da
     C                     Z-ADD*ZERO     $EICQT           Quantity Age Da
     C                     Z-ADD*ZERO     $EG3NX           Quantity on Hol
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDB0AIC3    $DAIC3           Company Number
     C                     Z-ADDB0HGCD    $DHGCD           Item Code
     C                     MOVELB0AJCD    $DAJCD           Warehouse Code
     C                     Z-ADDB0AGCS    $DAGCS           Unit Cost Per P
     C                     Z-ADDB0DDQT    $DDDQT           On Hand U/M1 Su
     C                     Z-ADDB0BACS    $DBACS           Cost per Primar
     C                     Z-ADDB0BBCS    $DBBCS           Cost per Pricin
     C                     Z-ADDB0CBPR    $DCBPR           Revaluation Cos
     C                     Z-ADDB0GUDT    $DGUDT           Revaluation Eff
     C                     MOVELB0XYST    $DXYST           Revaluation Cos
     C                     Z-ADDB0CTPR    $DCTPR           Last Revaluatio
     C                     Z-ADDB0G4DT    $DG4DT           Last Revaluatio
     C                     Z-ADDB0BOWG    $DBOWG           On Hand Weight
     C                     Z-ADDB0DEQT    $DDEQT           On Hand U/M2 Su
     C                     Z-ADDB0DFQT    $DDFQT           On Hand U/M3 Su
     C                     Z-ADDB0HDQT    $DHDQT           Quantity In Chi
     C                     Z-ADDB0HEQT    $DHEQT           Weight In Chill
     C                     Z-ADDB0EMQT    $DEMQT           Quantity on Tra
     C                     Z-ADDB0DOQT    $DDOQT           Quantity Avail.
     C                     Z-ADDB0IDVA    $DIDVA           Value of On Han
     C                     MOVELB0JVST    $DJVST           Inventory Plann
     C                     Z-ADDB0BZPC    $DBZPC           Safety Allowanc
     C                     Z-ADDB0DGQT    $DDGQT           Safety Allowanc
     C                     Z-ADDB0DIDT    $DDIDT           Stock Out Date
     C                     MOVELB0ALCD    $DALCD           Buyer Code
     C                     Z-ADDB0BFDY    $DBFDY           Lead Time - Las
     C                     Z-ADDB0DJDT    $DDJDT           Lead Time - Dat
     C                     Z-ADDB0BGDY    $DBGDY           Lead Time - Nex
     C                     Z-ADDB0DKDT    $DDKDT           Lead Time - Dat
     C                     MOVELB0J2ST    $DJ2ST           Lead Time - Exc
     C                     Z-ADDB0DJQT    $DDJQT           Usage Qty per C
     C                     Z-ADDB0BNWG    $DBNWG           Usage Weight pe
     C                     Z-ADDB0DLDT    $DDLDT           Inventory Manag
     C                     Z-ADDB0DPQT    $DDPQT           Minimum Quantit
     C                     Z-ADDB0DQQT    $DDQQT           Maximum Quantit
     C                     Z-ADDB0DMDT    $DDMDT           Last Physical C
     C                     MOVELB0M0ST    $DM0ST           Requisition Mod
     C                     MOVELB0J9ST    $DJ9ST           Cost Update Pen
     C                     MOVELB0KBST    $DKBST           Post G/L Status
     C                     Z-ADDB0AKC8    $DAKC8           Vendor - Item/W
     C                     Z-ADDB0RINB    $DRINB           Item Structure
     C                     Z-ADDB0RHNB    $DRHNB           Item Structure
     C                     Z-ADDB0RGNB    $DRGNB           Item Structure
     C                     MOVELB0UVST    $DUVST           EDI Status 1
     C                     MOVELB0UWST    $DUWST           EDI Status 2
     C                     MOVELB0UXST    $DUXST           EDI Status 3
     C                     MOVELB0VSST    $DVSST           Record Status
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B0AIC3    WZA001           Company Number
     C                     Z-ADDB0AIC3    WZA001
     C           *LIKE     DEFN B0HGCD    WZA002           Item Code
     C                     Z-ADDB0HGCD    WZA002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @B0REJX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Rtv ItmTyp/ItmLv/QltLv RT - Item  * 
     C                     EXSR SSRVGN
      * Select item type code if entered
      * CASE: PAR.Item Type Code is Blank
     C           P2N0CD    IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Item Type Code NE WRK.Item Type Code
     C           P2N0CD    IFNE WUN0CD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Select item level if entered
      * CASE: PAR.Item Level is Entered
     C           P2RBCD    IFNE *BLANK                     *IF
      * CASE: PAR.Item Level NE WRK.Item Level
     C           P2RBCD    IFNE WURBCD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Select quality level if entered
      * CASE: PAR.Quality Level is Entered
     C           P2HICD    IFNE *BLANK                     *IF
      * CASE: PAR.Quality Level NE WRK.Quality Level
     C           P2HICD    IFNE WUHICD                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Sel Avail Group
      * CASE: PAR.Availability Group Code is NE Blank
     C           P9V4CD    IFNE *BLANK                     *IF
      * Val Existance         RT - Company Item Avail Group  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0012           Company Number
     C                     Z-ADDB0HGCD    WL0013           Item Code
     C                     MOVELP9V4CD    WL0014    P      Availability Gr
     C                     EXSR STRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0015    YL0031    P      Record Found US
      * CASE: LCL.Record Found USR is Record Found
     C           YL0031    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Below was never installed -- so i'm commenting it out RMC 5/8/15
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           B0AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           B0HGCD    IFNE WZA002                     Item Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Code format
      * Rtv Descriptions      RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$EAIC3    WL0003           Company Number
     C                     Z-ADD$EHGCD    WL0004           Item Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0005    $ES5TX    P      Description Lin
     C                     MOVELWL0006    WUAWNA    P      Description Lin
     C                     MOVELWL0007    WUADCD    P      U/M - Primary
     C                     MOVELWL0008    WUAECD    P      U/M - Second
     C                     MOVELWL0009    WUAFCD    P      U/M - Third
      * For Item Age Inventory History
     C                     MOVEL*BLANK    YL0032           Item Descriptio
     C                     MOVEL$ES5TX    YL0032           Item Descriptio
      * CASE:
      *  - c1ANDc2ANDc3ANDc4ANDc5ANDc6ANDc7ANDc8ANDc9
      *   |- c1    : LCL.Prt Non-Zero Qty Only USR is yes
      *   |- c2    : CUR.Quantity Age Day 1   USR is Equal to zero
      *   |- c3    : CUR.Quantity Age Day 2   USR is Equal to zero
      *   |- c4    : CUR.Quantity Age Day 3   USR is Equal to zero
      *   |- c5    : CUR.Quantity Age Day 4   USR is Equal to zero
      *   |- c6    : CUR.Quantity Age Day 5   USR is Equal to zero
      *   |- c7    : CUR.Quantity Age Day 6   USR is Equal to zero
      *   |- c8    : CUR.Quantity Age Day 7   USR is Equal to zero
      *   |- c9    : CUR.Quantity Age Day 8   USR is Equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFEQ 'Y'                        *IF
     C           $EH5QT    IFEQ *ZERO                      *IF
     C           $EH6QT    IFEQ *ZERO                      *IF
     C           $EH7QT    IFEQ *ZERO                      *IF
     C           $EH8QT    IFEQ *ZERO                      *IF
     C           $EH9QT    IFEQ *ZERO                      *IF
     C           $EIAQT    IFEQ *ZERO                      *IF
     C           $EIBQT    IFEQ *ZERO                      *IF
     C           $EICQT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of Item Code format
     C                     ADD  $EBKQT    $FBKQT           Quantity Total
     C                     ADD  $EARQT    $FARQT           Quantity on Han
     C                     ADD  $EH5QT    $FH5QT           Quantity Age Da
     C                     ADD  $EH6QT    $FH6QT           Quantity Age Da
     C                     ADD  $EH7QT    $FH7QT           Quantity Age Da
     C                     ADD  $EH8QT    $FH8QT           Quantity Age Da
     C                     ADD  $EH9QT    $FH9QT           Quantity Age Da
     C                     ADD  $EIAQT    $FIAQT           Quantity Age Da
     C                     ADD  $EIBQT    $FIBQT           Quantity Age Da
     C                     ADD  $EICQT    $FICQT           Quantity Age Da
     C                     ADD  $EG3NX    $FG3NX           Quantity on Hol
      * Add quantities into appropiate totals depending on U/M
      * CASE: WRK.U/M - Primary is Combos
     C           WUADCD    IFEQ 'CB'                       *IF
     C                     ADD  $EBKQT    $FJAQT           Combos Total Qu
     C                     ADD  $EARQT    $FJBQT           Combos After Da
     C                     ADD  $EH5QT    $FJCQT           Combos Day 1 Qu
     C                     ADD  $EH6QT    $FJDQT           Combos Day 2 Qu
     C                     ADD  $EH7QT    $FJEQT           Combos Day 3 Qu
     C                     ADD  $EH8QT    $FJFQT           Combos Day 4 Qu
     C                     ADD  $EH9QT    $FJGQT           Combos Day 5 Qu
     C                     ADD  $EIAQT    $FJHQT           Combos Day 6 Qu
     C                     ADD  $EIBQT    $FJIQT           Combos Day 7 Qu
     C                     ADD  $EICQT    $FJJQT           Combos Over Dat
     C                     ADD  $EG3NX    $FL4QT           Combos on Hold
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: WRK.U/M - Primary is EQ Boxes
     C           WUADCD    IFEQ 'BX'                       *IF
     C                     ADD  $EBKQT    $FI0QT           Boxes Total Qua
     C                     ADD  $EARQT    $FI1QT           Boxes After Dat
     C                     ADD  $EH5QT    $FI2QT           Boxes Day 1 Qua
     C                     ADD  $EH6QT    $FI3QT           Boxes Day 2 Qua
     C                     ADD  $EH7QT    $FI4QT           Boxes Day 3 Qua
     C                     ADD  $EH8QT    $FI5QT           Boxes Day 4 Qua
     C                     ADD  $EH9QT    $FI6QT           Boxes Day 5 Qua
     C                     ADD  $EIAQT    $FI7QT           Boxes Day 6 Qua
     C                     ADD  $EIBQT    $FI8QT           Boxes Day 7 Qua
     C                     ADD  $EICQT    $FI9QT           Boxes Over Date
     C                     ADD  $EG3NX    $FL5QT           Boxes on Hold
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  $EBKQT    $FJKQT           Other Total Qua
     C                     ADD  $EARQT    $FJLQT           Other After Dat
     C                     ADD  $EH5QT    $FJMQT           Other Day 1 Qua
     C                     ADD  $EH6QT    $FJNQT           Other Day 2 Qua
     C                     ADD  $EH7QT    $FJOQT           Other Day 3 Qua
     C                     ADD  $EH8QT    $FJPQT           Other Day 4 Qua
     C                     ADD  $EH9QT    $FJQQT           Other Day 5 Qua
     C                     ADD  $EIAQT    $FJRQT           Other Day 6 Qua
     C                     ADD  $EIBQT    $FJSQT           Other Day 7 Qua
     C                     ADD  $EICQT    $FJTQT           Other Over Date
     C                     ADD  $EG3NX    $FL6QT           Other on Hold
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * USER: Process before print of Company Number - 3 format
      * CASE: CUR.Combos Total Quantity is Equal to zero
     C           $FJAQT    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       WUQKST           Display Flag
     C                     END                             *FI
      * CASE: CUR.Boxes Total Quantity is Equal to zero
     C           $FI0QT    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    WUNGST           Flag 2
     C                     MOVEL'*NO'     WUNGST           Flag 2
     C                     END                             *FI
      * CASE: CUR.Other Total Quantity is Equal to zero
     C           $FJKQT    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    WUFLG3           Flag 3
     C                     MOVEL'*NO'     WUFLG3           Flag 3
     C                     END                             *FI
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 8
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $FAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$FAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VFAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFAIC3           CD3 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           WUQKST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           WUNGST    IFEQ '*NO'                      *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           WUFLG3    IFEQ '*NO'                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
      * Print format
     C                     WRITE$FKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
      * USER: Process after print of Company Number - 3 format
     C                     ADD  $FBKQT    $GBKQT           Quantity Total
     C                     ADD  $FARQT    $GARQT           Quantity on Han
     C                     ADD  $FH5QT    $GH5QT           Quantity Age Da
     C                     ADD  $FH6QT    $GH6QT           Quantity Age Da
     C                     ADD  $FH7QT    $GH7QT           Quantity Age Da
     C                     ADD  $FH8QT    $GH8QT           Quantity Age Da
     C                     ADD  $FH9QT    $GH9QT           Quantity Age Da
     C                     ADD  $FIAQT    $GIAQT           Quantity Age Da
     C                     ADD  $FIBQT    $GIBQT           Quantity Age Da
     C                     ADD  $FICQT    $GICQT           Quantity Age Da
     C                     ADD  $FG3NX    $GG3NX           Quantity on Hol
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$GFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Aged Invent-N/Alc PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Aged Invent-N/Alc PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     Z-ADDP1AIC3    $BAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $BADTX    P      Name
     C                     MOVELP1AJCD    $BAJCD           Warehouse Code
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SDRVGN
     C                     Z-ADDP1HGCD    $BHGCD           Item Code
      * If company is selected, rtv co/item else rtv item
      * CASE: PAR.Accounting Company Number is not equal to zero
     C           P1AIC3    IFNE *ZERO                      *IF
      * Rtv Descriptions      RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0003           Company Number
     C                     Z-ADD$BHGCD    WL0004           Item Code
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0005    $BGENA    P      Description Lin
     C                     MOVELWL0006    WUAWNA    P      Description Lin
     C                     MOVELWL0007    WUADCD    P      U/M - Primary
     C                     MOVELWL0008    WUAECD    P      U/M - Second
     C                     MOVELWL0009    WUAFCD    P      U/M - Third
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Item Descriptions  RT - OM Item Default  * 
     C                     EXSR SFRVGN
     C                     END                             *FI
     C                     Z-ADDP1RGNB    $BRGNB           Item Structure
      * RTV  Description       RT - OM Item Structure Type  * 
     C                     EXSR SGRVGN
     C                     Z-ADDP1RHNB    $BRHNB           Item Structure
      * Rtv Group Description  RT - OM Item Structure Group  * 
     C                     EXSR SHRVGN
     C                     Z-ADDP1RINB    $BRINB           Item Structure
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
     C                     EXSR SIRVGN
     C                     MOVELP2N0CD    $BN0CD           Item Type Code
      * 1PG.Condition Desc. 1  USR = Condition name of 1PG.Item Type Code
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1294118   Y2LSNO  70       List number
     C                     PARM $BN0CD    W0INVL 25        Item Type Code
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHLTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVELYL0003    $BZYST           Prt Non-Zero Qt
      * 1PG.Condition Desc. 2  USR = Condition name of 1PG.Prt Non-Zero Q
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BZYST    W0INVL 25        Prt Non-Zero Qt
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHMTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVELP2RBCD    $BRBCD           Item Level
      * RTV Item Level Descr   RT - PD Item Level  * 
     C                     EXSR SJRVGN
     C                     MOVELP2HICD    $BHICD           Quality Level
      * Rtv Quality Level Desc RT - Quality Level  * 
     C                     EXSR SKRVGN
     C                     MOVELP2KOST    $BKOST           Include Todays
      * 1PG.Condition Desc. 3  USR = Condition name of 1PG.Include Todays
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM $BKOST    W0INVL 25        Include Todays
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     Z-ADDP8B7DY    $BB7DY           Ageing Days Usr
     C                     MOVELP9V4CD    $BV4CD           Availability Gr
      * RTV Group Description  RT - Availability Group  * 
     C                     EXSR SLRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $BHGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$BHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VBHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           P3TIST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Aged Invent-N/Alc PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number - 3 format
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0010    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    P7VHST    P      Lot Tracking Fl
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $CADTX    P      Name
      * 05/26/20 DN S16592-Added Co 440 COPACK.
      * Aged Inventory-CoPack  or Aged Inventory **Condition**
      * CASE:
      *  - c1 AND c2 OR c3 AND c4 OR c5 AND c6
      *   |- c1    : PAR.Lot Tracking Flag is yes
      *   |- c2    : PAR.Item Structure Type Code is EQ 900
      *   |- c3    : PAR.Warehouse Code is Guymon Fresh
      *   |- c4    : PAR.Item Structure Type Code is EQ 900
      *   |- c5    : PAR.Warehouse Code is Seaboard Triumph - Fresh
      *   |- c6    : PAR.Item Structure Type Code is COPACK
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P7VHST    IFEQ 'Y'                        *IF
     C           P1RGNB    IFEQ 900                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           P1AJCD    IFEQ 'GP1'                      *IF
     C           P1RGNB    IFEQ 900                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           P1AJCD    IFEQ 'ST1'                      *IF
     C           P1RGNB    IFEQ 900                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'C'       YL0004           PA or Aged Inv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'A'       YL0004           PA or Aged Inv
     C                     END                             *FI
      * Go Back from current date to start aging rpt
     C                     Z-ADDYL0001    P5FFDT           USR Day 1
      * PAR.USR Day 1 = PAR.USR Day 1 + LCL.Ageing Days Usr *DAYS
     C           P5FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0002    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5FFDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5FFDT
     C                     END
      * Set to -1 now ....
     C                     Z-ADD-1        WUB7DY           Ageing Days Usr
      * PAR.USR Day 2 = PAR.USR Day 1 + WRK.Ageing Days Usr *DAYS
     C           P5FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5E1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5E1DT
     C                     END
      * PAR.USR Day 3 = PAR.USR Day 2 + WRK.Ageing Days Usr *DAYS
     C           P5E1DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5E2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5E2DT
     C                     END
      * PAR.USR Day 4 = PAR.USR Day 3 + WRK.Ageing Days Usr *DAYS
     C           P5E2DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5E3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5E3DT
     C                     END
      * PAR.USR Day 5 = PAR.USR Day 4 + WRK.Ageing Days Usr *DAYS
     C           P5E3DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5E4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5E4DT
     C                     END
      * PAR.USR Day 6 = PAR.USR Day 5 + WRK.Ageing Days Usr *DAYS
     C           P5E4DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5E5DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5E5DT
     C                     END
      * PAR.USR Day 7 = PAR.USR Day 6 + WRK.Ageing Days Usr *DAYS
     C           P5E5DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5E6DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5E6DT
     C                     END
      * PAR.USR Day 8 = PAR.USR Day 7 + CON.-1 *DAYS
     C           P5E6DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P5FKDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P5FKDT
     C                     END
     C                     Z-ADDP5FFDT    $CFFDT           USR Day 1
     C                     Z-ADDP5E1DT    $CE1DT           USR Day 2
     C                     Z-ADDP5E2DT    $CE2DT           USR Day 3
     C                     Z-ADDP5E3DT    $CE3DT           USR Day 4
     C                     Z-ADDP5E4DT    $CE4DT           USR Day 5
     C                     Z-ADDP5E5DT    $CE5DT           USR Day 6
     C                     Z-ADDP5E6DT    $CE6DT           USR Day 7
     C                     Z-ADDP5FKDT    $CFKDT           USR Day 8
      * set to 1 always  so use wrk. instead of par.
     C                     Z-ADD1         WUB7DY           Ageing Days Usr
     C                     Z-ADD001       YL0005           Age Heading 1Be
     C                     Z-ADDWUB7DY    YL0006           Age Heading 1En
     C           YL0006    ADD  1         YL0007           Age Heading 2Be
     C           WUB7DY    MULT 2         YL0008           Age Heading 2En
     C           YL0008    ADD  1         YL0009           Age Heading 3Be
     C           WUB7DY    MULT 3         YL0010           Age Heading 3En
     C           YL0010    ADD  1         YL0011           Age Heading 4Be
     C           WUB7DY    MULT 4         YL0012           Age Heading 4En
     C           YL0012    ADD  1         YL0013           Age Heading 5Be
     C           WUB7DY    MULT 5         YL0014           Age Heading 5En
     C           YL0014    ADD  1         YL0015           Age Heading 6Be
     C           WUB7DY    MULT 6         YL0016           Age Heading 6En
     C           YL0016    ADD  1         YL0017           Age Heading 7Be
     C           WUB7DY    MULT 7         YL0018           Age Heading 7En
     C           YL0018    ADD  1         YL0019           Age Heading 8Be
      * CASE: PAR.Ageing Days Usr is Only 1 day
     C           P8B7DY    IFEQ 00001                      *IF
     C                     MOVEL*BLANK    $CEKT1           Age Heading 1 U
     C                     MOVEL'   0'    $CEKT1           Age Heading 1 U
     C                     MOVEL*BLANK    $CELT1           Age Heading 2 U
     C                     MOVEL'   1'    $CELT1           Age Heading 2 U
     C                     MOVEL*BLANK    $CEMT1           Age Heading 3 U
     C                     MOVEL'   2'    $CEMT1           Age Heading 3 U
     C                     MOVEL*BLANK    $CENT1           Age Heading 4 U
     C                     MOVEL'   3'    $CENT1           Age Heading 4 U
     C                     MOVEL*BLANK    $CEOT1           Age Heading 5 U
     C                     MOVEL'   4'    $CEOT1           Age Heading 5 U
     C                     MOVEL*BLANK    $CEPT1           Age Heading 6 U
     C                     MOVEL'   5'    $CEPT1           Age Heading 6 U
     C                     MOVEL*BLANK    $CEQT1           Age Heading 7 U
     C                     MOVEL'   6'    $CEQT1           Age Heading 7 U
     C                     MOVEL*BLANK    $CERT1           Age Heading 8 U
     C                     MOVEL'   7'    $CERT1           Age Heading 8 U
     C                     ELSE
      * CASE: *OTHERWISE
      * LEAVE TOP HEADING BLANK
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR Day 1 to display format
      * Convert date
     C           1000000   ADD  $CFFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFFDT
      * Convert USR Day 2 to display format
      * Convert date
     C           1000000   ADD  $CE1DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE1DT
      * Convert USR Day 3 to display format
      * Convert date
     C           1000000   ADD  $CE2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE2DT
      * Convert USR Day 4 to display format
      * Convert date
     C           1000000   ADD  $CE3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE3DT
      * Convert USR Day 5 to display format
      * Convert date
     C           1000000   ADD  $CE4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE4DT
      * Convert USR Day 6 to display format
      * Convert date
     C           1000000   ADD  $CE5DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE5DT
      * Convert USR Day 7 to display format
      * Convert date
     C           1000000   ADD  $CE6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE6DT
      * Convert USR Day 8 to display format
      * Convert date
     C           1000000   ADD  $CFKDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFKDT
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Item Code of Prt Aged Invent-N/Alc PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE 'P'       W0AP01
     C                     END                             FI
      * Print Detail line. of Prt Aged Invent-N/Alc PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1AJCD    WL0010    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0011    P7VHST    P      Lot Tracking Fl
      * WRK fields are used for PA Reports and Screens
     C                     MOVEL'Y'       WUKOST           Include Todays
      * Rtv Age Quantities RPT RT - Item Balance Detail  * 
     C                     EXSR SNRVGN
      * New: get allocated inv
      * Rtv Inv Allocated-Rng RT - Order Detail Sched-Inv  * 
     C                     EXSR SQRVGN
     C                     SUB  YL0020    P5H5QT           Quantity Age Da
     C                     SUB  YL0021    P5H6QT           Quantity Age Da
     C                     SUB  YL0022    P5H7QT           Quantity Age Da
     C                     SUB  YL0023    P5H8QT           Quantity Age Da
     C                     SUB  YL0024    P5H9QT           Quantity Age Da
     C                     SUB  YL0025    P5IAQT           Quantity Age Da
     C                     SUB  YL0026    P5IBQT           Quantity Age Da
     C                     SUB  YL0027    P5ICQT           Quantity Age Da
      * ------------------------------------------------------
      * Qty on hand - Inv Alloc
      * PAR.Quantity On Hand   USR =
      *    *COMPUTE (x1-x2-x3-x4-x5-x6-x7-x8-x9)
      * x1    : PAR.Quantity On Hand   USR
      * -     : PGM.*Synon (17,7) work field
      * x2    : LCL.Day 1 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x3    : LCL.Day 2 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : LCL.Day 3 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x5    : LCL.Day 4 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x6    : LCL.Day 5 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x7    : LCL.Day 6 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x8    : LCL.Day 7 Sales 5,0  USR
      * -     : PGM.*Synon (17,7) work field
      * x9    : LCL.Day 8 Sales 5,0  USR
     C           P5U9VA    SUB  YL0020    W0WD07           *Synon (17,7) w
     C           W0WD07    SUB  YL0021    W0WD06           *Synon (17,7) w
     C           W0WD06    SUB  YL0022    W0WD05           *Synon (17,7) w
     C           W0WD05    SUB  YL0023    W0WD04           *Synon (17,7) w
     C           W0WD04    SUB  YL0024    W0WD03           *Synon (17,7) w
     C           W0WD03    SUB  YL0025    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  YL0026    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  YL0027    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    P5U9VA           Quantity On Han
      * ------------------------------------------------------
     C                     ADD  P5U9VA    $EBKQT           Quantity Total
     C                     ADD  P6ARQT    $EARQT           Quantity on Han
     C                     ADD  P5H5QT    $EH5QT           Quantity Age Da
     C                     ADD  P5H6QT    $EH6QT           Quantity Age Da
     C                     ADD  P5H7QT    $EH7QT           Quantity Age Da
     C                     ADD  P5H8QT    $EH8QT           Quantity Age Da
     C                     ADD  P5H9QT    $EH9QT           Quantity Age Da
     C                     ADD  P5IAQT    $EIAQT           Quantity Age Da
     C                     ADD  P5IBQT    $EIBQT           Quantity Age Da
     C                     ADD  P5ICQT    $EICQT           Quantity Age Da
     C                     ADD  P5L3QT    $EG3NX           Quantity on Hol
     C                     MOVEL'N'       W0PFM            *Print format
     C           W0PFM     IFEQ 'Y'
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP00    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Aged Invent-N/Alc PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  14        W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Aged Invent-N/Alc PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  8         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Aged Invent-N/Alc PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Aged Invent-N/Alc PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'I/C'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0002           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$BAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Descriptions      RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0003    BZAIC3           Company Number
     C                     Z-ADDWL0004    BZHGCD           Item Code
      * Establish starting position
     C           KRSSE     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0005           Description Lin
     C                     MOVELBZAWNA    WL0006           Description Lin
     C                     MOVELBZADCD    WL0007           U/M - Primary
     C                     MOVELBZAECD    WL0008           U/M - Second
     C                     MOVELBZAFCD    WL0009           U/M - Third
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Descriptions  RT - OM Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD$BHGCD    BYHGCD           Item Code
      * Establish starting position
     C           KRSSF     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BGENA           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    $BGENA           Description Lin
     C                     MOVELBYAWNA    WUAWNA           Description Lin
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADD$BRGNB    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSG     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    $BRGNB           Item Structure
     C                     MOVELE8DCTX    $BDCTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADD$BRHNB    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSH     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WURGNB           Item Structure
     C                     MOVELE9DDTX    $BDDTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD$BRINB    FARINB           Item Structure
      * Establish starting position
     C           KRSSI     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDETX           Item Structure
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    $BDETX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Item Level Descr   RT - PD Item Level  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           ILRBCD           Item Level
      * Setup key
     C                     MOVEL$BRBCD    ILRBCD           Item Level
      * Establish starting position
     C           KRSSJ     CHAIN@ILRERK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1673' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BAUNA           Description
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELILAUNA    $BAUNA           Description
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Quality Level Desc RT - Quality Level  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           AIHICD           Quality Level
      * Setup key
     C                     MOVEL$BHICD    AIHICD           Quality Level
      * Establish starting position
     C           KRSSK     CHAIN@AIREBL              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0024' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDL01           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELAIAUNA    $BDL01           Description
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Group Description  RT - Availability Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           KKV4CD           Availability Gr
      * Setup key
     C                     MOVEL$BV4CD    KKV4CD           Availability Gr
      * Establish starting position
     C           KRSSL     CHAIN@KKREG7              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2215' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $BNVNA           Availability Gr
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELKKNVNA    $BNVNA           Availability Gr
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0010    WAAJCD           Warehouse Code
      * Establish starting position
     C           KRSSM     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0011           Lot Tracking Fl
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAVHST    WL0011           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Age Quantities RPT RT - Item Balance Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  70       Production Date
     C                     Z-ADD*ZERO     WN0002  70       Chill Date  USR
     C                     Z-ADD*ZERO     WN0003  52       Fresh Chilling
     C                     MOVEL*BLANK    WN0004  1        Record Selected
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0001           Production Date
     C                     Z-ADD*ZERO     P5H5QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H6QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H7QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H8QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H9QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5IAQT           Quantity Age Da
     C                     Z-ADD*ZERO     P5IBQT           Quantity Age Da
     C                     Z-ADD*ZERO     P5ICQT           Quantity Age Da
     C                     Z-ADD*ZERO     P5U9VA           Quantity On Han
     C                     Z-ADD*ZERO     P5L3QT           Quantity on Hol
     C                     Z-ADD*ZERO     P6ARQT           Quantity on Han
     C                     Z-ADD*ZERO     WN0002           Chill Date  USR
     C                     Z-ADD*ZERO     WN0003           Fresh Chilling
     C                     MOVEL*BLANK    WN0004           Record Selected
     C                     Z-ADD*ZERO     WUD2IN           Day 2 Inventory
     C                     Z-ADD*ZERO     WUD3IN           Day 3 Inventory
     C                     Z-ADD*ZERO     WUD4IN           Day 4 Inventory
     C                     Z-ADD*ZERO     WUD5IN           Day 5 Inventory
     C                     Z-ADD*ZERO     WUD6IN           Day 6 Inventory
     C                     Z-ADD*ZERO     WUD7IN           Day 7 Inventory
     C                     Z-ADD*ZERO     WUGCNX           Day 8 Inventory
     C                     Z-ADD*ZERO     WUGDNX           Day 9 Inventory
     C                     Z-ADD*ZERO     WUGENX           Day 10 Inventor
     C                     Z-ADD*ZERO     WUGFNX           Day 11 Inventor
     C                     Z-ADD*ZERO     WUGGNX           Day 12 Inventor
     C                     Z-ADD*ZERO     WUGHNX           Day 13 Inventor
     C                     Z-ADD*ZERO     WUGINX           Day 14 Inventor
      * Rtv Chill Time        RT - Company/Item  * 
     C                     EXSR SORVGN
      * Declare restrictor key work fields
     C           *LIKE     DEFN B1AIC3    WQSN01           Company Number
     C           *LIKE     DEFN B1HGCD    WQSN02           Item Code
     C           *LIKE     DEFN B1AJCD    WQSN03           Warehouse Code
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Item Code
     C                     KFLD           WQSN03           Warehouse Code
      * Setup key
     C                     Z-ADD$DAIC3    WQSN01           Company Number
     C                     Z-ADD$DHGCD    WQSN02           Item Code
     C                     MOVEL$DAJCD    WQSN03           Warehouse Code
      * Establish starting position
     C           KRSSN     SETLL@B1REIW                    *
     C           KRSSN     READE@B1REIW                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Lot Tracking Flag is yes
     C           P7VHST    IFEQ 'Y'                        *IF
      * 5/21/2007 SLM -- * Create a copy and made changes
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) YL0001' defaulted for 'Job Date Usr'.
      * Rtv Age Qtys - Lot RptRT - Item Lot Location  * 
     C                     EXSR SPRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * 5/22 SLM - PURVA AND SUSAN RESTRUCTURE DUE TO
      *            FACT THAT THIS WAS WORKING FOR 1 DAY ONLY
      *            NOT A RANAGE OF DATES.
      * Check record selection for include todays transactions
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Include Todays Trans is no
      *   |- c2    : PAR.USR Day 1 EQ DB1.Production Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUKOST    IFEQ 'N'                        *IF
     C           P5FFDT    IFEQ B1ELDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       WN0004           Record Selected
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WN0004           Record Selected
     C                     END                             *FI
      * 05/21/2007 change this from one day to range of dates
      * If record selected is yes then process
      * CASE: PAR.Record Selected       USR is yes
     C           WN0004    IFEQ 'Y'                        *IF
      * Put Qtys in correct bucket
      * CASE: DB1.Label Date GT PAR.Job Date Usr
     C           B1K7DT    IFGT YL0001                     *IF
      * TPA 09/26/07 - Changed above line to GT since it is a bucket for
      *                anything 'After' the current date.
     C                     ADD  B1ARQT    P6ARQT           Quantity on Han
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
      * TPA 09/26/07 - Changed all bucket tests below to LE column bucket
      *                and GT next column bucket.
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 1
      *   |- c2    : DB1.Label Date GT PAR.USR Day 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5FFDT                     *IF
     C           B1K7DT    IFGT P5E1DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5H5QT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 2
      *   |- c2    : DB1.Label Date GT PAR.USR Day 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5E1DT                     *IF
     C           B1K7DT    IFGT P5E2DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5H6QT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 3
      *   |- c2    : DB1.Label Date GT PAR.USR Day 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5E2DT                     *IF
     C           B1K7DT    IFGT P5E3DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5H7QT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 4
      *   |- c2    : DB1.Label Date GT PAR.USR Day 5
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5E3DT                     *IF
     C           B1K7DT    IFGT P5E4DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5H8QT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 5
      *   |- c2    : DB1.Label Date GT PAR.USR Day 6
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5E4DT                     *IF
     C           B1K7DT    IFGT P5E5DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5H9QT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 6
      *   |- c2    : DB1.Label Date GT PAR.USR Day 7
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5E5DT                     *IF
     C           B1K7DT    IFGT P5E6DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5IAQT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Label Date LE PAR.USR Day 7
      *   |- c2    : DB1.Label Date GT PAR.USR Day 8
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B1K7DT    IFLE P5E6DT                     *IF
     C           B1K7DT    IFGT P5FKDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B1ARQT    P5IBQT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE: DB1.Label Date LE PAR.USR Day 8
     C           B1K7DT    IFLE P5FKDT                     *IF
     C                     ADD  B1ARQT    P5ICQT           Quantity Age Da
     C                     ADD  B1ARQT    P5U9VA           Quantity On Han
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSN     READE@B1REIW                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Chill Time        RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD$DAIC3    BZAIC3           Company Number
     C                     Z-ADD$DHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSO     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0003           Fresh Chilling
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBZCHTM    WN0003           Fresh Chilling
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Age Qtys - Lot RptRT - Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSP01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSP02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSP03           Warehouse Code
     C           *LIKE     DEFN L5ELDT    WQSP04           Production Date
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
     C                     KFLD           WQSP04           Production Date
      * Setup key
     C                     Z-ADDB1AIC3    WQSP01           Company Number
     C                     Z-ADDB1HGCD    WQSP02           Item Code
     C                     MOVELB1AJCD    WQSP03           Warehouse Code
     C                     Z-ADDB1ELDT    WQSP04           Production Date
      * Establish starting position
     C           KRSSP     SETLL@L5CPSV                    *
     C           KRSSP     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.ILL Status is Available
     C           L5AMSX    IFEQ 'A'                        *IF
      * Put Qtys in correct bucket
      * CASE: DB1.ILL Avail Ship Date GT PAR.Job Date Usr
     C           L5LODT    IFGT YL0001                     *IF
      * TPA 09/26/07 - Changed above line to GT since it is a bucket for
      *                anything 'After' the job date.
     C                     ADD  L5J2QT    P6ARQT           Quantity on Han
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
      * TPA 09/26/07 - Changed all bucket tests below to LE column bucket
      *                and GT next column bucket.
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 1
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5FFDT                     *IF
     C           L5LODT    IFGT P5E1DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5H5QT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 2
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5E1DT                     *IF
     C           L5LODT    IFGT P5E2DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5H6QT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 3
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5E2DT                     *IF
     C           L5LODT    IFGT P5E3DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5H7QT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 4
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 5
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5E3DT                     *IF
     C           L5LODT    IFGT P5E4DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5H8QT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 5
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 6
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5E4DT                     *IF
     C           L5LODT    IFGT P5E5DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5H9QT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 6
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 7
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5E5DT                     *IF
     C           L5LODT    IFGT P5E6DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5IAQT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.ILL Avail Ship Date LE PAR.USR Day 7
      *   |- c2    : DB1.ILL Avail Ship Date GT PAR.USR Day 8
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           L5LODT    IFLE P5E6DT                     *IF
     C           L5LODT    IFGT P5FKDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  L5J2QT    P5IBQT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     ELSE
      * CASE: DB1.ILL Avail Ship Date LE PAR.USR Day 8
     C           L5LODT    IFLE P5FKDT                     *IF
     C                     ADD  L5J2QT    P5ICQT           Quantity Age Da
     C                     ADD  L5J2QT    P5U9VA           Quantity On Han
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  L5J2QT    P5L3QT           Quantity on Hol
     C                     END                             *FI
     C           KRSSP     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Inv Allocated-Rng RT - Order Detail Sched-Inv  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0020           Day 1 Sales 5,0
     C                     Z-ADD*ZERO     YL0021           Day 2 Sales 5,0
     C                     Z-ADD*ZERO     YL0022           Day 3 Sales 5,0
     C                     Z-ADD*ZERO     YL0023           Day 4 Sales 5,0
     C                     Z-ADD*ZERO     YL0024           Day 5 Sales 5,0
     C                     Z-ADD*ZERO     YL0025           Day 6 Sales 5,0
     C                     Z-ADD*ZERO     YL0026           Day 7 Sales 5,0
     C                     Z-ADD*ZERO     YL0027           Day 8 Sales 5,0
      * Declare restrictor key work fields
     C           *LIKE     DEFN B5AIC3    WQSQ01           Company Number
     C           *LIKE     DEFN B5HGCD    WQSQ02           Item Code
     C           *LIKE     DEFN B5AJCD    WQSQ03           Warehouse Code
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Company Number
     C                     KFLD           WQSQ02           Item Code
     C                     KFLD           WQSQ03           Warehouse Code
      * Setup key
     C                     Z-ADD$DAIC3    WQSQ01           Company Number
     C                     Z-ADD$DHGCD    WQSQ02           Item Code
     C                     MOVEL$DAJCD    WQSQ03           Warehouse Code
      * Establish starting position
     C           KRSSQ     SETLL@B5CPM5                    *
     C           KRSSQ     READE@B5CPM5                  90*
      * Data record not found
     C   90                MOVEL'USR3150' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * DOC: 04/11/07 Change Log
     C                     EXSR UASUBR                     DOC: 04/11/07 C
      * 04/11/07 PKD Chilled and Non-Chilled are aged the same.
      * RTV Order Status       RT - Order Header TRG  * 
     C                     EXSR SRRVGN
      * CASE: LCL.Header Status is Confirmed & Complete
     C           YL0029    IFEQ 'C'                        *IF
     C           YL0029    OREQ 'R'
      * skip if shipped/invoiced because the item bal is already reduced
     C                     ELSE
      * CASE: *OTHERWISE
      * Allocated
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 1
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5FFDT                     *IF
     C           B5JGDT    IFGT P5E1DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0020           Day 1 Sales 5,0
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 2
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5E1DT                     *IF
     C           B5JGDT    IFGT P5E2DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0021           Day 2 Sales 5,0
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 3
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5E2DT                     *IF
     C           B5JGDT    IFGT P5E3DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0022           Day 3 Sales 5,0
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 4
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 5
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5E3DT                     *IF
     C           B5JGDT    IFGT P5E4DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0023           Day 4 Sales 5,0
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 5
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 6
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5E4DT                     *IF
     C           B5JGDT    IFGT P5E5DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0024           Day 5 Sales 5,0
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 6
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 7
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5E5DT                     *IF
     C           B5JGDT    IFGT P5E6DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0025           Day 6 Sales 5,0
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 7
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 8
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P5E6DT                     *IF
     C           B5JGDT    IFGT P5FKDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    YL0026           Day 7 Sales 5,0
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.OD Production Date LE PAR.USR Day 8
     C           B5JGDT    IFLE P5FKDT                     *IF
     C                     ADD  B5IUQT    YL0027           Day 8 Sales 5,0
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSQ     READE@B5CPM5                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * RTV Order Status       RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDB5AIC3    BEAIC3           Company Number
     C                     Z-ADDB5C4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSR     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    YL0029           Header Status
     C                     MOVELBEGXST    YL0030           Header Status L
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv ItmTyp/ItmLv/QltLv RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDB0AIC3    BZAIC3           Company Number
     C                     Z-ADDB0HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSS     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WUHICD           Quality Level
     C                     MOVEL*BLANK    WURBCD           Item Level
     C                     MOVEL*BLANK    WUN0CD           Item Type Code
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZHICD    WUHICD           Quality Level
     C                     MOVELBZRBCD    WURBCD           Item Level
     C                     MOVELBZN0CD    WUN0CD           Item Type Code
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Val Existance         RT - Company Item Avail Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           KLAIC3           Company Number
     C                     KFLD           KLHGCD           Item Code
     C                     KFLD           KLV4CD           Availability Gr
      * Setup key
     C                     Z-ADDWL0012    KLAIC3           Company Number
     C                     Z-ADDWL0013    KLHGCD           Item Code
     C                     MOVELWL0014    KLV4CD           Availability Gr
      * Establish starting position
     C           KRSST     CHAIN@KLREHH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2217' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'N'       WL0015           Record Found US
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y'       WL0015           Record Found US
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * DOC: 04/11/07 Change Log
      *================================================================
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P3TIST           USR Display 1
     C                     MOVEL*BLANK    P4FZST           Production Date
     C                     Z-ADD*ZERO     P5FFDT           USR Day 1
     C                     Z-ADD*ZERO     P5E1DT           USR Day 2
     C                     Z-ADD*ZERO     P5E2DT           USR Day 3
     C                     Z-ADD*ZERO     P5E3DT           USR Day 4
     C                     Z-ADD*ZERO     P5E4DT           USR Day 5
     C                     Z-ADD*ZERO     P5E5DT           USR Day 6
     C                     Z-ADD*ZERO     P5E6DT           USR Day 7
     C                     Z-ADD*ZERO     P5FKDT           USR Day 8
     C                     Z-ADD*ZERO     P5H5QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H6QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H7QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H8QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5H9QT           Quantity Age Da
     C                     Z-ADD*ZERO     P5IAQT           Quantity Age Da
     C                     Z-ADD*ZERO     P5IBQT           Quantity Age Da
     C                     Z-ADD*ZERO     P5ICQT           Quantity Age Da
     C                     Z-ADD*ZERO     P5U9VA           Quantity On Han
     C                     Z-ADD*ZERO     P5L3QT           Quantity on Hol
     C                     Z-ADD*ZERO     P6ARQT           Quantity on Han
     C                     MOVEL*BLANK    P7VHST           Lot Tracking Fl
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B0AIC3           Company Number
     C                     MOVEL*LOVAL    B0HGCD           Item Code
     C                     MOVEL*LOVAL    B0AJCD           Warehouse Code
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field U/M - Second
     C                     MOVEL*BLANK    WUAECD  2
      * Define work field U/M - Third
     C                     MOVEL*BLANK    WUAFCD  2
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WADBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WABWC3           Shipping Compan
     C                     Z-ADD*ZERO     WABTC3           Accounting Comp
     C                     Z-ADD*ZERO     WABUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WABVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Ageing Days Usr
     C                     Z-ADD*ZERO     WUB7DY  50
      * Define work field Include Todays Trans
     C                     MOVEL*BLANK    WUKOST  1
      * Define work field Avail Ship Date 2 USR
     C                     Z-ADD*ZERO     WUH7DT  70
      * Define work field Avail Ship Date 3 USR
     C                     Z-ADD*ZERO     WUH8DT  70
      * Define work field Avail Ship Date 4 USR
     C                     Z-ADD*ZERO     WUH9DT  70
      * Define work field Avail Ship Date 5 USR
     C                     Z-ADD*ZERO     WUIADT  70
      * Define work field Avail Ship Date 6 USR
     C                     Z-ADD*ZERO     WUIBDT  70
      * Define work field Avail Ship Date 7 USR
     C                     Z-ADD*ZERO     WUINDT  70
      * Define work field Avail Ship Date 8 USR
     C                     Z-ADD*ZERO     WUIODT  70
      * Define work field Avail Ship Date 9 USR
     C                     Z-ADD*ZERO     WUIPDT  70
      * Define work field Avail Ship Date 10 USR
     C                     Z-ADD*ZERO     WUIQDT  70
      * Define work field Avail Ship Date 11 USR
     C                     Z-ADD*ZERO     WUIRDT  70
      * Define work field Avail Ship Date 12 USR
     C                     Z-ADD*ZERO     WUISDT  70
      * Define work field Avail Ship Date 13 USR
     C                     Z-ADD*ZERO     WUITDT  70
      * Define work field Avail Ship Date 14 USR
     C                     Z-ADD*ZERO     WUIUDT  70
      * Define work field Day 2 Inventory USR
     C                     Z-ADD*ZERO     WUD2IN  61
      * Define work field Day 3 Inventory USR
     C                     Z-ADD*ZERO     WUD3IN  61
      * Define work field Day 4 Inventory USR
     C                     Z-ADD*ZERO     WUD4IN  61
      * Define work field Day 5 Inventory USR
     C                     Z-ADD*ZERO     WUD5IN  61
      * Define work field Day 6 Inventory USR
     C                     Z-ADD*ZERO     WUD6IN  61
      * Define work field Day 7 Inventory USR
     C                     Z-ADD*ZERO     WUD7IN  61
      * Define work field Day 8 Inventory USR
     C                     Z-ADD*ZERO     WUGCNX  61
      * Define work field Day 9 Inventory USR
     C                     Z-ADD*ZERO     WUGDNX  61
      * Define work field Day 10 Inventory USR
     C                     Z-ADD*ZERO     WUGENX  61
      * Define work field Day 11 Inventory USR
     C                     Z-ADD*ZERO     WUGFNX  61
      * Define work field Day 12 Inventory USR
     C                     Z-ADD*ZERO     WUGGNX  61
      * Define work field Day 13 Inventory USR
     C                     Z-ADD*ZERO     WUGHNX  61
      * Define work field Day 14 Inventory USR
     C                     Z-ADD*ZERO     WUGINX  61
      * Define work field Quality Level
     C                     MOVEL*BLANK    WUHICD  2
      * Define work field Item Level
     C                     MOVEL*BLANK    WURBCD  2
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Display Flag
     C                     MOVEL*BLANK    WUQKST  1
      * Define work field Flag 2
     C                     MOVEL*BLANK    WUNGST  4
      * Define work field Flag 3
     C                     MOVEL*BLANK    WUFLG3  4
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD07 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD06 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD05 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  70
     C                     MOVEL*BLANK    WL0005 30
     C                     MOVEL*BLANK    WL0006 30
     C                     MOVEL*BLANK    WL0007  2
     C                     MOVEL*BLANK    WL0008  2
     C                     MOVEL*BLANK    WL0009  2
      * Define local variables for subroutine SMRVGN.
     C                     MOVEL*BLANK    WL0010  3
     C                     MOVEL*BLANK    WL0011  1
      * Define local variables for subroutine STRVGN.
     C                     Z-ADD*ZERO     WL0012  30
     C                     Z-ADD*ZERO     WL0013  70
     C                     MOVEL*BLANK    WL0014  3
     C                     MOVEL*BLANK    WL0015  1
      * Define local work field Job Date Usr
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Ageing Days Usr
     C                     Z-ADD*ZERO     YL0002  50
      * Define local work field Prt Non-Zero Qty Only USR
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field PA or Aged Inv Usage USR
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field Age Heading 1Beg Usr
     C                     Z-ADD*ZERO     YL0005  30
      * Define local work field Age Heading 1End Usr
     C                     Z-ADD*ZERO     YL0006  30
      * Define local work field Age Heading 2Beg Usr
     C                     Z-ADD*ZERO     YL0007  30
      * Define local work field Age Heading 2End Usr
     C                     Z-ADD*ZERO     YL0008  30
      * Define local work field Age Heading 3Beg Usr
     C                     Z-ADD*ZERO     YL0009  30
      * Define local work field Age Heading 3End Usr
     C                     Z-ADD*ZERO     YL0010  30
      * Define local work field Age Heading 4Beg Usr
     C                     Z-ADD*ZERO     YL0011  30
      * Define local work field Age Heading 4End Usr
     C                     Z-ADD*ZERO     YL0012  30
      * Define local work field Age Heading 5Beg Usr
     C                     Z-ADD*ZERO     YL0013  30
      * Define local work field Age Heading 5End Usr
     C                     Z-ADD*ZERO     YL0014  30
      * Define local work field Age Heading 6Beg Usr
     C                     Z-ADD*ZERO     YL0015  30
      * Define local work field Age Heading 6End Usr
     C                     Z-ADD*ZERO     YL0016  30
      * Define local work field Age Heading 7Beg Usr
     C                     Z-ADD*ZERO     YL0017  30
      * Define local work field Age Heading 7End Usr
     C                     Z-ADD*ZERO     YL0018  30
      * Define local work field Age Heading 8Beg Usr
     C                     Z-ADD*ZERO     YL0019  30
      * Define local work field Day 1 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0020  50
      * Define local work field Day 2 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0021  50
      * Define local work field Day 3 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0022  50
      * Define local work field Day 4 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0023  50
      * Define local work field Day 5 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0024  50
      * Define local work field Day 6 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0025  50
      * Define local work field Day 7 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0026  50
      * Define local work field Day 8 Sales 5,0  USR
     C                     Z-ADD*ZERO     YL0027  50
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0028  52
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0029  1
      * Define local work field Header Status Last
     C                     MOVEL*BLANK    YL0030  1
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0031  1
      * Define local work field Item Description
     C                     MOVEL*BLANK    YL0032 30
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       P3TIST           USR Display 1
     C                     Z-ADD##JDT     YL0001           Job Date Usr
     C           P8B7DY    MULT -1        YL0002           Ageing Days Usr
      * force to yes
     C                     MOVEL'Y'       YL0003           Prt Non-Zero Qt
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
