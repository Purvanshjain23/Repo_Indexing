      *
      * SYSTEM:      Hog Production
      * PROGRAM:     HP1020
      * TITLE:       Revise BGF Daily Production
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/18-10
      *
      * FUNCTION: This is an edit record function that revises the BGF Daily Production
      *           data for a farm/date.  The function required 2 screens to contain all of
      *           the data entry fields. Therefore, the standard subroutines have been altered
      *           slightly to accommodate navigation.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/17/02  LeAnne Fedor
      *           Added fields:
      *               sows arrived
      *               sows transferred out open
      *               gilts transferred out open
      *           Removed fields:
      *               beginning piglet inventory
      *               ending piglet inventory
      *
      * 10/21/03  LeAnne Fedor
      *           Added an edit that the Daily Production Date cannot be a 'future' date.
      *
      * 10/22/03  LeAnne Fedor
      *           Added fields:
      *               gilt total stillborns
      *               gilt total mummies
      *               17+ day weaned sows
      *               euthanized gilts
      *               euthanized sows
      *           Changed text on fields:
      *               from: gilts dead     to:  gilts dead naturally
      *               from: sows dead      to:  sows dead naturally
      *
      * 02/03/05  LeAnne Fedor
      *           Added field: Transferred in Open Gilts (to Screen 2)
      *           Also, moved first row of fields from Screen 2 to the bottom of
      *           Screen 1 to make room for the new field.
      *
      * 08/23/05  LeAnne Fedor
      *           Added field: Man Hours (last field on Screen 2)
      *
      * 01/30/06  LeAnne Fedor
      *           The calculation of "Piglets Weaned per Litter" has been changed:
      *           FROM: total pigs weaned /
      *                              (15-16 day weaned sows + 17 Day weaned sows)
      *           TO:   total pigs weaned /
      *                     (early weaned sows + 15-16 day weaned sows + 17 Day weaned sows)
      *
      * 06/15/06  LeAnne Ramsey
      *           Recompile only. New field "Avg Gilt Weight @ 28 Weeks" added
      *           to BGF Weekly Production file.
      *
      * 10/19/07  LeAnne Ramsey
      *           Recompile only. The user are switching "manhours" from being
      *           "total" manhours for the day to being the "average" manhours
      *           for the day. So, added the word "average" to the text on the
      *           screen.
      *
      * 08/01/08  LeAnne Ramsey
      *           Removed from screen/file: T/I Open Gilts (ioglhd)
      *                                     T/O Open Gilts (ooglhd)
      *           Removed from file: 17+ Day Weaned Sows and replaced it on the
      *                              screen with output only: Total Weaned Sows
      *           Changed text: Early Weaned Sows      to   0-15 Day Weaned Sows
      *                         15-16 Day Weaned Sows  to   16+ Day Weaned Sows
      *
      * 09/19/08  LeAnne Ramsey
      *           Recompile only.
      *           The users are switching "average manhours" back to "total manhours".
      *           So, removed the word "average" from the screen text.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1020   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp009    if   e           k disk
      *    Business office
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl082a   uf a e           k disk
      *    BGF daily production
      *
      *
     Fhsl092b   if   e           k disk
      *    BGF weekly production
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set             c                   'SET   '
     D scrn1           c                   'SCRN1 '
     D scrn2           c                   'SCRN2 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
     D notflg          s              1    inz('N')
      *
      *
      * Work fields
      *
     D wkfld152        s             15  2
     D wkwnlt          s                   like(bdwnlt)
      *
      *
      * Control/flag fields
      *
     D scrn1error      s              1
     D scrn2error      s              1
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkmdydate       s               D   datfmt(*mdy)
     D wkccyymmdd      s              8  0
     D wkwedt          s              8  0
     D wkdpdt          s              8  0
     D wkcrupdt        s              8  0
     D wkyymmdd        s              6  0
      *
      *
      * Parm fields
      *
     D xxdpdt          s                   like(bddpdt)
     D xxdpmdy         s                   like(d1dpmdy)
      *
     D xxcocd          s              3  0
     D xxreturn        s              7a
     D xxalphfscd      s              5a
     D xxfsbo          s                   like(bdfsbo)
     D xxfscd          s                   like(bdfscd)
     D xxfsnm          s                   like(fsfsnm)
      *
     D xxcyymmddi      s              7  0
     D xxcyymmddo      s              7  0
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
      *
     D xxhpscdyr       s                   like(bdcdyr)
     D xxhpscdwk       s                   like(bdcdwk)
     D xxhpspicdt      s                   like(bdpicdt)
      *
     D xxcdyr          s                   like(bdcdyr)
     D xxcdwk          s                   like(bdcdwk)
     D xxday           s              1a
      *
     D xxacyr          s              4  0
     D xxacpe          s              2  0
     D xxacwk          s              2  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set           $set
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     scrn2         $scrn2
      *
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for all screens
      *----------------------------------------------------------------
      *
     C     $set          begsr
      *
      * If the user is in CREATE mode, clear the fields on both screens
      *
     C                   select                                                 Main select
     C                   when      mode = create
     C                   exsr      $clear1
     C                   exsr      $clear2
      *
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record using the parms passed in.  Do not lock the record.
      * Typically, in DELETE mode these retrieved values will not be
      * displayed. However, if there is an error on the delete action
      * the panel will be displayed.
      *
     C                   when      mode = revise or mode = delete
     C     key01         chain(n)  hsl082a                            92
     C                   if        *in92 = *on                                  If not found
     C                   move      yes           notflg
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif
     C                   else
      *
      * Set up fields for both screens
      *
     C                   exsr      $set1
     C                   exsr      $set2
     C                   endif                                                  If not found
     C                   endsl                                                  Main select
      *
      * If the user is deleting, go on to the update routine and don't
      * display the screen. Otherwise, display screen 1.
      *
     C                   if        error = 0 and action = delete
     C                   exsr      $update
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear the fields on screen 1
      *---------------------------------------------------------------
      *
     C     $clear1       begsr
      *
     C                   z-add     0             d1fscd
     C                   move      *blank        d1fsnm
     C                   z-add     0             d1wnsv
     C                   z-add     0             d1lwnsv
     C                   z-add     0             d1rtsv
     C                   z-add     0             d1glsv
     C                   z-add     0             d1tosv
      *
     C                   z-add     0             d1opglhd
     C                   z-add     0             d1opsohd
      *
     C                   z-add     0             d1abhd
     C                   z-add     0             d1glabhd
     C                   z-add     0             d1nipqt
      *
     C                   z-add     0             d1gllt
     C                   z-add     0             d1glbahd
     C                   z-add     0             d1glsbhd
     C                   z-add     0             d1glmmhd
     C                   z-add     0             d1tolt
     C                   z-add     0             d1bahd
     C                   z-add     0             d1ltbahd
     C                   z-add     0             d1sbhd
     C                   z-add     0             d1ltsbhd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Set up fields for screen 1
      *---------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   z-add     bdpicdt       d1picdt
     C                   z-add     bdcdyr        d1cdyr
     C                   z-add     bdcdwk        d1cdwk
     C                   z-add     bdsdino       d1sdino
      *
     C                   z-add     bdwedt        wkwedt
     C     *iso          move      wkwedt        wkmdydate
     C                   move      wkmdydate     d1wemdy
      *
     C                   z-add     bdwnsv        d1wnsv
     C                   z-add     bdlwnsv       d1lwnsv
     C                   z-add     bdrtsv        d1rtsv
     C                   z-add     bdglsv        d1glsv
      *
     C                   z-add     bdopglhd      d1opglhd
     C                   z-add     bdopsohd      d1opsohd
      *
     C                   z-add     bdabhd        d1abhd
     C                   z-add     bdglabhd      d1glabhd
     C                   z-add     bdnipqt       d1nipqt
      *
     C                   z-add     bdgllt        d1gllt
     C                   z-add     bdglbahd      d1glbahd
     C                   z-add     bdglsbhd      d1glsbhd
     C                   z-add     bdglmmhd      d1glmmhd
     C                   z-add     bdtolt        d1tolt
     C                   z-add     bdbahd        d1bahd
     C                   z-add     bdsbhd        d1sbhd
      *
      * Retrieve farm site name
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   eval      d1fsnm = fsfsnm
     C                   else
     C                   eval      d1fsnm = 'UNKNOWN'
     C                   endif
      *
      * Make screen 1 calculations
      *
     C                   exsr      $calc1
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1020k1
     C                   write     hp1020ec
     C                   exfmt     hp1020r1
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Process user's entry and set routine
      *
     C                   select                                                 Select response
     C                   when      *in03 = *on                                  F3-exit
     C                   move      *blank        rtncd
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      notflg = yes                                 Record gone
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif
     C                   movel     scrn1         routne
     C                   other
      *
      * User has pressed ENTER on screen 1
      *
     C                   exsr      $edit1
      *
     C                   select
     C                   when      error = 0
     C                   eval      routne = scrn2
     C                   other
     C                   eval      routne = scrn1
     C                   endsl
      *
     C                   endsl                                                  Select response
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
     C                   move      no            scrn1error
      *
      * When creating, validate:
      *   1) daily production date
      *   2) farm site
      *
     C                   if        mode = create                                If create
     C                   exsr      $dpdt
     C                   exsr      $fscd
     C                   endif                                                  If create
      *
      * Number of weaners
      *
     C                   if        d1wnsv < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Number of open sow pool served
      *
     C                   if        d1lwnsv < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Number of returns
      *
     C                   if        d1rtsv < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Number of gilts
      *
     C                   if        d1glsv < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Open gilt pool
      *
     C                   if        d1opglhd < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Open sow pool
      *
     C                   if        d1opsohd < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Number of gilt abortions
      *
     C                   select
     C                   when      d1glabhd < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
      *
     C                   when      d1glabhd > d1abhd
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01107'     mgid(e)
     C                   endif
     C                   endsl
      *
      *
      * Number of abortions
      *
     C                   if        d1abhd < 0
     C                   seton                                        46
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Number of NIP's  (ie: not in pig)
      *
     C                   if        d1nipqt < 0
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Gilt litters farrowed
      *
     C                   if        d1gllt < 0
     C                   seton                                        47
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Gilt total born alive
      *
     C                   if        d1glbahd < 0
     C                   seton                                        79
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Gilt total stillborns
      *
     C                   if        d1glsbhd < 0
     C                   seton                                        67
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Gilt total mummies
      *
     C                   if        d1glmmhd < 0
     C                   seton                                        68
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Total litters farrowed
      *
     C                   if        d1tolt < 0
     C                   seton                                        48
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Total born alive
      *
     C                   if        d1bahd < 0
     C                   seton                                        49
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Total stillborns
      *
     C                   if        d1sbhd < 0
     C                   seton                                        50
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Calculate output only fields for screen 1
      *
     C                   exsr      $calc1
      *
     C                   if        error > 0
     C                   move      yes           scrn1error
     C                   endif
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------
      * $calc1 - Calculate values for the output fields on screen one
      *---------------------------------------------------------------------
      *
     C     $calc1        begsr
      *
      * Calculate total services
      *
     C                   eval      d1tosv = d1wnsv + d1lwnsv + d1rtsv + d1glsv
      *
      *
      * If 'total litters farrowed' is not zero, calculate the following:
      *   1) 'Born alive per litter' as:
      *                             total born alive / total litters farrowed
      *   2) 'Stillborns per litter' as:
      *                             total stillborns / total litters farrowed
      *
      *
     C                   if        d1tolt <> 0                                  If litters
     C     d1bahd        div(h)    d1tolt        wkfld152
     C                   z-add     wkfld152      d1ltbahd
     C     d1sbhd        div(h)    d1tolt        wkfld152
     C                   z-add     wkfld152      d1ltsbhd
     C                   else
     C                   z-add     0             d1ltbahd
     C                   z-add     0             d1ltsbhd
     C                   endif                                                  If litters
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate farm site (in create mode only)
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1fsnm
      *
      * Must be in the business office that the user entered on
      * on the Work With.
      *
     C                   if        fsfsbo <> xxfsbo                             If mismatch
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00158'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsfsbo        mgw(6)
     C                   movea     xxfsbo        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If mismatch
      *
      * Must be a BGF farm
      *
     C                   if        fsppcd <> 'BGF'                              If not BGF
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09137'     mgid(e)
     C                   endif
     C                   endif                                                  If not BGF
     C                   endif                                                  If bad farm
     C                   endsl
      *
      * If both farm site and daily production date are valid, check that no
      * daily production record already exists for this date.
      *
     C                   if        *in31 = *off and *in32 = *off                If both ok
     C     key01         chain     hsl082a                            92
     C                   if        *in92 = *off                                 If already exists
     C                   seton                                        3132
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09136'
     C                   endif
     C                   endif                                                  If already exists
     C                   endif                                                  If both ok
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit daily production date (in create mode only)
      *---------------------------------------------------------------
      *
     C     $dpdt         begsr
      *
     C                   z-add     0             d1picdt
     C                   z-add     0             d1cdyr
     C                   z-add     0             d1cdwk
     C                   z-add     0             d1wemdy
     C                   z-add     0             wkwedt
     C                   z-add     0             wkdpdt
      *
     C                   select
     C                   when      d1dpmdy = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1dpmdy                92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1dpmdy       wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   z-add     wkccyymmdd    wkdpdt
      *
      * Date cannot be a future date.
      *
     C                   if        wkccyymmdd > wkcrupdt
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00426'
     C                   endif
     C                   endif
      *
     C                   endif                                                  If bad date
     C                   endsl
      *
      * If date is valid, retrieve the following info from the OMS
      * Calendar file. (You will call a SYNON program so you must have
      * the date in the SYNON format of CYYMMDD.)
      *   1) pic date
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmdd
     C                   else
     C                   z-add     wkyymmdd      xxcyymmdd
     C                   endif
      *
     C                   exsr      $synon
      *
      * Check the returned SYNON values.
      *
     C                   select
     C                   when      xxreturn <> *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09138'
     C                   clear                   mgw
     C                   movea     bococd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   other
      *
     C                   z-add     xxhpspicdt    d1picdt
      *
      * Find the Saturday week-ending date that corresponds to this daily
      * production date.
      *
     C                   exsr      $saturday
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      *  Use SYNON program to validate date
      *---------------------------------------------------------------
      *
     C     $synon        begsr
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm                    xxcocd
     C                   parm                    xxcyymmdd
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C                   parm      0             xxhpscdyr
     C                   parm      0             xxhpscdwk
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------
      * Retrieve the Saturday week-ending date from OMS calendar file
      *---------------------------------------------------------------------------------
      *
     C     $saturday     begsr
      *
      * You must send input parms of 1) company number and 2) date in the
      * SYNON format of CYYMMDD.
      *
      *
     C                   call      'POJNXFR'
     C                   parm      *blank        xxreturn
     C                   parm      350           xxcocd
     C                   parm      xxcyymmdd     xxcyymmddi
     C                   parm      0             xxcyymmddo
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
      * If you got a Saturday date, turn around and call another SYNON progarm
      * to get the following info:
      *   1) HPS calendar year
      *   2) HPS calendar week
      *
     C                   if        xxreturn = *blank                            If got Saturday
     C                   z-add     xxcyymmddo    xxcyymmdd
     C                   exsr      $synon
      *
     C                   if        xxreturn <> *blank                           If no hit
     C                   z-add     0             wkwedt
     C                   else
      *
     C                   z-add     xxhpscdyr     d1cdyr
     C                   z-add     xxhpscdwk     d1cdwk
      *
      * Get Saturday week-ending date into CCYYMMDD format and save for later
      * file updating.
     C                   z-add     xxcyymmdd     wkyymmdd
     C                   z-add     wkyymmdd      wkccyymmdd
     C                   if        xxcyymmddo >= 1000000
     C                   add       20000000      wkccyymmdd
     C                   else
     C                   add       19000000      wkccyymmdd
     C                   endif
      *
     C                   z-add     wkccyymmdd    wkwedt
      *
      * Get Saturday week-ending date from CCYYMMDD to MMDDYY format to display
      * on screen.
      *
     C     *iso          move      wkwedt        wkmdydate
     C                   move      wkmdydate     d1wemdy
      *
     C                   endif                                                  If another hit
     C                   endif                                                  If got Saturday
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear the fields on screen 2
      *---------------------------------------------------------------
      *
     C     $clear2       begsr
      *
     C                   z-add     0             d2mmhd
     C                   z-add     0             d2tolshd
      *
     C                   z-add     0             d2ewnlt
     C                   z-add     0             d2wnlt
     C                   z-add     0             d2totwnlt
     C                   z-add     0             d2townhd
     C                   z-add     0             d2adwn
     C                   z-add     0             d2ltwnhd
      *
     C                   z-add     0             d2arglhd
     C                   z-add     0             d2ibglhd
     C                   z-add     0             d2slglhd
     C                   z-add     0             d2ddglhd
     C                   z-add     0             d2euglhd
     C                   z-add     0             d2obglhd
      *
     C                   z-add     0             d2arsohd
     C                   z-add     0             d2ibsohd
     C                   z-add     0             d2slsohd
     C                   z-add     0             d2ddsohd
     C                   z-add     0             d2eusohd
     C                   z-add     0             d2oosohd
     C                   z-add     0             d2obsohd
      *
     C                   z-add     0             d2arbohd
     C                   z-add     0             d2slbohd
     C                   z-add     0             d2ddbohd
     C                   z-add     0             d2manhr
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Set up fields for screen 2
      *---------------------------------------------------------------
      *
     C     $set2         begsr
      *
     C                   z-add     bdmmhd        d2mmhd
      *
     C                   z-add     bdtolshd      d2tolshd
      *
     C                   z-add     bdewnlt       d2ewnlt
     C                   z-add     bdwnlt        d2wnlt
     C     bdewnlt       add       bdwnlt        d2totwnlt
     C                   z-add     bdtownhd      d2townhd
     C                   z-add     bdadwn        d2adwn
      *
     C                   z-add     bdarglhd      d2arglhd
     C                   z-add     bdibglhd      d2ibglhd
     C                   z-add     bdslglhd      d2slglhd
     C                   z-add     bdddglhd      d2ddglhd
     C                   z-add     bdeuglhd      d2euglhd
     C                   z-add     bdobglhd      d2obglhd
      *
     C                   z-add     bdarsohd      d2arsohd
     C                   z-add     bdibsohd      d2ibsohd
     C                   z-add     bdslsohd      d2slsohd
     C                   z-add     bdddsohd      d2ddsohd
     C                   z-add     bdeusohd      d2eusohd
     C                   z-add     bdoosohd      d2oosohd
     C                   z-add     bdobsohd      d2obsohd
      *
     C                   z-add     bdarbohd      d2arbohd
     C                   z-add     bdddbohd      d2ddbohd
     C                   z-add     bdslbohd      d2slbohd
     C                   z-add     bdmanhr       d2manhr
      *
      * Calculate values for the output only fields on screen two
      *
     C                   exsr      $calc2
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Subroutine to perform operator I/O for screen 2
      *---------------------------------------------------------------
      *
     C     $scrn2        begsr
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 2 to CRT
      *
     C                   write     hp1020k2
     C                   write     hp1020ec
     C                   exfmt     hp1020r2
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Process user's entry and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   move      *blank        rtncd
     C                   eval      routne = exit
      *
     C                   when      *in12 = *on                                  F12-previous
     C                   eval      routne = scrn1
      *
     C                   when      *in11 = *on                                  F11-delete
     C                   movel     delete        action
     C                   exsr      $update
      *
     C                   when      *in09 = *on                                  F9=accept
     C                   exsr      $edit1
     C                   exsr      $edit2
      *
     C                   select
     C                   when      scrn1error = yes
     C                   eval      routne = scrn1
      *
     C                   when      scrn2error = yes
     C                   eval      routne = scrn2
      *
     C                   when      error = 0
     C                   exsr      $update
     C                   endsl
     C                   other
      *
      * User has pressed ENTER on screen 2
      *
     C                   exsr      $edit2
     C                   eval      routne = scrn2
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Edit screen 2 fields
      *----------------------------------------------------------------
      *
     C     $edit2        begsr
      *
     C                   move      no            scrn2error
      *
      *
      *
      * Total mummies
      *
     C                   if        d2mmhd < 0
     C                   seton                                        51
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Total pre-wean losses
      *
     C                   if        d2tolshd < 0
     C                   seton                                        52
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * 0-15 Day Weaned Sows (aka: Early weaned sows)
      *
     C                   if        d2ewnlt < 0
     C                   seton                                        54
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * 16+ day weaned sows
      *
     C                   if        d2wnlt < 0
     C                   seton                                        55
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Total Weaned Sows (output only)
      *
     C     d2ewnlt       add       d2wnlt        d2totwnlt
      *
      *
      * Total pigs weaned
      *
     C                   if        d2townhd < 0
     C                   seton                                        56
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Average age of piglet weaned
      *
     C                   if        d2adwn < 0
     C                   seton                                        57
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Gilts arrived
      *
     C                   if        d2arglhd < 0
     C                   seton                                        59
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Transferred in bred gilts
      *
     C                   if        d2ibglhd < 0
     C                   seton                                        81
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Sows arrived
      *
     C                   if        d2arsohd < 0
     C                   seton                                        53
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Transferred in sows
      *
     C                   if        d2ibsohd < 0
     C                   seton                                        82
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Gilts sold
     C                   if        d2slglhd < 0
     C                   seton                                        70
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Sows sold
     C                   if        d2slsohd < 0
     C                   seton                                        71
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Gilts dead naturally
     C                   if        d2ddglhd < 0
     C                   seton                                        72
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Sows dead naturally
     C                   if        d2ddsohd < 0
     C                   seton                                        73
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Euthanized gilts
     C                   if        d2euglhd < 0
     C                   seton                                        74
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Euthanized sows
     C                   if        d2eusohd < 0
     C                   seton                                        78
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Transferred out bred gilts
      *
     C                   if        d2obglhd < 0
     C                   seton                                        58
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Transferred out sows
      *
     C                   if        d2oosohd < 0
     C                   seton                                        84
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Transferred out bred sows
      *
     C                   if        d2obsohd < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Boars in
     C                   if        d2arbohd < 0
     C                   seton                                        75
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Boars sold
     C                   if        d2slbohd < 0
     C                   seton                                        76
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      *
      * Boars dead
     C                   if        d2ddbohd < 0
     C                   seton                                        77
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Man hours
     C                   if        d2manhr < 0
     C                   seton                                        44
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
      * Calculate values for the output fields on screen two
      *
     C                   exsr      $calc2
      *
     C                   if        error > 0
     C                   move      yes           scrn2error
     C                   endif
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------
      * Calculate values for the output fields on screen two
      *---------------------------------------------------------------------
      *
     C     $calc2        begsr
      *
      * Calculate 'piglets weaned per litter' as:
      *    total pigs weaned /
      *         (0-15 day weaned sows + 16+ weaned sows)
      *
     C                   eval      wkwnlt = d2ewnlt + d2wnlt
     C                   if        wkwnlt <> 0
     C     d2townhd      div(h)    wkwnlt        wkfld152
     C                   z-add     wkfld152      d2ltwnhd
     C                   else
     C                   z-add     0             d2ltwnhd
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $ind - reset indicators for all screens
      *----------------------------------------------------------------
      *
     C     $ind          begsr
      *
      *
      * The record has been deleted out from under the user.
      *
     C                   if        notflg = yes
     C                   seton                                        90
     C                   endif
      *
      *  Set up for mode
      *
     C                   select
     C                   when      dfmode = create
     C                   seton                                        61
      *
     C                   when      dfmode = revise
     C                   seton                                        60
      *
     C                   when      dfmode = delete
     C                   seton                                        62
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * $update - update record
      *---------------------------------------------------------------
      *
     C     $update       begsr
      *
      * Perform deletion integrity checks:
      * 1) You cannot delete a daily record if the user has already create a
      *    weekly record for this week.
      *
     C                   if        action = delete                              If delete
     C     key02         chain     hsl092b                            92
     C                   if        *in92 = *off and error < maxmsg              If weekly
     C                   add       1             error
     C                   movel     'HS01160'     mgid(e)
     C                   endif                                                  If weekly
     C                   endif                                                  If delete
      *
      * If the user is revising or deleting, determine that the record
      * he is accessing still exists prior to attempting the update/delete.
      * Lock the record.
      *
     C                   if        error = 0 and                                If rev/delete
     C                             (action = revise or action = delete)
     C     key01         chain     hsl082a                            62
     C                   move      yes           notflg
     C                   if        *in62 = *on and error < maxmsg               If not found
     C                   add       1             error
     C                   movel     'HS09008'     mgid(e)
     C                   endif                                                  If not found
     C                   endif                                                  If rev/delete
      *
      *
      * If there are no errors, delete/revise/create
      *
     C                   if        error = 0                                    If no error
      *
      * Delete
     C                   if        action = delete                              If delete
     C                   delete    bdrec
     C                   else
      *
      * Move DSPF fields to database file fields
      *
      *  Screen 1 fields
      *
     C                   if        mode = create
     C                   movel     xxfsbo        bdfsbo
     C                   z-add     d1fscd        bdfscd
     C                   z-add     d1cdyr        bdcdyr
     C                   z-add     d1cdwk        bdcdwk
     C                   z-add     d1picdt       bdpicdt
     C                   z-add     wkwedt        bdwedt
     C                   z-add     wkdpdt        bddpdt
     C                   z-add     wkcrupdt      bdcrdt
     C                   z-add     0             bdupdt
     C                   else
     C                   z-add     wkcrupdt      bdupdt
     C                   endif
      *
     C                   z-add     d1wnsv        bdwnsv
     C                   z-add     d1lwnsv       bdlwnsv
     C                   z-add     d1rtsv        bdrtsv
     C                   z-add     d1glsv        bdglsv
      *
     C                   z-add     d1opglhd      bdopglhd
     C                   z-add     d1opsohd      bdopsohd
      *
     C                   z-add     d1abhd        bdabhd
     C                   z-add     d1glabhd      bdglabhd
     C                   z-add     d1nipqt       bdnipqt
      *
     C                   z-add     d1gllt        bdgllt
     C                   z-add     d1glbahd      bdglbahd
     C                   z-add     d1glsbhd      bdglsbhd
     C                   z-add     d1glmmhd      bdglmmhd
     C                   z-add     d1tolt        bdtolt
     C                   z-add     d1bahd        bdbahd
     C                   z-add     d1sbhd        bdsbhd
      *
      *  Screen 2 fields
     C                   z-add     d2mmhd        bdmmhd
      *
     C                   z-add     d2tolshd      bdtolshd
      *
     C                   z-add     d2ewnlt       bdewnlt
     C                   z-add     d2wnlt        bdwnlt
     C                   z-add     d2townhd      bdtownhd
     C                   z-add     d2adwn        bdadwn
      *
     C                   z-add     d2arglhd      bdarglhd
     C                   z-add     d2ibglhd      bdibglhd
     C                   z-add     d2slglhd      bdslglhd
     C                   z-add     d2ddglhd      bdddglhd
     C                   z-add     d2euglhd      bdeuglhd
     C                   z-add     d2obglhd      bdobglhd
      *
     C                   z-add     d2arsohd      bdarsohd
     C                   z-add     d2ibsohd      bdibsohd
     C                   z-add     d2slsohd      bdslsohd
     C                   z-add     d2ddsohd      bdddsohd
     C                   z-add     d2eusohd      bdeusohd
     C                   z-add     d2oosohd      bdoosohd
     C                   z-add     d2obsohd      bdobsohd
      *
     C                   z-add     d2arbohd      bdarbohd
     C                   z-add     d2ddbohd      bdddbohd
     C                   z-add     d2slbohd      bdslbohd
     C                   z-add     d2manhr       bdmanhr
      *
     C                   select
     C                   when      action = create
     C                   move      sdusr         bdcrusr
     C                   write     bdrec
     C                   other
     C                   move      sdusr         bdupusr
     C                   update    bdrec
      *
      * If a Weekly Production record exists, then update it.
      *
     C     key02         chain     hsl092b                            92
     C                   if        *in92 = *off                                 If weekly
     C                   call      'HP8002'
     C                   parm                    d1fscd
     C                   parm                    wkwedt
     C                   endif                                                  If weekly
      *
     C                   endsl
     C                   endif                                                  If delete
     C                   endif                                                  If no error
      *
      *  If there are any errors or the user is in CREATE mode, redisplay
      *  the screens. Otherwise, automatically exit.
      *
     C                   select
     C                   when      error > 0
     C                   eval      routne = scrn1
      *
     C                   when      mode = revise or mode = delete
     C                   eval      routne = exit
      *
     C                   when      mode = create
     C                   add       1             error
     C                   movel     'HS09040'     mgid(e)
     C                   eval      routne = set
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * $wrmsg - write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set           routne
     C                   endif
      *
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * $f4s1 - F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Farm site (only in create mode)
      *
     C                   select
      *
     C                   when      fld = 'D1FSCD' and *in61 = *on
     C                   call      'HP5010'
     C                   parm                    xxfsbo
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   eval      *in29 = *on
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $clmsg - clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set           routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $exit - set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * *inzsr - initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C     dfmode        parm                    mode
     C                   parm                    xxfsbo
     C     d1fscd        parm                    xxfscd
     C     wkdpdt        parm                    xxdpdt
     C     d1dpmdy       parm                    xxdpmdy
     C                   parm                    rtncd
      *
     C                   movel     mode          action
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1fscd
     C                   kfld                    wkdpdt
      *
     C     key02         klist
     C                   kfld                    d1fscd
     C                   kfld                    wkwedt
      *
      * For the retrieval of date information from the OMS Calendar file,
      * you will need the 'company' associated with the incoming business office.
      * And, you must move it to a numeric field.
      *
     C     xxfsbo        chain     hsp009                             92
     C                   if        *in92 = *off                                 If found
     C                   movel     bococd        xxcocd
     C                   endif                                                  If found
      *
      * Save date for record stamp
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkcrupdt
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /eject
