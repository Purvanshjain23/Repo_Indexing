     H/TITLE Pmt TF2 Payment Push  PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Prompt & validate record
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 01:44:18
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPWEGPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Pmt TF2 Payment Push  PV  Prompt & validate record
      *
     FPKBLCPL4IF  E           K        DISK
      * RSQ : Hog Voucher Detail       Co/BOL/Ttt/KillDt/PSts<>Y
      *
     FPKBLCPL5IF  E           K        DISK
      * RSQ : Hog Voucher Detail        SrcCode/Co/KillDt/BOL
      *
      * Long constants
     E                    @CN#    1  07  6   @CN    25
     I@BLCPXY
      * Hog Voucher Detail       Co/BOL/Ttt/KillDt/PSts<>Y
      * Renamed input format fields
     I              BLHNNB                          WAHNNB
     I              BLLWNB                          WALWNB
     I              BLG9NB                          WAG9NB
     I              BLDLNB                          WADLNB
     I              BLCNPR                          WACNPR
     I              BLCOPR                          WACOPR
     I              BLCPPR                          WACPPR
     I              BLCQPR                          WACQPR
     I              BLCRPR                          WACRPR
     I              BLAKVA                          WAAKVA
     I              BLALVA                          WAALVA
     I              BLCVPR                          WACVPR
     I              BLAMVA                          WAAMVA
     I              BLAEPC                          WAAEPC
     I              BLI6ST                          WAI6ST
     I              BLJIST                          WAJIST
     I              BLJPST                          WAJPST
     I              BLC2SS                          WAC2SS
     I              BLOTCD                          WAOTCD
     I              BLF5TX                          WAF5TX
     I              BLL5A1                          WAL5A1
     I              BLL6A1                          WAL6A1
     I              BLJQST                          WAJQST
     I              BLC4SS                          WAC4SS
     I              BLC5SS                          WAC5SS
     I              BLC3SS                          WAC3SS
     I              BLOKA1                          WAOKA1
     I              BLOLA1                          WAOLA1
     I              BLOMA1                          WAOMA1
     I              BLQ0CD                          WAQ0CD
     I              BLWSA1                          WAWSA1
     I              BLWOA1                          WAWOA1
     I              BLHFDT                          WAHFDT
     I              BLB2TM                          WAB2TM
     I              BLHMNB                          WAHMNB
     I              BLBNNB                          WABNNB
     I              BLBONB                          WABONB
     I              BLCVNB                          WACVNB
     I              BLB0DT                          WAB0DT
     I              BLABCD                          WAABCD
     I              BLAECD                          WAAECD
     I              BLAAVN                          WAAAVN
     I              BLAADT                          WAAADT
     I              BLAMTM                          WAAMTM
     I              BLAJST                          WAAJST
     I              BLAHVN                          WAAHVN
     I              BLAGVN                          WAAGVN
     I              BLABVN                          WAABVN
     I              BLABDT                          WAABDT
     I              BLABTM                          WAABTM
      *
     I@BLCPX5
      * Hog Voucher Detail        SrcCode/Co/KillDt/BOL
      * Renamed input format fields
     I              BLHNNB                          WBHNNB
     I              BLLWNB                          WBLWNB
     I              BLG9NB                          WBG9NB
     I              BLDLNB                          WBDLNB
     I              BLCNPR                          WBCNPR
     I              BLCOPR                          WBCOPR
     I              BLCPPR                          WBCPPR
     I              BLCQPR                          WBCQPR
     I              BLCRPR                          WBCRPR
     I              BLAKVA                          WBAKVA
     I              BLALVA                          WBALVA
     I              BLCVPR                          WBCVPR
     I              BLAMVA                          WBAMVA
     I              BLAEPC                          WBAEPC
     I              BLI6ST                          WBI6ST
     I              BLJIST                          WBJIST
     I              BLJPST                          WBJPST
     I              BLC2SS                          WBC2SS
     I              BLOTCD                          WBOTCD
     I              BLF5TX                          WBF5TX
     I              BLL5A1                          WBL5A1
     I              BLL6A1                          WBL6A1
     I              BLJQST                          WBJQST
     I              BLC4SS                          WBC4SS
     I              BLC5SS                          WBC5SS
     I              BLC3SS                          WBC3SS
     I              BLOKA1                          WBOKA1
     I              BLOLA1                          WBOLA1
     I              BLOMA1                          WBOMA1
     I              BLQ0CD                          WBQ0CD
     I              BLWSA1                          WBWSA1
     I              BLWOA1                          WBWOA1
     I              BLHFDT                          WBHFDT
     I              BLB2TM                          WBB2TM
     I              BLHMNB                          WBHMNB
     I              BLBNNB                          WBBNNB
     I              BLBONB                          WBBONB
     I              BLCVNB                          WBCVNB
     I              BLB0DT                          WBB0DT
     I              BLABCD                          WBABCD
     I              BLAECD                          WBAECD
     I              BLAAVN                          WBAAVN
     I              BLAADT                          WBAADT
     I              BLAMTM                          WBAMTM
     I              BLAJST                          WBAJST
     I              BLAHVN                          WBAHVN
     I              BLAGVN                          WBAGVN
     I              BLABVN                          WBABVN
     I              BLABDT                          WBABDT
     I              BLABTM                          WBABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N : MAP Oms Warehouse Code
     I                                        1   3 P1J8NB
      * N : MAP CC Company Number
     I                                    P   4   50P1HONB
      * N : MAP Oms Application Code
     I                                        6  11 P1C7CD
      * N : MAP Oms SalesPerson Code
     I                                       12  14 P1C8CD
      * N : MAP Oms Allow Multi-Company
     I                                       15  15 P1G8ST
      * N : MAP Oms Default Printer
     I                                       16  25 P1G9ST
      * N : MAP Oms Name
     I                                       26  55 P1EUTX
      * N : MAP Oms System Value Alpha
     I                                       56  95 P1EVTX
      * N : MAP Oms Access Denied (Y/N)
     I                                       96  96 P1HAST
     IP2PARM      DS
      * FLD: Company Control HPE
      * N : MAP Next Buy Order Number
     I                                    P   1   40P2BSNB
     IP3PARM      DS
      * FLD: *Arrays
      * N : MAP PRT Description
     I                                        1  25 P3ETTX
      * N : MAP PRT Printer Device
     I                                       26  35 P3ACVN
      * N : MAP PRT Hold Output Sts
     I                                       36  39 P3AKST
      * N : MAP PRT Save Output Sts
     I                                       40  43 P3AMST
      * N : MAP PRT Copies
     I                                       44  450P3AKNB
      * N : MAP PRT Night Queue Run Sts
     I                                       46  46 P3ALST
      * N : MAP PRT Night Queue
     I                                       47  56 P3AIVN
     IP4PARM      DS
      * N :  System Value Alpha    USR
     I                                        1  40 P4KBTX
     IP5PARM      DS
      * N :  Push Type
     I                                        1   1 P5KTSS
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'SBM TF2 Payment Push'
      * PRT Printer Device
     I                                        1  10 ZA0001
      * PRT Hold Output Sts
     I                                       11  14 ZA0002
      * PRT Save Output Sts
     I                                       15  18 ZA0003
      * PRT Copies
     I                                    P  19  200ZA0004
      * PRT Night Queue
     I                                       21  30 ZA0005
      * BOH Company Number
     I                                    P  31  320ZA0006
      * Oms System Value Alpha
     I                                       33  72 ZA0007
      * Push Type
     I                                       73  73 ZA0008
      * Message data for 'Push To records Not Found'
      * CC Company Number
     I                                    P   1   20ZA0009
      * Message data for 'Co# not setup for Push'
      * CC Company Number
     I                                    P   1   20ZA0010
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0011
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Enable PUTOVR
     C                     SETON                     86
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: User defined action
      * Pmt Print Options Size XF - STR Order Management Sys  * 
     C                     CALL 'PDV8PVR'              90  Pmt Print Optio
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,001   WQ0001 25        PRT Description
     C           P3ACVN    PARM P3ACVN    WQ0002 10        PRT Printer Dev
     C           P3AKST    PARM P3AKST    WQ0003  4        PRT Hold Output
     C           P3AMST    PARM P3AMST    WQ0004  4        PRT Save Output
     C           P3AKNB    PARM P3AKNB    WQ0005  20       PRT Copies
     C                     PARM 'N'       WQ0006  1        PRT Night Queue
     C           P3AIVN    PARM P3AIVN    WQ0007 10        PRT Night Queue
     C                     PARM 'P/S'     WQ0008  6        Oms Application
     C                     PARM '1'       WQ0009  1        Paper Type Usr-
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDV8PVR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * If F3 pressed from Print Options screen, remain on this screen
      * CASE: PGM.*Return code is *User QUIT requested
     C           W0RTN     IFEQ @CN,002                    *IF
     C                     GOTO DAEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVELP3ACVN    ZA0001           PRT Printer Dev
     C                     MOVELP3AKST    ZA0002           PRT Hold Output
     C                     MOVELP3AMST    ZA0003           PRT Save Output
     C                     Z-ADDP3AKNB    ZA0004           PRT Copies
     C                     MOVELP3AIVN    ZA0005           PRT Night Queue
     C                     Z-ADDP1HONB    ZA0006           CC Company Numb
     C                     MOVELP1EVTX    ZA0007           Oms System Valu
     C                     MOVEL'M'       ZA0008           Push Type
      *
      * Execute message
     C                     MOVELZADFMF    ZAMSGF
     C                     CALL 'Y2EXMCC'              90  *
     C                     PARM *BLANK    W0RTN   7        Return code
     C                     PARM 'PRK1459' ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSGF
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN   7
     C                     END
      *
     C           W0RTN     IFNE *BLANK
      * Error detected during execution
     C                     SETON                     99    *
     C                     END
      *
     C                     END                             *FI
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Select existing record
     C                     EXSR VACKRL
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate relations
      * Check count of Regular Push and Repayment Push records
      * CASE: Push Rcds-Regular<>0 AND Push Rcds-Repayment<>0
      *  - c1 AND c2
      *   |- c1    : DTL.Nbr of Push Rcds-Regular is Not Zero
      *   |- c2    : DTL.Nbr of Push Rcds-Repaymnt is Not Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DAONZ    IFNE *ZERO                      *IF
     C           #DAPNZ    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Send message 'Push Payment Records Err'
     C                     MOVEL'PRK1507' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       YL0001           Error found Y/N
     C                     ELSE
      * CASE: DTL.Nbr of Push Rcds-Regular is Not Zero
     C           #DAONZ    IFNE *ZERO                      *IF
     C                     Z-ADD*ZEROS    ZQ      50
     C           @CN,003   CAT  @CN,004:ZQ#DOBTX    P      Text descriptio
     C                     MOVEL'Y'       YL0002           Protect Ref fie
     C                     ELSE
      * CASE: DTL.Nbr of Push Rcds-Repaymnt is Not Zero
     C           #DAPNZ    IFNE *ZERO                      *IF
     C                     Z-ADD*ZEROS    ZQ      50
     C           @CN,005   CAT  @CN,006:ZQ#DOBTX    P      Text descriptio
     C                     MOVEL'Y'       YL0003           Protect field
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'No records ready to Push'
     C                     MOVEL'PRK1508' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       YL0001           Error found Y/N
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Chk Avail Push RcdsRT - Hog Voucher Detail  * 
     C                     EXSR SARVGN
      * SNDERRMSG: Push To Records not found
      * CASE: LCL.Record Found USR is Record Not Found
     C           YL0004    IFEQ 'N'                        *IF
      * Setup message data for message
     C                     Z-ADD#DY9A1    ZA0009           Push To Company
      * Send message 'Push To records Not Found'
     C                     MOVEL'PRK1458' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Set screen conditioning indicators
     C                     EXSR GADSA1
      * Update screen time
     C                     TIME           ##TME
      * Enable PUTOVR
     C                     SETON                         86*
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'PKVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for screen
      *================================================================
     C                     MOVEL'0'       *IN79
     C           #DY9A1    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           YL0003    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           YL0001    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     MOVELP3ETTX    #PETTX           PRT Description
     C                     MOVELP3ACVN    #PACVN           PRT Printer Dev
     C                     MOVELP3AKST    #PAKST           PRT Hold Output
     C                     MOVELP3AMST    #PAMST           PRT Save Output
     C                     Z-ADDP3AKNB    #PAKNB           PRT Copies
     C                     MOVELP3ALST    #PALST           PRT Night Queue
     C                     MOVELP3AIVN    #PAIVN           PRT Night Queue
     C                     MOVELP1J8NB    #PJ8NB           Oms Warehouse C
     C                     MOVELP1C7CD    #PC7CD           Oms Application
     C                     Z-ADDP2BSNB    #1BSNB           Next Buy Order
     C                     MOVELP1C8CD    #PC8CD           Oms SalesPerson
     C                     MOVELP1G8ST    #PG8ST           Oms Allow Multi
     C                     MOVELP1G9ST    #PG9ST           Oms Default Pri
     C                     MOVELP1EUTX    #PEUTX           Oms Name
     C                     Z-ADD*ZERO     #1B1DT           Current Kill Da
     C                     MOVELP1EVTX    #PEVTX           Oms System Valu
     C                     Z-ADD*ZERO     #1B2DT           Next Kill Date
     C                     MOVELP1HAST    #PHAST           Oms Access Deni
     C                     Z-ADD*ZERO     #1H4NB           Last Drive Card
     C                     Z-ADD*ZERO     #1K3NB           Last Tattoo Nbr
     C                     Z-ADD*ZERO     #1CDDT           Current Product
     C                     Z-ADD*ZERO     #1CEDT           Next Production
     C                     MOVEL*BLANK    #1AAVN           RS User Changed
     C                     Z-ADD*ZERO     #1AADT           RS Date Changed
     C                     Z-ADD*ZERO     #1AMTM           RS Time Changed
     C                     MOVEL*BLANK    #1AJST           RS Record Statu
     C                     MOVEL*BLANK    #1AHVN           RS Job
     C                     MOVEL*BLANK    #1AGVN           RS Program
     C                     MOVEL*BLANK    #1ABVN           RS User Added
     C                     Z-ADD*ZERO     #1ABDT           RS Date Added
     C                     Z-ADD*ZERO     #1ABTM           RS Time Added
     C                     Z-ADDP1HONB    #1HONB           CC Company Numb
     C                     Z-ADD*ZERO     #DY9A1           Push To Company
     C                     Z-ADD*ZERO     #DAONZ           Nbr of Push Rcd
     C                     Z-ADD*ZERO     #DAPNZ           Nbr of Push Rcd
     C                     MOVEL*BLANK    #DOBTX           Text descriptio
      * USER: Load screen
     C                     Z-ADDP1HONB    #1HONB           CC Company Numb
      * Retrieve the Push To Company number from the Company Values file
      * Rtv Company Value Nbr XF - STR Order Management Sys  * HPEPSHTOCO
     C                     CALL 'PDHGXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HONB    WQ0015  30       BOH Company Num
     C                     PARM @CN,007   WQ0016 10        Company Value C
     C           #DY9A1    PARM *ZERO     WQ0017 155       System Value Nu
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHGXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * SNDERRMSG: Push To Company not found
      * CASE: Record not found OR Push To Company = 0
      *  - NOTc1 OR c2
      *   |- c1    : PGM.*Return code is *Normal
      *   |- c2    : DTL.Push To Company is *ZERO
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           #DY9A1    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Setup message data for message
     C                     Z-ADD#1HONB    ZA0010           CC Company Numb
      * Send message 'Co# not setup for Push'
     C                     MOVEL'PRK1457' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
      * Rtv Count Push records RT - Hog Voucher Detail  * 
     C                     EXSR SBRVGN
      * Check count of Regular Push and Repayment Push records
      * CASE: Push Rcds-Regular<>0 AND Push Rcds-Repayment<>0
      *  - c1 AND c2
      *   |- c1    : DTL.Nbr of Push Rcds-Regular is Not Zero
      *   |- c2    : DTL.Nbr of Push Rcds-Repaymnt is Not Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #DAONZ    IFNE *ZERO                      *IF
     C           #DAPNZ    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Send message 'Push Payment Records Err'
     C                     MOVEL'PRK1507' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       YL0001           Error found Y/N
     C                     ELSE
      * CASE: DTL.Nbr of Push Rcds-Regular is Not Zero
     C           #DAONZ    IFNE *ZERO                      *IF
     C                     Z-ADD*ZEROS    ZQ      50
     C           @CN,003   CAT  @CN,004:ZQ#DOBTX    P      Text descriptio
     C                     MOVEL'Y'       YL0002           Protect Ref fie
     C                     ELSE
      * CASE: DTL.Nbr of Push Rcds-Repaymnt is Not Zero
     C           #DAPNZ    IFNE *ZERO                      *IF
     C                     Z-ADD*ZEROS    ZQ      50
     C           @CN,005   CAT  @CN,006:ZQ#DOBTX    P      Text descriptio
     C                     MOVEL'Y'       YL0003           Protect field
     C                     ELSE
      * CASE: *OTHERWISE
      * Send message 'No records ready to Push'
     C                     MOVEL'PRK1508' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     MOVEL'Y'       YL0001           Error found Y/N
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1HONB    WQ0018  30       CC Company Numb
     C           #PEUTX    PARM *BLANK    WQ0019 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0020  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD#1HONB    ZA0011           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    YN0001           Invalid Y/N USR
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Chk Avail Push RcdsRT - Hog Voucher Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       YL0004           Record Found US
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAHMNB    WQSA01           BOH Company Num
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           BOH Company Num
      * Setup key
     C                     Z-ADD#1HONB    WQSA01           BOH Company Num
      * Establish starting position
     C           KRSSA     SETLL@BLCPXY                    *
     C           KRSSA     READE@BLCPXY                  90*
      * Data record not found
     C   90                MOVEL'PRK0101' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - NOTc1
      *   |- c1    : DB1.VCD Source Code is Triumph Member (Owner)
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAOTCD    IFEQ 'TO'                       *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE:
      *  - NOTc1
      *   |- c1    : DB1.VCD BO Type is Contract
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAJPST    IFEQ 'C'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0004           Record Found US
     C                     GOTO SAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSA     READE@BLCPXY                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Count Push records RT - Hog Voucher Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     #DAONZ           Nbr of Push Rcd
     C                     Z-ADD*ZERO     #DAPNZ           Nbr of Push Rcd
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBOTCD    WQSB01           VCD Source Code
     C           *LIKE     DEFN WBHMNB    WQSB02           BOH Company Num
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           VCD Source Code
     C                     KFLD           WQSB02           BOH Company Num
      * Setup key
     C                     MOVE *BLANK    WQSB01           VCD Source Code
     C                     MOVEL'TO'      WQSB01           VCD Source Code
     C                     Z-ADDP1HONB    WQSB02           BOH Company Num
      * Establish starting position
     C           KRSSB     SETLL@BLCPX5                    *
     C           KRSSB     READE@BLCPX5                  90*
      * Data record not found
     C   90                MOVEL'PRK0101' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Count records where the Push Payment Status = N or blank
      * CASE: DB1.VCD Push Payment Status is Not Yes
     C           WBJQST    IFEQ *BLANK                     *IF
     C           WBJQST    OREQ 'N'
      * Increment Regular Push and Repayment Push records
      * CASE: DB1.VCD Repayment Flag is Repayment
     C           WBC4SS    IFEQ 'R'                        *IF
     C                     ADD  1         #DAPNZ           Nbr of Push Rcd
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  1         #DAONZ           Nbr of Push Rcd
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@BLCPX5                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * E9904  JBB 09/06/17 - Push Payments from 440 to 961
      * - Remove Kill Date from screen
      * E9904  JBB 08/02/17 - Push Payments from 440 to 961
      * - Submit process using an executable message.
      * E9904  JBB 07/31/17 - Push Payments from 440 to 961
      * - This new function will prompt the user to process the push of
      *   payment information from company 440 to company 961.
      * E13291 JBB 08/02/17 - Push Payments from 440 to 961
      * - Added Push Type parameter to this function.  This parameter wil
      *   be passed on the the Push to Pay driver program.
      * H16853 ISE 11/04/2020 - Recompiled due to change in Buy Order Num
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C           YPMTFD    IFEQ '#1HONB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1HONB' defaulted for 'CC Company Number'.
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1BSNB' defaulted for 'Next Buy Order Number'.
      * Field '(DTL) #1B1DT' defaulted for 'Current Kill Date'.
      * Field '(DTL) #1B2DT' defaulted for 'Next Kill Date'.
      * Field '(DTL) #1H4NB' defaulted for 'Last Drive Card Number'.
     C                     CALL 'PKLFSRR'              90  Sel Company Con
     C                     PARM *BLANK    W0RTN   7
     C           #1HONB    PARM #1HONB    WQ0010  30       CC Company Numb
     C           #1BSNB    PARM *ZERO     WQ0011  70       Next Buy Order
     C           #1B1DT    PARM *ZERO     WQ0012  70       Current Kill Da
     C           #1B2DT    PARM *ZERO     WQ0013  70       Next Kill Date
     C           #1H4NB    PARM *ZERO     WQ0014  30       Last Drive Card
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKLFSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1HONB    IFNE *ZERO                      CC Company Numb
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     END
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1J8NB           Oms Warehouse C
     C                     Z-ADD*ZERO     P1HONB           CC Company Numb
     C                     MOVEL*BLANK    P1C7CD           Oms Application
     C                     MOVEL*BLANK    P1C8CD           Oms SalesPerson
     C                     MOVEL*BLANK    P1G8ST           Oms Allow Multi
     C                     MOVEL*BLANK    P1G9ST           Oms Default Pri
     C                     MOVEL*BLANK    P1EUTX           Oms Name
     C                     MOVEL*BLANK    P1EVTX           Oms System Valu
     C                     MOVEL*BLANK    P1HAST           Oms Access Deni
     C                     Z-ADD*ZERO     P2BSNB           Next Buy Order
     C                     MOVEL*BLANK    P3ETTX           PRT Description
     C                     MOVEL*BLANK    P3ACVN           PRT Printer Dev
     C                     MOVEL*BLANK    P3AKST           PRT Hold Output
     C                     MOVEL*BLANK    P3AMST           PRT Save Output
     C                     Z-ADD*ZERO     P3AKNB           PRT Copies
     C                     MOVEL*BLANK    P3ALST           PRT Night Queue
     C                     MOVEL*BLANK    P3AIVN           PRT Night Queue
     C                     MOVEL*BLANK    P4KBTX           System Value Al
     C                     MOVEL*BLANK    P5KTSS           Push Type
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAHNNB           VCH Company num
     C                     Z-ADD*ZERO     WALWNB           VCH Batch Numbe
     C                     Z-ADD*ZERO     WAG9NB           VCH Header Numb
     C                     Z-ADD*ZERO     WADLNB           VCD Line
     C                     Z-ADD*ZERO     WACNPR           VCD Base Mkt Pr
     C                     Z-ADD*ZERO     WACOPR           VCD Sort Disc A
     C                     Z-ADD*ZERO     WACPPR           VCD Yield Gain/
     C                     Z-ADD*ZERO     WACQPR           VCD Base Carcas
     C                     Z-ADD*ZERO     WACRPR           VCD LN Add on/D
     C                     Z-ADD*ZERO     WAAKVA           VCD Gross Amt
     C                     Z-ADD*ZERO     WAALVA           VCD Deduction A
     C                     Z-ADD*ZERO     WACVPR           VCD Less Split
     C                     Z-ADD*ZERO     WAAMVA           VCD Net Amt
     C                     Z-ADD*ZERO     WAAEPC           VCD Split Perce
     C                     Z-ADD*ZERO     WAL5A1           VCD Received He
     C                     Z-ADD*ZERO     WAL6A1           VCD Head Killed
     C                     Z-ADD*ZERO     WAOKA1           VCD Unused Head
     C                     Z-ADD*ZERO     WAOLA1           VCD UnUsed Head
     C                     Z-ADD*ZERO     WAOMA1           VCD UnUsed Head
     C                     Z-ADD*ZERO     WAWSA1           MGL Voucher Num
     C                     Z-ADD*ZERO     WAWOA1           MGL Invoice Bat
     C                     Z-ADD*ZERO     WAHFDT           MGL Process to
     C                     Z-ADD*ZERO     WAB2TM           MGL Process to
     C                     Z-ADD*ZERO     WAHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WABNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WABONB           BOL Load Number
     C                     Z-ADD*ZERO     WACVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     WAB0DT           TH Kill Date
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Error found Y/N
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Protect Ref fields
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Protect field
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Record Found USR
     C                     MOVEL*BLANK    YL0004  1
      * Define null work field Invalid Y/N USR
     C                     MOVEL*BLANK    YN0001  1
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * Val Application/User  IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                     CALL 'PDGXXFR'              90  Val Application
     C                     PARM *BLANK    W0RTN   7
     C           P1J8NB    PARM *BLANK    WQ0021  3        Oms Warehouse C
     C           P1HONB    PARM *ZERO     WQ0022  30       CC Company Numb
     C                     PARM 'HPE'     WQ0023  6        Oms Application
     C           P1C8CD    PARM *BLANK    WQ0024  3        Oms SalesPerson
     C           P1G8ST    PARM *BLANK    WQ0025  1        Oms Allow Multi
     C           P1G9ST    PARM *BLANK    WQ0026 10        Oms Default Pri
     C           P1EUTX    PARM *BLANK    WQ0027 30        Oms Name
     C           P1EVTX    PARM *BLANK    WQ0028 40        Oms System Valu
     C           P1HAST    PARM *BLANK    WQ0029  1        Oms Access Deni
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
      * Send message 'Access Denied for User'
     C                     MOVEL'PRK0298' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to Company  US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP1EVTX    ##CMP
     C                     END                             *FI
      * If OMS Access Denied is Yes, exit program immediately
      * CASE: PAR.Oms Access Denied (Y/N) is Yes
     C           P1HAST    IFEQ 'Y'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     MOVEL'N'       YL0003           Protect field
     C                     MOVEL'N'       YL0002           Protect Ref fie
     C                     MOVEL'N'       YL0001           Error found Y/N
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Payment Push
00002 Y2U9999
00003           Ready for Regul
00004 ar Push to Pay.
00005          Ready for Repaym
00006 ent Push to Pay.
00007 HPEPSHTOCO
