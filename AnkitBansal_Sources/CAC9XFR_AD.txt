// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for CAC9XFR
// ?Date: 14.08.2025 Time: 03:26:24
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// PAR.Due Date = PAR.Transaction Date
PAR.Due_Date = PAR.Transaction_Date;

// PAR.Discount Due Date = PAR.Transaction Date
PAR.Discount_Due_Date = PAR.Transaction_Date;

// PAR.Discount Amount = CON.*ZERO
PAR.Discount_Amount = *ZERO;

// WRK.Transaction Amount = PAR.Transaction Amount
WRK.Transaction_Amount = PAR.Transaction_Amount;

EXECUTE FUNCTION(RTV Terms All          RT) TYPE(RTVOBJ) FILE(CAAOREP)          AC1103803;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Terms_Code);
PARAMETER(PAR.Terms_Type);
PARAMETER(PAR.Net_Due_Days);
PARAMETER(PAR.Discount_Due_Days);
PARAMETER(PAR.Terms_Discount_Percent);
PARAMETER(PAR.Cutoff_Day);
PARAMETER(PAR.Months_to_add_before_Cuto);
PARAMETER(PAR.Disc_Due_Day_before_Cuto);
PARAMETER(PAR.Net_Due_Day_before_Cutoff);
PARAMETER(PAR.Months_to_add_after_Cutof);
PARAMETER(PAR.Disc_Due_Day_after_Cutof);
PARAMETER(PAR.Net_Due_Day_after_Cutoff);
PARAMETER(PAR.Discount_Due_Date_Calenda);
PARAMETER(PAR.USR_Due_Date_ATR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?>>Save fields for use in application
 MOVE *ALL (To: PAR From: DB1);

}


//?Quit if no terms code found
CASE;

// IF PGM.*Return code is Terms not found
IF PGM.*Return_code = 'USR0037';

QUIT;

ENDIF;

//?Calculate discount amount for transaction amount
EXECUTE FUNCTION(CLC Terms Discount Amt IF) TYPE(EXCINTFUN)                     AC1103807;
PARAMETER(PAR.Transaction_Amount);
PARAMETER(PAR.Terms_Discount_Percent);
PARAMETER(PAR.Discount_Amount);
{
 //?Execute internal function

 // PAR.Terms Discount Percent = PAR.Terms Discount Percent / CON.100 *Rounded
 PAR.Terms_Discount_Percent = PAR.Terms_Discount_Percent / 100 'H';

 // PAR.Terms Discount Amount = PAR.Transaction Amount * PAR.Terms Discount Percent
 PAR.Terms_Discount_Amount = PAR.Transaction_Amount * PAR.Terms_Discount_Percent 'H';

}


//?Calculate terms type 01-Fixed days
CASE;

// IF PAR.Terms Type is Fixed Days
IF PAR.Terms_Type = '1';

//?Discount due date
// PAR.Discount Due Date = PAR.Transaction Date + PAR.Discount Due Days *DAYS
PAR.Discount_Due_Date = DATEINCR(PAR.Transaction_Date PAR.Discount_Due_Days 'DY' 1111111           +
'NONE' 'N' 1);

//?Net due date
// PAR.Due Date = PAR.Transaction Date + PAR.Net Due Days *DAYS
PAR.Due_Date = DATEINCR(PAR.Transaction_Date PAR.Net_Due_Days 'DY' 1111111 'NONE' 'N' 1);

ENDIF;

//?Calculate terms type 02-multi due days
CASE;

// IF PAR.Terms Type is Multidue Days
IF PAR.Terms_Type = '2';

EXECUTE FUNCTION(CLC Terms Type 2       IF) TYPE(EXCINTFUN)                     AC1324369;
PARAMETER(PAR.Transaction_Date);
PARAMETER(PAR.Cutoff_Day);
PARAMETER(PAR.Months_to_add_before_Cuto);
PARAMETER(PAR.Disc_Due_Day_before_Cuto);
PARAMETER(PAR.Net_Due_Day_before_Cutoff);
PARAMETER(PAR.Months_to_add_after_Cutof);
PARAMETER(PAR.Disc_Due_Day_after_Cutof);
PARAMETER(PAR.Net_Due_Day_after_Cutoff);
PARAMETER(PAR.Discount_Due_Date);
PARAMETER(PAR.Due_Date);
{
 //?Execute internal function

 //?Compute Due Date
 DO;

 // PAR.Day of Month USR = PAR.Transaction Date *DAY OF MONTH
 PAR.Day_of_Month_USR = DATEDTLS(PAR.Transaction_Date 'DM' 1111111 'NONE' 'N' 1);

 CASE;

 // IF PAR.Day of Month USR LE PAR.Cutoff Day
 IF PAR.Day_of_Month_USR <= PAR.Cutoff_Day;

 //?Before Cut-off.
 DO;

 //?Add "Months to Add Before Cutoff" to transaction date.
 // PAR.Working Date USR = PAR.Transaction Date + PAR.Months to add before Cuto *MON
 PAR.Working_Date_USR = DATEINCR(PAR.Transaction_Date PAR.Months_to_add_before_Cuto 'MO'
 1111111 'NONE' 'N' 1);

 //?Change day to "Net Due Day before Cutoff".
 // PAR.Day (Alpha) USR = CVTVAR(PAR.Net Due Day before Cutoff)
 PAR.Day_Alpha_USR = CVTVAR(PAR.Net_Due_Day_before_Cutoff);

 // PAR.Date (Alpha) USR = CVTVAR(PAR.Working Date USR)
 PAR.Date_Alpha_USR = CVTVAR(PAR.Working_Date_USR);

 // PAR.Date (Alpha) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.1,CON.5)
 PAR.Date_Alpha_USR = SUBSTRING(PAR.Date_Alpha_USR:1:5);

 // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day (Alpha) USR,CON.*ZERO
 PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Alpha_USR (*ZERO);

 //?Convert "Working Date" to "Due Date".
 // PAR.Due Date = CVTVAR(PAR.Date (Alpha) USR)
 PAR.Due_Date = CVTVAR(PAR.Date_Alpha_USR);

 ENDDO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?After Cut-off.
 DO;

 //?Add "Months to Add After Cutoff" to transaction date.
 // PAR.Working Date USR = PAR.Transaction Date + PAR.Months to add after Cutof *MON
 PAR.Working_Date_USR = DATEINCR(PAR.Transaction_Date PAR.Months_to_add_after_Cutof 'MO'
 1111111 'NONE' 'N' 1);

 //?Change day to "Net Due Day after Cutoff".
 // PAR.Day (Alpha) USR = CVTVAR(PAR.Net Due Day after Cutoff)
 PAR.Day_Alpha_USR = CVTVAR(PAR.Net_Due_Day_after_Cutoff);

 // PAR.Date (Alpha) USR = CVTVAR(PAR.Working Date USR)
 PAR.Date_Alpha_USR = CVTVAR(PAR.Working_Date_USR);

 // PAR.Date (Alpha) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.1,CON.5)
 PAR.Date_Alpha_USR = SUBSTRING(PAR.Date_Alpha_USR:1:5);

 // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day (Alpha) USR,CON.*ZERO
 PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Alpha_USR (*ZERO);

 //?Convert "Working Date" to "Due Date".
 // PAR.Due Date = CVTVAR(PAR.Date (Alpha) USR)
 PAR.Due_Date = CVTVAR(PAR.Date_Alpha_USR);

 ENDDO;

 ENDIF;

 ENDDO;

 //?Compute Discount Due Date
 DO;

 // PAR.Day of Month USR = PAR.Transaction Date *DAY OF MONTH
 PAR.Day_of_Month_USR = DATEDTLS(PAR.Transaction_Date 'DM' 1111111 'NONE' 'N' 1);

 CASE;

 // IF PAR.Day of Month USR LE PAR.Cutoff Day
 IF PAR.Day_of_Month_USR <= PAR.Cutoff_Day;

 //?Before Cut-off.
 DO;

 //?Add "Months to Add Before Cutoff" to transaction date.
 // PAR.Working Date USR = PAR.Transaction Date + PAR.Months to add before Cuto *MON
 PAR.Working_Date_USR = DATEINCR(PAR.Transaction_Date PAR.Months_to_add_before_Cuto 'MO'
 1111111 'NONE' 'N' 1);

 //?Change day to "Net Due Day before Cutoff".
 // PAR.Day (Alpha) USR = CVTVAR(PAR.Disc. Due Day before Cuto)
 PAR.Day_Alpha_USR = CVTVAR(PAR.Disc_Due_Day_before_Cuto);

 // PAR.Date (Alpha) USR = CVTVAR(PAR.Working Date USR)
 PAR.Date_Alpha_USR = CVTVAR(PAR.Working_Date_USR);

 // PAR.Date (Alpha) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.1,CON.5)
 PAR.Date_Alpha_USR = SUBSTRING(PAR.Date_Alpha_USR:1:5);

 // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day (Alpha) USR,CON.*ZERO
 PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Alpha_USR (*ZERO);

 //?Convert "Working Date" to "Due Date".
 // PAR.Discount Due Date = CVTVAR(PAR.Date (Alpha) USR)
 PAR.Discount_Due_Date = CVTVAR(PAR.Date_Alpha_USR);

 ENDDO;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?After Cut-off.
 DO;

 //?Add "Months to Add After Cutoff" to transaction date.
 // PAR.Working Date USR = PAR.Transaction Date + PAR.Months to add after Cutof *MON
 PAR.Working_Date_USR = DATEINCR(PAR.Transaction_Date PAR.Months_to_add_after_Cutof 'MO'
 1111111 'NONE' 'N' 1);

 //?Change day to "Net Due Day after Cutoff".
 // PAR.Day (Alpha) USR = CVTVAR(PAR.Disc. Due Day after Cutof)
 PAR.Day_Alpha_USR = CVTVAR(PAR.Disc_Due_Day_after_Cutof);

 // PAR.Date (Alpha) USR = CVTVAR(PAR.Working Date USR)
 PAR.Date_Alpha_USR = CVTVAR(PAR.Working_Date_USR);

 // PAR.Date (Alpha) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.1,CON.5)
 PAR.Date_Alpha_USR = SUBSTRING(PAR.Date_Alpha_USR:1:5);

 // PAR.Date (Alpha) USR = CONCAT(PAR.Date (Alpha) USR,PAR.Day (Alpha) USR,CON.*ZERO
 PAR.Date_Alpha_USR = PAR.Date_Alpha_USR + PAR.Day_Alpha_USR (*ZERO);

 //?Convert "Working Date" to "Due Date".
 // PAR.Discount Due Date = CVTVAR(PAR.Date (Alpha) USR)
 PAR.Discount_Due_Date = CVTVAR(PAR.Date_Alpha_USR);

 ENDDO;

 ENDIF;

 ENDDO;

}


ENDIF;

//?Calculate terms type 03 - due date
CASE;

// IF PAR.Terms Type is Due Date
IF PAR.Terms_Type = '3';

// PAR.Due Date = PAR.USR Due Date - ATR
PAR.Due_Date = PAR.USR_Due_Date_ATR;

// PAR.Discount Due Date = PAR.Discount Due Date Calenda
PAR.Discount_Due_Date = PAR.Discount_Due_Date_Calenda;

ENDIF;

