     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO228
      * TITLE:       Byproduct--Split 26010 to 28063
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     01/13/11
      *
      * FUNCTION:    This program splits dollars/pounds from Item 26010-Pork Boneless
      *              Shoulder Picnic Reg to Item 28063-Pk Bnls Picnic Cush Meat.
      *              This is a split from a Converted Item to a ByProduct Item.
      *
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES PRANPRPR IN TFP010
      *
      *
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     fomfarel1  if   e           k disk
      *  Product class
      *
      *
     Fppaorel1  if   e           k disk
      *  TF Margin adjustment group detail
      *
      *
     frol122a   if   e           k disk
      *  Byproduct detail
      *
      *
     ftfl010a   if   e           k disk
      *  Weekly product revenue detail
      *
      *
     ftfp019    o    e           k disk
      *  Product exceptions
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     d wk28063         s                   like(yditcd) inz(28063)
     d wk26010         s                   like(yditcd) inz(26010)
     d wkpr            s             15  6
      *
      *
      * Seaboard
     d wkslb           s                   like(ydapulb)
     d wksam           s                   like(ydapulb)
      *
      * Triumph
     d wktlb           s                   like(ydapulb)
     d wktam           s                   like(ydapulb)
      *
      *
      * Parms
     D xxsn            s              7  0
     D xxpfcd          s              1
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldpfcd                 1      1
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Calc a 'Produced Value Per Pound' for 'from' Item 26010 to use in calc'ing
      * Split $$$. Only continue if you have a Produced Value Amount per Lb.
      *
     C                   exsr      $value
     C                   if        wkpr <> 0                                    If produced 26010
      *
      *
      * Retrieve the Byproduct Detail record for this Week for byproduct Item 28063.
      * Item 28063 is the Item that we 'split' to (ie: increase).
      *
     C     key01         chain     rol122a                            92
     C                   if        *in92 = *off                                 If hit
      *
      *             Calc the Split Lbs as: Start Weight - Produced Lbs
      *
     C                   eval      wkslb = ydspuslb - ydspulb
     C                   eval      wktlb = ydtpuslb - ydtpulb
      *
      *             If you have Split pounds, continue:
      *
     C                   if        wkslb = 0 and wktlb = 0
     C                   else
     C                   exsr      $process
     C                   endif
     C                   endif                                                  If hit
     C                   endif                                                  If produced 26010
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Process the splits
      *-----------------------------------------------------------------------------------
      *
     C     $process      begsr
      *
      * Get a Product Exception Number (system-assigned).
      * We will use this for both of our Exception records (Split From and Split To).
      *
     C                   call      'TF810'
     C                   parm      ldpfcd        xxpfcd
     C                   parm      0             xxsn
      *
      * Calc the Split $$$ as:
      *  Split Lbs * the Produced Price per LB for 'From' Item 26010
      *
     C                   eval(h)   wksam = wkslb * wkpr
     C                   eval(h)   wktam = wktlb * wkpr
      *
      * Write the 2 "split" records.
      *
     C                   exsr      $increase
     C                   exsr      $decrease
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------------------------
      * Write the record to increase the values for ByProduct Item 28063 (The 'split to' record)
      *--------------------------------------------------------------------------------------------
      *
     C     $increase     begsr
      *
      * Write a record for the pounds and $$$ that will be added to Item 28063.
      * Use the Item's own information to write the record.
      *
     C                   z-add     ydwedt        pewedt
     C                   move      ydtfclcd      petfclcd
     C                   move      ydtfcgcd      petfcgcd
     C                   move      ydcgcd        pecgcd
     C                   move      ydsgcd        pesgcd
     C                   move      ydmixfl       pemixfl
     C                   move      ydmixgrp      pemixgrp
     C                   z-add     yditcd        peprcd
     C                   movel     ydittycd      peitycd
     C                   z-add     ydistycd      peistycd
     C                   z-add     ydisgrcd      peisgrcd
     C                   z-add     ydisclcd      peisclcd
     C                   move      ydisclds      peisclds
      *
      *            SBD:
     C                   z-add     wkslb         pesexpulb
     C                   z-add     wksam         pesexpuam
      *            TF:
     C                   z-add     wktlb         petexpulb
     C                   z-add     wktam         petexpuam
      *
      * Setup Exception Comment to include the From Item Code
      *
     C                   eval      peexcom = 'Split from: ' + '26010'
      *
      * Write the Exception record
      *
     C                   exsr      $wrt019
      *
      * Call the program to write the Product Exception record to the
      * ByProduct Detail file.
      *
     C                   call      'RO220'
     C                   parm                    xxsn
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------------------------
      * Write the record to decrease the values for CVB Item 26010
      *--------------------------------------------------------------------------------------------
      *
     C     $decrease     begsr
      *
     C                   z-add     wk26010       peprcd
      *
      * Retrieve some fields using the Weekly Revenue Detail record
      *
     C     key03         chain     tfl010a                            92
     C                   if        *in92 = *off                                 If tfp010 hit
     C                   move      prmixfl       pemixfl
     C                   move      prvolfl       pevolfl
     C                   move      prtfcgcd      petfcgcd
     C                   move      prtfclcd      petfclcd
     C                   z-add     pristycd      peistycd
     C                   z-add     prisgrcd      peisgrcd
     C                   z-add     prisclcd      peisclcd
     C                   move      prcgcd        pecgcd
     C                   move      pritycd       peitycd
     C                   move      prcgcd        pesgcd
      *
     C     key04         chain     ppaorel1                           92
     C                   if        *in92 = *off
     C                   move      aoi1t1        pemixgrp
     C                   else
     C                   move      *blank        pemixgrp
     C                   endif
     C                   endif                                                  If tfp010 hit
      *
      * Retrieve Description for Item Structure Class Code.
      *
     C     peisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      peisclds = fadetx
     C                   endif
      *
      *            SBD:
     C                   z-sub     wkslb         pesexpulb
     C                   z-sub     wksam         pesexpuam
      *            TF:
     C                   z-sub     wktlb         petexpulb
     C                   z-sub     wktam         petexpuam
      *
      * Setup Exception Comment
      *
     C                   eval      peexcom = 'Split to: ' + '28063'
      *
      * Write the Exception record
      *
     C                   exsr      $wrt019
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a record for the original item into the Product Exception file
      *-----------------------------------------------------------------------------------
      *
     C     $wrt019       begsr
      *
      * LDA fields
     C                   z-add     ldyr          peyr
     C                   z-add     ldwk          pewk
      * Hardcoded
     C                   move      'Y'           pesysfl
     C                   eval      pepgm = sdpgm
      *
      * Retrieve the "Include in Volume Flag"
      *
     C                   exsr      $volfl
      *
     C                   z-add     xxsn          pepesn
      *
     C                   write     perec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve the "Include in Volume" flag from the Weekly Product Revenue Detail file
      *-----------------------------------------------------------------------------------
      *
     C     $volfl        begsr
      *
      * Key values:
      *  Product Code
      *  WeekEnding Date
      *
     C     key02         chain     tfl010a                            92
     C                   if        *in92 = *off
     C                   move      prvolfl       pevolfl
     C                   else
     C                   move      'N'           pevolfl
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Calc a 'Produced Value Per Pound' for the 'FROM' Item to use in calc'ing Split $$$
      *---------------------------------------------------------------------------------------
      *
      * Damon wants us to calc the split dollars using the 'Produced Value per LB' for
      * converted Item 26010. (He sees this value on TF617-Mix Adjustment Report.) BUT, our
      * program runs in Meat Costing....before we run the normal Mix Adjustments...which is
      * where we build the TFP014-Mix Adjustment file...which is where TF617 gets that value!
      * So, we will calc a Produced Value per LB for Item 26010 using the TFP010 records.
      * (I thought about also using any already existing Exception records (TFP019) for Item
      * 26010. BUT, similar program RO232 does not do this. So, I'll try TFP010 alone first.)
      *
     C     $value        begsr
      *
      * Retrieve the Produced Lbs and Amount from the Revenue Close file using
      * a key of:
      *    1) WeekEnding Date
      *    2) Item 26010
      *
     C     key03         setll     tfl010a
      *
     C                   dou       *in91 = *on                                  Do revenue
     C     key03         reade     tfl010a                                91
     C                   if        *in91 = *off                                 If not EOF
     C                   add       prspulb       wkslb
     C                   add       prspuam       wksam
     C                   add       prtpulb       wktlb
     C                   add       prtpuam       wktam
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do revenue
      *
      * Calc a Produced Value per Lb Amount to use later in calcing the
      * dollars to split.
      *
     C                   if        (wkslb + wktlb) <> 0
     C                   eval(h)   wkpr = (wksam + wktam) / (wkslb + wktlb)
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ldwedt
     C                   kfld                    wk28063
      *
     C     key02         klist
     C                   kfld                    pewedt
     C                   kfld                    peprcd
      *
     C     key03         klist
     C                   kfld                    ldwedt
     C                   kfld                    wk26010
      *
     C     key04         klist
     C                   kfld                    prtfclcd
     C                   kfld                    pristycd
     C                   kfld                    prisgrcd
     C                   kfld                    prisclcd
      *
     C                   endsr
      /eject
