      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP450
      * TITLE:       WORK WITH FARM SITE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     03/15/94
      *
      * FUNCTION: THIS IS A WORK WITH THAT DISPLAYS THE RECORDS
      *           IN THE FARM SITE MASTER FILE.
      *
      *           We have used indicators to make 5 versions of this program. Different options
      *           and function keys are available on different versions. The entry parm passed
      *           in from the Menu System is used to set indicators for the required version:
      *
      *                      ACCT    Accounting version
      *                      PROD    Production version
      *                      FEED    Feed version
      *                      VIEW    View version
      *                      blank   A version for I.S to use that has everything
      *
      *
      *           RESTRICTORS:
      *               BUSINESS OFFICE CODE
      *
      *           POSITIONERS:
      *               FARM SITE CODE
      *
      *           SELECTORS:
      *               PRODUCTION PHASE
      *               PRODUCTION TYPE
      *
      *           IT HAS F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 12/06/00  LeAnne Fedor
      *           Added a new function key (19) to access a new farms/bins listing.
      *
      * 01/25/01  LeAnne Fedor
      *           Added CELL as a selector.
      *
      * 06/05/01  LeAnne Fedor
      *           Added the new field MULTISITE as a selector.
      *
      * 06/26/01  LeAnne Fedor
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file
      *           to (production manager/cell manager/multisite manager).
      *
      * 07/10/01  LeAnne Fedor
      *           We now have 5 'versions' of this screen.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 12/13/01  LeAnne Fedor
      *           Added a new function key (15) to View Farms with No Cost Center.
      *
      * 01/21/02  LeAnne Fedor
      *           Added a new function key (13) to Folf/Unfold to show farm name. Added
      *           3 new selectors: consolidated farm site, pod, group type.
      *           'Production' now has access to revising a farm...but most fields will
      *           be protected anyway.
      *
      * 07/03/02  LeAnne Fedor
      *           Added 'type of farm' as new selector.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD450    CF   E             WORKSTN
     F                                     SFILE(HP450S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS                 (KEY: FNFNCD)
      *
     FHSL018A   IF   E           K DISK
     F                                     INFDS(DBFEED)
      *    FARM SITE               (KEY: FSFSBO FSFSCD)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *
      *---------------------------------------------------------------
      *  LDA
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDRPFL                 1      1
     D  LDFSBO                 2      6
     D  LDFSCD                 7     11  0
      *
     D  ldcnfscd              12     16  0
     D  ldtfcd                17     21
     D  ldgtcd                22     22
     D  ldpod                 23     25  0
     D  ldcell                26     27  0
     D  ldptcd                28     32
     D  ldppcd                33     37
     D  ldpmgcd               38     42
     D  ldcmgcd               43     47
     D  ldmmgcd               48     52
     D  ldaist                53     53
      *
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      ****************************************************************
      * SUBROUTINES
      ****************************************************************
      *
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  FILL THE SUBFILE
      *
     C     TERMFL        IFEQ      NO
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
     C                   ENDIF
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * Set indicators to control screen options
      *
     C                   select
     C                   when      version = 'VIEW'
     C                   when      version = 'ACCT'
     C                   seton                                        87
     C                   when      version = 'PROD'
     C                   seton                                        88
     C                   when      version = 'FEED'
     C                   seton                                        89
     C                   when      version = '    '
     C                   seton                                        84
     C                   endsl
      *
      *
      * THIS SUBFILE HAS FOLD/UNFOLD CAPABILITIES.  THE DDS USES THE
      * KEYWORDS (SFLDROP, SFLFOLD) TO DETERMINE WHETHER THE
      * USER IS FOLDED OR UNFOLDED AND TO REDISPLAY THE SCREEN IN THE
      * SAME MODE AS WHEN HE LAST SAW IT.  INDICATORS 78 AND 79 ARE
      * ASSIGNED IN THE DDS TO SFLDROP AND SFLFOLD.
      *
     C                   SETOFF                                       7879
     C     FOLD          IFEQ      '0'
     C                   SETON                                        78             SFLDROP
     C                   ELSE
     C                   SETON                                        79             SFLFOLD
     C                   ENDIF
      *
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP450K1
     C                   WRITE     HP450EC
     C                   EXFMT     HP450C1
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C     FLD           IFEQ      'C1FSBO'
     C     C1FSBO        ANDNE     SVFSBO
     C                   MOVEL(P)  'HP450'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $CHKSV
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SVFSBO        C1FSBO
     C                   MOVEL     SVBODS        C1BODS
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C     C1FSBO        IFNE      SVFSBO
     C                   MOVEL(P)  'HP450'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
     C     ERROR         IFEQ      0
      *
      *  CHECK USER AUTHORITY TO THE FUNCTION
      *
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1BODS        SVBODS
     C                   MOVEL(P)  'HP150'       WKFNCD
     C                   EXSR      $SEC
     C     ERROR         IFEQ      0
     C                   EXSR      $CREAT
     C                   ENDIF
     C                   ELSE
     C                   ENDIF
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN07         WHENEQ    *ON                                          F7-LISTING
     C     C1FSBO        IFNE      SVFSBO
     C                   MOVEL(P)  'HP450'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
     C     ERROR         IFEQ      0
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1BODS        SVBODS
     C                   MOVEL(P)  'HP650'       WKFNCD
     C                   EXSR      $SEC
     C     ERROR         IFEQ      0
     C                   EXSR      $LIST1
     C                   ENDIF
     C                   ENDIF
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN14         WHENEQ    *ON                                          F14-Cost Center
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP756'
      *
     C     *IN15         WHENEQ    *ON                                          F15-No Cost Ctr
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP754'
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
      *
     C     *IN18         WHENEQ    *ON                                          F18-DEATH RPTS
     C     C1FSBO        IFNE      SVFSBO
     C                   MOVEL(P)  'HP450'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
     C     ERROR         IFEQ      0
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1BODS        SVBODS
     C                   MOVEL(P)  'HP455'       WKFNCD
     C                   EXSR      $SEC
     C     ERROR         IFEQ      0
     C                   CALL      'HP455'
     C                   ENDIF
     C                   ENDIF
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
     C     *IN19         WHENEQ    *ON                                          F19-Bin listing
     C     C1FSBO        IFNE      SVFSBO
     C                   MOVEL(P)  'HP450'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
     C     ERROR         IFEQ      0
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1BODS        SVBODS
     C                   MOVEL(P)  'HP4076'      WKFNCD
     C                   EXSR      $SEC
     C     ERROR         IFEQ      0
     C                   CALL      'HP4076'
     C                   ENDIF
     C                   ENDIF
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'                                       API
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR SELECTORS IN THE CONTROL RECORD.
      *
      *
     C     SVFSBO        WHENNE    C1FSBO                                       IF RESTRICT
     C     SVFSCD        ORNE      C1FSCD
     C     SVCNFSCD      ORNE      C1CNFSCD
     C     SVGTCD        ORNE      C1GTCD
     C     SVPOD         ORNE      C1POD
     C     SVCELL        ORNE      C1CELL
     C     SVTFCD        ORNE      C1TFCD
     C     SVPTCD        ORNE      C1PTCD
     C     SVPPCD        ORNE      C1PPCD
     C     SVPMGCD       ORNE      C1PMGCD
     C     SVCMGCD       ORNE      C1CMGCD
     C     SVMMGCD       ORNE      C1MMGCD
     C     SVAIST        ORNE      C1AIST
      *
     C     SVFSBO        IFNE      C1FSBO
     C                   MOVE      *BLANK        C1BODS
     C                   MOVEL(P)  'HP450'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $CHKSV
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKSV - SAVE THE CONTROL RECORD POSITIONERS/SELECTORS
      *----------------------------------------------------------------
      *
     C     $CHKSV        BEGSR
      *
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1BODS        SVBODS
      *
     C                   Z-ADD     C1FSCD        SVFSCD
     C                   Z-ADD     C1CNFSCD      SVCNFSCD
     C                   Z-ADD     C1CELL        SVCELL
     C                   Z-ADD     C1POD         SVPOD
     C                   MOVE      C1PTCD        SVPTCD
     C                   MOVE      C1PPCD        SVPPCD
     C                   MOVE      C1PMGCD       SVPMGCD
     C                   MOVE      C1CMGCD       SVCMGCD
     C                   MOVE      C1MMGCD       SVMMGCD
     C                   MOVE      C1GTCD        SVGTCD
     C                   MOVE      C1TFCD        SVTFCD
     C                   MOVE      C1AIST        SVAIST
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTIONS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE SUBFILE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ELSE
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN WITH ERRORS TO USER
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP450S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP450C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN FARM SITE FILE
      *
     C     K2P018        SETLL     HSL018A
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', JUST START THE SUBFILE OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * READ FARM SITE MASTER FILE
      *
     C     C1FSBO        READE     HSL018A                                82
      *
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
      *   ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1PPCD        IFNE      *BLANK                                        IF PHASE
     C     C1PPCD        ANDNE     FSPPCD
     C                   ELSE
      *
     C     C1PTCD        IFNE      *BLANK                                        IF PROD TYPE
     C     C1PTCD        ANDNE     FSPTCD
     C                   ELSE
      *
     C     C1TFCD        IFNE      *BLANK                                        IF FARM TYPE
     C     C1TFCD        ANDNE     FSTFCD
     C                   ELSE
      *
     C     C1GTCD        IFNE      *BLANK                                        IF GROUP TYPE
     C     C1GTCD        ANDNE     FSGTCD
     C                   ELSE
      *
     C     C1CNFSCD      IFNE      0                                             IF CON FARM
     C     C1CNFSCD      ANDNE     FSCNFSCD
     C                   ELSE
      *
     C     C1POD         IFNE      0                                             IF POD
     C     C1POD         ANDNE     FSPOD
     C                   ELSE
      *
     C     C1CELL        IFNE      0                                             IF CELL
     C     C1CELL        ANDNE     FSCELL
     C                   ELSE
      *
     C     C1PMGCD       IFNE      *BLANK                                        IF PROD MGR
     C     C1PMGCD       ANDNE     FSPMGCD
     C                   ELSE
      *
     C     C1CMGCD       IFNE      *BLANK                                        IF CELL MGR
     C     C1CMGCD       ANDNE     FSCMGCD
     C                   ELSE
      *
     C     C1MMGCD       IFNE      *BLANK                                        IF MULTI MGR
     C     C1MMGCD       ANDNE     FSMMGCD
     C                   ELSE
      *
     C     C1AIST        IFNE      *BLANK                                        IF STATUS
     C     C1AIST        ANDNE     FSAIST
     C                   ELSE
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFOPT
     C                   Z-ADD     FSFSCD        DFFSCD
     C                   Z-ADD     FSCNFSCD      DFCNFSCD
     C                   Z-ADD     FSPOD         DFPOD
     C                   Z-ADD     FSCELL        DFCELL
     C                   MOVE      FSTFCD        DFTFCD
     C                   MOVE      FSGTCD        DFGTCD
     C                   MOVE      FSFSNM        DFFSNM
     C                   MOVE      FSPTCD        DFPTCD
     C                   MOVE      FSPPCD        DFPPCD
     C                   MOVE      FSPMGCD       DFPMGCD
     C                   MOVE      FSCMGCD       DFCMGCD
     C                   MOVE      FSMMGCD       DFMMGCD
     C                   MOVE      FSAIST        DFAIST
     C                   WRITE     HP450S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF STATUS
     C                   ENDIF                                                  IF MULTI MGR
     C                   ENDIF                                                  IF CELL MGR
     C                   ENDIF                                                  IF PROD MGR
     C                   ENDIF                                                  IF CELL
     C                   ENDIF                                                  IF POD
     C                   ENDIF                                                  IF CON FARM
     C                   ENDIF                                                  IF GROUP TYPE
     C                   ENDIF                                                  IF FARM TYPE
     C                   ENDIF                                                  IF PROD TYPE
     C                   ENDIF                                                  IF PHASE
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   MOVEL     YES           NORECS
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CREAT - SUBROUTINE TO CALL MAINTENANCE PROGRAM WHEN THE USER
      *          HAS TAKEN F6=CREATE
      *----------------------------------------------------------------
      *
     C     $CREAT        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
     C                   MOVEL     CREATE        MODE
     C                   Z-ADD     0             DFFSCD
     C                   CALL      'HP150'
     C                   PARM                    MODE
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    VERSION
     C                   PARM                    RTNCD
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    BE A 'LIVE PRODUCTION' DIVISION OFFICE
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CLEAR SUBFILE
      *
     C                   EXSR      $CLR1
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   MOVEL     NO            INDVFL                          RESET FL
      *
     C                   MOVEL     OUBODS        C1BODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EDOP1 - SUBROUTINE TO READ CHANGED RECORDS IN SUBFILE AND
      *          EDIT FOR VALID SUBFILE OPTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READC
     C                   READC     HP450S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZEROS                                       IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 2'                                         IF BAD OPT
     C     DFOPT         ANDNE     ' 3'
     C     DFOPT         ANDNE     ' 4'
     C     DFOPT         ANDNE     ' 5'
     C     DFOPT         ANDNE     ' 6'
     C     DFOPT         ANDNE     ' 7'
     C     DFOPT         ANDNE     ' 8'
     C     DFOPT         ANDNE     ' 9'
     C     DFOPT         ANDNE     '10'
     C     DFOPT         ANDNE     '11'
     C     DFOPT         ANDNE     '12'
     C     DFOPT         ANDNE     '13'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        3085
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ELSE
      *
      * The following options are only valid when the version is 'accounting'
      *   4=delete
      *  11=maintain deaths
      *
     C                   if        (dfopt = ' 4' or dfopt= '11')
     C                             and (version <> 'ACCT' and version <> *blank)
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      * The following options are only valid when the version is 'accounting'
      * or 'production'. (NOTE: Most fields are protected for 'production' version.)
      *   2=revise
      *
     C                   if        dfopt = ' 2' and
     C                             (version <> 'ACCT' and version <> 'PROD'
     C                              and version <> *blank)
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      * The following options are only valid when the version is 'production'
      *   3=capacity
      *   7=maintain buildings
      *
     C                   if        (dfopt = ' 7' or dfopt = ' 3')
     C                             and (version <> 'PROD' and version <> *blank)
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      *
      * The following options are only valid when the version is 'accounting'
      *   9=Maintain Bins
      *  13=Assign Bin Sets to Rooms
      *
     C                   if        (dfopt = ' 9' or dfopt = '13')
     C                             and (version <> 'FEED' and version <> *blank)
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 11=MAINTAIN DEATHS
      *
     C                   if        dfopt = '11' and
     C                             dfppcd = 'BGF  ' and
     C                             (version = 'ACCT' or version = *blank)
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00588'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFOPT         MGW(1)
     C                   MOVEA     DFPPCD        MGW(3)
     C                   MOVEA     MGW           MGDT(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 12=VIEW DEATHS
      *
     C     DFOPT         IFEQ      '12'
     C     DFPPCD        ANDEQ     'BGF  '
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00588'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFOPT         MGW(1)
     C                   MOVEA     DFPPCD        MGW(3)
     C                   MOVEA     MGW           MGDT(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      * THE OPTION IS VALID. SO, CHECK THE USER'S AUTHORITY TO THE
      * FUNCTION.
      *
     C     DFOPT         IFNE      '  '
      *
     C                   SELECT
     C     DFOPT         WHENEQ    ' 2'
     C                   MOVEL(P)  'HP150'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 3'
     C                   MOVEL(P)  'HP159'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 4'
     C                   MOVEL(P)  'HP150'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 5'
     C                   MOVEL(P)  'HP750'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 6'
     C                   MOVEL(P)  'HP651'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 7'
     C                   MOVEL(P)  'HP151'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 8'
     C                   MOVEL(P)  'HP751'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 9'
     C                   MOVEL(P)  'HP155'       WKFNCD
      *
     C     DFOPT         WHENEQ    '10'
     C                   MOVEL(P)  'HP755'       WKFNCD
      *
     C     DFOPT         WHENEQ    '11'
     C                   MOVEL(P)  'HP157'       WKFNCD
      *
     C     DFOPT         WHENEQ    '12'
     C                   MOVEL(P)  'HP757'       WKFNCD
      *
     C     DFOPT         WHENEQ    '13'
     C                   MOVEL(P)  'HP154'       WKFNCD
     C                   ENDSL
      *
      *  CHECK USER AUTHORITY TO THE FUNCTION
      *
     C                   EXSR      $SEC
      *
     C     SECFL         IFEQ      YES
     C                   SETON                                        30
     C                   EXSR      $ERR1
     C                   ENDIF
      *
      * REWRITE THE SUBFILE RECORD WITH THE MODIFIED DATA TAG ON SO
      * IT WILL BE REREAD AND PROCESSED IN THE SUBROUTINE $PROC1.
      *
     C                   SETON                                        85        SFLNXTCHG
     C                   ELSE
     C                   SETOFF                                       85
     C                   ENDIF                                                   DFOPT NE' '
     C                   ENDIF                                                  IF BAD OPT
      *
     C                   UPDATE    HP450S1
     C                   SETOFF                                       8530
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS AND PROCESS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP450S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      * IF USER SELECTED OPTION 2=REVISE, SET PARM FOR REVISE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 2'
     C                   MOVEL     YES           RESET
     C                   MOVEL     REVISE        MODE
     C                   CALL      'HP150'
     C                   PARM                    MODE
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    VERSION
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 3=CAPACITY/MANAGERS, SET PARM FOR REVISE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 3'
     C                   MOVEL     YES           RESET
     C                   MOVEL     REVISE        MODE
     C                   CALL      'HP159'
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   ENDIF
      *
      *
      * IF USER SELECTED OPTION 4=DELETE, SET PARM FOR DELETE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 4'
     C                   MOVEL     YES           RESET
     C                   MOVEL     DELETE        MODE
     C                   CALL      'HP150'
     C                   PARM                    MODE
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    VERSION
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 5=VIEW FARM SITE,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 5'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP750'
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 6=PRINT,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 6'
     C                   MOVEL     YES           RESET
     C                   EXSR      $LIST2
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 7=MAINTAIN BUILDINGS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 7'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP151'
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 8=VIEW BUILDINGS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 8'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP751'
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 9=MAINTAIN BIN SETS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 9'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP155'
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 10=VIEW BIN SETS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      '10'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP755'
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 11=MAINTAIN DEATHS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      '11'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP157'
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 12=VIEW DEATHS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      '12'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP757'
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 13=ASSIGN BIN SETS TO ROOMS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      '13'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP154'
     C                   PARM                    DFFSCD
     C                   PARM                    DFFSNM
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      *
      * UPON RETURNING FROM THE CALLED PROGRAM,
      * CLEAR THE SUBFILE OPTION SELECTOR ENTERED BY THE USER AND
      * REWRITE THE SUBFILE RECORD
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   UPDATE    HP450S1
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * PRINT A LISTING OF THE MASTER FILE FROM SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LIST1        BEGSR
      *
      * SET UP THE LDA FIELDS
      *
     C                   MOVEL     'L'           LDRPFL
     C                   MOVEL     C1FSBO        LDFSBO
      *
     C                   z-add     c1fscd        ldfscd
     C                   z-add     c1cnfscd      ldcnfscd
     C                   move      c1tfcd        ldtfcd
     C                   move      c1gtcd        ldgtcd
     C                   z-add     c1pod         ldpod
     C                   z-add     c1cell        ldcell
     C                   move      c1ptcd        ldptcd
     C                   move      c1ppcd        ldppcd
     C                   move      c1pmgcd       ldpmgcd
     C                   move      c1cmgcd       ldcmgcd
     C                   move      c1mmgcd       ldmmgcd
     C                   move      c1aist        ldaist
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO AN
      * 80-CHARACTER FIELD FOR PASSING AS A PARM WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LIST2 - PRINT A LISTING OF THE SELECTED FARM SITE  DFOPT=6
      *---------------------------------------------------------------
      *
     C     $LIST2        BEGSR
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   MOVEL     'P'           LDRPFL
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   z-add     0             ldcnfscd
     C                   move      *blank        ldtfcd
     C                   move      *blank        ldgtcd
     C                   z-add     0             ldpod
     C                   z-add     0             ldcell
     C                   move      *blank        ldptcd
     C                   move      *blank        ldppcd
     C                   move      *blank        ldpmgcd
     C                   move      *blank        ldcmgcd
     C                   move      *blank        ldmmgcd
     C                   move      *blank        ldaist
      *
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO AN
      * 80-CHARACTER FIELD FOR PASSING AS A PARM WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF BUSINESS OFFICE CODE
      *
     C     FLD           WHENEQ    'C1FSBO'
     C                   CALL      'HP503'
     C                   PARM      *blank        XXFSBO
     C                   PARM      *blank        XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        C1FSBO
     C                   MOVEL     XXBODS        C1BODS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF CONSOLIDAATED FARM SITE
      *
     C     FLD           WHENEQ    'C1CNFSCD'
     C                   MOVEL     C1FSBO        XXFSBO
     C                   Z-ADD     0             XXFSCD
     C                   MOVE      *BLANK        XXFSNM
     C                   MOVEL     C1PPCD        XXPPCD
     C                   MOVEL     C1PTCD        XXPTCD
     C                   CALL      'HP505'
     C                   PARM                    XXFSBO
     C                   PARM                    XXFSCD
     C                   PARM                    XXFSNM
     C                   PARM                    XXPPCD
     C                   PARM                    XXPTCD
     C                   SETON                                        58
     C     XXFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     XXFSCD        C1CNFSCD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * Type of farm
      *
     C     FLD           WHENEQ    'C1TFCD'
     C                   CALL      'HP5018'
     C                   PARM      *BLANK        XXTFCD
     C                   PARM      *BLANK        XXTFDS
     C                   SETON                                        59
     C     XXTFCD        IFNE      *BLANK
     C                   MOVEL     XXTFCD        C1TFCD
     C                   ENDIF
      *
      *
      * GROUP TYPE
      *
     C                   when      FLD = 'C1GTCD'
     C                   CALL      'HP531'
     C                   PARM      *blank        XXGTCD
     C                   PARM      *blank        XXGTDS
     C                   seton                                        50
     C                   if        XXGTCD <> *blank                             IF SELECTED
     C                   movel     XXGTCD        C1GTCD
     C                   endif                                                  IF SELECTED
      *
      *
      * IF PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'C1PTCD'
     C                   CALL      'HP504'
     C                   PARM      *blank        XXPTCD
     C                   PARM      *blank        XXPTDS
     C                   SETON                                        53
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        C1PTCD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * IF PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'C1PPCD'
     C                   CALL      'HP507'
     C                   PARM      *blank        XXPPCD
     C                   PARM      *blank        XXPPDS
     C                   SETON                                        54
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        C1PPCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION MANAGER
      *
     C     FLD           WHENEQ    'C1PMGCD'
     C                   CALL      'HP508'
     C                   PARM      *BLANK        XXMGCD
     C                   PARM      *BLANK        XXMGNM
     C                   SETON                                        55
     C                   IF        XXMGCD <> *BLANK
     C                   MOVEL     XXMGCD        C1PMGCD
     C                   ENDIF
      *
      *
      * IF CELL MANAGER
      *
     C     FLD           WHENEQ    'C1CMGCD'
     C                   CALL      'HP508'
     C                   PARM      *BLANK        XXMGCD
     C                   PARM      *BLANK        XXMGNM
     C                   SETON                                        56
     C                   IF        XXMGCD <> *BLANK
     C                   MOVEL     XXMGCD        C1CMGCD
     C                   ENDIF
      *
      *
      * IF MULTISITE MANAGER
      *
     C     FLD           WHENEQ    'C1MMGCD'
     C                   CALL      'HP508'
     C                   PARM      *BLANK        XXMGCD
     C                   PARM      *BLANK        XXMGNM
     C                   SETON                                        57
     C                   IF        XXMGCD <> *BLANK
     C                   MOVEL     XXMGCD        C1MMGCD
     C                   ENDIF
      *
      * Active/inactive status
      *
     C                   when      fld = 'C1AIST'
     C                   call      'HP512'
     C                   parm      *blank        xxaist
     C                   seton                                        77
     C                   if        xxaist <> *blank
     C                   move      xxaist        c1aist
     C                   endif
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT THE
      *          FIRST PAGE THAT HAS ERRORS ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     C1FSBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC ERR FLAG
     C                   PARM                    OUBOFL            1            B.O. ERR FLG
     C                   PARM                    OURMFL            1
      *
      * SETUP FIELDS OUT
      *
     C                   MOVEL     OUBOBO        WKBOBO                         BO CODE
     C                   MOVEL     OUBODS        WKBODS                         BO DESCR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    version           4
      *
     C                   select
     C                   when      version = 'VIEW'
     C                   eval      c1version = 'View Only Version'
      *
     C                   when      version = 'ACCT'
     C                   eval      c1version = 'Accounting Version'
      *
     C                   when      version = 'PROD'
     C                   eval      c1version = 'Production Version'
      *
     C                   when      version = 'FEED'
     C                   eval      c1version = 'Feed Version'
      *
     C                   when      version = '    '
     C                   endsl
      *
      * FARM SITE
      *
     C     K2P018        KLIST
     C                   KFLD                    C1FSBO
     C                   KFLD                    C1FSCD
      *
      * PARM LISTS
      *   NONE
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
      *
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
      *
      *
      * PARM FIELDS
      *
     C     *LIKE         DEFINE    C1FSCD        XXFSCD
     C                   MOVE      *BLANK        XXFSNM           25
      *
     C     *LIKE         DEFINE    c1tfcd        xxtfcd
     C                   MOVE      *BLANK        xxtfds           25
      *
     C     *LIKE         DEFINE    C1FSBO        XXFSBO
     C     *LIKE         DEFINE    C1BODS        XXBODS
      *
     C     *LIKE         DEFINE    C1PMGCD       XXMGCD
     C                   MOVE      *BLANK        XXMGNM           25
      *
     C     *LIKE         DEFINE    C1GTCD        XXGTCD
     C                   MOVE      *BLANK        XXGTDS           15
      *
     C     *LIKE         DEFINE    C1PPCD        XXPPCD
     C                   MOVE      *BLANK        XXPPDS           30
      *
     C     *LIKE         DEFINE    C1PTCD        XXPTCD
     C                   MOVE      *BLANK        XXPTDS           10
      *
     C     *LIKE         DEFINE    C1AIST        XXAIST
      *
      * SAVE FIELDS FOR CONTROL RECORD
      *
     C     *LIKE         DEFINE    C1AIST        SVAIST
     C     *LIKE         DEFINE    C1PMGCD       SVPMGCD
     C     *LIKE         DEFINE    C1CMGCD       SVCMGCD
     C     *LIKE         DEFINE    C1MMGCD       SVMMGCD
     C     *LIKE         DEFINE    C1FSBO        SVFSBO
     C     *LIKE         DEFINE    C1BODS        SVBODS
     C     *LIKE         DEFINE    C1FSCD        SVFSCD
     C     *LIKE         DEFINE    C1PTCD        SVPTCD
     C     *LIKE         DEFINE    C1CELL        SVCELL
     C     *LIKE         DEFINE    C1CNFSCD      SVCNFSCD
     C     *LIKE         DEFINE    C1POD         SVPOD
     C     *LIKE         DEFINE    C1PPCD        SVPPCD
     C     *LIKE         DEFINE    C1GTCD        SVGTCD
     C     *LIKE         DEFINE    C1TFCD        SVTFCD
      *
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
      *
      * INITIALIZE LDA FIELDS
      *
     C                   MOVE      *BLANK        LDRPFL
     C                   Z-ADD     0             LDFSCD
     C                   MOVE      *BLANK        LDFSBO
      *
     C                   z-add     0             ldcnfscd
     C                   move      *blank        ldtfcd
     C                   move      *blank        ldgtcd
     C                   z-add     0             ldpod
     C                   z-add     0             ldcell
     C                   move      *blank        ldptcd
     C                   move      *blank        ldppcd
     C                   move      *blank        ldpmgcd
     C                   move      *blank        ldcmgcd
     C                   move      *blank        ldmmgcd
     C                   move      *blank        ldaist
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      * THIS DISPLAY HAS FOLD/DROP LOGIC; SO, DOUBLE THE SUBFILE PAGE VALUE.
      *
     C                   Z-ADD     8             WKPLIN            2 0          SFLPAG
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
      * SET UP WORK FIELDS FOR STANDARD SECURITY CHECKS THAT INVOLVE
      * A BUSINESS OFFICE
      *
     C     *LIKE         DEFINE    C1FSBO        WKBOBO
     C     *LIKE         DEFINE    C1BODS        WKBODS
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
      *
      * SET INBOFL FLAG TO NO TO TELL HPSEC NOT TO VALIDATE THE IN_B.O.
      * SENT, BUT TO SEND BACK THE DEFAULT B.O. FOR THE USER.
      *
     C                   MOVEL     NO            INBOFL                          CHECK B.O.
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL            1
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * MOVE RETURNED FIELDS TO CONTROL RCD FMT FIELDS
      *
     C                   MOVEL     WKBOBO        C1FSBO
     C                   MOVEL     WKBOBO        SVFSBO
     C                   MOVEL     WKBODS        C1BODS
     C                   MOVEL     WKBODS        SVBODS
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C                   MOVEL     OUDVCD        SVDVCD
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE TO SUBMIT LISTINGS
SBMJOB CMD(CALL PGM(HP450CL)) JOB(FARMLISTS) JOBQ(__________)
