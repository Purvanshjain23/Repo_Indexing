// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OMHUPFR
// ?Date: 14.08.2025 Time: 12:03:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.USR Display 1 = CND.No
PAR.USR_Display_1 = 'N';

//?USER: Record selection processing

//?Select Company if entered
CASE;

// IF PAR.Accounting Company Number is not equal to zero
IF PAR.Company_Number <> *ZERO;

CASE;

// IF PAR.Accounting Company Number NE DB1.Accounting Company Number
IF PAR.Company_Number <> DB1.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Select record status if entered
CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

// AND PAR.Record Status NE DB1.Record Status
AND PAR.Record_Status <> DB1.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select only records matching parms if parms are passed
CASE;

// IF PAR.U/M - Primary is Entered
IF PAR.UOM_Primary <> *BLANK;

// AND DB1.U/M - Primary NE PAR.U/M - Primary
AND DB1.UOM_Primary <> PAR.UOM_Primary;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.Item Structure Class Code is Entered
IF PAR.Item_Structure_Class_Code <> *ZERO;

// AND DB1.Item Structure Class Code NE PAR.Item Structure Class Code
AND DB1.Item_Structure_Class_Code <> PAR.Item_Structure_Class_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.Item Type Code is Entered
IF PAR.Item_Type_Code <> *BLANK;

// AND DB1.Item Type Code NE PAR.Item Type Code
AND DB1.Item_Type_Code <> PAR.Item_Type_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.Production Date Control is Y/N or One
IF PAR.Production_Date_Control = 'N'/'1'/'Y';

// AND DB1.Production Date Control NE PAR.Production Date Control
AND DB1.Production_Date_Control <> PAR.Production_Date_Control;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.Catch Weight Status is Y/N or One
IF PAR.Catch_Weight_Status = 'N'/'1'/'Y';

// AND DB1.Catch Weight Status NE PAR.Catch Weight Status
AND DB1.Catch_Weight_Status <> PAR.Catch_Weight_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

//?Select only records matching parms if parms are passed
// IF PAR.Converted/Base Item is Valid Entries
IF PAR.Base_Conv_Loss_Item = 'B'/'C'/'F'/'L';

// AND DB1.Converted/Base Item NE PAR.Converted/Base Item
AND DB1.Base_Conv_Loss_Item <> PAR.Base_Conv_Loss_Item;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

//?Selected Company Name
CASE;

// IF PAR.Company Number is Equal to zero
IF PAR.Company_Number = *ZERO;

// 1PG.Company Name = CON.ALL
X1PG_Company_Name = 'ALL';

//?Selected Company Name
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Select Record Status
CASE;

// IF PAR.Record Status is *blank
IF PAR.Record_Status = *BLANK;

// 1PG.Condition Desc. 1  USR = CON.ALL
X1PG_Condition_Desc_1_USR = 'ALL';

//?Select Record Status
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

// 1PG.Condition Desc. 1  USR = Condition name of 1PG.Record Status
X1PG_Condition_Desc_1_USR = RTVCND(X1PG_Record_Status);

ENDIF;

//?Selected Item Code
CASE;

// IF PAR.Item Type Code is Equal Blanks
IF PAR.Item_Type_Code = *BLANK;

// 1PG.Condition Desc. 2  USR = CON.ALL
X1PG_Condition_Desc_2_USR = 'ALL';

//?Selected Item Code
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Type Code = PAR.Item Type Code
X1PG_Item_Type_Code = PAR.Item_Type_Code;

// 1PG.Condition Desc. 2  USR = Condition name of 1PG.Item Type Code
X1PG_Condition_Desc_2_USR = RTVCND(X1PG_Item_Type_Code);

ENDIF;

//?Selected Converted/Base Fab Item
CASE;

// IF PAR.Converted/Base Item is Blank
IF PAR.Base_Conv_Loss_Item = *BLANK;

// 1PG.USR Description 40 = CON.ALL
X1PG_USR_Description_40 = 'ALL';

//?Selected Converted/Base Fab Item
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Converted/Base Item = PAR.Converted/Base Item
X1PG_Base_Conv_Loss_Item = PAR.Base_Conv_Loss_Item;

// 1PG.USR Description 40 = Condition name of 1PG.Converted/Base Item
X1PG_USR_Description_40 = RTVCND(X1PG_Base_Conv_Loss_Item);

ENDIF;

//?Selected Item Structure Class
CASE;

// IF PAR.Item Structure Class Code is Equal Zero
IF PAR.Item_Structure_Class_Code = *ZERO;

// 1PG.Item Structure Class Desc = CON.ALL
X1PG_Item_Structure_Class_Desc = 'ALL';

//?Selected Item Structure Class
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Structure Class Code = PAR.Item Structure Class Code
X1PG_Item_Structure_Class_Code = PAR.Item_Structure_Class_Code;

EXECUTE FUNCTION(Rtv Item Class Desc    RT) TYPE(RTVOBJ) FILE(OMFAREP)          AC1205440;
PARAMETER(X1PG_Item_Structure_Class_Code);
PARAMETER(X1PG_Item_Structure_Class_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Selected Production Date Control
CASE;

// IF PAR.Production Date Control is blank
IF PAR.Production_Date_Control = *BLANK;

// 1PG.Condition Desc. 3  USR = CON.ALL
X1PG_Condition_Desc_3_USR = 'ALL';

//?Selected Production Date Control
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Production Date Control = PAR.Production Date Control
X1PG_Production_Date_Control = PAR.Production_Date_Control;

// 1PG.Condition Desc. 3  USR = Condition name of 1PG.Production Date Control
X1PG_Condition_Desc_3_USR = RTVCND(X1PG_Production_Date_Control);

ENDIF;

//?Selected Catch Weight Status
CASE;

// IF PAR.Catch Weight Status is blank
IF PAR.Catch_Weight_Status = *BLANK;

// 1PG.Condition Desc. 4  USR = CON.ALL
X1PG_Condition_Desc_4_USR = 'ALL';

//?Selected Catch Weight Status
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Catch Weight Status = PAR.Catch Weight Status
X1PG_Catch_Weight_Status = PAR.Catch_Weight_Status;

// 1PG.Condition Desc. 4  USR = Condition name of 1PG.Catch Weight Status
X1PG_Condition_Desc_4_USR = RTVCND(X1PG_Catch_Weight_Status);

ENDIF;

//?Selected U/M Primary
CASE;

// IF PAR.U/M - Primary is Not Entered
IF PAR.UOM_Primary = *BLANK;

// 1PG.Description = CON.ALL
X1PG_Description = 'ALL';

//?Selected U/M Primary
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.U/M - Primary = PAR.U/M - Primary
X1PG_UOM_Primary = PAR.UOM_Primary;

EXECUTE FUNCTION(Rtv UOM Description    RT) TYPE(RTVOBJ) FILE(CAAMREP)          AC1216290;
PARAMETER(X1PG_UOM_Primary);
PARAMETER(X1PG_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// PAR.USR Display 1 = CND.Yes
PAR.USR_Display_1 = 'Y';

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Print Accounting Company Number header format
PRINT Accounting Company Number header format;

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Accounting Company Number totals format

