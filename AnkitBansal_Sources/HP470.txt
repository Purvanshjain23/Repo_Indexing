      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP470
      * TITLE:       SPECIFY SALES MOVEMENT BOL TO PRINT
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     01/30/95
      *
      * FUNCTION:    PRINTS BILL OF LADINGS FOR SCHEDULED SALES
      *              MOVEMENTS.
      *
      *              THIS PROGRAM IS CALLED FROM:
      *                  1) WORK WITH SALES
      *                  2) WORK WITH SCHEDULED SALES
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 04/17/96  LEANNE FEDOR
      *           CHARLIE FREDRICH REPORTED THAT THE TRUCKERS WERE
      *           HAVING TO WAIT TOO LONG FOR JANNA SHERREL TO PRINT
      *           OFF THEIR BOL. SO, WE CHANGED THE SUBMIT JOB COMMAND
      *           TO EXECUTE IN A JOBQ NAMED 'PRIORITY' THAT HAS BEEN
      *           SET UP FOR THOSE "JUST CAN'T WAIT" JOBS!!
      *
      * 05/13/96  LEANNE FEDOR
      *           MADE CHANGES TO FACILITATE NEW JDE RELEASE CONVERSION
      *           CHANGED SEARCH TYPE TO 3A; CALL NEW GENERIC
      *           PROGRAM HPJDEV TO VALIDATE INSTEAD OF HPJDEA SINCE
      *           NO VENDOR ADDRESS IS REQUIRED.
      *
      * 02/03/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 03/26/02  LeAnne Fedor
      *           Added 'cell' as option selector.
      *
      * 07/22/02  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production phases, we changed the edit for a farm.  The production phase
      *           of a selected farm no longer has to "match" the production phase that
      *           the user may have keyed on the screen.
      *
      * 12/17/02  LeAnne Fedor
      *           Removed 'production phase' as a selector since we have removed it from
      *           the Sales Movement Header file.
      *
      * 01/21/03  LeAnne Fedor
      *           Added logic for 2 'versions': full and restricted. The incoming parm
      *           controls the version.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/21/13  LeAnne Ramsey (E2831)
      *           Added MTech Reference as a parm on the calls to:
      *               HP538-Select Trucker
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD470    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
     FHSP046    IF   E           K DISK
      *    TRUCKER
      *
     FHSP066    IF   E           K DISK
      *    SALES TYPE
      *
     FHSP084    IF   E           K DISK
      *    SALES MOVEMENT HEADER
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAYS FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  LDA -  WITH THE REQUESTED PRINT SELECTIONS
      *---------------------------------------------------------------
      *
     D LDA             DS
     D  LDFSBO                 1      5
     D  LDFYMD                 6     13  0
     D  LDTYMD                14     21  0
     D  LDFSCD                27     31  0
     D  LDCELL                32     33  0
     D  LDCVNO                34     41  0
     D  LDSTCD                42     46
     D  LDTICD                47     51
     D  LDMVSN                52     58  0
     D  LDVERSION             59     59
      *
     D  LDFMDY               208    213  0
     D  LDTMDY               214    219  0
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDOUTQ               413    422
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D ALL             C                   CONST('A')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP470K1
     C                   WRITE     HP470EC
     C                   EXFMT     HP470R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     *IN12         OREQ      *ON                                          F12-PREVIOUS
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C                   PARM                    XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'
     C                   MOVEL     SCRN1         ROUTNE
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * ALWAYS CHECK SECURITY FOR BUSINESS OFFICE
      *
     C                   MOVEL(P)  'HP470'       WKFNCD
     C                   EXSR      $CHKBO
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VERIFY THAT A VALID FROM DATE IS ENTERED
      *
     C     DFFMDY        IFEQ      0                                            IF NO FROM
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   Z-ADD     DFFMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDFYMD
     C                   Z-ADD     DFFMDY        LDFMDY
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO FROM
      *
      * VERIFY THAT A VALID TO DATE IS ENTERED
      *
     C     DFTMDY        IFEQ      0                                            IF NO TO
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   Z-ADD     DFTMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDTYMD
     C                   Z-ADD     DFTMDY        LDTMDY
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO TO
      *
      * VERIFY THAT "TO" DATE IS NOT EARLIER THAN "FROM" DATE
      *
     C     *IN32         IFEQ      *OFF                                         IF EARLIER
     C     *IN33         ANDEQ     *OFF
     C     LDTYMD        ANDLT     LDFYMD
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
      * IF CELL IS KEYED, IT CANNOT BE NEGATIVE.
      *
     C     DFCELL        IFLT      0                                            IF NEG CELL
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NEG CELL
      *
      * IF FARM SITE KEYED, VALIDATE AND CHECK FOR MATCHES:
      *    1) BETWEEN FARM'S B.O. AND SCREEN B.O.
      *    2) BETWEEN FARM CELL AND SCREEN CELL
      *
     C                   MOVE      *BLANK        DFFSNM
     C     DFFSCD        IFNE      0                                            IF FARM
      *
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *ON                                          IF BAD FARM
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     FSFSNM        DFFSNM
      *
      * CHECK FOR BUSINESS OFFICE MATCH
      *
     C     FSFSBO        IFNE      DFFSBO                                       IF MISMATCH
     C     DFFSBO        ANDNE     *BLANK
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFSBO        MGW(6)
     C                   MOVEA     DFFSBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF MISMATCH
      *
      * CHECK FOR CELL MATCH
      *
     C     DFCELL        IFGT      0                                            IF CELL
     C     FSCELL        ANDNE     DFCELL
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00705'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(6)
     C                   MOVE      DFCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
      *
     C                   ENDIF                                                  IF BAD FARM
     C                   ENDIF                                                  IF FARM
      *
      *
     C                   MOVE      *BLANK        DFCNAM
     C     DFCVNO        IFNE      0                                            IF CUST
     C                   Z-ADD     DFCVNO        INAJD
     C                   MOVEL(P)  'C'           INAT1
     C                   EXSR      $JDEV
      *
      * IF THERE IS AN ERROR WITH THE CUSTOMER NUMBER
      *
     C     JDEFL         IFEQ      YES                                           IF BAD CUST
     C                   SETON                                        34
     C                   ELSE
     C                   MOVEL     OUALPH        DFCNAM
      *
      *
      * If this is the Restricted verion and both Customer and Sales Type are
      * entered and valid, perform another edit.
      *
     C                   if        version = 'R' and                            If SBD market
     C                             dfstcd = 'MRKTS' and dfcvno = 360516
     C                   seton                                        3437
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00885'     mgid(e)
     C                   clear                   mgw
     C                   movea     'PRINT'       mgw(1)
     C                   movea     dfstcd        mgw(7)
     C                   movel     dfcvno        xxalphcvno
     C                   movea     xxalphcvno    mgw(12)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If SBD market
      *
     C                   ENDIF                                                  IF BAD CUST
     C                   ENDIF                                                  IF CUST
      *
      *
      * IF SALES TYPE KEYED, VALIDATE
      *
     C                   MOVE      *BLANK        DFSTDS
     C     DFSTCD        IFNE      *BLANK                                       IF TYPE
     C     DFSTCD        CHAIN     HSP066                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD TYPE
     C                   MOVEL     STSTDS        DFSTDS
     C                   ELSE
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00635'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFSTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD TYPE
     C                   ENDIF                                                  IF TYPE
      *
      * VALIDATE TRUCKER
      *
     C                   MOVE      *BLANK        DFTINM
     C     DFTICD        IFNE      *BLANK                                       IF TRUCK ID
     C     DFTICD        CHAIN     HSP046                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD TRK
     C                   MOVEL     TITINM        DFTINM
     C                   ELSE
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00235'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFTICD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD TRK
     C                   ENDIF                                                  IF TRUCK ID
      *
      * VALIDATE MOVEMENT
      *
     C     DFMVSN        IFNE      0                                            IF MOVEMENT
     C     DFMVSN        CHAIN     HSP084                             92
     C                   SELECT
     C     *IN92         WHENEQ    *ON                                          WH BAD MOVE
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00709'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     SHMSCD        WHENNE    'SC'                                         WH NOT SCHED
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00728'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     SHMSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   OTHER
      *
     C                   EXSR      $MVSN
     C                   ENDSL
     C                   ENDIF                                                  IF MOVEMENT
      *
      * You user can not elect to run more than 1 copy. Issue message if
      * user has elected to run multiple copies.
      *
     C                   if        xxcopy > 1 and error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09134'     MGID(E)
     C                   endif
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * PERFORM 'MISMATCH' EDITS ON MOVEMENT NUMBER
      *----------------------------------------------------------------
      *
      * THE MOVEMENT ENTERED MUST MATCH THE ON-SCREEN USER ENTRIES:
      *   1) BUSINESS OFFICE
      *   2) SCHEDULED SHIP DATE
      *   3) PRODUCTION PHASE
      *   4) FARM
      *   5) CUSTOMER
      *   6) SALES TYPE
      *   7) TRUCKER
      *
     C     $MVSN         BEGSR
      *
     C     *IN31         IFEQ      *OFF                                         IF BO OK
     C     SHFSBO        ANDNE     DFFSBO
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00727'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     SHFSBO        MGW(8)
     C                   MOVEA     DFFSBO        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BO OK
      *
     C     *IN32         IFEQ      *OFF                                         IF DATES OK
     C     *IN33         ANDEQ     *OFF
     C     SHSCDT        IFLT      LDFYMD                                       IF OUT RANGE
     C     SHSCDT        ORGT      LDTYMD
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
      *
      * FLIP SCHEDULED SHIP DATE FROM CCYYMMDD TO MMDDYY
      *
     C                   Z-ADD     SHSCDT        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'CYMD'        PFRFMT
     C                   MOVEL     'MDY '        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
     C                   MOVE      PTO8          XXMDY
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00729'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     XXMDY         MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OUT RANGE
     C                   ENDIF                                                  IF DATES OK
      *
      *
     C     DFFSCD        IFNE      0                                            IF FARM OK
     C     *IN36         ANDEQ     *OFF
     C     SHFSCD        ANDNE     DFFSCD
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00732'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEL     SHFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVEL     DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FARM OK
      *
      *
     C     DFCVNO        IFNE      0                                            IF CUST OK
     C     *IN34         ANDEQ     *OFF
     C     SHCVNO        ANDNE     DFCVNO
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00668'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEL     SHCVNO        XXCVNO
     C                   MOVEA     XXCVNO        MGW(8)
     C                   MOVEL     DFCVNO        XXCVNO
     C                   MOVEA     XXCVNO        MGW(16)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CUST OK
      *
      *
     C     DFSTCD        IFNE      *BLANK                                       IF TYPE OK
     C     *IN37         ANDEQ     *OFF
     C     SHSTCD        ANDNE     DFSTCD
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00669'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     SHSTCD        MGW(8)
     C                   MOVEA     DFSTCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF TYPE OK
      *
      *
     C     DFTICD        IFNE      *BLANK                                       IF TRUCK OK
     C     *IN38         ANDEQ     *OFF
     C     SHTICD        ANDNE     DFTICD
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00731'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     SHTICD        MGW(8)
     C                   MOVEA     DFTICD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF TRUCK OK
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFFSBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT REPORT
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   MOVEL     DFFSBO        LDFSBO
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   Z-ADD     DFCELL        LDCELL
     C                   MOVEL     DFCVNO        LDCVNO
     C                   MOVEL     DFSTCD        LDSTCD
     C                   MOVEL     DFTICD        LDTICD
     C                   Z-ADD     DFMVSN        LDMVSN
      *
     C                   move      version       ldversion
      *
     C                   OUT       LDA
      *
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING HP675CL TO QCMDEXC.
      *
      *
     C                   MOVEA     XXJOBQ        CMD(49)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $JDEV - SUBROUTINE TO CALL THE EXTERNAL PROGRAM TO VALIDATE JDE
      *         ADDRESS NUMBERS.
      *----------------------------------------------------------------
      *
     C     $JDEV         BEGSR
      *
     C                   MOVEL     NO            JDEFL                          JDE ERRORS
      *
     C                   CALL      'HPJDEV'
     C                   PARM                    MGI                            MSG ID'S
     C                   PARM                    MGD                            MSG DATA FLD
     C                   PARM                    ERROR                          # ERR MSGS
     C                   PARM                    INAJD                          JDE ADDR #
     C                   PARM                    INAT1                          JDE ADDR TYP
     C                   PARM                    JDEFL                          ERROR FLAG
     C                   PARM      *BLANK        OUALPH                         JDE NAME
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFFSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        DFFSBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      * FARM SITE
      *
     C     FLD           WHENEQ    'DFFSCD'
     C                   CALL      'HP5040'
     C                   PARM      'A'           xxaist
     C                   PARM      0             WKFSCD
     C                   PARM      *blank        XXFSNM
     C                   SETON                                        56
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   MOVEL     XXFSNM        DFFSNM
     C                   ENDIF                                                  IF SELECTED
      *
      * JDE CUSTOMER NUMBER
      *
     C     FLD           WHENEQ    'DFCVNO'
      *
     C     DFFSBO        IFEQ      *BLANK
     C     *LOVAL        SETLL     HSP009
     C                   READ      HSP009                                 92
     C                   ELSE
     C     DFFSBO        CHAIN     HSP009                             92
     C                   ENDIF
      *
     C     *IN92         IFEQ      *OFF
     C                   MOVEL(P)  'C'           INAT1
     C                   CALL      'HP513'
     C                   PARM                    BOCOCD                         COMPANY
     C                   PARM                    INAT1                          SEARCH TYPE
     C                   PARM      *ZERO         OUAJD                          JDE NUMBER
     C                   PARM      *BLANK        OUALPH                         JDE NAME
     C                   ENDIF
      *
     C                   SETON                                        54
     C     OUAJD         IFNE      0                                            IF SELECTED
     C                   Z-ADD     OUAJD         DFCVNO
     C                   MOVEL     OUALPH        DFCNAM
     C                   ENDIF                                                  IF SELECTED
      *
      * SALES TYPE
      *
     C     FLD           WHENEQ    'DFSTCD'
     C                   MOVE      *BLANK        XXSTCD
     C                   MOVE      *BLANK        XXSTDS
     C                   CALL      'HP544'
     C                   PARM                    XXSTCD
     C                   PARM                    XXSTDS
     C                   SETON                                        57
     C     XXSTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSTCD        DFSTCD
     C                   MOVEL     XXSTDS        DFSTDS
     C                   ENDIF                                                  IF SELECTED
      *
      * TRUCKER
     C     FLD           WHENEQ    'DFTICD'
     C                   MOVE      *BLANK        XXTICD
     C                   MOVE      *BLANK        XXTINM
     C                   CALL      'HP538'
     C                   parm      *blank        xxaist
     C                   PARM                    XXTICD
     C                   PARM                    XXTINM
     C                   PARM                    XXMTECHREF
     C                   SETON                                        58
     C     XXTICD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXTICD        DFTICD
     C                   MOVEL     XXTINM        DFTINM
     C                   ENDIF                                                  IF SELECTED
      *
      * MOVEMENT
     C     FLD           WHENEQ    'DFMVSN'
     C                   Z-ADD     0             WKMVSN
     C                   MOVEL     DFFSBO        XXFSBO
     C                   Z-ADD     DFFSCD        WKFSCD
     C                   MOVEL     DFSTCD        XXSTCD
     C                   MOVEL     DFTICD        XXTICD
     C                   Z-ADD     DFCVNO        WKCVNO
     C                   Z-ADD     DFFMDY        WKFMDY
     C                   CALL      'HP558'
     C                   PARM                    WKMVSN
     C                   PARM                    XXFSBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXSTCD
     C                   PARM                    XXTICD
     C                   PARM                    WKCVNO
     C                   PARM                    WKFMDY
     C                   SETON                                        59
     C     WKMVSN        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKMVSN        DFMVSN
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
     C     *ENTRY        PLIST
     C                   parm                    version           1
     C                   parm                    dfversion
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL(P)  'PRIORITY'    XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        XXCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     XXCOPY        IFEQ      0
     C                   Z-ADD     1             XXCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * NUMERIC PARM FIELDS
      *
     C     *LIKE         DEFINE    SHFSCD        WKFSCD
     C     *LIKE         DEFINE    SHMVSN        WKMVSN
     C     *LIKE         DEFINE    SHCVNO        WKCVNO
     C     *LIKE         DEFINE    DFFMDY        WKFMDY
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXAIST            1
     C                   MOVE      *BLANK        XXCELL            2
     C                   MOVE      *BLANK        XXFSCD            5
     C                   MOVE      *BLANK        XXMVSN            7
     C                   MOVE      *BLANK        XXMDY             6
     C                   MOVE      *BLANK        XXCVNO            8
     C                   MOVE      *blank        XXalphcvno        8
     C     *LIKE         DEFINE    DFFSNM        XXFSNM
     C     *LIKE         DEFINE    DFSTCD        XXSTCD
     C     *LIKE         DEFINE    DFSTDS        XXSTDS
     C     *LIKE         DEFINE    DFTICD        XXTICD
     C     *LIKE         DEFINE    DFTINM        XXTINM
     C     *LIKE         DEFINE    DFFSBO        XXFSBO
     C     *LIKE         DEFINE    DFBODS        XXBODS
     C     *LIKE         DEFINE    fsmtechref    xxmtechref
      *
      * JDE FIELDS
     C                   MOVE      *BLANK        JDEFL             1            JDE ERR FLAG
     C                   MOVE      *BLANK        INAT1             3            JDE ADDR TYP
     C                   MOVE      *BLANK        OUALPH           40            JDE NAME
     C     *LIKE         DEFINE    DFCVNO        INAJD                          JDE NUMBER
     C     *LIKE         DEFINE    DFCVNO        OUAJD                          JDE NUMBER
      *
      * INITIALIZE LDA FIELDS
      *
     C                   MOVE      *BLANK        LDFSBO
     C                   Z-ADD     0             LDFYMD
     C                   Z-ADD     0             LDTYMD
     C                   Z-ADD     0             LDFMDY
     C                   Z-ADD     0             LDTMDY
     C                   Z-ADD     0             LDFSCD
     C                   Z-ADD     0             LDCVNO
     C                   MOVE      *BLANK        LDTICD
     C                   MOVE      *BLANK        LDSTCD
     C                   Z-ADD     0             LDMVSN
     C                   MOVE      *BLANK        LDVERSION
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * MOVE RETURNED FIELDS TO SCREEN
      *
     C                   MOVEL     OUBOBO        DFFSBO
     C                   MOVEL     OUBODS        DFBODS
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * DEFAULT TODAY'S DATE INTO THE 'FROM' AND 'TO' DATES
      *
     C                   Z-ADD     UDATE         DFFMDY
     C                   Z-ADD     UDATE         DFTMDY
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP470CL)) JOB(SALEBOL) JOBQ(__________)
