// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUZIDFR
// ?Date: 14.08.2025 Time: 03:51:44
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications History
DO;

//?Eric L 05-2023 WI572 CA Prop 12 Creation
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(NLL.Company_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Allow_Multi_Company);
PARAMETER(NLL.Default_Printer);
PARAMETER(NLL.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Process subfile control (Pre-confirm)

//?F04 - Prompt
CASE;

// IF PGM.*Cursor field <IS> CTL.Regulation Code
IF PGM.*Cursor_field = CTL.Regulation_Code;

CASE;

// IF CTL.*CMD key is CF04
IF CTL.*CMD_key = '04';

// Call program SEL Regulation Code SR.
CALL PROGRAM(SEL Regulation Code SR) ('PUZNSRR');
PARAMETER(CTL.Regulation_Code);

ENDIF;

ENDIF;

//?F06 - Create
CASE;

// IF CTL.*CMD key is CF06
IF CTL.*CMD_key = '06';

// Call program EDT Regulation Code M E1.
CALL PROGRAM(EDT Regulation Code M E1) ('PUZQE1R');
PARAMETER(CTL.Regulation_Code);
PARAMETER(CTL.Regulation_ID);
PARAMETER(CTL.Regulation_Origin);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER('ADD');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F18 - Download to Carlisle
CASE;

// IF CTL.*CMD key is CF18
IF CTL.*CMD_key = '18';

EXECUTE FUNCTION(RTV 1st Rcd (get CO) RT) TYPE(RTVOBJ) FILE(CAEOREP)            AC2214436;
PARAMETER(*ZERO);
PARAMETER(LCL.Company_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PAR.Company Number = DB1.Company Number
 PAR.Company_Number = DB1.Company_Number;

 QUIT;

}


// LCL.Company Alpha = CVTVAR(LCL.Company Number)
LCL.Company_Alpha = CVTVAR(LCL.Company_Number);

//?Copy PUC8REP to PUC7REP
EXECUTE FUNCTION(RTV Reg Code Mst RT) TYPE(RTVOBJ) FILE(PUC8REP)                AC2214942;
PARAMETER(*BLANK);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV/CRT PFS Reg Code RT) TYPE(RTVOBJ) FILE(PUC7REP)            AC2214947;
 PARAMETER(DB1.Regulation_Code);
 PARAMETER(DB1.Regulation_ID);
 PARAMETER(DB1.Regulation_Origin);
 PARAMETER(DB1.Regulation_Desc);
 PARAMETER(DB1.ShipTo_Est_Stm_Stop_Tot);
 PARAMETER(DB1.Ship_To_Cust_Type);
 PARAMETER(DB1.Default_Regulation);
 PARAMETER(DB1.NonComp_Stm1_StopTot);
 PARAMETER(DB1.NonComp_Stm2_StopTot);
 PARAMETER(DB1.Compliancy_Stm1_Item);
 PARAMETER(DB1.Compliancy_Stm2_Item);
 PARAMETER(DB1.Record_Status);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Create Regulation Master) TYPE(CRTOBJ) FILE(PUC7REP)           AC2213076;
  PARAMETER(PAR.PFS_Regulation_Code);
  PARAMETER(PAR.PFS_Regulation_ID);
  PARAMETER(PAR.PFS_Regulation_Origin);
  PARAMETER(PAR.PFS_Regulation_Desc);
  PARAMETER(PAR.PFS_ShipTo_EstStmStopTot);
  PARAMETER(PAR.PFS_Ship_To_Cust_Type);
  PARAMETER(PAR.PFS_Default_Regulation);
  PARAMETER(PAR.PFS_NonComp_Stm1_StopTot);
  PARAMETER(PAR.PFS_NonComp_Stm2_StopTot);
  PARAMETER(PAR.PFS_Compliancy_Stm1_Item);
  PARAMETER(PAR.PFS_Compliancy_Stm2_Item);
  PARAMETER(PAR.PFS_Record_Status);
  PARAMETER(PAR.PFS_Process_Status);
  PARAMETER(PAR.PFS_Error_Reason);
  PARAMETER(PAR.PFS_Create_Date);
  PARAMETER(PAR.PFS_Create_Time);
  PARAMETER(PAR.PFS_Change_Date);
  PARAMETER(PAR.PFS_Change_Time);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Create Stamp      IF) TYPE(EXCINTFUN)                      AC1732162;
   PARAMETER(DB1.PFS_Process_Status);
   PARAMETER(DB1.PFS_Create_Date);
   PARAMETER(DB1.PFS_Create_Time);
   {
    //?Execute internal function

    // PAR.PFS Process Status = CND.Not Processed
    PAR.PFS_Process_Status = *ZERO;

    // PAR.PFS Create Date = JOB.*Job date
    PAR.PFS_Create_Date = JOB.*Job_date;

    // PAR.PFS Create Time = JOB.*Job time
    PAR.PFS_Create_Time = JOB.*Job_time;

   }

  }

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

 }

}


//?Build Regulation code file & Send to Carlisle.
// Call program EXC CPY Reg Carlisle CL.
CALL PROGRAM(EXC CPY Reg Carlisle CL) ('PUZEUPC');
PARAMETER(LCL.Company_Alpha);

//?Email created and sent
DO;

// LCL.Email Subject USR = CONCAT(CON.Co,LCL.Company Alpha,CON.1)
LCL.Email_Subject_USR = 'Co' + LCL.Company_Alpha (1);

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.Regulation Codes,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + 'Regulation Codes' (1);

// LCL.Email Message USR = CONCAT(CON.Regulation Codes sent to,CON.Carlisle - Co,CON.*ZERO)
LCL.Email_Message_USR = 'Regulation Codes sent to' + 'Carlisle - Co' (0);

// LCL.Email Message USR = CONCAT(LCL.Email Message USR,LCL.Company Alpha,CON.1)
LCL.Email_Message_USR = LCL.Email_Message_USR + LCL.Company_Alpha (1);

EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
PARAMETER('DTALIB');
PARAMETER(LCL.System_Value_Alpha);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Concatenate 'TEST' to Email Subject Line if Not Prod Data.
CASE;

// IF NOT LCL.System Value Alpha is PRKFLIB
IF ! LCL.System_Value_Alpha = 'PRKFLIB';

// LCL.Email Subject USR = CONCAT(LCL.Email Subject USR,CON.- TEST,CON.1)
LCL.Email_Subject_USR = LCL.Email_Subject_USR + '- TEST' (1);

ENDIF;

EXECUTE FUNCTION(Exc ESNDMAIL Generic  IF) TYPE(EXCINTFUN)                      AC2144041;
PARAMETER(LCL.Company_Number);
PARAMETER('REGCODES');
PARAMETER(LCL.Email_Subject_USR);
PARAMETER(LCL.Email_Message_USR);
{
 //?Execute internal function

 //?Execute ESNDMAIL to Send Email Message.
 EXECUTE FUNCTION(RTV Alpha Value 2     RT) TYPE(RTVOBJ) FILE(PDKMREP)           AC2134765;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Value_Code);
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Email Address is Entered
 IF LCL.Email_Address <> *BLANK;

 // Call program Exc ESNDMAIL Generic  CL.
 CALL PROGRAM(Exc ESNDMAIL Generic  CL) ('PUE8UPC');
 PARAMETER(LCL.Email_Address);
 PARAMETER(PAR.Email_Subject_USR);
 PARAMETER(PAR.Email_Message_USR);

 ENDIF;

}


ENDDO;

//?Send Info Msg.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Generic Message 80 USR = CONCAT(CON.Regulation Code Master se,CON.nt to Carlisle.,CON.*ZERO)
LCL.Generic_Message_80_USR = 'Regulation Code Master se' + 'nt to Carlisle.' (0);

// LCL.Generic Message 80 USR = CONCAT(LCL.Generic Message 80 USR,LCL.Company Alpha,CON.1)
LCL.Generic_Message_80_USR = LCL.Generic_Message_80_USR + LCL.Company_Alpha (1);

// LCL.Generic Message 80 USR = CONCAT(LCL.Generic Message 80 USR,CON..,CON.*ZERO)
LCL.Generic_Message_80_USR = LCL.Generic_Message_80_USR + '.' (*ZERO);

// Send information message - '&1'
MESSAGE(USR4976 *INFO);
MSGPARM(LCL.Generic_Message_80_USR);

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?F21 - Print
CASE;

// IF CTL.*CMD key is CF21
IF CTL.*CMD_key = '21';

// Call program PMT Pass Status        UP.
CALL PROGRAM(PMT Pass Status        UP) ('PDALUPR');
PARAMETER(LCL.Return_Code_Usr);
PARAMETER('C/S');
PARAMETER('PUZRPFR');
PARAMETER(LCL.Record_Status);
PARAMETER(LCL.System_Value_Numeric);
PARAMETER('Compliancy Listing');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);

CASE;

// IF LCL.Return Code Usr is *Blank
IF LCL.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Change
IF RCD.*SFLSEL = '2';

// Call program EDT Regulation Code M E1.
CALL PROGRAM(EDT Regulation Code M E1) ('PUZQE1R');
PARAMETER(RCD.Regulation_Code);
PARAMETER(RCD.Regulation_ID);
PARAMETER(RCD.Regulation_Origin);
PARAMETER(RCD.Regulation_Desc);
PARAMETER(RCD.ShipTo_Est_Stm_Stop_Tot);
PARAMETER(RCD.NonComp_Stm1_StopTot);
PARAMETER(RCD.NonComp_Stm2_StopTot);
PARAMETER(RCD.Compliancy_Stm1_Item);
PARAMETER(RCD.Compliancy_Stm2_Item);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
PARAMETER('CHG');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

