      *****************  RPG PROGRAM HEADING  ***********************
      * SYSTEM:      Hog Production
      * PROGRAM:     HP7085
      * TITLE:       View Group Sire Line/Sow Source Data
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/13/02
      *
      * FUNCTION: This function displays the group's sire line and origin BGF farms
      *           from the workfiles that are created in the batch derivation function.
      *           (The derivation function is run from the job scheduler and can also
      *            be run on-demand from the menu.)
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     fhpd7085   cf   e             workstn sfile(hp7085s1:hdrrn1)
     f                                     infds(iofeed)
      *
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsp025    if   e           k disk
      *  Group type
      *
      *
     Fhsp034    if   e           k disk
      *  Hog group
      *
      *
     Fhsp336    if   e           k disk
      *  Workfile: Nursery groups--BGF source total
      *
      *
     Fhsp340    if   e           k disk
      *  Workfile: Nursery groups--sire line total
      *
      *
     Fhsp350    if   e           k disk
      *  Workfile: Grow finish groups--sire line total
      *
      *
     Fhsp356    if   e           k disk
      *  Workfile: Grow finish groups--BGF source total
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D maxmsg          s              2  0  inz(20)
     D wkflow          s                   like(idflow)
      *
      * Workfields
      *
     D wkhgsn          s                   like(hghgsn)
     D wkalphfscd      s              5
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear/fill subfile
      *
     C                   exsr      $clr1
     C                   exsr      $frsh1
      *
      * Set routine to display screen
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Perform operator I/O for screen 1
      *---------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to crt
      *
     C                   write     hp7085k1
     C                   write     hp7085ec
     C                   exfmt     hp7085c1
      *
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   eval      wkflow = idflow
      *
      * Clear all messages
      *
     C                   exsr      $clmsg
      *
      * Initialize the return coe
      *
     C                   movel     '00'          rtncd
      *
      * Get user's entry
      *
     C                   select
     C                   when      *in03 = *on                                  F3-EXIT
     C                   movel     '03'          rtncd
     C                   eval      routne = exit
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $clr1  - clear subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $clr1         begsr
      *
     C                   z-add     0             hdrrn1
      *
     C                   clear                   hp7085s1
     C                   seton                                        83        sflclr
     C                   write     hp7085c1
     C                   setoff                                       818283
      *                                                    81=sfldsp
      *                                                    82=sflend
      *                                                    83=sflclr
     C                   endsr
      *
      /EJECT
      *---------------------------------------------------------------
      * Refresh/fill the subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
     C                   select
     C                   when      c1ppcd = 'NUR  '
     C                   exsr      $loadnur
      *
     C                   when      c1ppcd = 'GF   '
     C                   exsr      $loadgf
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Subroutine to load Nursery data
      *---------------------------------------------------------------
      *
     C     $loadnur      begsr
      *
      * Retrieve Sire Line info
      *
     C     wkhgsn        setll     hsp340
     C                   move      'Sire data'   d1desc
      *
     C                   dou       *in82 = *on                                  Do sire
     C     wkhgsn        reade     hsp340                                 82
     C                   if        *in82 = *off                                 If not eof
     C                   seton                                        85
      *
     C                   move      w0sicd        d1sicd
     C                   move      w0gg0         d1gg0
     C                   z-add     w0rchd        d1rchd
     C                   z-add     w0hdpr        d1hdpr
     C                   move      *blank        d1alphfscd
     C                   z-add     0             d1cell
      *
     C                   add       1             hdrrn1
     C                   write     hp7085s1
     C                   seton                                        81
     C                   move      *blank        d1desc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sire
      *
      *
      * If you had any Sire info, then write a blank line to the subfile
      * to give a visual break.
      *
     C                   if        hdrrn1 > 0
     C                   move      *blank        d1desc
     C                   move      *blank        d1sicd
     C                   move      *blank        d1gg0
     C                   z-add     0             d1rchd
     C                   z-add     0             d1hdpr
     C                   move      *blank        d1alphfscd
     C                   z-add     0             d1cell
     C                   add       1             hdrrn1
     C                   write     hp7085s1
     C                   seton                                        81
     C                   endif
      *
      *
      * Retrieve BGF source info
      *
     C     wkhgsn        setll     hsp336
     C                   move      'Sow data'    d1desc
      *
     C                   dou       *in82 = *on                                  Do source
     C     wkhgsn        reade     hsp336                                 82
     C                   if        *in82 = *off                                 If not eof
     C                   seton                                        85
      *
     C                   move      *blank        d1sicd
     C                   move      *blank        d1gg0
     C                   z-add     w9rchd        d1rchd
     C                   z-add     w9hdpr        d1hdpr
     C                   z-add     w9orcell      d1cell
     C                   move      *blank        d1alphfscd
      *
     C                   if        w9orfscd = 0
     C                   eval      d1alphfscd = 'Unknown'
     C                   else
     C                   move      w9orfscd      wkalphfscd
     C                   exsr      $alphfscd
     C                   endif
      *
     C                   add       1             hdrrn1
     C                   write     hp7085s1
     C                   move      *blank        d1desc
     C                   seton                                        81
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do source
      *
      *
      * If no records were written to the subfile, then issue
      * the standard message 'No data to Display'.
      *
     C                   if        hdrrn1 = 0 and                               If no recs
     C                             error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09002'
     C                   endif                                                  If no recs
      *
     C                   z-add     1             hdpag1
      *
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Subroutine to load Grow Finish data
      *---------------------------------------------------------------
      *
     C     $loadgf       begsr
      *
      * Retrieve Sire Line info
      *
     C     wkhgsn        setll     hsp350
     C                   move      'Sire data'   d1desc
      *
     C                   dou       *in82 = *on                                  Do sire
     C     wkhgsn        reade     hsp350                                 82
     C                   if        *in82 = *off                                 If not eof
     C                   seton                                        85
      *
     C                   move      wasicd        d1sicd
     C                   move      wagg0         d1gg0
     C                   z-add     warchd        d1rchd
     C                   z-add     wahdpr        d1hdpr
     C                   move      *blank        d1alphfscd
     C                   z-add     0             d1cell
      *
     C                   add       1             hdrrn1
     C                   write     hp7085s1
     C                   seton                                        81
     C                   move      *blank        d1desc
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do sire
      *
      *
      * If you had any Sire info, then write a blank line to the subfile
      * to give a visual break.
      *
     C                   if        hdrrn1 > 0
     C                   move      *blank        d1desc
     C                   move      *blank        d1sicd
     C                   move      *blank        d1gg0
     C                   z-add     0             d1rchd
     C                   z-add     0             d1hdpr
     C                   move      *blank        d1alphfscd
     C                   z-add     0             d1cell
     C                   add       1             hdrrn1
     C                   write     hp7085s1
     C                   seton                                        81
     C                   endif
      *
      *
      * Retrieve BGF source info
      *
     C     wkhgsn        setll     hsp356
     C                   move      'Sow data'    d1desc
      *
     C                   dou       *in82 = *on                                  Do source
     C     wkhgsn        reade     hsp356                                 82
     C                   if        *in82 = *off                                 If not eof
     C                   seton                                        85
      *
     C                   move      *blank        d1sicd
     C                   move      *blank        d1gg0
     C                   z-add     wbrchd        d1rchd
     C                   z-add     wbhdpr        d1hdpr
     C                   z-add     wborcell      d1cell
     C                   move      *blank        d1alphfscd
      *
     C                   if        wborfscd = 0
     C                   eval      d1alphfscd = 'Unknown'
     C                   else
     C                   move      wborfscd      wkalphfscd
     C                   exsr      $alphfscd
     C                   endif
      *
     C                   add       1             hdrrn1
     C                   write     hp7085s1
     C                   move      *blank        d1desc
     C                   seton                                        81
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do source
      *
      *
      * If no records were written to the subfile, then issue
      * the standard message 'No data to Display'.
      *
     C                   if        hdrrn1 = 0 and                               If no recs
     C                             error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09002'
     C                   endif                                                  If no recs
      *
     C                   z-add     1             hdpag1
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Strip leading zeros from alpha farm site field
      *--------------------------------------------------------------------------------------
      *
     C     $alphfscd     begsr
      *
      * Move farm site number to an alpha field and strip the leading zeros.
      *
     C                   if        %subst(wkalphfscd:1:1) = '0'                 If position 1
     C                   eval      %subst(wkalphfscd:1:1) = *blank
     C                   if        %subst(wkalphfscd:2:1) = '0'                 If position 2
     C                   eval      %subst(wkalphfscd:2:1) = *blank
     C                   if        %subst(wkalphfscd:3:1) = '0'                 If position 3
     C                   eval      %subst(wkalphfscd:3:1) = *blank
     C                   if        %subst(wkalphfscd:4:1) = '0'                 If position 4
     C                   eval      %subst(wkalphfscd:4:1) = *blank
     C                   endif                                                  If position 4
     C                   endif                                                  If position 3
     C                   endif                                                  If position 2
     C                   endif                                                  If position 1
      *
     C                   eval      d1alphfscd = wkalphfscd
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    c1hgcd
     C                   parm                    rtncd
      *
      * Retrieve system-assigned hog group number
      *
     C     c1hgcd        chain     hsp034                             92
     C                   if        *in92 = *off
     C                   z-add     hghgsn        wkhgsn
     C                   z-add     hgfscd        c1fscd
     C                   move      hgppcd        c1ppcd
     C                   move      hgptcd        c1ptcd
     C                   move      hgsxcd        c1sxcd
     C                   move      hgblcd        c1blcd
     C                   move      hgrmcd        c1rmcd
      *
      * Retrieve Group Type description
      *
     C     hggtcd        chain     hsp025                             92
     C                   if        *in92 = *off
     C                   move      gtgtds        c1gtds
     C                   endif
      *
      * Retrieve cell
      *
     C     c1fscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        c1cell
     C                   endif
      *
     C                   endif                                                  If group hit
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
