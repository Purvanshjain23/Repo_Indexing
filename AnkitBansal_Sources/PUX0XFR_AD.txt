// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUX0XFR
// ?Date: 14.08.2025 Time: 03:51:39
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?NOTE: JS 'IB824ASTST' & 'IB824AS400' calls this function every 5
//?      mins interval.
EXECUTE FUNCTION(Prc EDI 824 Applic Adv RT) TYPE(RTVOBJ) FILE(ECP036)           AC2211320;
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
 PARAMETER('EDI824EXP');
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
 PARAMETER('DTALIB');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(NLL.@Library_List_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.System Value Code is Data File Library
  IF DB1.System_Value_Code = 'DTALIB';

  // PAR.Library List Code = DB1.System Value Alpha
  PAR.Library_List_Code = DB1.System_Value_Alpha;

  // IF DB1.System Value Code is History File Library
  IF DB1.System_Value_Code = 'HISLIB';

  // PAR.@Library List Code = DB1.System Value Alpha
  PAR.@Library_List_Code = DB1.System_Value_Alpha;

  QUIT;

  ENDIF;

 }

 //?USER: Process Data record

 //?Validations.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Valid Load ID.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Val Shipment Cancelled RT) TYPE(RTVOBJ) FILE(ECP038)           AC2215622;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_#);
 PARAMETER('ES1');
 PARAMETER(LCL.Cancelled_Flag_USR);
 {
  //?USER: Initialize routine

  // PAR.Cancelled Flag USR = CND.No
  PAR.Cancelled_Flag_USR = 'N';

  //?USER: Process Data record

  CASE;

  // IF DB1.TED01-Applic Err Cond Cde is Shipment Cancelled
  IF DB1.TED01_Applic_Err_Cond_Cde = '983';

  // PAR.Cancelled Flag USR = CND.Yes
  PAR.Cancelled_Flag_USR = 'Y';

  QUIT;

  ENDIF;

 }

 //?Do Not Validate For Cancel/Delete Request on the 601.
 CASE;

 // IF LCL.Cancelled Flag USR is No
 IF LCL.Cancelled_Flag_USR = 'N';

 EXECUTE FUNCTION(VAL Load Exist        RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1197457;
 PARAMETER(DB1.Load_ID);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // LCL.Process EDI 824 USR = CND.Yes
 LCL.Process_EDI_824_USR = 'Y';

 EXECUTE FUNCTION(Rtv 1st Order#/PO#    RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2211338;
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.Order_Number);
 PARAMETER(LCL.Customer_Purchase_Order_#);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Header Status is Not cancelled
  IF DB1.Header_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

 }

 // LCL.Load ID Alpha USR = CVTVAR(DB1.Load ID)
 LCL.Load_ID_Alpha_USR = CVTVAR(DB1.Load_ID);

 // LCL.Order Number Alpha = CVTVAR(LCL.Order Number)
 LCL.Order_Number_Alpha = CVTVAR(LCL.Order_Number);

 EXECUTE FUNCTION(Rtv 1st Booking#      RT) TYPE(RTVOBJ) FILE(PMAMREP)           AC2211468;
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.OHE_Booking_Number);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.OHE Booking Number is Entered
  IF DB1.OHE_Booking_Number <> *BLANK;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Process EDI 824 USR = CND.No
 LCL.Process_EDI_824_USR = 'N';

 // LCL.Email Address USR = CON.edi_824_alert_IT_EDI
 LCL.Email_Address_USR = 'edi_824_alert_IT_EDI';

 //?Format Email Data.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Load ID Alpha USR = CVTVAR(DB1.Load ID)
 LCL.Load_ID_Alpha_USR = CVTVAR(DB1.Load_ID);

 // LCL.Order Number Alpha = CVTVAR(LCL.Order Number)
 LCL.Order_Number_Alpha = CVTVAR(LCL.Order_Number);

 // LCL.Email Subject 2 USR = CONCAT(CON.EDI 824 Error-Load/Order/,CON.PO:,CON.*ZERO)
 LCL.Email_Subject_2_USR = 'EDI 824 Error-Load/Order/' + 'PO:' (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Load ID Alpha USR,CON.1)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Load_ID_Alpha_USR (1);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.*ZERO)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Order Number Alpha,CON.*ZERO)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Order_Number_Alpha (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.*ZERO)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Customer Purchase Order #,CON.*ZERO
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Customer_Purchase_Order_# (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(CON.EDI 824 Application Advic,CON.e Error - Load ID is inva,CON
 LCL.Email_Message_2_USR = 'EDI 824 Application Advic' + 'e Error - Load ID is inva' (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.lid in ECP036 HDR record.,CON.*ZERO
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'lid in ECP036 HDR record.' (*ZERO);

 ENDIF;

 //?If Not PROD Then Append 'TEST' to Email Message.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

 // LCL.Email Address USR = CON.edi_824_alert_IT_EDI_Test
 LCL.Email_Address_USR = 'edi_824_alert_IT_EDI_Test';

 ENDIF;

 // Call program Exc ESNDMAIL Generic2 CL.
 CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
 PARAMETER(LCL.Email_Address_USR);
 PARAMETER(LCL.Email_Subject_2_USR);
 PARAMETER(LCL.Email_Message_2_USR);

 EXECUTE FUNCTION(Chg EDI-Record Proc StsCH) TYPE(CHGOBJ) FILE(ECP036)           AC2211365;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_#);
 PARAMETER('E');
 ENDIF;

 //?Do Not Validate For Cancel/Delete Request on the 601.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Load has been deleted from database. Just use Load # from ECP036.
 // LCL.Process EDI 824 USR = CND.Yes
 LCL.Process_EDI_824_USR = 'Y';

 // LCL.Order Number = CON.*ZERO
 LCL.Order_Number = *ZERO;

 // LCL.Customer Purchase Order # = CON.*BLANK
 LCL.Customer_Purchase_Order_# = *BLANK;

 // LCL.Load ID Alpha USR = CVTVAR(DB1.Load ID)
 LCL.Load_ID_Alpha_USR = CVTVAR(DB1.Load_ID);

 // LCL.Order Number Alpha = CVTVAR(LCL.Order Number)
 LCL.Order_Number_Alpha = CVTVAR(LCL.Order_Number);

 EXECUTE FUNCTION(Rtv 1st Booking#      RT) TYPE(RTVOBJ) FILE(PMAMREP)           AC2211468;
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.OHE_Booking_Number);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.OHE Booking Number is Entered
  IF DB1.OHE_Booking_Number <> *BLANK;

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

  QUIT;

  ENDIF;

 }

 //?No record found for Load ID, look for AES ITN#
 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 EXECUTE FUNCTION(Rtv 1st Booking# w/ITN RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2238948;
 PARAMETER(DB1.Reference_ITN);
 PARAMETER(LCL.OHE_Booking_Number);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.OHE Booking Number is Entered
  IF DB1.OHE_Booking_Number <> *BLANK;

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

 }

 ENDIF;

 ENDIF;

 ENDIF;

 //?EDI Interchange 'APPADV' Active?
 CASE;

 // IF LCL.Process EDI 824 USR is Yes
 IF LCL.Process_EDI_824_USR = 'Y';

 EXECUTE FUNCTION(RTV Record Status     RT) TYPE(RTVOBJ) FILE(PNGNREP)           AC2210684;
 PARAMETER('APPADV');
 PARAMETER(LCL.Record_Status);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?EDI Interchange 'APPADV' Active?
 CASE;

 // IF LCL.Record Status is Active
 IF LCL.Record_Status = 'A';

 // LCL.Process EDI 824 USR = CND.Yes
 LCL.Process_EDI_824_USR = 'Y';

 //?EDI Interchange 'APPADV' Active?
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Process EDI 824 USR = CND.No
 LCL.Process_EDI_824_USR = 'N';

 // LCL.Email Address USR = CON.edi_824_alert_IT_IBM
 LCL.Email_Address_USR = 'edi_824_alert_IT_IBM';

 //?Format Email Data.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Load ID Alpha USR = CVTVAR(DB1.Load ID)
 LCL.Load_ID_Alpha_USR = CVTVAR(DB1.Load_ID);

 // LCL.Order Number Alpha = CVTVAR(LCL.Order Number)
 LCL.Order_Number_Alpha = CVTVAR(LCL.Order_Number);

 // LCL.Email Subject 2 USR = CONCAT(CON.EDI 824 Error-Load/Order/,CON.PO:,CON.*ZERO)
 LCL.Email_Subject_2_USR = 'EDI 824 Error-Load/Order/' + 'PO:' (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Load ID Alpha USR,CON.1)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Load_ID_Alpha_USR (1);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.*ZERO)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Order Number Alpha,CON.*ZERO)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Order_Number_Alpha (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.*ZERO)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (*ZERO);

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,LCL.Customer Purchase Order #,CON.*ZERO
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + LCL.Customer_Purchase_Order_# (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(CON.EDI 824 Application Advic,CON.e Error - EDI Interchange,CON
 LCL.Email_Message_2_USR = 'EDI 824 Application Advic' + 'e Error - EDI Interchange' (*ZERO);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.'APPADV' code not active.,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + ''APPADV' code not active.' (1);

 ENDIF;

 //?If Not PROD Then Append 'TEST' to Email Message.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

 ENDIF;

 // Call program Exc ESNDMAIL Generic2 CL.
 CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
 PARAMETER(LCL.Email_Address_USR);
 PARAMETER(LCL.Email_Subject_2_USR);
 PARAMETER(LCL.Email_Message_2_USR);

 EXECUTE FUNCTION(Chg EDI-Record Proc StsCH) TYPE(CHGOBJ) FILE(ECP036)           AC2211365;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_#);
 PARAMETER('E');
 ENDIF;

 ENDIF;

 ENDIF;

 //?Processing.
 CASE;

 // IF LCL.Process EDI 824 USR is Yes
 IF LCL.Process_EDI_824_USR = 'Y';

 //?Email Document Export Team for EDI Applic Advice Err (ECP038) Record.
 //?IN05690 DN 08/30/23-Added Shipment Cancelled USR Parm.
 EXECUTE FUNCTION(Prc Email Export Team RT) TYPE(RTVOBJ) FILE(ECP038)            AC2211331;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_#);
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.EDI_Record_Processed);
 PARAMETER(LCL.Email_Address);
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(LCL.Load_ID_Alpha_USR);
 PARAMETER(LCL.Order_Number_Alpha);
 PARAMETER(LCL.Customer_Purchase_Order_#);
 PARAMETER(LCL.Send_Email_USR);
 PARAMETER(LCL.Shipment_Cancelled_USR);
 {
  //?USER: Initialize routine

  // PAR.EDI-Record Processed = CND.Not Processed-blank
  PAR.EDI_Record_Processed = *BLANK;

  // LCL.First Time Through USR = CND.Yes
  LCL.First_Time_Through_USR = 'Y';

  // PAR.Send Email USR = CND.No
  PAR.Send_Email_USR = 'N';

  //?IN05690 DN 08/30/23-Initialize.
  // PAR.Shipment Cancelled USR = CND.No
  PAR.Shipment_Cancelled_USR = 'N';

  EXECUTE FUNCTION(Rtv AES ITN #         RT) TYPE(RTVOBJ) FILE(ECP037)            AC2211336;
  PARAMETER(PAR.ST02_TRANS_SET_CONTROL_#);
  PARAMETER('ES1');
  PARAMETER(LCL.OHE_EDI_824_AES_ITN_#);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Get Error Disposition Info for 'ES1' Line.
  EXECUTE FUNCTION(Rtv Error Disposition RT) TYPE(RTVOBJ) FILE(ECP038)            AC2211529;
  PARAMETER(PAR.ST02_TRANS_SET_CONTROL_#);
  PARAMETER(LCL.TED01_Applic_Err_Cond_Cde);
  PARAMETER(LCL.TED01_Err_Description);
  PARAMETER(LCL.EDI_824_Err_Disposition_U);
  PARAMETER(LCL.Count_Records_USR);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   // PAR.Count Records        USR = CON.*ZERO
   PAR.Count_Records_USR = *ZERO;

   //?USER: Process Data record

   // PAR.Count Records        USR = PAR.Count Records        USR + CON.1
   PAR.Count_Records_USR = PAR.Count_Records_USR + 1;

   CASE;

   // IF DB1.OTI02-Ref ID Qualifier is ES1 (For ITN)
   IF DB1.OTI02_Ref_ID_Qualifier = 'ES1';

   MOVE *ALL (To: PAR From: DB1);

   // PAR.EDI 824 Err Disposition U = SUBSTRING(DB1.TED01-Err Description,CON.3,CON.1)
   PAR.EDI_824_Err_Disposition_U = SUBSTRING(DB1.TED01_Err_Description:3:1);

   ENDIF;

  }

  //?IN05690 DN 08/30/23-Check If Shipment Cancelled.
  CASE;

  // IF LCL.EDI 824 Err Disposition U is Accepted
  IF LCL.EDI_824_Err_Disposition_U = 'A';

  // LCL.Error Description USR = CND.Blank
  LCL.Error_Description_USR = *BLANK;

  // LCL.Error Description USR = LCL.TED01-Err Description
  LCL.Error_Description_USR = LCL.TED01_Err_Description;

  //?Load Cancelled.
  CASE;

  // IF LCL.Error Description USR is Shipment Cancelled
  IF LCL.Error_Description_USR = '  A SHIPMENT CANCELLED';

  // PAR.Shipment Cancelled USR = CND.Yes
  PAR.Shipment_Cancelled_USR = 'Y';

  ENDIF;

  ENDIF;

  //?USER: Process Data record

  //?Processing for Only 1 Record Exist.
  CASE;

  // IF LCL.Count Records        USR is EQ 1
  IF LCL.Count_Records_USR = 1;

  //?Must be 'ES1' Record.
  //?Format Email Data.
  CASE;

  // IF LCL.First Time Through USR is Yes
  IF LCL.First_Time_Through_USR = 'Y';

  // LCL.First Time Through USR = CND.No
  LCL.First_Time_Through_USR = 'N';

  // PAR.Send Email USR = CND.Yes
  PAR.Send_Email_USR = 'Y';

  //?Format Email Subject Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Subject 2 USR = CONCAT(CON.AES Direct Filing -,PAR.Load ID Alpha USR,CON.1)
  LCL.Email_Subject_2_USR = 'AES Direct Filing -' + PAR.Load_ID_Alpha_USR (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,PAR.Customer Purchase Order #,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + PAR.Customer_Purchase_Order_# (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,PAR.Order Number Alpha,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + PAR.Order_Number_Alpha (1);

  //?If Not PROD Then Append 'TEST' to Email Subject Line.
  CASE;

  // IF PAR.Library List Code is Not PRKFLIB
  IF PAR.Library_List_Code <> 'PRKFLIB';

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

  ENDIF;

  ENDIF;

  //?Format Email Message 'We have received' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = CONCAT(CON.We have received your cre,CON.ated filing submitted at,CON
  LCL.Email_Message_2_USR = 'We have received your cre' + 'ated filing submitted at' (0);

  //?Get System Date/Time.
  // Execute function Get System Date/Time 2 US.
  EXECUTE FUNCTION(Get System Date/Time 2 US) TYPE(EXCUSRSRC) ('PUX1UFR');
  PARAMETER(LCL.System_Date_USA_USR);
  PARAMETER(LCL.System_Time_HMS_USR);
  {
   * Get System Date/Time 2 US
   d SysDateUSA      S               D   datfmt(*USA)
   d SysTimeHMS      S              8a
   *
   /free
   SysDateUSA = %date();
   #OTZU1 = %char(SysDateUSA);

   SysTimeHMS = %char(%time():*HMS);
   #OT0U1 = SysTimeHMS;
   /end-free
  }

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.System Date *USA USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.System_Date_USA_USR (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.System Time *HMS USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.System_Time_HMS_USR (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON..,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '.' (0);

  ENDIF;

  //?Format Email Message 'Your Request to' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Your request to the follo,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Your request to the follo' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.wing filing has been,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'wing filing has been' (0);

  // LCL.EDI 824 Err Disposition U = SUBSTRING(DB1.TED01-Err Description,CON.3,CON.1)
  LCL.EDI_824_Err_Disposition_U = SUBSTRING(DB1.TED01_Err_Description:3:1);

  //?Set Error Disposition Accepted or Rejected Text.
  CASE;

  // IF LCL.EDI 824 Err Disposition U is Accepted
  IF LCL.EDI_824_Err_Disposition_U = 'A';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.ACCEPTED.,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'ACCEPTED.' (1);

  // PAR.EDI-Record Processed = CND.Processed
  PAR.EDI_Record_Processed = 'Y';

  //?Set Error Disposition Accepted or Rejected Text.
  // IF LCL.EDI 824 Err Disposition U is Rejected
  IF LCL.EDI_824_Err_Disposition_U = 'R';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.REJECTED.,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'REJECTED.' (1);

  // PAR.EDI-Record Processed = CND.Error
  PAR.EDI_Record_Processed = 'E';

  ENDIF;

  ENDIF;

  //?Format Email Message 'Shipment Reference #' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force 2 New Lines.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Shipment Reference Number,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Shipment Reference Number' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.:,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + ':' (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,PAR.Load ID Alpha USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + PAR.Load_ID_Alpha_USR (1);

  ENDIF;

  //?Format Email Message 'AES ITN' Line if Exist.
  CASE;

  // IF LCL.EDI 824 Err Disposition U is Accepted
  IF LCL.EDI_824_Err_Disposition_U = 'A';

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.AES ITN:,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'AES ITN:' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.OHE EDI 824 AES ITN #,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.OHE_EDI_824_AES_ITN_# (1);

  ENDIF;

  //?Format Email Message 'Attention' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------------,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------------' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------------,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------------' (*ZERO);

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Attention:,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Attention:' (1);

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.EDI 824 Error Type U = SUBSTRING(DB1.TED01-Err Description,CON.1,CON.1)
  LCL.EDI_824_Error_Type_U = SUBSTRING(DB1.TED01_Err_Description:1:1);

  //?Set Error Type Code Text.
  CASE;

  // IF LCL.EDI 824 Error Type U is Fatal
  IF LCL.EDI_824_Error_Type_U = 'F';

  // LCL.EDI 824 Error Type Code U = CON.FATAL
  LCL.EDI_824_Error_Type_Code_U = 'FATAL';

  //?Set Error Type Code Text.
  // IF LCL.EDI 824 Error Type U is Verify
  IF LCL.EDI_824_Error_Type_U = 'V';

  // LCL.EDI 824 Error Type Code U = CON.VERIFY
  LCL.EDI_824_Error_Type_Code_U = 'VERIFY';

  //?Set Error Type Code Text.
  // IF LCL.EDI 824 Error Type U is Compliance
  IF LCL.EDI_824_Error_Type_U = 'C';

  // LCL.EDI 824 Error Type Code U = CON.COMPLIANCE
  LCL.EDI_824_Error_Type_Code_U = 'COMPLIANCE';

  //?Set Error Type Code Text.
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.EDI 824 Error Type Code U = CON.NOTIFICATION
  LCL.EDI_824_Error_Type_Code_U = 'NOTIFICATION';

  ENDIF;

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.(,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '(' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,DB1.TED01-Applic Err Cond Cde,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + DB1.TED01_Applic_Err_Cond_Cde (0);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-' (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.EDI 824 Error Type Code U,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.EDI_824_Error_Type_Code_U (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.),CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + ')' (*ZERO);

  // LCL.EDI 824 Error Desc USR = SUBSTRING(DB1.TED01-Err Description,CON.5,CON.56)
  LCL.EDI_824_Error_Desc_USR = SUBSTRING(DB1.TED01_Err_Description:5:56);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.EDI 824 Error Desc USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.EDI_824_Error_Desc_USR (1);

  ENDIF;

  ENDIF;

  ENDIF;

  //?Processing for Multiple Records Exist.
  CASE;

  // IF LCL.Count Records        USR is GT 1
  IF LCL.Count_Records_USR > 1;

  // AND LCL.First Time Through USR is Yes
  AND LCL.First_Time_Through_USR = 'Y';

  //?Removed 'NOTc2 - DB1.OTI02-Ref ID Qualifier is ES1 (For ITN)'.
  //?Format Email Data.
  CASE;

  // IF LCL.First Time Through USR is Yes
  IF LCL.First_Time_Through_USR = 'Y';

  // LCL.First Time Through USR = CND.No
  LCL.First_Time_Through_USR = 'N';

  // PAR.Send Email USR = CND.Yes
  PAR.Send_Email_USR = 'Y';

  //?Format Email Subject Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Subject 2 USR = CONCAT(CON.AES Direct Filing -,PAR.Load ID Alpha USR,CON.1)
  LCL.Email_Subject_2_USR = 'AES Direct Filing -' + PAR.Load_ID_Alpha_USR (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,PAR.Customer Purchase Order #,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + PAR.Customer_Purchase_Order_# (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON./,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '/' (1);

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,PAR.Order Number Alpha,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + PAR.Order_Number_Alpha (1);

  //?If Not PROD Then Append 'TEST' to Email Subject Line.
  CASE;

  // IF PAR.Library List Code is Not PRKFLIB
  IF PAR.Library_List_Code <> 'PRKFLIB';

  // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
  LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

  ENDIF;

  ENDIF;

  //?Format Email Message 'We have received' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = CONCAT(CON.We have received your cre,CON.ated filing submitted at,CON
  LCL.Email_Message_2_USR = 'We have received your cre' + 'ated filing submitted at' (0);

  //?Get System Date/Time.
  // Execute function Get System Date/Time 2 US.
  EXECUTE FUNCTION(Get System Date/Time 2 US) TYPE(EXCUSRSRC) ('PUX1UFR');
  PARAMETER(LCL.System_Date_USA_USR);
  PARAMETER(LCL.System_Time_HMS_USR);
  {
   * Get System Date/Time 2 US
   d SysDateUSA      S               D   datfmt(*USA)
   d SysTimeHMS      S              8a
   *
   /free
   SysDateUSA = %date();
   #OTZU1 = %char(SysDateUSA);

   SysTimeHMS = %char(%time():*HMS);
   #OT0U1 = SysTimeHMS;
   /end-free
  }

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.System Date *USA USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.System_Date_USA_USR (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.System Time *HMS USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.System_Time_HMS_USR (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON..,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '.' (0);

  ENDIF;

  //?Format Email Message 'Your Request to' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Your request to the follo,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Your request to the follo' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.wing filing has been,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'wing filing has been' (0);

  // LCL.EDI 824 Err Disposition U = SUBSTRING(LCL.TED01-Err Description,CON.3,CON.1)
  LCL.EDI_824_Err_Disposition_U = SUBSTRING(LCL.TED01_Err_Description:3:1);

  //?Set Error Disposition Accepted or Rejected Text.
  CASE;

  // IF LCL.EDI 824 Err Disposition U is Accepted
  IF LCL.EDI_824_Err_Disposition_U = 'A';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.ACCEPTED.,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'ACCEPTED.' (1);

  // PAR.EDI-Record Processed = CND.Processed
  PAR.EDI_Record_Processed = 'Y';

  //?Set Error Disposition Accepted or Rejected Text.
  // IF LCL.EDI 824 Err Disposition U is Rejected
  IF LCL.EDI_824_Err_Disposition_U = 'R';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.REJECTED.,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'REJECTED.' (1);

  // PAR.EDI-Record Processed = CND.Error
  PAR.EDI_Record_Processed = 'E';

  ENDIF;

  ENDIF;

  //?Format Email Message 'Shipment Reference #' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force 2 New Lines.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Shipment Reference Number,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Shipment Reference Number' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.:,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + ':' (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,PAR.Load ID Alpha USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + PAR.Load_ID_Alpha_USR (1);

  ENDIF;

  //?Format Email Message 'AES ITN' Line if Exist.
  CASE;

  // IF LCL.EDI 824 Err Disposition U is Accepted
  IF LCL.EDI_824_Err_Disposition_U = 'A';

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.AES ITN:,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'AES ITN:' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.OHE EDI 824 AES ITN #,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.OHE_EDI_824_AES_ITN_# (1);

  ENDIF;

  //?Format Email Message 'Attention' Line.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------------,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------------' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------------,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------------' (*ZERO);

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Attention:,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Attention:' (1);

  //?4/14/23 DN-Commented Out. Read thru DB1 Records & Build Instead.
  //?Force New Line. - For DB1 Record.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.EDI 824 Error Type U = SUBSTRING(DB1.TED01-Err Description,CON.1,CON.1)
  LCL.EDI_824_Error_Type_U = SUBSTRING(DB1.TED01_Err_Description:1:1);

  //?Set Error Type Code Text.
  CASE;

  // IF LCL.EDI 824 Error Type U is Fatal
  IF LCL.EDI_824_Error_Type_U = 'F';

  // LCL.EDI 824 Error Type Code U = CON.FATAL
  LCL.EDI_824_Error_Type_Code_U = 'FATAL';

  //?Set Error Type Code Text.
  // IF LCL.EDI 824 Error Type U is Verify
  IF LCL.EDI_824_Error_Type_U = 'V';

  // LCL.EDI 824 Error Type Code U = CON.VERIFY
  LCL.EDI_824_Error_Type_Code_U = 'VERIFY';

  //?Set Error Type Code Text.
  // IF LCL.EDI 824 Error Type U is Compliance
  IF LCL.EDI_824_Error_Type_U = 'C';

  // LCL.EDI 824 Error Type Code U = CON.COMPLIANCE
  LCL.EDI_824_Error_Type_Code_U = 'COMPLIANCE';

  //?Set Error Type Code Text.
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.EDI 824 Error Type Code U = CON.NOTIFICATION
  LCL.EDI_824_Error_Type_Code_U = 'NOTIFICATION';

  ENDIF;

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.(,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '(' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,DB1.TED01-Applic Err Cond Cde,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + DB1.TED01_Applic_Err_Cond_Cde (0);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-' (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.EDI 824 Error Type Code U,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.EDI_824_Error_Type_Code_U (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.),CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + ')' (*ZERO);

  // LCL.EDI 824 Error Desc USR = SUBSTRING(DB1.TED01-Err Description,CON.5,CON.56)
  LCL.EDI_824_Error_Desc_USR = SUBSTRING(DB1.TED01_Err_Description:5:56);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.EDI 824 Error Desc USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.EDI_824_Error_Desc_USR (1);

  ENDIF;

  ENDIF;

  //?Processing for Multiple Records Exist.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Format Email Message Additional 'Attention' Lines if Exist.
  CASE;

  // IF LCL.Count Records        USR is NE 1
  IF LCL.Count_Records_USR <> 1;

  //?Force New Line.
  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.EDI 824 Error Type U = SUBSTRING(DB1.TED01-Err Description,CON.1,CON.1)
  LCL.EDI_824_Error_Type_U = SUBSTRING(DB1.TED01_Err_Description:1:1);

  //?Set Error Type Code Text.
  CASE;

  // IF LCL.EDI 824 Error Type U is Fatal
  IF LCL.EDI_824_Error_Type_U = 'F';

  // LCL.EDI 824 Error Type Code U = CON.FATAL
  LCL.EDI_824_Error_Type_Code_U = 'FATAL';

  //?Set Error Type Code Text.
  // IF LCL.EDI 824 Error Type U is Verify
  IF LCL.EDI_824_Error_Type_U = 'V';

  // LCL.EDI 824 Error Type Code U = CON.VERIFY
  LCL.EDI_824_Error_Type_Code_U = 'VERIFY';

  //?Set Error Type Code Text.
  // IF LCL.EDI 824 Error Type U is Compliance
  IF LCL.EDI_824_Error_Type_U = 'C';

  // LCL.EDI 824 Error Type Code U = CON.COMPLIANCE
  LCL.EDI_824_Error_Type_Code_U = 'COMPLIANCE';

  //?Set Error Type Code Text.
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.EDI 824 Error Type Code U = CON.NOTIFICATION
  LCL.EDI_824_Error_Type_Code_U = 'NOTIFICATION';

  ENDIF;

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.(,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '(' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,DB1.TED01-Applic Err Cond Cde,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + DB1.TED01_Applic_Err_Cond_Cde (0);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-,CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-' (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.EDI 824 Error Type Code U,CON.*ZER
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.EDI_824_Error_Type_Code_U (*ZERO);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.),CON.*ZERO)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + ')' (*ZERO);

  // LCL.EDI 824 Error Desc USR = SUBSTRING(DB1.TED01-Err Description,CON.5,CON.56)
  LCL.EDI_824_Error_Desc_USR = SUBSTRING(DB1.TED01_Err_Description:5:56);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.EDI 824 Error Desc USR,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.EDI_824_Error_Desc_USR (1);

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  //?OK to Send Email?
  CASE;

  // IF PAR.Send Email USR is Yes
  IF PAR.Send_Email_USR = 'Y';

  // Call program Exc ESNDMAIL Generic2 CL.
  CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
  PARAMETER(PAR.Email_Address);
  PARAMETER(LCL.Email_Subject_2_USR);
  PARAMETER(LCL.Email_Message_2_USR);

  ENDIF;

 }

 //?Continue Update If Email was Sent.
 CASE;

 // IF LCL.Send Email USR is Yes
 IF LCL.Send_Email_USR = 'Y';

 //?Update EDI Record Processed in ECP036 per Error Disposition code.
 EXECUTE FUNCTION(Chg EDI-Record Proc StsCH) TYPE(CHGOBJ) FILE(ECP036)           AC2211365;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_#);
 PARAMETER(LCL.EDI_Record_Processed);
 //?IN05690 DN 08/30/23-Commented Out & Moved Below.
 //?Update OHE EDI 824 Info. Check Cancelled Shipment. IN05690 DN 08/30/23
 CASE;

 // IF NOT LCL.Shipment Cancelled USR is Yes
 IF ! LCL.Shipment_Cancelled_USR = 'Y';

 //?Get AES ITN # If 824 Accepted.
 CASE;

 // IF LCL.EDI-Record Processed is Processed
 IF LCL.EDI_Record_Processed = 'Y';

 EXECUTE FUNCTION(Rtv AES ITN #         RT) TYPE(RTVOBJ) FILE(ECP037)            AC2211336;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_#);
 PARAMETER('ES1');
 PARAMETER(LCL.OHE_EDI_824_AES_ITN_#);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?If 'Pending' 601 exist, then we want to update 'BA102-Action Code=
 //?'RX' (Replace) since ITN# was received.
 // LCL.Upd BA102-Action Code USR = CND.Yes
 LCL.Upd_BA102_Action_Code_USR = 'Y';

 //?Get AES ITN # If 824 Accepted.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.OHE EDI 824 AES ITN # = CND.*Blank
 LCL.OHE_EDI_824_AES_ITN_# = *BLANK;

 // LCL.Upd BA102-Action Code USR = CND.No
 LCL.Upd_BA102_Action_Code_USR = 'N';

 ENDIF;

 // Call program Upd OHE EDI 824 Action XF.
 CALL PROGRAM(Upd OHE EDI 824 Action XF) ('PUXXXFR');
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.OHE_Booking_Number);
 PARAMETER(LCL.EDI_Record_Processed);
 PARAMETER('A');
 PARAMETER(LCL.OHE_EDI_824_AES_ITN_#);

 //?Update OHE EDI 824 Info. Check Cancelled Shipment. IN05690 DN 08/30/23
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Processing for Shipment Cancelled. Reset EDI 601/824 Info to Blank.
 // Call program Upd OHE EDI 601/824 InfXF.
 CALL PROGRAM(Upd OHE EDI 601/824 InfXF) ('PVA5XFR');
 PARAMETER(DB1.Load_ID);
 PARAMETER(LCL.OHE_Booking_Number);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(DB1.Reference_ITN);
 PARAMETER(LCL.Load_ID_USR);
 PARAMETER(LCL.New_LID_added_to_order);

 ENDIF;

 //?Update '824 Received Sts' in EDI Export Shpmnt Inf HDR (ECP136).
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Upd 824 Received Sts  RT) TYPE(RTVOBJ) FILE(ECP136)            AC2212777;
 PARAMETER(DB1.Load_ID);
 PARAMETER('Y');
 PARAMETER('Y');
 {
  //?USER: Process Data record

  //?Update to 'Received' Status.
  CASE;

  // IF DB1.EDI 824 Received Sts is No
  IF DB1.EDI_824_Received_Sts = 'N';

  EXECUTE FUNCTION(Chg 824 Received Sts  CH) TYPE(CHGOBJ) FILE(ECP136)            AC2212778;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER(PAR.EDI_824_Received_Sts);
  ENDIF;

 }

 ENDIF;

 //?Update 'Pending' Records in EDI Export Shpmnt Inf HDR (ECP136).
 CASE;

 // IF NOT LCL.Shipment Cancelled USR is Yes
 IF ! LCL.Shipment_Cancelled_USR = 'Y';

 //?IN05690 DN 08/30/23-Added to Check LCL.Shipment Cancelled USR Flag.
 // LCL.First Time Through USR = CND.Yes
 LCL.First_Time_Through_USR = 'Y';

 EXECUTE FUNCTION(Upd Pending EDI 601 RcdRT) TYPE(RTVOBJ) FILE(ECP136)           AC2211482;
 PARAMETER(DB1.Load_ID);
 PARAMETER('P');
 PARAMETER(LCL.Upd_BA102_Action_Code_USR);
 PARAMETER(LCL.First_Time_Through_USR);
 {
  //?USER: Process Data record

  //?Update 'Pending' 601 Records.
  CASE;

  // IF PAR.First Time Through USR is Yes
  IF PAR.First_Time_Through_USR = 'Y';

  // PAR.First Time Through USR = CND.No
  PAR.First_Time_Through_USR = 'N';

  //?GoAnywhere will process this record now.
  //?Update 'BA102-Action Code' if Need To.
  CASE;

  // IF PAR.Upd BA102-Action Code USR is Yes
  IF PAR.Upd_BA102_Action_Code_USR = 'Y';

  //?ITN# Received, Update to 'RX' (Change) if '1' (New).
  CASE;

  // IF DB1.BA102-Action Code is Add/New
  IF DB1.BA102_Action_Code = '1';

  EXECUTE FUNCTION(Chg Pending EDI 601 RcdCH) TYPE(CHGOBJ) FILE(ECP136)           AC2215494;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER('N');
  PARAMETER('RX');
  //?ITN# Received, Update to 'RX' (Change) if '1' (New).
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg EDI Rcd Processed CH) TYPE(CHGOBJ) FILE(ECP136)            AC2211483;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER('N');
  ENDIF;

  //?Update 'BA102-Action Code' if Need To.
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg EDI Rcd Processed CH) TYPE(CHGOBJ) FILE(ECP136)            AC2211483;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER('N');
  ENDIF;

  //?Reset OHE EDI 824 Action to 'Blank' to Reprocess.
  // Call program Upd OHE EDI 824 Action XF.
  CALL PROGRAM(Upd OHE EDI 824 Action XF) ('PUXXXFR');
  PARAMETER(DB1.BA105_Shipment_Ref_#_Load);
  PARAMETER(LCL.OHE_Booking_Number);
  PARAMETER(*BLANK);
  PARAMETER(8);
  PARAMETER(*BLANK);

  //?Update 'Pending' 601 Records.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?GoAnywhere will NOT process these records.
  EXECUTE FUNCTION(Chg EDI Rcd Processed CH) TYPE(CHGOBJ) FILE(ECP136)            AC2211483;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER('X');
  ENDIF;

 }

 //?Update 'Pending' Records in EDI Export Shpmnt Inf HDR (ECP136).
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Processing for Shipment Cancelled. Cancel any 601 Requests.
 EXECUTE FUNCTION(Upd Pending EDI 601 CanRT) TYPE(RTVOBJ) FILE(ECP136)           AC2217386;
 PARAMETER(DB1.Load_ID);
 PARAMETER('P');
 {
  //?USER: Process Data record

  //?GoAnywhere will NOT process these records.
  EXECUTE FUNCTION(Chg EDI Rcd Processed CH) TYPE(CHGOBJ) FILE(ECP136)            AC2211483;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER('X');
 }

 //?Update 601 records for new Load ID
 CASE;

 // IF LCL.New LID added to order is Yes
 IF LCL.New_LID_added_to_order = 'Y';

 // AND LCL.Load ID USR is entered
 AND LCL.Load_ID_USR <> *ZERO;

 EXECUTE FUNCTION(Upd Pending EDI 601 NP RT) TYPE(RTVOBJ) FILE(ECP136)           AC2238884;
 PARAMETER(LCL.Load_ID_USR);
 PARAMETER('P');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Pending EDI 601 RcdCH) TYPE(CHGOBJ) FILE(ECP136)           AC2215494;
  PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
  PARAMETER('N');
  PARAMETER('1');
 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


