// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKMPXFR
// ?Date: 14.08.2025 Time: 02:52:12
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?HISTORY CHANGES
DO;

//?041107 SLM the Rtv further down was changed to pass company number
//?from the Tattoo Fax driver - so we can use the company value
//?The network people can not say what is what unless we can place
//?in the system a Faxing Verification using our company phone numbers
//?The phone number and the selection of faxing verification is in the
//?company values   HPEFAXV...  records will start the process.
//?see these rountines futher down in this process.
//?The seaboard fax number is stored in the
//?company value.
//?we can run this for any company whenever they want during a production
//?run. At this time in the clp PKUQUPR review *qpgmr
//?Currently the faxing is in the HPE Payment Post and Programmers
//?can not get to sections because they are not allow.
//?Install a fax verification routine, will allow to see real faxes
//?test env do not have to be created, but please make sure the
//?fax numbers are ok in the company value.
//?review the HPEFAXV records in the company value
//?we are starting this for TF, DUE to trying to find the
//?duplicate faxes.
//?12/24/2007 slm add email routine
//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

//?Read the Tattoo Fax driver for Fax records only
EXECUTE FUNCTION(Rtv/Fax CrcSum/Dtl I  RT) TYPE(RTVOBJ) FILE(PKD7CPP)           AB1204294;
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Status_3);
PARAMETER(PAR.Post_or_Select_Rpts_USR);
PARAMETER(PAR.Print_Carcass_Analysis_Us);
PARAMETER(PAR.@User_Class);
{
 //?USER: Initialize routine

 // WRK.TFD Producer Sequence Sts = WRK.Blank USR
 WRK.TFD_Producer_Sequence_Sts = WRK.Blank_USR;

 // WRK.TFD Area Code = CON.*BLANK
 WRK.TFD_Area_Code = *BLANK;

 // WRK.TFD Phone Number = CON.*BLANK
 WRK.TFD_Phone_#_or_Email = *BLANK;

 //?comments
 DO;

 //?6/21/2007 slm * out code on the Group Name this will be
 //?                verified on the cl PKUQUPR
 //?                this function was not allow a programmer to
 //?                be processed through this routine.
 //?06/22/2007 slm   change to pass in @user class due to the
 //?                 having a need to pass *qpgmr
 ENDDO;

 // WRK.@User Class = CON.*PGMR
 WRK.@User_Class = *PGMR;

 //?USER: Process Data record

 CASE;

 // IF DB1.TFD Producer Sequence Sts NE WRK.TFD Producer Sequence Sts
 IF DB1.TFD_Producer_Sequence_Sts <> WRK.TFD_Producer_Sequence_Sts;

 // OR DB1.TFD Area Code NE WRK.TFD Area Code
 OR DB1.TFD_Area_Code <> WRK.TFD_Area_Code;

 // OR DB1.TFD Phone Number NE WRK.TFD Phone Number
 OR DB1.TFD_Phone_#_or_Email <> WRK.TFD_Phone_#_or_Email;

 // Call program Exc RTV Fax Sum/Dtl   XF.
 CALL PROGRAM(Exc RTV Fax Sum/Dtl   XF) ('PKMTXFR');
 PARAMETER(DB1.TFD_Producer_Sequence_Sts);
 PARAMETER(DB1.TFD_Area_Code);
 PARAMETER(DB1.TFD_Phone_#_or_Email);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Post_or_Select_Rpts_USR);
 PARAMETER(PAR.Print_Carcass_Analysis_Us);
 PARAMETER(PAR.Status_3);

 // WRK.TFD Producer Sequence Sts = DB1.TFD Producer Sequence Sts
 WRK.TFD_Producer_Sequence_Sts = DB1.TFD_Producer_Sequence_Sts;

 // WRK.TFD Area Code = DB1.TFD Area Code
 WRK.TFD_Area_Code = DB1.TFD_Area_Code;

 // WRK.TFD Phone Number = DB1.TFD Phone Number
 WRK.TFD_Phone_#_or_Email = DB1.TFD_Phone_#_or_Email;

 //?Fax the spool file that was just printed if not QPGMR
 EXECUTE FUNCTION(Rtv Producer          RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1146757;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.Fax_Recipient);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Fax Detail        RT) TYPE(RTVOBJ) FILE(PKEAREP)           AB1206181;
 PARAMETER('HPE');
 PARAMETER(DB1.TFD_Area_Code);
 PARAMETER(DB1.TFD_Phone_#_or_Email);
 PARAMETER(PAR.Company_Recipient_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?4/11/07 slm Added the company number to the next function
 //?            The tattoo fax record will have the company number
 //?            Faxing verification routine
 // Call program Prc Fax Prd/Loc NEW   XF.
 CALL PROGRAM(Prc Fax Prd/Loc NEW   XF) ('PKMVXFR');
 PARAMETER(PAR.Fax_Recipient);
 PARAMETER(PAR.Company_Recipient_Name);
 PARAMETER(DB1.TFD_Area_Code);
 PARAMETER(DB1.TFD_Phone_#_or_Email);
 PARAMETER(DB1.BOH_Company_Number);

 ENDIF;

}


//?Read the Tattoo Fax driver for Email records only
EXECUTE FUNCTION(Rtv/Eml CrcSum/Dtl I  RT) TYPE(RTVOBJ) FILE(PKD7CPP)           AB1283129;
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Status_3);
PARAMETER(PAR.Post_or_Select_Rpts_USR);
PARAMETER(PAR.Print_Carcass_Analysis_Us);
PARAMETER(PAR.@User_Class);
{
 //?USER: Initialize routine

 // WRK.TFD Producer Sequence Sts = WRK.Blank USR
 WRK.TFD_Producer_Sequence_Sts = WRK.Blank_USR;

 // WRK.TFD Area Code = CON.*BLANK
 WRK.TFD_Area_Code = *BLANK;

 // WRK.TFD Phone Number = CON.*BLANK
 WRK.TFD_Phone_#_or_Email = *BLANK;

 //?comments
 DO;

 //?6/21/2007 slm * out code on the Group Name this will be
 //?                verified on the cl PKUQUPR
 //?                this function was not allow a programmer to
 //?                be processed through this routine.
 //?06/22/2007 slm   change to pass in @user class due to the
 //?                 having a need to pass *qpgmr
 //?12/24/2007 slm  Copied from the fax routine and made email routine
 ENDDO;

 // WRK.@User Class = CON.*PGMR
 WRK.@User_Class = *PGMR;

 //?USER: Process Data record

 CASE;

 // IF DB1.TFD Producer Sequence Sts NE WRK.TFD Producer Sequence Sts
 IF DB1.TFD_Producer_Sequence_Sts <> WRK.TFD_Producer_Sequence_Sts;

 // OR DB1.TFD Phone # or Email NE WRK.TFD Phone # or Email
 OR DB1.TFD_Phone_#_or_Email <> WRK.TFD_Phone_#_or_Email;

 //?routine to create the print of the carcass summ & carcass detail
 // Call program Exc RTV Eml Sum/Dtl   XF.
 CALL PROGRAM(Exc RTV Eml Sum/Dtl   XF) ('PLK6XFR');
 PARAMETER(DB1.TFD_Producer_Sequence_Sts);
 PARAMETER(DB1.TFD_Area_Code);
 PARAMETER(DB1.TFD_Phone_#_or_Email);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Post_or_Select_Rpts_USR);
 PARAMETER(PAR.Print_Carcass_Analysis_Us);
 PARAMETER(PAR.Status_3);

 // LCL.Spool File Selection = CON.PLEMPFR$
 LCL.Spool_File_Selection = 'PLEMPFR$';

 //?Email the spool file that was just printed if not QPGMR
 EXECUTE FUNCTION(Rtv Producer          RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1146757;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.PL_Location_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.Fax_Recipient);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Format Subject line
 DO;

 // LCL.@Comment = CONCAT(CON.Carcass Summary/,PAR.PD Producer Code,CON.1)
 LCL.@Comment = 'Carcass Summary/' + PAR.PD_Producer_Code (1);

 CASE;

 // IF DB1.TH Voucher Payment Date is Zero
 IF DB1.TH_Voucher_Payment_Date = *ZERO;

 // LCL.Date Alpha USR = CVTVAR(JOB.*Job date)
 LCL.Date_Alpha_USR = CVTVAR(JOB.*Job_date);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Date Alpha USR = CVTVAR(DB1.TH Voucher Payment Date)
 LCL.Date_Alpha_USR = CVTVAR(DB1.TH_Voucher_Payment_Date);

 ENDIF;

 // LCL.@Comment = CONCAT(LCL.@Comment,LCL.Date Alpha USR,CON.1)
 LCL.@Comment = LCL.@Comment + LCL.Date_Alpha_USR (1);

 ENDDO;

 // Call program CLP Email Routine      UP.
 CALL PROGRAM(CLP Email Routine      UP) ('PLK8UPC');
 PARAMETER(LCL.Spool_File_Selection);
 PARAMETER(DB1.TFD_Phone_#_or_Email);
 PARAMETER(LCL.@Comment);

 // WRK.TFD Producer Sequence Sts = DB1.TFD Producer Sequence Sts
 WRK.TFD_Producer_Sequence_Sts = DB1.TFD_Producer_Sequence_Sts;

 // WRK.TFD Area Code = DB1.TFD Area Code
 WRK.TFD_Area_Code = DB1.TFD_Area_Code;

 // WRK.TFD Phone Number = DB1.TFD Phone Number
 WRK.TFD_Phone_#_or_Email = DB1.TFD_Phone_#_or_Email;

 ENDIF;

}


