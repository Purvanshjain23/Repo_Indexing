// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKZ0XFR
// ?Date: 14.08.2025 Time: 02:50:56
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.PP Payment Error is No Errors
IF WRK.PP_Payment_Error = 'N';

//?Step 6 Producer Posting
CASE;

// IF WRK.Pmt Current Payment Step is Less or Equal to Step 6
IF WRK.Pmt_Current_Payment_Step <= 00006;

//?Step 6  Payment posting and producer Post/Create Producer Vouchers
DO;

CASE;

// IF WRK.Pmt Current Payment Step is Greater then or Equal 5
IF WRK.Pmt_Current_Payment_Step >= 00005;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Pmt_Current_Payment_Step = 00006;

EXECUTE FUNCTION(Upd Paymnt Prc         CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1146820;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing before Data read

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


// Call program Prt Pay Chk Post Rep  PF.
CALL PROGRAM(Prt Pay Chk Post Rep  PF) ('PKT1PFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER('P');
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER('U');
PARAMETER(WRK.@Payment_Error);

//?This report will print a report by producer, and create checks
// Call program Prt Payment Edit/Post PF.
CALL PROGRAM(Prt Payment Edit/Post PF) ('PKS2PFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER('P');
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER('U');
PARAMETER(WRK.@Payment_Error);

// Call program Prt Pur-Jrn Prm/      PF.
CALL PROGRAM(Prt Pur-Jrn Prm/      PF) ('PKTTPFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER('P');
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER('U');
PARAMETER(WRK.@Payment_Sts);

// Call program Prt Pur-Jrn Rsl       PF.
CALL PROGRAM(Prt Pur-Jrn Rsl       PF) ('PKTZPFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER('P');
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER('U');
PARAMETER(WRK.@Payment_Sts);

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Pmt_Current_Payment_Step = 00007;

EXECUTE FUNCTION(Upd Paymnt Prc         CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1146820;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing before Data read

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDIF;

ENDDO;

ENDIF;

//?Step 7 Reports
CASE;

// IF WRK.Pmt Current Payment Step is 00007 Carcass Summary
IF WRK.Pmt_Current_Payment_Step = 00007;

//?Carcass summary, carcass detail, & additional processing
DO;

DO;

// Call program Upd Tto/Prd Lean Dist XF.
CALL PROGRAM(Upd Tto/Prd Lean Dist XF) ('PKTDXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);

EXECUTE FUNCTION(Rtv/Prt CrcSm,Dtl Frm RT) TYPE(RTVOBJ) FILE(PKC6CPP)           AB1149198;
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 //?USER: Process Data record

 //?Print Carc Sum
 CASE;

 // IF DB1.Tattoo Header Action is Carc Sum
 IF DB1.Tattoo_Header_Action = 'Carc Sum';

 // Call program Zzz Crc Sum on Form   Pf.
 CALL PROGRAM(Zzz Crc Sum on Form   Pf) ('PKW9PFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER('N');

 //?Print Live as Carcass
 EXECUTE FUNCTION(Rtv Payment Type      RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1172025;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Payment_Type);
 PARAMETER(WRK.TH_Hog_Class_Type);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF WRK.TH Payment Type is Live
 IF WRK.TH_Payment_Type = 'L';

 // AND WRK.TH Hog Class Type is Market
 AND WRK.TH_Hog_Class_Type = 'M';

 // Call program Zzz Crc Sum on Form   Pf.
 CALL PROGRAM(Zzz Crc Sum on Form   Pf) ('PKW9PFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER('Y');

 ENDIF;

 ENDIF;

 //?Print Crc Dtl
 CASE;

 // IF DB1.Tattoo Header Action is Prt Crc Dtl
 IF DB1.Tattoo_Header_Action = 'Prt CrcDtl';

 // Call program ZZt Carcass Detail    zz.
 CALL PROGRAM(ZZt Carcass Detail    zz) ('PKTCPFR');
 PARAMETER(DB1.Tattoo_Sequence_Number);
 PARAMETER('N');
 PARAMETER(PAR.Oms_System_Value_Alpha);

 // Call program ZZt Carcass Detail    zz.
 CALL PROGRAM(ZZt Carcass Detail    zz) ('PKTCPFR');
 PARAMETER(DB1.Tattoo_Sequence_Number);
 PARAMETER('Y');
 PARAMETER(PAR.Oms_System_Value_Alpha);

 ENDIF;

}


// Call program ZZt Carcass Detail    zz.
CALL PROGRAM(ZZt Carcass Detail    zz) ('PKTCPFR');
PARAMETER(WRK.Tattoo_Sequence_Number);
PARAMETER('N');
PARAMETER(PAR.Oms_System_Value_Alpha);

// WRK.Pmt Current Payment Step = CND.99999 Normal EOJ
WRK.Pmt_Current_Payment_Step = 99999;

EXECUTE FUNCTION(Upd Paymnt Prc         CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1146820;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing before Data read

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


ENDDO;

ENDDO;

ENDIF;

//?Step End of Job **** Normal EoJ
CASE;

// IF WRK.Pmt Current Payment Step is 99999 Normal EOJ
IF WRK.Pmt_Current_Payment_Step = 99999;

//?Step End of Job update payment date and step
DO;

EXECUTE FUNCTION(Chg Payment Date/Step  IF) TYPE(EXCINTFUN)                     AB1147406;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(WRK.Pmt_Current_Payment_Date);
PARAMETER(WRK.Pmt_Current_Payment_Step);
{
 //?Execute internal function

 //?This function will move either current kill
 //?or next kill date to payment date, and set next number to zero.
 //?This routine should only be used at the tail end of
 //?the batch processing.
 EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(WRK.Pmt_Current_Payment_Date);
 PARAMETER(WRK.Pmt_Current_Payment_Step);
 PARAMETER(WRK.PP_Commission_Paym_Error);
 PARAMETER(WRK.PP_Payment_Error);
 PARAMETER(WRK.PP_Unused_Nbr_1);
 PARAMETER(WRK.PP_Repayment_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Pmt Current Payment Step is 99999 Normal EOJ
 IF PAR.Pmt_Current_Payment_Step = 99999;

 //?Based on Payment date Get Next Current Kill date
 // Call program Rtv Nxt Kill Dt 2 OMS XF.
 CALL PROGRAM(Rtv Nxt Kill Dt 2 OMS XF) ('PDUXXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(WRK.Pmt_Current_Payment_Date);
 PARAMETER(WRK.Current_Kill_Date);

 // WRK.Pmt Current Payment Step = CON.1
 WRK.Pmt_Current_Payment_Step = 1;

 // WRK.Pmt Payment Error = CND.No Validation Performed
 WRK.Pmt_Payment_Error = *BLANK;

 // WRK.PP Commission Paym Error = CND.No Errors
 WRK.PP_Commission_Paym_Error = 'N';

 EXECUTE FUNCTION(Chg Payment Date/Step  CH) TYPE(CHGOBJ) FILE(PKC4REP)          AB1147408;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(WRK.Current_Kill_Date);
 PARAMETER(WRK.Pmt_Current_Payment_Step);
 PARAMETER(WRK.PP_Commission_Paym_Error);
 PARAMETER(WRK.PP_Payment_Error);
 {
  //?USER: Processing before Data read

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?*ERROR PAYMENT STEP NOT AT END OF JOB
 // Send error message - 'Payment Processing Error'
 ERROR(PRK0436);

 // PGM.*Return code = CND.Payment Processing Error
 PGM.*Return_code = 'PRK0436';

 ENDIF;

}


ENDDO;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

