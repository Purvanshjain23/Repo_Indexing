// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBOAXFR
// ?Date: 14.08.2025 Time: 03:48:40
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?RMC 3/7/22 save order number to only process order once from pmd4cpp
//?order may have 2 rcds in workfile - one with price code, one without
//?  only process 1 of them
//?* Read the work file, which was built for requested PO#'s
EXECUTE FUNCTION(RTV Orders by PO#     IF) TYPE(EXCINTFUN)                      AC2093711;
PARAMETER(PAR.Customer_Purchase_Order_#);
PARAMETER(PAR.Warehouse_Type);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Customer_Number_Pass_USR);
PARAMETER(PAR.Manifest_Type_STS);
PARAMETER(PAR.Email_Address);
PARAMETER(PAR.Status_Y_or_N);
{
 //?Execute internal function

 // WRK.A/R Customer Number = PAR.Customer Number Pass  USR
 WRK.AR_Customer_Number = PAR.Customer_Number_Pass_USR;

 // WRK.Company Number = PAR.Company Number Pass   USR
 WRK.Company_Number = PAR.Company_Number_Pass_USR;

 EXECUTE FUNCTION(RTV all orders by PO# RT) TYPE(RTVOBJ) FILE(PMD4CPP)           AC2093713;
 PARAMETER(PAR.Return_Code_Usr);
 PARAMETER(1);
 PARAMETER(WRK.Company_Number);
 PARAMETER(WRK.AR_Customer_Number);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.Manifest_Type_STS);
 PARAMETER(PAR.Email_Address);
 PARAMETER(PAR.Status_Y_or_N);
 {
  //?USER: Initialize routine

  //?RMC 3/7/22 save order number to only process order once from pmd4cpp
  //?order may have 2 rcds in workfile - one with price code, one without
  //?  only process 1 of them
  // LCL.Order Number = CON.*ZERO
  LCL.Order_Number = *ZERO;

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  CASE;

  // IF DB1.Order Number EQ LCL.Order Number
  IF DB1.Order_Number = LCL.Order_Number;

  // AND LCL.Order Number is Greater then zero
  AND LCL.Order_Number > *ZERO;

  //?order may have 2 rcds in workfile - one with price code, one without
  //?  only process 1 of them
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Order Number = DB1.Order Number
  LCL.Order_Number = DB1.Order_Number;

  //?* Read the work file, which was built for requested PO#'s
  // PAR.Subject Line USR = CON.*BLANK
  PAR.Subject_Line_USR = *BLANK;

  //?* Format the Subject Line and the Message
  // PAR.Text USR 7 = CVTVAR(DB1.A/R Customer Number)
  PAR.Text_USR_7 = CVTVAR(DB1.AR_Customer_Number);

  // WRK.Company Number Alpha = CVTVAR(DB1.Company Number)
  WRK.Company_Number_Alpha = CVTVAR(DB1.Company_Number);

  // PAR.Order Number Alpha = CVTVAR(DB1.Order Number)
  PAR.Order_Number_Alpha = CVTVAR(DB1.Order_Number);

  //?**  Esend will only accept 60 characters for the Subject line
  // PAR.Subject Line USR = CONCAT(CON.Co#,WRK.Company Number Alpha,CON.1)
  PAR.Subject_Line_USR = 'Co#' + WRK.Company_Number_Alpha (1);

  // PAR.Subject Line USR = CONCAT(PAR.Subject Line USR,CON., Cust.,CON.*ZERO)
  PAR.Subject_Line_USR = PAR.Subject_Line_USR + ', Cust.' (0);

  // PAR.Subject Line USR = CONCAT(PAR.Subject Line USR,PAR.Text USR 7,CON.1)
  PAR.Subject_Line_USR = PAR.Subject_Line_USR + PAR.Text_USR_7 (1);

  // PAR.Subject Line USR = CONCAT(PAR.Subject Line USR,CON.PO#,CON.1)
  PAR.Subject_Line_USR = PAR.Subject_Line_USR + 'PO#' (1);

  // PAR.Subject Line USR = CONCAT(PAR.Subject Line USR,DB1.Customer Purchase Order #,CON.1)
  PAR.Subject_Line_USR = PAR.Subject_Line_USR + DB1.Customer_Purchase_Order_# (1);

  // PAR.Subject Line USR = CONCAT(PAR.Subject Line USR,CON.Ord#,CON.1)
  PAR.Subject_Line_USR = PAR.Subject_Line_USR + 'Ord#' (1);

  // PAR.Subject Line USR = CONCAT(PAR.Subject Line USR,PAR.Order Number Alpha,CON.1)
  PAR.Subject_Line_USR = PAR.Subject_Line_USR + PAR.Order_Number_Alpha (1);

  // PAR.Order Number 1  PASS  USR = DB1.Order Number
  PAR.Order_Number_1_PASS_USR = DB1.Order_Number;

  // PAR.Company Number Pass   USR = DB1.Company Number
  PAR.Company_Number_Pass_USR = DB1.Company_Number;

  //?Assign print file based on Report Type (Sales Summary or Detail) E003081
  CASE;

  // IF PAR.Manifest Type STS is Sales Summary
  IF PAR.Manifest_Type_STS = 'SS';

  // OR PAR.Manifest Type STS is Sales Detail
  OR PAR.Manifest_Type_STS = 'SD';

  // LCL.Spool File Selection = CON.OMD0PFR$
  LCL.Spool_File_Selection = 'OMD0PFR$';

  //?Assign print file based on Report Type (Sales Summary or Detail) E003081
  // IF PAR.Manifest Type STS is Customer Detail
  IF PAR.Manifest_Type_STS = 'CD';

  // LCL.Spool File Selection = CON.OMDZPFR$
  LCL.Spool_File_Selection = 'OMDZPFR$';

  ENDIF;

  //?* Print then email the report
  // Call program CLP Sbm Man Dtl as XLS UP.
  CALL PROGRAM(CLP Sbm Man Dtl as XLS UP) ('PBN7UPC');
  PARAMETER(LCL.Return_Code_Usr);
  PARAMETER(PAR.Company_Number_Pass_USR);
  PARAMETER(PAR.Customer_Number_Pass_USR);
  PARAMETER(PAR.Order_Number_1_PASS_USR);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(PAR.Manifest_Type_STS);
  PARAMETER(PAR.Email_Address);
  PARAMETER(PAR.Subject_Line_USR);
  PARAMETER(PAR.Status_Y_or_N);

  ENDIF;

 }

}


