     H/TITLE Clc Purge Date        XF  Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJBADE
     H* Date          : 06/12/19  Time  : 14:44:57
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDLPREL1IF  E           K        DISK
      * RTV : Purge Control Application Retrieval index
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     E                    YDOW        7  1               *Days of week
     I@LPREPQ
      * Purge Control Application Retrieval index
      * Renamed input format fields
     I              LPHOAA                          WAHOAA
     I              LPEGVN                          WAEGVN
     I              LPXWCD                          WAXWCD
     I              LPE1NB                          WAE1NB
     I              LPUPST                          WAUPST
     I              LPK8DT                          WAK8DT
     I              LPGJTX                          WAGJTX
     I              LPEIVN                          WAEIVN
     I              LPQRDT                          WAQRDT
     I              LPQSDT                          WAQSDT
     I              LPFHNY                          WAFHNY
     I              LPI3T1                          WAI3T1
     I              LPUNUS                          WAUNUS
     I              LPUNU2                          WAUNU2
     I              LPVSST                          WAVSST
     I              LPMJDT                          WAMJDT
     I              LPBETM                          WABETM
     I              LPCCVN                          WACCVN
     I              LPCDVN                          WACDVN
     I              LPMKDT                          WAMKDT
     I              LPBFTM                          WABFTM
     I              LPCEVN                          WACEVN
     I              LPCFVN                          WACFVN
      *
     I@DRRETH
      * User Profile Control      Retrieval index       NV
      * Renamed input format fields
     I              DRAJVN                          WBAJVN
     I              DRAUNA                          WBAUNA
     I              DRB8NA                          WBB8NA
     I              DRAHVN                          WBAHVN
     I              DRI6ST                          WBI6ST
     I              DRI7ST                          WBI7ST
     I              DRXMST                          WBXMST
     I              DRXNST                          WBXNST
     I              DRI8ST                          WBI8ST
     I              DRNLNB                          WBNLNB
     I              DRMPNA                          WBMPNA
     I              DRBCCD                          WBBCCD
     I              DRAIC3                          WBAIC3
     I              DRDQCD                          WBDQCD
     I              DRDRCD                          WBDRCD
     I              DRAJCD                          WBAJCD
     I              DRBUVN                          WBBUVN
     I              DRUVST                          WBUVST
     I              DRUWST                          WBUWST
     I              DRUXST                          WBUXST
     I              DRAATM                          WBAATM
     I              DRAYNA                          WBAYNA
     I              DRA0NA                          WBA0NA
     I              DRAXDT                          WBAXDT
      *
     I@DTRETE
      * User Application Profile  Retrieval index       NV
      * Renamed input format fields
     I              DTAJVN                          WCAJVN
     I              DTDNCD                          WCDNCD
     I              DTAIC3                          WCAIC3
     I              DTDQCD                          WCDQCD
     I              DTDRCD                          WCDRCD
     I              DTAJCD                          WCAJCD
     I              DTJFST                          WCJFST
     I              DTUVST                          WCUVST
     I              DTUWST                          WCUWST
     I              DTUXST                          WCUXST
     I              DTAATM                          WCAATM
     I              DTAYNA                          WCAYNA
     I              DTA0NA                          WCA0NA
     I              DTAXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD1T        DS
      * Internal date
     I                                        1   70XDINT1
     I                                        1   30XDINY1
     I                                        4   50XDINM1
     I                                        6   70XDIND1
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDMT        DS
      * Duration mask
     I                                        1   70XDIMDT
     I                                        1   30XDIMYY
     I                                        4   50XDIMMM
     I                                        6   70XDIMDD
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Purge Control Application
      * I : RST PCG Code
     I                                        1   3 P1HOAA
      * I : RST PCG From Library
     I                                        4  13 P1EGVN
      * I : RST Purge Application Code
     I                                       14  19 P1XWCD
     IP2PARM      DS
      * I :  Date From             USR
     I                                    P   1   40P2JEDT
     IP3PARM      DS
      * B :  Purge Date USR
     I                                    P   1   40P3NGDT
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HOAA    PARM           WP0001  3        PCG Code
     C           P1EGVN    PARM           WP0002 10        PCG From Librar
     C           P1XWCD    PARM           WP0003  6        Purge Applicati
     C           P2JEDT    PARM           WP0004  70       Date From
     C           P3NGDT    PARM P3NGDT    WP0005  70       Purge Date USR
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Clc Purge Date        XF
      * ***** Change log and comments
     C                     EXSR UASUBR                     ***** Change lo
      * Clc Purge Date        RT - Purge Control Application  * 
     C                     EXSR SARVGN
      * CASE: PAR.Purge Date USR is not entered
     C           P3NGDT    IFEQ *ZERO                      *IF
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     MOVEL'ERROR'   W0RTN            *Return code
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Clc Purge Date        RT - Purge Control Application  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  30       Company Number
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ** Rtv co# using user profile since the co# is no longer in
      * ** the file.                            08/01/2007 LJB FP1009
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * RTV default Company    IF
      * Rtv Profile Model     RT - User Profile Control  * 
     C                     EXSR SBRVGN
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Default Co   RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL##USR     WL0001    P      User Profile Na
     C                     MOVEL'P/S'     WL0002    P      Application Cod
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WN0001           Company Number
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Default Co   RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0001    P      User Profile Na
     C                     MOVEL'P/S'     WL0002    P      Application Cod
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WN0001           Company Number
     C                     END                             *FI
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAHOAA           PCG Code
     C                     KFLD           WAEGVN           PCG From Librar
     C                     KFLD           WAXWCD           Purge Applicati
      * Setup key
     C                     MOVELP1HOAA    WAHOAA           PCG Code
     C                     MOVELP1EGVN    WAEGVN           PCG From Librar
     C                     MOVELP1XWCD    WAXWCD           Purge Applicati
      * Establish starting position
     C           KRSSA     CHAIN@LPREPQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2529' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P3NGDT           Purge Date USR
     C                     Z-ADD*ZERO     WN0001           Company Number
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Purge Application Code EQ PAR.Purge Application Code
     C           WAXWCD    IFEQ P1XWCD                     *IF
      * CASE: DB1.Purge Run Frequency is Monthly
     C           WAUPST    IFEQ 'M'                        *IF
      * Rtv Prior Month       XF - Calendar  * 
     C                     CALL 'POG6XFR'              90  Rtv Prior Month
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WN0001    WQ0001  30       Company Number
     C                     PARM P2JEDT    WQ0002  70       Post to G/L Dat
     C           YL0001    PARM *ZERO     WQ0003  70       Date From
     C           YL0002    PARM *ZERO     WQ0004  70       Date To
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POG6XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C           WAE1NB    MULT -1        YL0003           Purge Retention
      * PAR.Purge Date USR = LCL.Date To               USR + LCL.Purge Re
     C           YL0002    ADD  1000000   XDINDT
     C                     Z-ADDYL0003    XDURR   80
     C                     EXSR XDAMO
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3NGDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3NGDT
     C                     END
     C                     ELSE
      * CASE: DB1.Purge Run Frequency is Weekly
     C           WAUPST    IFEQ 'W'                        *IF
     C           WAE1NB    MULT -7        YL0003           Purge Retention
      * PAR.Purge Date USR = PAR.Date From             USR + LCL.Purge Re
     C           P2JEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0003    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3NGDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3NGDT
     C                     END
     C                     ELSE
      * CASE: DB1.Purge Run Frequency is Yearly
     C           WAUPST    IFEQ 'Y'                        *IF
      * Rtv Prior Year        XF - Calendar  * 
     C                     CALL 'POHGXFR'              90  Rtv Prior Year
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WN0001    WQ0005  30       Company Number
     C                     PARM P2JEDT    WQ0006  70       Post to G/L Dat
     C           YL0001    PARM *ZERO     WQ0007  70       Date From
     C           YL0002    PARM *ZERO     WQ0008  70       Date To
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POHGXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C           WAE1NB    MULT -1        YL0003           Purge Retention
      * PAR.Purge Date USR = LCL.Date To               USR + LCL.Purge Re
     C           YL0002    ADD  1000000   XDINDT
     C                     Z-ADDYL0003    XDURR   80
     C                     EXSR XDAYR
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P3NGDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P3NGDT
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Profile Model     RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAJVN           User Profile Na
      * Setup key
     C                     MOVEL##USR     WBAJVN           User Profile Na
      * Establish starting position
     C           KRSSB     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0002           User Code Model
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Appl. Default Co   RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCAJVN           User Profile Na
     C                     KFLD           WCDNCD           Application Cod
      * Setup key
     C                     MOVELWL0001    WCAJVN           User Profile Na
     C                     MOVELWL0002    WCDNCD           Application Cod
      * Establish starting position
     C           KRSSC     CHAIN@DTRETE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0767' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0003           Company Number
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWCAIC3    WL0003           Company Number
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change log and comments
      *================================================================
      * ** 08/31/2007 LJB FP1009
      * ** "Date From" = Job Date - Date to start the calculations
      * ** "Purge Date" = Job date minus the retention period. This
      * ** is the "Purge Through" date or the date to stop the purge.
      * ** Everything up through but not including this date will be
      * ** deleted. See the narative for additional explanation.
      * ** 08/03/2007 LJB FP1009
      * ** Changed program to be built over an index instead of *NONE
      * ** so it wouldn't read the entire file.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDAG1     BEGSR
      *================================================================
      * Prepare parameters to calculate Date Increment
      *================================================================
     C           XDURR     IFLT 0
      * Negative date increment
     C                     Z-ADD-1        XDWK2   60
     C                     ELSE
      * Positive date increment
     C                     Z-ADD1         XDWK2
     C                     ENDIF
     C                     MULT XDWK2     XDURR
      * Refresh the length of updated month (returned in XDWK1).
     C                     Z-ADDXDINDT    XDINT2
     C                     EXSR XDMNH
     C           XDINDD    IFEQ XDWK1
      * Save the start day
     C                     Z-ADD0         XDINDD
     C                     ENDIF
     C                     Z-ADD0         XDINT2
     C                     Z-ADD0         XDIMDT
     C                     MOVEL*BLANK    W0RTN   7
      *================================================================
     CSR         XDAG1E    ENDSR
      /EJECT
     CSR         XDAG2     BEGSR
      *================================================================
      * General calculations driven by Increment Mask
      *================================================================
      * Extract days
     C           XDIMDD    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDIND2
     C                     ENDIF
      * Extract months
     C           XDIMMM    IFEQ 1
     C                     DIV  100       XDURR   80
     C                     MVR            XDINM2
     C                     ENDIF
      * Extract years
     C           XDIMYY    IFEQ 1
     C                     DIV  1000      XDURR   80
     C                     MVR            XDINY2
     C                     ENDIF
     C           XDURR     IFNE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      * Normalize month increment
     C           XDINM2    DIV  12        XDURR   80
     C                     MVR            XDINM2
     C                     ADD  XDURR     XDINY2
      * Apply year increment
     C                     MULT XDWK2     XDINY2
     C                     ADD  XDINYY    XDINY2
      * Apply month increment
     C                     MULT XDWK2     XDINM2
     C                     ADD  XDINMM    XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C           XDINDD    IFGT XDWK1
     C           XDINDD    OREQ 0
      * Restore the start day
     C                     Z-ADDXDWK1     XDINDD
     C                     ENDIF
      * Apply day increment
     C                     MULT XDWK2     XDIND2
     C           XDINDD    ADD  XDIND2    XDURR
     C                     Z-ADD0         XDIND2
      * Normalize day increment
     C           XDIND2    DOWLE0
     C           XDURR     IFEQ 0
     C                     ADD  XDWK2     XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     Z-ADDXDWK1     XDURR
     C                     ENDIF
     C           XDURR     IFLT 0
     C                     SUB  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ADD  XDWK1     XDURR
     C                     ELSE
     C           XDURR     IFGT XDWK1
     C                     SUB  XDWK1     XDURR
     C                     ADD  1         XDINM2
      * Normalize updated month
     C                     EXSR XDNZM
     C                     ELSE
     C                     Z-ADDXDURR     XDIND2
     C                     ENDIF
     C                     ENDIF
     C                     ENDDO
      * Check updated year
     C           XDINY2    IFGE 400
     C           XDINY2    ORLE 0
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
     C           W0RTN     IFEQ 'Y2U0006'
     C                     Z-ADD0         XDINDT
     C                     ELSE
     C                     Z-ADDXDINT2    XDINDT
     C                     ENDIF
      *================================================================
     CSR         XDAG2E    ENDSR
      /EJECT
     CSR         XDAMO     BEGSR
      *================================================================
      * Calculate duration, *MONTHS
      *================================================================
      * Transform the *MONTHS format to the *YYMM format.
     C                     DIV  12        XDURR
     C                     MVR            XDWK1
     C                     MULT 100       XDURR
     C                     ADD  XDWK1     XDURR
      * Check and adjust End Of Month dates, if any.
     C                     EXSR XDAG1
      * Define increment Mask.
     C                     Z-ADD1         XDIMYY
     C                     Z-ADD1         XDIMMM
      * Initiate general DATE INCREMENT calculations.
     C                     EXSR XDAG2
      *================================================================
     CSR         XDAMOE    ENDSR
      /EJECT
     CSR         XDAYR     BEGSR
      *================================================================
      * Calculate duration, *YEARS
      *================================================================
      * Check and adjust End Of Month dates, if any.
     C                     EXSR XDAG1
      * Define increment Mask.
     C                     Z-ADD1         XDIMYY
      * Initiate general DATE INCREMENT calculations.
     C                     EXSR XDAG2
      *================================================================
     CSR         XDAYRE    ENDSR
      /EJECT
     CSR         XDMNH     BEGSR
      *================================================================
      * Find length(XDWK1) in days for the month passed in XDIN2TS
      *================================================================
     C           XDINM2    IFEQ 4
     C           XDINM2    OREQ 6
     C           XDINM2    OREQ 9
     C           XDINM2    OREQ 11
     C                     Z-ADD30        XDWK1   80
     C                     ELSE
     C                     Z-ADD31        XDWK1
     C                     END
     C           XDINM2    IFEQ 2
      * Determine February length
     C           XDINY2    IFEQ 300
     C           XDINY2    OREQ 100
     C                     Z-ADD28        XDWK1
     C                     ELSE
     C           XDINY2    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD29        XDWK1
     C                     ELSE
     C                     Z-ADD28        XDWK1
     C                     END
     C                     END
     C                     END
      *================================================================
     CSR         XDMNHE    ENDSR
      /EJECT
     CSR         XDNZM     BEGSR
      *================================================================
      * Normalize days
      *================================================================
     C           XDINM2    IFLT 1
     C                     ADD  12        XDINM2
     C                     SUB  1         XDINY2
     C                     ENDIF
     C           XDINM2    IFGT 12
     C                     SUB  12        XDINM2
     C                     ADD  1         XDINY2
     C                     ENDIF
      * Refresh the length of updated month (returned in XDWK1).
     C                     EXSR XDMNH
      *================================================================
     CSR         XDNZME    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAE1NB           Purge Retention
     C                     Z-ADD*ZERO     WAK8DT           Purge Last Run
     C                     Z-ADD*ZERO     WAQRDT           Unused Date
     C                     Z-ADD*ZERO     WAQSDT           Unused Date 2
     C                     Z-ADD*ZERO     WAFHNY           Unused Number 1
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBNLNB           Entity Number
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     MOVEL*BLANK    WL0001 10
     C                     MOVEL*BLANK    WL0002  6
     C                     Z-ADD*ZERO     WL0003  30
      * Define local work field Date From             USR
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field Date To               USR
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field Purge Retention Period
     C                     Z-ADD*ZERO     YL0003  30
      *================================================================
     CSR         ZZEXIT    ENDSR
