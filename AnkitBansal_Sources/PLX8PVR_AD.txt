// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLX8PVR
// ?Date: 14.08.2025 Time: 02:55:44
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?----------------------------------------------------------------
//?11/08/2016 Brad Baden E7823 - Allow for Multi-Company users
//?- If User Application record allows for Multi-Company processing,
//?  then make Company field input capable and allow valid companies.
//?- If User Application record does not allow for Multi-Company
//?  processing, then protect the Company field and load user company.
//?----------------------------------------------------------------
//?E4386 JJH 12/08/15 - Truck Delivery Times Report
//?- Report is to only be ran for St. Joseph
//?- Prompt to accept Delivery Date To and Delivery Date From Range
ENDDO;

// PAR.Oms Application Code = CND.HPE Receiving
PAR.Oms_Application_Code = 'HPERCV';

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.Oms_Application_Code);
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

//?USER: Load screen

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// DTL.CC Company Number = PAR.CC Company Number
DTL.CC_Company_Number = PAR.CC_Company_Number;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Company_Name_USR);
PARAMETER(LCL.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?Determine whether or not to protect Company field
CASE;

// IF PAR.Oms Allow Multi-Company is Yes
IF PAR.Oms_Allow_Multi_Company = 'Y';

// LCL.Display Output Only Usr = CND.No
LCL.Display_Output_Only_Usr = 'N';

//?Determine whether or not to protect Company field
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Display Output Only Usr = CND.Yes
LCL.Display_Output_Only_Usr = 'Y';

ENDIF;

// DTL.DT Delivery Date = JOB.*Job date
DTL.DT_Delivery_Date = JOB.*Job_date;

// DTL.Delivery Date To = JOB.*Job date
DTL.Delivery_Date_To = JOB.*Job_date;

// DTL.EMail Address = CND.Not Entered
DTL.EMail_Address = *BLANK;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

//?USER: Validate fields

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Company_Name_USR);
PARAMETER(LCL.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?Date and Email validation
CASE;

// IF DTL.DT Delivery Date is Not Entered
IF DTL.DT_Delivery_Date = 0;

// Send error message - 'Delivery Date From is required.'
ERROR(PRK1385);
MSGPARM(DTL.DT_Delivery_Date);

//?Date and Email validation
// IF DTL.Delivery Date To is Not Entered
IF DTL.Delivery_Date_To = 0;

// Send error message - 'Delivery Date To is required.'
ERROR(PRK1386);
MSGPARM(DTL.DT_Delivery_Date);

//?Date and Email validation
// IF DTL.DT Delivery Date GT DTL.Delivery Date To
IF DTL.DT_Delivery_Date > DTL.Delivery_Date_To;

// Send error message - 'Delivery Date From must be less than or equal Delivery Date To.'
ERROR(PRK1387);
MSGPARM(DTL.DT_Delivery_Date);

//?Date and Email validation
// IF DTL.EMail Address is Not Entered
IF DTL.EMail_Address = *BLANK;

// Send error message - 'Email Address is required'
ERROR(PRK1196);
MSGPARM(DTL.EMail_Address);

ENDIF;

//?USER: User defined action

//?Convert Numeric Fields to Alpha Fields
// LCL.CC Company Number Alpha = CVTVAR(DTL.CC Company Number)
LCL.CC_Company_Number_Alpha = CVTVAR(DTL.CC_Company_Number);

// LCL.Sched Delv Dt From Alpha = CVTVAR(DTL.DT Delivery Date)
LCL.Sched_Delv_Dt_From_Alpha = CVTVAR(DTL.DT_Delivery_Date);

// LCL.Sched Delv Dt To Alpha = CVTVAR(DTL.Delivery Date To)
LCL.Sched_Delv_Dt_To_Alpha = CVTVAR(DTL.Delivery_Date_To);

//?Submit Job to Create WF Truck Delivery Time and Create SEQUEL
// Call program Prt WF Truck Delivery UP.
SBMJOB;
CALL PROGRAM(Prt WF Truck Delivery UP) ('PLYAUPR');
PARAMETER(LCL.CC_Company_Number_Alpha);
PARAMETER(LCL.Sched_Delv_Dt_From_Alpha);
PARAMETER(LCL.Sched_Delv_Dt_To_Alpha);
PARAMETER(DTL.EMail_Address);
SBMJOBOVR JOB(TRKDLVTM);
SBMJOBOVR LOG(4;
SBMJOBOVR 00;
SBMJOBOVR *SECLVL);
SBMJOBEND;

//?Send Information Message
// Send information message - 'Report has been emailed'
MESSAGE(PRK1200 *INFO);

