      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP117
      * TITLE:       REVISE RATION
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     12/02/94
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD/CHANGE/DELETE
      *           A RATION.
      *
      *           THIS PROGRAM IS CALLED FROM HP417 - WORK WITH
      *           RATIONS.
      *
      *           THE FIELD 'MODE' CONTAINS THE VALUE PASSED INTO
      *           THIS PROGRAM FROM THE CALLING PROGRAM.  THE FIELD
      *           'DFMODE' IS THE SCREEN FIELD THAT DISPLAYS THE
      *           VALUE OF 'MODE'.  MODE WILL BE CREATE, REVISE OR
      *           DELETE.           ONCE IN THE PROGRAM, MODE AND
      *           DFMODE WILL NEVER CHANGE.  HOWEVER, THE ACTION
      *           BEING PERFORMED CAN CHANGE DEPENDING ON THE
      *           FUNCTION KEYS THE USER TAKES.
      *
      *           THE USER MAY DELETE AN EXISTING RECORD BY TAKING
      *           F11=DELETE FROM THIS PROGRAM OR OPTION 4=DELETE
      *           FROM THE WORK WITH. IF THE USER IS
      *           DELETING WITH 4=DELETE, NO PANEL WILL BE DISPLAYED
      *           FROM THIS PROGRAM UNLESS THERE IS AN ERROR
      *           ON THE ATTEMPTED DELETION.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 04/26/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC.
      *
      * 03/09/98  LEANNE FEDOR
      *           RECOMPILE ONLY. FEED POUNDS AND FEED AMOUNT FIELDS
      *           INCREASED IN SIZE PER NATHAN MALONE.
      *
      * 01/30/01  LeAnne Fedor
      *           Recompile only.  Production type was removed from feed files.
      *
      * 12/27/01  LeAnne Fedor
      *           Added 'Maximum Age(Days)' to Rations file.
      *
      * 02/10/02  LeAnne Fedor
      *           Changed logic for 'status'. When the user has set the status of
      *           the ration to 'inactive', we will automatically retrieve all additive
      *           records and set their status to inactive...instead of issuing an error
      *           message telling the user to go inactivate the additives.
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD117    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE         (KEY: PPPPCD)
      *
     FHSL038M   IF   E           K DISK
      *    FEED TICKET DETAIL       (KEY: FDRNCD FDADCD)
      *
     FHSP070    IF   E           K DISK
      *    RATION TYPE              (KEY: RTRTCD)
      *
     FHSP071    UF A E           K DISK
      *    RATION                   (KEY: RNRNCD)
      *
     FHSP072    UF   E           K DISK
      *    RATION/ADDITIVE
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     UPDATE        $UPD1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR FIELDS IN THE DISPLAY FILE RECORD
      *
     C                   MOVE      *BLANK        DFPPCD
     C                   MOVE      *BLANK        DFPPDS
     C                   MOVE      *BLANK        DFRTCD
     C                   MOVE      *BLANK        DFRTDS
     C                   Z-ADD     0             DFLYPR
     C                   Z-ADD     0             DFRBLB
     C                   MOVE      *BLANK        DFRNST
     C                   Z-ADD     0             DFMAXDAY
      *
      * IF INCOMING MODE IS REVISE OR DELETE, THEN RETRIEVE DATABASE
      * RECORD USING THE RATION CODE PASSED IN.
      * DO NOT LOCK THE RECORD.  TYPICALLY, IN DELETE MODE THESE
      * RETRIEVED VALUES WILL NOT BE DISPLAYED.  HOWEVER, IF THERE
      * IS AN ERROR ON THE DELETE ACTION, THE PANEL WILL BE DISPLAYED.
      *
     C     MODE          IFEQ      REVISE                                       IF REV/DEL
     C     MODE          OREQ      DELETE
     C     DFRNCD        CHAIN(N)  HSP071                             90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     RNRNCD        DFRNCD
     C                   MOVEL     RNRNDS        DFRNDS
     C                   MOVEL     RNPPCD        DFPPCD
     C                   MOVEL     RNRTCD        DFRTCD
     C                   Z-ADD     RNRBLB        DFRBLB
     C                   Z-ADD     RNLYPR        DFLYPR
     C                   MOVEL     RNRNST        DFRNST
     C                   Z-ADD     RNMAXDAY      DFMAXDAY
      *
      * RETRIEVE PRODUCTION PHASE DESCRIPTION TO DISPLAY ON SCREEN
      *
     C     DFPPCD        CHAIN     HSP011                             96
     C     *IN96         IFEQ      *OFF
     C                   MOVEL     PPPPDS        DFPPDS
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFPPDS
     C                   ENDIF
      *
      * RETRIEVE RATION TYPE DESCRIPTION TO DISPLAY ON SCREEN
      *
     C     DFRTCD        CHAIN     HSP070                             97
     C     *IN97         IFEQ      *OFF
     C                   MOVEL     RTRTDS        DFRTDS
     C                   ELSE
     C                   MOVEL(P)  'UNKNOWN'     DFRTDS
     C                   ENDIF
     C                   ELSE
      *
      * RATION NOT FOUND
      *
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00244'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF REV/DEL
      *
      * IF YOU COULDN'T FIND THE RECORD, SET TO DISPLAY THE SCREEN
      * WITH THE ERROR MESSAGE. OTHERWISE, IF THE USER IS DELETING,
      * GO ON TO THE UPDATE ROUTINE AND DON'T DISPLAY THE SCREEN.
      * IF HE IS CREATING OR REVISING, DISPLAY THE SCREEN.
      *
     C     ERROR         IFEQ      0
     C     ACTION        ANDEQ     DELETE
     C                   MOVEL     UPDATE        ROUTNE
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *  WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  SET DSPF INDICATORS TO CONTROL INPUT/OUT FIELDS AND AVAILABLE
      *  FUNCTION KEYS.
      *
     C     MODE          IFEQ      REVISE
     C                   SETON                                        60
     C                   ELSE
     C     MODE          IFEQ      CREATE
     C                   SETON                                        61
     C                   ELSE
     C     MODE          IFEQ      DELETE
     C                   SETON                                        62
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP117K1
     C                   WRITE     HP117EC
     C                   EXFMT     HP117R1
      *
      * CLEAR MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * RESET ACTION TO BE EQUAL TO THE INCOMING MODE.
      * THIS IS REQUIRED IN CASE THE USER TOOK F11=DELETE,
      * GOT AN ERROR ON THE DELETION, AND NOW NEEDS TO BE ABLE TO
      * CHANGE THE RECORD AND TAKE AN ACTION OTHER THAN DELETE
      *
     C                   MOVEL     MODE          ACTION
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4=PROMPT
     C                   EXSR      $F4S1
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN11         WHENEQ    *ON                                          F11-DELETE
     C     MODE          OREQ      DELETE
     C                   MOVEL     DELETE        ACTION
     C                   MOVEL     UPDATE        ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * *IN62 WILL BE ON IF THE RECORD THE USER IS TRYING TO ACCESS
      * HAS BEEN DELETED BY ANOTHER USER.  SO, ONLY PERFORM THE
      * EDITS FOR THE FIELDS ON THE SCREEN IF *IN62 IS OFF
      *
     C     *IN62         IFEQ      *OFF                                         IF HERE
      *
      * IF YOU ARE CREATING A NEW RECORD, VALIDATE:
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C     DFRNCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFRNCD        CHAIN(N)  HSP071                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00246'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF BLANK
     C                   ENDIF                                                  IF CREATE
      *
      * ALWAYS VALIDATE THAT USER HAS ENTERED A DESCRIPTION
      *
     C     DFRNDS        IFEQ      *BLANKS                                      IF NO DESC
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NO DESC
      *
      * ALWAYS EDIT THAT A VALID PRODUCTION PHASE CODE IS ENTERED
      *
     C                   MOVE      *BLANK        DFPPDS
     C     DFPPCD        IFEQ      *BLANK                                       IF NO PHASE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFPPCD        CHAIN     HSP011                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD
     C                   MOVEL     PPPPDS        DFPPDS
     C                   ELSE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD
     C                   ENDIF                                                  IF NO PHASE
      *
      * RATION TYPE IS REQUIRED.
      *
     C                   MOVE      *BLANK        DFRTDS
     C     DFRTCD        IFEQ      *BLANK                                       IF NO TYPE
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * RATION TYPE MUST BE VALID.
      *
     C     DFRTCD        CHAIN     HSP070                             95
     C     *IN95         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00241'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     RTRTDS        DFRTDS
      *
      * RATION TYPE MUST HAVE AN ACTIVE STATUS
      *
     C     RTRTST        IFEQ      'I'                                          IF TYPE INAC
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00538'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRTCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF TYPE INAC
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF NO TYPE
      *
      * POUNDS PER BATCH IS REQUIRED AND CANNOT BE NEGATIVE
      *
     C     DFRBLB        IFLT      0                                            IF NEG LBS
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFRBLB        IFEQ      0                                            IF ZERO
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF ZERO
     C                   ENDIF                                                  IF NEG LBS
      *
      * Maximum age (days) must be greater than zero.
      *
     C                   select
     C                   when      dfmaxday < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   when      dfmaxday = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
     C                   endsl
      *
      *
      * LYSINE PERCENT CANNOT BE NEGATIVE.
      *
     C     DFLYPR        IFLT      0                                            IF NEG LYSIN
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NEG LYSIN
      *
      * RATION STATUS MUST BE ACTIVE OR INACTIVE
      *
     C     DFRNST        IFNE      'A'                                          IF STATUS
     C     DFRNST        ANDNE     'I'
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09105'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF STATUS
      *
     C                   ENDIF                                                  IF HERE
      *
      * IF THERE ARE NO ERRORS, ATTEMPT THE WRITE/UPDATE; OTHERWISE,
      * REDISPLAY THE SCREEN.  IF A RECORD HAS BEEN DELETED OUT FROM
      * UNDER THE USER (*IN62 IS ON), THEN THE ERROR MESSAGE WILL BE
      * ISSUED IN THE UPDATE SUBROUTINE.  SO, ALWAYS PERFORM THIS CODE.
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $UPD1
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * WRITE/UPDATE/DELETE DATABASE FILE
      *----------------------------------------------------------------
      *
     C     $UPD1         BEGSR
      *
      * IF THE USER IS DELETING,
      *   PERFORM DELETION INTEGRITY CHECKS
      *
     C     ACTION        IFEQ      DELETE                                       IF DELETE
     C                   EXSR      $DLTCK
     C                   ENDIF                                                  IF DELETE
      *
      * IF USER ACTION IS REVISING OR DELETING, DETERMINE THAT THE
      * RECORD HE IS ACCESSING STILL EXISTS PRIOR TO ATTEMPTING TO
      * UPDATE.  LOCK THE RECORD FOR UPDATE.
      *
     C     ERROR         IFEQ      0                                            IF GOOD
     C     ACTION        IFEQ      DELETE                                       IF D/R
     C     ACTION        OREQ      REVISE
     C     DFRNCD        CHAIN     HSP071                             93
     C     *IN93         IFEQ      *ON                                          IF NOT FOUND
     C                   SETON                                        62
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09008'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF D/L
     C                   ENDIF                                                  IF GOOD
      *
      *  IF THERE ARE NO ERRORS, DELETE, REVISE OR CREATE THE RECORD
      *
     C     ERROR         IFEQ      0                                            IF NO ERR
      *
     C     ACTION        IFEQ      DELETE                                       IF DELETE
     C                   DELETE    RNREC
     C                   ELSE
      *
      *  MOVE DSPF FIELDS TO DATABASE FILE FIELDS
      *
     C                   MOVEL     DFRNCD        RNRNCD
     C                   MOVEL     DFRNDS        RNRNDS
     C                   MOVEL     DFPPCD        RNPPCD
     C                   Z-ADD     DFRBLB        RNRBLB
     C                   Z-ADD     DFLYPR        RNLYPR
     C                   MOVEL     DFRTCD        RNRTCD
     C                   MOVEL     DFRNST        RNRNST
     C                   Z-ADD     DFMAXDAY      RNMAXDAY
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C                   WRITE     RNREC
     C                   ELSE
     C                   UPDATE    RNREC
      *
      * Retrieve all 'ration additive' records and set their status equal to
      * that of the ration.
      *
     C                   if        rnrnst = 'I'                                 If inactive
     C     rnrncd        setll     hsp072
      *
     C                   dou       *in91 = *on                                  Do additives
     C     rnrncd        reade     hsp072                                 91
     C                   if        *in91 = *off                                 If not EOF
     C                   move      rnrnst        rarast
     C                   update    rarec
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do additives
     C                   endif                                                  If inactive
      *
     C                   ENDIF                                                  IF CREATE
     C                   ENDIF                                                  IF DELETE
     C                   ENDIF                                                  IF NO ERR
      *
      *  IF THERE ARE ANY ERRORS, REDISPLAY THE SCREEN; OTHERWISE, EXIT
      *  THE PROGRAM AUTOMATICALLY. (THE USER DOES NOT HAVE TO TAKE
      *  ANY FUNCTION KEY TO EXIT)
      *
     C     ERROR         IFGT      0
     C                   MOVEL     SCRN1         ROUTNE
     C                   ELSE
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DLTCK - DELETION INTEGRITY CHECKS                               *
      *----------------------------------------------------------------
      *
     C     $DLTCK        BEGSR
      *
      * A RATION RECORD CANNOT BE DELETED IF FEED DETAIL
      * RECORDS EXIST WITH THIS RATION.
      *
     C     DFRNCD        CHAIN     HSL038M                            98
     C     *IN98         IFEQ      *OFF                                         IF FOUND
     C     ERROR         ANDLT     MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00184'     MGID(E)
     C                   ENDIF                                                  IF FOUND
      *
      * A RATION RECORD CANNOT BE DELETED IF ANY RATION/ADDITIVE
      * RECORDS EXIST FOR THIS RATION. IF ADDITIVES HAVE BEEN
      * ASSIGNED TO THIS RATION, THE USER MUST DELETE
      * THE ASSIGNED ADDITIVES PRIOR TO DELETING THE RATION.
      *
     C     DFRNCD        CHAIN(N)  HSP072                             94
     C     *IN94         IFEQ      *OFF                                         IF FOUND
     C     ERROR         ANDLT     MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00243'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF                                                  IF FOUND
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1                                    *
      *----------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFPPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP507'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        54
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   MOVEL     XXPPDS        DFPPDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF RATION TYPE
      *
     C     FLD           WHENEQ    'DFRTCD'
     C                   MOVE      *BLANK        XXRTCD
     C                   MOVE      *BLANK        XXRTDS
     C                   CALL      'HP519'
     C                   PARM                    XXRTCD
     C                   PARM                    XXRTDS
     C                   SETON                                        57
     C     XXRTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRTCD        DFRTCD
     C                   MOVEL     XXRTDS        DFRTDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF STATUS
      *
     C     FLD           WHENEQ    'DFRNST'
     C                   MOVE      *BLANK        XXRNST
     C                   CALL      'HP512'
     C                   PARM                    XXRNST
     C                   SETON                                        58
     C     XXRNST        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRNST        DFRNST
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *
      * PARM LISTS
      *     MODE IS THE MODE COMING IN FROM THE WORK WITH.
      *     THE USER CAN COME IN IN REVISE MODE AND TAKE F11=DELETE
      *     WHICH WILL CHANGE THE PROCESSING TO THE 'DELETE' ACTION.
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFRNCD
     C                   PARM                    DFRNDS
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C     *LIKE         DEFINE    DFMODE        ACTION
     C     *LIKE         DEFINE    DFMODE        MODE
     C                   MOVEL     MODE          ACTION
     C                   MOVEL     MODE          DFMODE
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      *
      * PARMS FOR F4=PROMPT CALLS
      *
     C     *LIKE         DEFINE    RNPPCD        XXPPCD
     C     *LIKE         DEFINE    DFPPDS        XXPPDS
     C     *LIKE         DEFINE    RNRTCD        XXRTCD
     C     *LIKE         DEFINE    DFRTDS        XXRTDS
     C     *LIKE         DEFINE    RNRNST        XXRNST
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
