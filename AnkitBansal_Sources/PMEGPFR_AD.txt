// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMEGPFR
// ?Date: 14.08.2025 Time: 12:05:31
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

//?*****
//?USER: Record selection processing

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

//?** Company Number - if entered
CASE;

// IF DB1.Company Number NE PAR.Company Number
IF DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Actual Ship Date range
CASE;

// IF DB1.Actual Shipped Date LT PAR.Actual Shipped Date
IF DB1.Actual_Shipped_Date < PAR.Actual_Shipped_Date;

// OR DB1.Actual Shipped Date GT PAR.Date To               USR
OR DB1.Actual_Shipped_Date > PAR.Date_To_USR;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Order type = transfer
CASE;

// IF DB1.Order Type - Sales NE PAR.Order Type - Sales
IF DB1.Order_Type_Sales <> PAR.Order_Type_Sales;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Warehouse selection
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

//?Get From warehouse
// LCL.Order Sequence Number = CON.001
LCL.Order_Sequence_Number = 001;

// LCL.Order Secondary Line Seq = CON.001
LCL.Order_Secondary_Line_Seq = 001;

EXECUTE FUNCTION(RTV Whse and Reason    RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1517511;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
PARAMETER(WRK.USR_Warehouse_Code);
PARAMETER(NLL.Reason_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?C2748:  Changed RTV Warehouse Code RT to exclude Cancelled lines.
 CASE;

 // IF DB1.Detail Line Status is Cancelled
 IF DB1.Detail_Line_Status = 'X';

 // IF *OTHERWISE
 IF *OTHERWISE;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


//?Get to warehouse
EXECUTE FUNCTION(Rtv Default WHS/OutWhs RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1937488;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(WRK.Warehouse_Code_SavUsr);
PARAMETER(NLL.Outside_Warehouse_Flag);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

//?** From Whs:  Only select if warehouse enter select on warehouse
CASE;

// IF PAR.USR Warehouse Code is Warehouse Code Blank
IF PAR.USR_Warehouse_Code = *BLANK;

// OR PAR.USR Warehouse Code EQ WRK.USR Warehouse Code
OR PAR.USR_Warehouse_Code = WRK.USR_Warehouse_Code;

//?** From Whs:  Only select if warehouse enter select on warehouse
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** To Whs:  Only select if warehouse enter select on warehouse
CASE;

// IF PAR.Warehouse Code SavUsr is Warehouse Code Blank
IF PAR.Warehouse_Code_SavUsr = *BLANK;

// OR PAR.Warehouse Code SavUsr EQ WRK.Warehouse Code SavUsr
OR PAR.Warehouse_Code_SavUsr = WRK.Warehouse_Code_SavUsr;

//?** To Whs:  Only select if warehouse enter select on warehouse
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

// 1PG.From Date             USR = PAR.Actual Shipped Date
X1PG_From_Date_USR = PAR.Actual_Shipped_Date;

// 1PG.To Date               USR = PAR.Date To               USR
X1PG_To_Date_USR = PAR.Date_To_USR;

// 1PG.USR Warehouse Code = PAR.USR Warehouse Code
X1PG_USR_Warehouse_Code = PAR.USR_Warehouse_Code;

// 1PG.Warehouse Code SavUsr = PAR.Warehouse Code SavUsr
X1PG_Warehouse_Code_SavUsr = PAR.Warehouse_Code_SavUsr;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Load ID header format

// SUPPRESSED PRINT Order Number header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

EXECUTE FUNCTION(RTV Warehouse Code RT) TYPE(RTVOBJ) FILE(OPBGWKP)              AC1577257;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(1);
PARAMETER(1);
PARAMETER(CUR.USR_Warehouse_Code);
PARAMETER(LCL.Price_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Tot Qty Shpd-ASD   RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1813041;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(1);
PARAMETER(1);
PARAMETER(CUR.Total_Quantity_Ship_USR);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Date_To_USR);
{
 //?USER: Initialize routine

 // PAR.USR Quantity = CON.*ZERO
 PAR.USR_Quantity = *ZERO;

 //?USER: Process Data record

 //?** Accum quantity shipped within requested dates
 CASE;

 // IF DB1.Actual Shipped Date GE PAR.From Date             USR
 IF DB1.Actual_Shipped_Date >= PAR.From_Date_USR;

 // AND DB1.Actual Shipped Date LE PAR.To Date               USR
 AND DB1.Actual_Shipped_Date <= PAR.To_Date_USR;

 // PAR.USR Quantity = PAR.USR Quantity + DB1.Quantity Shipped Total
 PAR.USR_Quantity = PAR.USR_Quantity + DB1.Quantity_Shipped_Total;

 ENDIF;

}


EXECUTE FUNCTION(Rtv Default Warehouse  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1323141;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Warehouse_Code_SavUsr);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Shpd Whs Trans dtl PO
EXECUTE FUNCTION(PRT Shpd Whs Trans dtl PO) TYPE(PRTOBJ);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

// NXT.Total Quantity Ship  USR = NXT.Total Quantity Ship  USR + CUR.Total Quantity Ship  USR
NXT.Total_Quantity_Ship_USR = NXT.Total_Quantity_Ship_USR + CUR.Total_Quantity_Ship_USR;

//?USER: Print required level totals

// SUPPRESSED PRINT Order Number totals format

// SUPPRESSED PRINT Load ID totals format

