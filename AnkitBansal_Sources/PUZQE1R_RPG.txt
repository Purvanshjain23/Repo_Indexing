     H/TITLE EDT Regulation Code M E1  Edit record(1 screen)
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Maintain DBF file records, one at a time
     H* - Existing records may be updated or deleted
     H* - New records may be added
     H* - Key changes are not allowed
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Edit record(1 screen)
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISELOUC
     H* Date          : 05/29/23  Time  : 12:07:22
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPUZQE1R#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: EDT Regulation Code M E1  Edit record(1 screen)
      *
     FPUC8REL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : Regulation Code Mst       Retrieval index
      *
     FPUC8REL2  IF   E           K DISK
      * RSQ : Regulation Code Mst       Reg Code Mst By Regul ID
      *
     FCAACREL1  IF   E           K DISK
      * RTV : State                     Retrieval index       NV
      *
     FOME5REL1  IF   E           K DISK
      * RTV : Country                   Retrieval index
      *
     FCADRREL1  IF   E           K DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1  IF   E           K DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2  IF   E           K DISK
      * RSQ : Application               RSQ Application Code
      *
     FPUC8REL0  UF A E           K DISK
      * UPD : Regulation Code Mst       Update index
      *
      * Long constants
     D @CN#            S              6    DIM(06)CTDATA PERRCD(1)
     D @CN             S             25    DIM(06) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
     D @1DBRC        E DS                  EXTNAME(PUC8REL0)
      * UPD : Regulation Code Mst       Update index
      * Current/previous master file format fields for change control
      *
     D #1DBRC          DS           385
      * Stored master file format fields
     D  #1DB1                  1      1
      *
     D YARDCS          DS           385
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              3
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0BYP          S              1
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  W0GRP          S              1
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0PMD          S              3
     D  ZADFMF         S             10
     D  YL0001         S             10
     D  YL0002         S              1
     D  WK1X01         S              1
     D  WK1X02         S              1
     D  YL0003         S             30
     D  WQ0001         S             10
     D  WQ0002         S              2
     D  WQ0003         S             30
     D  W0CLPG         S             10
     D  W0DCF          S              1
     D  WQSB01         S                   LIKE(WACBAB)
     D  W0INVL         S             25
     D  YL0004         S              1
     D  WN30           S             30
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  YL0005         S              7
     D  YL0006         S             15  5
     D  WQ0004         S              7
     D  WQ0005         S              6
     D  WQ0006         S             10
     D  WQ0007         S             10
     D  WQ0008         S              2
     D  WQ0009         S             15  5
     D  WQ0010         S             25
     D  WQ0011         S             10
     D  WQ0012         S              4
     D  WQ0013         S              4
     D  WQ0014         S              1
     D  WQ0015         S             10
     D  YARDC          S              1
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  YN0001         S              3
     D  YN0002         S              3  0
     D  YN0003         S              3
     D  YN0004         S              1
     D  YN0005         S             10
     D  WN0001         S             10
     D  WN0002         S             10
     D  YL0007         S              3  0
     D  YL0008         S              3
     D  WL0001         S             10
     D  WL0002         S              6
     D  WL0003         S              3  0
     D  WL0004         S              3
     D  WQ0016         S              3
     D  WQ0017         S              3  0
     D  WUAUNA         S             30
     D  WQSI01         S                   LIKE(DNDNCD)
     D  WQSJ01         S                   LIKE(DNDNCD)
     D  WUDSC4         S             40
     D  WUDE40         S             40
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
     D UCT             S              1    DIM(40)                              CENTER TABLE
      /EJECT
      * Parameter declarations
     D P1PARM          DS           385
      * RCD: Regulation Code Mst       Retrieval index
      * I :  Regulation Code
     D  P1CAAB                 1     10
      * I :  Regulation ID
     D  P1CBAB                11     12
      * I :  Regulation Origin
     D  P1CCAB                13     15
      * I :  Regulation Desc
     D  P1UVU1                16     45
      * I :  ShipTo Est Stm Stop Tot
     D  P1UWU1                46     75
      * I :  NonComp Stm1 StopTot
     D  P1UXU1                79    153
      * I :  NonComp Stm2 StopTot
     D  P1UYU1               154    228
      * I :  Compliancy Stm1 Item
     D  P1UZU1               229    278
      * I :  Compliancy Stm2 Item
     D  P1U0U1               279    328
      * I :  Record Status
     D  P1VSST               329    329
      * I :  Create Date
     D  P1MJDT               330    333P 0
      * I :  Create Time
     D  P1BETM               334    337P 0
      * I :  Create User
     D  P1CCVN               338    347
      * I :  Create Program
     D  P1CDVN               348    357
      * I :  Change Date
     D  P1MKDT               358    361P 0
      * I :  Change Time
     D  P1BFTM               362    365P 0
      * I :  Change User
     D  P1CEVN               366    375
      * I :  Change Program
     D  P1CFVN               376    385
     D P2PARM          DS
      * FLD: Print Options
      * N :  PRT Description
     D  P2G3TX                 1     25
      * N :  PRT Printer Device
     D  P2WRST                26     35
      * N :  PRT Hold Output Sts
     D  P2WSST                36     39
      * N :  PRT Save Output Sts
     D  P2WTST                40     43
      * N :  PRT Number of Copies
     D  P2DYNB                44     45  0
      * N :  PRT Night Queue Run Sts
     D  P2WUST                46     46
      * N :  PRT Night Queue
     D  P2BVVN                47     56
     D P3PARM          DS
      * I :  *Program mode
     D  P3PMD                  1      3
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Regulation Code Mst    EX'
      * Regulation Code
     D  ZA0001                 1     10
      * Message data for 'Reg Code already exists'
      * Regulation ID
     D  ZA0002                 1      2
      * Message data for 'Invalid Entry (ST/CTRY)'
      * Regulation Origin
     D  ZA0003                 1      3
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0004                 1     10
      * Application Code
     D  ZA0005                11     16
      * Message data for 'Application access denied'
      * User Profile Name
     D  ZA0006                 1     10
      * Application Code
     D  ZA0007                11     16
     I@C8REMY
      * Regulation Code Mst       Reg Code Mst By Regul ID
      * Renamed input format fields
     I              C8CAAB                      WACAAB
     I              C8CBAB                      WACBAB
     I              C8CCAB                      WACCAB
     I              C8UVU1                      WAUVU1
     I              C8UWU1                      WAUWU1
     I              C8CDAB                      WACDAB
     I              C8OHSC                      WAOHSC
     I              C8UXU1                      WAUXU1
     I              C8UYU1                      WAUYU1
     I              C8UZU1                      WAUZU1
     I              C8U0U1                      WAU0U1
     I              C8VSST                      WAVSST
     I              C8MJDT                      WAMJDT
     I              C8BETM                      WABETM
     I              C8CCVN                      WACCVN
     I              C8CDVN                      WACDVN
     I              C8MKDT                      WAMKDT
     I              C8BFTM                      WABFTM
     I              C8CEVN                      WACEVN
     I              C8CFVN                      WACFVN
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: Regulation
     C     P3PMD         PARM                    WP0001                         *Program mode
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Repeat forever
     C                   DO        *HIVAL
      * Display and process key screen
     C                   EXSR      BADSKY
     C                   END
      *****************************************************************
      /EJECT
     CSR   BADSKY        BEGSR
      *================================================================
      * Display and process key screen
      *================================================================
      * Bypass first display of key screen is possible
     C                   MOVEL     'Y'           W0BYP
      * Initialize key screen
     C                   EXSR      MDIZ#K
      * Signal start of transaction
     C                   MOVEL     'Y'           W0TRN
      * Ensure transaction continues (if reset)
     C                   DOW       W0TRN = 'Y' OR
     C                             W0TRN = 'K'
     C                   MOVEL     'Y'           W0TRN
      * Conduct screen conversation
      * Is bypass key screen still viable?
     C                   DOW       W0TRN = 'Y'
     C                   IF        W0BYP = 'Y'
      * One or more key fields is blank
      * HOME: Reset screen fields
     C                   IF        #1CAAB = ' ' OR
     C                             #1CBAB = ' ' OR
     C                             *IN30
     C                   MOVEL     'N'           W0BYP
     C                   END
     C                   END
      * Bypass key screen
      * Display key screen
     C                   IF        W0BYP = 'N'
     C                   EXSR      BBEXFM
     C                   END
      * Cancel key screen bypass
     C                   MOVEL     'N'           W0BYP
      * Process response to key screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Switch between *ADD/*CHANGE modes
     C   09              CAS                     BCCHMD
      * HOME: Reset screen fields
     C   30              CAS                     BDHMKY
      * Process key screen input
     C                   CAS                     BEPRKY
     C                   END
     C                   DOW       W0TRN = 'R'
     C                   MOVEL     'Y'           W0TRN
     C                   EXSR      BEPRKY
     C                   END
      *
     C                   END
     C                   END
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBEXFM        BEGSR
      *================================================================
      * Display key screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GADSAK
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     'K'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDKEY
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   BCCHMD        BEGSR
      *================================================================
      * Switch between *ADD/*CHANGE modes
      *================================================================
     C                   IF        W0PMD = 'ADD'
     C                   MOVEL     'CHG'         W0PMD
     C                   ELSE
     C                   MOVEL     'ADD'         W0PMD
     C                   END
      *================================================================
     CSR   BCEXIT        ENDSR
      /EJECT
     CSR   BDHMKY        BEGSR
      *================================================================
      * Process HOME key
      *================================================================
     C                   MOVEL     'N'           W0TRN
      *================================================================
     CSR   BDEXIT        ENDSR
      /EJECT
     CSR   BEPRKY        BEGSR
      *================================================================
      * Process key screen input
      *================================================================
      * Initialise detail screen
     C                   EXSR      MAIZ#1
      * Validate key fields
     C                   EXSR      BFVLKY
     C     *IN99         CABEQ     '1'           BEEXIT
     C     YPMTFD        CABNE     *BLANKS       BEEXIT
      * Check for existing record
     C     KRTV          KLIST
     C                   KFLD                    C8CAAB                         Regulation Code
     C                   KFLD                    C8CBAB                         Regulation ID
      * Setup key
     C                   MOVEL     #1CAAB        C8CAAB
     C                   MOVEL     #1CBAB        C8CBAB
     C     KRTV          CHAIN     @C8REMU                            9091      *
      * Record locked
     C                   IF        *IN91
     C                   SETON                                        993132    *
     C                   GOTO      BEEXIT
     C                   END                                                    FI 91
      *
      * Verify record existence against program mode
      * If record does not exist, error
     C                   IF        W0PMD <> 'ADD'
     C                   IF        *IN90
     C                   SETON                                        993132    *
      * Send message 'Regulation Code Mst    NF'
     C                   MOVEL     'USR5316'     ZAMSID
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   EXSR      MBFL#1
      * USER: Initialize detail screen (existing record)
      * DTL = KEY By name
     C                   MOVEL     @CN(001)      YL0001                         Regulation Code
      * If 'DEFAULT' or 'Default'
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.Regulation Code is Default
      *   |- c2    : DTL.Regulation Code EQ LCL.Regulation Code (LC)
      *   '-
     C                   IF        #1CAAB = @CN(002) OR
     C                             #1CAAB = YL0001
     C                   MOVEL     'Y'           YL0002                         Protect Screen
     C                   END                                                    *FI
     C                   END
      *
     C                   ELSE
      * If record already exists, error
     C                   IF        NOT *IN90
     C                   SETON                                        993132    *
      * Send message 'Regulation Code Mst    EX'
     C                   MOVEL     'USR5317'     ZAMSID
     C                   EXSR      ZASNMS
     C                   ELSE
      * USER: Initialize detail screen (new record)
      * DTL = KEY By name
     C                   MOVEL     'N'           #1OHSC                         Default Regulat
     C                   END
     C                   END
      *..................................................
     C   99              GOTO      BEEXIT
      *
      * No error: Display and process details
     C                   IF        YPMTFD = ' '
     C                   EXSR      CADSDA
     C                   END
      *
      *================================================================
     CSR   BEEXIT        ENDSR
      /EJECT
     CSR   BFVLKY        BEGSR
      *================================================================
      * Validate key fields
      *================================================================
      * Select existing record
     C                   IF        W0PMD <> 'ADD' OR
     C                             YPMTFD <> ' '
     C                   EXSR      VACKRL
     C                   END
      * USER: Validate key screen
      * CASE: PGM.*Program mode is *ADD
     C                   IF        YPMTFD = ' '
      * RTV Reg Code - Regulation Code Mst  * 
     C                   IF        W0PMD = 'ADD'
     C                   EXSR      SARVGN
      * Errmsg
      * CASE: PGM.*Return code is *Record already exists
      * Setup message data for message
     C                   IF        W0RTN = @CN(003)
     C                   MOVEL     #1CAAB        ZA0001                         Regulation Code
      * Send message 'Regulation Code Mst    EX'
     C                   MOVEL     'USR5317'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9931      *
      *
     C                   END                                                    *FI
      * RTV Reg Code ID - Regulation Code Mst  * 
     C                   EXSR      SBRVGN
      * Errmsg
      * CASE: PGM.*Return code is *Record already exists
      * Setup message data for message
     C                   IF        W0RTN = @CN(003)
     C                   MOVEL     #1CBAB        ZA0002                         Regulation ID
      * Send message 'Reg Code already exists'
     C                   MOVEL     'USR5314'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9932      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END
      * Regulation Code required
     C                   IF        #1CAAB = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Regulation ID required
     C                   IF        #1CBAB = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9932      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   BFEXIT        ENDSR
      /EJECT
     CSR   CADSDA        BEGSR
      *================================================================
      * Display and process detail screen
      *================================================================
      * Conduct detail screen conversation
      * - repeat until screen control flag is reset:
      * Display detail screen
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      CBEXFM
      * Process response to detail screen
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * Redisplay previous screen
     C   12              CAS                     CCDSPV
      * HOME: Reset screen fields
     C   30              CAS                     CCDSPV
      * Process detail screen input
     C                   CAS                     CFPRSC
     C                   END
     C                   IF        W0TRN = 'R'
     C                   IF        W0PMD = 'ADD'
     C                   EXSR      MAIZ#1
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   CBEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
     C                   MOVEL     '1'           W0GRP
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y1SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS
      * Reset global error indicator
     C                   SETOFF                                           99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CBEXIT        ENDSR
      /EJECT
     CSR   CCDSPV        BEGSR
      *================================================================
      * Redisplay previous screen
      *================================================================
     C   30              MOVEL     'R'           W0TRN
     C   12              MOVEL     'K'           W0TRN
      *================================================================
     CSR   CCEXIT        ENDSR
      /EJECT
     CSR   CFPRSC        BEGSR
      *================================================================
      * Validate record
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate details
     C                   EXSR      DCVLDL
      * QUIT if error:
     C   99              GOTO      CFEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           CFEXIT
      * Prompt for confirmation
     C                   EXSR      EAPMCF
      * Quit if not confirmed
     C                   IF        *IN99
     C                   SETOFF                                       99
     C                   GOTO      CFEXIT
     C                   END
      * No error: update record
     C                   EXSR      EBPR##
      *================================================================
     CSR   CFEXIT        ENDSR
      /EJECT
     CSR   DCVLDL        BEGSR
      *================================================================
      * Validate details
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Validate Record Status
     C                   EVAL      W0RTN = ' '
      * Name search required?
      * Record Status
     C                   IF        '#1VSST' = YPMTFD
     C                   MOVEL     #1VSST        W0INVL
      * Set current value in drop down list.
     C                   MOVEL     *ZEROS        ZHVSST
     C                   SELECT
     C                   WHEN      W0INVL = 'A'                                 A
     C                   Z-ADD     1             ZHVSST
     C                   WHEN      W0INVL = 'I'                                 I
     C                   Z-ADD     2             ZHVSST
     C                   ENDSL
     C                   EXFMT     ZGVSST
      * Set selected value from drop down list.
     C                   EVAL      W0INVL = ' '
     C                   SELECT
     C                   WHEN      ZHVSST = 1
     C                   MOVEL     'A'           W0INVL                         A
     C                   WHEN      ZHVSST = 2
     C                   MOVEL     'I'           W0INVL                         I
     C                   ENDSL
     C                   SETOFF                                       90        *
     C                   MOVEL     W0INVL        #1VSST
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
      * USER: Validate detail screen fields
      * CASE: DTL.Regulation Code is Default
     C                   IF        YPMTFD = ' '
     C                   IF        #1CAAB = @CN(002)
     C                   MOVEL     'Y'           #1OHSC                         Default Regulat
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           #1OHSC                         Default Regulat
     C                   END                                                    *FI
      * RTV Val State Cd,rtn   RT - State  * 
     C                   EXSR      SCRVGN
      * Validate Further
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Val Country & Active   RT - Country  * 
     C                   EXSR      SDRVGN
      * CASE: LCL.Record Status is Active
     C                   IF        YL0004 = 'A'
     C                   ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                   MOVEL     #1CCAB        ZA0003                         Regulation Orig
      * Send message 'Invalid Entry (ST/CTRY)'
     C                   MOVEL     'USR5313'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9932      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END
      * Record Status required
     C                   IF        #1VSST = ' ' AND
     C                             NOT *IN79 AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   EAPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Set screen conditioning indicators
     C                   EXSR      GBDSAD
      * Update screen time
     C                   TIME                    ##TME
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT2
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      EAEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'CAVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   EAEXIT        ENDSR
      /EJECT
     CSR   EBPR##        BEGSR
      *================================================================
      * Process record:
      *================================================================
      * Process add request
     C     W0PMD         CASEQ     'ADD'         ECADRQ
      * Process update request
     C     W0PMD         CASNE     'ADD'         EECHRQ
     C                   END
      * USER: Process command keys
      * CASE: PGM.*Program mode is *CHANGE
     C                   IF        W0RTN = ' '
      * CASE: DTL.*CMD key is CF21
     C                   IF        W0PMD = 'CHG'
      * PMT Regulation Rcd    UP - /UT User Programs  * 
     C                   IF        *IN21
     C                   CALL      'PUYXUPC'                            90      PMT Regulation
     C     YL0005        PARM      *BLANK        WQ0004                         Return Code Usr
     C                   PARM      'C/S'         WQ0005                         Application Cod
     C                   PARM      @CN(004)      WQ0006                         Program name US
     C                   PARM      #1CAAB        WQ0007                         Regulation Code
     C                   PARM      #1CBAB        WQ0008                         Regulation ID
     C     YL0006        PARM      YL0006        WQ0009                         System Value Nu
     C                   PARM      @CN(005)      WQ0010                         PRT Description
     C     P2WRST        PARM      P2WRST        WQ0011                         PRT Printer Dev
     C     P2WSST        PARM      P2WSST        WQ0012                         PRT Hold Output
     C     P2WTST        PARM      P2WTST        WQ0013                         PRT Save Output
     C     P2WUST        PARM      P2WUST        WQ0014                         PRT Night Queue
     C     P2BVVN        PARM      P2BVVN        WQ0015                         PRT Night Queue
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUYXUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
     C                   END
      * CASE: LCL.Return Code Usr is *Blank
      * Send message 'Print has been Submitted'
     C                   IF        YL0005 = ' '
     C                   MOVEL     'USR1832'     ZAMSID
     C                   MOVEL     '*INFO  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   END                                                    *FI
     C                   MOVEL     'Y'           W0RSF                          *Reload subfile
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   MOVEL     W0RTN         P0RTN                          *Return code
     C                   EXSR      ZYEXPG
      * Restart program for next record
     C                   MOVEL     'N'           W0TRN
     C                   END
      *================================================================
     CSR   EBEXIT        ENDSR
      /EJECT
     CSR   ECADRQ        BEGSR
      *================================================================
      * Process add request
      *================================================================
      * USER: Create DBF record
      * Create Regulation Code Ms - Regulation Code Mst  * 
     C                   EXSR      SECRRC
      * Send message '*Record added'
     C                   IF        W0RTN = ' '
     C                   MOVEL     'Y2U0011'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
      *================================================================
     CSR   ECEXIT        ENDSR
      /EJECT
     CSR   EECHRQ        BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1CDAB' defaulted for 'Ship To Cust Type'.
      * Field '(DTL) #1OHSC' defaulted for 'Default Regulation'.
      * Change Regulation Code Ms - Regulation Code Mst  * 
     C                   EXSR      SFCHRC
      * Data update error
      * Reset screen fields if changed record
     C                   IF        W0RTN <> ' '
     C     W0RTN         CASEQ     'Y2U0007'     MBFL#1
     C                   END
     C                   ELSE
      * Send message '*Record changed'
     C                   IF        YARDC = 'Y'
     C                   MOVEL     'Y2U0012'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *================================================================
     CSR   EEEXIT        ENDSR
      /EJECT
     CSR   GADSAK        BEGSR
      *================================================================
      * Set key screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      *================================================================
     CSR   GAEXIT        ENDSR
      /EJECT
     CSR   GBDSAD        BEGSR
      *================================================================
      * Set detail screen conditioning indicators
      *================================================================
     C     W0PMD         COMP      'ADD'                                  89    *
      * Protect key fields on detail screen
     C                   SETON                                        88        *
     C                   MOVEL     '0'           *IN79
     C                   IF        YL0002 = 'Y'
     C                   MOVEL     '1'           *IN79
     C                   END                                                    *FI
     C                   MOVEL     '0'           *IN78
     C                   IF        W0PMD = 'CHG'
     C                   MOVEL     '1'           *IN78
     C                   END                                                    *FI
      * Enable key screen
     C                   SETON                                        87        *
      *================================================================
     CSR   GBEXIT        ENDSR
      /EJECT
     CSR   MAIZ#1        BEGSR
      *================================================================
      * Initialise record - except for key fields and "neither" paramete
      *================================================================
     C                   Z-ADD     *ZERO         #1MJDT                         Create Date
     C                   Z-ADD     *ZERO         #1BETM                         Create Time
     C                   EVAL      #1CCVN = ' '                                 Create User
     C                   EVAL      #1CDVN = ' '                                 Create Program
     C                   Z-ADD     *ZERO         #1MKDT                         Change Date
     C                   Z-ADD     *ZERO         #1BFTM                         Change Time
     C                   EVAL      #1CEVN = ' '                                 Change User
     C                   EVAL      #1CFVN = ' '                                 Change Program
     C                   EVAL      #1VSST = ' '                                 Record Status
     C                   EVAL      #1OHSC = ' '                                 Default Regulat
     C                   EVAL      #1CCAB = ' '                                 Regulation Orig
     C                   EVAL      #1UVU1 = ' '                                 Regulation Desc
     C                   EVAL      #1UWU1 = ' '                                 ShipTo Est Stm
     C                   EVAL      #1CDAB = ' '                                 Ship To Cust Ty
     C                   EVAL      #1UXU1 = ' '                                 NonComp Stm1 St
     C                   EVAL      #1UYU1 = ' '                                 NonComp Stm2 St
     C                   EVAL      #1UZU1 = ' '                                 Compliancy Stm1
     C                   EVAL      #1U0U1 = ' '                                 Compliancy Stm2
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @C8REMU fields to screen
      *================================================================
     C                   Z-ADD     C8MJDT        #1MJDT                         Create Date
     C                   Z-ADD     C8BETM        #1BETM                         Create Time
     C                   MOVEL     C8CCVN        #1CCVN                         Create User
     C                   MOVEL     C8CDVN        #1CDVN                         Create Program
     C                   Z-ADD     C8MKDT        #1MKDT                         Change Date
     C                   Z-ADD     C8BFTM        #1BFTM                         Change Time
     C                   MOVEL     C8CEVN        #1CEVN                         Change User
     C                   MOVEL     C8CFVN        #1CFVN                         Change Program
     C                   MOVEL     C8CAAB        #1CAAB                         Regulation Code
     C                   MOVEL     C8VSST        #1VSST                         Record Status
     C                   MOVEL     C8OHSC        #1OHSC                         Default Regulat
     C                   MOVEL     C8CBAB        #1CBAB                         Regulation ID
     C                   MOVEL     C8CCAB        #1CCAB                         Regulation Orig
     C                   MOVEL     C8UVU1        #1UVU1                         Regulation Desc
     C                   MOVEL     C8UWU1        #1UWU1                         ShipTo Est Stm
     C                   MOVEL     C8CDAB        #1CDAB                         Ship To Cust Ty
     C                   MOVEL     C8UXU1        #1UXU1                         NonComp Stm1 St
     C                   MOVEL     C8UYU1        #1UYU1                         NonComp Stm2 St
     C                   MOVEL     C8UZU1        #1UZU1                         Compliancy Stm1
     C                   MOVEL     C8U0U1        #1U0U1                         Compliancy Stm2
      * Hold existing record image
     C                   MOVEL     @1DBRC        #1DBRC
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MDIZ#K        BEGSR
      *================================================================
      * Initialize key screen
      *================================================================
     C                   EVAL      #1CAAB = ' '                                 Regulation Code
     C                   EVAL      #1CBAB = ' '                                 Regulation ID
      * USER: Initialize key screen
      * KEY = PAR By name
     C                   MOVEL     P1CAAB        #1CAAB                         Regulation Code
     C                   MOVEL     P1CBAB        #1CBAB                         Regulation ID
      *================================================================
     CSR   MDEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * RTV Reg Code - Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    C8CAAB                         Regulation Code
     C                   KFLD                    C8CBAB                         Regulation ID
      * Setup key
     C                   MOVEL     P1CAAB        C8CAAB                         Regulation Code
     C                   MOVEL     P1CBAB        C8CBAB                         Regulation ID
      * Establish starting position
     C     KRSSA         CHAIN     @C8REMU                            90        *
      * Data record not found
     C   90              MOVEL     'USR5316'     W0RTN
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV Reg Code ID - Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WQSB01                         Regulation ID
      * Setup key
     C                   MOVEL     #1CBAB        WQSB01                         Regulation ID
      * Establish starting position
     C     KRSSB         SETLL     @C8REMY                                      *
     C     KRSSB         READE     @C8REMY                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR5316'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SBEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   MOVEL     'Y2U0003'     W0RTN                          *Return code
     C     KRSSB         READE     @C8REMY                                90    *
     C                   ENDDO
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV Val State Cd,rtn   RT - State  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    ACBGCD                         State Code
      * Setup key
     C                   MOVEL     #1CCAB        ACBGCD                         State Code
      * Establish starting position
     C     KRSSC         CHAIN     @ACREAH                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0005'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SCEXIT
     C                   ENDIF
      *
      * USER: Process Data record
     C                   IF        NOT *IN90
     C                   EVAL      W0RTN = ' '                                  *Return code
     C                   GOTO      SCEXIT                                       *QUIT
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * Val Country & Active   RT - Country  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0004 = ' '                                 Record Status
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    E5KXCD                         Country Code
      * Setup key
     C                   MOVEL     #1CCAB        E5KXCD                         Country Code
      * Establish starting position
     C     KRSSD         CHAIN     @E5REB8                            90        *
      * Data record not found
     C   90              MOVEL     'USR1158'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Record Status is Active
     C                   IF        NOT *IN90
     C                   IF        E5VSST = 'A'
     C                   MOVEL     E5VSST        YL0004                         Record Status
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'I'           YL0004                         Record Status
     C                   END                                                    *FI
     C                   ENDIF
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SECRRC        BEGSR
      *================================================================
      * Create Regulation Code Ms - Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @C8REMT
     C                   MOVEL     #1CAAB        C8CAAB                         Regulation Code
     C                   MOVEL     #1CBAB        C8CBAB                         Regulation ID
     C                   MOVEL     #1CCAB        C8CCAB                         Regulation Orig
     C                   MOVEL     #1UVU1        C8UVU1                         Regulation Desc
     C                   MOVEL     #1UWU1        C8UWU1                         ShipTo Est Stm
     C                   MOVEL     #1CDAB        C8CDAB                         Ship To Cust Ty
     C                   MOVEL     #1OHSC        C8OHSC                         Default Regulat
     C                   MOVEL     #1UXU1        C8UXU1                         NonComp Stm1 St
     C                   MOVEL     #1UYU1        C8UYU1                         NonComp Stm2 St
     C                   MOVEL     #1UZU1        C8UZU1                         Compliancy Stm1
     C                   MOVEL     #1U0U1        C8U0U1                         Compliancy Stm2
     C                   MOVEL     #1VSST        C8VSST                         Record Status
     C                   Z-ADD     #1MJDT        C8MJDT                         Create Date
     C                   Z-ADD     #1BETM        C8BETM                         Create Time
     C                   MOVEL     #1CCVN        C8CCVN                         Create User
     C                   MOVEL     #1CDVN        C8CDVN                         Create Program
     C                   Z-ADD     #1MKDT        C8MKDT                         Change Date
     C                   Z-ADD     #1BFTM        C8BFTM                         Change Time
     C                   MOVEL     #1CEVN        C8CEVN                         Change User
     C                   MOVEL     #1CFVN        C8CFVN                         Change Program
      *
      * USER: Processing before Data update
      * Set Crt Date/Time      IF
      * *** Set RECORD STATUS field. ***
     C                   MOVEL     'A'           C8VSST                         Record Status
      * *** Set CREATE fields. ***
     C                   Z-ADD     ##JDT         C8MJDT                         Create Date
     C                   Z-ADD     ##JTM         C8BETM                         Create Time
     C                   MOVEL     ##USR         C8CCVN                         Create User
     C                   MOVEL     ##PGM         C8CDVN                         Create Program
      * *** Set CHANGE fields. ***
     C                   Z-ADD     *ZERO         C8MKDT                         Change Date
     C                   Z-ADD     *ZERO         C8BFTM                         Change Time
     C                   EVAL      C8CEVN = ' '                                 Change User
     C                   EVAL      C8CFVN = ' '                                 Change Program
     C     KLCRSE        KLIST
     C                   KFLD                    C8CAAB                         Regulation Code
     C                   KFLD                    C8CBAB                         Regulation ID
      * Check for duplicate primary key
     C     KLCRSE        SETLL     @C8REMT                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5317'     W0RTN
      * Send message 'Regulation Code Mst    EX'
     C                   MOVEL     'USR5317'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
     C                   WRITE     @C8REMT                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFCHRC        BEGSR
      *================================================================
      * Change Regulation Code Ms - Regulation Code Mst  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @C8REMT
     C                   MOVEL(P)  #1CAAB        C8CAAB                         Regulation Code
     C                   MOVEL(P)  #1CBAB        C8CBAB                         Regulation ID
      *
     C     KLCHSF        KLIST
     C                   KFLD                    C8CAAB                         Regulation Code
     C                   KFLD                    C8CBAB                         Regulation ID
     C     KLCHSF        CHAIN     @C8REMT                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PUC8REL0'    MDACP
     C                   MOVEL     '@C8REMT'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      SFEXIT
     C                   ENDIF
      *
      * Check for changed record
     C                   IF        #1DBRC <> @1DBRC
     C                   MOVEL     'Y2U0007'     W0RTN
      * Send message '*Update not accepted'
     C                   MOVEL     'Y2U0007'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
      * Release record lock
     C                   UNLOCK    PUC8REL0                             91      *
     C                   GOTO      SFEXIT
     C                   ENDIF                                                  FI #1DBRC
      * Store record data for null update check
     C                   MOVE      @1DBRC        YARDCS
      * Move non-key fields to @C8REMT
     C                   MOVEL(P)  #1CCAB        C8CCAB                         Regulation Orig
     C                   MOVEL(P)  #1UVU1        C8UVU1                         Regulation Desc
     C                   MOVEL(P)  #1UWU1        C8UWU1                         ShipTo Est Stm
     C                   MOVEL(P)  #1CDAB        C8CDAB                         Ship To Cust Ty
     C                   MOVEL(P)  #1OHSC        C8OHSC                         Default Regulat
     C                   MOVEL(P)  #1UXU1        C8UXU1                         NonComp Stm1 St
     C                   MOVEL(P)  #1UYU1        C8UYU1                         NonComp Stm2 St
     C                   MOVEL(P)  #1UZU1        C8UZU1                         Compliancy Stm1
     C                   MOVEL(P)  #1U0U1        C8U0U1                         Compliancy Stm2
     C                   MOVEL(P)  #1VSST        C8VSST                         Record Status
     C                   Z-ADD     #1MJDT        C8MJDT                         Create Date
     C                   Z-ADD     #1BETM        C8BETM                         Create Time
     C                   MOVEL(P)  #1CCVN        C8CCVN                         Create User
     C                   MOVEL(P)  #1CDVN        C8CDVN                         Create Program
     C                   Z-ADD     #1MKDT        C8MKDT                         Change Date
     C                   Z-ADD     #1BFTM        C8BFTM                         Change Time
     C                   MOVEL(P)  #1CEVN        C8CEVN                         Change User
     C                   MOVEL(P)  #1CFVN        C8CFVN                         Change Program
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        @1DBRC <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @C8REMT                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PUC8REL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * Update saved record image
     C                   MOVEL     @1DBRC        #1DBRC
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    DRAJVN                         User Profile Na
      * Setup key
     C                   MOVEL     WN0001        DRAJVN                         User Profile Na
      * Establish starting position
     C     KRSSG         CHAIN     @DRRETH                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0763'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SGEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     DRAIC3        YL0007                         Company Number
     C                   MOVEL     DRBUVN        WN0002                         User Code Model
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV Appl. Profile      RT - User Application Profile  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    DTAJVN                         User Profile Na
     C                   KFLD                    DTDNCD                         Application Cod
      * Setup key
     C                   MOVEL     WL0001        DTAJVN                         User Profile Na
     C                   MOVEL     WL0002        DTDNCD                         Application Cod
      * Establish starting position
     C     KRSSH         CHAIN     @DTRETE                            90        *
      * Data record not found
     C   90              MOVEL     'USR0767'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     DTAIC3        WL0003                         Company Number
     C                   MOVEL     DTAJCD        WL0004                         Warehouse Code
     C                   ENDIF
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WQSI01                         Application Cod
      * Setup key
     C                   EVALR     WQSI01 = ' '                                 Application Cod
     C                   MOVEL     'OMS'         WQSI01                         Application Cod
      * Establish starting position
     C     KRSSI         SETLL     @DNRESF                                      *
     C     KRSSI         READE     @DNRESF                                90    *
      * Data record not found
     C   90              MOVEL     'USR0755'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        DNRSCD = ' '
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                   EXSR      SJRVGN
     C                   END                                                    *FI
     C     KRSSI         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WQSJ01                         Application Cod
      * Setup key
     C                   MOVEL     DNRSCD        WQSJ01                         Application Cod
      * Establish starting position
     C     KRSSJ         SETLL     @DNRESF                                      *
     C     KRSSJ         READE     @DNRESF                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0755'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WUAUNA = ' '                                 Description
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SJEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     DNAUNA        WUAUNA                         Description
     C     KRSSJ         READE     @DNRESF                                90    *
     C                   ENDDO
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Modifications History
      *================================================================
      * Eric L 05-2023 WI572 CA Prop 12 Creation
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Select existing record
      *================================================================
      * Name search required?
     C                   MOVEL     #1CAAB        WK1X01
     C                   MOVEL     #1CBAB        WK1X02
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(KEY) #1CAAB' defaulted for 'Regulation Code'.
      * Field '(KEY) #1CBAB' defaulted for 'Regulation ID'.
     W* Y2W0052 - One or more arguments defaulted to WRK/CON context.
      * Field '(LCL) YL0003' defaulted for 'Regulation Desc'.
     C                   IF        WK1X01 = '?' OR
     C                             YPMTFD = '#1CAAB' OR
     C                             WK1X02 = '?' OR
     C                             YPMTFD = '#1CBAB'
     C                   CALL      'PUZNSRR'                            90      SEL Regulation
     C                   PARM      *BLANK        W0RTN
     C     #1CAAB        PARM      #1CAAB        WQ0001                         Regulation Code
     C     #1CBAB        PARM      #1CBAB        WQ0002                         Regulation ID
     C     YL0003        PARM      *BLANK        WQ0003                         Regulation Desc
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUZNSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        993132    *
     C                   END
      *
     C                   IF        #1CAAB <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X01 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      *
     C                   IF        #1CBAB <> ' ' AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' ' AND
     C                             WK1X02 <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   END
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y1SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y1EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
      * KEY Screen
     C                   IF        @#DFMT = '#RCDKEY'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   ENDIF
      * DETAIL Screen
     C                   IF        @#DFMT = '#RCDDTL1'
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
     C                   ENDIF
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
     C                   IF        ZHCSRW = 005 AND
     C                             ZHCSCL >= 029 AND
     C                             ZHCSCL <= 038 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1CAAB'      YPMTFD                         Regulation Code
     C                   END
      *
     C                   IF        ZHCSRW = 007 AND
     C                             ZHCSCL >= 029 AND
     C                             ZHCSCL <= 030 AND
     C                             @#DFMT = '#RCDKEY'
     C                   MOVEL     '#1CBAB'      YPMTFD                         Regulation ID
     C                   END
      *
     C                   IF        ZHCSRW = 004 AND
     C                             ZHCSCL = 053 AND
     C                             @#DFMT = '#RCDDTL1' AND
     C                             NOT *IN79
     C                   MOVEL     '#1VSST'      YPMTFD                         Record Status
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      1             YYLGCT                         # of grps
     C                   PARM      W0GRP         YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel and exit from key screen
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Clear all neither parameters
     C                   EVAL      P2G3TX = ' '                                 PRT Description
     C                   EVAL      P2WRST = ' '                                 PRT Printer Dev
     C                   EVAL      P2WSST = ' '                                 PRT Hold Output
     C                   EVAL      P2WTST = ' '                                 PRT Save Output
     C                   Z-ADD     *ZERO         P2DYNB                         PRT Number of C
     C                   EVAL      P2WUST = ' '                                 PRT Night Queue
     C                   EVAL      P2BVVN = ' '                                 PRT Night Queue
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAMJDT                         Create Date
     C                   Z-ADD     *ZERO         WABETM                         Create Time
     C                   Z-ADD     *ZERO         WAMKDT                         Change Date
     C                   Z-ADD     *ZERO         WABFTM                         Change Time
      * Define work field Description
     C                   EVAL      WUAUNA = ' '
      * Define work field USR Description 40
     C                   EVAL      WUDSC4 = ' '
      * Define work field USR Description 40   2
     C                   EVAL      WUDE40 = ' '
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SHRVGN.
     C                   EVAL      WL0001 = ' '
     C                   EVAL      WL0002 = ' '
     C                   Z-ADD     *ZERO         WL0003
     C                   EVAL      WL0004 = ' '
      * Define local work field Regulation Code (LC)
     C                   EVAL      YL0001 = ' '
      * Define local work field Protect Screen Field
     C                   EVAL      YL0002 = ' '
      * Define local work field Regulation Desc
     C                   EVAL      YL0003 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0004 = ' '
      * Define local work field Return Code Usr
     C                   EVAL      YL0005 = ' '
      * Define local work field System Value Numeric
     C                   Z-ADD     *ZERO         YL0006
      * Define null work field Warehouse Code
     C                   EVAL      YN0001 = ' '
      * Define null work field Company Number
     C                   Z-ADD     *ZERO         YN0002
      * Define null work field Salesperson Code
     C                   EVAL      YN0003 = ' '
      * Define null work field Allow Multi-Company
     C                   EVAL      YN0004 = ' '
      * Define null work field Default Printer
     C                   EVAL      YN0005 = ' '
      * Define local work field Company Number
     C                   Z-ADD     *ZERO         YL0007
      * Define local work field Warehouse Code
     C                   EVAL      YL0008 = ' '
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   MOVEL     'CHG'         W0PMD
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * Modifications History
     C                   EXSR      UASUBR                                       Modifications H
      *
     C                   EVAL      WN0001 = ' '                                 User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                   MOVEL     ##USR         WN0001                         User Profile Na
      *
     C                   EVAL      WN0002 = ' '                                 User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                   EXSR      SGRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
      * SET Message Queue Dest US - /UT User Source  * 
     C                   IF        W0RTN = @CN(006)
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0001        ZA0004                         User Profile Na
     C                   MOVEL     'OMS'         ZA0005                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * CASE: PAR.User Code Model is equal to blank
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0002 = ' '
     C                   MOVEL(P)  WN0001        WL0001                         User Profile Na
     C                   MOVEL(P)  'OMS'         WL0002                         Application Cod
     C                   EXSR      SHRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        YN0002                         Company Number
     C                   MOVEL(P)  WL0004        YL0008                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - User Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  WN0002        WL0001                         User Profile Na
     C                   MOVEL(P)  'OMS'         WL0002                         Application Cod
     C                   EXSR      SHRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0003        YN0002                         Company Number
     C                   MOVEL(P)  WL0004        YL0008                         Warehouse Code
     C                   END                                                    *FI
     C                   MOVEL     YL0008        YN0001                         Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                   MOVEL     '*PRV '       ZAPGRL                         PREVIOUS
      * Setup message data for message
     C                   MOVEL     WN0001        ZA0006                         User Profile Na
     C                   MOVEL     'OMS'         ZA0007                         Application Cod
      * Send message 'Application access denied'
     C                   MOVEL     'USR0810'     ZAMSID
     C                   MOVEL     '*PRV '       ZAPGRL                         Rel queue
     C                   MOVEL     '*COMP  '     ZAMSTP                         Message type
     C                   EXSR      ZASNMS
      *
     C                   MOVEL     'Y2U9999'     P0RTN                          *Return code
     C                   EXSR      ZYEXPG
     C                   END                                                    *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C                   IF        YL0007 <> 0
     C                   Z-ADD     YL0007        YN0002                         Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                   IF        YL0008 <> ' '
     C                   CALL      'PNKDXFR'                            90      RTV Prod Whse f
     C                   PARM      *BLANK        W0RTN
     C                   PARM      *BLANK        WQ0016                         Warehouse Code
     C                   PARM      YL0007        WQ0017                         Shipping Compan
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PNKDXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                   EXSR      SIRVGN
     C                   EVAL      WUDSC4 = ' '                                 USR Description
     C                   MOVEL     WUAUNA        WUDSC4                         USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                   MOVEA     WUDSC4        UCT                            LOAD ARRAY
     C                   Z-ADD     40            UX                2 0          SET COUNTER
     C     UX            DOWGT     0
     C     UCT(UX)       IFEQ      ' '
     C                   SUB       1             UX
     C                   ELSE
     C                   Z-ADD     UX            UXH               2 0
     C                   Z-ADD     0             UX
     C                   END
     C                   END
     C     40            SUB       UXH           UX
     C     UX            DIV       2             UX
     C     UX            IFGT      0
     C                   MOVE      *BLANKS       UCT
     C                   MOVEA     WUDSC4        UCT(UX)
     C                   END
     C                   MOVEA     UCT           WUDE40                         LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                   MOVE      WUDE40        ##CMP            40
     C                   MOVEL     P3PMD         W0PMD                          *Program mode
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 Default
00002 DEFAULT
00003 Y2U0003
00004 PUZSPFR
00005 Print Record
00006 Y2U0005
