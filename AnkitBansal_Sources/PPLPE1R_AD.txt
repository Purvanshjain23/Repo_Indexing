// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPLPE1R
// ?Date: 14.08.2025 Time: 03:41:06
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification and Comments
DO;

//?E3387 JJH 09/08/14 - Add ACR Shipping Method
//? Add ACR Shipping Method as an input capable field to specify
//? if Collect/Prepaid Truck/Rail.
//? On a new Claim Resale, default the Shipping Method from the
//? Original Order.
//? Replaced "Chg A/R Claim RS POSA CH" with "Chg A/R ClmRS POSA/SM
//? CH" so that it will update ACR Shipping Method".
//?E3956 JJH 02/17/15 - Use "SEL Cust Adr/ShipTo=Y - Customer" SELRCD
//? when the user selects "F4" on the Ship To Customer field on the
//? KEY screen.
ENDDO;

//?*** Setup Security & Company Title ***
// PAR.Application Code = CND.Order Management System
PAR.Application_Code = 'OMS';

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.Clm Program USR = CND.Edit Claim Resale
PAR.Clm_Program_USR = 'ECR';

//?USER: Validate key screen

// PAR.Ship To Customer = KEY.Ship To Customer
PAR.Ship_To_Customer = KEY.Ship_To_Customer;

//?E3956 JJH 02/17/15 - Add SELRCD for Ship To Customer
CASE;

// IF KEY.*CMD key is CF04
IF KEY.*CMD_key = '04';

// AND PGM.*Cursor field <IS> KEY.Ship To Customer
AND PGM.*Cursor_field = KEY.Ship_To_Customer;

// Call program Zzz Cust Adr/ShipTo=Y  SR.
CALL PROGRAM(Zzz Cust Adr/ShipTo=Y  SR) ('PNKZSRR');
PARAMETER(KEY.Ship_To_Customer);
PARAMETER(NLL.Customer_Name);
PARAMETER(NLL.Address_Line_1);
PARAMETER(NLL.Address_Line_2);
PARAMETER(NLL.Address_Line_3);
PARAMETER(NLL.City);
PARAMETER(NLL.State_Code);
PARAMETER(NLL.County_Code);
PARAMETER(NLL.Zip_Postal_Code);

ENDIF;

//?Validate "Resale Ship to Customer".
DO;

CASE;

// IF PAR.Ship To Customer is equal to zero
IF PAR.Ship_To_Customer = *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

//?"Resale Ship to Customer" must exist in the Customer file.
DO;

EXECUTE FUNCTION(Val Customer Exists 2  RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1784281;
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(LCL.Customer_Name);
PARAMETER(LCL.Record_Status);
PARAMETER(PGM.*Return_code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.*Return code = CND.*Record does not exist
 PAR.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 CASE;

 // IF DB1.Record Status is Inactive
 IF DB1.Record_Status = 'I';

 // PAR.*Return code = CND.Customer              IN
 PAR.*Return_code = 'USR3636';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.*Return code = CND.*Record already exists
 PAR.*Return_code = 'Y2U0003';

 ENDIF;

}


CASE;

// IF PGM.*Return code is Customer              IN
IF PGM.*Return_code = 'USR3636';

// Send error message - 'Inactive Customer'
ERROR(USR3636);
MSGPARM(KEY.Ship_To_Customer);

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Customer Master not found.'
ERROR(USR0170);
MSGPARM(KEY.Ship_To_Customer);

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

ENDDO;

ENDIF;

ENDDO;

//?USER: Initialize detail screen (new record)

// DTL.Record Status = CND.Active
DTL.Record_Status = 'A';

//?E3387 JJH 09/18/14 - Default Shipping Method from Order Header TRG
EXECUTE FUNCTION(Rtv Shipping Method   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1848045;
PARAMETER(PAR.Company_Number);
PARAMETER(DTL.Claim_Order_Number);
PARAMETER(DTL.ACR_Shipping_Method);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(ACR Shipping Method DRV) TYPE(DRVFLD)                          AC2098708;
PARAMETER(DTL.ACR_Shipping_Method_DRV);
PARAMETER(DTL.ACR_Shipping_Method);
{
 //?Calculate derived field

 // PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping Method
 PAR.ACR_Shipping_Method_DRV = RTVCND(PAR.ACR_Shipping_Method);

}


//?USER: Initialize detail screen (existing record)

// DTL.Ship To Name          DRV = LCL.Customer Name
DTL.Ship_To_Name_DRV = LCL.Customer_Name;

//?E3387 JJH 09/08/14 - Add ACR Shipping Method
CASE;

// IF NOT DTL.ACR Shipping Method is *ALL values
IF ! DTL.ACR_Shipping_Method = 'CR'/'CT'/'PR'/'PT'/*BLANK;

EXECUTE FUNCTION(Rtv Shipping Method   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1848045;
PARAMETER(PAR.Company_Number);
PARAMETER(DTL.Claim_Order_Number);
PARAMETER(DTL.ACR_Shipping_Method);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

EXECUTE FUNCTION(ACR Shipping Method DRV) TYPE(DRVFLD)                          AC2098708;
PARAMETER(DTL.ACR_Shipping_Method_DRV);
PARAMETER(DTL.ACR_Shipping_Method);
{
 //?Calculate derived field

 // PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping Method
 PAR.ACR_Shipping_Method_DRV = RTVCND(PAR.ACR_Shipping_Method);

}


//?USER: Process key screen request

RETURN;

//?USER: Validate detail screen fields

//?Validate "Resale Ship to Customer".
DO;

CASE;

// IF DTL.Ship To Customer is equal to zero
IF DTL.Ship_To_Customer = *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Customer Exists 2  RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1784281;
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(LCL.Customer_Name);
PARAMETER(LCL.Record_Status);
PARAMETER(PGM.*Return_code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.*Return code = CND.*Record does not exist
 PAR.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 CASE;

 // IF DB1.Record Status is Inactive
 IF DB1.Record_Status = 'I';

 // PAR.*Return code = CND.Customer              IN
 PAR.*Return_code = 'USR3636';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.*Return code = CND.*Record already exists
 PAR.*Return_code = 'Y2U0003';

 ENDIF;

}


CASE;

// IF PGM.*Return code is Customer              IN
IF PGM.*Return_code = 'USR3636';

// Send error message - 'Inactive Customer'
ERROR(USR3636);
MSGPARM(DTL.Ship_To_Customer);

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Customer Master not found.'
ERROR(USR0170);
MSGPARM(DTL.Ship_To_Customer);

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

ENDIF;

ENDDO;

//?Validate "Resale Purchase Order Number".
DO;

CASE;

// IF DTL.Resale Purchase Order # is Blank
IF DTL.Resale_Purchase_Order_Nbr = *BLANK;

// Send error message - 'Resale Purchase Order Number is required.'
ERROR(USR2769);
MSGPARM(DTL.Resale_Purchase_Order_Nbr);

//?"Resale Purchase Order Number" is Required.
DO;

EXECUTE FUNCTION(RTV P.O. Required Flag RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1443517;
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(LCL.P_O_Required_Flag);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.P.O. Required Flag is yes
IF LCL.P_O_Required_Flag = 'Y';

// Send error message - 'Resale Purchase Order Number is required.'
ERROR(USR2769);
MSGPARM(DTL.Resale_Purchase_Order_Nbr);

ENDIF;

ENDDO;

ENDIF;

ENDDO;

//?CALC: Detail screen function fields

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(DTL.Company_Name_DRV);
PARAMETER(PAR.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?E3387 JJH 09/08/14 - Add ACR Shipping Method
EXECUTE FUNCTION(ACR Shipping Method DRV) TYPE(DRVFLD)                          AC2098708;
PARAMETER(DTL.ACR_Shipping_Method_DRV);
PARAMETER(DTL.ACR_Shipping_Method);
{
 //?Calculate derived field

 // PAR.ACR Shipping Method DRV = Condition name of PAR.ACR Shipping Method
 PAR.ACR_Shipping_Method_DRV = RTVCND(PAR.ACR_Shipping_Method);

}


//?USER: Create DBF record

EXECUTE FUNCTION(Crt A/R Claim ResaleSACR) TYPE(CRTOBJ) FILE(PPA3CPP)           AC1877206;
PARAMETER(PAR.Claim_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Resale_Purchase_Order_Nbr);
PARAMETER(DTL.Resale_Memo_Number);
PARAMETER(DTL.ACR_Shipping_Method);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(DTL.Record_Status);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

 //?USER: Processing after Data update

 CASE;

 // IF PAR.Claim Audit Selection Usr is yes
 IF PAR.Claim_Audit_Selection_Usr = 'Y';

 //?System generated action notes
 //?Resale created
 // Call program Crt A/R Claim ExpComSG XF.
 CALL PROGRAM(Crt A/R Claim ExpComSG XF) ('PMTNXFR');
 PARAMETER(PAR.Claim_Number);
 PARAMETER('Resale Created');
 PARAMETER('S');
 PARAMETER('CLMCHANGE');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('CAR');

 ENDIF;

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg A/R ClmRS POSA/SM CH) TYPE(CHGOBJ) FILE(PPA3CPP)           AC2098823;
PARAMETER(DTL.Claim_Number);
PARAMETER(DTL.Ship_To_Customer);
PARAMETER(DTL.Resale_Purchase_Order_Nbr);
PARAMETER(DTL.ACR_Shipping_Method);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(Rtv/Chg Rsl PO#ONly   RT) TYPE(RTVOBJ) FILE(PDMPCPP)           AC1728382;
 PARAMETER(PAR.Claim_Number);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(DB1.Resale_Purchase_Order_Nbr);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG A/R Claim PO#Only  CH) TYPE(CHGOBJ) FILE(PDMPCPP)          AC1728343;
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Resale_Item_Line_Number);
  PARAMETER(PAR.Resale_Purchase_Order_Nbr);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

 //?System generated action notes
 //?Resale was changed
 // Call program Crt A/R Claim ExpComSG XF.
 CALL PROGRAM(Crt A/R Claim ExpComSG XF) ('PMTNXFR');
 PARAMETER(PAR.Claim_Number);
 PARAMETER('Resale was changed');
 PARAMETER('S');
 PARAMETER('CLMCHANGE');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('CAR');

}


//?USER: Process command keys

//?F8=NEXT
CASE;

// IF DTL.*CMD key is SUBMIT/NEXT
IF DTL.*CMD_key = '08';

// PAR.Clm Program USR = CND.Get OrderResal/ClaimResal
PAR.Clm_Program_USR = 'GOR';

// PAR.Resale Purchase Order # = DTL.Resale Purchase Order #
PAR.Resale_Purchase_Order_Nbr = DTL.Resale_Purchase_Order_Nbr;

RETURN;

//?F8=NEXT
// IF DTL.*CMD key is BACK
IF DTL.*CMD_key = '07';

// PAR.Clm Program USR = CND.Work With Resale
PAR.Clm_Program_USR = 'WWR';

// PAR.Resale Purchase Order # = DTL.Resale Purchase Order #
PAR.Resale_Purchase_Order_Nbr = DTL.Resale_Purchase_Order_Nbr;

RETURN;

//?F8=NEXT
// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

//?F8=NEXT
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Clm Program USR = CND.Get OrderResal/ClaimResal
PAR.Clm_Program_USR = 'GOR';

// PAR.Resale Purchase Order # = DTL.Resale Purchase Order #
PAR.Resale_Purchase_Order_Nbr = DTL.Resale_Purchase_Order_Nbr;

RETURN;

ENDIF;

//?F7=BACK
CASE;

// IF DTL.*CMD key is BACK
IF DTL.*CMD_key = '07';

// PAR.Clm Program USR = CND.Work With Resale
PAR.Clm_Program_USR = 'WWR';

// PAR.Resale Purchase Order # = DTL.Resale Purchase Order #
PAR.Resale_Purchase_Order_Nbr = DTL.Resale_Purchase_Order_Nbr;

RETURN;

ENDIF;

//?USER: Exit program processing

CASE;

// IF KEY.*CMD key is CF03
IF KEY.*CMD_key = '03';

// PAR.Clm Program USR = CND.Work With Resale
PAR.Clm_Program_USR = 'WWR';

RETURN;

ENDIF;

