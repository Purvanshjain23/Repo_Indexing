     H/TITLE CLC Date Method        XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/16/10  Time  : 13:44:17
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDIPREL0IF  E           K        DISK
      * RTV : Market Date Method        Retrieval index
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Date Descending
      *
     FOMF0CPL2IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Market Date Descending
      *
     FCAAFREL3IF  E           K        DISK
      * RSQ : Calendar                  Co/Date               NV
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     E                    YDOW        7  1               *Days of week
     I@IPRERT
      * Market Date Method        Retrieval index
      * Renamed input format fields
     I              IPAIC3                          WAAIC3
     I              IPRDCD                          WARDCD
     I              IPMNNA                          WAMNNA
     I              IPRECD                          WARECD
     I              IPCPRD                          WACPRD
     I              IPQMNB                          WAQMNB
     I              IPU7ST                          WAU7ST
     I              IPCNOT                          WACNOT
     I              IPU8ST                          WAU8ST
     I              IPCDOW                          WACDOW
     I              IPBXST                          WABXST
     I              IPUVST                          WAUVST
     I              IPUWST                          WAUWST
     I              IPUXST                          WAUXST
     I              IPAATM                          WAAATM
     I              IPAYNA                          WAAYNA
     I              IPA0NA                          WAA0NA
     I              IPAXDT                          WAAXDT
      *
     I@AFREPU
      * Calendar                  RSQ Co/Date Descending
      * Renamed input format fields
     I              AFAIC3                          WBAIC3
     I              AFBCDT                          WBBCDT
     I              AFCQNB                          WBCQNB
     I              AFESNB                          WBESNB
     I              AFETNB                          WBETNB
     I              AFBZNB                          WBBZNB
     I              AFA9ST                          WBA9ST
     I              AFEINB                          WBEINB
     I              AFC5ST                          WBC5ST
     I              AFAQNB                          WBAQNB
     I              AFCMST                          WBCMST
     I              AFV9ST                          WBV9ST
     I              AFWAST                          WBWAST
     I              AFX2ST                          WBX2ST
     I              AFOJDT                          WBOJDT
     I              AFNQNX                          WBNQNX
     I              AFNRNX                          WBNRNX
     I              AFI9SX                          WBI9SX
     I              AFJASX                          WBJASX
     I              AFOKDT                          WBOKDT
     I              AFOLDT                          WBOLDT
     I              AFUVST                          WBUVST
     I              AFUWST                          WBUWST
     I              AFUXST                          WBUXST
     I              AFAATM                          WBAATM
     I              AFAYNA                          WBAYNA
     I              AFA0NA                          WBA0NA
     I              AFAXDT                          WBAXDT
      *
     I@F0CPEP
      * Commodity Mrkt Price      Market Date Descending
      * Renamed input format fields
     I              F0LQCD                          WCLQCD
     I              F0LRCD                          WCLRCD
     I              F0EQDT                          WCEQDT
     I              F0A5PR                          WCA5PR
     I              F0B8PR                          WCB8PR
     I              F0UVST                          WCUVST
     I              F0UWST                          WCUWST
     I              F0UXST                          WCUXST
     I              F0VSST                          WCVSST
     I              F0AATM                          WCAATM
     I              F0AYNA                          WCAYNA
     I              F0A0NA                          WCA0NA
     I              F0AXDT                          WCAXDT
      *
     I@AFREYY
      * Calendar                  Co/Date               NV
      * Renamed input format fields
     I              AFAIC3                          WDAIC3
     I              AFBCDT                          WDBCDT
     I              AFCQNB                          WDCQNB
     I              AFESNB                          WDESNB
     I              AFETNB                          WDETNB
     I              AFBZNB                          WDBZNB
     I              AFA9ST                          WDA9ST
     I              AFEINB                          WDEINB
     I              AFC5ST                          WDC5ST
     I              AFAQNB                          WDAQNB
     I              AFCMST                          WDCMST
     I              AFV9ST                          WDV9ST
     I              AFWAST                          WDWAST
     I              AFX2ST                          WDX2ST
     I              AFOJDT                          WDOJDT
     I              AFNQNX                          WDNQNX
     I              AFNRNX                          WDNRNX
     I              AFI9SX                          WDI9SX
     I              AFJASX                          WDJASX
     I              AFOKDT                          WDOKDT
     I              AFOLDT                          WDOLDT
     I              AFUVST                          WDUVST
     I              AFUWST                          WDUWST
     I              AFUXST                          WDUXST
     I              AFAATM                          WDAATM
     I              AFAYNA                          WDAYNA
     I              AFA0NA                          WDA0NA
     I              AFAXDT                          WDAXDT
      *
     I@AFREBE
      * Calendar                  Retrieval index       NV
      * Renamed input format fields
     I              AFAIC3                          WEAIC3
     I              AFBCDT                          WEBCDT
     I              AFCQNB                          WECQNB
     I              AFESNB                          WEESNB
     I              AFETNB                          WEETNB
     I              AFBZNB                          WEBZNB
     I              AFA9ST                          WEA9ST
     I              AFEINB                          WEEINB
     I              AFC5ST                          WEC5ST
     I              AFAQNB                          WEAQNB
     I              AFCMST                          WECMST
     I              AFV9ST                          WEV9ST
     I              AFWAST                          WEWAST
     I              AFX2ST                          WEX2ST
     I              AFOJDT                          WEOJDT
     I              AFNQNX                          WENQNX
     I              AFNRNX                          WENRNX
     I              AFI9SX                          WEI9SX
     I              AFJASX                          WEJASX
     I              AFOKDT                          WEOKDT
     I              AFOLDT                          WEOLDT
     I              AFUVST                          WEUVST
     I              AFUWST                          WEUWST
     I              AFUXST                          WEUXST
     I              AFAATM                          WEAATM
     I              AFAYNA                          WEAYNA
     I              AFA0NA                          WEA0NA
     I              AFAXDT                          WEAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Market Date Method
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Date Method Code
     I                                        3   5 P1RDCD
     IP2PARM      DS
      * FLD: *Arrays
      * I :  Actual Shipped Date
     I                                    P   1   40P2GNDT
      * I :  Requested Delivery Date
     I                                    P   5   80P2EIDT
      * I :  Requested Ship Date
     I                                    P   9  120P2A5DT
      * I :  Date of Orig. Entry Det.
     I                                    P  13  160P2D3DT
      * I :  Commodity Market Code
     I                                       17  19 P2LQCD
      * I :  Market Pricing Date
     I                                    P  20  230P2EXDT
      * B :  Price Status
     I                                       24  24 P2U1ST
      * O :  Pricing Date Used
     I                                    P  25  280P2GIDT
      * B :  Pricing Retrieved Amount
     I                                    P  29  344P2TPVA
      * I :  Event Called From
     I                                       35  36 P2SJCD
      * I :  Commodity Price Group
     I                                       37  43 P2LRCD
      * I :  OD Market Begin Date
     I                                    P  44  470P2TKDT
      * I :  OD Market Ending Date
     I                                    P  48  510P2TLDT
     IP3PARM      DS
      * B :  Date Used for Calculation
     I                                    P   1   40P3GTDT
     IP4PARM      DS
      * O :  Date Error Returned
     I                                        1   5 P4W8ST
     IP5PARM      DS
      * FLD: Company Item
      * I :  Item Code
     I                                    P   1   40P5HGCD
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1RDCD    PARM           WP0002  3        Date Method Cod
     C           P2GNDT    PARM           WP0003  70       Actual Shipped
     C           P2EIDT    PARM           WP0004  70       Requested Deliv
     C           P2A5DT    PARM           WP0005  70       Requested Ship
     C           P2D3DT    PARM           WP0006  70       Date of Orig. E
     C           P2LQCD    PARM           WP0007  3        Commodity Marke
     C           P2EXDT    PARM           WP0008  70       Market Pricing
     C           P2U1ST    PARM P2U1ST    WP0009  1        Price Status
     C           P2GIDT    PARM P2GIDT    WP0010  70       Pricing Date Us
     C           P2TPVA    PARM P2TPVA    WP0011 114       Pricing Retriev
     C           P2SJCD    PARM           WP0012  2        Event Called Fr
     C           P2LRCD    PARM           WP0013  7        Commodity Price
     C           P2TKDT    PARM           WP0014  70       OD Market Begin
     C           P2TLDT    PARM           WP0015  70       OD Market Endin
     C           P3GTDT    PARM P3GTDT    WP0016  70       Date Used for C
     C           P4W8ST    PARM P4W8ST    WP0017  5        Date Error Retu
     C           P5HGCD    PARM           WP0018  70       Item Code
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * CLC Date Method        XF
      * FP1110 change for DOS date method
      * CLC Date Method        RT - Market Date Method  * 
     C                     EXSR SARVGN
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * CLC Date Method        RT - Market Date Method  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  70       USR Day of Week
     C                     Z-ADD*ZERO     WN0002  20       Accounting Peri
     C                     Z-ADD*ZERO     WN0003  30       OM Week
     C                     Z-ADD*ZERO     WN0004  70       Period Beginnin
     C                     Z-ADD*ZERO     WN0005  70       Period Ending D
     C                     MOVEL*BLANK    WN0006  3        Default Commod
     C                     Z-ADD*ZERO     WN0007  70       Date From
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WARDCD           Date Method Cod
      * Setup key
     C                     Z-ADDP1AIC3    WAAIC3           Company Number
     C                     MOVELP1RDCD    WARDCD           Date Method Cod
      * Establish starting position
     C           KRSSA     CHAIN@IPRERT              90    *
      * Data record not found
     C   90                MOVEL'USR1681' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Process "Control Date" field (Par.Date used for Calculation)
      * *** Load with Market Pricing Date
      * CASE: DB1.CTL Date Type is Mkt Pricing Date
     C           WARECD    IFEQ 'M'                        *IF
     C                     Z-ADDP2EXDT    P3GTDT           Date Used for C
     C                     END                             *FI
      * *** Load with Requested Delivery Date
      * CASE: DB1.CTL Date Type is Requested Delivery Date
     C           WARECD    IFEQ 'D'                        *IF
     C                     Z-ADDP2EIDT    P3GTDT           Date Used for C
     C                     END                             *FI
      * *** Load with Current Date
      * CASE: DB1.CTL Date Type is Current Date
     C           WARECD    IFEQ 'C'                        *IF
     C                     Z-ADD##JDT     P3GTDT           Date Used for C
     C                     END                             *FI
      * *** Load with Requested Ship Date (PK0022)
      * CASE: DB1.CTL Date Type is Requested Ship Date
     C           WARECD    IFEQ 'Q'                        *IF
     C                     Z-ADDP2A5DT    P3GTDT           Date Used for C
     C                     END                             *FI
      * *** Load with Market, Actual Ship, or Requested Ship date
      * CASE: DB1.CTL Date Type is Mkt Prc Date/Ship Date
     C           WARECD    IFEQ 'P'                        *IF
      * CASE: PAR.Market Pricing Date is EQ Zero
     C           P2EXDT    IFEQ *ZERO                      *IF
      * CASE: PAR.Actual Shipped Date is not entered
     C           P2GNDT    IFEQ *ZERO                      *IF
     C                     Z-ADDP2A5DT    P3GTDT           Date Used for C
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2GNDT    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2EXDT    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
      * *** Load with Actual or Requested Ship date
      * CASE: DB1.CTL Date Type is Ship Date
     C           WARECD    IFEQ 'S'                        *IF
      * CASE: PAR.Actual Shipped Date is not entered
     C           P2GNDT    IFEQ *ZERO                      *IF
     C                     Z-ADDP2A5DT    P3GTDT           Date Used for C
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2GNDT    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
      * *** Load with Ordered Date
      * CASE: DB1.CTL Date Type is Ordered Date
     C           WARECD    IFEQ 'O'                        *IF
     C                     Z-ADDP2D3DT    P3GTDT           Date Used for C
     C                     END                             *FI
      * *** Load with Date Range Average (From Date/To Date)
      * CASE: DB1.CTL Date Type is Date Range Average
     C           WARECD    IFEQ 'R'                        *IF
     C                     Z-ADDP2TKDT    WN0004           Period Beginnin
     C                     Z-ADDP2TLDT    WN0005           Period Ending D
     C                     Z-ADDP2TLDT    P3GTDT           Date Used for C
     C                     END                             *FI
      * *** Load with Week Start based on Requested Ship Date
      * CASE: DB1.CTL Date Type is Week Start
     C           WARECD    IFEQ 'W'                        *IF
      * Rtv Prior Sunday      RT - Calendar  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
      * Calculate Week Average Pricing (WPA, WP1, WP2, etc.)
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : DB1.CTL Average is yes
      *   |- c2    : DB1.CTL Prior Week is Not Zeros
      *   |- c3    : DB1.CTL Day of Week is EQ 0 (Not Used)
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAU8ST    IFEQ 'Y'                        *IF
     C           WAQMNB    IFNE *ZERO                      *IF
     C           WACDOW    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calc Beginning and Ending dates
     C                     EXSR UASUBR                     Calc Beginning
      * Clc Date to Use f/Clc RT - Calendar  * 
     C                     EXSR SCRVGN
      * Calculate Average
      * CASE: DB1.System using Date Method is Hog Procurement Eval.
     C           WABXST    IFEQ 'H'                        *IF
      * ** Do not include Saturday for calculating the Average. **
      * RTV Wk Pr Avg Prc HPE RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0001    P      Commodity Marke
     C                     MOVELP2LRCD    WL0002    P      Commodity Price
     C                     Z-ADDWN0005    WL0003           Market Price Da
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDWN0004    WL0005           Period Beginnin
     C                     Z-ADDWN0005    WL0006           Period Ending D
     C                     Z-ADDP2TPVA    WL0007           Pricing Retriev
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    P2TPVA           Pricing Retriev
     C                     MOVELWL0008    P4W8ST    P      Date Error Retu
     C                     Z-ADDWN0005    YL0001           Pricing Date Us
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Week Prior Avg Prc RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0009    P      Commodity Marke
     C                     MOVELP2LRCD    WL0010    P      Commodity Price
     C                     Z-ADDWN0005    WL0011           Market Price Da
     C                     Z-ADDWN0004    WL0012           Period Beginnin
     C                     Z-ADDWN0005    WL0013           Period Ending D
     C                     Z-ADDP2TPVA    WL0015           Pricing Retriev
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    YL0001           Pricing Date Us
     C                     Z-ADDWL0015    P2TPVA           Pricing Retriev
     C                     MOVELWL0016    P4W8ST    P      Date Error Retu
     C                     END                             *FI
     C                     Z-ADDYL0001    P2GIDT           Pricing Date Us
      * Process Error Condition & Retrieve price if called from O/E
      * CASE:
      *  - c1 OR c2 OR (c3ANDc4)
      *   |- c1    : PGM.*Return code is *Record does not exist
      *   |- c2    : PAR.Pricing Retrieved Amount EQ WRK.ZERO
      *   |- c3    : PAR.Date Used for Calculation NE LCL.Pricing Date Us
      *   |- c4    : DB1.System using Date Method is NE HPE
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           W0RTN     IFEQ @CN,002                    *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           P2TPVA    IFEQ WUW0NB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           P3GTDT    IFNE YL0001                     *IF
     C           WABXST    IFEQ 'A'                        *IF
     C           WABXST    OREQ 'I'
     C           WABXST    OREQ 'O'
     C           WABXST    OREQ 'S'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     MOVEL*BLANK    P4W8ST           Date Error Retu
     C                     MOVEL'WPA'     P4W8ST           Date Error Retu
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
      * If market price not found use market code from company/item
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * RTV Dflt Comm Mrkt     XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDMNXFR'              90  RTV Dflt Comm M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0001  30       Company Number
     C                     PARM P5HGCD    WQ0002  70       Item Code
     C           WN0006    PARM *BLANK    WQ0003  3        Default Commod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Commodity Market Code NE PAR.Default Commod Mark basis
     C           P2LQCD    IFNE WN0006                     *IF
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0006    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Non Average Pricing Methods
      * CASE:
      *  -  c2 AND c3 AND c4 AND c5 AND c6
      *   |- c2    : DB1.CTL Prior Week is Zero
      *   |- c3    : DB1.CTL Prior is Not Yes
      *   |- c4    : DB1.CTL Number of Times is Zero
      *   |- c5    : DB1.CTL Average is no
      *   |- c6    : DB1.CTL Day of Week is EQ 0 (Not Used)
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAQMNB    IFEQ *ZERO                      *IF
     C           WAU7ST    IFEQ *BLANK                     *IF
     C           WAU7ST    OREQ 'N'
     C           WACNOT    IFEQ *ZERO                      *IF
     C           WAU8ST    IFEQ 'N'                        *IF
     C           WACDOW    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Act/MKT/week start
      * CASE: DB1.CTL Date Type is Requested Delivery Date
     C           WARECD    IFEQ 'D'                        *IF
      * CASE: PAR.Requested Delivery Date is not entered
     C           P2EIDT    IFEQ *ZERO                      *IF
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.CTL Prior is blank
     C           WAU7ST    IFEQ *BLANK                     *IF
      * RTV Prior Day          RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0022           Company Number
     C                     Z-ADDP3GTDT    WL0023           Post to G/L Dat
     C                     Z-ADDWACPRD    WL0024           CTL Prior Day
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0025    WN0007           Date From
     C                     Z-ADDWN0007    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.CTL Date Type is Ship Date
     C           WARECD    IFEQ 'S'                        *IF
      * CASE: PAR.Actual Shipped Date is not entered
     C           P2GNDT    IFEQ *ZERO                      *IF
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.CTL Prior is blank
     C           WAU7ST    IFEQ *BLANK                     *IF
      * RTV Prior Day          RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0022           Company Number
     C                     Z-ADDP3GTDT    WL0023           Post to G/L Dat
     C                     Z-ADDWACPRD    WL0024           CTL Prior Day
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0025    WN0007           Date From
     C                     Z-ADDWN0007    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.CTL Date Type is Mkt Prc Date/Ship Date
     C           WARECD    IFEQ 'P'                        *IF
      * CASE: PAR.Market Pricing Date is EQ Zero
     C           P2EXDT    IFEQ *ZERO                      *IF
      * CASE: PAR.Actual Shipped Date is not entered
     C           P2GNDT    IFEQ *ZERO                      *IF
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Prior Day          RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0022           Company Number
     C                     Z-ADDP3GTDT    WL0023           Post to G/L Dat
     C                     Z-ADDWACPRD    WL0024           CTL Prior Day
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0025    WN0007           Date From
     C                     Z-ADDWN0007    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.CTL Date Type is Week Start
     C           WARECD    IFEQ 'W'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Prior Day          RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0022           Company Number
     C                     Z-ADDP3GTDT    WL0023           Post to G/L Dat
     C                     Z-ADDWACPRD    WL0024           CTL Prior Day
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0025    WN0007           Date From
     C                     Z-ADDWN0007    P3GTDT           Date Used for C
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    WUGIDT           USR Date Priced
     C                     Z-ADDWUGIDT    P2GIDT           Pricing Date Us
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Date Used for Calculation NE WRK.Pricing Date Us
      *   |- c2    : PGM.*Return code is *Record does not exist
      *   '-
     C           P3GTDT    IFNE WUGIDT                     *IF
     C           W0RTN     OREQ @CN,002                    *OR
     C                     MOVEL*BLANK    P4W8ST           Date Error Retu
     C                     MOVEL'KPD'     P4W8ST           Date Error Retu
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     END                             *FI
      * If market price not found use market code from company/item
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * XF RTV Dflt Comm Mrkt  XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDMNXFR'              90  RTV Dflt Comm M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0004  30       Company Number
     C                     PARM P5HGCD    WQ0005  70       Item Code
     C           WN0006    PARM *BLANK    WQ0006  3        Default Commod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Commodity Market Code NE PAR.Default Commod Mark basis
     C           P2LQCD    IFNE WN0006                     *IF
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0006    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Day Prior Average
      * CASE:
      *  - c1 AND c2 AND (c3 OR c4)
      *   |- c1    : DB1.CTL Average is yes
      *   |- c2    : DB1.CTL Number of Times is Not Zeros
      *   |- c3    : DB1.CTL Prior Day is Not Zeros
      *   |- c4    : DB1.CTL Day of Week is Not Equal to Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAU8ST    IFEQ 'Y'                        *IF
     C           WACNOT    IFNE *ZERO                      *IF
     C                     MOVEL'0'       Y0CX02  1
     C           WACPRD    IFNE *ZERO                      *IF
     C           WACDOW    ORNE *ZERO                      *OR
     C                     MOVEL'1'       Y0CX02
     C                     END                             *FI
     C           Y0CX02    IFEQ '1'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Find date used for calc by prior day or day of week
      * CASE: DB1.CTL Prior Day is Not Zeros
     C           WACPRD    IFNE *ZERO                      *IF
      * RTV Prior Day          RT - Calendar  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0022           Company Number
     C                     Z-ADDP3GTDT    WL0023           Post to G/L Dat
     C                     Z-ADDWACPRD    WL0024           CTL Prior Day
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0025    WN0004           Date From
      * RTV End Date for #Days RT - Calendar  * 
     C                     EXSR SIRVGN
      * If a date was found then move it into period end date else use be
      * CASE: WRK.Date From             USR is Not zeros
     C           WUJEDT    IFNE *ZERO                      *IF
     C                     Z-ADDWUJEDT    WN0005           Period Ending D
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0004    WN0005           Period Ending D
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.CTL Day of Week is Not Equal to Zero
     C           WACDOW    IFNE *ZERO                      *IF
      * CASE: DB1.System using Date Method is Hog Procurement Eval.
     C           WABXST    IFEQ 'H'                        *IF
      * Rtv Prc Dte w/DOW HPE RT - Calendar  * 
     C                     EXSR SJRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Prior Day by Day   RT - Calendar  * 
     C                     EXSR SKRVGN
     C                     END                             *FI
      * If a from Dt was found then move it into period begin date else d
      * CASE: WRK.Date From             USR is Not zeros
     C           WUJEDT    IFNE *ZERO                      *IF
     C                     Z-ADDWUJEDT    WN0004           Period Beginnin
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP3GTDT    WN0004           Period Beginnin
     C                     END                             *FI
      * If To date was found then move it into period end date else Begin
      * CASE: WRK.Date To               USR is Not Zero
     C           WUJFDT    IFNE *ZERO                      *IF
     C                     Z-ADDWUJFDT    WN0005           Period Ending D
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWN0004    WN0005           Period Ending D
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Average
      * CASE: DB1.System using Date Method is Hog Procurement Eval.
     C           WABXST    IFEQ 'H'                        *IF
      * ** Do not include Saturday for calculating the Average. **
      * RTV Wk Pr Avg Prc HPE RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0001    P      Commodity Marke
     C                     MOVELP2LRCD    WL0002    P      Commodity Price
     C                     Z-ADDWN0005    WL0003           Market Price Da
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDWN0004    WL0005           Period Beginnin
     C                     Z-ADDWN0005    WL0006           Period Ending D
     C                     Z-ADDP2TPVA    WL0007           Pricing Retriev
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    P2TPVA           Pricing Retriev
     C                     MOVELWL0008    P4W8ST    P      Date Error Retu
     C                     Z-ADDWN0005    YL0001           Pricing Date Us
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Week Prior Avg Prc RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0009    P      Commodity Marke
     C                     MOVELP2LRCD    WL0010    P      Commodity Price
     C                     Z-ADDWN0005    WL0011           Market Price Da
     C                     Z-ADDWN0004    WL0012           Period Beginnin
     C                     Z-ADDWN0005    WL0013           Period Ending D
     C                     Z-ADDP2TPVA    WL0015           Pricing Retriev
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    YL0001           Pricing Date Us
     C                     Z-ADDWL0015    P2TPVA           Pricing Retriev
     C                     MOVELWL0016    P4W8ST    P      Date Error Retu
     C                     END                             *FI
     C                     Z-ADDYL0001    P2GIDT           Pricing Date Us
      * Process Error Condition & Retrieve price if called from O/E
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PGM.*Return code is *Record does not exist
      *   |- c2    : PAR.Pricing Retrieved Amount EQ WRK.ZERO
      *   |- c3    : PAR.Date Used for Calculation NE LCL.Pricing Date Us
      *   '-
     C           W0RTN     IFEQ @CN,002                    *IF
     C           P2TPVA    OREQ WUW0NB                     *OR
     C           P3GTDT    ORNE YL0001                     *OR
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     MOVEL*BLANK    P4W8ST           Date Error Retu
     C                     MOVEL'WPA'     P4W8ST           Date Error Retu
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
      * If market price not found use market code from company/item
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * XF RTV Dflt Comm Mrkt  XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDMNXFR'              90  RTV Dflt Comm M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0007  30       Company Number
     C                     PARM P5HGCD    WQ0008  70       Item Code
     C           WN0006    PARM *BLANK    WQ0009  3        Default Commod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Commodity Market Code NE PAR.Default Commod Mark basis
     C           P2LQCD    IFNE WN0006                     *IF
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0006    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Date Range Average (DRA)
      * CASE:
      *  - c1 AND c2 AND c3
      *   |- c1    : DB1.CTL Average is yes
      *   |- c2    : DB1.CTL Prior Week is Zero
      *   |- c3    : DB1.CTL Day of Week is EQ 0 (Not Used)
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAU8ST    IFEQ 'Y'                        *IF
     C           WAQMNB    IFEQ *ZERO                      *IF
     C           WACDOW    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Calculate Average
      * CASE: DB1.System using Date Method is Hog Procurement Eval.
     C           WABXST    IFEQ 'H'                        *IF
      * ** Do not include Saturday for calculating the Average. **
      * RTV Wk Pr Avg Prc HPE RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0001    P      Commodity Marke
     C                     MOVELP2LRCD    WL0002    P      Commodity Price
     C                     Z-ADDWN0005    WL0003           Market Price Da
     C                     Z-ADDP1AIC3    WL0004           Company Number
     C                     Z-ADDWN0004    WL0005           Period Beginnin
     C                     Z-ADDWN0005    WL0006           Period Ending D
     C                     Z-ADDP2TPVA    WL0007           Pricing Retriev
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    P2TPVA           Pricing Retriev
     C                     MOVELWL0008    P4W8ST    P      Date Error Retu
     C                     Z-ADDWN0005    YL0001           Pricing Date Us
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Week Prior Avg Prc RT - Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0009    P      Commodity Marke
     C                     MOVELP2LRCD    WL0010    P      Commodity Price
     C                     Z-ADDWN0005    WL0011           Market Price Da
     C                     Z-ADDWN0004    WL0012           Period Beginnin
     C                     Z-ADDWN0005    WL0013           Period Ending D
     C                     Z-ADDP2TPVA    WL0015           Pricing Retriev
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0014    YL0001           Pricing Date Us
     C                     Z-ADDWL0015    P2TPVA           Pricing Retriev
     C                     MOVELWL0016    P4W8ST    P      Date Error Retu
     C                     END                             *FI
     C                     Z-ADDYL0001    P2GIDT           Pricing Date Us
      * Process Error Condition & Retrieve price if called from O/E
      * CASE:
      *  - c1 OR c2 OR c3
      *   |- c1    : PGM.*Return code is *Record does not exist
      *   |- c2    : PAR.Pricing Retrieved Amount EQ WRK.ZERO
      *   |- c3    : PAR.Date Used for Calculation NE LCL.Pricing Date Us
      *   '-
     C           W0RTN     IFEQ @CN,002                    *IF
     C           P2TPVA    OREQ WUW0NB                     *OR
     C           P3GTDT    ORNE YL0001                     *OR
     C                     MOVEL'U'       P2U1ST           Price Status
     C                     MOVEL*BLANK    P4W8ST           Date Error Retu
     C                     MOVEL'WPA'     P4W8ST           Date Error Retu
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP2LQCD    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
      * If market price not found use market code from company/item
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,002                    *IF
      * XF RTV Dflt Comm Mrkt  XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDMNXFR'              90  RTV Dflt Comm M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0010  30       Company Number
     C                     PARM P5HGCD    WQ0011  70       Item Code
     C           WN0006    PARM *BLANK    WQ0012  3        Default Commod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMNXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.Commodity Market Code NE PAR.Default Commod Mark basis
     C           P2LQCD    IFNE WN0006                     *IF
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0006    WL0017    P      Commodity Marke
     C                     MOVELP2LRCD    WL0018    P      Commodity Price
     C                     Z-ADDP3GTDT    WL0019           Market Price Da
     C                     EXSR SGRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0020    P2TPVA           Commodity Marke
     C                     Z-ADDWL0021    P2GIDT           USR Date Priced
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Prior Sunday      RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSB01           Company Number
      * Define keylist
     C           KPSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           WBBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSB01           Company Number
     C                     Z-ADDP2A5DT    WBBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSB     SETLL@AFREPU                    *
     C           KRSSB     READE@AFREPU                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P3GTDT           Date Sun USR
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Day of Week is Sunday
     C           WBA9ST    IFEQ '1'                        *IF
     C                     Z-ADDWBBCDT    P3GTDT           Date Sun USR
     C                     GOTO SBEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSB     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Clc Date to Use f/Clc RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSC01           Company Number
      * Define keylist
     C           KPSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           WBBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSC01           Company Number
     C                     Z-ADDWN0005    WBBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSC     SETLL@AFREPU                    *
     C           KRSSC     READE@AFREPU                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P3GTDT           Date Used for C
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.Public Holiday Status is yes
      *   |- c2    : DB1.Day of Week is Sat/Sun
      *   '-
     C           WBC5ST    IFEQ 'Y'                        *IF
     C           WBA9ST    OREQ '7'                        *OR
     C           WBA9ST    OREQ '1'
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWBBCDT    P3GTDT           Date Used for C
     C                     GOTO SCEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSC     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Wk Pr Avg Prc HPE RT - OM Commodity Mrkt Price  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0008  50       USR Counter
     C                     MOVEL*BLANK    WN0009  1        Day of Week
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0008           USR Counter
     C                     Z-ADD*ZERO     WUTPVA           Pricing Retriev
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCLQCD    WQSD01           Commodity Marke
     C           *LIKE     DEFN WCLRCD    WQSD02           Commodity Price
      * Define keylist
     C           KPSSD     KLIST
     C                     KFLD           WQSD01           Commodity Marke
     C                     KFLD           WQSD02           Commodity Price
     C                     KFLD           WCEQDT           Market Price Da
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Commodity Marke
     C                     KFLD           WQSD02           Commodity Price
      * Setup key
     C                     MOVELWL0001    WQSD01           Commodity Marke
     C                     MOVELWL0002    WQSD02           Commodity Price
     C                     Z-ADDWL0003    WCEQDT           Market Price Da
      * Establish starting position
     C           KPSSD     SETLL@F0CPEP                    *
     C           KRSSD     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Market Price Date GE PAR.Period Beginning Date
      *   |- c2    : DB1.Market Price Date LE PAR.Period Ending Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCEQDT    IFGE WL0005                     *IF
     C           WCEQDT    IFLE WL0006                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * RTV Day and Week No.   RT - Calendar  * 
     C                     EXSR SERVGN
      * CASE: PAR.Day of Week is Week Days
     C           WN0009    IFEQ '6'                        *IF
     C           WN0009    OREQ '2'
     C           WN0009    OREQ '5'
     C           WN0009    OREQ '3'
     C           WN0009    OREQ '4'
     C                     ADD  1         WN0008           USR Counter
     C                     ADD  WCA5PR    WUTPVA           Pricing Retriev
      * Calculate Average (Divide Total Price by Counter)
      * CASE: PAR.USR Counter is GE 1
     C           WN0008    IFGE 1                          *IF
     C           WUTPVA    DIV  WN0008    WL0007           Pricing Retriev
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WL0008           Date Error Retu
     C                     MOVEL'WPA'     WL0008           Date Error Retu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Day and Week No.   RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSE01           Company Number
     C           *LIKE     DEFN WDBCDT    WQSE02           Post to G/L Dat
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Company Number
     C                     KFLD           WQSE02           Post to G/L Dat
      * Setup key
     C                     Z-ADDWL0004    WQSE01           Company Number
     C                     Z-ADDWCEQDT    WQSE02           Post to G/L Dat
      * Establish starting position
     C           KRSSE     SETLL@AFREYY                    *
     C           KRSSE     READE@AFREYY                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDWDETNB    WUETNB           Accounting Peri
     C                     MOVELWDA9ST    WN0009           Day of Week
     C                     Z-ADDWDEINB    WUEINB           Week Number
     C           KRSSE     READE@AFREYY                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Week Prior Avg Prc RT - Commodity Mrkt Price  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0010  50       USR Counter
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0010           USR Counter
     C                     Z-ADD*ZERO     WUTPVA           Pricing Retriev
     C                     MOVEL'Y'       YL0002           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCLQCD    WQSF01           Commodity Marke
     C           *LIKE     DEFN WCLRCD    WQSF02           Commodity Price
      * Define keylist
     C           KPSSF     KLIST
     C                     KFLD           WQSF01           Commodity Marke
     C                     KFLD           WQSF02           Commodity Price
     C                     KFLD           WCEQDT           Market Price Da
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Commodity Marke
     C                     KFLD           WQSF02           Commodity Price
      * Setup key
     C                     MOVELWL0009    WQSF01           Commodity Marke
     C                     MOVELWL0010    WQSF02           Commodity Price
     C                     Z-ADDWL0011    WCEQDT           Market Price Da
      * Establish starting position
     C           KPSSF     SETLL@F0CPEP                    *
     C           KRSSF     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: LCL.First Time Flag is Yes
     C           YL0002    IFEQ 'Y'                        *IF
     C                     Z-ADDWCEQDT    WL0014           Pricing Date Us
     C                     MOVEL'N'       YL0002           First Time Flag
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Market Price Date GE PAR.Period Beginning Date
      *   |- c2    : DB1.Market Price Date LE PAR.Period Ending Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCEQDT    IFGE WL0012                     *IF
     C           WCEQDT    IFLE WL0013                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  1         WN0010           USR Counter
     C                     ADD  WCA5PR    WUTPVA           Pricing Retriev
      * Calculate Average (Divide Total Price by Counter)
      * CASE: PAR.USR Counter is GE 1
     C           WN0010    IFGE 1                          *IF
     C           WUTPVA    DIV  WN0010    WL0015           Pricing Retriev
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    WL0016           Date Error Retu
     C                     MOVEL'WPA'     WL0016           Date Error Retu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCLQCD    WQSG01           Commodity Marke
     C           *LIKE     DEFN WCLRCD    WQSG02           Commodity Price
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           Commodity Marke
     C                     KFLD           WQSG02           Commodity Price
     C                     KFLD           WCEQDT           Market Price Da
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Commodity Marke
     C                     KFLD           WQSG02           Commodity Price
      * Setup key
     C                     MOVELWL0017    WQSG01           Commodity Marke
     C                     MOVELWL0018    WQSG02           Commodity Price
     C                     Z-ADDWL0019    WCEQDT           Market Price Da
      * Establish starting position
     C           KPSSG     SETLL@F0CPEP                    *
     C           KRSSG     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,002   W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0020           Commodity Marke
     C                     Z-ADD*ZERO     WL0021           USR Date Priced
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDWCA5PR    WL0020           Commodity Marke
     C                     Z-ADDWCEQDT    WL0021           USR Date Priced
     C                     GOTO SGEXIT                     *QUIT
     C           KRSSG     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Prior Day          RT - Calendar  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0011  50       Count USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WN0011           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSH01           Company Number
      * Define keylist
     C           KPSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WBBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Company Number
      * Setup key
     C                     Z-ADDWL0022    WQSH01           Company Number
     C                     Z-ADDWL0023    WBBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSH     SETLL@AFREPU                    *
     C           KRSSH     READE@AFREPU                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Day of Week is Week Days
      *   |- c2    : DB1.Public Holiday Status is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WBA9ST    IFEQ '6'                        *IF
     C           WBA9ST    OREQ '2'
     C           WBA9ST    OREQ '5'
     C           WBA9ST    OREQ '3'
     C           WBA9ST    OREQ '4'
     C           WBC5ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.CTL Prior Day EQ PAR.Count USR
     C           WL0024    IFEQ WN0011                     *IF
     C                     Z-ADDWBBCDT    WL0025           Date From
     C                     GOTO SHEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  1         WN0011           Count USR
     C                     END                             *FI
     C           KRSSH     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV End Date for #Days RT - Calendar  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0012  50       Count USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD1         WN0012           Count USR
     C                     Z-ADD*ZERO     WUJEDT           Date From
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEAIC3    WQSI01           Company Number
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WEBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSI01           Company Number
     C                     Z-ADDWN0004    WEBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSI     SETLL@AFREBE                    *
     C           KRSSI     READE@AFREBE                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJEDT           Date From
     C                     Z-ADD*ZERO     WN0012           Count USR
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Public Holiday Status is no
      *   |- c2    : DB1.Day of Week is Week Days
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WEC5ST    IFEQ 'N'                        *IF
     C           WEA9ST    IFEQ '6'                        *IF
     C           WEA9ST    OREQ '2'
     C           WEA9ST    OREQ '5'
     C           WEA9ST    OREQ '3'
     C           WEA9ST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Count USR EQ PAR.CTL Number of Times
     C           WN0012    IFEQ WACNOT                     *IF
     C                     Z-ADDWEBCDT    WUJEDT           Date From
     C                     GOTO SIEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  1         WN0012           Count USR
     C                     END                             *FI
     C           KRSSI     READE@AFREBE                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Rtv Prc Dte w/DOW HPE RT - Calendar  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0013  50       Count USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJEDT           Date From
     C                     Z-ADD*ZERO     WUJFDT           Date To
     C                     Z-ADD*ZERO     WN0013           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSJ01           Company Number
      * Define keylist
     C           KPSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
     C                     KFLD           WBBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSJ01           Company Number
     C                     Z-ADDP3GTDT    WBBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSJ     SETLL@AFREPU                    *
     C           KRSSJ     READE@AFREPU                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJEDT           Date From
     C                     Z-ADD*ZERO     WUJFDT           Date To
     C                     Z-ADD*ZERO     WN0013           Count USR
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVE WBA9ST    WUCDOW           CTL Day of Week
      * The To Date will be the day of the week passed in
      * CASE:
      *  - c1 AND c2 AND c4
      *   |- c1    : DB1.Public Holiday Status is no
      *   |- c2    : PAR.CTL Day of Week EQ WRK.CTL Day of Week
      *   |- c4    : PAR.Count USR is Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WBC5ST    IFEQ 'N'                        *IF
     C           WACDOW    IFEQ WUCDOW                     *IF
     C           WN0013    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADDWBBCDT    WUJFDT           Date To
     C                     Z-ADD1         WN0013           Count USR
     C                     END                             *FI
      * The From Date will be Number of Times less the To Date
      * CASE: PAR.Count USR is GT 0
     C           WN0013    IFGT *ZERO                      *IF
      * CASE: Week Day and Not a Public Holiday
      *  - c1 AND c2
      *   |- c1    : DB1.Day of Week is Week Days
      *   |- c2    : DB1.Public Holiday Status is no
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WBA9ST    IFEQ '6'                        *IF
     C           WBA9ST    OREQ '2'
     C           WBA9ST    OREQ '5'
     C           WBA9ST    OREQ '3'
     C           WBA9ST    OREQ '4'
     C           WBC5ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Count USR EQ PAR.CTL Number of Times
     C           WN0013    IFEQ WACNOT                     *IF
     C                     Z-ADDWBBCDT    WUJEDT           Date From
     C                     GOTO SJEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  1         WN0013           Count USR
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSJ     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Prior Day by Day   RT - Calendar  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0014  50       Count USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUJEDT           Date From
     C                     Z-ADD*ZERO     WUJFDT           Date To
     C                     Z-ADD*ZERO     WN0014           Count USR
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSK01           Company Number
      * Define keylist
     C           KPSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WBBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
      * Setup key
     C                     Z-ADDWAAIC3    WQSK01           Company Number
     C                     Z-ADDP3GTDT    WBBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSK     SETLL@AFREPU                    *
     C           KRSSK     READE@AFREPU                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUJEDT           Date From
     C                     Z-ADD*ZERO     WUJFDT           Date To
     C                     Z-ADD*ZERO     WN0014           Count USR
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     MOVE WBA9ST    WUCDOW           CTL Day of Week
      * The To Date will be the day of the week passed in
      * CASE:
      *  - c1 AND c2 AND c3 AND c4
      *   |- c1    : DB1.Public Holiday Status is no
      *   |- c2    : PAR.CTL Day of Week EQ WRK.CTL Day of Week
      *   |- c3    : PAR.Post to G/L Date NE DB1.Post to G/L Date
      *   |- c4    : PAR.Count USR is Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WBC5ST    IFEQ 'N'                        *IF
     C           WACDOW    IFEQ WUCDOW                     *IF
     C           P3GTDT    IFNE WBBCDT                     *IF
     C           WN0014    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADDWBBCDT    WUJFDT           Date To
     C                     Z-ADD1         WN0014           Count USR
     C                     END                             *FI
      * The From Date will be Number of Times less the To Date
      * CASE: PAR.Count USR is GT 0
     C           WN0014    IFGT *ZERO                      *IF
      * CASE: PAR.Count USR EQ PAR.CTL Number of Times
     C           WN0014    IFEQ WACNOT                     *IF
     C                     Z-ADDWBBCDT    WUJEDT           Date From
     C                     GOTO SKEXIT                     *QUIT
     C                     END                             *FI
     C                     ADD  1         WN0014           Count USR
     C                     END                             *FI
     C           KRSSK     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Calc Beginning and Ending dates
      *================================================================
      * Beginning Date
      * WRK.Day of Week (SYN) USR = PAR.Date Used for Calculation *DAY OF
     C           P3GTDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     WU
     C                     Z-ADDP3GTDT    WN0004           Period Beginnin
      * Loop to find Sunday of calc date week
      * DO WHILE: WRK.Day of Week (SYN) USR is zNot Sunday
     C           WU        DOWNE7                          *DOW
      * PAR.Period Beginning Date = PAR.Period Beginning Date + CON.-1 *D
     C           WN0004    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0004
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0004
     C                     END
      * WRK.Day of Week (SYN) USR = PAR.Period Beginning Date *DAY OF WEE
     C           WN0004    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     WU
     C                     END                             *ITR
      * Calc days to subtract
      * WRK.@Calc 5,0 =
      *    *COMPUTE (x3 - (x1 * x2))
      * x3    : CON.*ZERO
      * -     : PGM.*Synon (17,7) work field
      * x1    : DB1.CTL Prior Week
      * *     : WRK.@Calc 5,0 = DB1.CTL Prior Week * CON.7 *
      * x2    : CON.7
     C           WAQMNB    MULT 7         WUCLC5           @Calc 5,0
     C           *ZERO     SUB  WUCLC5    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCLC5           @Calc 5,0
      * PAR.Period Beginning Date = PAR.Period Beginning Date + WRK.@Calc
     C           WN0004    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUCLC5    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0004
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0004
     C                     END
      * Ending Date
      * PAR.Period Ending Date = PAR.Period Beginning Date + CON.6 *DAYS
     C           WN0004    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD6         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0005
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0005
     C                     END
      * Number of days to add
      * WRK.@Calc 5,0 =
      *    *COMPUTE (x2 * (x1 - x3))
      * x2    : CON.7
      * *     : PGM.*Synon (15,0) work field *
      * x1    : DB1.CTL Number of Times
      * -     : PGM.*Synon (17,7) work field
      * x3    : CON.1
     C           WACNOT    SUB  1         W0WD01           *Synon (17,7) w
     C           7         MULT W0WD01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WUCLC5           @Calc 5,0
      * PAR.Period Ending Date = PAR.Period Ending Date + WRK.@Calc 5,0 *
     C           WN0005    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUCLC5    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,001   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     WN0005
     C                     ELSE
     C           XDINDT    SUB  1000000   WN0005
     C                     END
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WACPRD           CTL Prior Day
     C                     Z-ADD*ZERO     WAQMNB           CTL Prior Week
     C                     Z-ADD*ZERO     WACNOT           CTL Number of T
     C                     Z-ADD*ZERO     WACDOW           CTL Day of Week
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WBCQNB           Julian Date
     C                     Z-ADD*ZERO     WBESNB           Accounting Year
     C                     Z-ADD*ZERO     WBETNB           Accounting Peri
     C                     Z-ADD*ZERO     WBBZNB           OM Week
     C                     Z-ADD*ZERO     WBEINB           Week Number
     C                     Z-ADD*ZERO     WBAQNB           Billing Cycle
     C                     Z-ADD*ZERO     WBOJDT           HPS PIC Date
     C                     Z-ADD*ZERO     WBNQNX           HPS Calendar Ye
     C                     Z-ADD*ZERO     WBNRNX           HPS Calendar We
     C                     Z-ADD*ZERO     WBOKDT           Calendar Unused
     C                     Z-ADD*ZERO     WBOLDT           Calendar Unused
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Day of Week (SYN) USR
     C                     Z-ADD*ZERO     WU      10
      * Define work field @Calc 5,0
     C                     Z-ADD*ZERO     WUCLC5  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCEQDT           Market Price Da
     C                     Z-ADD*ZERO     WCA5PR           Commodity Marke
     C                     Z-ADD*ZERO     WCB8PR           Projected Marke
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Pricing Retrieved Amount
     C                     Z-ADD*ZERO     WUTPVA 114
      * Define work field Accounting Period Code
     C                     Z-ADD*ZERO     WUETNB  20
      * Define work field Week Number
     C                     Z-ADD*ZERO     WUEINB  20
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Pricing Date Used
     C                     Z-ADD*ZERO     WUGIDT  70
      * Define work field Date From             USR
     C                     Z-ADD*ZERO     WUJEDT  70
      * Define work field Date To               USR
     C                     Z-ADD*ZERO     WUJFDT  70
      * Define work field CTL Day of Week
     C                     Z-ADD*ZERO     WUCDOW  10
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     MOVEL*BLANK    WL0002  7
     C                     Z-ADD*ZERO     WL0003  70
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  70
     C                     Z-ADD*ZERO     WL0006  70
     C                     Z-ADD*ZERO     WL0007 114
     C                     MOVEL*BLANK    WL0008  5
      * Define local variables for subroutine SFRVGN.
     C                     MOVEL*BLANK    WL0009  3
     C                     MOVEL*BLANK    WL0010  7
     C                     Z-ADD*ZERO     WL0011  70
     C                     Z-ADD*ZERO     WL0012  70
     C                     Z-ADD*ZERO     WL0013  70
     C                     Z-ADD*ZERO     WL0014  70
     C                     Z-ADD*ZERO     WL0015 114
     C                     MOVEL*BLANK    WL0016  5
      * Define local variables for subroutine SGRVGN.
     C                     MOVEL*BLANK    WL0017  3
     C                     MOVEL*BLANK    WL0018  7
     C                     Z-ADD*ZERO     WL0019  70
     C                     Z-ADD*ZERO     WL0020 114
     C                     Z-ADD*ZERO     WL0021  70
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0022  30
     C                     Z-ADD*ZERO     WL0023  70
     C                     Z-ADD*ZERO     WL0024  30
     C                     Z-ADD*ZERO     WL0025  70
      * Define local work field Pricing Date Used
     C                     Z-ADD*ZERO     YL0001  70
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0002  1
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 1111111
00002 Y2U0005
