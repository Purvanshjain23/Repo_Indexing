      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Order Management System
      * PROGRAM:     PBJSPFR - Print Traffic Card--(uses an overlay)
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     08/26/13
      *
      * Function:    This program prints Traffic Cards using an overlay on cardstock.
      *              It is for unshipped loads only.
      *              The overlay is named TRAFCARD.
      *              In the Word doc itself we set the page size to 4" by 7.1"
      *              thru the Page Layout/Page Setup/Paper tabs..this kept the table on
      *              a single page.
      *              When you save the overlay to the 300DPI AFP printer, be sure to take
      *              the User Defined paper size option and set it to 4" by 7"...this is
      *              the size of the cardstock that Guymon uses.
      *
      *              This function was initially only used by Guyman. But, in April 2014,
      *              Triumph requested the function.
      *
      ****************************************************************************************
      * MODIFICATIONS:
      ****************************************************************************************
      * DATE      PROGRAMMER
      *
      * 01/16/14  LeAnne Ramsey (E2957)
      *           Kyle Fesmire has asked that we exclude COD/Donation Customers from printing.
      *           Since we are so close to the ERP and there is no available/existing flag field
      *           on the Customer Master, Purva/Rose/I decided that I would just hardcode for
      *           these excluded customers. I will only exclude when the user has elected to
      *           print a batch of loads. If the user selects to print a single load for one
      *           of these COD/Donation Customers, the logic will print the Traffic Card.
      *
      * 04/10/14  LeAnne Ramsey (E3077)
      *           Apparently, Kyle had us make the change above thinking that it would make
      *           the Traffic Card print match load-per-load the Load List Report. In fact,
      *           the Load List would have matched the Traffic Card if he had selected
      *           the Unshipped Loads and the By Sequence Report when he generated his Load
      *           List. So, now that he understands this, he wants me to stop excluding the
      *           COD/Donation Customers so that the Load List/Traffic Cards will match.
      /eject
      ****************************************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************************************
      *
     Fomffrel0  if   e           k disk
      *    Carrier
      *
      *
     Fomfjcplb  if   e           k disk
      *    Load header (LF selects records where Load Status is Combined/Entered/Locked/Unlocked)
      *    (Used to retrieve/print a single load.)
      *
      *
     Fomfjcpmm  if   e           k disk
      *    Load header
      *    (Used when the user selects all loads; I used this to match the Print Load List sequence.
      *
      *
     Fomflcplc  if   e           k disk
      *    Load detail
      *
      *
     Fopbfcplo  if   e           k disk
      *  Order header
      *
      *
     Fpbjspfr$  o    e             printer
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D svrvnb          s                   like(flrvnb)
      *
      * Date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
      *
      *
      * Parms
      *
     D xxreturn        s              1
     D xxcomp          s                   like(fjaic3)
     D xxsdate         s                   like(fjaodt)
     D xxload          s                   like(fjrmnb)
     D xxwhse1         s                   like(fjvpcd)
     D xxwhse2         s                   like(fjvpcd)
     D xxblknb         s              5  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * The users may elect to print:
      *    1) 1 load
      *    b) blank forms
      *    c) all loads for warehouse CF1 and/or GP1
      *
     C                   select
     C                   when      xxload > 0
     C                   exsr      $1load
      *
     C                   when      xxblknb > 0
     C                   exsr      $blankcard
     C                   other
      *
     C                   exsr      $allloads
     C                   endsl
      *
      * EOF processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Print Blank Traffic Cards
      *---------------------------------------------------------------
      *
     C     $blankcard    begsr
      *
     C                   do        xxblknb
     C                   write     h1hdr
     C                   enddo
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Print Traffic Card for a single load
      *---------------------------------------------------------------
      *
     C     $1load        begsr
      *
     C     xxload        chain     omfjcplb                           92
     C                   if        *in92 = *off                                 If hit
     C                   exsr      $loadhdr
     C                   exsr      $loaddtl
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------------
      * All loads for selected Scheduled Ship Date
      *---------------------------------------------------------------------------------------------
      *
     C     $allloads     begsr
      *
     C     xxsdate       setll     omfjcpmm
      *
     C                   dou       *in91 = *on                                  Do loads
     C     xxsdate       reade     omfjcpmm                               91
     C                   if        *in91 = *off and                             If not EOF
     C                             (fjpkst = 'C' or fjpkst = 'E' or
     C                              fjpkst = 'L' or fjpkst = 'U') and
     C                              fjaic3 = xxcomp  and
     C                              fjvpcd <> *blank and
     C                             (fjvpcd = xxwhse1 or fjvpcd = xxwhse2)
      *
     C                   clear                   h1hdr
     C                   exsr      $loadhdr
     C                   exsr      $loaddtl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loads
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Setup Load Header fields.
      *---------------------------------------------------------------
      *
     C     $loadhdr      begsr
      *
      * Load ID
      * Reefer Temp
     C                   z-add     fjrmnb        h1rmnb
     C                   z-add     fjrnnb        h1rnnb
      * Sequence Nbr
      * Ship From Warehse
     C                   z-add     fjt4nb        h1t4nb
     C                   move      fjvpcd        h1vpcd
      *
      * Retrieve Carrier record; move 4 leftmost positions of Description to
      * first field on the Carrier/Trailer line....the first line that prints
      * on the card.
      *
     C     fjbzna        chain     omffrel0                           92
     C                   if        *in92 = *off
     C                   eval      h1nana = ffadtx
     C                   endif
      *
      * Trailer ID (it prints after carrier.)
     C                   eval      h1dxtx = fjdxtx
      *
      * Flip Scheduled Ship Date to MMDDYY format
      *
     C     *cymd         test(d)                 fjaodt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjaodt        wkisodate
     C     *mdy          move      wkisodate     h1aodtmdy
     C                   endif
      *
      * Flip Requested Delivery Date to MMDDYY format
      *
     C     *cymd         test(d)                 fjeidt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjeidt        wkisodate
     C     *mdy          move      wkisodate     h1eidtmdy
     C                   endif
      *
      * Flip Deadline Departure Date to MMDDYY format; populate Time
      *
     C     *cymd         test(d)                 fjkzdt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjkzdt        wkisodate
     C     *mdy          move      wkisodate     h1kzdtmdy
     C                   eval      h1axtm = fjaxtm / 100
     C                   endif
      *
      * Flip On Yard Date to MMDDYY format and populate Time.
      *
     C     *cymd         test(d)                 fjkkdt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjkkdt        wkisodate
     C     *mdy          move      wkisodate     h1kkdtmdy
     C                   eval      h1avtm = fjavtm / 100
     C                   endif
      *
      * Flip Ready to Load to MMDDYY format and populate Time.
      *
     C     *cymd         test(d)                 fjj4dt                 92
     C                   if        *in92 = *off
     C     *cymd         move      fjj4dt        wkisodate
     C     *mdy          move      wkisodate     h1j4dtmdy
     C                   eval      h1trtm = fjtrtm / 100
     C                   endif
      *
     C                   write     h1hdr
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve/print the unique Stops for a Load
      *---------------------------------------------------------------
      *
     C     $loaddtl      begsr
      *
     C                   move      *blank        svrvnb
     C     fjrmnb        setll     omflcplc
      *
     C                   dou       *in93 = *on                                  Do load detail
     C     fjrmnb        reade     omflcplc                               93
     C                   if        *in93 = *off and flrvnb <> svrvnb            If not EOF
      *
     C                   z-add     flrvnb        svrvnb
     C                   z-add     flrvnb        l1rvnb
      *
      * Retrieve ShipTo Customer Name and Destination City/State
      * from the Order Header. Use Order Number for the retrieval.
      *
     C     flc4nb        chain     opbfcplo                           92
     C                   if        *in92 = *off                                 If order header
     C                   movel     bebrtx        l1hnna
     C                   eval      l1cityst = %trim(behnna) + ',' +
     C                                        %trim(bedbcd)
     C                   endif                                                  If order header
      *
     C                   write     l1dtl
     C                   clear                   l1dtl
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do load detail
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C                   parm                    xxreturn
     C                   parm                    xxcomp
     C                   parm                    xxsdate
     C                   parm                    xxload
     C                   parm                    xxwhse1
     C                   parm                    xxwhse2
     C                   parm                    xxblknb
      *
      * Rose's kickoff screen does not check for negative values in;
      *   1) the number of blank forms to copy or
      *   2) the Load ID
      * So, check for negative values and flip them positive if needed;
      *
     C                   if        xxblknb < 0
     C     -1            mult      xxblknb       xxblknb
     C                   endif
      *
     C                   if        xxload < 0
     C     -1            mult      xxload        xxload
     C                   endif
      *
     C                   endsr
      /eject
