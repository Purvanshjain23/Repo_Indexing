// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLAEDFR
// ?Date: 14.08.2025 Time: 02:53:25
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?H16853 ISE 01/23/2021 - Increased the length from 5 to 7 and
//?                        corrected the alignment of Buy Order Number field
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

// LCL.Count of Records Usr = CON.*ZERO
LCL.Count_of_Records_Usr = *ZERO;

// LCL.Company Number USR = PAR.CC Company Number
LCL.Company_Number_USR = PAR.CC_Company_Number;

// LCL.Number of Times Usr = CVTVAR(CON.00002)
LCL.Number_of_Times_Usr = CVTVAR(00002);

// LCL.Kill Date Usr = JOB.*Job date
LCL.Kill_Date_Usr = JOB.*Job_date;

// Call program Rtv Prv Kill Dt HPE#TMXF.
CALL PROGRAM(Rtv Prv Kill Dt HPE#TMXF) ('PBJIXFR');
PARAMETER(LCL.Return_Code_USR);
PARAMETER(LCL.Company_Number_USR);
PARAMETER(LCL.Kill_Date_Usr);
PARAMETER(LCL.Kill_Date_1_Usr);
PARAMETER(LCL.Number_of_Times_Usr);

//?USER: Initialize subfile control

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// CTL.CC Company Number = PAR.CC Company Number
CTL.CC_Company_Number = PAR.CC_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

// CTL.Kill Date 1 Usr = LCL.Kill Date 1 Usr
CTL.Kill_Date_1_Usr = LCL.Kill_Date_1_Usr;

CASE;

// IF CTL.TP Tattoo Date is Not Entered
IF CTL.TP_Tattoo_Date = *ZERO;

// CTL.TP Tattoo Date = LCL.Kill Date 1 Usr
CTL.TP_Tattoo_Date = LCL.Kill_Date_1_Usr;

ENDIF;

//?USER: Initialize subfile record from DBF record

CASE;

// IF CTL.CC Company Number is Greater Then *zero
IF CTL.CC_Company_Number > *ZERO;

CASE;

// IF DB1.CC Company Number EQ CTL.CC Company Number
IF DB1.CC_Company_Number = CTL.CC_Company_Number;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?guymon is not using and TF should not be using
//?remove due to the fact the user can create the tattoo number them selfs
//?without random checking
//?*if this is needed for numbers that are not random then we will find
//?out.
//?USER: Process subfile record (Pre-confirm)

//?2=Edit
CASE;

// IF RCD.*SFLSEL is *Revise request
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt Tattoo Pending    ER.
CALL PROGRAM(Edt Tattoo Pending    ER) ('PLAFE1R');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TP_Tattoo_Date);
PARAMETER(RCD.TP_Tattoo_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

