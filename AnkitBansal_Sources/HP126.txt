      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP126- REVISE USER
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     02/13/95
      *
      * FUNCTION: USES AN EDIT RECORD FORMAT TO ADD/CHANGE/DELETE
      *           A USER.
      *
      *           THIS PROGRAM IS CALLED FROM HP426 - WORK WITH USERS.
      *
      *           THE USER MAY DELETE AN EXISTING RECORD BY TAKING
      *           F11=DELETE FROM THIS PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 03/27/96  LEANNE FEDOR
      *           A NEW FIELD 'DELETE MOVEMENTS FLAG' WAS ADDED TO THE
      *           AUTHORIZED USERS FILE.  THIS FIELD WILL BE MAINTAINED
      *           BY IS--IT WILL NOT BE ACCESSIBLE THROUGH THE USER
      *           SETUP FUNCTIONS.  SO, LOGIC WAS CHANGED IN THIS
      *           PROGRAM TO ALWAYS DEFAULT 'NO' INTO THE NEW FIELD.
      *
      * 04/30/96  LEANNE FEDOR
      *           ANOTHER FIELD WAS REQUIRED FOR THE DELETION LOGIC.
      *           NOW, USERS WHO ARE AUTHORIZED TO DELETE MOVEMENTS CAN
      *           BE RESTRICTED TO A SINGLE MOVEMENT STATUS. THIS NEW
      *           FIELD 'MOVEMENT STATUS' WILL BE MAINTAINED BY IS WITH
      *           DBU. SO THIS PROGRAM HAS BEEN CHANGED TO ALWAYS MOVE
      *           BLANKS INTO THIS FIELD.
      *
      * 05/14/97  LEANNE FEDOR
      *           A FIELD FOR OUTPUT QUEUE WAS ADDED TO THE USER FILE.
      *           THIS IS A REQUIRED FIELD. PRIOR TO THIS, THE OUTPUT
      *           FOR A USER WAS ALWAYS DEFAULTED TO THE PRINTER
      *           ASSOCIATED WITH HIS USER PROFILE.  HOWEVER, WHEN
      *           USER'S PRINTED 'MAIL', THEY OFTEN FORGOT TO CHANGE
      *           THE MAIL TO PRINT ON THE LASER PRINTER.  IT DEFAULTED
      *           TO THEIR USER PROFILE PRINTER (A LINE PRINTER) AND
      *           MESSED UP THE LINE PRINTER SPACING SO THAT THE NEXT
      *           USER HAD TO VERIFY ALIGNMENT. SO, THE USERS PROFILES
      *           WILL NOW BE ASSOCIATED WITH THE LASER PRINTER. THE
      *           HPS OUTPUT WILL DEFAULT TO THE PRINTER THAT IS SET
      *           UP FOR EACH USER IN THE USERS FILE.
      *
      * 02/02/00  LeAnne Fedor
      *           Changed outque validation to call a CLP that checks for
      *           existance of the object instead of checking against the
      *           HPS outque file (We are also deleting the file.)
      *
      * 08/25/06  LeAnne Ramsey
      *           Until now I.S. was setting the values for:
      *            1) allowed to delete movements
      *            2) valid movement statuses that the user could delete
      *           We have added these 2 fields/logic to the screen/program.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD126    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP001    UF A E           K DISK
      *    USERS                    (KEY: AUUSCD)
      *
     FHSP003    UF   E           K DISK
      *    FUNCTION AUTHORIZATION   (KEY: FAUSCD FAFNCD)
      *
     FHSJ003B   IF   E           K DISK
     F                                     RENAME(FAREC:FARECA)
      * AUTHORIZED FUNCTIONS + FUNCTIONS
      *                             (KEY: FAUSCD FAFNCD)
      *
     FHSP004    IF   E           K DISK
      *    SECURITY LOCATION        (KEY: SLSLCD)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     UPDATE        $UPD1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR FIELDS IN THE DISPLAY FILE RECORD
      *
     C                   MOVE      *BLANK        DFUSNM
     C                   MOVE      *BLANK        DFSLCD
     C                   MOVE      *BLANK        DFRUFL
     C                   MOVE      *BLANK        DFDMFL
     C                   MOVE      *BLANK        DFMSCD
     C                   MOVE      *BLANK        DFMDFL
     C                   MOVE      *BLANK        DFRMFL
     C                   MOVE      *BLANK        DFRVFL
     C                   MOVE      *BLANK        DFAFFL
     C                   MOVE      *BLANK        DFOUTQ
      *
      * IF INCOMING MODE IS REVISE OR DELETE, THEN RETRIEVE DATABASE
      * RECORD.  DO NOT LOCK THE RECORD.
      *
     C     MODE          IFEQ      REVISE                                       IF REV/DEL
     C     MODE          OREQ      DELETE
     C     DFUSCD        CHAIN(N)  HSP001                             90
     C     *IN90         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     AUUSNM        DFUSNM
     C                   MOVEL     AUSLCD        DFSLCD
     C                   MOVEL     AURUFL        DFRUFL
     C                   MOVEL     AUDMFL        DFDMFL
     C                   MOVEL     AUMSCD        DFMSCD
     C                   MOVEL     AUMDFL        DFMDFL
     C                   MOVEL     AURMFL        DFRMFL
     C                   MOVEL     AURVFL        DFRVFL
     C                   MOVEL     AUAFFL        DFAFFL
     C                   MOVEL     AUOUTQ        DFOUTQ
     C                   ELSE
      * NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00553'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF REV/DEL
      *
      * ALWAYS DISPLAY THE SCREEN--EVEN FOR DELETIONS.
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      *  WRITE MESSAGES FROM ARRAYS TO MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
     C                   SELECT
     C     MODE          WHENEQ    REVISE
     C                   SETON                                        60
     C     MODE          WHENEQ    CREATE
     C                   SETON                                        61
     C     MODE          WHENEQ    DELETE
     C                   SETON                                        63
     C                   ENDSL
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP126K1
     C                   WRITE     HP126EC
     C                   EXFMT     HP126R1
      *
      * CLEAR MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * RESET ACTION TO BE EQUAL TO THE INCOMING MODE.
      * THIS IS REQUIRED IN CASE THE USER TOOK F11=DELETE,
      * GOT AN ERROR ON THE DELETION, AND NOW NEEDS TO BE ABLE TO
      * CHANGE THE RECORD AND TAKE AN ACTION OTHER THAN DELETE
      *
     C                   MOVEL     MODE          ACTION
      *
      * GET USER'S INPUT AND SET ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3=EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN11         WHENEQ    *ON                                          F11-DELETE
     C                   MOVEL     DELETE        ACTION
     C                   MOVEL     UPDATE        ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     MODE          IFNE      DELETE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * ONLY EDIT IF THE RECORD HAS NOT BEEN DELETED OUT FROM UNDER
      * THE USER
     C     NOTFLG        IFEQ      NO                                           IF NOTFLG
      *
      * IF YOU ARE CREATING A NEW RECORD, VALIDATE:
      *    THAT THE RECORD DOES NOT ALREADY EXIST
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C     DFUSCD        IFEQ      *BLANK                                       IF BLANK
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFUSCD        CHAIN(N)  HSP001                             91
     C     *IN91         IFEQ      *OFF                                         IF FOUND
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00555'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF BLANK
     C                   ENDIF                                                  IF CREATE
      *
      * EDIT FOR BLANKS IN THE NAME
      *
     C     DFUSNM        IFEQ      *BLANK
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * VALIDATE SECURITY LOCATION
      *
     C     DFSLCD        IFEQ      *BLANK                                       IF NO LOC
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C     DFSLCD        CHAIN     HSP004                             95
     C     *IN95         IFEQ      *ON                                          IF BAD LOC
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00558'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFSLCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD LOC
     C                   ENDIF                                                  IF NO LOC
      *
      * VALIDATE OUTPUT QUEUE
      *
     C     DFOUTQ        IFEQ      *BLANK                                       IF NO OUTQ
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   call      'HPCHKOBJCL'
     C                   parm                    dfoutq
     C                   parm      '*OUTQ'       xxtype
     C                   parm      *blank        xxerror
     C                   if        xxerror = 'Y'                                If invalid
     C                   seton                                        36
     C                   if        error < maxmsg                               If issue msg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09111'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFOUTQ        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   endif                                                  If issue msg
     C                   endif                                                  If invalid
     C                   ENDIF                                                  IF NO OUTQ
      *
      * VALIDATE RESTRICTED USER FLAG
      *
     C                   SELECT
     C     DFRUFL        WHENNE    YES
     C     DFRUFL        ANDNE     NO
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
      *
     C     DFRUFL        WHENEQ    YES
     C     DFMDFL        ANDEQ     YES
     C     DFRMFL        ANDEQ     NO
     C     DFRVFL        ANDEQ     NO
     C     DFAFFL        ANDEQ     NO
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00563'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
      * Deleted Movements flag
      *
     C                   exsr      $dmfl
      *
      * Movement Status for Deleting
      *
     C                   exsr      $mscd
      *
      * VALIDATE THE 'CAN THE USER MODIFY DATA' FLAG
      *
     C                   SELECT
     C     DFRUFL        WHENEQ    NO
     C     DFMDFL        IFNE      *BLANK
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00561'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C     DFRUFL        WHENEQ    YES
     C     DFMDFL        IFNE      YES
     C     DFMDFL        ANDNE     NO
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDSL
      *
      * VALIDATE RESTRICTED MAINTENANCE FLAG
      *
     C                   SELECT
     C     DFRUFL        WHENEQ    NO
     C     DFRMFL        IFNE      *BLANK
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00561'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C     DFMDFL        WHENEQ    NO
      *
      * IF USER HAS BEEN PREVIOUSLY AUTHORIZED TO MAINTENANCE
      * FUNCTIONS, HIS MAINTENANCE FUNCTIONS MUST BE DELETED
      * BEFORE HIS 'MODIFY DATA' RIGHTS CAN BE REVOKED.
      *
     C     DFUSCD        SETLL     HSJ003B
     C                   SETOFF                                       92
      *
     C     *IN92         DOUEQ     *ON                                          DO FUNCS
     C     DFUSCD        READE     HSJ003B                                92
     C     *IN92         IFEQ      *OFF                                         IF MAINT
     C     FNFNTY        ANDEQ     'M'
     C                   SETON                                        3892
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00571'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF MAINT
     C                   ENDDO                                                  DO FUNCS
      *
     C     DFRMFL        IFNE      *BLANK                                       IF NOT BLANK
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00564'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT BLANK
      *
     C     DFMDFL        WHENEQ    YES
     C     DFRMFL        IFNE      YES
     C     DFRMFL        ANDNE     NO
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDSL
      *
      * VALIDATE RESTRICTED VIEW FLAG
      *
     C                   SELECT
     C     DFRUFL        WHENEQ    NO
     C     DFRVFL        IFNE      *BLANK
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00561'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C     DFRUFL        WHENEQ    YES
     C     DFRVFL        IFNE      YES
     C     DFRVFL        ANDNE     NO
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDSL
      *
      * VALIDATE 'USER MUST BE AUTHORIZED TO FUNCTIONS' FLAG
      *
     C                   SELECT
     C     DFRUFL        WHENEQ    NO
     C     DFAFFL        IFNE      *BLANK
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00561'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C     DFRUFL        WHENEQ    YES
     C     DFAFFL        IFNE      YES
     C     DFAFFL        ANDNE     NO
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
     C                   ENDSL
     C                   ENDIF                                                  IF NOTFLG
      *
      * IF THERE ARE NO ERRORS, ATTEMPT THE WRITE/UPDATE; OTHERWISE,
      * REDISPLAY THE SCREEN.
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $UPD1
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Validate Delete Movements flag
      *----------------------------------------------------------------
      *
     C     $dmfl         begsr
      *
     C                   select
     C                   when      dfdmfl <> yes and dfdmfl <> no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
      *
     C                   when      dfdmfl = yes and dfmdfl = no
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00781'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Movement Status when deleting movements
      *----------------------------------------------------------------
      *
     C     $mscd         begsr
      *
      * If the 'delete movements' flag is not Yes/No, then don't edit.
      * Otherwise, valid values are SC or SH or blank when the 'delete movements' flag is Yes.
      *            the Status must be blank when the 'delete movements' flag is NO.
      *
     C                   select
     C                   when      dfdmfl <> yes and dfdmfl <> no
      *
     C                   when      dfdmfl = no and dfmscd <> *blank
     C                   seton                                        40
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00782'     mgid(e)
     C                   endif
      *
     C                   when      dfdmfl = yes and dfmscd <> *blank
     C                   if        dfmscd <> 'SH' and dfmscd <> 'SC'
     C                   seton                                        40
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00783'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $UPD1  - SUBROUTINE TO WRITE/UPDATE/DELETE DATABASE FILE
      *----------------------------------------------------------------
      *
     C     $UPD1         BEGSR
      *
      * IF USER ACTION IS REVISING OR DELETING, DETERMINE THAT THE
      * RECORD HE IS ACCESSING STILL EXISTS PRIOR TO ATTEMPTING TO
      * UPDATE.  LOCK THE RECORD FOR UPDATE.
      *
     C     ERROR         IFEQ      0                                            IF GOOD
     C     ACTION        IFEQ      DELETE                                       IF D/R
     C     ACTION        OREQ      REVISE
     C     DFUSCD        CHAIN     HSP001                             90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00553'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFUSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
     C                   ENDIF                                                  IF D/L
     C                   ENDIF                                                  IF GOOD
      *
      *  IF THERE ARE NO ERRORS, DELETE, REVISE OR CREATE THE RECORD
      *
     C     ERROR         IFEQ      0                                            IF NO ERR
      *
      * IF DELETING, DELETE USER AND ALL OF THE
      * FUNCTIONS THAT HAVE BEEN ASSOCIATED WITH THE USER
      *
     C     ACTION        IFEQ      DELETE                                       IF DELETE
     C                   DELETE    AUREC
      *
     C     DFUSCD        SETLL     HSP003
     C                   SETOFF                                       96
     C     *IN96         DOUEQ     *ON
     C     DFUSCD        READE     HSP003                                 96
     C     *IN96         IFEQ      *OFF
     C                   DELETE    FAREC
     C                   ENDIF
     C                   ENDDO
     C                   ELSE
      *
      *  YOU ARE NOT DELETING
      *  MOVE DSPF FIELDS TO DATABASE FILE FIELDS
      *
     C                   MOVEL     DFUSCD        AUUSCD
     C                   MOVEL     DFUSNM        AUUSNM
     C                   MOVEL     DFSLCD        AUSLCD
     C                   MOVEL     DFRUFL        AURUFL
     C                   MOVEL     DFDMFL        AUDMFL
     C                   MOVEL     DFMSCD        AUMSCD
     C                   MOVEL     DFMDFL        AUMDFL
     C                   MOVEL     DFRMFL        AURMFL
     C                   MOVEL     DFRVFL        AURVFL
     C                   MOVEL     DFAFFL        AUAFFL
     C                   MOVEL     DFOUTQ        AUOUTQ
      *
     C     ACTION        IFEQ      CREATE                                       IF CREATE
     C                   WRITE     AUREC
     C                   ELSE
     C                   UPDATE    AUREC
     C                   ENDIF                                                  IF CREATE
     C                   ENDIF                                                  IF DELETE
     C                   ENDIF                                                  IF NO ERR
      *
      *  IF THERE ARE ANY ERRORS, REDISPLAY THE SCREEN; OTHERWISE, EXIT
      *  THE PROGRAM AUTOMATICALLY. (THE USER DOES NOT HAVE TO TAKE
      *  ANY FUNCTION KEY TO EXIT)
      *
     C     ERROR         IFGT      0
     C                   MOVEL     SCRN1         ROUTNE
     C                   ELSE
     C                   MOVEL     EXIT          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1                                    *
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * SECURITY LOCATION
      *
     C     FLD           WHENEQ    'DFSLCD'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXSLCD
     C                   CALL      'HP588'
     C                   PARM                    XXSLCD
     C                   SETON                                        55
     C     XXSLCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSLCD        DFSLCD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * RESTRICTED USER
      *
     C     FLD           WHENEQ    'DFRUFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXRUFL
     C                   CALL      'HP522'
     C                   PARM                    XXRUFL
     C                   SETON                                        53
     C     XXRUFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRUFL        DFRUFL
     C                   ENDIF                                                  IF SELECTED
      *
      * Delete movements
      *
     C     FLD           WHENEQ    'DFDMFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXDMFL
     C                   CALL      'HP522'
     C                   PARM                    XXDMFL
     C                   SETON                                        50
     C     XXDMFL        IFNE      *BLANK
     C                   MOVEL     XXDMFL        DFDMFL
     C                   ENDIF
      *
      * MODIFY DATA
      *
     C     FLD           WHENEQ    'DFMDFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXMDFL
     C                   CALL      'HP522'
     C                   PARM                    XXMDFL
     C                   SETON                                        58
     C     XXMDFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXMDFL        DFMDFL
     C                   ENDIF                                                  IF SELECTED
      *
      * RESTRICTED MAINTENANCE
      *
     C     FLD           WHENEQ    'DFRMFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXRMFL
     C                   CALL      'HP522'
     C                   PARM                    XXRMFL
     C                   SETON                                        54
     C     XXRMFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRMFL        DFRMFL
     C                   ENDIF                                                  IF SELECTED
      *
      * RESTRICTED VIEW
      *
     C     FLD           WHENEQ    'DFRVFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXRVFL
     C                   CALL      'HP522'
     C                   PARM                    XXRVFL
     C                   SETON                                        57
     C     XXRVFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRVFL        DFRVFL
     C                   ENDIF                                                  IF SELECTED
      *
      * 'USER MUST BE AUTHORIZED TO FUNCTIONS' FLAG
      *
     C     FLD           WHENEQ    'DFAFFL'
     C     *IN63         ANDEQ     *OFF
     C                   MOVE      *BLANK        XXAFFL
     C                   CALL      'HP522'
     C                   PARM                    XXAFFL
     C                   SETON                                        59
     C     XXAFFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXAFFL        DFAFFL
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    MODE
     C                   PARM                    DFUSCD
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVEL     *BLANK        PGM              10            USED IN MSG
     C                   MOVEL     *BLANK        MSGFL            10            USED IN MSG
     C                   MOVEL     *BLANK        ROUTNE            6
     C     *LIKE         DEFINE    DFMODE        ACTION
     C     *LIKE         DEFINE    DFMODE        MODE
     C                   MOVEL     MODE          ACTION
     C                   MOVEL     MODE          DFMODE
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * DEFINE PARM FIELDS
      *
     C     *LIKE         DEFINE    DFSLCD        XXSLCD
     C     *LIKE         DEFINE    DFRUFL        XXRUFL
     C     *LIKE         DEFINE    DFRUFL        XXMDFL
     C     *LIKE         DEFINE    DFRUFL        XXDMFL
     C     *LIKE         DEFINE    DFRMFL        XXRMFL
     C     *LIKE         DEFINE    DFRVFL        XXRVFL
     C     *LIKE         DEFINE    DFAFFL        XXAFFL
     C                   MOVE      *BLANK        XXERROR           1
     C                   MOVE      *BLANK        XXTYPE           10
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C                   ENDSR
      /EJECT
