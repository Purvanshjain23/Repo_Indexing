      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP435
      * TITLE:       WORK WITH CHECKS
      * PROGRAMMER:  ROSE CENTONZE
      * CREATED:     05/09/94
      *
      * FUNCTION: THIS IS A WORK WITH THAT DISPLAYS CHECKS FOR HOG
      *           SALES.
      *
      *          POSITIONERS:
      *               CHECK DATE        DESCENDING
      *
      *           SELECTORS:
      *               CUSTOMER NUMBER
      *               CHECK NUMBER
      *               SALES TYPE CODE
      *               DATA SOURCE CODE
      *
      *           IT HAS F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 08/01/94  R. MARTIN
      *           REMOVE REFERENCE TO CHECK B/O
      *
      * 09/16/94  LEANNE FEDOR
      *           ADDED EDIT TO PREVENT USER FROM DELETING A CHECK IF:
      *               1) IT IS IN A CLOSED PERIOD, OR
      *               2) IT IS IN A PERIOD THAT IS BEING CLOSED
      *
      * 11/04/94  LEANNE FEDOR
      *           ADDED EDIT TO PREVENT USER FROM REVISING A CHECK IF:
      *               1) IT IS IN A CLOSED PERIOD, OR
      *               2) IT IS IN A PERIOD THAT IS BEING CLOSED
      *           ADDED EDIT TO PREVENT USER FROM DELETING A CHECK
      *           IF IT WAS ASSIGNED TO ANY CLOSED GROUPS.
      *
      * 04/25/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC.
      *
      * 06/12/95  LEANNE FEDOR
      *           FOR MOVEMENT REWRITE, REMOVED 'HEAD' FROM CHECK
      *           HEADER FILE. ALSO, CHANGED LOGIC TO REFILL SUBFILE
      *           WHEN SELECTORS CHANGE BEFORE EDITING SUBFILE OPTIONS.
      *           REMOVED LOGIC THAT REQUIRED THE USER TO ENTER A
      *           SALES TYPE WHEN TAKING F6=CREATE.
      *
      * 03/08/96  LEANNE FEDOR
      *           THE CHECK AMOUNTS ON CHECKS FOR THE SEABOARD PIGS
      *           SLAUGHTERED AT GUYMON WERE BEING TRUNCATED. WE
      *           INCREASED THE 'CHECK AMOUNT' FIELD IN THE CHECK
      *           HEADER FROM 7,2 TO 9,2. THE DSPF WAS CHANGED TO
      *           ACCOMMODATE THE INCREASED FIELD SIZE AND THIS
      *           PROGRAM WAS RECOMPILED.
      *
      * 05/13/96  LEANNE FEDOR
      *           MADE CHANGES TO FACILITATE NEW JDE RELEASE CONVERSION
      *           CHANGED SEARCH TYPE TO 3A.
      *
      * 06/03/04  LEANNE FEDOR
      *           Added a new Option 6=Print Check Register. We use the
      *           existing Check Register CL and print program.
      *
      * 03/12/07  LeAnne Ramsey
      *           Added a User ID/Time/Date to the workfile that controls check
      *           access.
      *
      * 09/09/08  LeAnne Ramsey
      *           We changed the field names in workfile HSP321.
      *
      * 09/17/08  LeAnne Ramsey
      *           I give up on trying to figure out how Jessica LePlatt gets
      *           movements out-of-sych with Check Detail. She says she is
      *           always on 2 sessions:
      *             1 side updating the movement on the check
      *             1 side updating the movement itself
      *           But, the problem occurs on maybe 10 or 12 times a year...
      *           as in 10 or 12 records out of 40,000.
      *           It must be the 2 sessions and timing??
      *           So, I am just giving her our new resynch function so
      *           she will stop calling us and resynch the check/movements
      *           herself.
      *
      * 02/22/16  Rose Centonze   E5190
      *           Added Business office restrictor. Get Business office from Sale Mvmt Header hsp084
      *
      * 11/10/17  Brad Baden      E010812
      *           Pass Business Office to called programs through the LDA.
      *
      *  2/20/20  Brad Baden      E16183  Plant Sales Correction
      *           Modify the program to allow Debbie Wright and Brad Baden
      *           to update check amounts in closed period 12 in 2019.
      *           This approach approved by Purva and Barb.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD435    CF   E             WORKSTN
     F                                     SFILE(HP435S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE
      *
      *
     FHSL063A   IF   E           K DISK    INFDS(DBFEED)
      *    CHECK HEADER
      *
     FHSP064    IF   E           K DISK
      *    Check Detail          - use to get one movement number                   e5190
      *
     FHSP084    IF   E           K DISK
      *    Sales Movement Header - use to get Business office for 1 movmt number    e5190
      *
      *
     Fhsp321    uf a e           k disk
      *    Workfile: Controls check access
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *
      *---------------------------------------------------------------
      *  LDA - Local data area
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDFMDY                 1      6  0
     D  LDFYMD                 7     14  0
     D  LDTMDY                15     20  0
     D  LDTYMD                21     28  0
     D  LDCVNO                29     36  0
     D  LDCHNO                37     43  0
     D  LD435                 44     44
     D  LDBOCD                45     49
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      * period/year/users allowed to fix amounts in a closed period
      *
     D  fxsysvala      DS
     D  fxyesno                1      1
     D  fxperiod               2      3  0
     D  fxyear                 4      7  0
     D  fxuser1                8     17
     D  fxuser2               18     27
     D  fxuser3               28     37
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER'
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4
     D  DAPER                  5      6
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  STAND ALONE FIELDS
      *---------------------------------------------------------------
      *
     D fxreturn        s              7
     D fxjuldte        s              5  0
     D fxacctyr        s              4  0
     D fxacctpd        s              2  0
     D fxweek          s              3  0
     D fxdayowk        s              1
     D fxweekno        s              2  0
     D fxhpspic        s              5  0
     D fxhpscyr        s              4  0
     D fxweecwk        s              2  0
     D fxchkdate       s              7  0
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  FILL THE SUBFILE
      *
     C     TERMFL        IFEQ      NO
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
     C                   ENDIF
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP435K1
     C                   WRITE     HP435EC
     C                   EXFMT     HP435C1
      *
      * SET OFF THE INDICATORS ASSOCIATED WITH THE PROMPTABLE FIELDS
      * IN THE CONTROL RECORD
      *
     C                   SETOFF                                       515253
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C     FLD           IFEQ      'C1FSBO'                                     E5190
     C     C1FSBO        ANDNE     SVFSBO
     C                   MOVEL(P)  'HP435'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C                   MOVEL     c1FSBO        svFSBO
     C                   MOVEL     c1BODS        svBODS
     C                   EXSR      $CHKSV
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SVFSBO        C1FSBO                          E5190
     C                   MOVEL     SVBODS        C1BODS                          E5190
     C                   MOVEL     SET1          ROUTNE
      *
      *  WHEN CREATING, CHECK USER AUTHORITY TO THE FUNCTION
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C     C1FSBO        IFNE      SVFSBO                                       E5190
     C                   MOVEL(P)  'HP435'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF                                                  E5190
      *
     C     ERROR         IFEQ      0                                            E5190
     C                   MOVEL     C1FSBO        SVFSBO                            "
     C                   MOVEL     C1BODS        SVBODS                            "
     C                   MOVEL(P)  'HP135'       WKFNCD
     C                   EXSR      $SEC
     C     ERROR         IFEQ      0                                            IF OK
     C                   EXSR      $CREAT
     C                   ENDIF                                                  IF OK
     C                   ENDIF                                                  IF COPYING
      *
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C     C1FSBO        IFNE      SVFSBO
     C                   MOVEL(P)  'HP435'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
     C                   IF        ERROR = 0
     C                   MOVEL     C1FSBO        SVFSBO                           E5190
     C                   MOVEL     C1BODS        SVBODS                           E5190
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C                   MOVEL     SCRN1         ROUTNE
     c                   endif
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'                                       API
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR SELECTORS IN THE CONTROL RECORD.
      *
     C     SVFSBO        WHENNE    C1FSBO                                       IF RESTRICT  E5190
     C     SVCMDY        orne      C1CMDY                                       IF POSITION
     C     SVCHNO        ORNE      C1CHNO
     C     SVCVNO        ORNE      C1CVNO
     C     SVSTCD        ORNE      C1STCD
     C     SVTPCD        ORNE      C1TPCD
     C     SVDSCD        ORNE      C1DSCD
      *
     C     SVFSBO        IFNE      C1FSBO                                       E5190
     C                   MOVE      *BLANK        C1BODS                            "
     C                   MOVEL(P)  'HP435'       WKFNCD                            "
     C                   EXSR      $CHKBO                                          "
     C                   ENDIF                                                     "
      *
     C     ERROR         IFEQ      0                                               "
     C                   MOVEL     C1FSBO        SVFSBO                           E5190
     C                   MOVEL     C1BODS        SVBODS                           E5190
     C                   EXSR      $CHKSV
     c                   else
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                     "
      *
     C                   Z-ADD     C1CMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   Z-ADD     0             WKCHDT
     C                   ELSE
     C                   Z-ADD     PTO8          WKCHDT
     C                   ENDIF                                                  IF INVALID
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SAVE THE CONTROL RECORD POSITIONERS/SELECTORS
      *----------------------------------------------------------------
      *
     C     $CHKSV        BEGSR
      *
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C                   MOVEL     C1FSBO        SVFSBO                          E5190
     C                   MOVEL     C1BODS        SVBODS                             "
      *                                                                             "
     C                   Z-ADD     C1CMDY        SVCMDY
     C                   Z-ADD     C1CHNO        SVCHNO
     C                   Z-ADD     C1CVNO        SVCVNO
     C                   MOVEL     C1STCD        SVSTCD
     C                   MOVEL     C1TPCD        SVTPCD
     C                   MOVEL     C1DSCD        SVDSCD
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR    subr added E5190
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    BE A 'LIVE PRODUCTION' DIVISION OFFICE
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CLEAR SUBFILE
      *
     C                   EXSR      $CLR1
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
     C                   MOVEL     NO            INDVFL                          RESET FL
      *
     C                   MOVEL     OUBODS        C1BODS
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTIONS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE SUBFILE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ELSE
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN WITH ERRORS TO USER
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP435S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP435C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN CHECK HEADER
      *
      *
     C     C1CMDY        IFEQ      0
     C     *HIVAL        SETLL     HSL063A
     C                   ELSE
     C     WKCHDT        SETLL     HSL063A
     C                   ENDIF
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', JUST START THE SUBFILE OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * READ CHECK HEADER FILE
      *
     C                   READ      HSL063A                                82
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
      *   Get 1 movement number, then get the business office for that movement     E5190
      *
     c                   move      *blanks       shfsbo                              "
     c     key02         chain     hsp064                             77             "
     c     *in77         ifeq      *OFF                                              "
     c     cdmvsn        chain     hsp084                             78             "
     c                   endif                                                       "
     c*
     c     shfsbo        ifeq      c1fsbo                                            "
      *
      *   ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1CVNO        IFNE      0                                            IF CUST
     C     C1CVNO        ANDNE     CHCVNO
     C                   ELSE
      *
     C     C1CHNO        IFNE      0                                            IF CHECK
     C     C1CHNO        ANDNE     CHCHNO
     C                   ELSE
      *
     C     C1STCD        IFNE      *BLANK                                       IF TYPE
     C     C1STCD        ANDNE     CHSTCD
     C                   ELSE
      *
     C     C1TPCD        IFNE      *BLANK                                       IF PAYMENT
     C     C1TPCD        ANDNE     CHTPCD
     C                   ELSE
      *
     C     C1DSCD        IFNE      *BLANK                                       IF SOURCE
     C     C1DSCD        ANDNE     CHDSCD
     C                   ELSE
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
      *
     C                   MOVE      *BLANK        DFOPT
     C                   Z-ADD     CHCHDT        HDCHDT
     C                   Z-ADD     CHCHDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFCMDY
     C                   Z-ADD     CHCHNO        DFCHNO
     C                   MOVEL     CHSTCD        DFSTCD
     C                   MOVEL     CHTPCD        DFTPCD
     C                   Z-ADD     CHCHAM        DFCHAM
     C                   Z-ADD     CHCVNO        DFCVNO
     C                   MOVEL     CHDSCD        DFDSCD
      *
      * RETRIEVE JDE CUSTOMER NAME
      *
     C     DFCVNO        IFNE      0                                            IF NEED NAME
     C                   Z-ADD     DFCVNO        INAJD
     C                   MOVEL(P)  'C'           INAT1
     C                   EXSR      $JDEV
      *
      * IF THERE IS AN ERROR WITH THE CUSTOMER NUMBER
      *
     C     JDEFL         IFEQ      YES                                           IF BAD CUST
     C                   MOVEL(P)  'UNKNOWN'     DFCNAM
     C                   ELSE
     C                   MOVEL     OUALPH        DFCNAM
     C                   ENDIF                                                  IF BAD CUST
     C                   ENDIF                                                  IF NEED NAME
      *
     C                   WRITE     HP435S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD
      * NUMBER INTO THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF SOURCE
     C                   ENDIF                                                  IF PAYMENT
     C                   ENDIF                                                  IF TYPE
     C                   ENDIF                                                  IF CHECK
     C                   ENDIF                                                  IF CUST
     C                   ENDIF                                                  IF fsbo   E5190
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0                                            IF NO DATA
     C                   MOVEL     YES           NORECS
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF                                                  IF NO DATA
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CALL MAINTENANCE PROGRAM WHEN THE USER HAS TAKEN F6=CREATE
      *----------------------------------------------------------------
      *
     C     $CREAT        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
     C                   MOVEL     CREATE        MODE
     C                   Z-ADD     0             XXCHNO
     C                   Z-ADD     0             XXCVNO
     C                   Z-ADD     0             HDCHDT
     C                   MOVE      *BLANK        XXSTCD
     C                   Z-ADD     0             XXCMDY
     C                   Z-ADD     0             XXCHAM
      *
     C                   CALL      'HP136CL'
     C                   PARM                    MODE
     C                   PARM                    BOCOCD
     C                   PARM                    C1FSBO
     C                   PARM                    HDCHDT
     C                   PARM                    XXCHNO
     C                   PARM                    XXCVNO
     C                   PARM                    XXSTCD
     C                   PARM                    XXCMDY
     C                   PARM                    XXCHAM
     C                   PARM                    RTNCD
      *
     C                   ENDSR
      /EJECT
      *-------------------------------------------------------------------
      * READ CHANGED RECORDS IN SUBFILE AND EDIT FOR VALID SUBFILE OPTIONS
      *-------------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READC
     C                   READC     HP435S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZERO                                        IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 2'                                         IF BAD OPT
     C     DFOPT         ANDNE     ' 5'
     C     DFOPT         ANDNE     ' 6'
     C     DFOPT         ANDNE     ' 7'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        3085
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ELSE
      *
      * When there is a valid option
      *
     C     DFOPT         IFNE      '  '                                         IF OPTION
      *
     C                   IF        DFOPT = ' 2'                                 If revise
     C                   MOVEL(P)  'HP136'       WKFNCD
     C                   EXSR      $SEC
     C     SECFL         IFEQ      YES
     C                   SETON                                        30
     C                   EXSR      $ERR1
     C                   ENDIF
      *
     C                   EXSR      $AUTO
     C                   EXSR      $PER
     C                   EXSR      $ACCESS
     C                   ENDIF                                                  If revise
      *
      * REWRITE THE SUBFILE RECORD WITH THE MODIFIED DATA TAG ON SO
      * IT WILL BE REREAD AND PROCESSED IN THE SUBROUTINE $PROC1.
      *
     C                   SETON                                        85
     C                   ELSE
     C                   SETOFF                                       85
     C                   ENDIF                                                  IF OPTION
     C                   ENDIF                                                  IF BAD OPT
      *
     C                   UPDATE    HP435S1
     C                   SETOFF                                       8530
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * VERIFY THAT THE CHECK WAS NOT ENTERED THROUGH AN
      * AUTOMATED INTERFACE TO ANOTHER SYSTEM.
      *---------------------------------------------------------------
      *
     C     $AUTO         BEGSR
      *
      * IF THE 'DATA SOURCE' IS 'AUTOMATED', ISSUE AN ERROR MESSAGE
      *
     C     DFDSCD        IFEQ      'A'
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00656'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFOPT         MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CHECK FOR A CLOSED PERIOD OR A CLOSING PERIOD
      *---------------------------------------------------------------
      *
      *    1) VERIFY THAT CHECK DATE IS NOT IN A PERIOD THAT IS
      *       ALREADY CLOSED.
      *    2) VERIFY THAT THE PERIOD IN WHICH THE CHECK DATE FALLS
      *       IS NOT CURRENTLY BEING CLOSED.
      *    3) E16183 - First check if period and user are allowed to
      *       be opened to correct check amouts for the period
      *
     C     $PER          BEGSR
      *
     C     HDCHDT        IFLT      DABPDT                                       IF CLOSED
      *
      ** Retrieve
      *
          eval fxchkdate = %dec(%char(%date(hdchdt:*iso):*cymd0):7:0);
      *
     c                   call      'POF3XFR'
     c                   parm                    fxreturn
     c                   parm                    fxcompany
     c                   parm                    fxchkdate
     c                   parm                    fxjuldte
     c                   parm                    fxacctyr
     c                   parm                    fxacctpd
     c                   parm                    fxweek
     c                   parm                    fxdayowk
     c                   parm                    fxweekno
     c                   parm                    fxhpspic
     c                   parm                    fxhpscyr
     c                   parm                    fxweecwk
      * free form
         if (fxyesno = yes and fxacctyr = fxyear and fxacctpd = fxperiod and    // if fix = yes
            (sdusr = fxuser1 or sdusr = fxuser2 or sdusr = fxuser3));
     c                   else
      *
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00497'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     c                   endif                                                  // f1 fix = yes
     C                   ELSE
      *
     C     HDCHDT        IFGE      DABPDT                                       IF CLOSING
     C     HDCHDT        ANDLE     DAEPDT
     C     DAPPFL        ANDNE     *BLANK
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00498'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  IF CLOSING
     C                   ENDIF                                                  IF CLOSED
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Check that the check is not already being revised
      *---------------------------------------------------------------
      *
     C     $access       begsr
      *
     C     key01         chain(n)  hsp321                             92
     C                   if        *in92 = *off
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09215'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------
      * Write the key fields for the check to the Access Control Workfile
      *---------------------------------------------------------------------
      *
     C     $wrt321       begsr
      *
     C     key01         chain     hsp321                             92
     C                   if        *in92 = *on                                  If not found
     C                   z-add     hdchdt        w1chdt
     C                   z-add     dfcvno        w1cvno
     C                   z-add     dfchno        w1chno
     C                   move      sdusr         w1luscd
     C                   time                    w1ltm
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     w1ldt
      *
     C                   write     w1rec
     C                   endif
      *
     C                   endsr
      *
      *------------------------------------------------------------------------------
      * Delete the Access Control record for this check from the Control Workfile
      *------------------------------------------------------------------------------
      *
     C     $dlt321       begsr
      *
     C     key01         chain     hsp321                             92
     C                   if        *in92 = *off
     C                   delete    w1rec
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * READ SUBFILE RECORDS AND PROCESS USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS AND PROCESS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP435S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      * IF USER SELECTED OPTION 2=REVISE, SET PARM FOR REVISE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 2'
     C                   MOVEL     YES           RESET
     C                   exsr      $wrt321
     C                   CALL      'HP136CL'
     C                   PARM      revise        MODE
     C                   PARM                    BOCOCD
     C                   PARM                    C1FSBO
     C                   PARM                    HDCHDT
     C                   PARM      dfchno        XXCHNO
     C                   PARM      dfcvno        XXCVNO
     C                   PARM      dfstcd        XXSTCD
     C                   PARM      dfcmdy        XXCMDY
     C                   PARM      dfcham        XXCHAM
     C                   PARM                    RTNCD
     C                   exsr      $dlt321
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 5=VIEW CHECK,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 5'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP736'
     C                   PARM                    HDCHDT
     C                   PARM                    DFCHNO
     C                   PARM                    DFCVNO
     C                   PARM                    DFCMDY
     C                   PARM                    DFCHAM
     C                   PARM                    DFSTCD
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 6=PRINT CHECK REGISTER,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 6'
     C                   MOVEL     YES           RESET
     C                   EXSR      $PRINT06
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 7=RESYNCH CHECK/MOVEMENTS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 7'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP138'
     C                   PARM                    HDCHDT
     C                   PARM                    DFCHNO
     C                   PARM                    DFCVNO
     C                   ENDIF
      *
      * UPON RETURNING FROM THE CALLED PROGRAM,
      * CLEAR THE SUBFILE OPTION SELECTOR ENTERED BY THE USER AND
      * REWRITE THE SUBFILE RECORD
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   UPDATE    HP435S1
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Print Check Register for a Check
      *---------------------------------------------------------------
      *
     C     $PRINT06      BEGSR
      *
      * SET UP THE LDA VALUES
      *
     C                   Z-ADD     HDCHDT        LDFYMD
     C                   Z-ADD     HDCHDT        LDTYMD
     C                   Z-ADD     DFCMDY        LDFMDY
     C                   Z-ADD     DFCMDY        LDTMDY
     C                   Z-ADD     DFCVNO        LDCVNO
     C                   Z-ADD     DFCHNO        LDCHNO
     C                   MOVEL     'Y'           LD435
     C                   EVAL      LDBOCD = C1FSBO
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO AN
      * 80-CHARACTER FIELD FOR PASSING AS A PARM WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF BUSINESS OFFICE CODE                               E5190
      *
     C     FLD           WHENEQ    'C1FSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        C1FSBO
     C                   MOVEL     XXBODS        C1BODS
     C                   ENDIF                                                  IF SELECTED
      *
      * JDE CUSTOMER NUMBER
      *
     C     FLD           WHENEQ    'C1CVNO'
     C                   MOVEL(P)  'C'           INAT1
     C                   CALL      'HP513'
     C                   PARM                    BOCOCD                         COMPANY
     C                   PARM                    INAT1                          SEARCH TYPE
     C                   PARM      *ZERO         OUAJD                          JDE NUMBER
     C                   PARM      *BLANK        OUALPH                         JDE NAME
     C                   SETON                                        51
     C     OUAJD         IFNE      *ZERO                                        IF SELECTED
     C                   Z-ADD     OUAJD         C1CVNO
     C                   ENDIF                                                  IF SELECTED
      *
      * SALES TYPE CODE
      *
     C     FLD           WHENEQ    'C1STCD'
     C                   MOVE      *BLANK        XXSTCD
     C                   MOVE      *BLANK        XXSTDS
     C                   CALL      'HP544'
     C                   PARM                    XXSTCD
     C                   PARM                    XXSTDS
     C                   SETON                                        52
     C     XXSTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSTCD        C1STCD
     C                   ENDIF                                                  IF SELECTED
      *
      * TYPE OF PAYMENT CODE
      *
     C     FLD           WHENEQ    'C1TPCD'
     C                   MOVE      *BLANK        XXTPCD
     C                   MOVE      *BLANK        XXTPDS
     C                   CALL      'HP570'
     C                   PARM                    XXTPCD
     C                   PARM                    XXTPDS
     C                   SETON                                        54
     C     XXTPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXTPCD        C1TPCD
     C                   ENDIF                                                  IF SELECTED
      *
      * DATA SOURCE CODE
      *
     C     FLD           WHENEQ    'C1DSCD'
     C                   MOVE      *BLANK        XXDSCD
     C                   MOVE      *BLANK        XXDSDS
     C                   CALL      'HP529'
     C                   PARM                    XXDSCD
     C                   PARM                    XXDSDS
     C                   SETON                                        52
     C     XXDSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXDSCD        C1DSCD
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------------------
      * SET THE SUBFILE TO REDISPLAY AT THE FIRST PAGE THAT HAS ERRORS ON SCREEN 1
      *----------------------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C*                  MOVE      *BLANK        INBOBO                         IN BO
     C                   MOVEL     C1FSBO        INBOBO                         E5190
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            B.O. ERR FLG
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * FLIP DATE FROM YYMMDD TO MMDDYY
      *----------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CALL THE EXTERNAL PROGRAM TO VALIDATE JDE ADDRESS NUMBERS
      *----------------------------------------------------------------
      *
     C     $JDEV         BEGSR
      *
     C                   MOVEL     NO            JDEFL                          JDE ERRORS
      *
     C                   CALL      'HPJDEV'
     C                   PARM                    MGI                            MSG ID'S
     C                   PARM                    MGD                            MSG DATA FLD
     C                   PARM                    ERROR                          # ERR MSGS
     C                   PARM                    INAJD                          JDE ADDR #
     C                   PARM                    INAT1                          JDE ADDR TYP
     C                   PARM                    JDEFL                          ERROR FLAG
     C                   PARM      *BLANK        OUALPH                         JDE NAME
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $fxchkamt - Get period and users allowed to fix a closed period
      *---------------------------------------------------------------
      *
     C     $fxchkamt     begsr
      *
     c                   eval      fxcompany = 360
      *
      ** Retrieve period and users from Company Values file
      ** values in data structure
      *
     C                   call      'POMTXFR'
     C                   parm      *blanks       fxreturn          7
     C                   parm                    fxcompany         3 0
     C                   parm      'HPSCHKAMTS'  fxcovalcd        10
     C                   parm                    fxsysvala        40
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LIST
      *
     C     key01         klist
     C                   kfld                    hdchdt
     C                   kfld                    dfcvno
     C                   kfld                    dfchno
     C     key02         klist
     C                   kfld                    chchdt
     C                   kfld                    chcvno
     C                   kfld                    chchno
      *
      *
      * BRING IN THE DATA AREA THAT CONTAINS THE CURRENT ACCOUNTING PERIOD
      *
     C     *DTAARA       DEFINE                  DAAPER
     C                   IN        *DTAARA
      *
      * DEFINE LDA
      *
     C     *DTAARA       DEFINE    *LDA          LDA
      *
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
     C                   Z-ADD     0             ERROR
     C                   Z-ADD     0             COUNT             2 0
      *
      *
      * DEFINE SAVE FIELDS
      *
     C     *LIKE         DEFINE    C1FSBO        SVFSBO                            E5190
     C     *LIKE         DEFINE    C1BODS        SVBODS                            E5190
     C     *LIKE         DEFINE    C1CMDY        SVCMDY
     C     *LIKE         DEFINE    C1CHNO        SVCHNO
     C     *LIKE         DEFINE    C1CVNO        SVCVNO
     C     *LIKE         DEFINE    C1STCD        SVSTCD
     C     *LIKE         DEFINE    C1DSCD        SVDSCD
     C     *LIKE         DEFINE    C1TPCD        SVTPCD
     C     *LIKE         DEFINE    CHCHDT        WKCHDT
      *
      * DEFINE FIELDS FOR USE AS PARMS WHEN CALLING PROGRAMS
      *
     C     *LIKE         DEFINE    C1fsbo        XXfsbo                          e5190
     C     *LIKE         DEFINE    C1BODS        XXBODS                          e5190
     C     *LIKE         DEFINE    CHCHAM        XXCHAM
     C     *LIKE         DEFINE    DFCHNO        XXCHNO
     C     *LIKE         DEFINE    DFCVNO        XXCVNO
     C     *LIKE         DEFINE    C1STCD        XXSTCD
     C                   Z-ADD     0             XXCMDY            6 0
     C                   MOVE      *BLANK        XXSTDS           20
     C     *LIKE         DEFINE    C1DSCD        XXDSCD
     C                   MOVE      *BLANK        XXDSDS           20
     C     *LIKE         DEFINE    C1TPCD        XXTPCD
     C                   MOVE      *BLANK        XXTPDS           30
      *
      * JDE FIELDS
     C                   MOVE      *BLANK        JDEFL             1            JDE ERR FLAG
     C                   MOVE      *BLANK        INAT1             3            JDE ADDR TYP
     C                   MOVE      *BLANK        OUALPH           40            JDE NAME
     C     *LIKE         DEFINE    CHCVNO        INAJD
     C     *LIKE         DEFINE    CHCVNO        OUAJD
      *
      *
      * INITIALIZE LDA FIELDS
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL(P)  '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      *
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     11            WKPLIN            2 0          SFLPAG(0011)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
     C     *LIKE         DEFINE    OUDVCD        SVDVCD                          e5190
      *
      * MOVE RETURNED FIELDS TO SCREEN (AND SAVE IN WORK                      E5190
      * FIELDS FOR USE WITH F5=REFRESH LOGIC)                                 "
      *                                                                      "
     C                   MOVEL     OUBOBO        C1FSBO                      "
     C                   MOVEL     OUBOBO        SVFSBO                      "
     C                   MOVEL     OUBODS        C1BODS                      "
     C                   MOVEL     OUBODS        SVBODS                       E5190
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C                   MOVEL     OUDVCD        SVDVCD
      * GET THE COMPANY CODE/COST CENTER FROM THE USER'S DEFAULT B/O
      *
     C     OUBOBO        CHAIN     HSP009                             90
      *
      * Retrieve System Date and get into CCYYMDD format for updating
      * the Check Access Workfile records.
      *
      *
      **  2/20/20 E16183 - Update Check amounts and NPPCI amounts
      ** Retrieve valid period and users to update closed period
      *
     c                   exsr      $fxchkamt
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC FOR LISTINGS
      *****************************************************************
** CMD TABLE 'CMD' FOR LISTINGS
SBMJOB CMD(CALL PGM(HP483CL)) JOB(CHECKREGS) JOBQ(__________)
