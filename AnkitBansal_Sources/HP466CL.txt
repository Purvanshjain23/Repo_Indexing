/***************************************************************** */
/*                                                                 */
/*  PROGRAM NUMBER:  HP466CL                                       */
/*  PROGRAM NAME:    EXPENSE TICKET REPORT                         */
/*  PROGRAMMER:      LEANNE FEDOR                                  */
/*  CREATE DATE:     5/31/94                                       */
/*                                                                 */
/*  FUNCTION:        THIS CL IS SUBMITTED WITH QCMDEXC FROM        */
/*                   HP466-SPECIFY EXPENSE REPORT OPTIONS. THE     */
/*                   USER OPTIONS ARE PASSED THROUGH THE LDA.      */
/*                   AN OPNQRY STATEMENT IS USED TO SELECT AND     */
/*                   SEQUENCE RECORDS.                             */
/*                                                                 */
/*******************************************************************/
/* MODIFICATIONS                                                   */
/* DATE      PROGRAMMER                                            */
/*                                                                 */
/* 12/11/02  LEANNE FEDOR                                          */
/*           WENT TO WORKFILE LOGIC DUE TO PRODUCTION PHASE/TYPE   */
/*           CHANGES.                                              */
/*                                                                 */
/* 12/23/03  LEANNE FEDOR                                          */
/*           WHEN WE WENT TO THE WORKFILE LOGIC LAST DECEMBER, I   */
/*           SHOULD HAVE REMOVED THE QUERY SELECTION ON            */
/*           'PRODUCTION PHASE' FROM THIS CL.  THAT SELECTION IS   */
/*           NOW BEING HANDLED IN THE WORKFILE BUILD PROGRAM.      */
/*                                                                 */
/*           A YEAR AGO  WE CHANGED THE ALLOCATION PROGRAMS TO     */
/*           NOT POPULATE THE 'PRODUCTION PHASE' FIELD--THAT IS    */
/*           WHAT FORCED US TO GO TO WORKFILE LOGIC IN THIS CL.    */
/*                                                                 */
/*           THE ALLOCATION PROGRAM CHANGE WAS DRIVEN BY THE FACT  */
/*           THAT WE CHANGED THE DATABASE TO ALLOW GROUPS TO BE A  */
/*           DIFFERENT PHASE THAN THE FARM THE GROUP IS ON.        */
/*                                                                 */
/*           SO, SINCE THE ALLOCATION PROGRAMS ALWAYS BLANK OUT    */
/*           THE 'PRODUCTION PHASE' FIELD, THE 'PRODUCTION PHASE'  */
/*           FIELD NOW ONLY HAS A VALUE WHEN:                      */
/*              1) THE USER ENTERS A TICKET THRU HPS ENTRY PROGRAMS*/
/*              2) DESIGNATES 'PRODUCTION PHASE' AS THE ALLOCATION */
/*                 LEVEL ON THAT TICKET.                           */
/*                                                                 */
/*           BUT, IN REALITY, AT THIS TIME, WE WILL NEVER HAVE A   */
/*           VALUE IN 'PRODUCTION PHASE, SINCE THE USERS CURRENTLY */
/*           DOWNLOAD ALL TICKETS FROM JDE WITH AN ALLOCATION      */
/*           METHOD OF 'PIG DAYS'.                                 */
/*                                                                 */
/*           ANYWAY, I HAVE NOW REMOVED THE OPEN QUERY SELECTION   */
/*           FROM THIS CL THAT COMPARED THE USER'S 'PRODUCTION     */
/*           PHASE' SELECTION AGAINST XTPPCD IN HSP048.            */
/*           YOU CAN GO TO WORKFILE BUILD PROGRAM HP363 TO SEE     */
/*           HOW THE 'PRODUCTION PHASE' SELECTION IS HANDLED IN    */
/*           THAT PROGRAM.                                         */
/*                                                                 */
/* 04/14/16  BARB GUTIERREZ                                        */
/*           CHANGED BUSINESS OFFICE LOGIC ON OPEN QUERY TO SELECT */
/*           ON REGULAR BUSINESS OFFICE, NOT THE ALLOCATED         */
/*           BUSINESS OFFICE.  THE ALLOCATED BUSINESS OFFICE DOES  */
/*           NOT GET POPULATED UNTIL THE EXPENSE TICKETS ARE       */
/*           ALLOCATED WHICH IS AFTER THIS REPORT IS RAN.  THEY    */
/*           USED TO JUST LEAVE THE BUSINESS OFFICE SELECTION BLANK*/
/*           ON THE SCREEN AND WOULD GET ALL EXPENSE TICKETS, BUT  */
/*           NOW THAT WE HAVE IOWA FARMS, THEY SHOULD KEY IT IN.   */
/*           (E5290)                                               */
/*******************************************************************/

             PGM

/* DEFINE THE VARIABLE REQUIRED IN THE COMMAND TO OVERRIDE THE     */
/* PRINT FILE TO A LASER PRINTER                                   */

             DCL        VAR(&CMD) TYPE(*CHAR) LEN(512)

             DCL        VAR(&QDATA) TYPE(*CHAR) LEN(350)

             DCL        VAR(&DFFROM) TYPE(*DEC) LEN(8)
             DCL        VAR(&DFTO) TYPE(*DEC) LEN(8)

             DCL        VAR(&DFRGCD) TYPE(*CHAR) LEN(5)
             DCL        VAR(&DFALBO) TYPE(*CHAR) LEN(5)
             DCL        VAR(&DFFSCD) TYPE(*DEC) LEN(5)
             DCL        VAR(&DFHGSN) TYPE(*DEC) LEN(7)
             DCL        VAR(&DFECCD) TYPE(*CHAR) LEN(5)
             DCL        VAR(&DFESCD) TYPE(*CHAR) LEN(5)
             DCL        VAR(&DFEXCD) TYPE(*CHAR) LEN(5)
             DCL        VAR(&DFCJD)  TYPE(*CHAR) LEN(12)
             DCL        VAR(&DFCOCD) TYPE(*CHAR) LEN(3)

             DCL        VAR(&HOLD) TYPE(*CHAR) LEN(10)
             DCL        VAR(&COPYS) TYPE(*DEC) LEN(2)
             DCL        VAR(&OUTQ) TYPE(*CHAR) LEN(10)

             CHGVAR     VAR(&DFFROM) VALUE(%SST(*LDA 1 8))
             CHGVAR     VAR(&DFTO) VALUE(%SST(*LDA  9 8))

             CHGVAR     VAR(&DFRGCD) VALUE(%SST(*LDA 17 5))
             CHGVAR     VAR(&DFALBO) VALUE(%SST(*LDA 22 5))
             CHGVAR     VAR(&DFFSCD) VALUE(%SST(*LDA 37 5))
             CHGVAR     VAR(&DFHGSN) VALUE(%SST(*LDA 42 7))
             CHGVAR     VAR(&DFECCD) VALUE(%SST(*LDA 49 5))
             CHGVAR     VAR(&DFESCD) VALUE(%SST(*LDA 54 5))
             CHGVAR     VAR(&DFEXCD) VALUE(%SST(*LDA 59 5))
             CHGVAR     VAR(&DFCJD)  VALUE(%SST(*LDA 271 12))
             CHGVAR     VAR(&DFCOCD) VALUE(%SST(*LDA 283 3))


/*------------------------------------------------------------------*/
/*  BUILD OPEN QUERY                                            */
/*------------------------------------------------------------------*/

/*  ALWAYS SELECT EXPENSE TICKET RECORDS FOR DATE RANGE          */

             CHGVAR     VAR(%SST(&QDATA 1 10)) VALUE('XTXBDT *GE')
             CHGVAR     VAR(%SST(&QDATA 12 8)) VALUE(&DFFROM)
             CHGVAR     VAR(%SST(&QDATA 21 15)) VALUE('*AND XTXBDT +
                          *LE')
             CHGVAR     VAR(%SST(&QDATA 37 8)) VALUE(&DFTO)

/*  IF REGION IS NOT BLANK, THEN ADD A REGION SELECTION          */

             IF         COND(&DFRGCD *NE ' ') THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 46 17)) VALUE('*AND XTRGCD +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 63 5)) VALUE(&DFRGCD)
             CHGVAR     VAR(%SST(&QDATA 68 1)) VALUE('"')
             ENDDO

/*  IF BUSINESS OFFICE IS NOT BLANK, THEN ADD A B/O SELECTION    */

             IF         COND(&DFALBO *NE ' ') THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 70 17)) VALUE('*AND XTBOBO +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 87 5)) VALUE(&DFALBO)
             CHGVAR     VAR(%SST(&QDATA 92 1)) VALUE('"')
             ENDDO


/*  IF FARM SITE IS NOT A BLANK, THEN ADD A FARM SITE SELECTION  */

             IF         COND(&DFFSCD *NE 0) THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 142 15)) VALUE('*AND XTFSCD +
                          *EQ')
             CHGVAR     VAR(%SST(&QDATA 158 5)) VALUE(&DFFSCD)
             ENDDO

/*  IF HOG GROUP IS NOT ZERO, THEN SELECT ON HOG GROUP      */

             IF         COND(&DFHGSN *NE 0) THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 166 15)) VALUE('*AND XTHGSN +
                          *EQ')
             CHGVAR     VAR(%SST(&QDATA 182 7)) VALUE(&DFHGSN)
             ENDDO


/*  IF EXPENSE CLASS IS NOT BLANK, THEN SELECT ON EXPENSE CLASS  */

             IF         COND(&DFECCD *NE ' ') THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 190 17)) VALUE('*AND XTECCD +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 207 5)) VALUE(&DFECCD)
             CHGVAR     VAR(%SST(&QDATA 212 1)) VALUE('"')
             ENDDO


/* IF EXPENSE SUBCLASS IS NOT BLANK, THEN SELECT ON EXPENSE SUBCLASS */

             IF         COND(&DFESCD *NE ' ') THEN(DO)

             CHGVAR     VAR(%SST(&QDATA 214 17)) VALUE('*AND XTESCD +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 231 5)) VALUE(&DFESCD)
             CHGVAR     VAR(%SST(&QDATA 236 1)) VALUE('"')

             ENDDO

/* IF EXPENSE CODE IS NOT BLANK, THEN SELECT ON EXPENSE CODE     */

             IF         COND(&DFEXCD *NE ' ') THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 238 17)) VALUE('*AND XTEXCD +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 255 5)) VALUE(&DFEXCD)
             CHGVAR     VAR(%SST(&QDATA 260 1)) VALUE('"')
             ENDDO

/* IF COST CENTER IS NOT BLANK, THEN SELECT ON COST CENTER      */

             IF         COND(&DFCJD *NE ' ') THEN(DO)
             CHGVAR     VAR(%SST(&QDATA 262 16)) VALUE('*AND XTCJD +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 278 12)) VALUE(&DFCJD)
             CHGVAR     VAR(%SST(&QDATA 290 1)) VALUE('"')
             CHGVAR     VAR(%SST(&QDATA 292 17)) VALUE('*AND XTCOCD +
                          *EQ "')
             CHGVAR     VAR(%SST(&QDATA 309 3)) VALUE(&DFCOCD)
             CHGVAR     VAR(%SST(&QDATA 312 1)) VALUE('"')
             ENDDO

/*  RUN QUERY               */

             OVRDBF     FILE(HSP048) SHARE(*YES)
             OPNQRYF    FILE((HSP048)) QRYSLT(&QDATA) KEYFLD(*FILE) +
                          SEQONLY(*YES)

/*------------------------------------------------------------------*/
/*  CREATE WORKFILE AND BUILD DATA                                  */
/*------------------------------------------------------------------*/

             CRTDUPOBJL OBJ(HSP363) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)

             CALL       PGM(HP363)

             CLOF       OPNID(HSP048)
             DLTOVR     FILE(HSP048)

/*------------------------------------------------------------------*/
/* SET PRINT PARMS FROM LDA                                         */
/*------------------------------------------------------------------*/

 HOLD:       IF         COND(%SST(*LDA 411 1) = 'Y') THEN(CHGVAR +
                          VAR(&HOLD) VALUE('*YES      '))
             ELSE       CMD(CHGVAR VAR(&HOLD) VALUE('*NO       '))

 COPYS:      CHGVAR     VAR(&COPYS) VALUE(%SST(*LDA 412 1))
             IF         COND(&COPYS = 0) THEN(CHGVAR VAR(&COPYS) +
                          VALUE(1))

 OUTQ:       CHGVAR     VAR(&OUTQ) VALUE(%SST(*LDA 413 10))
             IF         COND(&OUTQ = '          ') THEN(CHGVAR +
                          VAR(&OUTQ) VALUE(%SST(*LDA 401 10)))
             IF         COND(&OUTQ = '          ') THEN(CHGVAR +
                          VAR(&OUTQ) VALUE('*JOB      '))

/*------------------------------------------------------------------*/
/* OVERRIDE PRINT FILE                                              */
/*------------------------------------------------------------------*/

/* USE THE CUSTOMIZED SEABOARD COMMAND TO OVERRIDE THE PRINT FILE.  */
/* THIS COMMAND ALLOWS THE REPORT TO BE GENERATED ON A STANDARD LINE*/
/* PRINTER OR A LASER PRINTER. TO USE THIS OVERRIDE YOU MUST DECLARE*/
/* A COMMAND VARIABLE AND FOLLOW THE OVERRIDE WITH A CALL TO        */
/* QCMDEXC.                                                         */

/* THIS REPORT IS STANDARD 10 CPI ON STANDARD 132 CHARACTER PAPER   */

             SBDPRTOVR  CMDVAR(&CMD) FILE(QPRINT) OUTQ(&OUTQ) +
                          WIDTH(132) COPIES(&COPYS) HOLD(&HOLD)

             CALL       PGM(QCMDEXC) PARM(&CMD 512)


/*------------------------------------------------------------------*/
/* GENERATE REPORT                                                  */
/*------------------------------------------------------------------*/

             CALL       PGM(HP666)

             DLTOVR     FILE(*ALL)

             ENDPGM

