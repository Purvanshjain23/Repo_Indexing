      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP8012
      * TITLE:       Calculate Stage of Growth
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/11/03
      *
      * FUNCTION:  Given an incoming value of 'weeks', this program will return
      *            'stage of growth' values.  There is a Production Version and
      *            an Accounting version...they couldn't agree on 'stage of growth'
      *            values.
      *
      * NOTE:      This program does not set on LR---it uses RETURN to speed processing.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 04/23/03  LeAnne Fedor
      *           Made 2 versions: Accounting vs Production.
      *
      * 11/13/03  Alice
      *           Changed the Accounting stages per Gary Louis.
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Parms
      *
     D xxweek          s              3  0
     D xxalphstg       s              5
     D xxnumstg        s              3  0
     D xxversion       s              4
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Initialize the parms that you are populating/returning.
      *
     C                   move      *blank        xxalphstg
     C                   z-add     0             xxnumstg
      *
     C                   select
     C                   when      xxversion = 'PROD'
     C                   exsr      $prod
      *
     C                   when      xxversion = 'ACCT'
     C                   exsr      $acct
     C                   endsl
      *
      * Return to calling program
      *
     C                   return
      /EJECT
      *---------------------------------------------------------------
      * Production's logic
      *---------------------------------------------------------------
      *
     C     $prod         begsr
      *
     C                   select
     C                   when      xxweek <= 4
     C                   move      '00-04'       xxalphstg
     C                   z-add     4             xxnumstg
      *
     C                   when      xxweek <= 8
     C                   move      '05-08'       xxalphstg
     C                   z-add     8             xxnumstg
      *
     C                   when      xxweek <= 16
     C                   move      '09-16'       xxalphstg
     C                   z-add     16            xxnumstg
      *
     C                   when      xxweek <= 24
     C                   move      '17-24'       xxalphstg
     C                   z-add     24            xxnumstg
     C                   other
      *
     C                   move      '25+  '       xxalphstg
     C                   z-add     25            xxnumstg
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Accounting's logic
      *---------------------------------------------------------------
      *
     C     $acct         begsr
      *
     C                   select
     C                   when      xxweek <= 3
     C                   move      '00-03'       xxalphstg
     C                   z-add     3             xxnumstg
      *
     C                   when      xxweek <= 7
     C                   move      '04-07'       xxalphstg
     C                   z-add     7             xxnumstg
      *
     C                   when      xxweek <= 11
     C                   move      '08-11'       xxalphstg
     C                   z-add     11            xxnumstg
      *
     C                   when      xxweek <= 15
     C                   move      '12-15'       xxalphstg
     C                   z-add     15            xxnumstg
      *
     C                   when      xxweek <= 19
     C                   move      '16-19'       xxalphstg
     C                   z-add     19            xxnumstg
      *
     C                   when      xxweek <= 23
     C                   move      '20-23'       xxalphstg
     C                   z-add     23            xxnumstg
      *
     C                   other
     C                   move      '24+  '       xxalphstg
     C                   z-add     24            xxnumstg
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxweek
     C                   parm                    xxalphstg
     C                   parm                    xxnumstg
     C                   parm                    xxversion
      *
     C                   endsr
      /EJECT
