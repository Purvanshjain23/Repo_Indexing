// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKRNDFR
// ?Date: 14.08.2025 Time: 02:50:17
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr is Yes
IF WRK.First_Time_Flag_Usr = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
WRK.First_Time_Flag_Usr = 'N';

// *MO.VE             1183529*Bu = ilt. in functions
CTL.CC_Company_Number = PAR.CC_Company_Number;

ENDIF;

//?Validate Company Number
CASE;

// IF CTL.CC Company Number NE WRK.Zero USR
IF CTL.CC_Company_Number <> WRK.Zero_USR;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.CC_Company_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


ENDIF;

//?USER: Initialize subfile record from DBF record

//?RST: Company Number
CASE;

// IF CTL.CC Company Number NE WRK.Zero USR
IF CTL.CC_Company_Number <> WRK.Zero_USR;

// AND DB1.CC Company Number NE CTL.CC Company Number
AND DB1.CC_Company_Number <> CTL.CC_Company_Number;

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Record_selected = 'N';

ENDIF;

// WRK.Company Number Alpha Usr = CVTVAR(DB1.CC Company Number)
WRK.Company_Number_Alpha_Usr = CVTVAR(DB1.CC_Company_Number);

// Call program Rtv Cost Center Desc  UP.
CALL PROGRAM(Rtv Cost Center Desc  UP) ('CCRET');
PARAMETER(PGM.*Return_code);
PARAMETER(WRK.Company_Number_Alpha_Usr);
PARAMETER(RCD.CCC_Cost_Center);
PARAMETER(RCD.Cost_Center_Desc_USR);

EXECUTE FUNCTION(Rtv GL Account ID     RT) TYPE(RTVOBJ) FILE(PKCWREP)           AB1148858;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.CCC_G_L_Code);
PARAMETER(LCL.CGl_GL_Acct_ID);
PARAMETER(WRK.CGL_Sub_Account_Type);
PARAMETER(WRK.CGL_Balance_Sheet_Act_Sts);
PARAMETER(WRK.CGL_Account_Company);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Call program Rtv Account ID Desc   UP.
CALL PROGRAM(Rtv Account ID Desc   UP) ('ACTRET');
PARAMETER(PGM.*Return_code);
PARAMETER(LCL.CGl_GL_Acct_ID);
PARAMETER(RCD.GL_Act_ID_ObjSubDsc_USR);

//?USER: Process subfile control (Pre-confirm)

//?F6=Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// Call program Edt HP Co Cost Center ER.
CALL PROGRAM(Edt HP Co Cost Center ER) ('PKROE1R');
PARAMETER(CTL.CC_Company_Number);
PARAMETER(CTL.CCC_BO_Payment_Type);
PARAMETER(CTL.CCC_BO_Type);
PARAMETER(CTL.CCC_Hog_Class_Type);
PARAMETER(CTL.CCC_Source_Contract_Type);
PARAMETER(CTL.Cost_Center_Desc_USR);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Name);

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is Print List
IF CTL.*CMD_key = '21';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Print Cost Center List');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Cost Center List'
EXECUTE COMMAND(PRK0513);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(CTL.CC_Company_Number);
PARAMETER(CTL.CCC_BO_Payment_Type);
PARAMETER(CTL.CCC_BO_Type);
PARAMETER(PAR.Oms_System_Value_Alpha);

ENDIF;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is Edit
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt HP Co Cost Center ER.
CALL PROGRAM(Edt HP Co Cost Center ER) ('PKROE1R');
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.CCC_BO_Payment_Type);
PARAMETER(RCD.CCC_BO_Type);
PARAMETER(RCD.CCC_Hog_Class_Type);
PARAMETER(RCD.CCC_Source_Contract_Type);
PARAMETER(RCD.Cost_Center_Desc_USR);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Name);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

