     H/TITLE Prt Prd Schedule      PV  Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : 2E  Version:  1181
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISLBUSE
     H* Date          : 04/21/08  Time  : 16:18:57
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDJRPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: Prt Prd Schedule      PV  Prompt & validate record
      *
     FCAB0REL1IF  E           K        DISK
      * RTV : Item Balance              Retrieval index       NV
      *
     FPDI5REL1IF  E           K        DISK
      * RTV : PS Production Department  Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FPDLLREL1IF  E           K        DISK
      * RTV : PS Primal Group           Retrieval index
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * DETAIL Screen: Field position and name array
     E                    W0BEG   6 006  5 0A
     E                    W0END   6 006  5 0A
     E                    W0NAM   6 006 10
      * Set wdw location allowed?
     E                    YSL         1  1
     I@B0REJX
      * Item Balance              Retrieval index       NV
      * Renamed input format fields
     I              B0AIC3                          WAAIC3
     I              B0HGCD                          WAHGCD
     I              B0AJCD                          WAAJCD
     I              B0AGCS                          WAAGCS
     I              B0AECS                          WAAECS
     I              B0BACS                          WABACS
     I              B0BBCS                          WABBCS
     I              B0CBPR                          WACBPR
     I              B0GUDT                          WAGUDT
     I              B0XYST                          WAXYST
     I              B0CTPR                          WACTPR
     I              B0G4DT                          WAG4DT
     I              B0BOWG                          WABOWG
     I              B0DDQT                          WADDQT
     I              B0DEQT                          WADEQT
     I              B0DFQT                          WADFQT
     I              B0HDQT                          WAHDQT
     I              B0HEQT                          WAHEQT
     I              B0AJQT                          WAAJQT
     I              B0AQQT                          WAAQQT
     I              B0AUQT                          WAAUQT
     I              B0EMQT                          WAEMQT
     I              B0DOQT                          WADOQT
     I              B0ATNA                          WAATNA
     I              B0AKDT                          WAAKDT
     I              B0ANDT                          WAANDT
     I              B0IDVA                          WAIDVA
     I              B0JVST                          WAJVST
     I              B0BZPC                          WABZPC
     I              B0DGQT                          WADGQT
     I              B0DIDT                          WADIDT
     I              B0ALCD                          WAALCD
     I              B0BFDY                          WABFDY
     I              B0DJDT                          WADJDT
     I              B0BGDY                          WABGDY
     I              B0DKDT                          WADKDT
     I              B0J2ST                          WAJ2ST
     I              B0DJQT                          WADJQT
     I              B0BNWG                          WABNWG
     I              B0DLDT                          WADLDT
     I              B0DPQT                          WADPQT
     I              B0DQQT                          WADQQT
     I              B0DMDT                          WADMDT
     I              B0M0ST                          WAM0ST
     I              B0J9ST                          WAJ9ST
     I              B0KBST                          WAKBST
     I              B0AKC8                          WAAKC8
     I              B0RINB                          WARINB
     I              B0RHNB                          WARHNB
     I              B0RGNB                          WARGNB
     I              B0UVST                          WAUVST
     I              B0UWST                          WAUWST
     I              B0UXST                          WAUXST
     I              B0VSST                          WAVSST
     I              B0AATM                          WAAATM
     I              B0AYNA                          WAAYNA
     I              B0A0NA                          WAA0NA
     I              B0AXDT                          WAAXDT
      *
     I@I5REUJ
      * PS Production Department  Retrieval index
      * Renamed input format fields
     I              I5AIC3                          WBAIC3
     I              I5R3CD                          WBR3CD
     I              I5MYNA                          WBMYNA
     I              I5DPT1                          WBDPT1
     I              I5UVST                          WBUVST
     I              I5UWST                          WBUWST
     I              I5UXST                          WBUXST
     I              I5VSST                          WBVSST
     I              I5AATM                          WBAATM
     I              I5AYNA                          WBAYNA
     I              I5A0NA                          WBA0NA
     I              I5AXDT                          WBAXDT
      *
     I@E8REBB
      * Item Structure Type       Retrieval index
      * Renamed input format fields
     I              E8RGNB                          WCRGNB
     I              E8DCTX                          WCDCTX
     I              E8UVST                          WCUVST
     I              E8UWST                          WCUWST
     I              E8UXST                          WCUXST
     I              E8VSST                          WCVSST
     I              E8AATM                          WCAATM
     I              E8AYNA                          WCAYNA
     I              E8A0NA                          WCA0NA
     I              E8AXDT                          WCAXDT
      *
     I@E9REA8
      * Item Structure Group      Retrieval index
      * Renamed input format fields
     I              E9RHNB                          WDRHNB
     I              E9RGNB                          WDRGNB
     I              E9DDTX                          WDDDTX
     I              E9UVST                          WDUVST
     I              E9UWST                          WDUWST
     I              E9UXST                          WDUXST
     I              E9VSST                          WDVSST
     I              E9AATM                          WDAATM
     I              E9AYNA                          WDAYNA
     I              E9A0NA                          WDA0NA
     I              E9AXDT                          WDAXDT
      *
     I@FAREBE
      * Item Structure Class      Retrieval index
      * Renamed input format fields
     I              FARINB                          WERINB
     I              FARHNB                          WERHNB
     I              FADETX                          WEDETX
     I              FAUVST                          WEUVST
     I              FAUWST                          WEUWST
     I              FAUXST                          WEUXST
     I              FAVSST                          WEVSST
     I              FAAATM                          WEAATM
     I              FAAYNA                          WEAYNA
     I              FAA0NA                          WEA0NA
     I              FAAXDT                          WEAXDT
      *
     I@LLREOY
      * PS Primal Group           Retrieval index
      * Renamed input format fields
     I              LLXRCD                          WFXRCD
     I              LLOJNA                          WFOJNA
     I              LLR9ST                          WFR9ST
     I              LLSAST                          WFSAST
     I              LLSEST                          WFSEST
     I              LLSFST                          WFSFST
     I              LLSJST                          WFSJST
     I              LLUVST                          WFUVST
     I              LLUWST                          WFUWST
     I              LLUXST                          WFUXST
     I              LLVSST                          WFVSST
     I              LLAATM                          WFAATM
     I              LLAYNA                          WFAYNA
     I              LLA0NA                          WFA0NA
     I              LLAXDT                          WFAXDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WGAJCD
     I              ADF8NA                          WGF8NA
     I              ADACNA                          WGACNA
     I              ADADNA                          WGADNA
     I              ADAENA                          WGAENA
     I              ADAJNA                          WGAJNA
     I              ADBTTX                          WGBTTX
     I              ADAOCD                          WGAOCD
     I              ADBGCD                          WGBGCD
     I              ADVHST                          WGVHST
     I              ADMPNA                          WGMPNA
     I              ADWPST                          WGWPST
     I              ADXUST                          WGXUST
     I              ADT0ST                          WGT0ST
     I              ADT1ST                          WGT1ST
     I              ADDBNB                          WGDBNB
     I              ADT2ST                          WGT2ST
     I              ADT3ST                          WGT3ST
     I              ADT4ST                          WGT4ST
     I              ADT6ST                          WGT6ST
     I              ADBWC3                          WGBWC3
     I              ADBTC3                          WGBTC3
     I              ADBUC3                          WGBUC3
     I              ADBVC3                          WGBVC3
     I              ADFCAA                          WGFCAA
     I              ADRQSX                          WGRQSX
     I              ADRRSX                          WGRRSX
     I              ADRSSX                          WGRSSX
     I              ADRTSX                          WGRTSX
     I              ADT7ST                          WGT7ST
     I              ADT8ST                          WGT8ST
     I              ADRNSX                          WGRNSX
     I              ADROSX                          WGROSX
     I              ADRPSX                          WGRPSX
     I              ADUVST                          WGUVST
     I              ADUWST                          WGUWST
     I              ADUXST                          WGUXST
     I              ADVSST                          WGVSST
     I              ADAATM                          WGAATM
     I              ADAYNA                          WGAYNA
     I              ADA0NA                          WGA0NA
     I              ADAXDT                          WGAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WHAJCD
     I              ADF8NA                          WHF8NA
     I              ADACNA                          WHACNA
     I              ADADNA                          WHADNA
     I              ADAENA                          WHAENA
     I              ADAJNA                          WHAJNA
     I              ADBTTX                          WHBTTX
     I              ADAOCD                          WHAOCD
     I              ADBGCD                          WHBGCD
     I              ADVHST                          WHVHST
     I              ADMPNA                          WHMPNA
     I              ADWPST                          WHWPST
     I              ADXUST                          WHXUST
     I              ADT0ST                          WHT0ST
     I              ADT1ST                          WHT1ST
     I              ADDBNB                          WHDBNB
     I              ADT2ST                          WHT2ST
     I              ADT3ST                          WHT3ST
     I              ADT4ST                          WHT4ST
     I              ADT6ST                          WHT6ST
     I              ADBWC3                          WHBWC3
     I              ADBTC3                          WHBTC3
     I              ADBUC3                          WHBUC3
     I              ADBVC3                          WHBVC3
     I              ADFCAA                          WHFCAA
     I              ADRQSX                          WHRQSX
     I              ADRRSX                          WHRRSX
     I              ADRSSX                          WHRSSX
     I              ADRTSX                          WHRTSX
     I              ADT7ST                          WHT7ST
     I              ADT8ST                          WHT8ST
     I              ADRNSX                          WHRNSX
     I              ADROSX                          WHROSX
     I              ADRPSX                          WHRPSX
     I              ADUVST                          WHUVST
     I              ADUWST                          WHUWST
     I              ADUXST                          WHUXST
     I              ADVSST                          WHVSST
     I              ADAATM                          WHAATM
     I              ADAYNA                          WHAYNA
     I              ADA0NA                          WHA0NA
     I              ADAXDT                          WHAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * B :  Production Date
     I                                    P   1   40P1ELDT
     IP2PARM      DS
      * O :  Status - Y or N
     I                                        1   1 P2B8ST
     IP3PARM      DS
      * O :  Report Type Schedule  USR
     I                                        1   1 P3RYST
     IP4PARM      DS
      * B :  Warehouse Code
     I                                        1   3 P4AJCD
     IP5PARM      DS
      * O :  Program name USR
     I                                        1  10 P5BMVN
     IP6PARM      DS
      * O :  Program Name$ USR
     I                                        1  10 P6BWVN
     IP7PARM      DS
      * O :  Email Selection usr
     I                                        1   1 P7VQSX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Warehouse not found'
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1ELDT    PARM P1ELDT    WP0001  70       Production Date
     C           P2B8ST    PARM P2B8ST    WP0002  1        Status - Y or N
     C           P3RYST    PARM P3RYST    WP0003  1        Report Type Sch
     C           P4AJCD    PARM P4AJCD    WP0004  3        Warehouse Code
     C           P5BMVN    PARM P5BMVN    WP0005 10        Program name US
     C           P6BWVN    PARM P6BWVN    WP0006 10        Program Name$ U
     C           P7VQSX    PARM P7VQSX    WP0007  1        Email Selection
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Reposition window
     C   26                CAS            ZRRPWD
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
     C                     Z-ADD1         YWPNNO  10       Panel number
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
     C                     Z-ADD1         W0WASM  10
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate Production Date
      * External date
     C                     Z-ADDV1ELDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #1ELDT
      * Validate Report Type Schedule  USR
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DRYST'  IFEQ YPMTFD
      * Report Type Schedule  USR
     C                     MOVEL#DRYST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHRYST
     C                     SELEC
     C           W0INVL    WHEQ 'D'                        D
     C                     Z-ADD1         ZHRYST
     C           W0INVL    WHEQ 'V'                        V
     C                     Z-ADD2         ZHRYST
     C           W0INVL    WHEQ 'M'                        M
     C                     Z-ADD3         ZHRYST
     C                     ENDSL
     C                     EXFMTZGRYST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHRYST    WHEQ 1
     C                     MOVEL'D'       W0INVL           D
     C           ZHRYST    WHEQ 2
     C                     MOVEL'V'       W0INVL           V
     C           ZHRYST    WHEQ 3
     C                     MOVEL'M'       W0INVL           M
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DRYST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
      * Validate Status - Y or N
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DB8ST'  IFEQ YPMTFD
      * Status - Y or N
     C                     MOVEL#DB8ST    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHB8ST
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZHB8ST
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZHB8ST
     C                     ENDSL
     C                     EXFMTZGB8ST
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHB8ST    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZHB8ST    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DB8ST
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * Prompt warehouse
      * CASE: DTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> DTL.Warehouse Code PASS   USR
     C           W0CFL     IFEQ '#DT3CD'                   *IF
      * SEL Prod Whse          SR - Warehouse  * 
     C                     CALL 'PDLISRR'              90  SEL Prod Whse
     C                     PARM *BLANK    W0RTN   7
     C           #DT3CD    PARM #DT3CD    WQ0001  3        Warehouse Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDLISRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
      * Check reference to Item Balance
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to PS Production Department
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to Item Structure Type
     C                     EXSR VCCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to Item Structure Group
     C                     EXSR VDCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to Item Structure Class
     C                     EXSR VECKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
      * Check reference to PS Primal Group
     C                     EXSR VFCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     99    *
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Screen function fields
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DT3CD    WL0001    P      Warehouse Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #DF8NA    P      Warehouse Descr
      * DTL.Condition Desc. 3  USR = Condition name of DTL.Report Type Sc
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1465614   Y2LSNO  70       List number
     C                     PARM #DRYST    W0INVL 25        Report Type Sch
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate relations
      * Val Warehouse Exists   RT - Warehouse  * 
     C                     EXSR SBRVGN
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * Setup message data for message
      * Send message 'Warehouse not found'
     C                     MOVEL'USR0372' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9934  *
      *
     C                     END                             *FI
     C                     END
      * Report Type Schedule  USR required
     C           #DRYST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Status - Y or N required
     C           #DB8ST    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9933  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * Warehouse Code PASS   USR required
     C           #DT3CD    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9934  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #1AIC3           Company Number
     C                     MOVEL*BLANK    #1V5ST           Production Type
     C                     Z-ADD*ZERO     #1HGCD           Item Code
     C                     MOVEL*BLANK    #1AJCD           Warehouse Code
     C                     MOVEL*BLANK    #DVQSX           Email Selection
     C                     Z-ADD*ZERO     #1QTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     #1WTSP           PS Weight Plann
     C                     Z-ADD*ZERO     #1DJPC           PS % of Carcass
     C                     Z-ADD*ZERO     #1F8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     #1DVWG           PS Weight Order
     C                     Z-ADD*ZERO     #1D7NB           PS Pieces Order
     C                     Z-ADD*ZERO     #1FCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     #1D9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     #1DWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     #1EANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     #1WTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     #1D5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     #1SHWT           PS Weight Sched
     C                     Z-ADD*ZERO     #1EBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     #1AVWT           PS Weight Avail
     C                     Z-ADD*ZERO     #1ECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     #1WTON           PS Weight Produ
     C                     Z-ADD*ZERO     #1EDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     #1DXWG           PS Weight Stand
     C                     Z-ADD*ZERO     #1B2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     #1FNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     #1EENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     #1WTCN           PS Weight Conve
     C                     Z-ADD*ZERO     #1PSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     #1QTAS           PS Weight Sched
     C                     Z-ADD*ZERO     #1EFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     #1GPDT           PS Available Sh
     C                     Z-ADD*ZERO     #1OAWT           PS Weight Prod
     C                     Z-ADD*ZERO     #1CDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     #1SAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     #1B9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     #1D1WG           PS Weight Prod
     C                     Z-ADD*ZERO     #1CBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     #1EZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     #1CCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     #1WAIO           PS Weight Sched
     C                     Z-ADD*ZERO     #1EGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     #1UNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     #1CENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     #1F9WG           PS Unit Weight
     C                     Z-ADD*ZERO     #1BPNB           PS Pieces Fz Tf
     C                     Z-ADD*ZERO     #1GAWG           PS Weight Fz Tf
     C                     Z-ADD*ZERO     #1BQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     #1GBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     #1BRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     #1GCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     #1BSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     #1GDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     #1BWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     #1GEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     #1PS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     #1E0WG           PS Weight Ship
     C                     Z-ADD*ZERO     #1D6NB           PS Pieces Ship
     C                     MOVEL*BLANK    #1WCST           PS Item Id
     C                     MOVEL*BLANK    #1WPST           Warehouse Type
     C                     MOVEL*BLANK    #1B5ST           PS Lock Status
     C                     MOVEL*BLANK    #1TFST           PS Export/Domes
     C                     MOVEL*BLANK    #1TEST           PS Print On Sch
     C                     MOVEL*BLANK    #1THST           PS Piece Count
     C                     MOVEL*BLANK    #1UDST           PS Unused Sts 1
     C                     MOVEL*BLANK    #1UFST           PS Unused Sts 2
     C                     MOVEL*BLANK    #1UGST           PS Unused Sts 3
     C                     MOVEL*BLANK    #1UHST           PS Unused Sts 4
     C                     MOVEL*BLANK    #1B6ST           PS Item Sched N
     C                     MOVEL*BLANK    #1B7ST           PS Shift/Priori
     C                     MOVEL*BLANK    #1R3CD           Department Code
     C                     Z-ADD*ZERO     #1RGNB           Item Structure
     C                     Z-ADD*ZERO     #1RHNB           Item Structure
     C                     Z-ADD*ZERO     #1RINB           Item Structure
     C                     MOVEL*BLANK    #1XRCD           Primal Group Co
     C                     MOVEL*BLANK    #1UVST           EDI Status 1
     C                     MOVEL*BLANK    #1UWST           EDI Status 2
     C                     MOVEL*BLANK    #1UXST           EDI Status 3
     C                     MOVEL*BLANK    #1VSST           Record Status
     C                     Z-ADD*ZERO     #1AATM           Job Time
     C                     MOVEL*BLANK    #1AYNA           User Id
     C                     MOVEL*BLANK    #1A0NA           Job Name
     C                     Z-ADD*ZERO     #1AXDT           Job Date
     C                     Z-ADD*ZERO     #1ELDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1ELDT
     C                     MOVEL*BLANK    #DRYST           Report Type Sch
     C                     MOVEL*BLANK    #DHNTX           Condition Desc.
     C                     MOVEL*BLANK    #DB8ST           Status - Y or N
     C                     MOVEL*BLANK    #DT3CD           Warehouse Code
     C                     MOVEL*BLANK    #DF8NA           Warehouse Descr
      * CALC: Screen function fields
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DT3CD    WL0001    P      Warehouse Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #DF8NA    P      Warehouse Descr
      * DTL.Condition Desc. 3  USR = Condition name of DTL.Report Type Sc
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1465614   Y2LSNO  70       List number
     C                     PARM #DRYST    W0INVL 25        Report Type Sch
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DHNTX    PARM           W0CNNM 25        Condition Desc.
      *
      * USER: Load screen
     C                     MOVEL'Y'       #DB8ST           Status - Y or N
     C                     MOVEL'D'       #DRYST           Report Type Sch
      * DTL.Condition Desc. 3  USR = Condition name of DTL.Report Type Sc
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1465614   Y2LSNO  70       List number
     C                     PARM #DRYST    W0INVL 25        Report Type Sch
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #DHNTX    PARM           W0CNNM 25        Condition Desc.
      *
     C                     MOVELP4AJCD    #DT3CD           Warehouse Code
      * RTV Whse Descrip       RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#DT3CD    WL0001    P      Warehouse Code
     C                     EXSR SARVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    #DF8NA    P      Warehouse Descr
     C                     Z-ADDP1ELDT    #1ELDT           Production Date
     C                     MOVEL*BLANK    #DVQSX           Email Selection
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  #1ELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1ELDT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WGAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0001    WGAJCD           Warehouse Code
      * Establish starting position
     C           KRSSA     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Warehouse Descr
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELWGF8NA    WL0002           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Val Warehouse Exists   RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WHAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#DT3CD    WHAJCD           Warehouse Code
      * Establish starting position
     C           KRSSB     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL'Y2U0003' W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change log and comments
      *================================================================
      * ** FP1235 LJB 04/14/2008
      * ** Add option to email the make sheet to the distribution list
      * ** "DL Triumph Production Sheet"
      * ** FP1235 LJB 01/23/2008 Leave report type as "Day" Schedule
      * ** Add program & display file names for new variance style report
      * ** Pass the program based on the requested schedule. If "D" for
      * ** Day Schedule or "V" for Variance, pass the original program.
      * ** If "M" for Make Sheet Schedule, pass the Make Sheet with
      * ** Variance program name.
      * RMC 10/21/05 make warehouse a BOTH parameter so its passed in/out
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Item Balance
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1AJCD    WK1X03  1
     C           YPMTFD    IFEQ '#1AIC3'
     C           YPMTFD    OREQ '#1HGCD'
     C           WK1X03    OREQ '?'                        Warehouse Code
     C           YPMTFD    OREQ '#1AJCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AIC3' defaulted for 'Company Number'.
      * Field '(DTL) #1HGCD' defaulted for 'Item Code'.
      * Field '(DTL) #1AJCD' defaulted for 'Warehouse Code'.
     W* Y2W0052 - One or more arguments defaulted to WRK/CON context.
      * Field '(LCL) YL0001' defaulted for 'Cycle Count Code - IB'.
     C                     CALL 'ICOLSRR'              90  Sel Item Balanc
     C                     PARM *BLANK    W0RTN   7
     C           #1AIC3    PARM #1AIC3    WQ0002  30       Company Number
     C           #1HGCD    PARM #1HGCD    WQ0003  70       Item Code
     C           #1AJCD    PARM #1AJCD    WQ0004  3        Warehouse Code
     C           YL0001    PARM YL0001    WQ0005  3        Cycle Count Cod
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICOLSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1HGCD    IFNE *ZERO                      Item Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1AJCD    IFNE *BLANK                     Warehouse Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X03    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VAEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1HGCD    IFEQ *ZERO                      Item Code
     C           #1AJCD    ANDEQ*BLANK                     Warehouse Code
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAWA    KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
     C                     KFLD           WAAJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#1AIC3    WAAIC3
     C                     Z-ADD#1HGCD    WAHGCD
     C                     MOVEL#1AJCD    WAAJCD
     C           KLVAWA    CHAIN@B0REJX              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Item Balance           NF'
     C                     MOVEL'USR0328' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0328' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to PS Production Department
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1R3CD    WK1X02  1
     C           YPMTFD    IFEQ '#1AIC3'
     C           WK1X02    OREQ '?'                        Department Code
     C           YPMTFD    OREQ '#1R3CD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1AIC3' defaulted for 'Company Number'.
      * Field '(DTL) #1R3CD' defaulted for 'Department Code'.
     C                     CALL 'PDCXSRR'              90  Sel Prod. Depar
     C                     PARM *BLANK    W0RTN   7
     C           #1AIC3    PARM #1AIC3    WQ0006  30       Company Number
     C           #1R3CD    PARM #1R3CD    WQ0007  6        Department Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDCXSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #1R3CD    IFNE *BLANK                     Department Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X02    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VBEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1R3CD    IFEQ *BLANK                     Department Code
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBWB    KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBR3CD           Department Code
      * Setup key
     C                     Z-ADD#1AIC3    WBAIC3
     C                     MOVEL#1R3CD    WBR3CD
     C           KLVBWB    CHAIN@I5REUJ              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Send message 'PS Production Departme NF'
     C                     MOVEL'USR1757' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1757' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         VCCKRL    BEGSR
      *================================================================
      * Check reference to Item Structure Type
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1RGNB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1RGNB' defaulted for 'Item Structure Type Code'.
     C                     CALL 'PDENSRR'              90  SEL Item Type A
     C                     PARM *BLANK    W0RTN   7
     C           #1RGNB    PARM #1RGNB    WQ0008  30       Item Structure
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDENSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1RGNB    IFNE *ZERO                      Item Structure
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VCEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1RGNB    IFEQ *ZERO                      Item Structure
     C                     GOTO VCEXIT
     C                     END
      *
     C           KLVCWC    KLIST
     C                     KFLD           WCRGNB           Item Structure
      * Setup key
     C                     Z-ADD#1RGNB    WCRGNB
     C           KLVCWC    CHAIN@E8REBB              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VCEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VCEXIT
     C                     END
      * Send message 'Item Structure Type    NF'
     C                     MOVEL'USR1166' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1166' W0RTN
      *================================================================
     CSR         VCEXIT    ENDSR
      /EJECT
     CSR         VDCKRL    BEGSR
      *================================================================
      * Check reference to Item Structure Group
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1RHNB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1RHNB' defaulted for 'Item Structure Group Code'.
     C                     CALL 'PDEMSRR'              90  SEL Item Group
     C                     PARM *BLANK    W0RTN   7
     C           #1RHNB    PARM #1RHNB    WQ0009  30       Item Structure
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDEMSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1RHNB    IFNE *ZERO                      Item Structure
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VDEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1RHNB    IFEQ *ZERO                      Item Structure
     C                     GOTO VDEXIT
     C                     END
      *
     C           KLVDWD    KLIST
     C                     KFLD           WDRHNB           Item Structure
      * Setup key
     C                     Z-ADD#1RHNB    WDRHNB
     C           KLVDWD    CHAIN@E9REA8              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VDEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VDEXIT
     C                     END
      * Send message 'Item Structure Group   NF'
     C                     MOVEL'USR1168' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1168' W0RTN
      *================================================================
     CSR         VDEXIT    ENDSR
      /EJECT
     CSR         VECKRL    BEGSR
      *================================================================
      * Check reference to Item Structure Class
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1RINB'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1RINB' defaulted for 'Item Structure Class Code'.
     C                     CALL 'PDELSRR'              90  SEL Item Class
     C                     PARM *BLANK    W0RTN   7
     C           #1RINB    PARM #1RINB    WQ0010  30       Item Structure
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDELSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1RINB    IFNE *ZERO                      Item Structure
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VEEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1RINB    IFEQ *ZERO                      Item Structure
     C                     GOTO VEEXIT
     C                     END
      *
     C           KLVEWE    KLIST
     C                     KFLD           WERINB           Item Structure
      * Setup key
     C                     Z-ADD#1RINB    WERINB
     C           KLVEWE    CHAIN@FAREBE              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VEEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VEEXIT
     C                     END
      * Send message 'Item Structure Class   NF'
     C                     MOVEL'USR1170' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1170' W0RTN
      *================================================================
     CSR         VEEXIT    ENDSR
      /EJECT
     CSR         VFCKRL    BEGSR
      *================================================================
      * Check reference to PS Primal Group
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C                     MOVEL#1XRCD    WK1X01  1
     C           WK1X01    IFEQ '?'                        Primal Group Co
     C           YPMTFD    OREQ '#1XRCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1XRCD' defaulted for 'Primal Group Code'.
     C                     CALL 'PDAFSRR'              90  Sel PS Primal G
     C                     PARM *BLANK    W0RTN   7
     C           #1XRCD    PARM #1XRCD    WQ0011  6        Primal Group Co
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDAFSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #1XRCD    IFNE *BLANK                     Primal Group Co
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VFEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1XRCD    IFEQ *BLANK                     Primal Group Co
     C                     GOTO VFEXIT
     C                     END
      *
     C           KLVFWF    KLIST
     C                     KFLD           WFXRCD           Primal Group Co
      * Setup key
     C                     MOVEL#1XRCD    WFXRCD
     C           KLVFWF    CHAIN@LLREOY              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VFEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VFEXIT
     C                     END
      * Send message 'PS Primal Group        NF'
     C                     MOVEL'USR2505' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR2505' W0RTN
      *================================================================
     CSR         VFEXIT    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         YKDDW1    BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *
      * Calculate window location for DDL - Report Type Schedule  USR
      * Window width
     C                     Z-ADD29        YWWDWD
      * Window depth
     C                     Z-ADD3         YWWDDP
      * Window reference corner
     C                     MOVEL'*TL  '   YWWDCR
      * Window start row
     C                     Z-ADD##WSR     YWWDRW
     C                     ADD  5         YWWDRW
      * Window start column
     C                     Z-ADD##WSC     YWWDCL
     C                     ADD  22        YWWDCL
      * Retrieve window location
     C                     EXSR ZURTLC
      * Window start row
     C                     Z-ADDYWWDRW    ZG01RW
      * Window start column
     C                     Z-ADDYWWDCL    ZG01CL
      *
      * Calculate window location for DDL - Status - Y or N
      * Window width
     C                     Z-ADD8         YWWDWD
      * Window depth
     C                     Z-ADD2         YWWDDP
      * Window reference corner
     C                     MOVEL'*TL  '   YWWDCR
      * Window start row
     C                     Z-ADD##WSR     YWWDRW
     C                     ADD  6         YWWDRW
      * Window start column
     C                     Z-ADD##WSC     YWWDCL
     C                     ADD  22        YWWDCL
      * Retrieve window location
     C                     EXSR ZURTLC
      * Window start row
     C                     Z-ADDYWWDRW    ZG02RW
      * Window start column
     C                     Z-ADDYWWDCL    ZG02CL
      *================================================================
     CSR         YKEXT1    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ##WSR     MULT 256       ZWORK   50
     C                     ADD  ##WSC     ZWORK
     C                     SUB  ZWORK     ZINPOS
     C                     SUB  1         ZINPOS
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     END
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
      *
      * Calculate window offset
     C           005       ADD  ##WSR     YWPORW  30
     C           021       ADD  ##WSC     YWPOC1  30
     C                     ADD  1         YWPOC1
     C           ZHCSRW    IFEQ YWPORW
     C           ZHCSCL    ANDEQYWPOC1
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DRYST'  YPMTFD           Report Type Sch
     C                     END
      *
      *
      * Calculate window offset
     C           006       ADD  ##WSR     YWPORW  30
     C           021       ADD  ##WSC     YWPOC1  30
     C                     ADD  1         YWPOC1
     C           ZHCSRW    IFEQ YWPORW
     C           ZHCSCL    ANDEQYWPOC1
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DB8ST'  YPMTFD           Status - Y or N
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           ZHCSRW    SUB  ##WSR     YWPORW  30
     C           ZHCSCL    SUB  ##WSC     YWPOC1  30
     C                     SUB  1         YWPOC1
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM YWPORW    YYRW    50       Row
     C                     PARM YWPOC1    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZRRPWD    BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                     MOVEL'Y'       YSL,1            Set wdw locatio
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
      *
      * Redisplay previous panel
     C                     WRITEASSUME
      *================================================================
     CSR         ZREXIT    ENDSR
      /EJECT
     CSR         ZSSTLC    BEGSR
      *================================================================
      * Set window location
      *================================================================
     C           YSL,1     IFEQ 'Y'                        Set wdw locatio
     C                     MOVEL'*CALC'   YWWDCR           Window referenc
     C                     Z-ADD-3        YWWDRW           Window start ro
     C                     Z-ADD-3        YWWDCL           Window start co
     C                     Z-ADD050       YWWDWD           Window width
     C                     Z-ADD012       YWWDDP           Window depth
     C                     MOVEL'N'       YSL,1            Set wdw locatio
      *
     C                     EXSR ZURTLC                     Retrieve window
     C                     EXSR ZTWDFD                     Move window fie
     C                     END
      *================================================================
     CSR         ZSEXIT    ENDSR
      /EJECT
     CSR         ZTWDFD    BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                     Z-ADDYWWDRW    ##WSR            Window start ro
     C                     Z-ADDYWWDCL    ##WSC            Window start co
     C                     EXSR YKDDW1
      *================================================================
     CSR         ZTEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
     C                     MOVEL#DB8ST    P2B8ST           Status - Y or N
     C                     MOVEL#DRYST    P3RYST           Report Type Sch
     C                     MOVEL#DT3CD    P4AJCD           Warehouse Code
     C                     Z-ADD#1ELDT    P1ELDT           Production Date
      * ** Pass the program based on the requested schedule   FP1235 LJB
      * CASE: DTL.Report Type Schedule  USR is Make Sheet with Variance
     C           #DRYST    IFEQ 'M'                        *IF
     C                     MOVEL*BLANK    P5BMVN           Program name US
     C                     MOVEL'PMRVPFR' P5BMVN           Program name US
     C                     MOVEL*BLANK    P6BWVN           Program Name$ U
     C                     MOVEL'PMRVPFR$'P6BWVN           Program Name$ U
     C                     MOVEL#DVQSX    P7VQSX           Email Selection
     C                     ELSE
      * CASE: DTL.Report Type Schedule  USR is Day Schedule
     C           #DRYST    IFEQ 'D'                        *IF
     C                     MOVEL*BLANK    P5BMVN           Program name US
     C                     MOVEL'PLA9PFR' P5BMVN           Program name US
     C                     MOVEL*BLANK    P6BWVN           Program Name$ U
     C                     MOVEL'PLA9PFR$'P6BWVN           Program Name$ U
     C                     ELSE
      * CASE: DTL.Report Type Schedule  USR is Variance Schedule
     C           #DRYST    IFEQ 'V'                        *IF
     C                     MOVEL*BLANK    P5BMVN           Program name US
     C                     MOVEL'PLA9PFR' P5BMVN           Program name US
     C                     MOVEL*BLANK    P6BWVN           Program Name$ U
     C                     MOVEL'PLA9PFR$'P6BWVN           Program Name$ U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialise Allow Set Window Location flags
     C                     MOVEA*ALL'Y'   YSL
      * Set display size
     C                     SETOF                         93*
     C           @#SCRW    COMP 27                       93*
      * Initialise window location variables.
     C                     Z-ADD*ZEROS    ##WSR
     C                     Z-ADD*ZEROS    ##WSC
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WAAECS           Last Cost
     C                     Z-ADD*ZERO     WABACS           Cost per Primar
     C                     Z-ADD*ZERO     WABBCS           Cost per Pricin
     C                     Z-ADD*ZERO     WACBPR           Revaluation Cos
     C                     Z-ADD*ZERO     WAGUDT           Revaluation Eff
     C                     Z-ADD*ZERO     WACTPR           Last Revaluatio
     C                     Z-ADD*ZERO     WAG4DT           Last Revaluatio
     C                     Z-ADD*ZERO     WABOWG           On Hand Weight
     C                     Z-ADD*ZERO     WADDQT           On Hand U/M1 Su
     C                     Z-ADD*ZERO     WADEQT           On Hand U/M2 Su
     C                     Z-ADD*ZERO     WADFQT           On Hand U/M3 Su
     C                     Z-ADD*ZERO     WAHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WAHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WAAJQT           Quantity Schedu
     C                     Z-ADD*ZERO     WAAQQT           Quantity on Sal
     C                     Z-ADD*ZERO     WAAUQT           Quantity on Pur
     C                     Z-ADD*ZERO     WAEMQT           Quantity on Tra
     C                     Z-ADD*ZERO     WADOQT           Quantity Avail.
     C                     Z-ADD*ZERO     WAAKDT           Date of Last Or
     C                     Z-ADD*ZERO     WAANDT           Date of Last Sh
     C                     Z-ADD*ZERO     WAIDVA           Value of On Han
     C                     Z-ADD*ZERO     WABZPC           Safety Allowanc
     C                     Z-ADD*ZERO     WADGQT           Safety Allowanc
     C                     Z-ADD*ZERO     WADIDT           Stock Out Date
     C                     Z-ADD*ZERO     WABFDY           Lead Time - Las
     C                     Z-ADD*ZERO     WADJDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WABGDY           Lead Time - Nex
     C                     Z-ADD*ZERO     WADKDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WADJQT           Usage Qty per C
     C                     Z-ADD*ZERO     WABNWG           Usage Weight pe
     C                     Z-ADD*ZERO     WADLDT           Inventory Manag
     C                     Z-ADD*ZERO     WADPQT           Minimum Quantit
     C                     Z-ADD*ZERO     WADQQT           Maximum Quantit
     C                     Z-ADD*ZERO     WADMDT           Last Physical C
     C                     Z-ADD*ZERO     WAAKC8           Vendor - Item/W
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCRGNB           Item Structure
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WERINB           Item Structure
     C                     Z-ADD*ZERO     WERHNB           Item Structure
     C                     Z-ADD*ZERO     WEAATM           Job Time
     C                     Z-ADD*ZERO     WEAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WGBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WGBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WGBUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WGBVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WGAATM           Job Time
     C                     Z-ADD*ZERO     WGAXDT           Job Date
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SARVGN.
     C                     MOVEL*BLANK    WL0001  3
     C                     MOVEL*BLANK    WL0002 30
      * Define local work field Cycle Count Code - IB
     C                     MOVEL*BLANK    YL0001  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * ***** Change log and comments
     C                     EXSR UASUBR                     ***** Change lo
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** DETAIL Screen: Field position and name array
010450130101307015570181301819
**
010520130101326015570181501836
**
V1ELDT    #DRYST    #DHNTX    #DB8ST    #DT3CD    #DF8NA
