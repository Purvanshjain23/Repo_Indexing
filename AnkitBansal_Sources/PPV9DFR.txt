     H/TITLE Dsp Item/Whse Inqy DtlSav Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 02/23/10  Time  : 11:58:56
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPPV9DFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: Dsp Item/Whse Inqy DtlSav Display file
      *
     FCAB1REL0IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Item Balance Detail       Retrieval index       NV
      *
     FCAB1REL2IF  E           K        DISK
      * RSQ : Item Balance Detail       Co/Whs/Item/Prod Date
      *
     FOPBGWKLVIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Om CCC
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Date Descending
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDKMREL1IF  E           K        DISK
      * RTV : Company Values            Retrieval index
      *
     FCAB0RELCIF  E           K        DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FCAB1REL4IF  E           K        DISK
      * RTV : Item Balance Detail       Active only
      *
     FPDMXCPL1IF  E           K        DISK
      * RTV : AS Last Data Collection   Retrieval index
      *
     FPPBGCPL4IF  E           K        DISK
      * RSQ : PFS Inventory Adjustment  Co/WHS/Item/LDte ShpNotP
      *
     FCAB7CPL2IF  E           K        DISK
      * RSQ : Item Transaction Detail   Co,Itm,Whs,Prd Dt,Trn Ty
      *
     FCAB0REL1IF  E           K        DISK
      * RTV : Item Balance              Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    #L3         3  1
     E                    #L7         7  1
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1   4  6   @CN    25
     E                    YK01      100 12  A            Date for Qty Sc
      *
     E                    YDOW        7  1               *Days of week
     I@B1RESE
      * Item Balance Detail       Co/Whs/Item/Prod Date
      * Renamed input format fields
     I              B1AIC3                          WBAIC3
     I              B1HGCD                          WBHGCD
     I              B1AJCD                          WBAJCD
     I              B1ELDT                          WBELDT
     I              B1ABWG                          WBABWG
     I              B1AGQT                          WBAGQT
     I              B1AHQT                          WBAHQT
     I              B1AIQT                          WBAIQT
     I              B1CTST                          WBCTST
     I              B1ACWG                          WBACWG
     I              B1ARQT                          WBARQT
     I              B1ASQT                          WBASQT
     I              B1ATQT                          WBATQT
     I              B1HDQT                          WBHDQT
     I              B1HEQT                          WBHEQT
     I              B1F6ST                          WBF6ST
     I              B1BMWG                          WBBMWG
     I              B1DSQT                          WBDSQT
     I              B1DTQT                          WBDTQT
     I              B1DUQT                          WBDUQT
     I              B1DHDT                          WBDHDT
     I              B1AGCS                          WBAGCS
     I              B1AECS                          WBAECS
     I              B1IDVA                          WBIDVA
     I              B1K7DT                          WBK7DT
     I              B1RINB                          WBRINB
     I              B1RHNB                          WBRHNB
     I              B1RGNB                          WBRGNB
     I              B1UVST                          WBUVST
     I              B1UWST                          WBUWST
     I              B1UXST                          WBUXST
     I              B1VSST                          WBVSST
     I              B1AATM                          WBAATM
     I              B1AYNA                          WBAYNA
     I              B1A0NA                          WBA0NA
     I              B1AXDT                          WBAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WCAJCD
     I              ADF8NA                          WCF8NA
     I              ADACNA                          WCACNA
     I              ADADNA                          WCADNA
     I              ADAENA                          WCAENA
     I              ADAJNA                          WCAJNA
     I              ADBTTX                          WCBTTX
     I              ADAOCD                          WCAOCD
     I              ADBGCD                          WCBGCD
     I              ADVHST                          WCVHST
     I              ADMPNA                          WCMPNA
     I              ADWPST                          WCWPST
     I              ADXUST                          WCXUST
     I              ADT0ST                          WCT0ST
     I              ADT1ST                          WCT1ST
     I              ADDBNB                          WCDBNB
     I              ADT2ST                          WCT2ST
     I              ADT3ST                          WCT3ST
     I              ADT4ST                          WCT4ST
     I              ADT6ST                          WCT6ST
     I              ADBWC3                          WCBWC3
     I              ADBTC3                          WCBTC3
     I              ADBUC3                          WCBUC3
     I              ADBVC3                          WCBVC3
     I              ADFCAA                          WCFCAA
     I              ADRQSX                          WCRQSX
     I              ADRRSX                          WCRRSX
     I              ADRSSX                          WCRSSX
     I              ADRTSX                          WCRTSX
     I              ADT7ST                          WCT7ST
     I              ADT8ST                          WCT8ST
     I              ADRNSX                          WCRNSX
     I              ADROSX                          WCROSX
     I              ADRPSX                          WCRPSX
     I              ADUVST                          WCUVST
     I              ADUWST                          WCUWST
     I              ADUXST                          WCUXST
     I              ADVSST                          WCVSST
     I              ADAATM                          WCAATM
     I              ADAYNA                          WCAYNA
     I              ADA0NA                          WCA0NA
     I              ADAXDT                          WCAXDT
      *
     I@BGWKKG
      * Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      * Renamed input format fields
     I              OMAIC3                          WDAIC3
     I              OMC4NB                          WDC4NB
     I              OMDPNB                          WDDPNB
     I              OMUENB                          WDUENB
     I              OMHGCD                          WDHGCD
     I              OMAJCD                          WDAJCD
     I              OMBKC7                          WDBKC7
     I              OMCFC7                          WDCFC7
     I              OMGMST                          WDGMST
     I              OMGNST                          WDGNST
     I              OMMAVA                          WDMAVA
     I              OMKDVA                          WDKDVA
     I              OML8VA                          WDL8VA
     I              OML9VA                          WDL9VA
     I              OMGTST                          WDGTST
     I              OMGVST                          WDGVST
     I              OMGUST                          WDGUST
     I              OMQFST                          WDQFST
     I              OMAYVA                          WDAYVA
     I              OMEXDT                          WDEXDT
     I              OMLQCD                          WDLQCD
     I              OMRDCD                          WDRDCD
     I              OMQ7CD                          WDQ7CD
     I              OMBZPR                          WDBZPR
     I              OML6NB                          WDL6NB
     I              OMU1ST                          WDU1ST
     I              OMGIDT                          WDGIDT
     I              OMCRCD                          WDCRCD
     I              OMAGCD                          WDAGCD
     I              OMRZST                          WDRZST
     I              OMR0ST                          WDR0ST
     I              OMR1ST                          WDR1ST
     I              OMG7NA                          WDG7NA
     I              OMG8NA                          WDG8NA
     I              OMRPCD                          WDRPCD
     I              OMVEST                          WDVEST
     I              OMVGST                          WDVGST
     I              OMAVST                          WDAVST
     I              OMU0ST                          WDU0ST
     I              OMRFCD                          WDRFCD
     I              OMFZST                          WDFZST
     I              OMR1NB                          WDR1NB
     I              OMAVQT                          WDAVQT
     I              OMD0WG                          WDD0WG
     I              OMCCQT                          WDCCQT
     I              OMAUWG                          WDAUWG
     I              OMCBQT                          WDCBQT
     I              OMATWG                          WDATWG
     I              OMAQCS                          WDAQCS
     I              OMAGCS                          WDAGCS
     I              OMAKPR                          WDAKPR
     I              OMALPR                          WDALPR
     I              OMAUPR                          WDAUPR
     I              OMAVWG                          WDAVWG
     I              OMA4WG                          WDA4WG
     I              OMA5DT                          WDA5DT
     I              OMAODT                          WDAODT
     I              OMGNDT                          WDGNDT
     I              OMAMST                          WDAMST
     I              OMANST                          WDANST
     I              OMVAST                          WDVAST
     I              OMRGNB                          WDRGNB
     I              OMRHNB                          WDRHNB
     I              OMRINB                          WDRINB
     I              OMRBCD                          WDRBCD
     I              OMHICD                          WDHICD
     I              OMRNCD                          WDRNCD
     I              OMROCD                          WDROCD
     I              OMCXDT                          WDCXDT
     I              OMAJVN                          WDAJVN
     I              OMKXCD                          WDKXCD
     I              OMJPCD                          WDJPCD
     I              OMCQCD                          WDCQCD
     I              OMR4CD                          WDR4CD
     I              OMZ1ST                          WDZ1ST
     I              OMZ3ST                          WDZ3ST
     I              OMZ4ST                          WDZ4ST
     I              OMDUPR                          WDDUPR
     I              OMB6VL                          WDB6VL
     I              OMA1AA                          WDA1AA
     I              OMFZSX                          WDFZSX
     I              OMF0SX                          WDF0SX
     I              OMF1SX                          WDF1SX
     I              OMF2SX                          WDF2SX
     I              OMF3SX                          WDF3SX
     I              OMF4SX                          WDF4SX
     I              OMF5SX                          WDF5SX
     I              OMF6SX                          WDF6SX
     I              OMF7SX                          WDF7SX
     I              OMNTDT                          WDNTDT
     I              OMNUDT                          WDNUDT
     I              OMNVDT                          WDNVDT
     I              OMNWDT                          WDNWDT
     I              OMNXDT                          WDNXDT
     I              OMBUTM                          WDBUTM
     I              OMBVTM                          WDBVTM
     I              OMBWTM                          WDBWTM
     I              OMBXTM                          WDBXTM
     I              OMBYTM                          WDBYTM
     I              OMH5NX                          WDH5NX
     I              OMH6NX                          WDH6NX
     I              OMH7NX                          WDH7NX
     I              OMH8NX                          WDH8NX
     I              OMH9NX                          WDH9NX
     I              OMDVPR                          WDDVPR
     I              OMDWPR                          WDDWPR
     I              OMDXPR                          WDDXPR
     I              OMDYPR                          WDDYPR
     I              OMDZPR                          WDDZPR
     I              OMGSPR                          WDGSPR
     I              OMGTPR                          WDGTPR
     I              OMGUPR                          WDGUPR
     I              OMHOST                          WDHOST
     I              OMHPST                          WDHPST
     I              OMIOST                          WDIOST
     I              OMPEWG                          WDPEWG
     I              OMRINY                          WDRINY
     I              OMTIDT                          WDTIDT
     I              OMTJDT                          WDTJDT
     I              OMH2ST                          WDH2ST
     I              OMH0ST                          WDH0ST
     I              OMH1ST                          WDH1ST
     I              OMTKDT                          WDTKDT
     I              OMTLDT                          WDTLDT
     I              OMTMDT                          WDTMDT
     I              OMUVST                          WDUVST
     I              OMUWST                          WDUWST
     I              OMUXST                          WDUXST
     I              OMAATM                          WDAATM
     I              OMAYNA                          WDAYNA
     I              OMA0NA                          WDA0NA
     I              OMAXDT                          WDAXDT
      *
     ICAB1RL4
      * Item Balance Detail       Active only
      * Renamed input format fields
     I              B1AIC3                          WEAIC3
     I              B1HGCD                          WEHGCD
     I              B1AJCD                          WEAJCD
     I              B1ELDT                          WEELDT
     I              B1ABWG                          WEABWG
     I              B1AGQT                          WEAGQT
     I              B1AHQT                          WEAHQT
     I              B1AIQT                          WEAIQT
     I              B1CTST                          WECTST
     I              B1ACWG                          WEACWG
     I              B1ARQT                          WEARQT
     I              B1ASQT                          WEASQT
     I              B1ATQT                          WEATQT
     I              B1HDQT                          WEHDQT
     I              B1HEQT                          WEHEQT
     I              B1F6ST                          WEF6ST
     I              B1BMWG                          WEBMWG
     I              B1DSQT                          WEDSQT
     I              B1DTQT                          WEDTQT
     I              B1DUQT                          WEDUQT
     I              B1DHDT                          WEDHDT
     I              B1AGCS                          WEAGCS
     I              B1AECS                          WEAECS
     I              B1IDVA                          WEIDVA
     I              B1K7DT                          WEK7DT
     I              B1RINB                          WERINB
     I              B1RHNB                          WERHNB
     I              B1RGNB                          WERGNB
     I              B1UVST                          WEUVST
     I              B1UWST                          WEUWST
     I              B1UXST                          WEUXST
     I              B1VSST                          WEVSST
     I              B1AATM                          WEAATM
     I              B1AYNA                          WEAYNA
     I              B1A0NA                          WEA0NA
     I              B1AXDT                          WEAXDT
      *
     I@B0REJX
      * Item Balance              Retrieval index       NV
      * Renamed input format fields
     I              B0AIC3                          WFAIC3
     I              B0HGCD                          WFHGCD
     I              B0AJCD                          WFAJCD
     I              B0AGCS                          WFAGCS
     I              B0AECS                          WFAECS
     I              B0BACS                          WFBACS
     I              B0BBCS                          WFBBCS
     I              B0CBPR                          WFCBPR
     I              B0GUDT                          WFGUDT
     I              B0XYST                          WFXYST
     I              B0CTPR                          WFCTPR
     I              B0G4DT                          WFG4DT
     I              B0BOWG                          WFBOWG
     I              B0DDQT                          WFDDQT
     I              B0DEQT                          WFDEQT
     I              B0DFQT                          WFDFQT
     I              B0HDQT                          WFHDQT
     I              B0HEQT                          WFHEQT
     I              B0AJQT                          WFAJQT
     I              B0AQQT                          WFAQQT
     I              B0AUQT                          WFAUQT
     I              B0EMQT                          WFEMQT
     I              B0DOQT                          WFDOQT
     I              B0ATNA                          WFATNA
     I              B0AKDT                          WFAKDT
     I              B0ANDT                          WFANDT
     I              B0IDVA                          WFIDVA
     I              B0JVST                          WFJVST
     I              B0BZPC                          WFBZPC
     I              B0DGQT                          WFDGQT
     I              B0DIDT                          WFDIDT
     I              B0ALCD                          WFALCD
     I              B0BFDY                          WFBFDY
     I              B0DJDT                          WFDJDT
     I              B0BGDY                          WFBGDY
     I              B0DKDT                          WFDKDT
     I              B0J2ST                          WFJ2ST
     I              B0DJQT                          WFDJQT
     I              B0BNWG                          WFBNWG
     I              B0DLDT                          WFDLDT
     I              B0DPQT                          WFDPQT
     I              B0DQQT                          WFDQQT
     I              B0DMDT                          WFDMDT
     I              B0M0ST                          WFM0ST
     I              B0J9ST                          WFJ9ST
     I              B0KBST                          WFKBST
     I              B0AKC8                          WFAKC8
     I              B0RINB                          WFRINB
     I              B0RHNB                          WFRHNB
     I              B0RGNB                          WFRGNB
     I              B0UVST                          WFUVST
     I              B0UWST                          WFUWST
     I              B0UXST                          WFUXST
     I              B0VSST                          WFVSST
     I              B0AATM                          WFAATM
     I              B0AYNA                          WFAYNA
     I              B0A0NA                          WFA0NA
     I              B0AXDT                          WFAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     IYD01        DS
     I                                        1   70YI0101
     I                                        8  120YI01
      *
     IYM01        DS                        100
     I                                        1   70WAK7DT
     I                                        8  182WAAVQT
      *
     IYW01        DS
     I                                        1   70XAK7DT
     I                                        8  182XAAVQT
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      * Outward parameters
     IPARC        DS                              9
      * KEY : Item Balance              Co/Whse/Item
      * I : RST Company Number
     I                                    P   1   20PAAIC3
      * I : RST Warehouse Code
     I                                        3   5 PAAJCD
      * B : MAP Item Code
     I                                    P   6   90PAHGCD
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Item Code
     I                                    P   3   60P1HGCD
      * I : MAP Description Line One
     I                                        7  36 P1AVNA
      * I : MAP U/M - Primary
     I                                       37  38 P1ADCD
      * I : MAP Conversion Factor 1
     I                                    P  39  434P1AWPC
      * I : MAP Operation Factor 1
     I                                       44  44 P1LXST
      * I : MAP U/M - Second
     I                                       45  46 P1AECD
      * I : MAP Conversion Factor 2
     I                                    P  47  514P1AXPC
      * I : MAP Operation Factor 2
     I                                       52  52 P1LYST
      * I : MAP U/M - Third
     I                                       53  54 P1AFCD
      * I :  Unit Weight
     I                                    P  55  602P1AIWG
      * I :  Production Date Control
     I                                       61  61 P1FZST
      * I :  Catch Weight Status
     I                                       62  62 P1AVST
      * N :  Fresh Chilling Time
     I                                    P  63  652P1CHTM
     IP2PARM      DS
      * FLD: Warehouse
      * I : RST Warehouse Code
     I                                        1   3 P2AJCD
      * I : MAP Warehouse Description
     I                                        4  33 P2F8NA
     IP3PARM      DS
      * FLD: Company Name and Address
      * I : MAP Name
     I                                        1  30 P3ADTX
     IP4PARM      DS
      * N :  Select Option
     I                                        1   1 P4OPTI
     IP5PARM      DS
      * N :  Production Date RGF
     I                                    P   1   40P5GVDT
     IP6PARM      DS
      * N :  First Label Date    USR
     I                                    P   1   40P6NJDT
     IP7PARM      DS
      * FLD: *Arrays
      * B :  *Initial call
     I                                        1   1 P7ICL
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1HGCD    PARM           WP0002  70       Item Code
     C           P1AVNA    PARM           WP0003 30        Description Lin
     C           P1ADCD    PARM           WP0004  2        U/M - Primary
     C           P1AWPC    PARM           WP0005  94       Conversion Fact
     C           P1LXST    PARM           WP0006  1        Operation Facto
     C           P1AECD    PARM           WP0007  2        U/M - Second
     C           P1AXPC    PARM           WP0008  94       Conversion Fact
     C           P1LYST    PARM           WP0009  1        Operation Facto
     C           P1AFCD    PARM           WP0010  2        U/M - Third
     C           P1AIWG    PARM           WP0011 112       Unit Weight
     C           P1FZST    PARM           WP0012  1        Production Date
     C           P1AVST    PARM           WP0013  1        Catch Weight St
     C           P2AJCD    PARM           WP0014  3        Warehouse Code
     C           P2F8NA    PARM           WP0015 30        Warehouse Descr
     C           P3ADTX    PARM           WP0016 30        Name
     C           P7ICL     PARM P7ICL     WP0017  1        *Initial call
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
     C                     Z-ADD*ZERO     #CJPNX           Inv/Ord Diff
     C                     Z-ADD*ZERO     #CJNNX           Inv Current
     C                     Z-ADD*ZERO     #CJONX           Inv Aged
      * Init Toggle Text field
      * CASE: CTL.Toggle Text 1         USR EQ WRK.BLANK 1
     C           #CUMTX    IFEQ WUJ1TX                     *IF
     C                     MOVEL'Qty'     #CUMTX           Toggle Text 1
     C                     MOVEL'Qty'     #CUNTX           Toggle Text 2
     C                     MOVEL'Qty'     #CUOTX           Toggle Text 3
     C                     MOVEL'Qty'     #CUPTX           Toggle Text 4
     C                     END                             *FI
      * CTL.Condition Desc. 1  USR = Condition name of PAR.Catch Weight S
     C                     CALL 'CARVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100273   Y2LSNO  70       List number
     C                     PARM P1AVST    W0INVL 25        Catch Weight St
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           #CHLTX    PARM           W0CNNM 25        Condition Desc.
      *
      * Calculating the Aged vs Current orders.  INV033
      *    John Tremper  March 18, 1998
      * Del Qty Sched for Age  DL - *Arrays  * 
     C                     EXSR SADLRC
      * Rtv Bld Label Dt Array RT - IC Item Balance Detail  * 
     C                     EXSR SBRVGN
      * Rtv Sched Qty/Label Dt RT - PD Order Detail  * 
     C                     EXSR SDRVGN
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SIRVGN
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR SJRVGN
      * Rtv Chilling Time     IF
      * Rtv Chill Time        RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0005           Company Number
     C                     Z-ADD#2HGCD    WL0006           Item Code
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    #CCSHD           Fresh Chilling
      *
     C                     Z-ADD*ZERO     WN0005 155       System Value Nu
      *
      * Rtv Whs Typ/FZNCHLTME IF
      * RTV Warehouse Type     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#2AJCD    WL0008    P      Warehouse Code
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0009    WUWPST    P      Warehouse Type
      * CASE: PAR.Warehouse Type is Frozen
     C           WUWPST    IFEQ 'FZ'                       *IF
      * RTV Numeric Value      RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#2AIC3    WL0010           Company Number
     C                     MOVEL@CN,01    WL0011    P      Company Value C
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    WN0005           System Value Nu
     C                     Z-ADDWN0005    #CCSHD           Fresh Chilling
     C                     END                             *FI
      * RTV On Hand Qty       RT - Item Balance  * 
     C                     EXSR SNRVGN
      * RTV Itm Inq -Opn Ords RT - PD Order Detail  * 
     C                     EXSR SORVGN
      * Rtv Current/Aged Inv  RT - IC Item Balance Detail  * 
     C                     EXSR SPRVGN
     C           #CQUTO    SUB  #CQUOP    #CJPNX           Inv/Ord Diff
      * Rtv Last Upd per Code  RT - AS Last Data Collection  * 
     C                     EXSR SQRVGN
      * C5516  Toggle Quantities/Weights for the on-screen values
      * F13=Toggle quantity/weight
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
      * CASE: WRK.Status Flag 4  Y/N is yes
     C           WUFMST    IFEQ 'Y'                        *IF
      * no  = display quantities
     C                     MOVEL'N'       WUFMST           Status Flag 4
     C                     MOVEL'Qty'     #CUMTX           Toggle Text 1
     C                     MOVEL'Qty'     #CUNTX           Toggle Text 2
     C                     MOVEL'Qty'     #CUOTX           Toggle Text 3
     C                     MOVEL'Qty'     #CUPTX           Toggle Text 4
     C                     ELSE
      * CASE: *OTHERWISE
      * yes = display weights
     C                     MOVEL'Y'       WUFMST           Status Flag 4
     C                     MOVEL'Wgt'     #CUMTX           Toggle Text 1
     C                     MOVEL'Wgt'     #CUNTX           Toggle Text 2
     C                     MOVEL'Wgt'     #CUOTX           Toggle Text 3
     C                     MOVEL'Wgt'     #CUPTX           Toggle Text 4
     C                     END                             *FI
     C                     END                             *FI
      * Toggle Weights
      * CASE: WRK.Status Flag 4  Y/N is yes
     C           WUFMST    IFEQ 'Y'                        *IF
     C                     MULT #PAWPC    #CJNNX           Inv Current
     C                     MULT #PAWPC    #CJONX           Inv Aged
     C                     MULT #PAWPC    #CQUTO           Quantity On-Han
     C                     MULT #PAWPC    #CQUOP           Quantity Open
     C                     MULT #PAWPC    #CJPNX           Inv/Ord Diff
     C                     END                             *FI
      * Rtv Picked Qty Tot    RT - PFS Inventory Adjustment  * 
     C                     EXSR SRRVGN
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
      * Setup key
     C                     Z-ADD#2AIC3    B1AIC3
     C                     Z-ADD#2HGCD    B1HGCD
     C                     MOVEL#2AJCD    B1AJCD
     C                     Z-ADD#2ELDT    B1ELDT
     C           KPOS      SETLL@B1REJ0
     C           KRST      KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    B1AIC3
     C                     Z-ADD#2HGCD    B1HGCD
     C                     MOVEL#2AJCD    B1AJCD
     C           KRST      READE@B1REJ0                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2ACWG    WZACWG
     C                     MOVEL#2ACWG    WZACWG           Quantity on Han
     C           *LIKE     DEFN #2ATQT    WZATQT
     C                     MOVEL#2ATQT    WZATQT           Quantity on Han
     C           *LIKE     DEFN #2IDVA    WZIDVA
     C                     MOVEL#2IDVA    WZIDVA           Value of On Han
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
     C           *LIKE     DEFN #2AJCD    WZAJCD
     C                     MOVEL#2AJCD    WZAJCD           Warehouse Code
     C           *LIKE     DEFN #2ELDT    WZELDT
     C                     MOVEL#2ELDT    WZELDT           Production Date
     C           *LIKE     DEFN #2K7DT    WZK7DT
     C                     MOVEL#2K7DT    WZK7DT           Label Date
     C           *LIKE     DEFN #2ARQT    WZARQT
     C                     MOVEL#2ARQT    WZARQT           Quantity on Han
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@B1REJ0                  90*
     C  N82                READ @B1REJ0                  90*
     C                     END
      *
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2ACWG    IFNE *ZERO                      Quantity on Han
     C           B1ACWG    CABNE#2ACWG    BB020            Quantity on Han
     C                     END
     C           #2ATQT    IFNE *ZERO                      Quantity on Han
     C           B1ATQT    CABNE#2ATQT    BB020            Quantity on Han
     C                     END
     C           #2IDVA    IFNE *ZERO                      Value of On Han
     C           B1IDVA    CABNE#2IDVA    BB020            Value of On Han
     C                     END
     C           #2K7DT    IFNE *ZERO                      Label Date
     C           B1K7DT    CABNE#2K7DT    BB020            Label Date
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
     C                     EXSR MC#1FN
     C                     SUB  1         ##RR
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * CASE: DB1.Quantity on Hand - Weight is Equal to zero
     C           B1ACWG    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * Describe Mode of Calculation
      * CASE: CTL.*CMD key is CF11
     C           *IN11     IFEQ '1'                        *IF
     C                     MOVEL@CN,02    #CJUNA           USR Description
     C                     MOVEL'1'       P4OPTI           Select Option
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is CF12
     C           *IN12     IFEQ '1'                        *IF
     C                     MOVEL@CN,03    #CJUNA           USR Description
     C                     MOVEL'2'       P4OPTI           Select Option
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is CF10
     C           *IN10     IFEQ '1'                        *IF
     C                     MOVEL@CN,04    #CJUNA           USR Description
     C                     MOVEL*BLANK    P4OPTI           Select Option
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: CTL.*CMD key is CF13
     C           *IN13     IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL@CN,04    #CJUNA           USR Description
     C                     MOVEL*BLANK    P4OPTI           Select Option
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     #RQPQT           Qty Produced
     C                     Z-ADD*ZERO     #RAUNB           Qty Produced 2
      * Rtv Tran qty by Trn TypRT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0013           Company Number
     C                     Z-ADD#1HGCD    WL0014           Item Code
     C                     MOVEL#1AJCD    WL0015    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0016           Production Date
     C                     Z-ADD#RQPQT    WL0017           Qty Produced
     C                     MOVELP4OPTI    WL0018    P      Select Option
     C                     MOVEL'1'       WL0019    P      Shift Number
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    #RQPQT           Qty Produced
      * Rtv Tran qty by Trn TypRT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0013           Company Number
     C                     Z-ADD#1HGCD    WL0014           Item Code
     C                     MOVEL#1AJCD    WL0015    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0016           Production Date
     C                     Z-ADD#RAUNB    WL0017           Qty Produced
     C                     MOVELP4OPTI    WL0018    P      Select Option
     C                     MOVEL'2'       WL0019    P      Shift Number
     C                     EXSR SSRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0017    #RAUNB           Qty Produced
     C                     Z-ADD#1ARQT    #RCL11           @Calc 11,0
      *
     C                     Z-ADD*ZERO     WN0013  70       @Date - ATR
     C                     Z-ADD*ZERO     WN0014  52       Warehouse Chill
     C                     Z-ADD*ZERO     WN0015  30       @CTL Nbr 3.0
     C                     MOVEL*BLANK    WN0016  1        Warehouse Std C
      *
      * CLC Age Code           IF
      * DOC: Change Log
     C                     EXSR UCSUBR                     DOC: Change Log
      * Rtv Chilling Time     IF
      * Rtv Chill Time        RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0005           Company Number
     C                     Z-ADD#1HGCD    WL0006           Item Code
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    WN0014           Fresh Chilling
      *
     C                     Z-ADD*ZERO     WN0017 155       System Value Nu
      *
      * Rtv Whs Typ/FZNCHLTME IF
      * RTV Warehouse Type     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#1AJCD    WL0008    P      Warehouse Code
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0009    WUWPST    P      Warehouse Type
      * CASE: PAR.Warehouse Type is Frozen
     C           WUWPST    IFEQ 'FZ'                       *IF
      * RTV Numeric Value      RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0010           Company Number
     C                     MOVEL@CN,01    WL0011    P      Company Value C
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    WN0017           System Value Nu
     C                     Z-ADDWN0017    WN0014           Fresh Chilling
     C                     END                             *FI
     C                     MOVEL*BLANK    #RPFTX           Text 1 Length U
     C                     Z-ADD##JDT     WN0013           @Date - ATR
      * PAR.@CTL Nbr 3.0 = PAR.@Date - ATR - PAR.Production Date *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           #1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WN0013    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0015
     C                     ELSE
     C           XDURR     MULT -1        WN0015
     C                     END
      * ** "H" = 7 -> 119, and "I" = 120+ days        S00735
      *
     C                     Z-ADD*ZERO     WN0018  50       Number of Days
      *
      * CLC Age Code for #days IF
      * ** Calulate the duration between 2 dates
      * PAR.Number of Days = PAR.USR To Date - PAR.USR From Date *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           #1ELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WN0013    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0018
     C                     ELSE
     C           XDURR     MULT -1        WN0018
     C                     END
      * ** Select the appropriate Age Code to pass back
      * CASE: PAR.Number of Days is <= Zero
     C           WN0018    IFLE *ZERO                      *IF
     C                     MOVEL'A'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 1
     C           WN0018    IFEQ 1                          *IF
     C                     MOVEL'B'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 2
     C           WN0018    IFEQ 2                          *IF
     C                     MOVEL'C'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 3
     C           WN0018    IFEQ 3                          *IF
     C                     MOVEL'D'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 4
     C           WN0018    IFEQ 4                          *IF
     C                     MOVEL'E'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 5
     C           WN0018    IFEQ 5                          *IF
     C                     MOVEL'F'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 6
     C           WN0018    IFEQ 6                          *IF
     C                     MOVEL'G'       #RPFTX           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is GE 120
     C           WN0018    IFGE 120                        *IF
     C                     MOVEL'I'       #RPFTX           Age Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'H'       #RPFTX           Age Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ***** Change Log and Comments
     C                     EXSR UDSUBR                     ***** Change Lo
      * Rtv Order Age Quantity RT - *Arrays  * 
     C                     EXSR STRVGN
      * Toggle Weights
      * CASE: WRK.Status Flag 4  Y/N is yes
     C           WUFMST    IFEQ 'Y'                        *IF
     C                     MULT #PAWPC    #RCL11           @Calc 11,0
     C                     MULT #PAWPC    #RQPQT           Qty Produced
     C                     MULT #PAWPC    #RAUNB           Qty Produced 2
     C                     MULT #PAWPC    #RIRQT           Quantity Ordere
     C                     END                             *FI
      *
     C                     MOVEL*BLANK    WN0019  8        Date (Char-8) U
     C                     MOVEL*BLANK    WN0020  4        Year Alpha (YYY
     C                     MOVEL*BLANK    WN0021  2        Month (Char) US
     C                     MOVEL*BLANK    WN0022  2        Day   (Char) US
      *
      * CNV cyymmdd to yyyymmdd
      * LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
     C           #1K7DT    ADD  1000000   XDINDT
     C           1800      ADD  XDINYY    YL0005
      * LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
     C           #1K7DT    ADD  1000000   XDINDT
     C                     Z-ADDXDINMM    YL0006
      * LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
     C           #1K7DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD0         XDINDD
     C                     EXSR XCVTA
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0007
     C                     MOVEL*BLANK    WN0020           Year Alpha (YYY
     C                     MOVELYL0005    WN0020           Year Alpha (YYY
     C                     MOVELYL0006    WN0021           Month (Char) US
     C                     MOVELYL0007    WN0022           Day   (Char) US
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0020    CAT  WN0021:ZQ WN0019    P      Date (Char-8) U
     C                     Z-ADD*ZERO     ZQ      50
     C           WN0019    CAT  WN0022:ZQ WN0019    P      Date (Char-8) U
     C                     MOVE WN0019    YL0004           Date Out (8,0)
      * Rtv Picked Qty        RT - PFS Inventory Adjustment  * 
     C                     EXSR SURVGN
     C           #RCL11    SUB  #ROXQT    #RHJNX           Quantity Avail
     C                     END                             *FI
      * SFL Fold/Drop  RPG 2  US - /UT User Source  * 
     C           MODE      IFEQ '0'
     C                     SETON                     89
     C                     ELSE
     C                     SETOF                     89
     C                     ENDIF
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C           KRST      READE@B1REJ0                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Production Date
      * External date
     C                     Z-ADDV2ELDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #2ELDT
      * Validate Label Date
      * External date
     C                     Z-ADDV2K7DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     Z-ADDXDINDT    #2K7DT
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZELDT    CASNE#2ELDT    FBRQRL
     C           WZK7DT    CASNE#2K7DT    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * CASE:
      *  - c1ORc2ORc3ORc4
      *   |- c1    : CTL.*CMD key is CF10
      *   |- c2    : CTL.*CMD key is CF11
      *   |- c3    : CTL.*CMD key is CF12
      *   |- c4    : CTL.*CMD key is CF13
      *   '-
     C           *IN10     IFEQ '1'                        *IF
     C           *IN11     OREQ '1'                        *OR
     C           *IN12     OREQ '1'                        *OR
     C           *IN13     OREQ '1'                        *OR
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     MOVEL'Y'       WUTAST           First Time Flag
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: Process command keys
      * CASE: CTL.*CMD key is CF14
     C           *IN14     IFEQ '1'                        *IF
      * CASE: PAR.*Initial call is *NO
     C           P7ICL     IFEQ 'N'                        *IF
     C                     MOVELW0RTN     P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       P7ICL            *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #2AIC3    WQ0001  30       Company Number
     C                     PARM #2HGCD    WQ0002  70       Item Code
     C                     PARM ##JDT     WQ0003  70       Scheduled Ship
     C                     PARM #PADTX    WQ0004 30        Name
     C                     PARM #2AJCD    WQ0005  3        Warehouse Code
     C           P7ICL     PARM P7ICL     WQ0006  1        *Initial call
     C                     PARM YL0003    WQ0007  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       P7ICL            *Initial call
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C                     MOVEL'0'       *IN75
     C           P1FZST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN75
     C                     END                             *FI
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C                     MOVEL'0'       *IN79
     C           #PAECD    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           #PAFCD    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
     C                     MOVEL'0'       *IN77
     C           #COXQT    IFEQ *ZERO                      *IF
     C                     MOVEL'1'       *IN77
     C                     END                             *FI
     C                     MOVEL'0'       *IN76
     C           P1FZST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN76
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @B1REJ0 fields to subfile
      *================================================================
     C                     Z-ADDB1AIC3    #1AIC3           Company Number
     C                     Z-ADDB1HGCD    #1HGCD           Item Code
     C                     MOVELB1AJCD    #1AJCD           Warehouse Code
     C                     Z-ADDB1ACWG    #1ACWG           Quantity on Han
     C                     Z-ADDB1ABWG    #1ABWG           Physical Count
     C                     Z-ADDB1AGQT    #1AGQT           Physical Count
     C                     Z-ADDB1AHQT    #1AHQT           Physical Count
     C                     Z-ADDB1AIQT    #1AIQT           Physical Count
     C                     MOVELB1CTST    #1CTST           Physical Count
     C                     Z-ADDB1ARQT    #1ARQT           Quantity on Han
     C                     Z-ADDB1ASQT    #1ASQT           Quantity on Han
     C                     Z-ADDB1ATQT    #1ATQT           Quantity on Han
     C                     Z-ADDB1HDQT    #1HDQT           Quantity In Chi
     C                     Z-ADDB1HEQT    #1HEQT           Weight In Chill
     C                     MOVELB1F6ST    #1F6ST           Update Exceptio
     C                     Z-ADDB1BMWG    #1BMWG           Physical Start
     C                     Z-ADDB1DSQT    #1DSQT           Physical Start
     C                     Z-ADDB1DTQT    #1DTQT           Physical Start
     C                     Z-ADDB1DUQT    #1DUQT           Physical Start
     C                     Z-ADDB1DHDT    #1DHDT           Physical Start
     C                     Z-ADDB1AGCS    #1AGCS           Unit Cost Per P
     C                     Z-ADDB1AECS    #1AECS           Last Cost
     C                     Z-ADDB1IDVA    #1IDVA           Value of On Han
     C                     Z-ADDB1RINB    #1RINB           Item Structure
     C                     Z-ADDB1RHNB    #1RHNB           Item Structure
     C                     Z-ADDB1RGNB    #1RGNB           Item Structure
     C                     MOVELB1UVST    #1UVST           EDI Status 1
     C                     MOVELB1UWST    #1UWST           EDI Status 2
     C                     MOVELB1UXST    #1UXST           EDI Status 3
     C                     MOVELB1VSST    #1VSST           Record Status
     C                     Z-ADDB1AATM    #1AATM           Job Time
     C                     MOVELB1AYNA    #1AYNA           User Id
     C                     MOVELB1A0NA    #1A0NA           Job Name
     C                     Z-ADDB1AXDT    #1AXDT           Job Date
     C                     Z-ADDB1ELDT    #1ELDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1ELDT
     C                     Z-ADDB1K7DT    #1K7DT           Label Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1K7DT
     C                     Z-ADD*ZERO     #RASCS           USR Cost
     C                     Z-ADD*ZERO     #RCLC4           @Calc 4,0
     C                     Z-ADD*ZERO     #RTRNB           Calc 4
     C                     Z-ADD*ZERO     #RCL11           @Calc 11,0
     C                     Z-ADD*ZERO     #RQPQT           Qty Produced
     C                     Z-ADD*ZERO     #RAUNB           Qty Produced 2
     C                     MOVEL*BLANK    #RPFTX           Text 1 Length U
     C                     Z-ADD*ZERO     #RIRQT           Quantity Ordere
     C                     Z-ADD*ZERO     #ROXQT           Quantity Picked
     C                     Z-ADD*ZERO     #RHJNX           Quantity Avail
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MC#1FN    BEGSR
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
      * CALC: Subfile record function fields
      *================================================================
     CSR         MCEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #CM168           Calc 5,0
     C                     Z-ADD*ZERO     #CM178           Number 5,0
     C                     Z-ADD*ZERO     #CCLC5           @Calc 5,0
     C                     Z-ADD*ZERO     #2ACWG           Quantity on Han
     C                     Z-ADD*ZERO     #2ATQT           Quantity on Han
     C                     Z-ADD*ZERO     #2IDVA           Value of On Han
     C                     Z-ADD*ZERO     #CCLC4           @Calc 4,0
     C                     Z-ADD*ZERO     #CTRNB           Calc 4
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVELP3ADTX    #PADTX           Name
     C                     MOVEL*BLANK    #CHLTX           Condition Desc.
     C                     Z-ADDP1HGCD    #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVELP1AVNA    #PAVNA           Description Lin
     C                     Z-ADD*ZERO     #CCSHD           Chill Time USR
     C                     MOVELP2AJCD    #2AJCD           Warehouse Code
     C                     MOVELP2F8NA    #PF8NA           Warehouse Descr
     C                     Z-ADD*ZERO     #CJNNX           Inv Current
     C                     MOVELP1ADCD    #PADCD           U/M - Primary
     C                     Z-ADDP1AWPC    #PAWPC           Conversion Fact
     C                     MOVELP1LXST    #PLXST           Operation Facto
     C                     Z-ADD*ZERO     #CJONX           Inv Aged
     C                     MOVELP1AECD    #PAECD           U/M - Second
     C                     Z-ADDP1AXPC    #PAXPC           Conversion Fact
     C                     MOVELP1LYST    #PLYST           Operation Facto
     C                     Z-ADD*ZERO     #CQUTO           Quantity On-Han
     C                     MOVELP1AFCD    #PAFCD           U/M - Third
     C                     Z-ADD*ZERO     #COXQT           Quantity Picked
     C                     Z-ADD*ZERO     #CQUOP           Quantity Open
     C                     Z-ADD*ZERO     #CNIDT           AS Last Update
      * Clear external version also
     C                     Z-ADD*ZERO     VCNIDT
     C                     Z-ADD*ZERO     #CBKTM           AS Last Update
     C                     MOVEL*BLANK    #CJUNA           USR Description
     C                     Z-ADD*ZERO     #CJPNX           Inv/Ord Diff
     C                     MOVEL*BLANK    #CUMTX           Toggle Text 1
     C                     MOVEL*BLANK    #CUNTX           Toggle Text 2
     C                     MOVEL*BLANK    #CUOTX           Toggle Text 3
     C                     MOVEL*BLANK    #CUPTX           Toggle Text 4
     C                     Z-ADD*ZERO     #2ELDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2ELDT
     C                     Z-ADD*ZERO     #2K7DT           Label Date
      * Clear external version also
     C                     Z-ADD*ZERO     V2K7DT
     C                     Z-ADD*ZERO     #2ARQT           Quantity on Han
     C                     Z-ADD*ZERO     #CQPQT           Qty Produced
     C                     Z-ADD*ZERO     #CAUNB           Qty Produced 2
     C                     MOVEL*BLANK    #CPFTX           Text 1 Length U
     C                     Z-ADD*ZERO     #CIRQT           Quantity Ordere
      * Check restriction within
     C                     EXSR VACKRL
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  #1ELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1ELDT
      * Convert Label Date to display format
      * Convert date
     C           1000000   ADD  #1K7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1K7DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert AS Last Update Date to display format
      * Convert date
     C           1000000   ADD  #CNIDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCNIDT
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  #2ELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2ELDT
      * Convert Label Date to display format
      * Convert date
     C           1000000   ADD  #2K7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V2K7DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SADLRC    BEGSR
      *================================================================
      * Del Qty Sched for Age  DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Bld Label Dt Array RT - IC Item Balance Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0001  1        First Time Flag
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WN0001           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBAIC3    WQSB01           Company Number
     C           *LIKE     DEFN WBAJCD    WQSB02           Warehouse Code
     C           *LIKE     DEFN WBHGCD    WQSB03           Item Code
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           WQSB02           Warehouse Code
     C                     KFLD           WQSB03           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSB01           Company Number
     C                     MOVEL#2AJCD    WQSB02           Warehouse Code
     C                     Z-ADD#2HGCD    WQSB03           Item Code
      * Establish starting position
     C           KRSSB     SETLL@B1RESE                    *
     C           KRSSB     READE@B1RESE                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Quantity on Hand - Weight is Not equal zero
     C           WBACWG    IFNE *ZERO                      *IF
      * Crt Date for Qty Sched CR - *Arrays  * 
     C                     EXSR SCCRRC
      * CASE: PAR.First Time Flag is Yes
     C           WN0001    IFEQ 'Y'                        *IF
     C                     Z-ADDWBK7DT    P6NJDT           First Label Dat
     C                     MOVEL'N'       WN0001           First Time Flag
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@B1RESE                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCCRRC    BEGSR
      *================================================================
      * Crt Date for Qty Sched CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C                     Z-ADD*ZERO     XAK7DT           Label Date
     C                     Z-ADD*ZERO     XAAVQT           Quantity Ordere
      * Move all fields to Date for Qty Sched by Age
     C                     Z-ADDWBK7DT    XAK7DT           Label Date
     C                     Z-ADD*ZERO     XAAVQT           Quantity Ordere
      *
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDXAK7DT    YI0101           Label Date
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAK7DT
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDXAK7DT    YI0101           Label Date
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     Z-ADDXAK7DT    WAK7DT           Label Date
     C                     Z-ADDXAAVQT    WAAVQT           Quantity Ordere
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Sched Qty/Label Dt RT - PD Order Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0002  70       Label Date  USR
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSD01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSD02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSD03           Warehouse Code
      * Define keylist
     C           KPSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Item Code
     C                     KFLD           WQSD03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSD01           Company Number
     C                     Z-ADD#2HGCD    WQSD02           Item Code
     C                     MOVEL#2AJCD    WQSD03           Warehouse Code
     C                     Z-ADDP6NJDT    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSD     SETLL@BGWKYG                    *
     C           KRSSD     READE@BGWKYG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * rmc 7/07/09 added comp to bill act type
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0001           Company Number
     C                     Z-ADDOMC4NB    WL0002           Order Number
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0001    P      Header Status
     C                     MOVELWL0004    YL0002    P      Billing Activit
      * CASE: LCL.Billing Activity Type is Invoice or Transfer
     C           YL0002    IFEQ '1'                        *IF
     C           YL0002    OREQ '4'
      * Rtv Oldest Label Date  RT - Calendar  * 
     C                     EXSR SFRVGN
      * Upd Sched Qtys by Age  RT - *Arrays  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C           KRSSD     READE@BGWKYG                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0001    BEAIC3           Company Number
     C                     Z-ADDWL0002    BEC4NB           Order Number
      * Establish starting position
     C           KRSSE     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0003           Header Status
     C                     MOVELBEOBST    WL0004           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Oldest Label Date  RT - Calendar  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0003  50       Aging Day
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * RMC PFS019 9/12/06 age code: chg 90 days to 120
     C                     Z-ADD*ZERO     WN0002           Label Date
      * Calculate age number from age code
      * CASE: PAR.Age Code is A: 0 Day
     C           OMRPCD    IFEQ 'A'                        *IF
     C                     Z-ADD*ZERO     WN0003           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is B: 1 Day
     C           OMRPCD    IFEQ 'B'                        *IF
     C                     Z-ADD1         WN0003           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is C: 2 Day
     C           OMRPCD    IFEQ 'C'                        *IF
     C                     Z-ADD2         WN0003           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is D: 3 Day
     C           OMRPCD    IFEQ 'D'                        *IF
     C                     Z-ADD3         WN0003           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is E: 4 Day
     C           OMRPCD    IFEQ 'E'                        *IF
     C                     Z-ADD4         WN0003           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is F: 5 Day
     C           OMRPCD    IFEQ 'F'                        *IF
     C                     Z-ADD5         WN0003           Aging Day
     C                     ELSE
      * CASE: PAR.Age Code is G: 6 Day
     C           OMRPCD    IFEQ 'G'                        *IF
     C                     Z-ADD6         WN0003           Aging Day
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.Age Code is H: 7 Days to 119 Days
      *   |- c2    : PAR.Age Code is I: 120 Days +
      *   '-
     C           OMRPCD    IFEQ 'H'                        *IF
     C           OMRPCD    OREQ 'I'                        *OR
     C                     Z-ADD7         WN0003           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSF01           Company Number
      * Define keylist
     C           KPSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
      * Setup key
     C                     Z-ADDOMAIC3    WQSF01           Company Number
     C                     Z-ADDOMAODT    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSF     SETLL@AFREPU                    *
     C           KRSSF     READE@AFREPU                  90*
      * Data record not found
     C   90                MOVEL'USR0018' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      *          Production day Status is not relevant.
      * CASE: PAR.Aging Day is equal to zero
     C           WN0003    IFEQ *ZERO                      *IF
     C                     Z-ADDAFBCDT    WN0002           Label Date
     C                     GOTO SFEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  1         WN0003           Aging Day
      * CASE: PAR.Aging Day is less than zero
     C           WN0003    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     WN0003           Aging Day
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSF     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Upd Sched Qtys by Age  RT - *Arrays  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0004 112       Quantity Ordere
      *
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDWN0002    YI0101           Label Date
      *
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * If not past scheduled ship date add up quantities then quit.
      * CASE: DB1.Label Date LE PAR.Scheduled Ship Date
     C           WAK7DT    IFLE OMAODT                     *IF
     C           WAAVQT    ADD  OMCCQT    WN0004           Quantity Ordere
      * Chg Scheduled Qty's   CH - *Arrays  * 
     C                     EXSR SHCHRC
     C                     END                             *FI
     C                     GOTO SGEXIT                     *QUIT
     C                     ADD  1         YR01
     C                     ENDDO
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCHRC    BEGSR
      *================================================================
      * Chg Scheduled Qty's   CH - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADDWAK7DT    YI0101           Label Date
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WAK7DT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to Date for Qty Sched by Age
     C                     Z-ADDWN0004    WAAVQT           Quantity Ordere
      *
      *
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSI     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #PADTX           Name
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #PADTX           Name
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#2AJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSJ     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #PF8NA           Warehouse Descr
     C                     MOVEL*BLANK    WUVHST           Lot Tracking Fl
     C                     MOVEL*BLANK    YL0003           Warehouse Type
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    #PF8NA           Warehouse Descr
     C                     MOVELADVHST    WUVHST           Lot Tracking Fl
     C                     MOVELADWPST    YL0003           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Chill Time        RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0005    BZAIC3           Company Number
     C                     Z-ADDWL0006    BZHGCD           Item Code
      * Establish starting position
     C           KRSSK     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0007           Fresh Chilling
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBZCHTM    WL0007           Fresh Chilling
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * RTV Warehouse Type     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WCAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0008    WCAJCD           Warehouse Code
      * Establish starting position
     C           KRSSL     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0009           Warehouse Type
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWCWPST    WL0009           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - Company Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           KMAIC3           Company Number
     C                     KFLD           KMV8CD           Company Value C
      * Setup key
     C                     Z-ADDWL0010    KMAIC3           Company Number
     C                     MOVELWL0011    KMV8CD           Company Value C
      * Establish starting position
     C           KRSSM     CHAIN@KMREHC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2221' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDKMM8NB    WL0012           System Value Nu
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV On Hand Qty       RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CQUTO           On Hand U/M1 Su
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AIC3    WQSN01           Company Number
     C           *LIKE     DEFN B0AJCD    WQSN02           Warehouse Code
     C           *LIKE     DEFN B0HGCD    WQSN03           Item Code
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Company Number
     C                     KFLD           WQSN02           Warehouse Code
     C                     KFLD           WQSN03           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSN01           Company Number
     C                     MOVEL#2AJCD    WQSN02           Warehouse Code
     C                     Z-ADD#2HGCD    WQSN03           Item Code
      * Establish starting position
     C           KRSSN     SETLL@B0REHD                    *
     C           KRSSN     READE@B0REHD                  90*
      * Data record not found
     C   90                MOVEL'USR0328' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B0DDQT    #CQUTO           On Hand U/M1 Su
     C           KRSSN     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Itm Inq -Opn Ords RT - PD Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CQUOP           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSO01           Company Number
     C           *LIKE     DEFN WDHGCD    WQSO02           Item Code
     C           *LIKE     DEFN WDAJCD    WQSO03           Warehouse Code
      * Define keylist
     C           KPSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
     C                     KFLD           WDAODT           Scheduled Ship
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WQSO01           Company Number
     C                     KFLD           WQSO02           Item Code
     C                     KFLD           WQSO03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSO01           Company Number
     C                     Z-ADD#2HGCD    WQSO02           Item Code
     C                     MOVEL#2AJCD    WQSO03           Warehouse Code
     C                     Z-ADD##JDT     WDAODT           Scheduled Ship
      * Establish starting position
     C           KPSSO     SETLL@BGWKKG                    *
     C           KRSSO     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWDAIC3    WL0001           Company Number
     C                     Z-ADDWDC4NB    WL0002           Order Number
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUGWST    P      Header Status
     C                     MOVELWL0004    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.First Time Flag is Yes
     C           WUTAST    IFEQ 'Y'                        *IF
     C                     ADD  WDCCQT    #CQUOP           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Scheduled Ship Date NE DB1.Scheduled Ship Date
     C           ##JDT     IFNE WDAODT                     *IF
     C                     GOTO SOEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WDCCQT    #CQUOP           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSO     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Current/Aged Inv  RT - IC Item Balance Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0006  1        Age Code
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CJNNX           Inv Current
     C                     Z-ADD*ZERO     #CJONX           Inv Aged
     C                     MOVEL*BLANK    WN0006           Age Code
      * Declare restrictor key work fields
     C           *LIKE     DEFN WEAIC3    WQSP01           Company Number
     C           *LIKE     DEFN WEHGCD    WQSP02           Item Code
     C           *LIKE     DEFN WEAJCD    WQSP03           Warehouse Code
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WQSP01           Company Number
     C                     KFLD           WQSP02           Item Code
     C                     KFLD           WQSP03           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSP01           Company Number
     C                     Z-ADD#2HGCD    WQSP02           Item Code
     C                     MOVEL#2AJCD    WQSP03           Warehouse Code
      * Establish starting position
     C           KRSSP     SETLLCAB1RL4                    *
     C           KRSSP     READECAB1RL4                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      *
     C                     Z-ADD*ZERO     WN0007  70       @Date - ATR
     C                     Z-ADD*ZERO     WN0008  52       Warehouse Chill
     C                     Z-ADD*ZERO     WN0009  30       @CTL Nbr 3.0
     C                     MOVEL*BLANK    WN0010  1        Warehouse Std C
      *
      * CLC Age Code           IF
      * DOC: Change Log
     C                     EXSR UASUBR                     DOC: Change Log
      * Rtv Chilling Time     IF
      * Rtv Chill Time        RT - Company/Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEAIC3    WL0005           Company Number
     C                     Z-ADDWEHGCD    WL0006           Item Code
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0007    WN0008           Fresh Chilling
      *
     C                     Z-ADD*ZERO     WN0011 155       System Value Nu
      *
      * Rtv Whs Typ/FZNCHLTME IF
      * RTV Warehouse Type     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWEAJCD    WL0008    P      Warehouse Code
     C                     EXSR SLRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0009    WUWPST    P      Warehouse Type
      * CASE: PAR.Warehouse Type is Frozen
     C           WUWPST    IFEQ 'FZ'                       *IF
      * RTV Numeric Value      RT - Company Values  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWEAIC3    WL0010           Company Number
     C                     MOVEL@CN,01    WL0011    P      Company Value C
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    WN0011           System Value Nu
     C                     Z-ADDWN0011    WN0008           Fresh Chilling
     C                     END                             *FI
     C                     MOVEL*BLANK    WN0006           Text 1 Length U
     C                     Z-ADD##JDT     WN0007           @Date - ATR
      * PAR.@CTL Nbr 3.0 = PAR.@Date - ATR - PAR.Production Date *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WEELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WN0007    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0009
     C                     ELSE
     C           XDURR     MULT -1        WN0009
     C                     END
      * ** "H" = 7 -> 119, and "I" = 120+ days        S00735
      *
     C                     Z-ADD*ZERO     WN0012  50       Number of Days
      *
      * CLC Age Code for #days IF
      * ** Calulate the duration between 2 dates
      * PAR.Number of Days = PAR.USR To Date - PAR.USR From Date *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WEELDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           WN0007    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WN0012
     C                     ELSE
     C           XDURR     MULT -1        WN0012
     C                     END
      * ** Select the appropriate Age Code to pass back
      * CASE: PAR.Number of Days is <= Zero
     C           WN0012    IFLE *ZERO                      *IF
     C                     MOVEL'A'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 1
     C           WN0012    IFEQ 1                          *IF
     C                     MOVEL'B'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 2
     C           WN0012    IFEQ 2                          *IF
     C                     MOVEL'C'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 3
     C           WN0012    IFEQ 3                          *IF
     C                     MOVEL'D'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 4
     C           WN0012    IFEQ 4                          *IF
     C                     MOVEL'E'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 5
     C           WN0012    IFEQ 5                          *IF
     C                     MOVEL'F'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is EQ 6
     C           WN0012    IFEQ 6                          *IF
     C                     MOVEL'G'       WN0006           Age Code
     C                     ELSE
      * CASE: PAR.Number of Days is GE 120
     C           WN0012    IFGE 120                        *IF
     C                     MOVEL'I'       WN0006           Age Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'H'       WN0006           Age Code
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * ***** Change Log and Comments
     C                     EXSR UBSUBR                     ***** Change Lo
      * CASE: PAR.Age Code is 7days - 90 days & older
     C           WN0006    IFEQ 'H'                        *IF
     C           WN0006    OREQ 'I'
     C                     ADD  WEARQT    #CJONX           Inv Aged
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WEARQT    #CJNNX           Inv Current
     C                     END                             *FI
     C           KRSSP     READECAB1RL4                  90*
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Rtv Last Upd per Code  RT - AS Last Data Collection  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           MXAIC3           Company Number
     C                     KFLD           MXAQAA           AS Data Collect
      * Setup key
     C                     Z-ADD#2AIC3    MXAIC3           Company Number
     C                     MOVE *BLANK    MXAQAA           AS Data Collect
     C                     MOVEL'PROD'    MXAQAA           AS Data Collect
      * Establish starting position
     C           KRSSQ     CHAIN@MXCPYL              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2810' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     #CNIDT           AS Last Update
     C                     Z-ADD*ZERO     #CBKTM           AS Last Update
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDMXNIDT    #CNIDT           AS Last Update
     C                     Z-ADDMXBKTM    #CBKTM           AS Last Update
     C                     GOTO SQEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv Picked Qty Tot    RT - PFS Inventory Adjustment  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #COXQT           Quantity Picked
      * Declare restrictor key work fields
     C           *LIKE     DEFN BGY1NX    WQSR01           PFS Company Num
     C           *LIKE     DEFN BGU4SX    WQSR02           PFS Warehouse C
     C           *LIKE     DEFN BGY2NX    WQSR03           PFS Item Code
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           PFS Company Num
     C                     KFLD           WQSR02           PFS Warehouse C
     C                     KFLD           WQSR03           PFS Item Code
      * Setup key
     C                     Z-ADD#2AIC3    WQSR01           PFS Company Num
     C                     MOVEL#2AJCD    WQSR02           PFS Warehouse C
     C                     Z-ADD#2HGCD    WQSR03           PFS Item Code
      * Establish starting position
     C           KRSSR     SETLL@BGCPEG                    *
     C           KRSSR     READE@BGCPEG                  90*
      * Data record not found
     C   90                MOVEL'USR3496' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.PFS Transaction Type is SM: Ship Regular Order
      *   |- c2    : DB1.PFS Transaction Type is SM: Transfer Order
      *   '-
     C           BGVLSX    IFEQ 'S01'                      *IF
     C           BGVLSX    OREQ 'S02'                      *OR
     C                     ADD  BGBDNY    #COXQT           Quantity Picked
     C                     ELSE
      * CASE: *OTHERWISE
     C                     SUB  BGBDNY    #COXQT           Quantity Picked
     C                     END                             *FI
     C           KRSSR     READE@BGCPEG                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Tran qty by Trn TypRT - Item Transaction Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSS01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSS02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSS03           Warehouse Code
     C           *LIKE     DEFN B7ELDT    WQSS04           Production Date
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           WQSS01           Company Number
     C                     KFLD           WQSS02           Item Code
     C                     KFLD           WQSS03           Warehouse Code
     C                     KFLD           WQSS04           Production Date
      * Setup key
     C                     Z-ADDWL0013    WQSS01           Company Number
     C                     Z-ADDWL0014    WQSS02           Item Code
     C                     MOVELWL0015    WQSS03           Warehouse Code
     C                     Z-ADDWL0016    WQSS04           Production Date
      * Establish starting position
     C           KRSSS     SETLL@B7CPN0                    *
     C           KRSSS     READE@B7CPN0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0344' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     WL0017           Qty Produced
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.Shift Number is Not Entered
     C           WL0019    IFEQ *BLANK                     *IF
      * Check Selection Option for correct record selection
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.Select Option is Blank
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c3    : DB1.Reason Code is Production from Accu-Sort
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ *BLANK                     *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Select Option is Option 1
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ '1'                        *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Select Option is Option 2
     C           WL0018    IFEQ '2'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c2    : DB1.Inventory Trans. Type is Adjustment Quantity
      *   '-
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7BSST    OREQ 'A'                        *OR
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Shift Number EQ PAR.Shift Number
     C           B7XLCD    IFEQ WL0019                     *IF
      * Check Selection Option for correct record selection
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : PAR.Select Option is Blank
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c3    : DB1.Reason Code is Production from Accu-Sort
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ *BLANK                     *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7CQCD    IFEQ 'PRD'                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Select Option is Option 1
      *   |- c2    : DB1.Inventory Trans. Type is Receipt Production
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0018    IFEQ '1'                        *IF
     C           B7BSST    IFEQ 'RR'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Select Option is Option 2
     C           WL0018    IFEQ '2'                        *IF
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Inventory Trans. Type is Receipt Production
      *   |- c2    : DB1.Inventory Trans. Type is Adjustment Quantity
      *   '-
     C           B7BSST    IFEQ 'RR'                       *IF
     C           B7BSST    OREQ 'A'                        *OR
     C                     ADD  B7A5QT    WL0017           Qty Produced
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSS     READE@B7CPN0                  90*
     C                     ENDDO
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Order Age Quantity RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to Date for Qty Sched by Age
     C                     Z-ADD#1K7DT    YI0101           Label Date
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE #1K7DT
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     #RIRQT           Quantity Ordere
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWAAVQT    #RIRQT           Quantity Ordere
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SURVGN    BEGSR
      *================================================================
      * Rtv Picked Qty        RT - PFS Inventory Adjustment  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     #ROXQT           Quantity Picked
      * Declare restrictor key work fields
     C           *LIKE     DEFN BGY1NX    WQSU01           PFS Company Num
     C           *LIKE     DEFN BGU4SX    WQSU02           PFS Warehouse C
     C           *LIKE     DEFN BGY2NX    WQSU03           PFS Item Code
     C           *LIKE     DEFN BGZ4NX    WQSU04           PFS Label Date
      * Define keylist
     C           KRSSU     KLIST
     C                     KFLD           WQSU01           PFS Company Num
     C                     KFLD           WQSU02           PFS Warehouse C
     C                     KFLD           WQSU03           PFS Item Code
     C                     KFLD           WQSU04           PFS Label Date
      * Setup key
     C                     Z-ADD#1AIC3    WQSU01           PFS Company Num
     C                     MOVEL#1AJCD    WQSU02           PFS Warehouse C
     C                     Z-ADD#1HGCD    WQSU03           PFS Item Code
     C                     Z-ADDYL0004    WQSU04           PFS Label Date
      * Establish starting position
     C           KRSSU     SETLL@BGCPEG                    *
     C           KRSSU     READE@BGCPEG                  90*
      * Data record not found
     C   90                MOVEL'USR3496' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  BGBDNY    #ROXQT           Quantity Picked
     C           KRSSU     READE@BGCPEG                  90*
     C                     ENDDO
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSV01           Application Cod
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           WQSV01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSV01           Application Cod
     C                     MOVEL'I/C'     WQSV01           Application Cod
      * Establish starting position
     C           KRSSV     SETLL@DNRESF                    *
     C           KRSSV     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SWRVGN
     C                     END                             *FI
     C           KRSSV     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSW01           Application Cod
      * Define keylist
     C           KRSSW     KLIST
     C                     KFLD           WQSW01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSW01           Application Cod
      * Establish starting position
     C           KRSSW     SETLL@DNRESF                    *
     C           KRSSW     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSW     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * DOC: Change Log
      *================================================================
      * This internal function will calculate the Age Code.  The Age Code
      * is used in the Item/Warehouse Inquiry Details program (ICQ9DFR).
      * This internal function has been written for project INV033.
      *        John Tremper, March 12, 1998
      * 03/31/2009 LJB S00735
      *   Change to use a different CLC Age Code function so that
      *   7 thru 119 days will be "H" and 120+ days will be "I"
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * 4/10/07 PKD Commented out the Adjustment based on Chill.
      *             and Saturday Production.  Sunday and Holiday's will
      *             now be included in the ageing of the product.
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * This internal function will calculate the number of days
      * between two (passed in) dates, then select and pass back
      * the associated Age Code.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * DOC: Change Log
      *================================================================
      * This internal function will calculate the Age Code.  The Age Code
      * is used in the Item/Warehouse Inquiry Details program (ICQ9DFR).
      * This internal function has been written for project INV033.
      *        John Tremper, March 12, 1998
      * 03/31/2009 LJB S00735
      *   Change to use a different CLC Age Code function so that
      *   7 thru 119 days will be "H" and 120+ days will be "I"
      * 04/10/07 Effective 04/23/07 representation of Age Code changes
      *          will be such that Age Code A will be 0 day for boxes
      *          and combos.  The labels on the cartons will not print
      *          a date that is offset by Sunday or Holiday.  Instead of
      *          Code Date, it will be the Pack Date.
      * 4/10/07 PKD Commented out the Adjustment based on Chill.
      *             and Saturday Production.  Sunday and Holiday's will
      *             now be included in the ageing of the product.
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * This internal function will calculate the number of days
      * between two (passed in) dates, then select and pass back
      * the associated Age Code.
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     C                     MOVELV2AIC3    WK1X01  1
     C                     MOVELV2HGCD    WK1X02  1
     C                     MOVEL#2AJCD    WK1X03  1
     C           WK1X01    IFEQ '?'                        Company Number
     C           YPMTFD    OREQ '#2AIC3'
     C           WK1X02    OREQ '?'                        Item Code
     C           YPMTFD    OREQ '#2HGCD'
     C           WK1X03    OREQ '?'                        Warehouse Code
     C           YPMTFD    OREQ '#2AJCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2AIC3' defaulted for 'Company Number'.
      * Field '(CTL) #2AJCD' defaulted for 'Warehouse Code'.
      * Field '(CTL) #2HGCD' defaulted for 'Item Code'.
     C                     CLEARPARC
     C                     Z-ADD#2AIC3    PAAIC3           Company Number
     C                     MOVEL#2AJCD    PAAJCD    P      Warehouse Code
     C                     Z-ADD#2HGCD    PAHGCD           Item Code
      *
     C                     CALL 'PNMPSRR'              90  Sel Item
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Item Balan
      *
     C                     Z-ADDPAHGCD    #2HGCD           Item Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNMPSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #2AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X02    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2AJCD    IFNE *BLANK                     Warehouse Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X03    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VA999
     C                     END
     C                     END
      *................................................................
      *
     C           KLVAWF    KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFHGCD           Item Code
     C                     KFLD           WFAJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WFAIC3
     C                     Z-ADD#2HGCD    WFHGCD
     C                     MOVEL#2AJCD    WFAJCD
     C           KLVAWF    CHAIN@B0REJX              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
     C           VA999     TAG
      * Restrictor relation not satisfied
      * Send message 'Item Balance           NF'
     C                     MOVEL'USR0328' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'USR0328' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD15        ZHSTRW  40
     C                     Z-ADD20        ZHNDRW  40
     C                     Z-ADD2         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
      * USER: Exit program processing
      * CASE: CTL.*CMD key is *Exit
     C           *IN03     IFEQ '1'                        *IF
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1CHTM           Fresh Chilling
     C                     MOVEL*BLANK    P4OPTI           Select Option
     C                     Z-ADD*ZERO     P5GVDT           Production Date
     C                     Z-ADD*ZERO     P6NJDT           First Label Dat
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BLANK 1               USR
     C                     MOVEL*BLANK    WUJ1TX 25
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBELDT           Production Date
     C                     Z-ADD*ZERO     WBABWG           Physical Count
     C                     Z-ADD*ZERO     WBAGQT           Physical Count
     C                     Z-ADD*ZERO     WBAHQT           Physical Count
     C                     Z-ADD*ZERO     WBAIQT           Physical Count
     C                     Z-ADD*ZERO     WBACWG           Quantity on Han
     C                     Z-ADD*ZERO     WBARQT           Quantity on Han
     C                     Z-ADD*ZERO     WBASQT           Quantity on Han
     C                     Z-ADD*ZERO     WBATQT           Quantity on Han
     C                     Z-ADD*ZERO     WBHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WBHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WBBMWG           Physical Start
     C                     Z-ADD*ZERO     WBDSQT           Physical Start
     C                     Z-ADD*ZERO     WBDTQT           Physical Start
     C                     Z-ADD*ZERO     WBDUQT           Physical Start
     C                     Z-ADD*ZERO     WBDHDT           Physical Start
     C                     Z-ADD*ZERO     WBAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WBAECS           Last Cost
     C                     Z-ADD*ZERO     WBIDVA           Value of On Han
     C                     Z-ADD*ZERO     WBK7DT           Label Date
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Lot Tracking Flag
     C                     MOVEL*BLANK    WUVHST  1
      * Define work field Warehouse Type
     C                     MOVEL*BLANK    WUWPST  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WCBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WCBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WCBUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WCBVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDC4NB           Order Number
     C                     Z-ADD*ZERO     WDDPNB           Order Sequence
     C                     Z-ADD*ZERO     WDUENB           Order Secondary
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDBKC7           Ship To Custome
     C                     Z-ADD*ZERO     WDCFC7           Order Group Cod
     C                     Z-ADD*ZERO     WDMAVA           Billing Detail
     C                     Z-ADD*ZERO     WDKDVA           Billing Detail
     C                     Z-ADD*ZERO     WDL8VA           Billing Detail
     C                     Z-ADD*ZERO     WDL9VA           Quantity to Sub
     C                     Z-ADD*ZERO     WDAYVA           Extended Amount
     C                     Z-ADD*ZERO     WDEXDT           Market Pricing
     C                     Z-ADD*ZERO     WDBZPR           Price Overage O
     C                     Z-ADD*ZERO     WDL6NB           Contract Number
     C                     Z-ADD*ZERO     WDGIDT           Pricing Date Us
     C                     Z-ADD*ZERO     WDR1NB           Rated Freight
     C                     Z-ADD*ZERO     WDAVQT           Quantity Ordere
     C                     Z-ADD*ZERO     WDD0WG           Weight Ordered
     C                     Z-ADD*ZERO     WDCCQT           Quantity Schedu
     C                     Z-ADD*ZERO     WDAUWG           Weight Schedule
     C                     Z-ADD*ZERO     WDCBQT           Quantity Shippe
     C                     Z-ADD*ZERO     WDATWG           Weight Shipped
     C                     Z-ADD*ZERO     WDAQCS           Unit Cost Prici
     C                     Z-ADD*ZERO     WDAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WDAKPR           Unit Price
     C                     Z-ADD*ZERO     WDALPR           Unit Price - Cr
     C                     Z-ADD*ZERO     WDAUPR           Unit Price Orde
     C                     Z-ADD*ZERO     WDAVWG           Unit Weight Ord
     C                     Z-ADD*ZERO     WDA4WG           Tare Weight Tot
     C                     Z-ADD*ZERO     WDA5DT           Requested Ship
     C                     Z-ADD*ZERO     WDAODT           Scheduled Ship
     C                     Z-ADD*ZERO     WDGNDT           Actual Shipped
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDCXDT           Date of Origina
     C                     Z-ADD*ZERO     WDDUPR           Invoice Unit Pr
     C                     Z-ADD*ZERO     WDB6VL           Invoice Extende
     C                     Z-ADD*ZERO     WDA1AA           Ham Group Numbe
     C                     Z-ADD*ZERO     WDNTDT           Warehouse Palle
     C                     Z-ADD*ZERO     WDNUDT           Consumed Item C
     C                     Z-ADD*ZERO     WDNVDT           Deadline Depart
     C                     Z-ADD*ZERO     WDNWDT           OD Price Type R
     C                     Z-ADD*ZERO     WDNXDT           OD Unused Date
     C                     Z-ADD*ZERO     WDBUTM           Deadline Depart
     C                     Z-ADD*ZERO     WDBVTM           Price Code
     C                     Z-ADD*ZERO     WDBWTM           Maximum Net Wei
     C                     Z-ADD*ZERO     WDBXTM           Substitution Li
     C                     Z-ADD*ZERO     WDBYTM           Max Qty to sche
     C                     Z-ADD*ZERO     WDH5NX           Warehouse Palle
     C                     Z-ADD*ZERO     WDH6NX           Warehouse Avg P
     C                     Z-ADD*ZERO     WDH7NX           OD Item Target
     C                     Z-ADD*ZERO     WDH8NX           OD Minimum Unit
     C                     Z-ADD*ZERO     WDH9NX           OD Maximum Unit
     C                     Z-ADD*ZERO     WDDVPR           Order Gate Pric
     C                     Z-ADD*ZERO     WDDWPR           OD Base MKT Ovr
     C                     Z-ADD*ZERO     WDDXPR           OD Unused Prc 3
     C                     Z-ADD*ZERO     WDDYPR           OD Unused Prc 4
     C                     Z-ADD*ZERO     WDDZPR           OD Unused Prc 5
     C                     Z-ADD*ZERO     WDGSPR           OD Unused Prc 6
     C                     Z-ADD*ZERO     WDGTPR           OD Unused Prc 7
     C                     Z-ADD*ZERO     WDGUPR           OD Unused Prc 8
     C                     Z-ADD*ZERO     WDPEWG           Weight Amount E
     C                     Z-ADD*ZERO     WDRINY           Delv Ageing Day
     C                     Z-ADD*ZERO     WDTIDT           Production Ovr
     C                     Z-ADD*ZERO     WDTJDT           Production Ovr
     C                     Z-ADD*ZERO     WDTKDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WDTLDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WDTMDT           OD UnUsed Date
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field Status Flag 4  Y/N
     C                     MOVEL*BLANK    WUFMST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WFAIC3           Company Number
     C                     Z-ADD*ZERO     WFHGCD           Item Code
     C                     Z-ADD*ZERO     WFAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WFAECS           Last Cost
     C                     Z-ADD*ZERO     WFBACS           Cost per Primar
     C                     Z-ADD*ZERO     WFBBCS           Cost per Pricin
     C                     Z-ADD*ZERO     WFCBPR           Revaluation Cos
     C                     Z-ADD*ZERO     WFGUDT           Revaluation Eff
     C                     Z-ADD*ZERO     WFCTPR           Last Revaluatio
     C                     Z-ADD*ZERO     WFG4DT           Last Revaluatio
     C                     Z-ADD*ZERO     WFBOWG           On Hand Weight
     C                     Z-ADD*ZERO     WFDDQT           On Hand U/M1 Su
     C                     Z-ADD*ZERO     WFDEQT           On Hand U/M2 Su
     C                     Z-ADD*ZERO     WFDFQT           On Hand U/M3 Su
     C                     Z-ADD*ZERO     WFHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WFHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WFAJQT           Quantity Schedu
     C                     Z-ADD*ZERO     WFAQQT           Quantity on Sal
     C                     Z-ADD*ZERO     WFAUQT           Quantity on Pur
     C                     Z-ADD*ZERO     WFEMQT           Quantity on Tra
     C                     Z-ADD*ZERO     WFDOQT           Quantity Avail.
     C                     Z-ADD*ZERO     WFAKDT           Date of Last Or
     C                     Z-ADD*ZERO     WFANDT           Date of Last Sh
     C                     Z-ADD*ZERO     WFIDVA           Value of On Han
     C                     Z-ADD*ZERO     WFBZPC           Safety Allowanc
     C                     Z-ADD*ZERO     WFDGQT           Safety Allowanc
     C                     Z-ADD*ZERO     WFDIDT           Stock Out Date
     C                     Z-ADD*ZERO     WFBFDY           Lead Time - Las
     C                     Z-ADD*ZERO     WFDJDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WFBGDY           Lead Time - Nex
     C                     Z-ADD*ZERO     WFDKDT           Lead Time - Dat
     C                     Z-ADD*ZERO     WFDJQT           Usage Qty per C
     C                     Z-ADD*ZERO     WFBNWG           Usage Weight pe
     C                     Z-ADD*ZERO     WFDLDT           Inventory Manag
     C                     Z-ADD*ZERO     WFDPQT           Minimum Quantit
     C                     Z-ADD*ZERO     WFDQQT           Maximum Quantit
     C                     Z-ADD*ZERO     WFDMDT           Last Physical C
     C                     Z-ADD*ZERO     WFAKC8           Vendor - Item/W
     C                     Z-ADD*ZERO     WFRINB           Item Structure
     C                     Z-ADD*ZERO     WFRHNB           Item Structure
     C                     Z-ADD*ZERO     WFRGNB           Item Structure
     C                     Z-ADD*ZERO     WFAATM           Job Time
     C                     Z-ADD*ZERO     WFAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003  1
     C                     MOVEL*BLANK    WL0004  1
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     Z-ADD*ZERO     WL0006  70
     C                     Z-ADD*ZERO     WL0007  52
      * Define local variables for subroutine SLRVGN.
     C                     MOVEL*BLANK    WL0008  3
     C                     MOVEL*BLANK    WL0009  2
      * Define local variables for subroutine SMRVGN.
     C                     Z-ADD*ZERO     WL0010  30
     C                     MOVEL*BLANK    WL0011 10
     C                     Z-ADD*ZERO     WL0012 155
      * Define local variables for subroutine SSRVGN.
     C                     Z-ADD*ZERO     WL0013  30
     C                     Z-ADD*ZERO     WL0014  70
     C                     MOVEL*BLANK    WL0015  3
     C                     Z-ADD*ZERO     WL0016  70
     C                     Z-ADD*ZERO     WL0017  70
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  1
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Billing Activity Type
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0003  2
      * Define local work field PFS Label Date
     C                     Z-ADD*ZERO     YL0004  80
      * Define local work field Year Code
     C                     Z-ADD*ZERO     YL0005  40
      * Define local work field Month NBR USR
     C                     Z-ADD*ZERO     YL0006  20
      * Define local work field Day of Month USR
     C                     Z-ADD*ZERO     YL0007  20
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD03        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SVRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       WUTAST           First Time Flag
      * toggle quantity/weights -----> no = display quantities
     C                     MOVEL'N'       WUFMST           Status Flag 4
      * SFL Fold/Drop  RPG    US - /UT User Source  * 
     C                     Z-ADD6         ##SFPG
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** @CN
00001 FZNCHLTME
00002 W/ Rework-All
00003 W/ Rework & Adj
00004 W/O Rework-PRD
