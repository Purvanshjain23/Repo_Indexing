// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKM7PVR
// ?Date: 14.08.2025 Time: 02:52:14
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC 12/14/17 add Date chg F10
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr is Yes
IF WRK.First_Time_Flag_Usr = 'Y';

// DTL.BOH Company Number = PAR.CC Company Number
DTL.BOH_Company_Number = PAR.CC_Company_Number;

// WRK.First Time Flag Usr = CND.No
WRK.First_Time_Flag_Usr = 'N';

ENDIF;

//?USER: Process command keys

CASE;

// IF DTL.*CMD key is CF10
IF DTL.*CMD_key = '10';

// Call program Edt Company Control   E1.
CALL PROGRAM(Edt Company Control   E1) ('PKSOE1R');
PARAMETER(PAR.CC_Company_Number);

ENDIF;

//?USER: Validate fields

EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(LCL.Pmt_Current_Payment_Date);
PARAMETER(LCL.Pmt_Current_Payment_Step);
PARAMETER(WRK.PP_Commission_Paym_Error);
PARAMETER(WRK.PP_Payment_Error);
PARAMETER(WRK.PP_Unused_Nbr_1);
PARAMETER(WRK.PP_Repayment_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF DTL.TH Kill Date LT LCL.Pmt Current Payment Date
IF DTL.TH_Kill_Date < LCL.Pmt_Current_Payment_Date;

// Send error message - 'Kill Date &1 is less than the Current Payment Date &2.'
ERROR(PRK1127);
MSGPARM(DTL.TH_Kill_Date);
MSGPARM(LCL.Pmt_Current_Payment_Date);

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF LCL.Pmt Current Payment Date EQ DTL.TH Kill Date
IF LCL.Pmt_Current_Payment_Date = DTL.TH_Kill_Date;

// AND LCL.Pmt Current Payment Step is GT 1
AND LCL.Pmt_Current_Payment_Step > 1;

// Send error message - 'Payment Step for Kill Date is &1.  Process not allowed.'
ERROR(PRK1128);
MSGPARM(LCL.Pmt_Current_Payment_Step);

ENDIF;

ENDIF;

//?USER: User defined action

// WRK.Date Alpha USR = CVTVAR(DTL.TH Kill Date)
WRK.Date_Alpha_USR = CVTVAR(DTL.TH_Kill_Date);

// Execute command - 'SBM Hot Scl Upl Init'
EXECUTE COMMAND(PRK0796);
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.TH_Schedule_Kill_Shift);
PARAMETER(WRK.Date_Alpha_USR);

