// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for OMLZEFR
// ?Date: 14.08.2025 Time: 03:27:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


EXECUTE FUNCTION(RTV Cross Ref by Code  RT) TYPE(RTVOBJ) FILE(OMHMREP)          AC1258431;
PARAMETER(PAR.Accrual_Code);

//?Check for existing records for accrual code
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PGM.*Program mode = CND.*CHANGE
PGM.*Program_mode = 'CHG';

//?Check for existing records for accrual code
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

ENDIF;

//?EXPCOM RMC 10/21/04 Remove company from file
//?USER: Initialize subfile header

EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1221964;
PARAMETER(CTL.Accrual_Code);
PARAMETER(CTL.Accrual_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


//?USER: Initialize subfile record (existing record)

EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1221964;
PARAMETER(RCD.Non_Compatible_Accrual_Cd);
PARAMETER(RCD.USR_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


//?USER: Validate subfile record fields

EXECUTE FUNCTION(RTV Auto Flag, Desc    RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1258908;
PARAMETER(RCD.Non_Compatible_Accrual_Cd);
PARAMETER(RCD.USR_Description);
PARAMETER(RCD.Automatic_Accrual_Y_N);
PARAMETER(RCD.Accrual_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF RCD.Accrual Code EQ RCD.Non-Compatible Accrual Cd
IF RCD.Accrual_Code = RCD.Non_Compatible_Accrual_Cd;

// Send error message - 'Non-Compatible accrual code cannot equal accrual code.'
ERROR(USR1534);
MSGPARM(RCD.Non_Compatible_Accrual_Cd);

// IF RCD.Automatic Accrual (Y/N) is Yes
IF RCD.Automatic_Accrual_Y_N = 'Y';

// Send error message - 'Non-Compatible Accruals cannot be Auto Accruals.'
ERROR(USR1839);
MSGPARM(RCD.Non_Compatible_Accrual_Cd);

ENDIF;

CASE;

// IF RCD.*SFLSEL is *Delete request
IF RCD.*SFLSEL = '4'/'4';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT OM Accrual Cross R CR) TYPE(CRTOBJ) FILE(OMHMREP)          AC1221706;
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.Non_Compatible_Accrual_Cd);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(DLT OM Accrual Cross R DL) TYPE(DLTOBJ) FILE(OMHMREP)          AC1221708;
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.Non_Compatible_Accrual_Cd);

//?USER: Change DBF record

EXECUTE FUNCTION(CHG OM Accrual Cross R CH) TYPE(CHGOBJ) FILE(OMHMREP)          AC1221707;
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.Non_Compatible_Accrual_Cd);
PARAMETER(RCD.EDI_Status_1);
PARAMETER(RCD.EDI_Status_2);
PARAMETER(RCD.EDI_Status_3);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


