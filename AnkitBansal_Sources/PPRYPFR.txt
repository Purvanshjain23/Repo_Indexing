     H/TITLE Prt Partial Rej -ISC  PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/01/05  Time  : 16:16:04
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPOCQCPL7IF  E           K        DISK
      * RSQ : Yld Partial Transaction   Co/Dpt/tran Dt/tm/item
      *
     FPPBSCPL1IF  E           K        DISK
      * RTV : Inventory Stock Closing   Retrieval index
      *
     FOMBYREL1IF  E           K        DISK
      * RTV : Item Default              Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPPBSCPL0UF  E           K        DISK                      A
      * UPD : Inventory Stock Closing   Update index
      *
     FPPRYPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Partial Rej -ISC  PF  Print file
      *
     E                    #L7         7  1
     I@BSCPA5
      * Inventory Stock Closing   Update index
      * Renamed input format fields
     I              BSAIDX                          WAAIDX
     I              BSB2C3                          WAB2C3
     I              BSGRAA                          WAGRAA
     I              BSEJC7                          WAEJC7
     I              BSV8SX                          WAV8SX
     I              BSGPAA                          WAGPAA
     I              BSGQAA                          WAGQAA
     I              BSW1SX                          WAW1SX
     I              BSF3PR                          WAF3PR
     I              BSBSNY                          WABSNY
     I              BSBTNY                          WABTNY
     I              BSBUNY                          WABUNY
     I              BSGSAA                          WAGSAA
     I              BSGTAA                          WAGTAA
     I              BSOEQT                          WAOEQT
     I              BSMQWG                          WAMQWG
     I              BSOFQT                          WAOFQT
     I              BSMRWG                          WAMRWG
     I              BSOGQT                          WAOGQT
     I              BSMXWG                          WAMXWG
     I              BSOHQT                          WAOHQT
     I              BSMSWG                          WAMSWG
     I              BSOWQT                          WAOWQT
     I              BSNAWG                          WANAWG
     I              BSOIQT                          WAOIQT
     I              BSMTWG                          WAMTWG
     I              BSOJQT                          WAOJQT
     I              BSMUWG                          WAMUWG
     I              BSOKQT                          WAOKQT
     I              BSMVWG                          WAMVWG
     I              BSOLQT                          WAOLQT
     I              BSMWWG                          WAMWWG
     I              BSFQVL                          WAFQVL
     I              BSOMQT                          WAOMQT
     I              BSMYWG                          WAMYWG
     I              BSONQT                          WAONQT
     I              BSMZWG                          WAMZWG
     I              BSOOQT                          WAOOQT
     I              BSM0WG                          WAM0WG
     I              BSDGVN                          WADGVN
     I              BSP9DT                          WAP9DT
     I              BSCTTM                          WACTTM
     I              BSOPQT                          WAOPQT
     I              BSM1WG                          WAM1WG
     I              BSOQQT                          WAOQQT
     I              BSM2WG                          WAM2WG
     I              BSORQT                          WAORQT
     I              BSM3WG                          WAM3WG
     I              BSOSQT                          WAOSQT
     I              BSM4WG                          WAM4WG
     I              BSRCNA                          WARCNA
     I              BSDFVN                          WADFVN
     I              BSP8DT                          WAP8DT
     I              BSCSTM                          WACSTM
     I              BSOTQT                          WAOTQT
     I              BSM5WG                          WAM5WG
     I              BSF4PR                          WAF4PR
     I              BSWBSX                          WAWBSX
     I              BSWNSX                          WAWNSX
     I              BSWOSX                          WAWOSX
     I              BSOUQT                          WAOUQT
     I              BSM6WG                          WAM6WG
     I              BSOVQT                          WAOVQT
     I              BSM7WG                          WAM7WG
     I              BSWCSX                          WAWCSX
     I              BSQADT                          WAQADT
     I              BSWDSX                          WAWDSX
     I              BSVSST                          WAVSST
     I              BSMJDT                          WAMJDT
     I              BSBETM                          WABETM
     I              BSCCVN                          WACCVN
     I              BSCDVN                          WACDVN
     I              BSMKDT                          WAMKDT
     I              BSBFTM                          WABFTM
     I              BSCEVN                          WACEVN
     I              BSCFVN                          WACFVN
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IQPPBS1    E DSPPBSCPL0
      * UPD : Inventory Stock Closing   Update index
      * Renamed input format fields
     I              BSAIDX                          WAAIDX
     I              BSB2C3                          WAB2C3
     I              BSGRAA                          WAGRAA
     I              BSEJC7                          WAEJC7
     I              BSV8SX                          WAV8SX
     I              BSGPAA                          WAGPAA
     I              BSGQAA                          WAGQAA
     I              BSW1SX                          WAW1SX
     I              BSF3PR                          WAF3PR
     I              BSBSNY                          WABSNY
     I              BSBTNY                          WABTNY
     I              BSBUNY                          WABUNY
     I              BSGSAA                          WAGSAA
     I              BSGTAA                          WAGTAA
     I              BSOEQT                          WAOEQT
     I              BSMQWG                          WAMQWG
     I              BSOFQT                          WAOFQT
     I              BSMRWG                          WAMRWG
     I              BSOGQT                          WAOGQT
     I              BSMXWG                          WAMXWG
     I              BSOHQT                          WAOHQT
     I              BSMSWG                          WAMSWG
     I              BSOWQT                          WAOWQT
     I              BSNAWG                          WANAWG
     I              BSOIQT                          WAOIQT
     I              BSMTWG                          WAMTWG
     I              BSOJQT                          WAOJQT
     I              BSMUWG                          WAMUWG
     I              BSOKQT                          WAOKQT
     I              BSMVWG                          WAMVWG
     I              BSOLQT                          WAOLQT
     I              BSMWWG                          WAMWWG
     I              BSFQVL                          WAFQVL
     I              BSOMQT                          WAOMQT
     I              BSMYWG                          WAMYWG
     I              BSONQT                          WAONQT
     I              BSMZWG                          WAMZWG
     I              BSOOQT                          WAOOQT
     I              BSM0WG                          WAM0WG
     I              BSDGVN                          WADGVN
     I              BSP9DT                          WAP9DT
     I              BSCTTM                          WACTTM
     I              BSOPQT                          WAOPQT
     I              BSM1WG                          WAM1WG
     I              BSOQQT                          WAOQQT
     I              BSM2WG                          WAM2WG
     I              BSORQT                          WAORQT
     I              BSM3WG                          WAM3WG
     I              BSOSQT                          WAOSQT
     I              BSM4WG                          WAM4WG
     I              BSRCNA                          WARCNA
     I              BSDFVN                          WADFVN
     I              BSP8DT                          WAP8DT
     I              BSCSTM                          WACSTM
     I              BSOTQT                          WAOTQT
     I              BSM5WG                          WAM5WG
     I              BSF4PR                          WAF4PR
     I              BSWBSX                          WAWBSX
     I              BSWNSX                          WAWNSX
     I              BSWOSX                          WAWOSX
     I              BSOUQT                          WAOUQT
     I              BSM6WG                          WAM6WG
     I              BSOVQT                          WAOVQT
     I              BSM7WG                          WAM7WG
     I              BSWCSX                          WAWCSX
     I              BSQADT                          WAQADT
     I              BSWDSX                          WAWDSX
     I              BSVSST                          WAVSST
     I              BSMJDT                          WAMJDT
     I              BSBETM                          WABETM
     I              BSCCVN                          WACCVN
     I              BSCDVN                          WACDVN
     I              BSMKDT                          WAMKDT
     I              BSBFTM                          WABFTM
     I              BSCEVN                          WACEVN
     I              BSCFVN                          WACFVN
      *
     IYARDCS      DS                            447
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Yld Partial Transaction
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Department Code
     I                                        3   8 P1R3CD
      * I : RST Transaction Date Code
     I                                    P   9  120P1B4DT
     IP2PARM      DS
      * I :  ISC Week Ending Date
     I                                    P   1   50P2AIDX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1R3CD    PARM           WP0002  6        Department Code
     C           P1B4DT    PARM           WP0003  70       Transaction Dat
     C           P2AIDX    PARM           WP0004  80       ISC Week Ending
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Partial Rej -ISC  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$HENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Partial Rej -ISC  PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN CQAIC3    WQKA01           Company Number
     C           *LIKE     DEFN CQR3CD    WQKA02           Department Code
     C           *LIKE     DEFN CQB4DT    WQKA03           Transaction Dat
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
     C                     KFLD           WQKA02           Department Code
     C                     KFLD           WQKA03           Transaction Dat
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
     C                     MOVELP1R3CD    WQKA02           Department Code
     C                     Z-ADDP1B4DT    WQKA03           Transaction Dat
      * Establish starting position
     C           KRSA      SETLL@CQCPDJ                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Department Code
     C                     MOVEL'Y'       W0AL02  1        Transaction Dat
     C                     MOVEL'Y'       W0AL03  1        Transaction Tim
     C                     MOVEL'Y'       W0AL04  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDCQAIC3    $DAIC3           Company Number
     C                     MOVELCQR3CD    $DR3CD           Department Code
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDCQAIC3    $EAIC3           Company Number
     C                     MOVELCQR3CD    $ER3CD           Department Code
     C                     Z-ADDCQB4DT    $EB4DT           Transaction Dat
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDCQAIC3    $GAIC3           Company Number
     C                     Z-ADDCQHGCD    $GHGCD           Item Code
     C                     Z-ADD*ZERO     $GM0VI           Quantity Ordere
     C                     Z-ADD*ZERO     $GO1NB           Weight 1.1
     C                     Z-ADD*ZERO     $GMVII           Quantity Ordere
     C                     Z-ADD*ZERO     $GO3NB           Weight 1.2
     C                     Z-ADDCQELDT    $GELDT           Production Date
     C                     MOVELCQN3SX    $GN3SX           Production Shif
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDCQAIC3    $FAIC3           Company Number
     C                     MOVELCQR3CD    $FR3CD           Department Code
     C                     MOVELCQEWAA    $FEWAA           Production Line
     C                     Z-ADDCQB4DT    $FB4DT           Transaction Dat
     C                     Z-ADDCQCDTM    $FCDTM           Transaction Tim
     C                     Z-ADDCQCMNB    $FCMNB           Partial Item Co
     C                     Z-ADDCQTZNX    $FTZNX           Yld Transaction
     C                     Z-ADDCQHGCD    $FHGCD           Item Code
     C                     Z-ADDCQELDT    $FELDT           Production Date
     C                     MOVELCQN3SX    $FN3SX           Production Shif
     C                     Z-ADDCQT0NX    $FT0NX           Yld Transaction
     C                     Z-ADDCQJSWG    $FJSWG           Yld Transaction
     C                     MOVELCQCVT1    $FCVT1           Yld Transaction
     C                     MOVELCQN6SX    $FN6SX           Yld Transaction
     C                     MOVELCQOISX    $FOISX           Yld Inv Balance
     C                     Z-ADDCQRGNB    $FRGNB           Item Structure
     C                     Z-ADDCQRHNB    $FRHNB           Item Structure
     C                     Z-ADDCQRINB    $FRINB           Item Structure
     C                     MOVELCQUVST    $FUVST           EDI Status 1
     C                     MOVELCQUWST    $FUWST           EDI Status 2
     C                     MOVELCQUXST    $FUXST           EDI Status 3
     C                     MOVELCQVSST    $FVSST           Record Status
     C                     Z-ADDCQAATM    $FAATM           Job Time
     C                     MOVELCQAYNA    $FAYNA           User Id
     C                     MOVELCQA0NA    $FA0NA           Job Name
     C                     Z-ADDCQAXDT    $FAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
      * CASE: DB1.Yld Inv Balance Type is Partial
     C           CQOISX    IFEQ 'PT'                       *IF
     C                     ADD  $FT0NX    $GM0VI           Quantity Ordere
     C                     ADD  $FJSWG    $GO1NB           Weight 1.1
     C                     ELSE
      * CASE: DB1.Yld Inv Balance Type is WIP Reject
     C           CQOISX    IFEQ 'RJ'                       *IF
     C                     ADD  $FT0NX    $GMVII           Quantity Ordere
     C                     ADD  $FJSWG    $GO3NB           Weight 1.2
     C                     END                             *FI
     C                     END                             *FI
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN CQAIC3    WZA001           Company Number
     C                     Z-ADDCQAIC3    WZA001
     C           *LIKE     DEFN CQR3CD    WZA002           Department Code
     C                     MOVELCQR3CD    WZA002
     C           *LIKE     DEFN CQB4DT    WZA003           Transaction Dat
     C                     Z-ADDCQB4DT    WZA003
     C           *LIKE     DEFN CQCDTM    WZA004           Transaction Tim
     C                     Z-ADDCQCDTM    WZA004
     C           *LIKE     DEFN CQHGCD    WZA005           Item Code
     C                     Z-ADDCQHGCD    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@CQCPDJ                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.Yld Inv Balance Type is Partial
      *   |- c2    : DB1.Yld Inv Balance Type is WIP Reject
      *   '-
     C           CQOISX    IFEQ 'PT'                       *IF
     C           CQOISX    OREQ 'RJ'                       *OR
      * Want positive qtys only
      * CASE: DB1.Yld Transaction Quantity is LE Zero
     C           CQT0NX    IFLE *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Department Code
     C                     MOVEL*BLANK    W0AL02  1        Transaction Dat
     C                     MOVEL*BLANK    W0AL03  1        Transaction Tim
     C                     MOVEL*BLANK    W0AL04  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Department Code
     C                     MOVEL'Y'       W0AL02  1        Transaction Dat
     C                     MOVEL'Y'       W0AL03  1        Transaction Tim
     C                     MOVEL'Y'       W0AL04  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           CQAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           CQR3CD    IFNE WZA002                     Department Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           CQB4DT    IFNE WZA003                     Transaction Dat
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           CQCDTM    IFNE WZA004                     Transaction Tim
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           CQHGCD    IFNE WZA005                     Item Code
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $GHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$GHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VGHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$GKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
      * USER: Process after print of Item Code format
      * CASE:
      *  - c1ORc2
      *   |- c1    : CUR.Quantity Ordered 1    SUM is Entered
      *   |- c2    : CUR.Quantity Ordered 2    SUM is Entered
      *   '-
     C           $GM0VI    IFGT 0                          *IF
     C           $GMVII    ORGT 0                          *OR
      * Assume the FRESH whse.  Plug in Triumph's fresh warehouse when kn
      * CASE: CUR.Company Number is Guymon
     C           $GAIC3    IFEQ 360                        *IF
     C                     MOVEL'GP1'     WUGRAA           ISC Warehouse C
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'SJ1'     WUGRAA           ISC Warehouse C
     C                     END                             *FI
     C           $GM0VI    ADD  $GMVII    WUORQT           ISC End Inv Par
     C           $GO1NB    ADD  $GO3NB    WUM3WG           ISC End Inv Par
      * Rtv Chg PT,RJ Qty     RT - Inventory Stock Closing  * 
     C                     EXSR SARVGN
     C                     END                             *FI
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Print format
     C                     WRITE$C1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Department Code of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Transaction Date Code of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Convert fields to external form
      * Convert Transaction Date Code to display format
      * Convert date
     C           1000000   ADD  $EB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEB4DT
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Transaction Time of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Item Code of Prt Partial Rej -ISC  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Partial Rej -ISC  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * Convert fields to external form
      * Convert Partial Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FCMNB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FCMNB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFCMNB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFCMNB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  $FELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFELDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Partial Rej -ISC  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Partial Rej -ISC  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Department Code of Prt Partial Rej -ISC  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Transaction Date Code of Prt Partial Rej -ISC  PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * Transaction Time of Prt Partial Rej -ISC  PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Partial Rej -ISC  PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Partial Rej -ISC  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD5         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Chg PT,RJ Qty     RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BSAIDX           ISC Week Ending
     C                     KFLD           BSB2C3           ISC Warehouse C
     C                     KFLD           BSGRAA           ISC Warehouse C
     C                     KFLD           BSEJC7           ISC Item Code
      * Setup key
     C                     Z-ADDP2AIDX    BSAIDX           ISC Week Ending
     C                     Z-ADD$GAIC3    BSB2C3           ISC Warehouse C
     C                     MOVELWUGRAA    BSGRAA           ISC Warehouse C
     C                     Z-ADD$GHGCD    BSEJC7           ISC Item Code
      * Establish starting position
     C           KRSSA     CHAIN@BSCPA6              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3529' W0RTN   7
      * USER: Processing if Data record not found
      * Rtv Inv Stock Closing RT - Item Default  * 
     C                     EXSR SBRVGN
      * Rtv Inv Stock Closing RT - Company Item  * 
     C                     EXSR SCRVGN
      * RTV Warehouse Type     RT - Warehouse  * 
     C                     EXSR SDRVGN
     C                     MOVEL'O'       WUWNSX           ISC Post Balanc
     C                     MOVEL'O'       WUWOSX           ISC Post Wareho
      * Crt Inventory Stock   CR - Inventory Stock Closing  * 
     C                     EXSR SECRRC
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     ADD  BSM3WG    WUM3WG           ISC End Inv Par
     C                     ADD  BSORQT    WUORQT           ISC End Inv Par
      * Chg Inventory Stock   CH - Inventory Stock Closing  * 
     C                     EXSR SFCHRC
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Inv Stock Closing RT - Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           BYHGCD           Item Code
      * Setup key
     C                     Z-ADD$GHGCD    BYHGCD           Item Code
      * Establish starting position
     C           KRSSB     CHAIN@BYREA1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1160' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBYAVNA    WUAVNA           Description Lin
     C                     Z-ADDBYRINB    WUBUNY           Item Structure
     C                     Z-ADDBYRHNB    WUBTNY           Item Structure
     C                     Z-ADDBYRGNB    WUBSNY           Item Structure
     C                     MOVELBYLNCD    WUGQAA           Default Commod
     C                     MOVELBYN0CD    WUW1SX           Item Type Code
     C                     MOVELBYLRCD    WUGPAA           Commodity Price
     C                     MOVELBYSYCD    WUGSAA           G/L Sub Code
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Inv Stock Closing RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD$GAIC3    BZAIC3           Company Number
     C                     Z-ADD$GHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSC     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUGTAA           U/M - Pricing
     C                     Z-ADD*ZERO     WUF3PR           Market Overage
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAICD    WUGTAA           U/M - Pricing
     C                     Z-ADDBZBLPR    WUF3PR           Market Overage
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Warehouse Type     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVELWUGRAA    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUV8SX           Warehouse Type
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADWPST    WUV8SX           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * Crt Inventory Stock   CR - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @BSCPA5
     C                     Z-ADDP2AIDX    WAAIDX           ISC Week Ending
     C                     Z-ADD$GAIC3    WAB2C3           ISC Warehouse C
     C                     MOVELWUGRAA    WAGRAA           ISC Warehouse C
     C                     Z-ADD$GHGCD    WAEJC7           ISC Item Code
     C                     MOVELWUV8SX    WAV8SX           ISC Warehouse T
     C                     MOVELWUGPAA    WAGPAA           ISC Item Cmdty
     C                     MOVELWUGQAA    WAGQAA           ISC Item Dft Cm
     C                     MOVELWUW1SX    WAW1SX           ISC Item Type
     C                     Z-ADDWUF3PR    WAF3PR           ISC Item Market
     C                     Z-ADDWUBSNY    WABSNY           ISC Item Struct
     C                     Z-ADDWUBTNY    WABTNY           ISC Item Struct
     C                     Z-ADDWUBUNY    WABUNY           ISC Item Struct
     C                     MOVELWUGSAA    WAGSAA           ISC Item G/L Su
     C                     MOVELWUGTAA    WAGTAA           ISC Item U/M -
     C                     Z-ADD*ZERO     WAOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAOFQT           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAMRWG           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAOGQT           ISC Beg Inv Qty
     C                     Z-ADD*ZERO     WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADD*ZERO     WAOHQT           ISC Floor Produ
     C                     Z-ADD*ZERO     WAMSWG           ISC Floor Produ
     C                     Z-ADD*ZERO     WAOWQT           ISC Floor Prod
     C                     Z-ADD*ZERO     WANAWG           ISC Floor Prod
     C                     Z-ADD*ZERO     WAOIQT           ISC Sales Produ
     C                     Z-ADD*ZERO     WAMTWG           ISC Sales Produ
     C                     Z-ADD*ZERO     WAOJQT           ISC Inventory S
     C                     Z-ADD*ZERO     WAMUWG           ISC Inventory S
     C                     Z-ADD*ZERO     WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAOLQT           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAMWWG           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAFQVL           ISC FOB Gross A
     C                     Z-ADD*ZERO     WAOMQT           ISC Inventory T
     C                     Z-ADD*ZERO     WAMYWG           ISC Inventory T
     C                     Z-ADD*ZERO     WAONQT           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAMZWG           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAOOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     WAM0WG           ISC Ending Inve
     C                     MOVEL*BLANK    WADGVN           ISC End Inv Use
     C                     Z-ADD*ZERO     WAP9DT           ISC End Inv Dat
     C                     Z-ADD*ZERO     WACTTM           ISC End Inv Tim
     C                     Z-ADD*ZERO     WAOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAM2WG           ISC Unsh/Ship I
     C                     Z-ADDWUORQT    WAORQT           ISC End Inv Par
     C                     Z-ADDWUM3WG    WAM3WG           ISC End Inv Par
     C                     Z-ADD*ZERO     WAOSQT           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAM4WG           ISC End Inv Adj
     C                     MOVEL*BLANK    WARCNA           ISC End Inv Adj
     C                     MOVEL*BLANK    WADFVN           ISC Ending Inv
     C                     Z-ADD*ZERO     WAP8DT           ISC Ending Inv
     C                     Z-ADD*ZERO     WACSTM           ISC Ending Inv
     C                     Z-ADD*ZERO     WAOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAF4PR           ISC Warehouse P
     C                     MOVELWUOTTX    WAWBSX           ISC Warehouse P
     C                     MOVELWUWNSX    WAWNSX           ISC Post Balanc
     C                     MOVELWUWOSX    WAWOSX           ISC Post Wareho
     C                     Z-ADD*ZERO     WAOUQT           ISC Unused Qty
     C                     Z-ADD*ZERO     WAM6WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAOVQT           ISC Unused Qty
     C                     Z-ADD*ZERO     WAM7WG           ISC Unused Lbs
     C                     MOVELWUWCSX    WAWCSX           ISC Unused Sts
     C                     Z-ADD*ZERO     WAQADT           ISC Unused Date
     C                     MOVELWUWDSX    WAWDSX           ISC Unused Sts
     C                     MOVEL'A'       WAVSST           Record Status
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     MOVEL*BLANK    WACCVN           Create User
     C                     MOVEL*BLANK    WACDVN           Create Program
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
     C                     MOVEL*BLANK    WACEVN           Change User
     C                     MOVEL*BLANK    WACFVN           Change Program
      *
      * USER: Processing before Data update
      * Set Crt Date/Time      IF
      * *** Set RECORD STATUS field. ***
     C                     MOVEL'A'       WAVSST           Record Status
      * *** Set CREATE fields. ***
     C                     Z-ADD##JDT     WAMJDT           Create Date
     C                     Z-ADD##JTM     WABETM           Create Time
     C                     MOVEL##USR     WACCVN           Create User
     C                     MOVEL##PGM     WACDVN           Create Program
      * *** Set CHANGE fields. ***
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
     C                     MOVEL*BLANK    WACEVN           Change User
     C                     MOVEL*BLANK    WACFVN           Change Program
      * Compute:Ending Inv Fin Qt
      * DB1.ISC End Inv Final Qty =
      *    *COMPUTE (x1 + x2 + x3 +x4 + x5)
      * x1    : DB1.ISC Ending Inventory Qty
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Sun Shp Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x4    : DB1.ISC Unsh/Ship Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x5    : DB1.ISC End Inv Partial Qty
     C           WAOOQT    ADD  WAOSQT    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WAOPQT    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WAOQQT    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WAORQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WAOTQT           ISC End Inv Fin
      * Compute:Ending Inv Fin Lb
      * DB1.ISC End Inv Final Lbs =
      *    *COMPUTE (x1 + x2 + x3 +x4 + x5)
      * x1    : DB1.ISC Ending Inventory Lbs
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Sun Shp Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x4    : DB1.ISC Unsh/Ship Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x5    : DB1.ISC End Inv Partial Lbs
     C           WAM0WG    ADD  WAM4WG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WAM1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WAM2WG    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WAM3WG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WAM5WG           ISC End Inv Fin
     C           KLCRSE    KLIST
     C                     KFLD           WAAIDX           ISC Week Ending
     C                     KFLD           WAB2C3           ISC Warehouse C
     C                     KFLD           WAGRAA           ISC Warehouse C
     C                     KFLD           WAEJC7           ISC Item Code
      * Check for duplicate primary key
     C           KLCRSE    SETLL@BSCPA5                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3530' W0RTN   7
      * Send message 'Inventory Stock Closin EX'
     C                     MOVEL'USR3530' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     WRITE@BSCPA5                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCHRC    BEGSR
      *================================================================
      * Chg Inventory Stock   CH - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @BSCPA5
     C                     Z-ADDBSAIDX    WAAIDX           ISC Week Ending
     C                     Z-ADDBSB2C3    WAB2C3           ISC Warehouse C
     C                     MOVELBSGRAA    WAGRAA    P      ISC Warehouse C
     C                     Z-ADDBSEJC7    WAEJC7           ISC Item Code
      *
     C           KLCHSF    KLIST
     C                     KFLD           WAAIDX           ISC Week Ending
     C                     KFLD           WAB2C3           ISC Warehouse C
     C                     KFLD           WAGRAA           ISC Warehouse C
     C                     KFLD           WAEJC7           ISC Item Code
     C           KLCHSF    CHAIN@BSCPA5              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PPBSCPL0'MDACP
     C                     MOVEL'@BSCPA5' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPPBS1    YARDCS
      * Move non-key fields to @BSCPA5
     C                     MOVELBSV8SX    WAV8SX    P      ISC Warehouse T
     C                     MOVELBSGPAA    WAGPAA    P      ISC Item Cmdty
     C                     MOVELBSGQAA    WAGQAA    P      ISC Item Dft Cm
     C                     MOVELBSW1SX    WAW1SX    P      ISC Item Type
     C                     Z-ADDBSF3PR    WAF3PR           ISC Item Market
     C                     Z-ADDBSBSNY    WABSNY           ISC Item Struct
     C                     Z-ADDBSBTNY    WABTNY           ISC Item Struct
     C                     Z-ADDBSBUNY    WABUNY           ISC Item Struct
     C                     MOVELBSGSAA    WAGSAA    P      ISC Item G/L Su
     C                     MOVELBSGTAA    WAGTAA    P      ISC Item U/M -
     C                     Z-ADDBSOEQT    WAOEQT           ISC Beg Inv Fin
     C                     Z-ADDBSMQWG    WAMQWG           ISC Beg Inv Fin
     C                     Z-ADDBSOFQT    WAOFQT           ISC Beg Inv Adj
     C                     Z-ADDBSMRWG    WAMRWG           ISC Beg Inv Adj
     C                     Z-ADDBSOGQT    WAOGQT           ISC Beg Inv Qty
     C                     Z-ADDBSMXWG    WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADDBSOHQT    WAOHQT           ISC Floor Produ
     C                     Z-ADDBSMSWG    WAMSWG           ISC Floor Produ
     C                     Z-ADDBSOWQT    WAOWQT           ISC Floor Prod
     C                     Z-ADDBSNAWG    WANAWG           ISC Floor Prod
     C                     Z-ADDBSOIQT    WAOIQT           ISC Sales Produ
     C                     Z-ADDBSMTWG    WAMTWG           ISC Sales Produ
     C                     Z-ADDBSOJQT    WAOJQT           ISC Inventory S
     C                     Z-ADDBSMUWG    WAMUWG           ISC Inventory S
     C                     Z-ADDBSOKQT    WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADDBSMVWG    WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADDBSOLQT    WAOLQT           ISC Shipment Fi
     C                     Z-ADDBSMWWG    WAMWWG           ISC Shipment Fi
     C                     Z-ADDBSFQVL    WAFQVL           ISC FOB Gross A
     C                     Z-ADDBSOMQT    WAOMQT           ISC Inventory T
     C                     Z-ADDBSMYWG    WAMYWG           ISC Inventory T
     C                     Z-ADDBSONQT    WAONQT           ISC Misc Invntr
     C                     Z-ADDBSMZWG    WAMZWG           ISC Misc Invntr
     C                     Z-ADDBSOOQT    WAOOQT           ISC Ending Inve
     C                     Z-ADDBSM0WG    WAM0WG           ISC Ending Inve
     C                     MOVELBSDGVN    WADGVN    P      ISC End Inv Use
     C                     Z-ADDBSP9DT    WAP9DT           ISC End Inv Dat
     C                     Z-ADDBSCTTM    WACTTM           ISC End Inv Tim
     C                     Z-ADDBSOPQT    WAOPQT           ISC Sun Shp Inv
     C                     Z-ADDBSM1WG    WAM1WG           ISC Sun Shp Inv
     C                     Z-ADDBSOQQT    WAOQQT           ISC Unsh/Ship I
     C                     Z-ADDBSM2WG    WAM2WG           ISC Unsh/Ship I
     C                     Z-ADDWUORQT    WAORQT           ISC End Inv Par
     C                     Z-ADDWUM3WG    WAM3WG           ISC End Inv Par
     C                     Z-ADDBSOSQT    WAOSQT           ISC End Inv Adj
     C                     Z-ADDBSM4WG    WAM4WG           ISC End Inv Adj
     C                     MOVELBSRCNA    WARCNA    P      ISC End Inv Adj
     C                     MOVELBSDFVN    WADFVN    P      ISC Ending Inv
     C                     Z-ADDBSP8DT    WAP8DT           ISC Ending Inv
     C                     Z-ADDBSCSTM    WACSTM           ISC Ending Inv
     C                     Z-ADDBSOTQT    WAOTQT           ISC End Inv Fin
     C                     Z-ADDBSM5WG    WAM5WG           ISC End Inv Fin
     C                     Z-ADDBSF4PR    WAF4PR           ISC Warehouse P
     C                     MOVELBSWBSX    WAWBSX    P      ISC Warehouse P
     C                     MOVELBSWNSX    WAWNSX    P      ISC Post Balanc
     C                     MOVELBSWOSX    WAWOSX    P      ISC Post Wareho
     C                     Z-ADDBSOUQT    WAOUQT           ISC Unused Qty
     C                     Z-ADDBSM6WG    WAM6WG           ISC Unused Lbs
     C                     Z-ADDBSOVQT    WAOVQT           ISC Unused Qty
     C                     Z-ADDBSM7WG    WAM7WG           ISC Unused Lbs
     C                     MOVELBSWCSX    WAWCSX    P      ISC Unused Sts
     C                     Z-ADDBSQADT    WAQADT           ISC Unused Date
     C                     MOVELBSWDSX    WAWDSX    P      ISC Unused Sts
     C                     MOVELBSVSST    WAVSST    P      Record Status
     C                     Z-ADDBSMJDT    WAMJDT           Create Date
     C                     Z-ADDBSBETM    WABETM           Create Time
     C                     MOVELBSCCVN    WACCVN    P      Create User
     C                     MOVELBSCDVN    WACDVN    P      Create Program
     C                     Z-ADDBSMKDT    WAMKDT           Change Date
     C                     Z-ADDBSBFTM    WABFTM           Change Time
     C                     MOVELBSCEVN    WACEVN    P      Change User
     C                     MOVELBSCFVN    WACFVN    P      Change Program
      *
      * Set PGM.*Record Data Changed flag
     C           QPPBS1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Chg Date/Time      IF
     C                     Z-ADD##JDT     WAMKDT           Change Date
     C                     Z-ADD##JTM     WABFTM           Change Time
     C                     MOVEL##USR     WACEVN           Change User
     C                     MOVEL##PGM     WACFVN           Change Program
      * Compute:Ending Inv Fin Qt
      * DB1.ISC End Inv Final Qty =
      *    *COMPUTE (x1 + x2 + x3 +x4 + x5)
      * x1    : DB1.ISC Ending Inventory Qty
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Sun Shp Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x4    : DB1.ISC Unsh/Ship Inv Adj Qty
      * +     : PGM.*Synon (15,2) work field
      * x5    : DB1.ISC End Inv Partial Qty
     C           WAOOQT    ADD  WAOSQT    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WAOPQT    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WAOQQT    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WAORQT    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WAOTQT           ISC End Inv Fin
      * Compute:Ending Inv Fin Lb
      * DB1.ISC End Inv Final Lbs =
      *    *COMPUTE (x1 + x2 + x3 +x4 + x5)
      * x1    : DB1.ISC Ending Inventory Lbs
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.ISC End Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x3    : DB1.ISC Sun Shp Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x4    : DB1.ISC Unsh/Ship Inv Adj Lbs
      * +     : PGM.*Synon (15,2) work field
      * x5    : DB1.ISC End Inv Partial Lbs
     C           WAM0WG    ADD  WAM4WG    W0WA03           *Synon (15,2) w
     C           W0WA03    ADD  WAM1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    ADD  WAM2WG    W0WA01           *Synon (15,2) w
     C           W0WA01    ADD  WAM3WG    W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    WAM5WG           ISC End Inv Fin
      * Set PGM.*Record Data Changed flag
     C           QPPBS1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@BSCPA5                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPPBSCPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    CQAIC3           Company Number
     C                     MOVEL*LOVAL    CQR3CD           Department Code
     C                     MOVEL*LOVAL    CQB4DT           Transaction Dat
     C                     MOVEL*LOVAL    CQCDTM           Transaction Tim
     C                     MOVEL*LOVAL    CQHGCD           Item Code
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field ISC Warehouse Code
     C                     MOVEL*BLANK    WUGRAA  3
      * Define work field ISC End Inv Partial Qty
     C                     Z-ADD*ZERO     WUORQT 112
      * Define work field ISC End Inv Partial Lbs
     C                     Z-ADD*ZERO     WUM3WG 112
      * Define work field Description Line One
     C                     MOVEL*BLANK    WUAVNA 30
      * Define work field ISC Item Structure Class
     C                     Z-ADD*ZERO     WUBUNY  30
      * Define work field ISC Item Structure Group
     C                     Z-ADD*ZERO     WUBTNY  30
      * Define work field ISC Item Structure Type
     C                     Z-ADD*ZERO     WUBSNY  30
      * Define work field ISC Item Dft Cmdty Mkt Bs
     C                     MOVEL*BLANK    WUGQAA  3
      * Define work field ISC Item Type
     C                     MOVEL*BLANK    WUW1SX  3
      * Define work field ISC Item Cmdty Price Grp
     C                     MOVEL*BLANK    WUGPAA  7
      * Define work field ISC Item G/L Sub Code
     C                     MOVEL*BLANK    WUGSAA  3
      * Define work field ISC Item U/M - Pricing
     C                     MOVEL*BLANK    WUGTAA  2
      * Define work field ISC Item Market Overage
     C                     Z-ADD*ZERO     WUF3PR 114
      * Define work field ISC Warehouse Type
     C                     MOVEL*BLANK    WUV8SX  2
      * Define work field ISC Post Balance Sts
     C                     MOVEL*BLANK    WUWNSX  1
      * Define work field ISC Post Warehouse Sts
     C                     MOVEL*BLANK    WUWOSX  1
      * Define work field Blank for 4           USR
     C                     MOVEL*BLANK    WUOTTX  4
      * Define work field ISC Unused Sts 1
     C                     MOVEL*BLANK    WUWCSX  1
      * Define work field ISC Unused Sts 2
     C                     MOVEL*BLANK    WUWDSX  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIDX           ISC Week Ending
     C                     Z-ADD*ZERO     WAB2C3           ISC Warehouse C
     C                     Z-ADD*ZERO     WAEJC7           ISC Item Code
     C                     Z-ADD*ZERO     WAF3PR           ISC Item Market
     C                     Z-ADD*ZERO     WABSNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABTNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABUNY           ISC Item Struct
     C                     Z-ADD*ZERO     WAOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAOFQT           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAMRWG           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAOGQT           ISC Beg Inv Qty
     C                     Z-ADD*ZERO     WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADD*ZERO     WAOHQT           ISC Floor Produ
     C                     Z-ADD*ZERO     WAMSWG           ISC Floor Produ
     C                     Z-ADD*ZERO     WAOWQT           ISC Floor Prod
     C                     Z-ADD*ZERO     WANAWG           ISC Floor Prod
     C                     Z-ADD*ZERO     WAOIQT           ISC Sales Produ
     C                     Z-ADD*ZERO     WAMTWG           ISC Sales Produ
     C                     Z-ADD*ZERO     WAOJQT           ISC Inventory S
     C                     Z-ADD*ZERO     WAMUWG           ISC Inventory S
     C                     Z-ADD*ZERO     WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAOLQT           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAMWWG           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAFQVL           ISC FOB Gross A
     C                     Z-ADD*ZERO     WAOMQT           ISC Inventory T
     C                     Z-ADD*ZERO     WAMYWG           ISC Inventory T
     C                     Z-ADD*ZERO     WAONQT           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAMZWG           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAOOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     WAM0WG           ISC Ending Inve
     C                     Z-ADD*ZERO     WAP9DT           ISC End Inv Dat
     C                     Z-ADD*ZERO     WACTTM           ISC End Inv Tim
     C                     Z-ADD*ZERO     WAOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAM2WG           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAORQT           ISC End Inv Par
     C                     Z-ADD*ZERO     WAM3WG           ISC End Inv Par
     C                     Z-ADD*ZERO     WAOSQT           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAM4WG           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAP8DT           ISC Ending Inv
     C                     Z-ADD*ZERO     WACSTM           ISC Ending Inv
     C                     Z-ADD*ZERO     WAOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAF4PR           ISC Warehouse P
     C                     Z-ADD*ZERO     WAOUQT           ISC Unused Qty
     C                     Z-ADD*ZERO     WAM6WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAOVQT           ISC Unused Qty
     C                     Z-ADD*ZERO     WAM7WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAQADT           ISC Unused Date
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WA03 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
