// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNJFEFR
// ?Date: 14.08.2025 Time: 03:45:20
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile header

// CTL.Accrual Code = PAR.Accrual Code
CTL.Accrual_Code = PAR.Accrual_Code;

// CTL.AD Program Number = PAR.AD Program Number
CTL.AD_Program_Number = PAR.AD_Program_Number;

EXECUTE FUNCTION(Accrual Description DRV) TYPE(DRVFLD)                          AC1706268;
PARAMETER(CTL.Accrual_Description_DRV);
PARAMETER(CTL.Accrual_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Accrual Descript   RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1285204;
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(PAR.Accrual_Description_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF CTL.Record Status is *blank
IF CTL.Record_Status = *BLANK;

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// CTL.USR Record Status = CTL.Record Status
CTL.USR_Record_Status = CTL.Record_Status;

ENDIF;

//?USER: Initialize subfile record (existing record)

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

CASE;

// IF DB1.Record Status NE CTL.Record Status
IF DB1.Record_Status <> CTL.Record_Status;

// AND CTL.Record Status is Not Blanks
AND CTL.Record_Status = 'A'/'D'/'I';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Initialize subfile record (new record)

CASE;

// IF PGM.*Program mode is *ADD
IF PGM.*Program_mode = 'ADD';

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

ENDIF;

//?CALC: Subfile control function fields

EXECUTE FUNCTION(Accrual Description DRV) TYPE(DRVFLD)                          AC1706268;
PARAMETER(CTL.Accrual_Description_DRV);
PARAMETER(CTL.Accrual_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Accrual Descript   RT) TYPE(RTVOBJ) FILE(OMHLREP)          AC1285204;
 PARAMETER(PAR.Accrual_Code);
 PARAMETER(PAR.Accrual_Description_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Validate subfile control

CASE;

// IF CTL.Record Status NE CTL.USR Record Status
IF CTL.Record_Status <> CTL.USR_Record_Status;

// CTL.USR Record Status = CTL.Record Status
CTL.USR_Record_Status = CTL.Record_Status;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Validate subfile record fields

CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> RCD.Ship To Customer
IF PGM.*Cursor_field = RCD.Ship_To_Customer;

// Call program SEL Search by Nbr/Name SR.
CALL PROGRAM(SEL Search by Nbr/Name SR) ('PMWMSRR');
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Customer_Name_DRV);

ENDIF;

ENDIF;

//?CALC: Subfile record function fields

EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(RCD.Customer_Name_DRV);
PARAMETER(RCD.Ship_To_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Validate subfile record relations

CASE;

// IF RCD.Ship To Customer is not equal to zero
IF RCD.Ship_To_Customer <> *ZERO;

// RCD.Accrual Code = CTL.Accrual Code
RCD.Accrual_Code = CTL.Accrual_Code;

// RCD.AD Program Number = CTL.AD Program Number
RCD.AD_Program_Number = CTL.AD_Program_Number;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Acr Prod Pgm Cust CR) TYPE(CRTOBJ) FILE(PNFJREP)           AC1938004;
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.AD_Program_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Record_Status);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);

//?USER: Delete DBF record

EXECUTE FUNCTION(Chg Acr Prod Pgm Cust CH) TYPE(CHGOBJ) FILE(PNFJREP)           AC1938005;
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.AD_Program_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER('I');
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Acr Prod Pgm Cust CH) TYPE(CHGOBJ) FILE(PNFJREP)           AC1938005;
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.AD_Program_Number);
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);

