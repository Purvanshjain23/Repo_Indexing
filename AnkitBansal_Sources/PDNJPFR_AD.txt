// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDNJPFR
// ?Date: 14.08.2025 Time: 12:04:10
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('I/C');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

CASE;

// IF DB1.Unit Cost Per Pound NE WRK.ZERO
IF DB1.Unit_Cost_Per_Pound <> WRK.ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Sum if any not 0   RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1417591;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Item_Code);
PARAMETER(DB1.Warehouse_Code);
PARAMETER(PAR.Quantity_on_Hand_Weight);
PARAMETER(PAR.Quantity_on_Hand_UOM1);
PARAMETER(PAR.Value_of_On_Hand_Inventor);
PARAMETER(WRK.Select_Status);
{
 //?USER: Initialize routine

 // PAR.Quantity on Hand - Weight = CON.*ZERO
 PAR.Quantity_on_Hand_Weight = *ZERO;

 // PAR.Quantity on Hand - U/M1 = CON.*ZERO
 PAR.Quantity_on_Hand_UOM1 = *ZERO;

 // PAR.Value of On Hand Inventor = CON.*ZERO
 PAR.Value_of_On_Hand_Inventor = *ZERO;

 //?select status = no means that all details have 0 qt, wgt, val
 // PAR.Select Status = CND.no
 PAR.Select_Status = 'N';

 //?USER: Process Data record

 // PAR.Quantity on Hand - Weight = PAR.Quantity on Hand - Weight + DB1.Quantity on
 PAR.Quantity_on_Hand_Weight = PAR.Quantity_on_Hand_Weight + DB1.Quantity_on_Hand_Weight;

 // PAR.Quantity on Hand - U/M1 = PAR.Quantity on Hand - U/M1 + DB1.Quantity on Hand
 PAR.Quantity_on_Hand_UOM1 = PAR.Quantity_on_Hand_UOM1 + DB1.Quantity_on_Hand_UOM1;

 // PAR.Value of On Hand Inventor = PAR.Value of On Hand Inventor + DB1.Value of On
 PAR.Value_of_On_Hand_Inventor = PAR.Value_of_On_Hand_Inventor
 + DB1.Value_of_On_Hand_Inventor;

 CASE;

 // IF DB1.Quantity on Hand - Weight NE WRK.ZERO
 IF DB1.Quantity_on_Hand_Weight <> WRK.ZERO;

 // OR DB1.Quantity on Hand - U/M1 NE WRK.ZERO
 OR DB1.Quantity_on_Hand_UOM1 <> WRK.ZERO;

 // OR DB1.Value of On Hand Inventor NE WRK.ZERO
 OR DB1.Value_of_On_Hand_Inventor <> WRK.ZERO;

 // PAR.Select Status = CND.yes
 PAR.Select_Status = 'Y';

 ENDIF;

}


CASE;

// IF WRK.Select Status is yes
IF WRK.Select_Status = 'Y';

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

ENDIF;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Item Code header format

//?USER: On print of detail format

// CUR.Quantity on Hand - Weight = PAR.Quantity on Hand - Weight
CUR.Quantity_on_Hand_Weight = PAR.Quantity_on_Hand_Weight;

// CUR.Quantity on Hand - U/M1 = PAR.Quantity on Hand - U/M1
CUR.Quantity_on_Hand_UOM1 = PAR.Quantity_on_Hand_UOM1;

// CUR.Value of On Hand Detail = PAR.Value of On Hand Inventor
CUR.Value_of_On_Hand_Detail = PAR.Value_of_On_Hand_Inventor;

//?USER: Print required level totals

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Company Number totals format

