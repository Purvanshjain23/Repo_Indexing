      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP154
      * TITLE:       Assign Bins Sets to Rooms
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     07/01/01
      *
      * FUNCTION: This function uses a subfile to assign bin sets to rooms in buildings on a
      *           farm. It is accessed from HP450--Work With Farm sites.
      *
      *           Restrictors:
      *                Farm site
      *
      *           Positioners:
      *                None
      *
      *           Selectors:
      *                None
      *
      *           NOTE: No file updates occur until the user takes
      *                 F9-Accept to accept his changes.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 01/16/06  LeAnne Fedor
      *           To allow the users to assign multiple Bin Sets to a Room, we created
      *           a new file (HSP113-Rooms/Bin Sets) and logic to write records to the
      *           new file instead of plopping the "bin set" into the Room record.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 03/25/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd154    cf   e             workstn
     F                                     sfile(hp154s1:hdrrn1)
     F                                     infds(iofeed)
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp036    if   e           k disk
      *    Bins in a bin set
      *
      *
     Fhsp020    if   e           k disk
      *    Building rooms
      *
      *
     Fhsp113    uf a e           k disk
      *    Rooms/Bin Sets
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D maxmsg          s              2  0  inz(20)
     D routne          s              6
     D maxrrn          s              4  0
     D reset           s              1    inz('N')
     D norecs          s              1    inz('N')
     D count           s              2  0
     D wkflow          s                   like(idflow)
     D rtncd           s              2
      *
      *
      * Control/save fields
      *
     D svrmst          s                   like(c1rmst)
      *
      *
      * Workfields required for subfile paging--see initialization
      * subroutine.
      *
     D wkplin          s              2  0
     D wkrlin          s              2  0
     D editfl          s              1    inz('N')
     D wkedit          s              1    inz('N')
      *
      *
      * Workfields
      *
     D wkbicd          s                   like(rbbicd)
      *
      *
      * Parm fields
      *
     D xxbicd          s                   like(rbbicd)
     D xxrmst          s                   like(c1rmst)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Standard subfile option conversion
      *---------------------------------------------------------------
      *   None
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      * None
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Fill the subfile with building/room records for the farm.
      *
     C                   exsr      $clr1
     C                   exsr      $frsh1
      *
      * Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the page of the subfile to display
      *
     C                   select
     C                   when      wkflow = 0 and error = 0
     C                   eval      hdpag1 = 1
      *
     C                   when      reset = yes and wkflow <= hdrrn1
     C                   eval      hdpag1 = wkflow
     C                   endsl
      *
      *
      * If the user has edited the data, then issue the 'accept changes'
      * message.
     C                   select
     C                   when      error = 0 and editfl = yes
     C                   eval      error = 1
     C                   eval      mgid(e) = 'HS09026'
     C                   endsl
      *
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to crt
      *
     C                   write     hp154k1
     C                   write     hp154ec
     C                   exfmt     hp154c1
      *
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   eval      wkflow = idflow
     C                   eval      reset = no
     C                   eval      editfl = no
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
     C                   if        fld = 'C1RMST'
     C                   exsr      $chksv
     C                   else
     C                   movel     scrn1         routne
     C                   endif
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      reset = yes
     C                   eval      routne = set1
      *
      * Reposition the subfile if the user has changed any of the positioners
      * or selectors in the control record.
      *
     C                   when      *in09 = *on                                  F9-accept
     C                   exsr      $edit1
     C                   if        error <> 0                                   If error
     C                   eval      routne = scrn1
     C                   else
     C                   exsr      $update
     C                   eval      routne = exit
     C                   endif                                                  If error
      *
      * User has changed a positioner/selector in the Control record
      *
     C                   when      c1rmst <> svrmst
     C                   exsr      $chksv
     C                   other
      *
      * User pressed ENTER
      *
     C                   exsr      $edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Check to see if Control Record fields have changed
      *----------------------------------------------------------------
      *
     C     $chksv        begsr
      *
     C                   move      no            reset
     C                   move      set1          routne
      *
     C                   move      c1rmst        svrmst
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit input fields for screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
     C                   eval      editfl = yes
      *
      * Edit the subfile
      *
     C                   exsr      $eds1
      *
     C                   if        error = 0
     C                   eval      hdpag1 = 1
     C                   endif
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $clr1         begsr
      *
     C                   eval      hdrrn1 = 0
     C                   eval      count = 0
      *
     C                   clear                   hp154s1
     C                   seton                                        83        sflclr
     C                   write     hp154c1
     C                   setoff                                       818283
      *                                                    81=sfldsp
      *                                                    82=sflend
      *                                                    83=sflclr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Refresh/fill the subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
      * Loading the subfile in this program is different. We load the entire
      * subfile at once with all the Building/Room records for the Farm Site.
      *
     C     c1fscd        setll     hsp020
     C                   dou       *in82 = *on
     C                   exsr      $load1
     C                   enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Load subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $load1        begsr
      *
     C     c1fscd        reade     hsp020                                 82
     C                   if        *in82 = *off                                 If not EOF
     C                   seton                                        85
      *
     C                   if        c1rmst <> *blank and                         If room status
     C                             brrmst <> c1rmst
     C                   else
      *
     C                   move      brblcd        d1blcd
     C                   move      brrmcd        d1rmcd
     C                   move      brrmst        d1rmst
      *
      * Retrieve Bin Sets assigned to the Room
      *
     C                   exsr      $rtv113
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp154s1
     C                   seton                                        81
     C                   eval      hdpag1 = hdrrn1
     C                   endif                                                  If room status
     C                   endif                                                  If not EOF
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------------
      * Retrieve Bin Sets for the Room
      *----------------------------------------------------------------------------------------
      *
      * Although the database relationship between Rooms and Bin Sets is 1-to-many and
      * the Hog Group System code will handle the 1-to-many relationship, we are
      * arbitrarily limiting the user to the entry of 2 Bin Sets per Room.
      *
      * So, each subfile record only has entry fields for 2 Bin Sets.
      * Therefore, retrieve 2 Room/Bin Set records for the Room.
      *
     C     $rtv113       begsr
      *
     C                   move      *blank        d1bicd1
     C                   move      *blank        d1bicd2
      *
     C     key02         chain(n)  hsp113                             92
     C                   if        *in92 = *off                                 If hit
     C                   move      rbbicd        d1bicd1
      *
     C     key02         reade(n)  hsp113                                 92
     C                   if        *in92 = *off                                 If another rec
     C                   move      rbbicd        d1bicd2
     C                   endif                                                  If another rec
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Read and edit changed subfile records on screen 1
      *---------------------------------------------------------------
      *
     C     $eds1         begsr
      *
      * Set the field that indicates whether the user entered/changed data.
      *
     C                   eval      wkedit = no
      *
      * Read/process all changed subfile records
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do process
     C                   readc     hp154s1                                80
     C                   if        *in80 = *off                                 If rec read
      *
      * Set on MDT
     C                   seton                                        85
      *
      * Set off error indicators in the subfile
      *
     C                   exsr      $setof
      *
      * Next,
      *  a) set the flag indicating you have edited at least once and
      *  b) validate fields
      *
     C                   eval      wkedit = yes
     C                   exsr      $bicd
      *
     C                   update    hp154s1
     C                   exsr      $setof
     C                   endif                                                  If rec read
     C                   enddo                                                  Do process
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------------------
      * F4 prompt for screen 1
      *--------------------------------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      *--------------------------------------------------------------------------------------
      * Prompted fields in subfile
      *--------------------------------------------------------------------------------------
      *
      * Set off prompt indicators in all subfile records.
      *
     C                   exsr      $f4sflind
      *
     C                   select
     C                   when      fld = 'C1RMST'
     C                   call      'HP512'
     C                   parm                    xxrmst
     C                   seton                                        50
     C                   if        xxrmst <> *blank
     C                   movel     xxrmst        c1rmst
     C                   endif
      *
      * Bin set code 1
      *
     C                   when      fld = 'D1BICD1'
     C                   call      'HP509'
     C                   parm                    c1fscd
     C                   parm                    c1fsnm
     C                   parm      *blank        xxbicd
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxbicd <> *blank
     C                   movel     xxbicd        d1bicd1
     C                   endif
      *
      * Update subfile
      *
     C                   seton                                        8551
     C                   update    hp154s1
     C                   setoff                                       8551
      *
     C                   endif                                                  If hit
      *
      * Bin set code 2
      *
     C                   when      fld = 'D1BICD2'
     C                   call      'HP509'
     C                   parm                    c1fscd
     C                   parm                    c1fsnm
     C                   parm      *blank        xxbicd
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxbicd <> *blank
     C                   movel     xxbicd        d1bicd2
     C                   endif
      *
      * Update subfile
      *
     C                   seton                                        8551
     C                   update    hp154s1
     C                   setoff                                       8551
      *
     C                   endif                                                  If hit
      *
      *-----------------------------------------------------------------
      * Catch-all logic if user prompts on any other non-prompt field
      *-----------------------------------------------------------------
      *
     C                   other
     C                   if        error < maxmsg
     C                   add       1             error
     C                   exsr      $err1
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
     C                   exsr      $rrn1
     C                   endsl
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   eval      hdrrn1 = count
     C                   eval      hdpag1 = hdrr1
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $f4sflind - set off f4 indicators in the subfile records
      *----------------------------------------------------------------
      *
     C     $f4sflind     begsr
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do indicators off
     C                   readc     hp154s1                                80
     C                   if        *in80 = *off                                 If rec read
     C                   seton                                        85
     C                   setoff                                       51
     C                   update    hp154s1
     C                   endif                                                  If rec read
     C                   enddo                                                  Do indicators off
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------------------------
      * Find/retrieve the subfile record to update when returning from a select
      * program on screen 1
      *------------------------------------------------------------------------------------
      *
      * HDRR1 is the hidden field associated with the keyword SFLCSRRRN
      * on the control record in the DSPF.
      * HDRRN1 is the value associated with the keyword 'SFILE' in
      * the F-specs for the workstation.
      *
     C     $rrn1         begsr
      *
     C                   setoff                                       97
      *
     C                   if        hdrr1 <> 0
     C                   eval      hdrrn1 = hdrr1
     C     hdrrn1        chain     hp154s1                            97
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate bin set codes
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) at least 1 bin set code must be entered
      *  2) if 2 codes are entered, they cannot be the same code
      *  2) each code must exist in the 'bins in the bin set file' for this farm
      *
     C     $bicd         begsr
      *
     C                   eval      d1bicd1 = %triml(d1bicd1)
     C                   eval      d1bicd2 = %triml(d1bicd2)
      *
     C                   select
     C                   when      d1bicd1 = *blank and
     C                             d1bicd2 = *blank
     C                   seton                                        3132
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01229'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
      * Validate Bin Set 1
      *
     C                   if        d1bicd1 <> *blank                            If set 1
     C                   move      d1bicd1       wkbicd
     C     key01         chain     hsp036                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00147'     mgid(e)
     C                   clear                   mgw
     C                   movea     wkbicd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not found
     C                   endif                                                  If set 1
      *
      * Validate Bin Set 2
      *
     C                   if        d1bicd2 <> *blank                            If set 1
     C                   move      d1bicd2       wkbicd
     C     key01         chain     hsp036                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00147'     mgid(e)
     C                   clear                   mgw
     C                   movea     wkbicd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not found
     C                   endif                                                  If set 1
      *
      * If 2 Bin Sets are entered, they cannot be the same set.
      *
     C                   if        *in31 = *off and
     C                             *in32 = *off and
     C                             d1bicd1 = d1bicd2
     C                   seton                                        3132
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS01230'
     C                   exsr      $err1
     C                   endif
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set off the indicators on the subfile
      *----------------------------------------------------------------
      *
     C     $setof        begsr
      *
     C                   setoff                                       3132
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Update Room/Bin Set records
      *----------------------------------------------------------------
      *
     C     $update       begsr
      *
     C                   dou       *in80 = *on                                  Do updates
     C                   readc     hp154s1                                80
     C                   if        *in80 = *off                                 If rec read
      *
      * Delete existing records and write new records.
      *
     C                   exsr      $dlt113
     C                   exsr      $wrt113
      *
     C                   endif                                                  If rec read
     C                   enddo                                                  Do updates
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Delete existing Bin Set records for this Farm/Bulding/Room
      *----------------------------------------------------------------------------------
      *
     C     $dlt113       begsr
      *
     C     key02         setll     hsp113
      *
     C                   dou       *in91 = *on
     C     key02         reade     hsp113                                 91
     C                   if        *in91 = *off
     C                   delete    rbrec
     C                   endif
     C                   enddo
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Write Bin Set records for this Farm/Bulding/Room
      *----------------------------------------------------------------------------------
      *
      * The user can entry 2 Bin Sets. So, you may be writing only 1 record or you
      * may write 2 Room/Bin Set records.
      *
     C     $wrt113       begsr
      *
     C                   z-add     c1fscd        rbfscd
     C                   move      d1blcd        rbblcd
     C                   move      d1rmcd        rbrmcd
      * Record 1
     C                   if        d1bicd1 <> *blank
     C                   move      d1bicd1       rbbicd
     C                   write     rbrec
     C                   endif
      * Record 2
     C                   if        d1bicd2 <> *blank
     C                   move      d1bicd2       rbbicd
     C                   write     rbrec
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * Set the subfile to redisplay at the first page that has errors for Screen 1
      *----------------------------------------------------------------------------------
      *
     C     $err1         begsr
      *
     C                   if        error = 1
     C                   eval      hdpag1 = hdrrn1
     C                   endif
      *
     C                   endsr
      *
      *---------------------------------------------------------------
      * Set on last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C                   parm                    c1fscd
     C                   parm                    c1fsnm
     C                   parm                    rtncd
      *
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    c1fscd
     C                   kfld                    wkbicd
      *
     C     key02         klist
     C                   kfld                    c1fscd
     C                   kfld                    d1blcd
     C                   kfld                    d1rmcd
      *
      *
      * Mode is always 'revise' in this program.
      *
     C                   eval      c1mode = revise
     C                   eval      mode = revise
      *
      *
      * To support F5-Refresh, logic requires the number of lines on
      * the subfile page and also the number of lines less 1.  By
      * setting these values up as constant work fields, the processing
      * logic can be standardized between programs.
      *
     C                   eval      wkplin = 13                                  sflpag
     C                   eval      wkrlin = wkplin - 1
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
