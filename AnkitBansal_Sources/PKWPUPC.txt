/***************************************************************** */
/*                                                                 */
/*  PROGRAM NUMBER:  PKWPUPC (FROM PKTMUPR)                        */
/*  PROGRAM NAME:    PAYMENT PRODUCER EDIT FOR MPR                 */
/*  PROGRAMMER:      ROSE CENTONZE                                 */
/*  CREATE DATE:     02/05/01                                      */
/*                                                                 */
/*  NOTE  ***** MUST BE COMPILED USER PROFILE(*OWNER)   *****       */
/*                                                                 */
/*                                                                 */
/*  FUNCTION:        THIS CL IS SUBMITTED WITH EXECUTE MESSAGE     */
/*                   FROM PMT BALANCE TO KILL                      */
/*                   USER OPTIONS ARE PASSED THROUGH THE PARMS.    */
/*              CLONED FROM PKTMUPR FOR PK0254- MPR :              */
/*                  1) RUN UPLOAD AND BALANCING RTN - CRT EVAL TRAN*/
/*                  2) RUN MPR PAYMENT EDIT OVER THE LIVE FILES.  */
/* MOVED AFTER #4   3) UNDO THE PROCESS IN AN SUBSEQUENT ROUTINE  */
/*                  4) DOWNLOAD THE MPR REPORTING FILES TO THE USDA */
/*                                                                 */
/*******************************************************************/
/*  Modification History                                           */
/*   RMC 3/13/01  HARD CODE PRINTER PARAMETERS.                   */
/*   RMC 4/05/01  MOVED #3 UNDO PROCESS TO ITS OWN ROUTINE TO RUN */
/*                AFTER THE DOWNLOAD                              */
/*   RMC 4/11/01  IF FRIDAY, RUN BAL/EDIT FOR SATURDAY TOO.        */
/*   RMC 4/18/01  SET LIB LIST IF NOT USER CLASS *PGMR           */
/*   RMC 4/25/01  SEND MPR JOB PARM TO PKS6XFR                   */
/*   RMC 11/7/05  CALL PLF8XFR TO GET COMPANY FOR USER          */
/*   RMC 11/16/5  SET LIB PER JOBD PARM                          */
/*   RMC 10/27/6  DO SUNDAY LOGIC FOR 360 10/29/06               */
/*   RMC 01/08/15 DO SUNDAY LOGIC FOR 360 01/11/2015     : E3801   */
/*   RMC 01/08/15 COMMENT SUNDAY LOGIC FOR 360 01/11/2015  E3801   */
/*   RMC 01/18/15 DO SUNDAY LOGIC FOR 360 01/18/2015     : E3801   */
/*   RMC 01/18/15 COMMENT ABOVE   FOR 360 01/18/2015     : E3801   */
/*   RMC 04/10/15 DO SUNDAY LOGIC FOR 360 04/12/2015     : C4074   */
/*   RMC 04/10/15 COMMENT ABOVE   FOR 360 04/12/2015     : C4074   */
/*   RMC 08/20/15 DO SUNDAY LOGIC FOR 360 08/23/2015     : C4173   */
/*   RMC 08/21/15 COMMENT ABOVE   FOR 360 08/23/2015     : C4173   */
/*   JBB 02/28/17 ADD PROCESSING FOR 440. DO NOT PROCESS : E9064   */
/*                A SUNDAY FOR COMPANY 440.                        */
/*   RMC 10/04/17 CREATE PKB1CPP IN QTEMP , THEN WE DONT HAVE TO UNDO IT */
/*                IN PKWUUPC  --  T11807              */
/*       10/11/17 MONMSG CPF2130  T11807              */
/*   RMC 10/19/17 DO SUNDAY LOGIC FOR 360 10/22/2017     : S11915  */
/*   RMC 10/23/17 COMMENT SUNDAY LOGIC FOR 360 10/22/2017: S11915  */
/*   RMC 01/19/18 DO SUNDAY LOGIC FOR 360 01/21/2018     : S12359  */
/*   RMC 01/22/18 COMMENT SUNDAY LOGIC FOR 360 01/19/2018: S12359  */
/*   RMC 12/28/18 DO SUNDAY LOGIC FOR 360 12/30/2018     : S12359  */
/*   RMC 12/30/18 COMMENT SUNDAY LOGIC FOR 360 12/30/2018: S12359  */
/*‚JM   06/13/25 SDN1295 - MPR Upgrade-Set MPR libl for test box   */
/*******************************************************************/
             PGM        PARM(&PLTCO &JOBD)
/* PRINT OPTION PARMS                                             */
          /* DCL        VAR(&RTN) TYPE(*CHAR) LEN(7)           */
             DCL        VAR(&PDEV) TYPE(*CHAR) LEN(10) VALUE(QPRINT2)
             DCL        VAR(&HOLD) TYPE(*CHAR) LEN(4) VALUE('*YES')
             DCL        VAR(&SAVE) TYPE(*CHAR) LEN(4) VALUE('*NO ')
  /*         DCL        VAR(&XCOPIES) TYPE(*CHAR) LEN(15)      */

/* FUNCTION SPECIFIC PARMS                                        */
 /* 11.7.05  DCL        VAR(&XCOMP) TYPE(*CHAR) LEN(3) VALUE('360')   */
             DCL        VAR(&APP) TYPE(*CHAR) LEN(33) VALUE('Hog +
                          Procurement and Evaluation')
             DCL        VAR(&LPP) TYPE(*CHAR) LEN(40)
             DCL        VAR(&PLTCO) TYPE(*CHAR) LEN(3)
             DCL        VAR(&JOBD) TYPE(*CHAR) LEN(10)
             DCL        VAR(&KILLDT) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&SATDAT) TYPE(*DEC) LEN(7 0)
             DCL        VAR(&SATKLL) TYPE(*CHAR) LEN(1)
             DCL        VAR(&STEP) TYPE(*DEC) LEN(5 0)
             DCL        VAR(&USRCLS) TYPE(*CHAR) LEN(10)
             DCL        VAR(&MPRJOB) TYPE(*CHAR) LEN(1) VALUE('Y')

/* NUMERIC VARIABLES                                             */
             DCL        VAR(&COPIES) TYPE(*DEC) LEN(2 0) VALUE(01)
             DCL        VAR(&COMP) TYPE(*DEC) LEN(3 0)

/* SBDPRTOVR VARIABLE                                          */
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(512)
/*‚JM   06/13/25 SDN1295 */
             DCL        VAR(&SYSNAME) TYPE(*CHAR) LEN(10)
/*‚JM   06/13/25 SDN1295 */

/* CHANGE ALPHA PARMS TO NUMERIC VARIABLES                       */
 /*          CHGVAR     VAR(&COPIES) VALUE(&XCOPIES)             */
             CHGVAR     VAR(&COMP) VALUE(&PLTCO)
             CHGVAR     VAR(&LPP) VALUE(&APP)

/* SET LIBRARY LIST                              */
             RTVUSRPRF  GRPAUT(&USRCLS)
             IF         COND(&USRCLS *NE '*PGMR') THEN(DO)
     /*      CALL       PGM(HPEDEVGEN/SETHPELIB)     */
             ENDDO

/* *********************************************************/

/*‚JM   06/13/25 SDN1295 */
             RTVNETA    SYSNAME(&SYSNAME)
             IF         COND(&SYSNAME *EQ 'SBFDEV') THEN(DO)

             SELECT
             WHEN       COND(&PLTCO *EQ '360') THEN(CHGVAR +
                          VAR(&JOBD) VALUE('MPRGUPJD'))
             WHEN       COND(&PLTCO *EQ '440') THEN(CHGVAR +
                          VAR(&JOBD) VALUE('MPRSTPJD'))
             WHEN       COND(&PLTCO *EQ '960') THEN(CHGVAR +
                          VAR(&JOBD) VALUE('MPRTFPJD'))
             OTHERWISE
             ENDSELECT

             CHKOBJ     OBJ(&JOBD) OBJTYPE(*JOBD)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             CHGVAR     VAR(&JOBD) VALUE('MPRJOBD')
             CHKOBJ     OBJ(&JOBD) OBJTYPE(*JOBD)
             MONMSG     MSGID(CPF9801) EXEC(DO)
             CHGVAR     VAR(&JOBD) VALUE('PRKPRDGUY')
             ENDDO
             ENDDO
             ENDDO
/*‚JM   06/13/25 SDN1295 */
/* SET LIBRARY LIST 11.18.05  PER INPUT JOBD     */

             SETLIBL    JOBD(&JOBD)

/* *********************************************************/
/* CREATE PRINTER FILE OVERRIDE CODE    INVAL EVAL TRANS        */
             SBDPRTOVR  CMDVAR(&CMD) FILE(PKPAPFR$) OUTQ(&PDEV) +
                          COPIES(&COPIES) HOLD(&HOLD) SAVE(&SAVE)
             CALL       PGM(QCMDEXC) PARM(&CMD 512)

/* CREATE PRINTER FILE OVERRIDE CODE    BALANCE TO KILL EDIT    */
             SBDPRTOVR  CMDVAR(&CMD) FILE(PKLIPFR$) OUTQ(&PDEV) +
                          COPIES(&COPIES) HOLD(&HOLD) SAVE(&SAVE)
             CALL       PGM(QCMDEXC) PARM(&CMD 512)


/* CREATE PRINTER FILE OVERRIDE CODE    PAY EDIT/POST           */
             SBDPRTOVR  CMDVAR(&CMD) FILE(PKS2PFR$) OUTQ(&PDEV) +
                          COPIES(&COPIES) HOLD(&HOLD) SAVE(&SAVE)
             CALL       PGM(QCMDEXC) PARM(&CMD 512)


/* *********************************************************/
/* RUN BALANCING ROUTINE -- CREATE EVAL TRANS RECORDS      */
/*                          BALANCE ALL TATTOOS            */
/* *********************************************************/


             CALL       PGM(PKS6XFR) PARM(' ' &COMP &MPRJOB)
/* *********************************************************/
/* PROCESS PAYMENT PRODUCER EDIT MPR                       */
/* *********************************************************/

             CRTDUPOBJ  OBJ(PKB1CPP) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF2130) EXEC(DO)
             DLTOBJ     OBJ(QTEMP/PKB1CP*) OBJTYPE(*FILE)
             CRTDUPOBJ  OBJ(PKB1CPP) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
                          ENDDO
             CRTDUPOBJ  OBJ(PKB1CPL0) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             CRTDUPOBJ  OBJ(PKB1CPL1) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             CRTDUPOBJ  OBJ(PKB1CPL2) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             CRTDUPOBJ  OBJ(PKB1CPLH) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             CRTDUPOBJ  OBJ(PKB1CPLD) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             CRTDUPOBJ  OBJ(PKB1CPLI) FROMLIB(*LIBL) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)

             CALL       PGM(PKWOXFR) PARM(' ' &COMP &KILLDT &LPP)
             CALL       PGM(PKW5UPC) PARM('5' &PLTCO) /* SNDDST EDIT DONE */
/* *********************************************************/
/* IF FRIDAY KILL DATE, AND IF SATURDAY IS A KILL DAY (FLG IS NO),+
 RUN BALANCING AND PAYM EDIT MPR FOR SATURDAY TOO.          */
/* *********************************************************/
             CALL       PGM(PDSUXFR) PARM('' &COMP &KILLDT &SATDAT)
SATURDY:     IF         COND(&KILLDT *NE &SATDAT) THEN(DO)
             CALL       PGM(PDWBXFR) PARM('' &COMP &SATDAT &SATKLL)
KILLDY:      IF         COND(&SATKLL *EQ 'N') THEN(DO)
             CHGVAR     VAR(&STEP) VALUE(1)
PAYPARM:     CALL       PGM(PKXAXFR) PARM('' &COMP &SATDAT &STEP)
BAL:         CALL       PGM(PKS6XFR) PARM(' ' &COMP &MPRJOB)
EDIT:        CALL       PGM(PKWOXFR) PARM(' ' &COMP &SATDAT &LPP)
             CHGVAR     VAR(&STEP) VALUE(3)
PAYPAR2:     CALL       PGM(PKXAXFR) PARM('' &COMP &KILLDT &STEP)
             CALL       PGM(PKW5UPC) PARM('5'  &PLTCO) /* SNDDST EDIT DONE */
             ENDDO
             ENDDO
SUN91805: /* COMMENT.. THIS WAS A 1-TIME THING - AGAIN FOR 10/29/06 360 ONLY  */
SUN11115: /* DO  AGAIN                           AGAIN FOR 01/11/15 360 ONLY  */
SUN11815: /* DO  AGAIN                           AGAIN FOR 01/18/15 360 ONLY  */
SUN0412: /* DO  AGAIN                           AGAIN FOR 04/12/15 360 ONLY  */
SUN0823: /* DO  AGAIN                           AGAIN FOR 08/23/15 360 ONLY  */
SUN1022: /* DO  AGAIN                           AGAIN FOR 10/22/17 360 ONLY  */
SUN0121: /* DO  AGAIN                           AGAIN FOR 01/21/18 360 ONLY  */
SUN1230: /* DO  AGAIN                           AGAIN FOR 12/30/18 360 ONLY  */
             GOTO       CMDLBL(END)
           /* DO ONLI IF  ANOTHER SUNDAY IS A KILL DATE. */
IF COND(&PLTCO = '960') THEN(GOTO END)
IF COND(&PLTCO = '440') THEN(GOTO END)
             CHGVAR     VAR(&STEP) VALUE(1)
             CHGVAR     VAR(&SATDAT) VALUE(1181230)
SAYPARM:     CALL       PGM(PKXAXFR) PARM('' &COMP &SATDAT &STEP)
SAL:         CALL       PGM(PKS6XFR) PARM(' ' &COMP &MPRJOB)
SDIT:        CALL       PGM(PKWOXFR) PARM(' ' &COMP &SATDAT &LPP)
             CHGVAR     VAR(&STEP) VALUE(3)
SAYPAR2:     CALL       PGM(PKXAXFR) PARM('' &COMP &KILLDT &STEP)
             CALL       PGM(PKW5UPC) PARM('5' &PLTCO)

/* *********************************************************/
/* PROCESS BUILD/DOWNLOAD TO USDA SITE IN  MPRUPLOAD.BAT   */
/* *********************************************************/


 END:        DLTOVR *ALL
             ENDPGM
