      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1008
      * TITLE:       Maintain Target Tables for BGF Farm Site
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     09/21/00
      *
      * FUNCTION: This function uses a subfile to link target tables to a farm site with
      *           a corresponding effective date.  This function is called from HP4008-
      *           Work With BGF Farms for Target Table Maintenance.
      *
      *           Restrictors:
      *                Farm site
      *
      *           Positioners:
      *                None
      *
      *           Selectors:
      *                None
      *
      *           NOTE: A record is deleted by blanking out the entry fields
      *                 on the subfile line.  All entries for a farm can be deleted
      *                 by taking F11-Delete.
      *
      *                 When creating/revising no file updates are made until the
      *                 user takes F9-Accept to accept his entries.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 09/04/01  LeAnne Fedor
      *           'Hog Capacity' removed from screen.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1008   cf   e             workstn
     F                                     sfile(hp1008s1:hdrrn1)
     F                                     infds(iofeed)
      *
      *
     Fhsp009    if   e           k disk
      *    Business office
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp018    if   e           k disk
     F                                     infds(dbfeed)
      *    Farm site
      *
      *
     Fhsp095    if   e           k disk
      *    BGF target tables
      *
      *
     Fhsl097a   uf a e           k disk
      *    BGF target table/farm links
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      * Define array holding effective date.
      * This array is used to edit that a specific effective date
      * is entered only one time for a farm.
      *
     D                 ds
     D efdt                           6  0 dim(100)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D maxmsg          s              2  0  inz(20)
     D routne          s              6
     D maxrrn          s              4  0
     D reset           s              1    inz('N')
     D count           s              2  0
     D wkflow          s                   like(idflow)
     D rtncd           s              2
      *
      *
      * Workfields required for subfile paging--see initialization
      * subroutine.
      *
     D wkplin          s              2  0
     D wkrlin          s              2  0
     D wkdiff          s                   like(count)
     D wkfld           s                   like(count)
     D wkrmdr          s                   like(count)
     D editfl          s              1    inz('N')
     D wkedit          s              1    inz('N')
     D notfl           s              1    inz('N')
      *
      *
      * Parm fields
      *
     D xxfscd          s                   like(fsfscd)
     D xxttbcd         s                   like(btttbcd)
     D xxttbds         s                   like(btttbds)
     D xxalphadt       s              6a
      *
      *
      * Work fields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
     D wkmdydate       s               D   datfmt(*mdy)
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Standard subfile option conversion
      *---------------------------------------------------------------
      *   None
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      * None
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
     C
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * $set1 - set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Verify that the farm site the user selected still exists. If it
      * exists, clear and fill the subfile with the target table records
      * for this farm site and retrieve farm info for control record.
      *
     C     xxfscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If found
     C                   exsr      $clr1
     C                   exsr      $frsh1
     C                   move      fsfsbo        c1fsbo
     C                   move      fsfsnm        c1fsnm
     C                   move      fsptcd        c1ptcd
     C                   exsr      $bods
     C                   exsr      $ptds
     C                   else
      *
      * The farm site has been deleted out from under the user.
      *
     C                   move      yes           notfl
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If found
      *
      * Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $scrn1 - perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Set the page of the subfile to display
      *
     C                   select
     C                   when      wkflow = 0 and error = 0
     C                   eval      hdpag1 = 1
      *
     C                   when      reset = yes and wkflow <= hdrrn1
     C                   eval      hdpag1 = wkflow
     C                   endsl
      *
      * Set the indicators to control screen fields
      *
     C                   exsr      $ind
      *
      * If the user has edited the data, then issue the 'accept changes'
      * message. (Don't issue the message if the user is in create mode but
      * has not entered anything in the subfile.)
      *
     C                   select
     C                   when      mode = create and wkedit = no
      *
     C                   when      error = 0 and editfl = yes
     C                   eval      error = 1
     C                   eval      mgid(e) = 'HS09026'
     C                   endsl
      *
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to crt
      *
     C                   write     hp1008k1
     C                   write     hp1008ec
     C                   exfmt     hp1008c1
      *
      *
      * Save the value of the lowest subfile rrn on the screen for
      * later repositioning of the subfile
      *
     C                   eval      wkflow = idflow
     C                   eval      reset = no
     C                   eval      editfl = no
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      notfl = yes
     C                   eval      routne = set1
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
     C                   eval      routne = scrn1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      reset = yes
     C                   eval      routne = set1
      *
     C                   when      *in11 = *on                                  F11-delete
     C                   exsr      $dlt097
     C                   eval      rtncd = '00'
     C                   eval      routne = exit
      *
     C                   when      *in09 = *on                                  F9-accept
     C                   exsr      $edit1
     C                   if        error <> 0                                   If error
     C                   eval      routne = scrn1
     C                   else
      *
     C                   select
     C                   when      mode = revise
     C                   exsr      $dlt097
     C                   exsr      $crt097
     C                   when      mode = create
     C                   exsr      $crt097
     C                   endsl
      *
     C                   eval      rtncd = '00'
     C                   eval      routne = exit
     C                   endif                                                  If error
      *
     C                   when      *in25 = *on                                  F25-rollup
     C                   eval      wkdiff = idflow + wkplin
     C                   if        hdrrn1 >= wkdiff                             If something
     C                   else
     C                   eval      hdrrn1 = count
     C                   exsr      $setof
     C                   exsr      $clrln
     C                   do        wkplin                                       Do fill
     C                   exsr      $blank
     C                   enddo                                                  Do fill
     C                   endif                                                  If something
     C                   eval      routne = scrn1
     C                   other
      *
      * User pressed ENTER
      *
     C                   exsr      $edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $edit1 - edit input fields for screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
     C                   eval      editfl = yes
      *
      * Edit the subfile
      *
     C                   exsr      $eds1
      *
     C                   if        error = 0
     C                   eval      hdpag1 = 1
     C                   endif
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $clr1  - clear subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $clr1         begsr
      *
     C                   eval      hdrrn1 = 0
     C                   eval      count = 0
      *
     C                   clear                   hp1008s1
     C                   seton                                        83        sflclr
     C                   write     hp1008c1
     C                   setoff                                       818283
      *                                                    81=sfldsp
      *                                                    82=sflend
      *                                                    83=sflclr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $frsh1 - refresh/fill the subfile for screen 1
      *---------------------------------------------------------------
      *
     C     $frsh1        begsr
      *
      * Loading the sbufile in this program is different than subfiles in
      * Work With programs and depends on the 'MODE'.
      * For CREATE mode, load a page of blank lines.
      * For REVISE mode, load a page of database records and, if you hit EOF,
      *                  finish loading the page with blank lines.
      *
     C                   select
     C                   when      mode = create
     C                   exsr      $setof
     C                   exsr      $clrln
     C                   do        wkplin
     C                   exsr      $blank
     C                   enddo
      *
     C                   when      mode = revise
     C     c1fscd        setll     hsl097a
     C                   dou       *in82 = *on
     C                   exsr      $load1
     C                   enddo
      *
      * Fill up the subfile page with blank lines if necessary
      *
     C                   if        wkplin <> 0 and wkplin <> count
     C     count         div       wkplin        wkfld
     C                   mvr                     wkrmdr
     C                   eval      wkdiff = wkplin - wkrmdr
     C                   exsr      $setof
     C                   exsr      $clrln
     C                   do        wkdiff
     C                   exsr      $blank
     C                   enddo
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $load1 - load subfile on screen 1
      *---------------------------------------------------------------
      *
     C     $load1        begsr
      *
      * Retrieve target tables associated with this farm site.
      *
     C     c1fscd        reade(n)  hsl097a                                82
     C                   if        *in82 = *off                                 If not EOF
     C                   seton                                        85
      *
      * Clear fields in subfile line
      *
     C                   exsr      $clrln
      *
      * Set up subfile line fields
      *
     C                   movel     bfttbcd       d1ttbcd
      *
      * Flip effective date from CCYYMMDD to MMDDYY using a date format field.
      *
     C                   if        bfefdt <> 0                                  If a date
     C     *iso          move      bfefdt        wkmdydate
     C                   move      wkmdydate     d1mdyefdt
     C                   endif                                                  If a date
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp1008s1
     C                   seton                                        81
     C                   eval      hdpag1 = hdrrn1
     C                   endif                                                  If not EOF
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $blank - load blank subfile records for screen 1
      *---------------------------------------------------------------
      *
     C     $blank        begsr
      *
     C                   add       1             count
     C                   add       1             hdrrn1
      *
     C                   write     hp1008s1
     C                   seton                                        81
     C                   eval      hdpag1 = hdrrn1
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $clrln - clear subfile line
      *---------------------------------------------------------------
      *
     C     $clrln        begsr
      *
     C                   move      *blank        d1ttbcd
     C                   z-add     0             d1mdyefdt
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Read and edit changed subfile records on screen 1
      *---------------------------------------------------------------
      *
     C     $eds1         begsr
      *
      * Initialize arrays and indexes
      *
     C                   z-add     0             x
     C                   z-add     0             y
     C                   z-add     0             efdt
      *
      * Set the field that indicates whether the user entered/changed data.
      *
     C                   eval      wkedit = no
      *
      * Read/process all changed subfile records
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do process
     C                   readc     hp1008s1                               80
     C                   if        *in80 = *off                                 If rec read
      *
      * Set on MDT
     C                   seton                                        85
      *
      * Set off error indicators in the subfile
      *
     C                   exsr      $setof
      *
      * If there are any user entries:
      *  a) set the flag indicating you have edited at least once
      *  b) validate fields
      *
     C                   if        d1ttbcd <> *blank or                         If entry
     C                             d1mdyefdt <> 0
     C                   eval      wkedit = yes
     C                   exsr      $ttbcd
     C                   exsr      $efdt
     C                   endif                                                  If entry
      *
      * Reset indicators
     C                   update    hp1008s1
     C                   exsr      $setof
     C                   endif                                                  If rec read
     C                   enddo                                                  Do process
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------------------------
      * F4 prompt for screen 1
      *--------------------------------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      *
      *--------------------------------------------------------------------------------------
      * Prompted fields in subfile
      *--------------------------------------------------------------------------------------
      *
      * Set off prompt indicators in all subfile records.
      *
     C                   exsr      $f4sflind
      *
     C                   select
      *
      * Target table code
      *
     C                   when      fld = 'D1TTBCD'
     C                   call      'HP5011'
     C                   parm      *blank        xxttbcd
     C                   parm      *blank        xxttbds
     C                   exsr      $rrn1
     C                   if        *in97 = *off                                 If hit
     C                   if        xxttbcd <> *blank
     C                   movel     xxttbcd       d1ttbcd
     C                   endif
      *
      * Update subfile
      *
     C                   seton                                        8551
     C                   update    hp1008s1
     C                   setoff                                       8551
      *
      * Reset the subfile relative record number to what it was before
      * the user took F4 (It will be out-of-synch if the user has
      * selected a record thus causing the subfile record to be retrieved
      * and updated.) But, set the page of the subfile to be displayed
      * to the page on which the user took the prompt.
      *
     C                   eval      hdrrn1 = count
     C                   eval      hdpag1 = hdrr1
     C                   endif                                                  If hit
      *
      *-----------------------------------------------------------------
      * Catch-all logic if user prompts on any other non-prompt field
      *-----------------------------------------------------------------
      *
     C                   other
     C                   if        error < maxmsg
     C                   add       1             error
     C                   exsr      $err1
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $f4sflind - set off f4 indicators in the subfile records
      *----------------------------------------------------------------
      *
     C     $f4sflind     begsr
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do indicators off
     C                   readc     hp1008s1                               80
     C                   if        *in80 = *off                                 If rec read
     C                   seton                                        85
     C                   setoff                                       51
     C                   update    hp1008s1
     C                   endif                                                  If rec read
     C                   enddo                                                  Do indicators off
      * Set MDT
     C                   setoff                                       85
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate target table
      *----------------------------------------------------------------
      *
      * Validations:
      *
     C     $ttbcd        begsr
      *
     C                   select
     C                   when      d1ttbcd = *blank
     C                   other
      *
     C                   eval      d1ttbcd = %triml(d1ttbcd)
      *
     C     d1ttbcd       chain     hsp095                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01021'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ttbcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If not found
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate effective date
      *----------------------------------------------------------------
      *
      * Validations:
      *   1) required if table target is entered
      *   2) cannot be negative
      *   3) must be a valid date
      *
     C     $efdt         begsr
      *
     C                   select
     C                   when      d1mdyefdt = 0 and d1ttbcd = *blank
      *
     C                   when      d1mdyefdt = 0 and d1ttbcd <> *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   exsr      $err1
     C                   endif
      *
     C                   when      d1mdyefdt < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   exsr      $err1
     C                   endif
     C                   other
      *
      * Check for a valid date
      *
     C     *mdy          test(d)                 d1mdyefdt              92
     C                   if        *in92 = *off                                 If valid date
     C                   else
      * Invalid date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If valid date
     C                   endsl
      *
      * If date was valid, check that it is in the subfile only one time.
      *
     C                   if        *in32 = *off and d1mdyefdt <> 0              If date OK
     C                   eval      x = 1
     C     d1mdyefdt     lookup    efdt(x)                                92
     C                   if        *in92 = *on                                  If dup
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   exsr      $err1
     C                   eval      mgid(e) = 'HS01030'
     C                   clear                   mgw
     C                   move      d1mdyefdt     xxalphadt
     C                   movea     xxalphadt     mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If dup
      *
      *
      * If not a duplidate, load the effective date into its array.
      *
     C                   if        *in32 = *off
     C                   add       1             y
     C                   z-add     d1mdyefdt     efdt(y)
     C                   endif
      *
     C                   endif                                                  If date OK
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * $ind - reset indicators
      *----------------------------------------------------------------
      *
     C     $ind          begsr
      *
      * If the bank was deleted out from under the user, then
      * set *IN90 back on to control available function keys and input
      * fields.
      *
     C                   if        notfl = yes                                  If out from under
     C                   seton                                        90
     C                   endif                                                  If out from under
      *
     C                   select
     C                   when      mode = revise
     C                   seton                                        60
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $setof - set off the indicators on the subfile
      *----------------------------------------------------------------
      *
     C     $setof        begsr
      *
     C                   setoff                                       3132
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Delete target values for a target table
      *----------------------------------------------------------------
      *
     C     $dlt097       begsr
      *
     C     c1fscd        setll     hsl097a
     C                   setoff                                       92
     C                   dou       *in92 = *on                                  Do deletes
     C     c1fscd        reade     hsl097a                                92
     C                   if        *in92 = *off                                 If found
     C                   delete    bfrec
     C                   endif                                                  If found
     C                   enddo                                                  Do deletes
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Create farm/target table linking records
      *----------------------------------------------------------------
      *
     C     $crt097       begsr
      *
     C                   setoff                                       80
     C                   dou       *in80 = *on                                  Do writes
     C                   readc     hp1008s1                               80
     C                   if        *in80 = *off and d1ttbcd <> *blank           If rec read
     C                   move      d1ttbcd       bfttbcd
     C                   z-add     c1fscd        bffscd
      *
      * Flip date from MMDDYY to CCYYMMDD
      *
     C     *mdy          move      d1mdyefdt     wkcymdiso
     C                   movel     wkcymdiso     bfefdt
     C                   write     bfrec
     C                   endif                                                  If rec read
     C                   enddo                                                  Do writes
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $rrn1 - routine to find/retrieve the subfile record to update
      *          when returning from a select program on screen 1
      *----------------------------------------------------------------
      *
      * HDRR1 is the hidden field associated with the keyword SFLCSRRRN
      * on the control record in the DSPF.
      * HDRRN1 is the value associated with the keyword 'SFILE' in
      * the F-specs for the workstation.
      *
     C     $rrn1         begsr
      *
     C                   setoff                                       97
      *
     C                   if        hdrr1 <> 0
     C                   eval      hdrrn1 = hdrr1
     C     hdrrn1        chain     hp1008s1                           97
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $err1  - set the subfile to redisplay at the first page that
      *          has errors for screen 1
      *---------------------------------------------------------------
      *
     C     $err1         begsr
      *
     C                   if        error = 1
     C                   eval      hdpag1 = hdrrn1
     C                   endif
      *
     C                   endsr
      *
      *---------------------------------------------------------------
      * $exit - seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      *
      *---------------------------------------------------------------
      * $wrmsg - write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * $clmsg - clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve business office description
      *----------------------------------------------------------------
      *
     C     $bods         begsr
      *
     C     c1fsbo        chain     hsp009                             92
     C                   if        *in92 = *off                                 If found
     C                   move      bobods        c1bods
     C                   else
     C                   movel     'UNKNOWN'     c1bods
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve production type description
      *----------------------------------------------------------------
      *
     C     $ptds         begsr
      *
     C     c1ptcd        chain     hsp010                             92
     C                   if        *in92 = *off                                 If found
     C                   move      ptptds        c1ptds
     C                   else
     C                   movel     'UNKNOWN'     c1ptds
     C                   endif                                                  If found
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * *inzsr - initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C     c1fscd        parm                    xxfscd
     C                   parm                    rtncd
      *
      *
      *
      * To determine the 'mode', check to see if any records already
      * exist for target table
      *
     C     c1fscd        chain(n)  hsl097a                            92
     C                   if        *in92 = *off                                 If found
     C                   eval      c1mode = revise
     C                   eval      mode = revise
     C                   else
     C                   eval      c1mode = create
     C                   eval      mode = create
     C                   endif                                                  If found
      *
      * To support F5-Refresh, logic requires the number of lines on
      * the subfile page and also the number of lines less 1.  By
      * setting these values up as constant work fields, the processing
      * logic can be standardized between programs.
      *
     C                   eval      wkplin = 10                                  sflpag
     C                   eval      wkrlin = wkplin - 1
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
