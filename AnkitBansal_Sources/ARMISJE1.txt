      *****************************************************************
      *
      *  Program number:  ARMISJE1 - Move to E1IDEVMDL    - for E1
      *  Program name:    CREATE J.E.'S IN JDE FOR HOG A/R MISC ENTRIES IN E1 TABLES
      *  Programmer:      Rose Centonze
      *  Date created:    03/23/2020
      *
      *  Program purpose: CREATE J.E.'S FOR A/R MISC ADJUSTMENTS.
      *                   COMPANY WILL BE PASSED INTO THIS PROGRAM FOR
      *                   FOR PROCESSING.  A SUMMARY RECORD FOR EACH
      *                   ACCOUNT I.D. WILL BE WRITTEN AS UNPOSTED TO
      *                   JDE.
      *
      *                   ONLY PROCESS RECORDS WITH A STATUS OF 'A'.
      *                   THESE ARE SELECTED IN THE LOGICAL ARBECPL7.
      *                   ONLY PROCESS RECORDS WITH BLANKS IN THE
      *                   ORIGINATING PROGRAM FIELD.
      *
      *                   WILL UPDATE THE A/R DETAIL FILE WITH THE
      *                   BATCH NUMBER, POST DATE AND A STATUS CODE OF E
      *                   A 'P'. (PROCESSED)
      *
      *                   THE USER MUST THEN GO INTO JDE TO ACTUALLY
      *                   POST THE BATCH OF JOURNAL ENTRIES.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 05/07/96  Joni Miller
      *           JDE NEW RELEASE A7.1
      *
      * 07/16/98  BARB GUTIERREZ
      *           INSTEAD OF USING FIELD BFB1VN NE BLANKS, USE
      *           BFETSX = 'Y' PER REQUEST ARS073.
      *
      * 02/03/99  Barb Gutierrez
      *           Y2K problem.  Not populating century position of
      *           field WKPSDT with a 1 come the year 2000.
      *
      * 05/04/05  Rose Centonze
      *           Changes for multi-deposits in a day: added deposit
      *           time to key & took company off of key to oms
      *           file ARBECPP -- use lf arbecpl5 instead of -l7
      *           A deposit can have multi-company invoices in it, USE
      *           the Company off of the AR Detail.
      *
      * 08/05/05  Barb Gutierrez
      *           RECOMPILED ONLY DUE TO AR DETAIL FILE CHANGE PER
      *           REQUEST TFS010.
      *
      * 12/28/05  LeAnne Fedor & Alice
      *           Rewritten in ILE.  Added Company 960 posting
      *
      * 02/09/06  Barb Gutierrez
      *           TF entries was being processed in two programs.  This pgm handled
      *           company 960.  ARMISJDE1 handled the offsets for 960.  We are
      *           consolidating into this one program to be more like the processing
      *           in ARDEPJDE.  Also changed to user control the open and close of
      *           the report so we can print a separate spool file of the 960 entries
      *           and duplicate this spool file on Triumphs outq (TFPRT01).
      *
      * 02/28/06  Barb Gutierrez
      *           Do not write out the batch header record if no detail was written to
      *           f0911.
      *
      * 03/02/06  LeAnne Fedor
      *           Added another Entry Parm.  If data is processed for Company 960, this
      *           new field will be set to Y=Yes so that, on returning to the calling
      *           CL, we can make the determination of whether to "DUP" the spool file
      *           to Triumph's outq.
      *
      * 08/22/06  LeAnne Fedor
      *           Moved the reset of the Account Total workfield to the SetSave
      *           subroutine.
      *
      * 12/01/06  LeAnne Ramsey
      *           Replaced the call to generic program TF814 to convert Synon dates with
      *           ILE date logic.
      *
      * 03/19/09  Barb Gutierrez
      *           Subledger was added to the A/R adjustment screen.  It is stored in ARBECPP
      *           and will contain a valid vendor number the user keys in.  Project E00039.
      *
      * 03/08/10  Barb Gutierrez
      *           Fix problem of not summarizing by account id AND sub ledger.  We were only
      *           summarizing at the account id level.
      *
      * 04/21/11  Barb Gutierrez
      *           Fix problem of writing the incorrect company number to JDE when the account id
      *           or sub ledger change We weren't resaving the accounting company number.
      *           C01504.
      *
      * 08/30/16  Brad Baden
      *           As part of project E5262, Chargeback and Rebill Modifications, A/R does not
      *           want Rebills to process the new Rebill (RB) invoice suffix records.  The will
      *           process in a special process for Rebills only.
      *
      *  3/24/2020 Rose Centonze P16169
      *                   Copy from ARMISJDE. Changed to use E1IDEVMDL
      *                   TABLES AND PROGRAMS
      *                   F0011  -->  E10011L0
      *                   F0901  -->  E10901
      *                   F0911  -->  E10911   - new edi fields
      *                   X0010  -->  GET0010  - change logic
      *                   X0011  -->  E1I0011      --> when wrt, also with e1b9cpp workfile E1LCXFR
      *                   X0028  -->  E1I0028  --> E10028A
      *                   X09031 -->  E1I09031 --> get09031
      *           Add parm for Live with E1 JDE. If not live, then dont update tables.
      *         1 set edi trans no to gldoc
      *         2 GLKCO - document company - leave blank
      *         3 GLPKCO  GLOKCO  GLPSFX  - leave blank , not 000
      *         4 glrcnd - reconciled-leave Blank
      *         5 glag - should have the amount, not GLAA
      *         6 icndo, icodcn- increment when get document
      *  ** 10/13/2020 ALL OMS GL ENTRIES WILL HAVE EDI USER‚OMSJDESF or OMSJDESE > xxedus  ***
      *  ** 10/14/2020 ALL OMS GL ENTRIES WILL HAVE transaction originator GLTORG -> sdusr  **
      *  MODIFIED BY:     Rose Centonze      04/13/2021
      *                   Create company 440 entries
      *                   User xxedus will have value in company value omsjdeusr per company
      *                   Change company 362 to 320
      *  ** 10/12/2021    TWEAK TO WORK FOR E1   -  CHANGED LF, ETC
      *  ** 02/28/2022    USE OFFAR320 FOR 440 OFFSETS  IN $OFFSETS440 SUBR
      *  ** 03/01/2022    Print L1DTL if acttot <> 0 -- it was printing a 0 amt line for offset act
      /eject
      *****************************************************************
      * File specifications
      ****************************************************************
      *
     F*arbecpl5  uf   e           k disk
     FarbecplC  uf   e           k disk                                             10-12-21
      * A/R Detail  by G/L posting CO, Deposit Date, Deposit Time, GL ID, sub ledger
      *             selects only Process Status = 'A' (bfajst)
      *             and post adjustments flag = 'Y' (bfetsx)
      *
     F*f0011     uf a e           k disk                                       p16169
     Fe10011l0  uf a e           k disk
      *   JDE batch header file
      *
     F*f0901     if   e           k disk                                           p16169
     Fe10901    if   e           k disk
      *   JDE Account master
      *   (This file is only used to define the fields that are used in what was a /Copy).
      *
     F*f0911     o    e             disk                                            p16169
     Fe10911    o    e             disk
      * JDE G/L ledger
      *
      *
     Fprint132  o    f  132        printer oflind(*inof)
     F                                     usropn
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
     D gldct           c                   'UA'
     D gllt            c                   'AA'
     D glam            c                   '2'
     D*glpkco          c                   '00000'
     D*glokco          c                   '00000'
     D*glpsfx          c                   '000'
     D glpkco          c                   '     '
     D glokco          c                   '     '
     D glpsfx          c                   '   '
     D glpost          c                   ' '
     D gleder          C                   const('B')
     D glcrrm          C                   const('D')
     D glcrcd          C                   const('USD')
      *
      *---------------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------------
      *
      * Standard fields
      *
     d rtime           s              6  0
     d return          s              7
      *
      *
      * Control fields
      *
     d first           s              1    inz('Y')
     d svc1ny          s                   like(bfc1ny)
     d svacctco        s                   like(bfc1ny)
     d svglid          s                   like(bfiztx)
     d svdvdt          s                   like(bfdvdt)
     d svdvdtjul       s                   like(bfdvdt)
     d svtime          s                   like(bfyxnx)
     d svsbl           s                   like(glsbl)
     d svglvl          s                   like(bfglvl)
      *
      *
      * Accumulators
      *
     D acttot          s             15  2
     D CO#AMT          s             15  2
     D wkoffsetam      s             15  2
     D wkoffset960     s             15  2                                      sdn440
     D wkoffset440     s             15  2                                      sdn440
     D batamt          s             15  0
     D batndo          s              5  0
     D batamtd         s             15  2                                      new with dec
      *
      * Workfields
      *
     d wktype          s              2
     d wkco            s                   like(glco)
     d wkco960         s                   like(bfaic3) inz(960)
     d wkco440         s                   like(bfaic3) inz(440)                sdn440
     d wkaid           s              8
     d wkglcode        s              8
     d wkani           s             29
     d wkdesc          s             29
     D wkvndr          s              9  0
     D wkvndr8         s              8  0
     D wksbl           s              9  0
     D wksbl8          s              8  0
     D wkmmddyy        s              6  0
     D continue        s              1
     D RBInvoice#      s                   like(bfconb)
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
     d wktime          s             12  0
     d wkdate          s              6  0
      *
      *
      * Parm fields
      *
     d xxtfflag        s              1
     d xxstflag        s              1
      *
     D xxmmddyy        s              6  0
     D xxccyymmdd      s              8  0
     D xxsyssyndt      s              7  0
      *
     d xxcalc          s              1
     d xxpn            s                   like(glpn)
     d xxfy            s                   like(glfy)
     d xxctry          s                   like(glctry)
     d xxedt           s              1
     d xxdgsy          s              1
      *
     d xxsidat         s              6
     d*xxedat          s              8
     d xxedat          s              6  0
     d xxffmt          s              7
     d xxtfmt          s              7
     d xxsep           s              7
     d xxertst         s              1
     d xxctryalph      s              2
      *
      *
     d xxbatch         s                   like(glicu)
     d xxsy            s              4
     d xxidx           s              2
     d xxsym           s              1
     d xxomod          s              1
     d xximod          s              1
     d xxerrm          s              4
      *
     d xxani           s                   like(glani)
     d xxicu           s                   like(glicu)
     d xxdoc           s                   like(gldoc)
      *
     D xxacctco        s              3  0
     D xxnumco         s              3  0
     d xxglcode        s              8
     d xxsubtype       s              1
     d xxbalsheet      s              1
     d xxlivee1        s              1
      *
      ****************************************************************
      * Data structures
      ****************************************************************
      *
     d i0901ds         ds           500
     d xxco                                like(gmco)
     d xxaid                               like(gmaid)
     d xxmcu                               like(gmmcu)
     d xxobj                               like(gmobj)
     d xxsub                               like(gmsub)
     d xxans                               like(gmans)
     d xxdl01                              like(gmdl01)
     d xxlda                               like(gmlda)
     d xxbpc                               like(gmbpc)
     d xxpec                               like(gmpec)
     d xxbill                              like(gmbill)
     d xxcrcd                              like(gmcrcd)
     d xxum                                like(gmum)
     d xxr001                              like(gmr001)
     d xxr002                              like(gmr002)
     d xxr003                              like(gmr003)
     d xxr004                              like(gmr004)
     d xxr005                              like(gmr005)
     d xxr006                              like(gmr006)
     d xxr007                              like(gmr007)
     d xxr008                              like(gmr008)
     d xxr009                              like(gmr009)
     d xxr010                              like(gmr010)
     d xxr011                              like(gmr011)
     d xxr012                              like(gmr012)
     d xxr013                              like(gmr013)
     d xxr014                              like(gmr014)
     d xxr015                              like(gmr015)
     d xxr016                              like(gmr016)
     d xxr017                              like(gmr017)
     d xxr018                              like(gmr018)
     d xxr019                              like(gmr019)
     d xxr020                              like(gmr020)
     d xxr021                              like(gmr021)
     d xxr022                              like(gmr022)
     d xxr023                              like(gmr023)
     d xxobja                              like(gmobja)
     d xxsuba                              like(gmsuba)
     d xxwcmp                              like(gmwcmp)
     d xxcct                               like(gmcct)
     d xxerc                               like(gmerc)
     d xxhtc                               like(gmhtc)
     d xxqlda                              like(gmqlda)
     d xxccc                               like(gmccc)
     d xxfmod                              like(gmfmod)
     d xxuser                              like(gmuser)
     d xxpid                               like(gmpid)
     d xxjobn                              like(gmjobn)
     d xxupmj                              like(gmupmj)
     d xxupmt                              like(gmupmt)
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      *----------------------------------------------------------------------------------
      * Mainline
      *----------------------------------------------------------------------------------
      *
      * Read records in the A/R Detail file.
      *   appropriate records selected in Logical file
      *
     C     *loval        setll     arbecplc
     C                   dou       *in80 = *on                                  Main do
     C                   read      arbecplc                               80
     C                   if        *in80 = *off                                  If not EOF
      *
      ** Record selection
      *
     C                   eval      continue = 'Y'
      *
     C                   select
     C                   when      bfuhcd = 'RB'
     C                   eval      continue = 'N'
     C                   eval      RBInvoice# = bfconb
      *
     C                   when      bfconb = RBInvoice#
     C                   eval      continue = 'N'
     C                   endsl
      *
      ** E5262 JBB - Do not process records where the Invoice Suffix is 'RB'
     C                   if        continue = 'Y'                                If Adj Typ not RB
      * Break logic:
      *  1) First time
      *  2) When Posting Company # changes AND the new company is 960 or 440    -- sdn440
      *  3) When Deposit Date, or Deposit Time changes
      *  4) When Account ID changes
      *
     C                   select
      *  1) First time
     C                   when      first = yes
     C                   exsr      $setsave
     C                   exsr      $first
      *
      *  2) posting company 960 or 440 - first time
      *     1.  write the last 3xx record to the GL
      *     2.  create offset records and setup new batch for company 440 or 960 (offsets)   sdn440
      *
     C** 10-12         when      (bfc1ny <> svc1ny and bfc1ny = 440)          sdn440
     C                   when      (bfc1ny <> svc1ny)                           sdn440- do for all
     C                   exsr      $write
     C*
     c*  Reverse the amt and write the offsetting 1910 for 320/360 -- ADDED 10-12-21
     C*        dont do this 10-12-21
     C*                  if        co#amt <> 0
     c*                  mult      -1            acttot
     C*                  exsr      $write  ????
     C*                  end
     c*
     C                   z-add     0             acttot
     c*
     C                   if        bfc1ny = 440
     C                   exsr      $offsets440
     C                   exsr      $setsave
     C                   move      yes           xxstflag
     c                   end
      *
     C                   if        bfc1ny = 960
     C                   z-add     0             acttot
     C                   exsr      $offsets
     C                   exsr      $setsave
     C                   move      yes           xxtfflag
     c                   end
      *
      *  3) When Deposit Date, or Deposit Time changes
      *     1.  write the record to the GL
      *     2.  setup save fields
      *     3.  Get new document number
      *     4.  Retrieve new julian date/year/period for deposit date
      *     5.  Print document heading
      *
     C                   when      (bfdvdt <> svdvdt or bfyxnx <> svtime)
     C                   exsr      $write
     C                   exsr      $setsave
     C                   exsr      $docnbr
      *
      *        Convert Deposit Date from CYYMMDD format to MMDDYY format.
      *
     C                   exsr      $julian
     C                   exsr      $synondt
      *
      *        Calculate the Period and Fiscal Year for the date
      *
     C                   exsr      $period
      *
     C                   except    hdg
     C                   except    dochdg
     C                   endsl
      *
      *  4) When Account ID changes or sub ledger
      *
     C                   if        bfiztx <> svglid or bfglvl <> svglvl
     C                   exsr      $write
     C                   exsr      $setsave
     C                   endif
      *
      * Detail processing:
      *   1) Accumulate Transaction Amount into Account.
      *   2) Accumulate Transaction Amount into total for OFFSET if Transaction company
      *              = 960 but Posting company <> 960.
      *   3) Update the AR Detail record as "posted"
      *
     C                   add       bfbsva        acttot
     C                   add       bfbsva        CO#AMT                        10-12
      *
     C                   if        bfaic3 = 960 and bfc1ny <> 960
     C*                  add       bfbsva        wkoffsetam
     C                   add       bfbsva        wkoffset960                      10-12
     C                   endif
      *
     C                   if        bfaic3 = 440 and bfc1ny <> 440
     C                   add       bfbsva        wkoffset440                    NEW 440   10-12
     C                   endif
      *
     C                   move      'P'           bfajst
     C                   z-add     xxbatch       bfcknb
     C                   z-add     xxsyssyndt    bfhydt
     C                   if        xxlivee1 = yes                                       p16169
     C**                 update    @becpa2
     C                   update    @becpzi
     C                   endif                                                  If Continue
      *
      ** E5262 JBB - Do not process records where the Invoice Suffix is 'RB'
     C                   endif                                                  If Continue
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *----------------------
      * EOF processing
      *----------------------
      *
      *
     C                   select
     C                   when      first = yes
     C                   open      print132
     C                   except    hdg
     C                   except    norec
     C                   other
      *
      * Write out last record to JDE and then
      * Conditionally write a Batch record
      *
     C                   exsr      $write
     C                   if        batamt <> 0                                  If batch $$ not 0
     C                   exsr      $writebatch
     C                   endif                                                  If batch $$ not 0
     C                   endsl
      *
      * This will close any files that were left open from any called programs.
      *
     C                   call      'UTRCRSC'
     C                   close     print132
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------------------------
      * Setup save fields and account description
      *----------------------------------------------------------------------------------
      *
     C     $setsave      begsr
      *
     C                   z-add     bfc1ny        svc1ny
     C                   z-add     bfc1ny        svacctco
     C                   z-add     bfdvdt        svdvdt
     C                   z-add     bfyxnx        svtime
     C                   move      bfiztx        svglid
      *
     C                   z-add     bfglvl        svglvl
     C                   movel     bfglvl        wkglvl            9 0
     C                   move      wkglvl        prglvl            8 0
      *
     C                   z-add     0             acttot
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Format a date to Julian format
     C*----------------------------------------------------------------------------------
      *
     C     $julian       begsr
      *
     C                   move      bfdvdt        xxsidat
     C     *cymd         move      bfdvdt        wkisodate
     C     *mdy          move      wkisodate     xxmmddyy
     c                   move      wkisodate     xxccyymmdd
      *
     C*                  call      'X0028'                                   p16169
     C*                  call      'E1I0028'
     C*                  parm                    xxsidat
     C*                  parm      *blank        xxedat
     C*                  parm      '*YMD   '     xxffmt
     C*                  parm      '*JUL   '     xxtfmt
     C*                  parm      '*NONE  '     xxsep
     C*                  parm      *blank        xxertst
     C*                  parm      *blank        xxctryalph
      *
     C                   call      'E10028A'
     C                   parm                    xxccyymmdd
     C                   parm      0             xxedat
      *
     c                   move      xxedat        xxsidat
     C                   move      xxsidat       svdvdtjul
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Write a Journal Record to JDE for the total of this account ID
      *----------------------------------------------------------------------------------
      *
     C     $write        begsr
      *
     C                   move      svglid        wkaid
     C                   move      wkaid         glaid
     C****               move      acttot        glaa
     C                   z-add     acttot        glag
      *
     C                   move      0             wkco
     C                   move      svacctco      wkco
     C                   move      wkco          glco                           Company nbr
      *
     C                   movel     wktype        glicut                         Batch type
     C                   z-add     xxbatch       glicu                          Batch number
     C*****              move      'R'           glrcnd                         Reconciled code
     C                   move      ' '           glrcnd                         Reconciled code
      *
     C**                 movel     sdusr         gluser                         User ID
     c                   movel     xxedus        gluser                         user id p16169
     C                   movel     sdusr         gltorg                         Trans Originator
     C                   movel     sdjob         gljobn                         Workstation ID
     C                   move      svdvdtjul     gldgj                          G/L date
     C                   move      *blank        glcn                           Check number
     C                   z-add     0             gldkj                          Check date
     C                   z-add     0             gldkc                          Check clear date
      *
     C                   add       1             gljeln                         Line number
     C                   move      gldsyj        gldicj                         Batch date
      *
      * P16169 added for new fields in e10911
     C**                 movel     sdusr         gledus                         edi user id
     C                   movel     xxedus        gledus                         edi user id
     C                   movel     glicu         gledbt                         edi batch no
     C                   movel     gldoc         gledtn                         edi trans #->gldoc
     C                   z-add     gljeln        gledln                         edi line no
     C                   movel     '0'           gledsp                         edi success procd
     C                   movel     'A'           gledtc                         edi trans action
     C                   movel     'J'           gledtr                         edi trans type
     C                   move      xxsyssyndt    glabdt                         Date updated
     C                   time                    glabtm                         Time Last Updated
     C                   movel     'ARMISJE1 '   glakvn                         pgm  Last Updated
     C**                 movel     gluser        glajvn                         user id created
     C                   movel     sdusr         glajvn                         user id created
      *
      *
      * Retrieve JDE account ID for the cost center/object/subsidiary
      *
     C                   exsr      $account
      *
      * Retrieve the structured Account Number.
      *
     C                   move      *blank        wkani
      *
     C*                  call      'X0901'                                         p16169
     C                   call      'E1I0901'
     C                   parm                    xxsym
     C                   parm      '2'           xxomod
     C                   parm      '9'           xximod
     C     wkani         parm                    xxani
     C                   parm      glmcu         xxmcu
     C                   parm      globj         xxobj
     C                   parm      glsub         xxsub
     C                   parm                    xxerrm
     C                   parm                    i0901ds
      *
     C                   if        xxerrm = *blank
     C                   movel     wkani         glani                          Account nbr
     C                   else
     C                   move      *blank        glani
     C                   endif
     c     glco          ifeq      '00000'                                      added p16169
     c                   move      glmcu         wrk3              3
     c                   move      wrk3          glco
     c                   end
      *
     C                   move      svdvdtjul     gldsvj                         Service/tax date
      *
     C                   eval      glexa = 'A/R MISC DEP'                       Explanation
     C**                 movel     sdusr         gluser                         User id
     C                   movel     xxedus        gluser                         User id
     C                   move      *blank        glre                           Reverse/void
     C                   move      0             glcrr                          Exchange rate
     C                   move      0             glhcrr                         Hist exch rate
      *
      *  E00039
      *
      *  BFGLVL is an 11.2 amount field that is being used to store the vendor number.  We do not
      *  want the decimal portion of the amount field.  Ultimately the vendor number must be
      *  8A, left zero filled.  (WKVNDR 9.0, WKVNDR8 is 8.0.)
      *
     C                   if        svglvl <> 0
     C                   movel     svglvl        wksbl                          9.0
     C                   move      wksbl         wksbl8                         8.0
     C                   movel     wksbl8        glsbl
     C                   move      'A'           glsblt                         Subledger type
     C                   else
     C                   move      *blanks       glsbl
     C                   move      *blanks       glsblt
     C                   z-add     *zeros        wksbl
     C                   z-add     *zeros        wksbl8
     C                   endif
      *
      * only write the record to GL if the amount is not 0
      *
     C****8              if        glaa <> 0
     C                   if        glag <> 0
     C                   write     i0911
     C                   endif
      *
      * Accumulate Debit Amounts for the Batch Header
      *
     C*****              if        glaa > 0
     C                   if        glag > 0
     C*****              add       glaa          batamtd                         with dec
     C                   add       glag          batamtd                         with dec
     C                   move      batamtd       batamt                          no dec
     C****               add       1             batndo       increment when doc no changes
     C                   endif
      *  change to print if not 0 -- it was printing a 0 amt line for offset act  3-1-22
     C                   if        acttot <> 0                                   3-1-22 prt if <>0
     C                   exsr      $l1dtl
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Print the detail line
      *---------------------------------------------------------------
      *
     C     $l1dtl        begsr
      *
     C   of              except    hdg
     C                   except    l1dtl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Create offsetting company entries for 440 transactions and create new batch     sdn440
      *----------------------------------------------------------------------------------
      *
     C     $offsets440   begsr
      *
      * 1.  Write 3xx Offset Record
      * 2.  Write 3xx Batch Record
      * 3.  Setup for first 440 record/batch/document # etc.
      * 4.  Setup generic user name for STF JDE GL batch posting
      * 5.  Write 440 Offset Record
      *
      *
      * Write 3xx Offset Record
      *
     C                   z-add     *zeros        svglvl                         Save Subledger
     C                   move      *blanks       glsbl                          Subledger
     C                   move      ' '           glsblt                         Subledger type
      *
     C                   eval      wkglcode = 'OFFAR320'                        USE THIS 2-28-12
     C*******            eval      wkglcode = 'ARBANK  '                        10-12 - TRY THIS??
     C                   move      wkco440       xxnumco
     C                   exsr      $getglid
     c                   eval      acttot = (wkoffset440 * -1)
     C                   if        acttot <> 0
     C                   exsr      $write
     C                   endif
      *
      * Write 3xx Batch Record
      *
     C                   if        batamt <> 0
     C                   exsr      $writebatch
     c                   endif
      *
      * Setup for first 440 record: get new batch/document number, etc.
      *
     C                   close     print132
     C                   exsr      $first
     C                   move      *blanks       sdusr
     C                   movel     'OMSJDEST'    sdusr
     C                   z-add     0             gljeln
      *
      * Write the 440 Offset record
      *
     C                   eval      wkglcode = 'OFFAR440'
     C                   move      wkco440       xxnumco
     C                   exsr      $getglid
     c                   eval      acttot = wkoffset440
     C                   if        acttot <> 0
     C                   exsr      $write
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------------------
      * Create offsetting company entries for 960 transactions and create new batch
      *----------------------------------------------------------------------------------
      *
     C     $offsets      begsr
      *
      * 1.  Write 3xx Offset Record
      * 2.  Write 3xx Batch Record
      * 3.  Setup for first 960 record/batch/document # etc.
      * 4.  Setup generic user name for TF JDE GL batch posting
      * 5.  Write 960 Offset Record
      *
      *
      * Write 3xx Offset Record
      *
     C                   z-add     *zeros        svglvl                         Save Subledger
     C                   move      *blanks       glsbl                          Subledger
     C                   move      ' '           glsblt                         Subledger type
      *
     C                   eval      wkglcode = 'OFFAR320'
     C                   move      wkco960       xxnumco
     C                   exsr      $getglid
     c**                 eval      acttot = (wkoffsetam * -1)
     c                   eval      acttot = (wkoffset960 * -1)                   10-12
     C                   if        acttot <> 0
     C                   exsr      $write
     C                   endif
      *
      * Write 3xx Batch Record
      *
     C                   if        batamt <> 0
     C                   exsr      $writebatch
     c                   endif
      *
      * Setup for first 960 record: get new batch/document number, etc.
      *
     C                   close     print132
     C                   exsr      $first
     C                   move      *blanks       sdusr
     C                   movel     'TFGLPOST'    sdusr
     C                   z-add     0             gljeln
      *
      * Write the 960 Offset record
      *
     C                   eval      wkglcode = 'OFFAR960'
     C                   move      wkco960       xxnumco
     C                   exsr      $getglid
     c**                 eval      acttot = wkoffsetam
     c                   eval      acttot = wkoffset960                              10-12
     C                   if        acttot <> 0
     C                   exsr      $write
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * One-time routine for first time through
      *---------------------------------------------------------------
      *
     C     $first        begsr
      *
     C                   move      no            first
     C                   open      print132
     C                   z-add     0             page
      *
      * Retrieve a Batch Number from JDE
      *
     C                   exsr      $batnbr
      *
      * Retrieve the Julian format of the Deposit Date
      *
     C                   exsr      $julian
      *
      * Convert Deposit Date from CYYMMDD format to MMDDYY format.
      *
     C                   exsr      $synondt
      *
      * Calculate the Period and Fiscal Year for the date
      *
     C                   exsr      $period
      *
      * Generate a Document Number from JDE
      *
     C                   exsr      $docnbr
      *
     C                   except    hdg
     C                   except    dochdg
      *
     C*                  move      *zeros        glkco
     C*                  move      bfaic3        glkco
     C                   move      *blanks       glkco
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Convert Synon Deposit Date into MMDDYY format
      *---------------------------------------------------------------
      *
     C     $synondt      begsr
      *
     C     *cymd         test(d)                 svdvdt                 92
     C                   if        *in92 = *off                                 If OK date
     C     *cymd         move      svdvdt        wkisodate
     C     *mdy          move      wkisodate     wkmmddyy
     C                   else
     C                   z-add     0             wkmmddyy
     C                   endif                                                  If OK date
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculate the Period and Fiscal Year for a date
      *---------------------------------------------------------------
      *
     C     $period       begsr
      *
     C                   move      *zero         wkco
     C                   move      bfaic3        wkco
     C*                  call      'X09031'                                       p16169
     C*                  call      'E1I09031'
     C*                  parm      '1'           xxcalc
     C*                  parm      wkco          xxco
     C*                  parm      wkmmddyy      wkdate
     C*    glpn          parm      0             xxpn
     C*    glfy          parm      0             xxfy
     C*    glctry        parm      0             xxctry
     C*                  parm      *blank        xxedt
     C*                  parm      *blank        xxdgsy
JEU56 * Begin of Added code for GET09031                                    p16169
JEU56 * Retrieve Acct. Period                                     copied from smlgen/qrpgsrc/edenupr
JEU56C                   MOVE      gldsyj        #DG                             julian date
     C                   move      wkco          #CO
MN04 C                   move      0             #CTRY             2 0
MN04 C                   move      0             #FY               2 0
      *
MN04 C******             CALL      'GETFYPNO'
MN04 C                   CALL      'GET09031'
MN04 C                   PARM                    #CO               5
MN04 C                   PARM                    #DG               6 0
MN04 C                   PARM      0             #PN               2 0
MD   C                   PARM      0             #FY               2 0
MD   C                   PARM      0             #CTRY             2 0
     C                   parm      ' '           BSSV              1
MN04  *
     C                   z-add     #pn           glpn                           period
     C                   z-add     #fy           glfy                           fiscal year
     C                   z-add     #ctry         glctry                         fiscal century
      *
      ******* End of code added for GET09031                                     p16169
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve a Batch Number from JDE ENTERPRISE 1    P16169
      *---------------------------------------------------------------
      *
     C     $batnbr       begsr
      *
     C*                  call      'X0010 '                                         p16169
     C*                  call      'E1I0010 '                                         p16169
     C*                  parm      '00  '        xxsy
     C*                  parm      '01'          xxidx
     C*                  parm      0             xxbatch
     C                   call      'GET0010 '                                   p16169
     C                   parm      '00  '        xxsy
     C                   parm      '01'          xxidx
     C                   parm      0             spsnbr           15 0          chg from xxbatch
     C                   parm      ' '           bssv              1            added parm
     c                   z-add     spsnbr        xxbatch
     C                   z-add     0             batndo                        increment for new doc
      *
      *
     C                   movel     'G'           wktype
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve a Document Number from JDE
      *---------------------------------------------------------------
      *
     C     $docnbr       begsr
      *
     C**                 call      'X0010 '                                         p16169
     C*                  call      'E1I0010 '                                         p16169
     C*                  parm      '09  '        xxsy
     C*                  parm      '02'          xxidx
     C*                  parm                    xxdoc                             chg from xxdoc
     c*                  z-add     xxdoc         gldoc
     C                   call      'GET0010 '
     C                   parm      '09  '        xxsy
     C                   parm      '02'          xxidx
     C                   parm                    spsnbr                            chg from xxdoc
     C                   parm      ' '           bssv                              added parm
     c                   z-add     spsnbr        gldoc                                  -was parm mv
     C                   add       1             batndo                        increment for new doc
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve the Account info
      *---------------------------------------------------------------
      *
     C     $account      begsr
      *
      * Retrieve JDE account ID for the cost center/object/subsidiary
      *
     C*                  call      'X0901'                                            p16169
     C                   call      'E1I0901'
     C                   parm                    xxsym
     C                   parm      '9'           xxomod
     C                   parm      '1'           xximod
     C                   parm      svglid        xxani
     C                   parm      *blank        xxmcu
     C                   parm      *blank        xxobj
     C                   parm      *blank        xxsub
     C                   parm      *blank        xxerrm
     C                   parm                    i0901ds
      *
     C                   if        xxerrm = *blank
     C                   movel     xxdl01        wkdesc
     C                   movel     xxmcu         glmcu
     C                   movel     xxobj         globj
     C                   movel     xxsub         glsub
     C                   else
     C                   eval      wkdesc = '*** Invalid Account ***'
     C                   move      *blank        glmcu
     C                   move      *blank        globj
     C                   move      *blank        glsub
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------------------------
      * get the GLID code from PKCWREP for the Account Codes
      *----------------------------------------------------------------------------------
      *
     C     $getglid      begsr
      *
      * Get account ID from pkcwrel5  based on the offset accounts
      *
     C                   eval      svglid  = *blank
      *
      * Retrieve Account I.D. associated with G/L Code.
      *
     C                   call      'PKTIXFR'
     C                   parm                    return
     C*** sdn440         parm      wkco960       xxnumco  ***   set in calling subrs
     C                   parm                    xxnumco
     C                   parm      wkglcode      xxglcode
     C     svglid        parm      *blank        xxaid
     C                   parm      *blank        xxsubtype
     C                   parm      *blank        xxbalsheet
     C                   parm      *zeros        xxacctco
      * Posting company
     C                   z-add     xxacctco      svacctco
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write the Batch Record to JDE
      *---------------------------------------------------------------
      *
     C     $writebatch   begsr
      *
     C**   key01         chain     f0011                              92        p16169
     C     key01         chain     E10011L0                           92
     C                   if        *in92 = *off                                 If exists
     C                   except    hdg
     C                   except    norec
      *
     C                   else
     C                   move      xxbatch       icicu
     C                   movel     wktype        icicut
     C                   move      batamt        icaicu                         no dec
     C                   move      gldicj        icdicj
     C                   move      batndo        icndo
     C                   z-add     batamtd       icame                          has dec, was a move
     C                   move      batndo        icdocn
     C**                 movel     sdusr         icuser
     C                   movel     xxedus        icuser
     C                   move      'A'           iciapp
     C                   move      'Y'           icbal
     C                   move      ' '           icbalj
     C                   move      ' '           icist
     C                   move      'N'           icpob
     C                   move      'Y'           iciboi
     C*                  write     i0011                                         p16169
     C                   write     i0011L0
     C*
     C* WRITE RUN LOG HEADER WORKFILE - WILL BE READ IN CL pdwaupr TO PUSH BATCHES TO ZPROCESSOR
     C*
     C                   call      'E1LCXFR'
     c                   parm                    RETURN            7
     C                   parm                    icICUT                         BATCH TYPE
     C                   parm                    icICU                          BATCH NUMBER
     C                   parm                    icuser                         USER
     C                   parm                    wkco                           company
      * reset batndo
     C                   z-add     0             batndo
     C                   z-add     0             batamt
     C                   z-add     0             batamtd
     C                   endif                                                  If exists
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm
      *
     C     *entry        plist
     C                   parm                    return
     C                   parm                    xxtfflag
     C                   parm                    xxlivee1                              p16169
      *
      * Key Lists
      *
     C     key01         klist
     C                   kfld                    wktype
     C                   kfld                    xxbatch
      *
     C                   time                    rtime
      *
      * Put system date into an 8,0 field.
      * Then, get it into Synon format of CYYMMDD to use in updating AR Detail file.
      *
     C     *mdy          movel     udate         wkisodate
     C                   movel     wkisodate     xxccyymmdd
     C                   call      'HP8008'
     C                   parm                    xxccyymmdd
     C                   parm      0             xxsyssyndt
      *
      *
      * Get system date into the format required by JDE by calling JDE's routine.
      * Save the date for populating lots of fields.
      *
     C                   time                    wktime
     C                   move      wktime        wkdate
     C                   move      wkdate        xxsidat
      *
     C*                  call      'X0028'                                       p16169
     C*                  call      'E1I0028'
     C*                  parm                    xxsidat
     C*                  parm      *blank        xxedat
     C*                  parm      '*SYSVAL'     xxffmt
     C*                  parm      '*JUL   '     xxtfmt
     C*                  parm      '*NONE  '     xxsep
     C*                  parm      *blank        xxertst
     C*                  parm      *blank        xxctryalph
      *
     C                   call      'E10028A'
     C                   parm                    xxccyymmdd
     C                   parm      0             xxedat
     c                   move      xxedat        xxsidat
      *
     C                   move      xxsidat       glupmj
     C                   move      xxsidat       gldsyj
      *
     C                   time                    glticu
     C                   time                    glupmt
      *
     C                   move      sdpgm         glpid
     C                   movel     sdjob         gljobn
      *
      * Get company value OMSJDE for User ID to use for gledus    - without company
      *
     c                   movel     'OMSJDEUSR '  xxval
     c                   call      'PUR4XFR '
     C                   PARM                    XXRTN             7
     C                   PARM                    XXVAL            10
     C                   PARM                    XXEDUS           10
     C
     c                   if        xxedus = *blanks                              added for p16169
     c                   movel     'OMSJDESF  '  xxedus                         default
     c                   end
     C*
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
     Oprint132  E            HDG            1 01
     O                                            8 'ARMISJE1'
     O                                           63 'ACCOUNTS RECEIVABLE'
     O                                           70 'SYSTEM'
     O                       UDATE         Y    131
     O          E            HDG            1
     O                       sdusr               10
     O                                           68 'MISCELLANEOUS POST LIST'
     O                       RTIME              131 '0 :  :  '
     O          E            HDG            1
     O                                          127 'PAGE'
     O                       PAGE          Z    131
      *
     O          E            HDG            2
      *                                  10 'SELECTION:'
     O                                           87 'E1 BATCH # .. :'
     O                       wktype              95
     O                       xxbatch       z    104
      *
     O          E            HDG            1
     O                                           18 'DOCUMENT  DEPOSIT'
     O                                           27 'DEPOSIT'
     O                                           55 'COST     OBJECT  SUB'
     O                                           73 'CODE  DESCRIPTION'
     O                                          101 'SUBLEDGER'
     O                                          118 'AMOUNT'
      *
     O          E            HDG            2
     O                                           26 'DATE     TIME'
     O                                           40 'CENTER'
      *
     O          E            DOCHDG      1  0
     O                       gldoc         Z      8
     O                       wkmmddyy            18 '  /  /  '
     O                       BFYXNX              25 '0 :  '
      *
      *-------------------------------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------------------------------
      *
     O          e            l1dtl          1
     O                       glmcu               40
     O                       globj               48
     O                       glsub               58
     O                       wkdesc              91
     O                       GLSBL              101
     O                       acttot        j    125
      *
      *-------------------------------------------------------------------------------------
      * No data message
      *-------------------------------------------------------------------------------------
      *
     O          e            norec       2
     O                                           33 'No records selected'
      *
