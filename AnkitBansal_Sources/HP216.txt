      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP216 - Datamart FIN: Build Reported Daily Activity
      *                      and Update Group Detail
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     10/23/02
      *
      * FUNCTION:    For a History run, this file will be cleared/built.
      *              For a Current run, records are deleted/rebuilt.
      *
      *              Only Nursery and Grow Finish farms are included.
      *
      *              I know this is a 'daily' file, but we added several 'weekly'
      *              fields. The values in these fields will be the same for each
      *              'daily' record in a week. They hold the 'averages' of the
      *              corresponding weekly records from the Datamart FIN Weekly Group Detail
      *              file.
      *
      *              Also, this program updates the Man Hours for the group records in the
      *              Datamart FIN: Weekly group detail file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/10/03  LeAnne Fedor
      *           Added 3 new 'weekly' fields:
      *                     days of growth
      *                     weeks of growth
      *                     average days of growth in
      *
      *           Changed the calc logic and field text on 2 weekly fields:
      *             rdphsstg is now 'stage of growth' instead of 'stage of phase'
      *             rdpwkday is now 'alpha growth weeks-days' instead of
      *                             'alpha phase weeks-days'
      *
      * 04/23/03  LeAnne Fedor
      *           Added 'version' parm on call to generic 'stage of growth' program.
      *
      * 10/27/04  LeAnne Fedor
      *           Recompile only. New field "3-week average dead" added to file
      *           Datamart FIN: Weekly Group Detail.
      *
      * 11/29/04  LeAnne Fedor
      *           Two new fields/logic added to Datamart FIN: Reported
      *           Daily Activity:
      *               Daily farm phase
      *               Origin BGF pod
      *
      * 02/01/05  LeAnne Fedor
      *           Recompile only. New fields (Sire Line Company and Prime Line) added
      *           to Datamart Group Header file.
      *
      * 03/21/05  LeAnne Fedor
      *           We were having abend problems when the HPS data had a valid date that
      *           was too far in the future. The date, although valid, did not exist in
      *           the OMS Calendar file. So, the logic could not find the corresponding
      *           "Saturday" date and we were trying to set a Datamart "Date Format" field
      *           to zeros---which is not allowed with "Date Format" fields. So, I added
      *           logic to set the "Date Format" field to the "Null" date instead of zeros.
      *
      * 03/21/05  Barb Gutierrez
      *           Added logic to retrieve culled head and culled pounds
      *           per request COG032.
      *
      * 06/06/05  LeAnne Fedor
      *           We were encountering extensive IO's on HSL084C. We added
      *           Received Date as a key field and changed the logic to READE on
      *           Farm/Date instead of just Farm.
      *
      * 08/25/05  LeAnne Fedor
      *           Added new field 'Man Hours' to Reported Daily Activity file.
      *           Also, this program updates the Man Hours for the group records in the
      *           Datamart FIN: Weekly group detail file.
      *
      * 10/03/05  LeAnne Fedor
      *           Added logic to populate new field "Avg Prior Week Dead Pounds" in
      *           the Datamart FIN: Reported Daily Activity file.
      *
      * 12/07/05  LeAnne Fedor
      *           Changed Origin BGF Pod and Weekly Number of Groups logic.
      *           POD: We will now find all open groups for a week and check their Origin BGF
      *                Pods. If there are multiple pods, we will use '1' for the Pod value to
      *                indicate "Mixed" pods.
      *           Weekly Number of Groups: We now only "count" for a week, the groups with
      *                Pig Days.
      *
      * 04/20/06  LeAnne Fedor
      *           Changed Origin BGF Pod logic.
      *
      * 04/27/06  LeAnne Fedor
      *           Changed the "NC" (not-complete sales movement) logic. We
      *           now handle NC like "FP" (fully paid) instead of like
      *           "SH" (shipped).
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 08/10/07  LeAnne Ramsey
      *           Recompile only. New "target" fields renamed in the Datamart Group
      *           Header file.
      *
      * 09/21/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added/removed in the Datamart Group
      *           Header file.
      *
      * 05/14/09  LeAnne Ramsey
      *           Per Sami Wilson, we removed Projected Destroyed Head.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 05/24/10  LeAnne Ramsey
      *           Recompile only. Added 2 fields to HPPF075-Weekly Group Detail:
      *              WBWEDTMDCY-Week Ending Date in date format mm/dd/ccyy
      *              WBPAJTIHD -Placement Adjusted Transfer In Head
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      * 08/31/11  LeAnne Ramsey  (E1716)
      *           Added logic to write a record to HPPF103 for the system date if/when
      *           there is no record for the system date in HSP103. If we don't do this,
      *           the Beginning/Ending Inventory Head doesn't work correctly in Cognos.
      *
      * 09/02/11  LeAnne Ramsey  (E1716)
      *           We removed all of the logic that was added for E1716. It solved the
      *           missing Beginning/Ending Inventory Head problem but caused all the Week-
      *           to-Date Cognos reports to be wrong when the HPBLDFIN was generated
      *           on-demand...not at the regular scheduled time.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 11/14/17  Danny Nguyen     (E11978 - DM Add Origin Sow Cell to NurFin Daily File)
      *           Added 1 field to HPPF103 file:
      *              RDOBCELL - Origin BGF Cell
      *           Get Origin BGF Cell from HPPF034 & populate RDOBCELL in HPPF103 file.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsl034t   if   e           k disk    rename(hgrec:hgreca) prefix(p4)
      *  Hog group (logical omits Created and Voided groups)
      *
      *
     Fhsp103    if   e           k disk
      *  Reported daily activity
      *  (records selected in open query)
      *
      *
     Fhsl103b   if   e           k disk    rename(rdrec:rdrecb) prefix(p5)
      *  Reported daily activity
      *
      *
     Fhppf034   if   e           k disk
      *  Datamart FIN: Group header
      *
      *
     Fhsl084c   if   e           k disk
      *  Sales movement header
      *
      *
     Fhsp085    if   e           k disk
      *  Sales movement detail
      *
      *
     Fhplf075a  uf   e           k disk
      *  Datamart FIN: Weekly group detail
      *
      *
     Fhppf103   uf   e           k disk    rename(rdrec:rdrec3) prefix(p3)
      *  Datamart FIN: Reported daily activity
      *
      *
     Fhplf103a  uf a e           k disk    rename(rdrec:rdreca) prefix(p1)
      *  Datamart FIN: Reported daily activity
      *
      *
     Fhplf103c  uf   e           k disk    rename(rdrec:rdrecc) prefix(p2)
      *  Datamart FIN: Reported daily activity
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arpod           s              3  0 dim(500)
     D arhd            s              9  0 dim(500)
      *
      * Array indexes
     D w               s              3  0
     D x               s              3  0
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control and save fields
      *
     D activefl        s              1
     D svpod           s                   like(fspod)
      *
     D svppcd          s                   like(hgppcd)
     D svfscd          s                   like(p3rdfscd)
     D svcdyr          s                   like(p3rdcdyr)
     D svcdwk          s                   like(p3rdcdwk)
      *
     D svadoi          s                   like(p3rdadoi)
     D svadgi          s                   like(p3rdadgi)
     D svbihd          s                   like(p3rdbihd)
     D sveihd          s                   like(p3rdeihd)
     D svnbr           s                   like(p3rdnbr)
      *
     D svgrwday        s                   like(p3rdgrwday)
     D svgrwwk         s                   like(p3rdgrwwk)
      *
     D svphsday        s                   like(p3rdphsday)
     D svphswk         s                   like(p3rdphswk)
      *
     D svpwkday        s                   like(p3rdpwkday)
     D svphsstg        s                   like(p3rdphsstg)
      *
     D svhd            s             11  0
     D svlb            s             15  2
      *
      *
      * Date manipulation fields
      *
     D wkisodydt       s                   like(p1rddydt)
     D wkccyymmdd      s              8  0
     D wkyymmdd        s              6  0
     D wkbegiso        s                   like(p1rddydt)
     D wkpwedt         s                   like(p3rdwedt)
     D wknulldt        s                   like(p1rdwedt) inz(D'0001-01-01')      Null date
     D wkdydt          s              8  0
      *
      *
      * Workfields for accumulators
      *
     D wktmanhr        s                   like(rdmanhr)
     D wkrmanhr        s                   like(rdmanhr)
     D wkmanhr         s                   like(rdmanhr)
     D wkrate          s             11  6
     D wkpigday        s                   like(wbpigday)
      *
     D count1          s              5  0
     D count2          s              5  0
     D wkddhd          s                   like(rdddhd)
     D wkdshd          s                   like(rddshd)
     D wkbihd          s             11  0
     D wkeihd          s             11  0
     D wkadoi          s             11  0
     D wkadgi          s             11  0
     D wkphsday        s             11  0
     D wkgrwday        s             11  0
      *
     D wkfseihd        s             11  0
      *
      * Workfields
      *
     D wklb            s             15  2
     D wkday           s              1  0
     D wkwk            s              2  0
     D wkalphaday      s              1
     D wkalphawk       s              2
      *
      *
      * Parm fields
      *
     D xxgrwwk         s                   like(svgrwwk)
     D xxalphstg       s                   like(svphsstg)
     D xxnumstg        s              3  0
     D xxversion       s              4
      *
     D xxcdyr          s                   like(p1rdcdyr)
     D xxcdwk          s                   like(p1rdcdwk)
     D xxcocd          s              3  0
     D xxreturn        s              7a
     D xxcyymmddi      s              7  0
     D xxcyymmddo      s              7  0
     D xxcurbegdt      s              8  0
     D xxcurhist       s              1
      *
     D xxname          s              9
     D xxabbrev        s              4
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Logic in this program requires 3 steps.
      * 1) Process all records in the HPS Reported Daily Activity file writing
      *    a corresponding record to the Datamart file.
      * 2) Process the 'Tuesday' Datamart records that you just wrote and
      *    retrieve the Sunday thru Tuesday head totals; update the Datamart
      *    Tuesday record.
      * 3) Process the Datamart records again and come up with the 'weekly' values
      *
      * Step 1:
     C                   dou       *in90 = *on                                  Step 1
     C                   read      hsp103                                 90
     C                   if        *in90 = *off                                 If not EOF
     C                   exsr      $wrt103
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 1
      *
      *
      * Step2: Update the 'Tuesday' records.
      *
     C                   exsr      $tuesday
      *
      * Step3: Come up some values for the 'weekly' fields.
      *
     C                   exsr      $weekly
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------------
      * Logic for writing the Datamart records.
      *----------------------------------------------------------------------------
      *
     C     $wrt103       begsr
      *
      * Call the SYNON program that will return the Saturday week-ending
      * date, HPS calendar year, HPS calendar week.
      *
     C                   exsr      $saturday
      *
      * Now, determine if you already have a record for this farm/daily date in
      * the datamart file. If you do, delete it.
      *
     C                   move      rddydt        wkisodydt
     C     key01         chain     hplf103a                           92
     C                   if        *in92 = *off
     C                   delete    rdreca
     C                   endif
      *
      * Populate the Datamart record
      *
     C                   z-add     xxcdyr        p1rdcdyr
     C                   z-add     xxcdwk        p1rdcdwk
      *
     C                   z-add     rdfscd        p1rdfscd
     C                   z-add     rdddhd        p1rdddhd
     C                   z-add     rddshd        p1rddshd
     C                   z-add     rdmanhr       p1rdmanhr
      *
      * Retrieve the 'day' of the week associated with the date.
      *
     C                   z-add     rddydt        wkdydt
      *
     C                   call      'HP8005'
     C                   parm                    wkdydt
     C                   parm      *blank        xxname
     C     p1rdday       parm      *blank        xxabbrev
      *
      *
      * Move daily date and week-ending date to ISO date fields
      *
     C                   move      rddydt        p1rddydt
      *
     C                   if        wkccyymmdd = 0
     C                   move      wknulldt      p1rdwedt
     C                   else
     C                   move      wkccyymmdd    p1rdwedt
     C                   endif
      *
      * Come up with a:
      *   1) Daily Farm Phase
      *
     C                   exsr      $ppcd
      *
      * Retrieve the head received and sales out of this farm.
      *
     C                   exsr      $sales
      *
     C                   write     rdreca
     C                   clear                   rdreca
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Come up with a Daily Farm Phase
      *----------------------------------------------------------------------------
      *
      * We had a problem when reporting on Wean-to-Finish farms because they have
      * Nursery groups on some days/weeks and Grow Finish groups on other days/weeks.
      * So, retrieving the Farm's default phase for reporting wasn't working out.
      *
      * So, as of November 2004, we added a Daily Farm Phase field to this Datamart file.
      * We will populate this field using the following logic:
      *
      * 1) Find the Open Group on the farm with an Open Date closest (prior) to the
      *    Daily Date. Use the phase of that group.
      *
      * 2) If you got nothing from Step 1, just use the Farm default Phase.
      *
      *
     C     $ppcd         begsr
      *
     C                   move      *blank        svppcd
11978C                   z-add     *zero         p1rdobcell
      *
      * Position in the Hog Group file with farm/daily date.
      *
     C     key04         setll     hsl034t
     C     rdfscd        readpe    hsl034t                                93
     C                   if        *in93 = *off                                 If open
     C                   move      p4hgppcd      svppcd
      *
      * Retrieve the Average Weight in from the Datamart FIN: Group file.
      *
     C     p4hghgcd      chain     hppf034                            92
     C                   if        *in92 = *off
     C                   z-add     hgavlb        p1rdavlb
11978C                   z-add     hgobcell      p1rdobcell
     C                   endif
      *
     C                   endif                                                  If open
      *
      * If you got nothing from your Open Group logic, go get the Farm Phase.
      *
     C                   if        svppcd = *blank                              If no phase
     C     rdfscd        chain     hsp018                             92
      *
     C                   if        *in92 = *off
     C                   move      fsppcd        svppcd
     C                   endif
     C                   endif                                                  If no phase
      *
     C                   move      svppcd        p1rdppcd
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Read sales looking for Cull Sales for a Farm/Date
      *-----------------------------------------------------------------------------------------
      *
      * Read all sales movement header records for a farm/date.
      * If it is a Cull Sale, process.
      *
     C     $sales        begsr
      *
     C     key04         setll     hsl084c
      *
     C                   dou       *in91 = *on                                  Do header
     C     key04         reade     hsl084c                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             shstcd = 'CULLS'
      *
     C                   exsr      $culls
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do header
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Cull sales
      *-----------------------------------------------------------------------------------------
      *
     C     $culls        begsr
      *
      * Read sales detail for the movement
      *
     C     shmvsn        setll     hsp085
      *
     C                   dou       *in93 = *on                                  Do cull detail
     C     shmvsn        reade     hsp085                                 93
     C                   if        *in93 = *off                                 If record
      *
     C                   select
     C                   when      shmscd = 'SH'
     C                   add       sgshhd        p1rdcuhd
     C                   add       sgshlb        p1rdculb
     C                   other
     C                   add       sglvhd        p1rdcuhd
     C                   add       sglvlb        p1rdculb
     C                   endsl
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do cull detail
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Do processing to arrive at some 'weekly' values and update records
      *----------------------------------------------------------------------------
      *
     C     $weekly       begsr
      *
     C     *loval        setll     hppf103
      *
      * If this is a 'History' run,
      *     process all records in the Datamart file
      * If this is a 'Current' run,
      *     process records in the Datamart file that have a date on/after
      *     the 'current beginning' date.
      *
     C                   dou       *in90 = *on                                  Do weekly
     C                   read      hppf103                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             (xxcurhist = 'H' or p3rddydt >= wkbegiso)
      *
      * Retrieve 'weekly' values at break time. Plug these 'weekly'
      * values into every 'daily' record that you udpate for this farm/week.
      *
     C                   if        p3rdfscd <> svfscd or
     C                             p3rdcdyr <> svcdyr or
     C                             p3rdcdwk <> svcdwk
     C                   exsr      $clear
     C                   exsr      $rtv075
     C                   exsr      $rtv075p
     C                   exsr      $rtv103
     C                   exsr      $upd075
     C                   z-add     p3rdfscd      svfscd
     C                   z-add     p3rdcdyr      svcdyr
     C                   z-add     p3rdcdwk      svcdwk
     C                   endif
      *
      * Move 'weekly' values into daily record and update daily record
      *
     C                   z-add     svnbr         p3rdnbr
     C                   z-add     svbihd        p3rdbihd
     C                   z-add     sveihd        p3rdeihd
      *
     C                   z-add     svphsday      p3rdphsday
     C                   z-add     svphswk       p3rdphswk
      *
     C                   z-add     svgrwday      p3rdgrwday
     C                   z-add     svgrwwk       p3rdgrwwk
      *
     C                   move      svpwkday      p3rdpwkday
     C                   move      svphsstg      p3rdphsstg
      *
     C                   z-add     svadoi        p3rdadoi
     C                   z-add     svadgi        p3rdadgi
      *
     C                   z-add     svpod         p3rdobpod
      *
      * Calculate 'Average Prior Week Dead Pounds'
      *
     C                   exsr      $avgdead
      *
     C                   update    rdrec3
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do weekly
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Calculate the Average Prior Week Dead Pounds
      *----------------------------------------------------------------------------
      *
     C     $avgdead      begsr
      *
      * Calculate the initial Avg Dead Pounds using the accumulated head and pounds
      * from the Datamart FIN: Weekly Group Detail records.
      *
     C                   if        svhd <> 0
     C     svlb          div(h)    svhd          wklb
     C                   else
     C                   z-add     0             wklb
     C                   endif
      *
      * Calculate the final Average Dead Pounds
      *
     C                   select                                                 Select 1
     C                   when      wklb = 0
      *
      * Multiply the 'Weekly Weeks in the Phase' times hardcoded pounds based on
      * the Daily Farm Phase.
      *
     C                   select
     C                   when      p3rdppcd = 'NUR  '
     C     p3rdphswk     mult(h)   4             wklb
     C                   when      p3rdppcd = 'GF   '
     C     p3rdphswk     mult(h)   10            wklb
     C                   endsl
      *
      * Then, add in the Average Weight In
      *
     C                   add       p3rdavlb      wklb
      *
      * When the initial calculated pounds in not zero, add hardcoded pounds
      * (based on the Daily Farm Phase) to the calculated value.
      *
     C                   other
     C                   select
     C                   when      p3rdppcd = 'NUR  '
     C                   add       4             wklb
     C                   when      p3rdppcd = 'GF   '
     C                   add       10            wklb
     C                   endsl
      *
     C                   endsl                                                  Select 1
      *
      * Move your calculated value into the file field
      *
     C                   z-add     wklb          p3rdapwdlb
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Clear and save
      *----------------------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             svnbr
     C                   z-add     0             svbihd
     C                   z-add     0             sveihd
      *
     C                   z-add     0             svphsday
     C                   z-add     0             svphswk
      *
     C                   z-add     0             svgrwday
     C                   z-add     0             svgrwwk
      *
     C                   move      *blank        svpwkday
     C                   move      *blank        svphsstg
      *
     C                   z-add     0             svadoi
     C                   z-add     0             svadgi
      *
     C                   z-add     0             svhd
     C                   z-add     0             svlb
      *
     C                   z-add     0             svpod
     C                   z-add     0             wkfseihd
     C                   z-add     0             arpod
     C                   z-add     0             arhd
     C                   z-add     0             w
     C                   z-add     0             x
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Retrieve/sum Man Hours for this farm/week from the HPS Reported Weekly Activity file
      *-------------------------------------------------------------------------------------
      *
     C     $rtv103       begsr
      *
     C                   z-add     0             wktmanhr
     C                   z-add     0             wkrmanhr
     C                   z-add     0             wkmanhr
     C                   z-add     0             wkrate
     C                   move      p3rdwedt      wkccyymmdd
      *
     C     key05         setll     hsl103b
      *
     C                   dou       *in91 = *on                                  Do man hours
     C     key05         reade     hsl103b                                91
     C                   if        *in91 = *off                                 If read
     C                   add       p5rdmanhr     wktmanhr
     C                   endif                                                  If read
     C                   enddo                                                  Do man hours
      *
      * Calculate the Man Hours per Pig Day.
      *
     C                   if        wkpigday <> 0
     C                   eval(h)   wkrate = wktmanhr / wkpigday
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Update the Datamart Weekly Group records for this Farm/Week with Man Hours
      *----------------------------------------------------------------------------
      *
     C     $upd075       begsr
      *
     C                   if        wkrate <> 0                                  If have rate
      *
     C                   z-add     0             count2
     C                   z-add     wktmanhr      wkrmanhr
      *
      * Only process groups with Pig Days greater than zero.
      *
     C     key03         setll     hplf075a
     C                   dou       *in91 = *on                                  Do weekly
     C     key03         reade     hplf075a                               91
     C                   if        *in91 = *off and wbpigday > 0                If read
      *
     C                   add       1             count2
      *
      * Figure out how many Man Hours to give this group
      *
     C                   select
     C                   when      count1 = count2
     C                   z-add     wkrmanhr      wkmanhr
     C                   other
      *
     C                   eval(h)   wkmanhr = wbpigday * wkrate
     C                   if        wkmanhr > wkrmanhr
     C                   z-add     wkrmanhr      wkmanhr
     C                   endif
     C                   endsl
      *
      * Update the Datamart group record with Man Hours
      *
     C                   z-add     wkmanhr       wbmanhr
     C                   update    wbrec
      *
      * Decrease the Man Hours left to be distributed to groups.
      *
     C                   sub       wkmanhr       wkrmanhr
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do weekly
     C                   endif                                                  If have rate
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Sum/average groups for this farm/week from the Datamart Weekly Group file
      *----------------------------------------------------------------------------
      *
     C     $rtv075       begsr
      *
     C                   z-add     0             count1
     C                   z-add     0             wkbihd
     C                   z-add     0             wkeihd
     C                   z-add     0             wkadoi
     C                   z-add     0             wkadgi
     C                   z-add     0             wkphsday
     C                   z-add     0             wkgrwday
     C                   z-add     0             wkpigday
      *
     C     key03         setll     hplf075a
      *
     C                   dou       *in91 = *on                                  Do weekly
     C     key03         reade(n)  hplf075a                               91
     C                   if        *in91 = *off                                 If read
      *
     C                   add       wbbihd        wkbihd
     C                   add       wbeihd        wkeihd
     C                   add       wbphsday      wkphsday
     C                   add       wbgrwday      wkgrwday
     C                   add       wbpigday      wkpigday
      *
      * Count the groups that have Pig Days for:
      *     1) later calc of Man Hours per Group and
      *     2) populating Weekly Number of Groups
      *
     C                   if        wbpigday > 0
     C                   add       1             count1
     C                   endif
      *
      * Retrieve/accumulate 2 group values:
      *   1) average days old in
      *   2) average days of growth in
      *
     C     wbhgcd        chain     hppf034                            92
     C                   if        *in92 = *off
     C                   add       hgadoi        wkadoi
     C                   add       hgadgi        wkadgi
     C                   endif
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do weekly
      *
      * Move accumulated values into file fields
      *
     C                   z-add     wkbihd        svbihd
     C                   z-add     wkeihd        sveihd
     C                   z-add     count1        svnbr
      *
      * Calculate averages for the farm/week:
      *
     C                   if        count1 <> 0                                  If any groups
     C     wkadoi        div(h)    count1        svadoi
     C     wkadgi        div(h)    count1        svadgi
     C     wkphsday      div(h)    count1        svphsday
     C     wkgrwday      div(h)    count1        svgrwday
     C                   endif                                                  If any groups
      *
      * Calculate Weeks in the Phase (bump it up if you have partial days)
      *
     C     svphsday      div       7             svphswk
     C                   mvr                     wkday
     C                   if        wkday > 0
     C                   add       1             svphswk
     C                   endif
      *
      * Calculate Weeks of Growth    (bump it up if you have partial days)
      *
     C     svgrwday      div       7             svgrwwk
     C                   mvr                     wkday
     C                   z-add     svgrwwk       wkwk
     C                   if        wkday > 0
     C                   add       1             svgrwwk
     C                   endif
      *
      * Concatenate growth weeks and days into one alpha field.
      *(Note: the field name still looks like it is for 'phase'--which
      * it originally was. But, we can't rename fields in Datamart; so,
      * we kept the 'phase' field name and just changed the field text and meaning
      * to be 'growth'.
      *
     C                   move      wkday         wkalphaday
     C                   move      wkwk          wkalphawk
     C                   eval      svpwkday   = wkalphawk + '-' + wkalphaday
      *
      * Calculate Stage of Growth
      *
     C                   exsr      $stage
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Calculate Stage of Growth
      *----------------------------------------------------------------------------
      *
     C     $stage        begsr
      *
      * Then, call a generic program to calculate 'stage of growth'.
      * (Note: The field name still looks like 'stage of phase'--
      * which it originally was. But, we can't rename fields in Datamart;
      * so, we kept the 'phase' name and just changed the field text and
      * meaning.
      *
      *
     C                   call      'HP8012'
     C                   parm      svgrwwk       xxgrwwk
     C     svphsstg      parm      *blank        xxalphstg
     C                   parm      0             xxnumstg
     C                   parm      'PROD'        xxversion
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------
      * Sum/average groups for this farm/prior week from the Datamart Weekly Group file
      *---------------------------------------------------------------------------------
      *
     C     $rtv075p      begsr
      *
     C                   move      no            activefl
      *
      * Subtract 7 days from the Week-Ending date to get the Prior Week-Ending Date
      * to use as the key in retrieving data.
      *
      *
     C     p3rdwedt      subdur    7:*days       wkpwedt
      *
      *
      * Process all 'Datamart FIN: Weekly Group Detail' records for the prior week
      * for this Farm accumulating values.
      *
     C     key06         setll     hplf075a
      *
     C                   dou       *in91 = *on                                  Do prior weekly
     C     key06         reade(n)  hplf075a                               91
     C                   if        *in91 = *off                                 If read
      *
     C                   move      yes           activefl
      *
      * Accumulate Dead/DOA pounds:
      *   Weekly daily dead lbs
      *   Weekly destroyed dead lbs
      *   Weekly sales DOA lbs
      *   Weekly transfer DOA/KOA lbs
      *   Weekly transfer DOA lbs
      *   Weekly transfer KOA lbs
      *
     C                   add       wbwkdlb       svlb
     C                   add       wbwdkdlb      svlb
     C                   add       wbwsdolb      svlb
     C                   add       wbwtdolb      svlb
     C                   add       wbwtdalb      svlb
     C                   add       wbwtkalb      svlb
      *
      * Accumulate Dead/DOA head:
      *   Weekly daily dead head
      *   Weekly destroyed dead head
      *   Weekly sales DOA head
      *   Weekly transfer DOA/KOA head
      *   Weekly transfer DOA head
      *   Weekly transfer KOA head
      *
     C                   add       wbwkdhd       svhd
     C                   add       wbwdkdhd      svhd
     C                   add       wbwsdohd      svhd
     C                   add       wbwtdohd      svhd
     C                   add       wbwtdahd      svhd
     C                   add       wbwtkahd      svhd
      *
      * Accumulate Ending Inventory Head twice:
      *  1) for the Farm
      *  2) for the Origin BGF Pod of the group
      *
     C                   add       wbeihd        wkfseihd
     C                   exsr      $pod
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do prior weekly
      *
      * If there were no records for the Farm "last week", set the
      * Origin BGF Pod to zero. If you did have "last week" records, go
      * figure out some "pod" value.
      *
     C                   if        activefl = no
     C                   z-add     0             svpod
     C                   else
     C                   exsr      $obpod
     C                   endif
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Retrieve Origin BGF Pod for a Group and accumulate Ending Inventory Head by Pod
      *-------------------------------------------------------------------------------------
      *
     C     $pod          begsr
      *
     C     wbhgcd        chain     hppf034                            92
     C                   if        *in92 = *off                                 If hit
      *
     C                   z-add     1             w
     C     hgobpod       lookup    arpod(w)                               92
     C                   if        *in92 = *on
     C                   add       wbeihd        arhd (w)
     C                   else
     C                   add       1             x
     C                   z-add     hgobpod       arpod  (x)
     C                   z-add     wbeihd        arhd   (x)
     C                   endif
      *
     C                   endif                                                  If hit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Come up with an Origin BGF Pod for a Farm/Week
      *-----------------------------------------------------------------------------------------
      *
     C     $obpod        begsr
      *
      * If you had any Ending Inventory Head on the Farm for last week,
      * process your Pod/Head arrays and populate "Pod" with any non-zero
      * array entry that accounts for 85% or more of the Ending Inventory Head.
      *
     C                   if        wkfseihd <> 0
     C                   do        x             w
     C                   if        arpod(w) <> 0 and
     C                             ((arhd(w)  / wkfseihd) >= .85)
     C                   z-add     arpod(w)      svpod
     C                   endif
     C                   enddo
     C                   endif
      *
      * If you didn't get a "Pod" with the array logic above AND
      * you only had 1 Pod array entry AND that entry was not 0,
      *     populate "Pod" with that entry
      *
     C                   if        svpod = 0 and
     C                             x = 1 and
     C                             arpod(x) <> 0
     C                   z-add     arpod(x)      svpod
     C                   endif
      *
      * We are out of things to try; so, if "pod" is still zero,
      * set it to 1=Mixed.
     C                   if        svpod = 0
     C                   z-add     1             svpod
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Retrieve the Saturday week-ending date/HPS calendar year/HPS calendar week
      *----------------------------------------------------------------------------
      *
     C     $saturday     begsr
      *
      * You must send input parms of 1) company number and 2) date in the
      * SYNON format of CYYMMDD.
      *
      * Get the daily date into the SYNON format.
      *
     C                   movel     rddydt        wkccyymmdd
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmddi
     C                   else
     C                   z-add     wkyymmdd      xxcyymmddi
     C                   endif
      *
     C                   call      'POJNXFR'
     C                   parm      *blank        xxreturn
     C                   parm      350           xxcocd
     C                   parm                    xxcyymmddi
     C                   parm      0             xxcyymmddo
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
      * If you got a return date, format it from SYNON's CYYMMDD to CCYYMMDD
      *
     C                   if        xxreturn = *blank                            If got Saturday
     C                   z-add     xxcyymmddo    wkyymmdd
     C                   z-add     wkyymmdd      wkccyymmdd
     C                   if        xxcyymmddo >= 1000000
     C                   add       20000000      wkccyymmdd
     C                   else
     C                   add       19000000      wkccyymmdd
     C                   endif
     C                   else
     C                   z-add     0             wkccyymmdd
     C                   endif                                                  If got Saturday
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Processing for the 'Tuesday' records
      *---------------------------------------------------------------
      *
      * The logical file in this subroutine selects only Tuesday records.
      *
     C     $tuesday      begsr
      *
     C     *loval        setll     hplf103c
      *
      * If this is a 'History' run,
      *     process all 'Tuesday' records in the Datamart file
      * If this is a 'Current' run,
      *     process each 'Tuesday' record in the Datamart file that has a
      *     date on/after the 'current beginning' date.
      *
     C                   dou       *in90 = *on                                  Do Tuesday
     C                   read      hplf103c                               90
     C                   if        *in90 = *off and                             If not EOF
     C                             (xxcurhist = 'H' or p2rddydt >= wkbegiso)
      *
      * Accumulate Sunday thru Tuesday head for this farm/week and
      * then update this 'Tuesday' record with the accumulated totals.
      *
     C                   exsr      $accum
      *
     C                   z-add     wkddhd        p2rdtddhd
     C                   z-add     wkdshd        p2rdtdshd
     C                   update    rdrecc
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do Tuesday
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Accumulate Sunday thru Tuesday head for a farm/week
      *---------------------------------------------------------------
      *
     C     $accum        begsr
      *
     C                   z-add     0             wkddhd
     C                   z-add     0             wkdshd
      *
     C     key02         setll     hppf103
      *
     C                   dou       *in91 = *on                                  Do accumulate
     C     key02         reade(n)  hppf103                                91
     C                   if        *in91 = *off and                             If more
     C                             (p3rdday = 'Sun ' or
     C                              p3rdday = 'Mon ' or
     C                              p3rdday = 'Tues')
     C                   add       p3rdddhd      wkddhd
     C                   add       p3rddshd      wkdshd
     C                   endif                                                  If more
     C                   enddo                                                  Do accumulate
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parms
      *
     C     *entry        plist
     C                   parm                    xxcurhist
     C                   parm                    xxcurbegdt
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkisodydt
     C                   kfld                    rdfscd
      *
     C     key02         klist
     C                   kfld                    p2rdfscd
     C                   kfld                    p2rdcdyr
     C                   kfld                    p2rdcdwk
      *
     C     key03         klist
     C                   kfld                    p3rdwedt
     C                   kfld                    p3rdfscd
      *
     C     key04         klist
     C                   kfld                    rdfscd
     C                   kfld                    rddydt
      *
     C     key05         klist
     C                   kfld                    p3rdfscd
     C                   kfld                    wkccyymmdd
      *
     C     key06         klist
     C                   kfld                    wkpwedt
     C                   kfld                    p3rdfscd
      *
      *
      * If this is a 'Current' run, you will ultimately need the incoming date in ISO format
      * for date comparison purposes. So, get it ready just in case!
      *
     C     *iso          movel     xxcurbegdt    wkbegiso
      *
     C                   endsr
      /eject
