// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWBLXFR
// ?Date: 14.08.2025 Time: 02:55:53
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//? 4/13/17 JBB C9426 - Data Base Chgs for ProdServ
//?                     Created this new function to create BOH
//?                     records for all Source Codes.  It is a copy
//?                     of Exc Crt BOL for Dtls  XF - Delivery Sched
//?                     Detail.  This function was created to allow
//?                     company 440 process all Delivery Sched Detail
//?                     record for all Source Codes.  In the future it
//?                     is decided that other companies can process
//?                     all Source Codes, then Company Value records
//?                     for ALLSRCCODE will be added for those
//?                     companies.
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

EXECUTE FUNCTION(RTV Crt BOL-All Source RT) TYPE(RTVOBJ) FILE(PLAECPP)          AB1332956;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.DSH_Kill_Date);
PARAMETER(PAR.SR_Source_Code);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.PL_Location_Code);
{
 //?USER: Process Data record

 // LCL.BOH Company Number = CON.*ZERO
 LCL.BOH_Company_Number = *ZERO;

 // LCL.BOH Buy Order Number = CON.*ZERO
 LCL.BOH_Buy_Order_Number = *ZERO;

 // LCL.BOL Load Number = CON.*ZERO
 LCL.BOL_Load_Number = *ZERO;

 //?New code to process all Source Codes
 CASE;

 // IF DB1.PD Producer Code is Entered
 IF DB1.PD_Producer_Code <> *BLANK;

 // AND DB1.PL Location Code is Entered
 AND DB1.PL_Location_Code <> *BLANK;

 // AND DB1.BOH Buy Order Number is EQ Zero
 AND DB1.BOH_Buy_Order_Number = *ZERO;

 //?Select records to process for Producer and Location passed in
 CASE;

 // IF PAR.PD Producer Code is Blank
 IF ( PAR.PD_Producer_Code = *BLANK;

 // OR DB1.PD Producer Code EQ PAR.PD Producer Code
 OR DB1.PD_Producer_Code = PAR.PD_Producer_Code );

 // AND PAR.PL Location Code is Blank
 AND ( PAR.PL_Location_Code = *BLANK;

 // OR DB1.PL Location Code EQ PAR.PL Location Code
 OR DB1.PL_Location_Code = PAR.PL_Location_Code );

 //?If scheduled delivery head <> 0
 CASE;

 // IF DB1.DSD Scheduled Delv Head is Entered
 IF DB1.DSD_Scheduled_Delv_Head > *ZERO;

 // Call program Crt BOH/BOL f/DelvSch XF.
 CALL PROGRAM(Crt BOH/BOL f/DelvSch XF) ('PLBEXFR');
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(LCL.BOH_Company_Number);
 PARAMETER(LCL.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER('N');

 //?If Buy Order Number <> 0, set
 CASE;

 // IF LCL.BOH Buy Order Number is NE Zero
 IF LCL.BOH_Buy_Order_Number <> *ZERO;

 EXECUTE FUNCTION(Chg Delv Sched Dtl    CH) TYPE(CHGOBJ) FILE(PLAECPP)           AB1244728;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.DSH_Kill_Date);
 PARAMETER(DB1.DSD_Delivery_Date);
 PARAMETER(DB1.DSD_Delivery_Time);
 PARAMETER(DB1.DSD_Delivery_Time_Seq);
 PARAMETER(DB1.DSD_Scheduled_Hour);
 PARAMETER(DB1.DSD_Farm_Site_Code);
 PARAMETER(DB1.DSD_Building);
 PARAMETER(DB1.DSD_Room);
 PARAMETER(DB1.DSD_Sire_Line_Code);
 PARAMETER(DB1.DSD_Hog_Group_Code);
 PARAMETER(DB1.DSD_Unused_Head);
 PARAMETER(DB1.DSD_Scheduled_Delv_Head);
 PARAMETER(DB1.DSD_Scheduled_Kill_Head);
 PARAMETER(DB1.DSD_Transportation_Office);
 PARAMETER(DB1.DSD_Trucker_Code_HPS);
 PARAMETER(DB1.DSD_Driver);
 PARAMETER(DB1.DSD_Loading_Crew);
 PARAMETER(DB1.CHR_Code);
 PARAMETER(DB1.DSD_Load_Type);
 PARAMETER(DB1.DSD_Full_Split_Load);
 PARAMETER(DB1.DSD_Movement_Number);
 PARAMETER(DB1.DSD_Truck_ID);
 PARAMETER(DB1.DSD_Trailer_ID);
 PARAMETER(DB1.DSD_Movement_Printed);
 PARAMETER(DB1.DSD_Sched_Route_Start_Pnt);
 PARAMETER(DB1.DSD_Sched_Route_Start_Dte);
 PARAMETER(DB1.DSD_Sched_Route_Start_Tim);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Date);
 PARAMETER(DB1.DSD_Sch_Farm_Arrival_Time);
 PARAMETER(DB1.DSD_Sch_Start_Load_Date);
 PARAMETER(DB1.DSD_Sch_Start_Load_Time);
 PARAMETER(DB1.DSD_Receiving_Shift);
 PARAMETER(DB1.DSD_Kill_Shift);
 PARAMETER(DB1.DSD_BOL_Kill_Shift);
 PARAMETER(DB1.DSD_HPS_Post_Status);
 PARAMETER('P');
 PARAMETER(DB1.DSD_Lock_Status);
 PARAMETER(DB1.DSD_Source_Type);
 PARAMETER(DB1.DSD_Transfer_Sts);
 PARAMETER(DB1.DSD_Unused_Date);
 PARAMETER(DB1.DSD_Unused_Time);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(LCL.BOH_Company_Number);
 PARAMETER(LCL.BOH_Buy_Order_Number);
 PARAMETER(LCL.BOL_Load_Number);
 PARAMETER(DB1.DSD_PRD_Srv_Batch_ID);
 PARAMETER(DB1.DSD_PRD_Srv_Sched_ID);
 PARAMETER(DB1.DSD_Ref_1);
 PARAMETER(DB1.DSD_Ref_2);
 PARAMETER(DB1.DSD_Ref_Status);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


