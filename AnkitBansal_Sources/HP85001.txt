      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP8500
      * TITLE:       Renumber farm number by adding 2000 with multi farm fields
      * PROGRAMMER:  Barb Gutierrez
      * CREATED:     08/30/16
      *
      * FUNCTION:  With the purchase of multiple sow farms, we need to free up d
      *            farm numbers so they can be used for actual farms.  By adding
      *            to the existing farm number, this will keep data integrity.
      *            farm number to be changed will be passed in as a parm.
      *
      * NOTE:      All Logicals select only Farm Site 92.  NO LONGER TRUE
      *
      * NOTE:      We think this is a one time program.    NO LONGER TRUE
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER / DESCRIPTION
      * 08/25/17  Danny Nguyen - R11524 - Renumber Farm 92 to 2092
      *             Changed all LF's in this program to select only Farm Site 92
      *             Recompile program. No logic change.
      *
      * 10/20/20  Brad Baden - E16943 - Farm Number Increase
      *           1. Add new incoming parameters XXFSFROM and XXFSTO.
      *           2. Find new access paths by Farm Site with no select/omit.
      *           3. Replace existing access paths with new access paths.
      *           4. Comment out code that is adding 2000 to Farm Site Code.
      *           5. READE using XXFSFROM on new access paths and replace
      *              database Farm Site Code value with XXFSTO.
      * 10/17/22  Eric L     - P559   - Move Historical data in Farm Sites
      *           1. Update header information no longer passing in parms.  Chan
      *           the file of affected farm numbers.
      *               a.Add logic to read HSP322.  For each record in each exist
      *                 i. Replace logic to use the original farm site to read a
      *                    files and replace with the new farm site and update t
      *           2. No parms will be passed into program.
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
     FHSP322    IP   E           K disk
      *----WRKF
     F****hsl034z   uf   e           k disk
     Fhsl034e   uf   e           k disk
      *    Hog Group   K= hgfscd
      *
     F****hsl034y   uf   e           k disk    rename (hgrec:hgrecy) prefix(y1)
     Fhsl034s   uf   e           k disk    rename (hgrec:hgrecy) prefix(y1)
      *    Hog Group   K= hgobfs
      *
     F****hsl074z   uf   e           k disk
     Fhsl074f   uf   e           k disk
      *    transfer movement header  k = mhdnfs
      *
     F****hsl074y   uf   e           k disk    rename (mhrec:mhrecy) prefix(y1)
     Fhsl074c   uf   e           k disk    rename (mhrec:mhrecy) prefix(y1)
      *    transfer movement header  k = mhorfs
      *
     F****hsl080z   uf   e           k disk
     Fhsl080d   uf   e           k disk
      *    deleted movements  k = dmdnfs
      *
     F****hsl080y   uf   e           k disk    rename (dmrec:dmrecy) prefix(y1)
     Fhsl080c   uf   e           k disk    rename (dmrec:dmrecy) prefix(y1)
      *    deleted movements  k = dmorfs
      *
     F****hsl118z   uf   e           k disk
     Fhsl118f   uf   e           k disk
      *    costed movements k = cmdnfscd
      *
     F****hsl118y   uf   e           k disk    rename (cmrec:cmrecy) prefix(y1)
     Fhsl118g   uf   e           k disk    rename (cmrec:cmrecy) prefix(y1)
      *    costed movements k = cmorfscd
      *
     F****hsl120z   uf   e           k disk
     Fhsl120e   uf   e           k disk
      *    costed movements k = cxdnfscd
      *
     F****hsl120y   uf   e           k disk    rename (cxrec:cxrecy) prefix(y1)
     Fhsl120d   uf   e           k disk    rename (cxrec:cxrecy) prefix(y1)
      *    costed movements k = cxorfscd
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
      * Parms
      *
     D XXFSFROM        s                   like(WFFSCDO)
      *** 559 *****D xxfsfrom        s                   like(hgfscd)
      *** 559 *****D xxfsto          s                   like(hgfscd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C                   eval      xxfsfrom = WFFSCDO
      *
     C                   exsr      $hsp034z
     C                   exsr      $hsp034y
     C                   exsr      $hsp074z
     C                   exsr      $hsp074y
     C                   exsr      $hsp080z
     C                   exsr      $hsp080y
     C                   exsr      $hsp118z
     C                   exsr      $hsp118y
     C                   exsr      $hsp120z
     C                   exsr      $hsp120y
      *
      * set on LR
      *
      *****    559   ******     seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * hog group by farm site (now using access path HSL034E)
      *---------------------------------------------------------------
      *
     C     $hsp034z      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl034z                                91
     C****               if        *in91 = *off
      *
     C**** hgfscd        add       2000          hgfscd
      *
     c     xxfsfrom      setll     hsl034e
     c                   if        %equal(hsl034e)
     c                   dow       not %eof(hsl034e)
     c     xxfsfrom      reade     hsl034e
     c                   if        not %eof(hsl034e)
     c**** 559 ****      eval      hgfscd = xxfsto
     c                   eval      hgfscd = WFFSCDN
     C                   update    hgrec
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * hog group by origin farm site (now using new access path HSL034S)
      *---------------------------------------------------------------
      *
     C     $hsp034y      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl034y                                91
     C****               if        *in91 = *off
      *
     C**** y1hgobfs      add       2000          y1hgobfs
      *
     c     xxfsfrom      setll     hsl034s
     c                   if        %equal(hsl034s)
     c                   dow       not %eof(hsl034s)
     c     xxfsfrom      reade     hsl034s
     c                   if        not %eof(hsl034s)
     c**** 559 ****      eval      y1hgobfs = xxfsto
     c                   eval      y1hgobfs = WFFSCDN
     C                   update    hgrecy
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Transfer Movement Header destination (now using access path HSL074F)
      *---------------------------------------------------------------
      *
     C     $hsp074z      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl074z                                91
     C****               if        *in91 = *off
      *
     C**** mhdnfs        add       2000          mhdnfs
      *
     c     xxfsfrom      setll     hsl074f
     c                   if        %equal(hsl074f)
     c                   dow       not %eof(hsl074f)
     c     xxfsfrom      reade     hsl074f
     c                   if        not %eof(hsl074f)
     c**** 559 ****      eval      mhdnfs = xxfsto
     c                   eval      mhdnfs = WFFSCDN
     C                   update    mhrec
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Transfer Movement Header origin (now using access path HSL074C)
      *---------------------------------------------------------------
      *
     C     $hsp074y      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl074y                                91
     C****               if        *in91 = *off
      *
     C**** y1mhorfs      add       2000          y1mhorfs
      *
     c     xxfsfrom      setll     hsl074c
     c                   if        %equal(hsl074c)
     c                   dow       not %eof(hsl074c)
     c     xxfsfrom      reade     hsl074c
     c                   if        not %eof(hsl074c)
     c**** 559 ****      eval      y1mhorfs = xxfsto
     c                   eval      y1mhorfs = WFFSCDN
     C                   update    mhrecy
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Deleted Movements  destination (now using access path HSL080D)
      *---------------------------------------------------------------
      *
     C     $hsp080z      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl080z                                91
     C****               if        *in91 = *off
      *
     C**** dmdnfs        add       2000          dmdnfs
      *
     c     xxfsfrom      setll     hsl080d
     c                   if        %equal(hsl080d)
     c                   dow       not %eof(hsl080d)
     c     xxfsfrom      reade     hsl080d
     c                   if        not %eof(hsl080d)
     c**** 559 ****      eval      dmdnfs = xxfsto
     c                   eval      dmdnfs = WFFSCDN
     C                   update    dmrec
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Deleted Movements  origin (now using access path HSL080C)
      *---------------------------------------------------------------
      *
     C     $hsp080y      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl080y                                91
     C****               if        *in91 = *off
      *
     C**** y1dmorfs      add       2000          y1dmorfs
      *
     c     xxfsfrom      setll     hsl080c
     c                   if        %equal(hsl080c)
     c                   dow       not %eof(hsl080c)
     c     xxfsfrom      reade     hsl080c
     c                   if        not %eof(hsl080c)
     c**** 559 ****      eval      y1dmorfs = xxfsto
     c                   eval      y1dmorfs = WFFSCDN
     C                   update    dmrecy
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Costed Movements  destination (Now using access path HSL118F)
      *---------------------------------------------------------------
      *
     C     $hsp118z      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl118z                                91
     C****               if        *in91 = *off
      *
     C**** cmdnfscd      add       2000          cmdnfscd
      *
     c     xxfsfrom      setll     hsl118f
     c                   if        %equal(hsl118f)
     c                   dow       not %eof(hsl118f)
     c     xxfsfrom      reade     hsl118f
     c                   if        not %eof(hsl118f)
     c**** 559 ****      eval      cmdnfscd = xxfsto
     c                   eval      cmdnfscd = WFFSCDN
     C                   update    cmrec
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Costed Movements  origin (Now using access path HSL118G)
      *---------------------------------------------------------------
      *
     C     $hsp118y      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl118y                                91
     C****               if        *in91 = *off
      *
     C**** y1cmorfscd    add       2000          y1cmorfscd
      *
     c     xxfsfrom      setll     hsl118g
     c                   if        %equal(hsl118g)
     c                   dow       not %eof(hsl118g)
     c     xxfsfrom      reade     hsl118g
     c                   if        not %eof(hsl118g)
     c**** 559 ****      eval      y1cmorfscd = xxfsto
     c                   eval      y1cmorfscd = WFFSCDN
     C                   update    cmrecy
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Cost Movements: Destination expense (now uses access path (HSL120E)
      *---------------------------------------------------------------
      *
     C     $hsp120z      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl120z                                91
     C****               if        *in91 = *off
      *
     C**** cxdnfscd      add       2000          cxdnfscd
      *
     c     xxfsfrom      setll     hsl120e
     c                   if        %equal(hsl120e)
     c                   dow       not %eof(hsl120e)
     c     xxfsfrom      reade     hsl120e
     c                   if        not %eof(hsl120e)
     c**** 559 ****      eval      cxdnfscd = xxfsto
     c                   eval      cxdnfscd = WFFSCDN
     C                   update    cxrec
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Cost Movements: Origin Expense Codes (now using access path HSL120D)
      *---------------------------------------------------------------
      *
     C     $hsp120y      begsr
      *
     C****               dou       *in91 = *on
     C****               read      hsl120y                                91
     C****               if        *in91 = *off
      *
     C**** y1cxorfscd    add       2000          y1cxorfscd
      *
     c     xxfsfrom      setll     hsl120d
     c                   if        %equal(hsl120d)
     c                   dow       not %eof(hsl120d)
     c     xxfsfrom      reade     hsl120d
     c                   if        not %eof(hsl120d)
     c**** 559 ****      eval      y1cxorfscd = xxfsto
     c                   eval      y1cxorfscd = WFFSCDN
     C                   update    cxrecy
     c                   endif
     c                   enddo
     c                   endif
      *
     C****               endif
     C****               enddo
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
      ***  *inzsr        begsr
      *
      * Parm lists
      *
     C***  *entry        plist
     c***                parm                    xxfsfrom
     c***                parm                    xxfsto
      *
     C***                endsr
      /EJECT
