// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPLZXFR
// ?Date: 14.08.2025 Time: 03:41:09
// ?------------------------------------------------------------------------------------------------

//?Execute user function

MOVE *ALL (To: PAR From: CON);

//?Box Tare
EXECUTE FUNCTION(RTV Item Box Tare Wgt  RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1379982;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Box_Weight);
{
 //?USER: Initialize routine

 // PAR.Unit Weight = CON.*ZERO
 PAR.Unit_Weight = *ZERO;

 //?USER: Process Data record

 // PAR.Unit Weight = CON.*ZERO
 PAR.Unit_Weight = *ZERO;

 EXECUTE FUNCTION(RTV Type/Pack/Unit Wgt RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1379988;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 CASE;

 // IF PAR.Item Type Code is Packaging and Supplies
 IF PAR.Item_Type_Code = 'PS';

 // AND PAR.Package Type Code is Box
 AND PAR.Package_Type_Code = 'B';

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Unit Weight = CON.*ZERO
 PAR.Unit_Weight = *ZERO;

 ENDIF;

 //?USER: Exit processing

 // PAR.Unit Weight = PAR.Unit Weight USR
 PAR.Unit_Weight = PAR.Unit_Weight_USR;

}


// Total Box Weight
PAR.Weight_1_USR = PAR.Quantity_Scheduled * PAR.Box_Weight 'H';

//?Miscellaneous Tare
EXECUTE FUNCTION(Rtv Tare Weight        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1228249;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(LCL.Description_Line_One);
PARAMETER(PAR.Misc_Tare_Weight);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


// Total Misc Tare Weight
PAR.Weight_2_USR = PAR.Quantity_Scheduled * PAR.Misc_Tare_Weight 'H';

//?Total Pallet Tare Weight
CASE;

// IF PAR.Palletize is yes
IF PAR.Palletize = 'Y';

//?Pallet Tare, Number of Cases on the Pallet
EXECUTE FUNCTION(Rtv Pallet Tare/Cases RT) TYPE(RTVOBJ) FILE(PDIOREP)           AC1601730;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Number_Cases_On_A_Pallet);
PARAMETER(PAR.Pallet_Tare_Weight);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.BOM Type is Supplies
 IF DB1.BOM_Type = 'S';

 EXECUTE FUNCTION(Rtv Pallet Tare/Cases RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1601446;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(PAR.Number_Cases_On_A_Pallet);
 PARAMETER(PAR.Pallet_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 QUIT;

 ENDIF;

}


CASE;

// IF PAR.Number Cases On A Pallet is GT Zero
IF PAR.Number_Cases_On_A_Pallet > *ZERO;

// PAR.Pallets Loaded = PAR.Quantity Scheduled / PAR.Number Cases On A Pallet *Rounded
PAR.Pallets_Loaded = PAR.Quantity_Scheduled / PAR.Number_Cases_On_A_Pallet 'H';

// Total Pallet Tare Weight
PAR.Weight_3_USR = ( PAR.Quantity_Scheduled / PAR.Number_Cases_On_A_Pallet 'H' )                   +
* PAR.Pallet_Tare_Weight 'H';

ENDIF;

ENDIF;

// Gross Weight
PAR.Gross_Weight = ( ( PAR.Weight_Scheduled + PAR.Weight_1_USR ) + PAR.Weight_2_USR )              +
+ PAR.Weight_3_USR;

