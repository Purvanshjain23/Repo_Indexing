     H/TITLE Crt EDI 856 DTL & TARE XF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISJMIST
     H* Date          : 11/27/24  Time  : 02:04:59
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FOMBFCPM7  IF   E           K DISK
      * RSQ : Order Header TRG          Load/BTC#/Co/PO#/Order
      *
     FPNGQREL1  IF   E           K DISK
      * RTV : EDI Bill To Interchange   Retrieval index
      *
     FOPBGWKLA  IF   E           K DISK
      * RSQ : Order Detail              co/
      *
     FCAADREL1  IF   E           K DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FPMAMREL1  IF   E           K DISK
      * RTV : Order Header Extension    Retrieval index
      *
     FPBB8REL1  IF   E           K DISK
      * RTV : Trade Partner Control     Retrieval index
      *
     FECP004L8  IF   E           K DISK
      * RSQ : EDI Purchase Order Header Trade Partner/PO Number
      *
     FOMBYREL1  IF   E           K DISK
      * RTV : Item Default              Retrieval index
      *
     FOMFNCPLF  IF   E           K DISK
      * RSQ : Manifest Detail           Co/Ord/Pal/Itm/Sq/SSq/CS
      *
     FOPBGWKL1  IF   E           K DISK
      * RTV : Order Detail              Retrieval index
      *
     FPBBTREL1  IF   E           K DISK
      * RTV : Item Default Extension    Retrieval index
      *
     FOMFNCPL6  IF   E           K DISK
      * RSQ : Manifest Detail           Co/Ord/Item/Prod Date
      *
     FPUBQREL1  IF   E           K DISK
      * RTV : Customer Item Ref for EDI Retrieval index
      *
     FPOBIREL1  IF   E           K DISK
      * RTV : Customer Item Reference   Retrieval index
      *
     FPUBRREL2  IF   E           K DISK
      * RSQ : Item Shelf Life Upload    Item/ID
      *
     FCAABREL1  IF   E           K DISK
      * RTV : Company Name and Address  Retrieval index       V
      *
     FCABZREL1  IF   E           K DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDIOREL1  IF   E           K DISK
      * RTV : Item Bill Of Material     Retrieval index
      *
     FPDIORELB  IF   E           K DISK
      * RSQ : Item Bill Of Material     Co/Item/Component,Sel "S
      *
     FOPBGWKLD  IF   E           K DISK
      * RSQ : Order Detail              Co/Order#/Item/Whse Not
      *
     FECP140L3  IF   E           K DISK
      * RSQ : EDI Adv Ship Ntc Dtl V2   Sgt/Order/Seq/Item/Palle
      *
     FECP142L0  IF A E           K DISK
      * UPD : EDI Adv Ship Ntc Order V2 Update index
      *
     FECP140L0  UF A E           K DISK
      * UPD : EDI Adv Ship Ntc Dtl V2   Update index
      *
     FECP145L0  IF A E           K DISK
      * UPD : EDI Adv Ship Ntc Tare V2  Update index
      *
     FPMAMREL0  UF   E           K DISK
      * UPD : Order Header Extension    Update index
      *
      * Long constants
     D @CN#            S              6    DIM(02)CTDATA PERRCD(1)
     D @CN             S             25    DIM(02) ALT(@CN#)
     D YDOW            S              1     DIM(7)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * Outward parameters
     D PARC            DS            14
      * KEY : Order Header TRG          Load/BTC#/Co/Order
      * I :  Load ID
     D  PARMNB                 1      4P 0
      * I :  Bill to Customer
     D  PAB0C7                 5      8P 0
      *
     D QECP11        E DS                  EXTNAME(ECP142L0)
      * UPD : EDI Adv Ship Ntc Order V2 Update index
      * Renamed input format fields
     D  WIH9NY       E                     EXTFLD(BNH9NY)
     D  WIQ2NY       E                     EXTFLD(BNQ2NY)
     D  WIHPAA       E                     EXTFLD(BNHPAA)
     D  WITFNA       E                     EXTFLD(BNTFNA)
     D  WIEUNZ       E                     EXTFLD(BNEUNZ)
     D  WIYTAA       E                     EXTFLD(BNYTAA)
     D  WINVU1       E                     EXTFLD(BNNVU1)
     D  WIYIAA       E                     EXTFLD(BNYIAA)
     D  WID9NZ       E                     EXTFLD(BND9NZ)
     D  WIFHNZ       E                     EXTFLD(BNFHNZ)
     D  WIFPNZ       E                     EXTFLD(BNFPNZ)
     D  WIFINZ       E                     EXTFLD(BNFINZ)
     D  WIENNZ       E                     EXTFLD(BNENNZ)
     D  WIEMNZ       E                     EXTFLD(BNEMNZ)
     D  WIEFNZ       E                     EXTFLD(BNEFNZ)
     D  WIEGNZ       E                     EXTFLD(BNEGNZ)
     D  WIXBDT       E                     EXTFLD(BNXBDT)
     D  WIEHNZ       E                     EXTFLD(BNEHNZ)
     D  WIP8U1       E                     EXTFLD(BNP8U1)
     D  WIFJNZ       E                     EXTFLD(BNFJNZ)
      *
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XD2T            DS
      * Internal date
     D  XDINT2                 1      7  0
     D  XDINY2                 1      3  0
     D  XDINM2                 4      5  0
     D  XDIND2                 6      7  0
     D QECP12        E DS                  EXTNAME(ECP140L0)
      * UPD : EDI Adv Ship Ntc Dtl V2   Update index
      * Renamed input format fields
     D  WTH9NY       E                     EXTFLD(BMH9NY)
     D  WTQ2NY       E                     EXTFLD(BMQ2NY)
     D  WTTFNA       E                     EXTFLD(BMTFNA)
     D  WTC4NB       E                     EXTFLD(BMC4NB)
     D  WTJJU1       E                     EXTFLD(BMJJU1)
     D  WTDPNB       E                     EXTFLD(BMDPNB)
     D  WTQ7NY       E                     EXTFLD(BMQ7NY)
     D  WTZEAA       E                     EXTFLD(BMZEAA)
     D  WTETNZ       E                     EXTFLD(BMETNZ)
     D  WTQ8NY       E                     EXTFLD(BMQ8NY)
     D  WTTCNY       E                     EXTFLD(BMTCNY)
     D  WTLET1       E                     EXTFLD(BMLET1)
     D  WTNEU1       E                     EXTFLD(BMNEU1)
     D  WTNFU1       E                     EXTFLD(BMNFU1)
     D  WTNGU1       E                     EXTFLD(BMNGU1)
     D  WTNHU1       E                     EXTFLD(BMNHU1)
     D  WTNWU1       E                     EXTFLD(BMNWU1)
     D  WTQBU1       E                     EXTFLD(BMQBU1)
     D  WTHVU1       E                     EXTFLD(BMHVU1)
     D  WTNCU1       E                     EXTFLD(BMNCU1)
     D  WTAGAB       E                     EXTFLD(BMAGAB)
     D  WTQCU1       E                     EXTFLD(BMQCU1)
     D  WTNDU1       E                     EXTFLD(BMNDU1)
     D  WTEINZ       E                     EXTFLD(BMEINZ)
     D  WTYWAA       E                     EXTFLD(BMYWAA)
     D  WTHZPR       E                     EXTFLD(BMHZPR)
     D  WTYZAA       E                     EXTFLD(BMYZAA)
     D  WTH0PR       E                     EXTFLD(BMH0PR)
     D  WTY0AA       E                     EXTFLD(BMY0AA)
     D  WTNIU1       E                     EXTFLD(BMNIU1)
     D  WTNJU1       E                     EXTFLD(BMNJU1)
     D  WTNKU1       E                     EXTFLD(BMNKU1)
     D  WTTDNY       E                     EXTFLD(BMTDNY)
     D  WTNLU1       E                     EXTFLD(BMNLU1)
     D  WTNMU1       E                     EXTFLD(BMNMU1)
     D  WTNNU1       E                     EXTFLD(BMNNU1)
     D  WTNPU1       E                     EXTFLD(BMNPU1)
     D  WTEJNZ       E                     EXTFLD(BMEJNZ)
     D  WTEKNZ       E                     EXTFLD(BMEKNZ)
     D  WTELNZ       E                     EXTFLD(BMELNZ)
      *
     D QECP13        E DS                  EXTNAME(ECP145L0)
      * UPD : EDI Adv Ship Ntc Tare V2  Update index
      * Renamed input format fields
     D  TBH9NY       E                     EXTFLD(BJH9NY)
     D  TBQ2NY       E                     EXTFLD(BJQ2NY)
     D  TBTFNA       E                     EXTFLD(BJTFNA)
     D  TBC4NB       E                     EXTFLD(BJC4NB)
     D  TBJJU1       E                     EXTFLD(BJJJU1)
     D  TBYLAA       E                     EXTFLD(BJYLAA)
     D  TBYIAA       E                     EXTFLD(BJYIAA)
     D  TBP9U1       E                     EXTFLD(BJP9U1)
     D  TBYMAA       E                     EXTFLD(BJYMAA)
     D  TBYNAA       E                     EXTFLD(BJYNAA)
     D  TBD9NZ       E                     EXTFLD(BJD9NZ)
     D  TBEBNZ       E                     EXTFLD(BJEBNZ)
     D  TBEMNZ       E                     EXTFLD(BJEMNZ)
     D  TBENNZ       E                     EXTFLD(BJENNZ)
     D  TBYPAA       E                     EXTFLD(BJYPAA)
     D  TBFKNZ       E                     EXTFLD(BJFKNZ)
     D  TBQAU1       E                     EXTFLD(BJQAU1)
      *
     D YARDCS          DS           766
      * Message data for message Y2U0009.
     D MD0009          DS
     D  MDPGM                  1     10
     D  MDACP                 11     20
     D  MDFMT                 21     30
     D  MDACT                 31     34
     D  MDLBL                 35     40
     D QPMAM1        E DS                  EXTNAME(PMAMREL0)
      * UPD : Order Header Extension    Update index
      * Renamed input format fields
     D  TDAIC3       E                     EXTFLD(AMAIC3)
     D  TDC4NB       E                     EXTFLD(AMC4NB)
     D  TDRMNB       E                     EXTFLD(AMRMNB)
     D  TDRUNB       E                     EXTFLD(AMRUNB)
     D  TDXACD       E                     EXTFLD(AMXACD)
     D  TDOANA       E                     EXTFLD(AMOANA)
     D  TDHBAA       E                     EXTFLD(AMHBAA)
     D  TDJ0T1       E                     EXTFLD(AMJ0T1)
     D  TDGENY       E                     EXTFLD(AMGENY)
     D  TDJ1T1       E                     EXTFLD(AMJ1T1)
     D  TDHCAA       E                     EXTFLD(AMHCAA)
     D  TDQWDT       E                     EXTFLD(AMQWDT)
     D  TDQXDT       E                     EXTFLD(AMQXDT)
     D  TDQYDT       E                     EXTFLD(AMQYDT)
     D  TDHDAA       E                     EXTFLD(AMHDAA)
     D  TDCCTX       E                     EXTFLD(AMCCTX)
     D  TDJ2T1       E                     EXTFLD(AMJ2T1)
     D  TDRLNA       E                     EXTFLD(AMRLNA)
     D  TDRMNA       E                     EXTFLD(AMRMNA)
     D  TDGINY       E                     EXTFLD(AMGINY)
     D  TDGFNY       E                     EXTFLD(AMGFNY)
     D  TDGGNY       E                     EXTFLD(AMGGNY)
     D  TDGHNY       E                     EXTFLD(AMGHNY)
     D  TDHEVL       E                     EXTFLD(AMHEVL)
     D  TDHFVL       E                     EXTFLD(AMHFVL)
     D  TDHGVL       E                     EXTFLD(AMHGVL)
     D  TDQZDT       E                     EXTFLD(AMQZDT)
     D  TDQ0DT       E                     EXTFLD(AMQ0DT)
     D  TDQ1DT       E                     EXTFLD(AMQ1DT)
     D  TDQ2DT       E                     EXTFLD(AMQ2DT)
     D  TDC2TX       E                     EXTFLD(AMC2TX)
     D  TDC3TX       E                     EXTFLD(AMC3TX)
     D  TDC6TX       E                     EXTFLD(AMC6TX)
     D  TDCHTX       E                     EXTFLD(AMCHTX)
     D  TDCITX       E                     EXTFLD(AMCITX)
     D  TDCLTX       E                     EXTFLD(AMCLTX)
     D  TDB4TX       E                     EXTFLD(AMB4TX)
     D  TDCUTX       E                     EXTFLD(AMCUTX)
     D  TDCVTX       E                     EXTFLD(AMCVTX)
     D  TDB9TX       E                     EXTFLD(AMB9TX)
     D  TDJWSC       E                     EXTFLD(AMJWSC)
     D  TDITNY       E                     EXTFLD(AMITNY)
     D  TDLMT1       E                     EXTFLD(AMLMT1)
     D  TDLWAA       E                     EXTFLD(AMLWAA)
     D  TDFVST       E                     EXTFLD(AMFVST)
     D  TDF0ST       E                     EXTFLD(AMF0ST)
     D  TDF2ST       E                     EXTFLD(AMF2ST)
     D  TDF3ST       E                     EXTFLD(AMF3ST)
     D  TDJUSC       E                     EXTFLD(AMJUSC)
     D  TDJVSC       E                     EXTFLD(AMJVSC)
     D  TDV3T1       E                     EXTFLD(AMV3T1)
     D  TDV4T1       E                     EXTFLD(AMV4T1)
     D  TDV5T1       E                     EXTFLD(AMV5T1)
     D  TDV6T1       E                     EXTFLD(AMV6T1)
     D  TDV7T1       E                     EXTFLD(AMV7T1)
     D  TDV8T1       E                     EXTFLD(AMV8T1)
     D  TDV9T1       E                     EXTFLD(AMV9T1)
     D  TDWAT1       E                     EXTFLD(AMWAT1)
     D  TDWBT1       E                     EXTFLD(AMWBT1)
     D  TDWCT1       E                     EXTFLD(AMWCT1)
     D  TDWDT1       E                     EXTFLD(AMWDT1)
     D  TDQJNY       E                     EXTFLD(AMQJNY)
     D  TDQKNY       E                     EXTFLD(AMQKNY)
     D  TDQLNY       E                     EXTFLD(AMQLNY)
     D  TDP8NY       E                     EXTFLD(AMP8NY)
     D  TDP9NY       E                     EXTFLD(AMP9NY)
     D  TDQANY       E                     EXTFLD(AMQANY)
     D  TDQCNY       E                     EXTFLD(AMQCNY)
     D  TDQDNY       E                     EXTFLD(AMQDNY)
     D  TDQENY       E                     EXTFLD(AMQENY)
     D  TDQFNY       E                     EXTFLD(AMQFNY)
     D  TDQGNY       E                     EXTFLD(AMQGNY)
     D  TDQHNY       E                     EXTFLD(AMQHNY)
     D  TDQINY       E                     EXTFLD(AMQINY)
     D  TDQMNY       E                     EXTFLD(AMQMNY)
     D  TDMYU1       E                     EXTFLD(AMMYU1)
     D  TDJXSC       E                     EXTFLD(AMJXSC)
     D  TDJYSC       E                     EXTFLD(AMJYSC)
     D  TDJZSC       E                     EXTFLD(AMJZSC)
     D  TDJ0SC       E                     EXTFLD(AMJ0SC)
     D  TDMZU1       E                     EXTFLD(AMMZU1)
     D  TDM0U1       E                     EXTFLD(AMM0U1)
     D  TDM1U1       E                     EXTFLD(AMM1U1)
     D  TDM2U1       E                     EXTFLD(AMM2U1)
     D  TDM3U1       E                     EXTFLD(AMM3U1)
     D  TDW5DT       E                     EXTFLD(AMW5DT)
     D  TDW6DT       E                     EXTFLD(AMW6DT)
     D  TDUVST       E                     EXTFLD(AMUVST)
     D  TDUWST       E                     EXTFLD(AMUWST)
     D  TDUXST       E                     EXTFLD(AMUXST)
     D  TDVSST       E                     EXTFLD(AMVSST)
     D  TDAATM       E                     EXTFLD(AMAATM)
     D  TDAYNA       E                     EXTFLD(AMAYNA)
     D  TDA0NA       E                     EXTFLD(AMA0NA)
     D  TDAXDT       E                     EXTFLD(AMAXDT)
      *
     D YBRDCS          DS           894
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              9  0
     D  WP0002         S              1
     D  WP0003         S              6
     D  WP0004         S             11  2
     D  WP0005         S             11  2
     D  WP0006         S             11  2
     D  WP0007         S              7  0
     D  WP0008         S              7  0
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  WN0001         S              1
     D  WN0002         S             11  2
     D  WN0003         S             11  2
     D  WN0004         S             11  2
     D  WN0005         S              7  0
     D  WN0006         S              7  0
     D  WN0007         S             35
     D  WN0008         S              1
     D  YL0001         S              1
     D  YL0002         S              2
     D  WQSA01         S                   LIKE(WARMNB)
     D  WQSA02         S                   LIKE(WAB0C7)
     D  WQSA03         S                   LIKE(WAAIC3)
     D  YL0003         S              6
     D  YN0001         S              6
     D  YN0002         S              3
     D  YN0003         S              1
     D  YL0004         S              3
     D  YL0005         S              1
     D  WL0001         S              7  0
     D  WL0002         S              6
     D  WL0003         S              6
     D  WL0004         S              3
     D  WL0005         S              1
     D  Y0CX01         S              1
     D  YL0006         S              3
     D  WL0006         S              3  0
     D  WL0007         S              7  0
     D  WL0008         S              3  0
     D  WL0009         S              3  0
     D  WL0010         S              3
     D  WL0011         S              6
     D  WQSD01         S                   LIKE(WCAIC3)
     D  WQSD02         S                   LIKE(WCC4NB)
     D  YL0007         S              1
     D  YL0008         S              1
     D  YN0004         S              1
     D  YL0009         S              1
     D  WL0012         S              3
     D  WL0013         S              1
     D  WL0014         S              1
     D  WL0015         S              1
     D  WL0016         S              1
     D  YL0010         S              1
     D  WQ0001         S              3  0
     D  WQ0002         S              7  0
     D  WQ0003         S              6
     D  WQ0004         S              1
     D  W0CLPG         S             10
     D  YN0005         S              5
     D  YL0011         S              1
     D  YN0006         S              1
     D  YL0012         S              1
     D  YL0013         S              1
     D  WQ0005         S              1
     D  WQ0006         S              1
     D  WQ0007         S              1
     D  YL0014         S             15
     D  YL0015         S              7
     D  ZQ             S              5  0
     D  YL0016         S              5
     D  YL0017         S              8  0
     D  YL0018         S              8  0
     D  YL0019         S             15
     D  WL0017         S              3  0
     D  WL0018         S              7  0
     D  WL0019         S             15
     D  WL0020         S              6
     D  WL0021         S             22
     D  WL0022         S             30
     D  WQSI01         S                   LIKE(WGJ5NX)
     D  WQSI02         S                   LIKE(WGPONO)
     D  YL0020         S              7  0
     D  YL0021         S             11  2
     D  YL0022         S             11  2
     D  YL0023         S             11  2
     D  YL0024         S              7  0
     D  WL0023         S              3  0
     D  WL0024         S              7  0
     D  WL0025         S             11  2
     D  WL0026         S             11  2
     D  WL0027         S             11  2
     D  WL0028         S              7  0
     D  YL0025         S              1
     D  WQSJ01         S                   LIKE(WCAIC3)
     D  WQSJ02         S                   LIKE(WCC4NB)
     D  YL0026         S             11  2
     D  YL0027         S             11  2
     D  WQ0008         S              3  0
     D  WQ0009         S              7  0
     D  WQ0010         S              3  0
     D  WQ0011         S              3  0
     D  WQ0012         S             11  2
     D  WQ0013         S             11  2
     D  WQ0014         S              9  2
     D  YL0028         S              1
     D  YL0029         S              7  0
     D  YL0030         S              7  0
     D  WL0029         S              7  0
     D  WL0030         S              1
     D  WL0031         S              7  0
     D  WL0032         S              7  0
     D  YL0031         S              7  0
     D  WQ0015         S              3  0
     D  WQ0016         S              7  0
     D  WQ0017         S              7  0
     D  WL0033         S              9  0
     D  WL0034         S              7  0
     D  WL0035         S              6
     D  WL0036         S             15
     D  WL0037         S              8  0
     D  WL0038         S              2
     D  WL0039         S             35
     D  WL0040         S              5
     D  WL0041         S              7  0
     D  WL0042         S              7  0
     D  WL0043         S              7  0
     D  WL0044         S              7  0
     D  WL0045         S              9  1
     D  WL0046         S              9  1
     D  WL0047         S              8  0
     D  WL0048         S              8  0
     D  WL0049         S              8  0
     D  WL0050         S              8  0
     D  WL0051         S             15
     D  WL0052         S              7  0
     D  ZADFMF         S             10
     D  WQ0018         S              3  0
     D  WQ0019         S              7  0
     D  WQ0020         S              7  0
     D  WN0009         S             11  2
     D  WN0010         S             11  2
     D  WN0011         S             11  2
     D  WN0012         S             11  2
     D  WN0013         S              7  0
     D  WN0014         S              7  0
     D  WN0015         S             11  2
     D  WN0016         S             11  2
     D  WN0017         S             11  2
     D  WN0018         S             11  2
     D  YL0032         S              1
     D  YL0033         S              1
     D  YL0034         S              1
     D  YL0035         S              1
     D  YL0036         S              1
     D  WQSM01         S                   LIKE(WJAIC3)
     D  WQSM02         S                   LIKE(WJC4NB)
     D  YL0037         S              9  0
     D  YL0038         S             20  0
     D  YL0039         S              3  0
     D  YL0040         S              7  0
     D  YL0041         S              7  0
     D  YL0042         S              9
     D  YL0043         S             20
     D  YL0044         S              5  0
     D  YL0045         S             48
     D  YL0046         S              3
     D  YL0047         S              2
     D  YL0048         S              2
     D  YL0049         S             30
     D  YL0050         S             11  4
     D  WL0053         S              3  0
     D  WL0054         S              7  0
     D  WL0055         S              3  0
     D  WL0056         S              3
     D  WL0057         S              2
     D  WL0058         S              2
     D  WL0059         S             30
     D  WL0060         S             11  4
     D  WQSN01         S                   LIKE(WKAIC3)
     D  WQSN02         S                   LIKE(WKC4NB)
     D  WQSN03         S                   LIKE(WKDPNB)
     D  YL0051         S              2
     D  YL0052         S             14
     D  WL0061         S              7  0
     D  WL0062         S             14
     D  YL0053         S              1
     D  YL0054         S              7  0
     D  YL0055         S              7  0
     D  YL0056         S              8  0
     D  YL0057         S              7  0
     D  WL0063         S              3  0
     D  WL0064         S              7  0
     D  WL0065         S              7  0
     D  WL0066         S              7  0
     D  WQSP01         S                   LIKE(WMAIC3)
     D  WQSP02         S                   LIKE(WMC4NB)
     D  WQSP03         S                   LIKE(WMHGCD)
     D  YL0058         S              8  0
     D  YL0059         S             48
     D  YL0060         S              6  0
     D  WN0019         S              6
     D  WN0020         S              7
     D  WN0021         S              2
     D  WN0022         S              2
     D  WN0023         S              2
     D  YL0061         S             30
     D  YL0062         S             48
     D  WL0067         S              6
     D  WL0068         S              7  0
     D  WL0069         S              2
     D  WL0070         S             14
     D  YL0063         S             14
     D  YL0064         S              2
     D  WL0071         S              7  0
     D  WL0072         S              7  0
     D  WL0073         S             14
     D  WL0074         S              2
     D  YL0065         S              2
     D  YL0066         S              2
     D  WL0075         S              3
     D  WL0076         S              2
     D  WL0077         S              2
     D  YL0067         S              7  0
     D  XDWK1          S              8  0
     D  XDAY1          S              6  0
     D  XDAY2          S              6  0
     D  XDURR          S              8  0
     D  XDSEL          S              1
     D  XDCDW          S              7
     D  XDWSL          S              1  0
     D  XDSTP          S              1  0
     D  XDWNB          S              6  0
     D  XDLSW          S              1  0
     D  YY             S              6  0
     D  XDWK3          S              7  1
     D  XDWK2          S              6  0
     D  YL0068         S              5  0
     D  WL0078         S              7  0
     D  WL0079         S              5  0
     D  WQST01         S                   LIKE(WSHGCD)
     D  YL0069         S              8  0
     D  YL0070         S              8  0
     D  YL0071         S             48
     D  YL0072         S             48
     D  WL0080         S              9  0
     D  WL0081         S              7  0
     D  WL0082         S             15
     D  WL0083         S              7  0
     D  WL0084         S             48
     D  WL0085         S              3  0
     D  WL0086         S              5  0
     D  WL0087         S              2
     D  WL0088         S             11  2
     D  WL0089         S             11  2
     D  WL0090         S              6  0
     D  WL0091         S             30
     D  WL0092         S             48
     D  WL0093         S             48
     D  WL0094         S             48
     D  WL0095         S             48
     D  WL0096         S             20
     D  WL0097         S             48
     D  WL0098         S             12
     D  WL0099         S             48
     D  WL0100         S              2
     D  WL0101         S             48
     D  WL0102         S             20
     D  WL0103         S              5  0
     D  WL0104         S              2
     D  WL0105         S             11  4
     D  WL0106         S              6
     D  WL0107         S             11  4
     D  WL0108         S              6
     D  WL0109         S             48
     D  WL0110         S             48
     D  WL0111         S             48
     D  WL0112         S              8  0
     D  WL0113         S              8
     D  WL0114         S              8
     D  WL0115         S              8
     D  WL0116         S             30
     D  WL0117         S              8  0
     D  WL0118         S              8  0
     D  WL0119         S              8  0
     D  WL0120         S              9  0
     D  WL0121         S              7  0
     D  WL0122         S             15
     D  WL0123         S              7  0
     D  WL0124         S             48
     D  WL0125         S              3  0
     D  WL0126         S              5  0
     D  WL0127         S              2
     D  WL0128         S             11  2
     D  WL0129         S             11  2
     D  WL0130         S              6  0
     D  WL0131         S             30
     D  WL0132         S             48
     D  WL0133         S             48
     D  WL0134         S             48
     D  WL0135         S             48
     D  WL0136         S             20
     D  WL0137         S             48
     D  WL0138         S             12
     D  WL0139         S             48
     D  WL0140         S              2
     D  WL0141         S             48
     D  WL0142         S             20
     D  WL0143         S              5  0
     D  WL0144         S              2
     D  WL0145         S             11  4
     D  WL0146         S              6
     D  WL0147         S             11  4
     D  WL0148         S              6
     D  WL0149         S             48
     D  WL0150         S             48
     D  WL0151         S             48
     D  WL0152         S              8  0
     D  WL0153         S              8
     D  WL0154         S              8
     D  WL0155         S              8
     D  WL0156         S             30
     D  WL0157         S              8  0
     D  WL0158         S              8  0
     D  WL0159         S              8  0
     D  WL0160         S              3  0
     D  WL0161         S              9  0
     D  WL0162         S              1
     D  WL0163         S              2
     D  YL0073         S             20  0
     D  WN0024         S              3  0
     D  WN0025         S              3  0
     D  YL0074         S             20
     D  WL0164         S              3  0
     D  WL0165         S             20
     D  YL0075         S              7
     D  YL0076         S              8
     D  YL0077         S              1
     D  YL0078         S              1
     D  YL0079         S              1
     D  YL0080         S              1
     D  YL0081         S              1
     D  YL0082         S              1
     D  YL0083         S              1
     D  YL0084         S              1
     D  YL0085         S              1  0
     D  YL0086         S              1  0
     D  YL0087         S              1  0
     D  YL0088         S              1  0
     D  YL0089         S              1  0
     D  YL0090         S              1  0
     D  YL0091         S              1  0
     D  YL0092         S              1  0
     D  YL0093         S              9
     D  YL0094         S              1
     D  YL0095         S              1  0
     D  YL0096         S              1  0
     D  YL0097         S              1  0
     D  YL0098         S              1  0
     D  YL0099         S              1  0
     D  YL0100         S              1  0
     D  YL0101         S              1  0
     D  YL0102         S              1  0
     D  YL0103         S              1  0
     D  YL0104         S              3  0
     D  YL0105         S              1  0
     D  YL0106         S              1  0
     D  YL0107         S              1
     D  YL0108         S             20
     D  WN0026         S              6
     D  WN0027         S              7
     D  WN0028         S              2
     D  WN0029         S              2
     D  WN0030         S              2
     D  YN0007         S             30
     D  YL0109         S              5  2
     D  WL0166         S              3  0
     D  WL0167         S              7  0
     D  WL0168         S             30
     D  WL0169         S              5  2
     D  YL0110         S              5  2
     D  YN0008         S              5  0
     D  YN0009         S              5  2
     D  YN0010         S              7  0
     D  WL0170         S              3  0
     D  WL0171         S              7  0
     D  WL0172         S             11  2
     D  WL0173         S              5  0
     D  WL0174         S              5  2
     D  WL0175         S              7  0
     D  WN0031         S              3
     D  WN0032         S              1
     D  WN0033         S             11  2
     D  WQSY01         S                   LIKE(WXAIC3)
     D  WQSY02         S                   LIKE(WXHGCD)
     D  YL0111         S              8  2
     D  WN0034         S              6
     D  WN0035         S              7
     D  WN0036         S              2
     D  WN0037         S              2
     D  WN0038         S              2
     D  YL0112         S              7  0
     D  WL0176         S              3  0
     D  WL0177         S              7  0
     D  WL0178         S              7  0
     D  WQTA01         S                   LIKE(WYAIC3)
     D  WQTA02         S                   LIKE(WYHGCD)
     D  YL0113         S              3
     D  YL0114         S              3
     D  WL0179         S              7  0
     D  WL0180         S              3
     D  WL0181         S              3
     D  YL0115         S              2
     D  WL0182         S              3  0
     D  WL0183         S              7  0
     D  WL0184         S              7  0
     D  WL0185         S              2
     D  WQTC01         S                   LIKE(TAAIC3)
     D  WQTC02         S                   LIKE(TAC4NB)
     D  WQTC03         S                   LIKE(TAHGCD)
     D  YL0116         S              7
     D  WL0186         S              9  0
     D  WL0187         S              7  0
     D  WL0188         S             15
     D  WL0189         S              7  0
     D  WL0190         S             48
     D  WL0191         S              2
     D  WL0192         S              5
     D  WL0193         S              1
     D  WL0194         S              3
     D  WL0195         S              3
     D  WL0196         S              7  0
     D  WL0197         S              8  2
     D  WL0198         S              9  1
     D  WL0199         S              9  1
     D  WL0200         S              1
     D  WL0201         S              7  0
     D  WL0202         S              7
     D  WL0203         S              9  0
     D  WL0204         S              7  0
     D  WL0205         S             15
     D  WL0206         S              7  0
     D  WL0207         S             48
     D  WL0208         S              2
     D  WL0209         S              5
     D  WL0210         S              1
     D  WL0211         S              3
     D  WL0212         S              3
     D  WL0213         S              7  0
     D  WL0214         S              8  2
     D  WL0215         S              9  1
     D  WL0216         S              9  1
     D  WL0217         S              1
     D  WL0218         S              7  0
     D  WL0219         S              7
     D  WL0220         S              3  0
     D  WL0221         S              9  0
     D  WL0222         S              1
     D  WL0223         S              2
     D  YL0117         S             20  0
     D  WN0039         S              3  0
     D  WN0040         S              3  0
     D  WN0041         S              6
     D  WN0042         S              7
     D  WN0043         S              2
     D  WN0044         S              2
     D  WN0045         S              2
     D  WN0046         S              5  0
     D  WQTF01         S                   LIKE(WCAIC3)
     D  WQTF02         S                   LIKE(WCC4NB)
     D  YL0118         S             48
     D  WQTG01         S                   LIKE(TCH9NY)
     D  WQTG02         S                   LIKE(TCC4NB)
     D  WQTG03         S                   LIKE(TCDPNB)
     D  WQTG04         S                   LIKE(TCNFU1)
     D  YL0119         S              5  0
     D  WL0224         S              9  0
     D  WL0225         S              7  0
     D  WL0226         S             15
     D  WL0227         S              7  0
     D  WL0228         S             48
     D  WL0229         S              3  0
     D  WL0230         S              5  0
     D  WL0231         S              2
     D  WL0232         S             11  2
     D  WL0233         S             11  2
     D  WL0234         S              6  0
     D  WL0235         S             30
     D  WL0236         S             48
     D  WL0237         S             48
     D  WL0238         S             48
     D  WL0239         S             48
     D  WL0240         S             20
     D  WL0241         S             48
     D  WL0242         S             12
     D  WL0243         S             48
     D  WL0244         S              2
     D  WL0245         S             48
     D  WL0246         S             20
     D  WL0247         S              5  0
     D  WL0248         S              2
     D  WL0249         S             11  4
     D  WL0250         S              6
     D  WL0251         S             11  4
     D  WL0252         S              6
     D  WL0253         S             48
     D  WL0254         S             48
     D  WL0255         S             48
     D  WL0256         S              8  0
     D  WL0257         S              8
     D  WL0258         S              8
     D  WL0259         S              8
     D  WL0260         S             30
     D  WL0261         S              8  0
     D  WL0262         S              8  0
     D  WL0263         S              8  0
     D  YARDC          S              1
     D  YL0120         S              5  0
     D  WN0047         S              7  0
     D  WN0048         S              5  0
     D  WN0049         S              3
     D  WN0050         S             20
     D  WN0051         S             25
     D  WN0052         S             30
     D  WN0053         S             15
     D  WN0054         S             15
     D  WN0055         S             20
     D  WN0056         S              7  0
     D  WN0057         S              7  0
     D  WN0058         S              7  0
     D  WN0059         S              3
     D  WN0060         S              1
     D  WN0061         S             12
     D  WN0062         S             35
     D  WN0063         S             75
     D  WN0064         S             11  0
     D  WN0065         S             11  0
     D  WN0066         S             11  0
     D  WN0067         S             11  0
     D  WN0068         S             11  2
     D  WN0069         S             11  2
     D  WN0070         S             11  2
     D  WN0071         S              7  0
     D  WN0072         S              7  0
     D  WN0073         S              7  0
     D  WN0074         S              7  0
     D  WN0075         S              4
     D  WN0076         S              4
     D  WN0077         S              4
     D  WN0078         S              2
     D  WN0079         S              2
     D  WN0080         S              2
     D  WN0081         S              3
     D  WN0082         S              3
     D  WN0083         S              3
     D  WN0084         S              5
     D  WN0085         S              5  0
     D  WN0086         S             38
     D  WN0087         S              6
     D  WN0088         S              6
     D  WN0089         S              6
     D  WN0090         S              6
     D  WN0091         S              6
     D  WN0092         S              1
     D  WN0093         S             10
     D  WN0094         S             10
     D  WN0095         S             10
     D  WN0096         S             15
     D  WN0097         S             15
     D  WN0098         S             15
     D  WN0099         S             30
     D  WN0100         S             30
     D  WN0101         S             30
     D  WN0102         S             50
     D  WN0103         S             50
     D  WN0104         S              3  0
     D  WN0105         S              3  0
     D  WN0106         S              3  0
     D  WN0107         S              5  2
     D  WN0108         S              5  2
     D  WN0109         S              5  0
     D  WN0110         S              6  0
     D  WN0111         S              6  0
     D  WN0112         S              6  0
     D  WN0113         S              6  0
     D  WN0114         S              9  0
     D  WN0115         S              9  0
     D  WN0116         S              9  0
     D  WN0117         S              9  6
     D  WN0118         S             15
     D  WN0119         S              1
     D  WN0120         S              1
     D  WN0121         S              2
     D  WN0122         S              2
     D  WN0123         S              5
     D  WN0124         S              5
     D  WN0125         S             15
     D  WN0126         S             15
     D  WN0127         S             30
     D  WN0128         S              7  0
     D  WN0129         S              7  0
     D  WN0130         S              1
     D  WN0131         S              1
     D  WN0132         S              1
     D  WN0133         S              1
     D  WN0134         S              6  0
     D  WN0135         S             10
     D  WN0136         S             10
     D  WN0137         S              7  0
     D  YBRDC          S              1
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0WD02         S             17  7
     D  W0WD01         S             17  7
     D  W0WD00         S             17  7
     D  YRSW00         S              5  0
     D  YRSW01         S              5  0
     D  W0WD04         S             17  7
     D  W0WD03         S             17  7
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS            29
      * KEY: Order Header TRG          Load/BTC#/Co/PO#/Order
      * I :  Load ID
     D  P1RMNB                 1      4P 0
      * I :  Bill to Customer
     D  P1B0C7                 5      8P 0
      * I :  Company Number
     D  P1AIC3                 9     10P 0
     D P2PARM          DS
      * FLD: *Arrays
      * I :  EDI SURROGATE NUMBER
     D  P2H9NY                 1      5P 0
      * I :  Set EDI 856 Pallet ID=1 U
     D  P2KESC                 6      6
      * I :  EDI Trading Partner No
     D  P2J5NX                 7     12
      * B :  Total Quantity Ship  USR
     D  P2MEQT                13     18P 2
      * B :  Total Weight Ship    USR
     D  P2IFWG                19     24P 2
      * B :  Total Gross Weight USR
     D  P2QGWG                25     30P 2
      * B :  Total Pallet Count Hdr U
     D  P2FQNZ                31     34P 0
      * B :  Total Unit Count Hdr U
     D  P2FRNZ                35     38P 0
     D                 DS
     D  ZAMSDA                 1    132
     I@BFCPF7
      * Order Header TRG          Load/BTC#/Co/PO#/Order
      * Renamed input format fields
     I              BEAIC3                      WAAIC3
     I              BEC4NB                      WAC4NB
     I              BEJNCD                      WAJNCD
     I              BEANC7                      WAANC7
     I              BEBKC7                      WABKC7
     I              BEBRTX                      WABRTX
     I              BEHMNA                      WAHMNA
     I              BEHONA                      WAHONA
     I              BEHPNA                      WAHPNA
     I              BEHNNA                      WAHNNA
     I              BEDBCD                      WADBCD
     I              BECKTX                      WACKTX
     I              BEB0C7                      WAB0C7
     I              BEAETX                      WAAETX
     I              BEB1NA                      WAB1NA
     I              BEB3NA                      WAB3NA
     I              BEB4NA                      WAB4NA
     I              BEB2NA                      WAB2NA
     I              BEBHCD                      WABHCD
     I              BEC8TX                      WAC8TX
     I              BEBCNA                      WABCNA
     I              BEA0DT                      WAA0DT
     I              BEA5DT                      WAA5DT
     I              BEGNDT                      WAGNDT
     I              BEACDT                      WAACDT
     I              BEAQCD                      WAAQCD
     I              BEB6NA                      WAB6NA
     I              BEBYNA                      WABYNA
     I              BEBZNA                      WABZNA
     I              BEGTST                      WAGTST
     I              BEGVST                      WAGVST
     I              BEGUST                      WAGUST
     I              BEQFST                      WAQFST
     I              BECQCD                      WACQCD
     I              BEGJST                      WAGJST
     I              BEGWST                      WAGWST
     I              BEGXST                      WAGXST
     I              BEGYST                      WAGYST
     I              BEAODT                      WAAODT
     I              BEAIVN                      WAAIVN
     I              BECXDT                      WACXDT
     I              BEJZVA                      WAJZVA
     I              BEA1WG                      WAA1WG
     I              BEXIST                      WAXIST
     I              BEXJST                      WAXJST
     I              BEXKST                      WAXKST
     I              BEEIDT                      WAEIDT
     I              BEAFTM                      WAAFTM
     I              BEE8CD                      WAE8CD
     I              BEE9CD                      WAE9CD
     I              BERMNB                      WARMNB
     I              BETBNB                      WATBNB
     I              BER1NB                      WAR1NB
     I              BEPJST                      WAPJST
     I              BEU0ST                      WAU0ST
     I              BEU1ST                      WAU1ST
     I              BEQ2CD                      WAQ2CD
     I              BEU2ST                      WAU2ST
     I              BEVEST                      WAVEST
     I              BEVFST                      WAVFST
     I              BEVGST                      WAVGST
     I              BERPCD                      WARPCD
     I              BERNNB                      WARNNB
     I              BEVDST                      WAVDST
     I              BEATIN                      WAATIN
     I              BEU4ST                      WAU4ST
     I              BEU5ST                      WAU5ST
     I              BERSRN                      WARSRN
     I              BEMHNA                      WAMHNA
     I              BEMINA                      WAMINA
     I              BEWBST                      WAWBST
     I              BER4CD                      WAR4CD
     I              BEBFCD                      WABFCD
     I              BEQ4CD                      WAQ4CD
     I              BET3NB                      WAT3NB
     I              BESICD                      WASICD
     I              BECONB                      WACONB
     I              BECEST                      WACEST
     I              BEAWDT                      WAAWDT
     I              BEJPCD                      WAJPCD
     I              BEXUST                      WAXUST
     I              BEZ1ST                      WAZ1ST
     I              BEVRVA                      WAVRVA
     I              BEOBST                      WAOBST
     I              BEBCST                      WABCST
     I              BEBDST                      WABDST
     I              BEB7VL                      WAB7VL
     I              BEGASX                      WAGASX
     I              BEGBSX                      WAGBSX
     I              BEGCSX                      WAGCSX
     I              BEGDSX                      WAGDSX
     I              BEFNSX                      WAFNSX
     I              BEFOSX                      WAFOSX
     I              BEFPSX                      WAFPSX
     I              BEFQSX                      WAFQSX
     I              BEFRSX                      WAFRSX
     I              BEFSSX                      WAFSSX
     I              BEFTSX                      WAFTSX
     I              BEFUSX                      WAFUSX
     I              BEFVSX                      WAFVSX
     I              BEFWSX                      WAFWSX
     I              BEFXSX                      WAFXSX
     I              BEFYSX                      WAFYSX
     I              BENODT                      WANODT
     I              BENPDT                      WANPDT
     I              BENQDT                      WANQDT
     I              BENRDT                      WANRDT
     I              BENSDT                      WANSDT
     I              BEBPTM                      WABPTM
     I              BEBQTM                      WABQTM
     I              BEBRTM                      WABRTM
     I              BEBSTM                      WABSTM
     I              BEBTTM                      WABTTM
     I              BEH0NX                      WAH0NX
     I              BEH1NX                      WAH1NX
     I              BEH2NX                      WAH2NX
     I              BEH3NX                      WAH3NX
     I              BEH4NX                      WAH4NX
     I              BEC0C7                      WAC0C7
     I              BEUVST                      WAUVST
     I              BEUWST                      WAUWST
     I              BEUXST                      WAUXST
     I              BEAATM                      WAAATM
     I              BEAYNA                      WAAYNA
     I              BEA0NA                      WAA0NA
     I              BEAXDT                      WAAXDT
      *
     I@GQREH2
      * EDI Bill To Interchange   Retrieval index
      * Renamed input format fields
     I              GQB0C7                      WBB0C7
     I              GQM4AA                      WBM4AA
     I              GQM7AA                      WBM7AA
     I              GQJ5NX                      WBJ5NX
     I              GQA8U1                      WBA8U1
     I              GQA9U1                      WBA9U1
     I              GQBAU1                      WBBAU1
     I              GQBBU1                      WBBBU1
     I              GQY4NY                      WBY4NY
     I              GQY5NY                      WBY5NY
     I              GQBFU1                      WBBFU1
     I              GQBGU1                      WBBGU1
     I              GQBHU1                      WBBHU1
     I              GQBIU1                      WBBIU1
     I              GQSIAA                      WBSIAA
     I              GQSJAA                      WBSJAA
     I              GQVSST                      WBVSST
     I              GQMJDT                      WBMJDT
     I              GQBETM                      WBBETM
     I              GQCCVN                      WBCCVN
     I              GQCDVN                      WBCDVN
     I              GQMKDT                      WBMKDT
     I              GQBFTM                      WBBFTM
     I              GQCEVN                      WBCEVN
     I              GQCFVN                      WBCFVN
      *
     I@BGWKAE
      * Order Detail              co/
      * Renamed input format fields
     I              OMAIC3                      WCAIC3
     I              OMC4NB                      WCC4NB
     I              OMDPNB                      WCDPNB
     I              OMUENB                      WCUENB
     I              OMHGCD                      WCHGCD
     I              OMAJCD                      WCAJCD
     I              OMBKC7                      WCBKC7
     I              OMCFC7                      WCCFC7
     I              OMGMST                      WCGMST
     I              OMGNST                      WCGNST
     I              OMMAVA                      WCMAVA
     I              OMKDVA                      WCKDVA
     I              OML8VA                      WCL8VA
     I              OML9VA                      WCL9VA
     I              OMGTST                      WCGTST
     I              OMGVST                      WCGVST
     I              OMGUST                      WCGUST
     I              OMQFST                      WCQFST
     I              OMAYVA                      WCAYVA
     I              OMEXDT                      WCEXDT
     I              OMLQCD                      WCLQCD
     I              OMRDCD                      WCRDCD
     I              OMQ7CD                      WCQ7CD
     I              OMBZPR                      WCBZPR
     I              OML6NB                      WCL6NB
     I              OMU1ST                      WCU1ST
     I              OMGIDT                      WCGIDT
     I              OMCRCD                      WCCRCD
     I              OMAGCD                      WCAGCD
     I              OMRZST                      WCRZST
     I              OMR0ST                      WCR0ST
     I              OMR1ST                      WCR1ST
     I              OMG7NA                      WCG7NA
     I              OMG8NA                      WCG8NA
     I              OMRPCD                      WCRPCD
     I              OMVEST                      WCVEST
     I              OMVGST                      WCVGST
     I              OMAVST                      WCAVST
     I              OMU0ST                      WCU0ST
     I              OMRFCD                      WCRFCD
     I              OMFZST                      WCFZST
     I              OMR1NB                      WCR1NB
     I              OMAVQT                      WCAVQT
     I              OMD0WG                      WCD0WG
     I              OMCCQT                      WCCCQT
     I              OMAUWG                      WCAUWG
     I              OMCBQT                      WCCBQT
     I              OMATWG                      WCATWG
     I              OMAQCS                      WCAQCS
     I              OMAGCS                      WCAGCS
     I              OMAKPR                      WCAKPR
     I              OMALPR                      WCALPR
     I              OMAUPR                      WCAUPR
     I              OMAVWG                      WCAVWG
     I              OMA4WG                      WCA4WG
     I              OMA5DT                      WCA5DT
     I              OMAODT                      WCAODT
     I              OMGNDT                      WCGNDT
     I              OMAMST                      WCAMST
     I              OMANST                      WCANST
     I              OMVAST                      WCVAST
     I              OMRGNB                      WCRGNB
     I              OMRHNB                      WCRHNB
     I              OMRINB                      WCRINB
     I              OMRBCD                      WCRBCD
     I              OMHICD                      WCHICD
     I              OMRNCD                      WCRNCD
     I              OMROCD                      WCROCD
     I              OMCXDT                      WCCXDT
     I              OMAJVN                      WCAJVN
     I              OMKXCD                      WCKXCD
     I              OMJPCD                      WCJPCD
     I              OMCQCD                      WCCQCD
     I              OMR4CD                      WCR4CD
     I              OMZ1ST                      WCZ1ST
     I              OMZ3ST                      WCZ3ST
     I              OMZ4ST                      WCZ4ST
     I              OMDUPR                      WCDUPR
     I              OMB6VL                      WCB6VL
     I              OMA1AA                      WCA1AA
     I              OMFZSX                      WCFZSX
     I              OMF0SX                      WCF0SX
     I              OMF1SX                      WCF1SX
     I              OMF2SX                      WCF2SX
     I              OMF3SX                      WCF3SX
     I              OMF4SX                      WCF4SX
     I              OMF5SX                      WCF5SX
     I              OMF6SX                      WCF6SX
     I              OMF7SX                      WCF7SX
     I              OMNTDT                      WCNTDT
     I              OMNUDT                      WCNUDT
     I              OMNVDT                      WCNVDT
     I              OMNWDT                      WCNWDT
     I              OMNXDT                      WCNXDT
     I              OMBUTM                      WCBUTM
     I              OMBVTM                      WCBVTM
     I              OMBWTM                      WCBWTM
     I              OMBXTM                      WCBXTM
     I              OMBYTM                      WCBYTM
     I              OMH5NX                      WCH5NX
     I              OMH6NX                      WCH6NX
     I              OMH7NX                      WCH7NX
     I              OMH8NX                      WCH8NX
     I              OMH9NX                      WCH9NX
     I              OMDVPR                      WCDVPR
     I              OMDWPR                      WCDWPR
     I              OMDXPR                      WCDXPR
     I              OMDYPR                      WCDYPR
     I              OMDZPR                      WCDZPR
     I              OMGSPR                      WCGSPR
     I              OMGTPR                      WCGTPR
     I              OMGUPR                      WCGUPR
     I              OMHOST                      WCHOST
     I              OMHPST                      WCHPST
     I              OMIOST                      WCIOST
     I              OMPEWG                      WCPEWG
     I              OMRINY                      WCRINY
     I              OMTIDT                      WCTIDT
     I              OMTJDT                      WCTJDT
     I              OMH2ST                      WCH2ST
     I              OMH0ST                      WCH0ST
     I              OMH1ST                      WCH1ST
     I              OMTKDT                      WCTKDT
     I              OMTLDT                      WCTLDT
     I              OMTMDT                      WCTMDT
     I              OMUVST                      WCUVST
     I              OMUWST                      WCUWST
     I              OMUXST                      WCUXST
     I              OMAATM                      WCAATM
     I              OMAYNA                      WCAYNA
     I              OMA0NA                      WCA0NA
     I              OMAXDT                      WCAXDT
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                      WDAJCD
     I              ADF8NA                      WDF8NA
     I              ADACNA                      WDACNA
     I              ADADNA                      WDADNA
     I              ADAENA                      WDAENA
     I              ADAJNA                      WDAJNA
     I              ADBTTX                      WDBTTX
     I              ADAOCD                      WDAOCD
     I              ADBGCD                      WDBGCD
     I              ADVHST                      WDVHST
     I              ADMPNA                      WDMPNA
     I              ADWPST                      WDWPST
     I              ADXUST                      WDXUST
     I              ADT0ST                      WDT0ST
     I              ADT1ST                      WDT1ST
     I              ADDBNB                      WDDBNB
     I              ADT2ST                      WDT2ST
     I              ADT3ST                      WDT3ST
     I              ADT4ST                      WDT4ST
     I              ADT6ST                      WDT6ST
     I              ADBWC3                      WDBWC3
     I              ADBTC3                      WDBTC3
     I              ADBUC3                      WDBUC3
     I              ADBVC3                      WDBVC3
     I              ADFCAA                      WDFCAA
     I              ADRQSX                      WDRQSX
     I              ADRRSX                      WDRRSX
     I              ADRSSX                      WDRSSX
     I              ADRTSX                      WDRTSX
     I              ADT7ST                      WDT7ST
     I              ADT8ST                      WDT8ST
     I              ADRNSX                      WDRNSX
     I              ADROSX                      WDROSX
     I              ADRPSX                      WDRPSX
     I              ADUVST                      WDUVST
     I              ADUWST                      WDUWST
     I              ADUXST                      WDUXST
     I              ADVSST                      WDVSST
     I              ADAATM                      WDAATM
     I              ADAYNA                      WDAYNA
     I              ADA0NA                      WDA0NA
     I              ADAXDT                      WDAXDT
     I              ADQDSC                      WDQDSC
      *
     I@AMREJF
      * Order Header Extension    Retrieval index
      * Renamed input format fields
     I              AMAIC3                      WEAIC3
     I              AMC4NB                      WEC4NB
     I              AMRMNB                      WERMNB
     I              AMRUNB                      WERUNB
     I              AMXACD                      WEXACD
     I              AMOANA                      WEOANA
     I              AMHBAA                      WEHBAA
     I              AMJ0T1                      WEJ0T1
     I              AMGENY                      WEGENY
     I              AMJ1T1                      WEJ1T1
     I              AMHCAA                      WEHCAA
     I              AMQWDT                      WEQWDT
     I              AMQXDT                      WEQXDT
     I              AMQYDT                      WEQYDT
     I              AMHDAA                      WEHDAA
     I              AMCCTX                      WECCTX
     I              AMJ2T1                      WEJ2T1
     I              AMRLNA                      WERLNA
     I              AMRMNA                      WERMNA
     I              AMGINY                      WEGINY
     I              AMGFNY                      WEGFNY
     I              AMGGNY                      WEGGNY
     I              AMGHNY                      WEGHNY
     I              AMHEVL                      WEHEVL
     I              AMHFVL                      WEHFVL
     I              AMHGVL                      WEHGVL
     I              AMQZDT                      WEQZDT
     I              AMQ0DT                      WEQ0DT
     I              AMQ1DT                      WEQ1DT
     I              AMQ2DT                      WEQ2DT
     I              AMC2TX                      WEC2TX
     I              AMC3TX                      WEC3TX
     I              AMC6TX                      WEC6TX
     I              AMCHTX                      WECHTX
     I              AMCITX                      WECITX
     I              AMCLTX                      WECLTX
     I              AMB4TX                      WEB4TX
     I              AMCUTX                      WECUTX
     I              AMCVTX                      WECVTX
     I              AMB9TX                      WEB9TX
     I              AMJWSC                      WEJWSC
     I              AMITNY                      WEITNY
     I              AMLMT1                      WELMT1
     I              AMLWAA                      WELWAA
     I              AMFVST                      WEFVST
     I              AMF0ST                      WEF0ST
     I              AMF2ST                      WEF2ST
     I              AMF3ST                      WEF3ST
     I              AMJUSC                      WEJUSC
     I              AMJVSC                      WEJVSC
     I              AMV3T1                      WEV3T1
     I              AMV4T1                      WEV4T1
     I              AMV5T1                      WEV5T1
     I              AMV6T1                      WEV6T1
     I              AMV7T1                      WEV7T1
     I              AMV8T1                      WEV8T1
     I              AMV9T1                      WEV9T1
     I              AMWAT1                      WEWAT1
     I              AMWBT1                      WEWBT1
     I              AMWCT1                      WEWCT1
     I              AMWDT1                      WEWDT1
     I              AMQJNY                      WEQJNY
     I              AMQKNY                      WEQKNY
     I              AMQLNY                      WEQLNY
     I              AMP8NY                      WEP8NY
     I              AMP9NY                      WEP9NY
     I              AMQANY                      WEQANY
     I              AMQCNY                      WEQCNY
     I              AMQDNY                      WEQDNY
     I              AMQENY                      WEQENY
     I              AMQFNY                      WEQFNY
     I              AMQGNY                      WEQGNY
     I              AMQHNY                      WEQHNY
     I              AMQINY                      WEQINY
     I              AMQMNY                      WEQMNY
     I              AMMYU1                      WEMYU1
     I              AMJXSC                      WEJXSC
     I              AMJYSC                      WEJYSC
     I              AMJZSC                      WEJZSC
     I              AMJ0SC                      WEJ0SC
     I              AMMZU1                      WEMZU1
     I              AMM0U1                      WEM0U1
     I              AMM1U1                      WEM1U1
     I              AMM2U1                      WEM2U1
     I              AMM3U1                      WEM3U1
     I              AMW5DT                      WEW5DT
     I              AMW6DT                      WEW6DT
     I              AMUVST                      WEUVST
     I              AMUWST                      WEUWST
     I              AMUXST                      WEUXST
     I              AMVSST                      WEVSST
     I              AMAATM                      WEAATM
     I              AMAYNA                      WEAYNA
     I              AMA0NA                      WEA0NA
     I              AMAXDT                      WEAXDT
      *
     I@B8REVF
      * Trade Partner Control     Retrieval index
      * Renamed input format fields
     I              B8J5NX                      WFJ5NX
     I              B8CBSC                      WFCBSC
     I              B8CCSC                      WFCCSC
     I              B8CDSC                      WFCDSC
     I              B8CESC                      WFCESC
     I              B8CFSC                      WFCFSC
     I              B8CGSC                      WFCGSC
     I              B8CHSC                      WFCHSC
     I              B8CISC                      WFCISC
     I              B8CJSC                      WFCJSC
     I              B8CKSC                      WFCKSC
     I              B8CLSC                      WFCLSC
     I              B8CMSC                      WFCMSC
     I              B8CNSC                      WFCNSC
     I              B8EHU1                      WFEHU1
     I              B8EIU1                      WFEIU1
     I              B8EJU1                      WFEJU1
     I              B8EKU1                      WFEKU1
     I              B8V1DT                      WFV1DT
     I              B8V2DT                      WFV2DT
     I              B8VSST                      WFVSST
     I              B8MJDT                      WFMJDT
     I              B8BETM                      WFBETM
     I              B8CCVN                      WFCCVN
     I              B8CDVN                      WFCDVN
     I              B8MKDT                      WFMKDT
     I              B8BFTM                      WFBFTM
     I              B8CEVN                      WFCEVN
     I              B8CFVN                      WFCFVN
      *
     I@P004SK
      * EDI Purchase Order Header Trade Partner/PO Number
      * Renamed input format fields
     I              BQTSCN                      WGTSCN
     I              BQL3SX                      WGL3SX
     I              BQOSDT                      WGOSDT
     I              BQPONO                      WGPONO
     I              BQDKAA                      WGDKAA
     I              BQNAME                      WGNAME
     I              BQCQLF                      WGCQLF
     I              BQCNUM                      WGCNUM
     I              BQINRF                      WGINRF
     I              BQGNTX                      WGGNTX
     I              BQHUAA                      WGHUAA
     I              BQHUVL                      WGHUVL
     I              BQHVAA                      WGHVAA
     I              BQX8T1                      WGX8T1
     I              BQJ2AA                      WGJ2AA
     I              BQT6DT                      WGT6DT
     I              BQQLFX                      WGQLFX
     I              BQDELV                      WGDELV
     I              BQSHMT                      WGSHMT
     I              BQMTTY                      WGMTTY
     I              BQPLEX                      WGPLEX
     I              BQLDOP                      WGLDOP
     I              BQROUT                      WGROUT
     I              BQFOBP                      WGFOBP
     I              BQD3VL                      WGD3VL
     I              BQUNIT                      WGUNIT
     I              BQD4VL                      WGD4VL
     I              BQAMTX                      WGAMTX
     I              BQDSTS                      WGDSTS
     I              BQSRAA                      WGSRAA
     I              BQBRU1                      WGBRU1
     I              BQSSAA                      WGSSAA
     I              BQBSU1                      WGBSU1
     I              BQSTAA                      WGSTAA
     I              BQBTU1                      WGBTU1
     I              BQSUAA                      WGSUAA
     I              BQBUU1                      WGBUU1
     I              BQSVAA                      WGSVAA
     I              BQBVU1                      WGBVU1
     I              BQSWAA                      WGSWAA
     I              BQBWU1                      WGBWU1
     I              BQSXAA                      WGSXAA
     I              BQBXU1                      WGBXU1
     I              BQYDT1                      WGYDT1
     I              BQNLST                      WGNLST
     I              BQUFDT                      WGUFDT
     I              BQOJAA                      WGOJAA
     I              BQJ5NX                      WGJ5NX
      *
     I@BYREA1
      * Item Default              Retrieval index
      * Renamed input format fields
     I              BYHGCD                      WHHGCD
     I              BYAVNA                      WHAVNA
     I              BYAWNA                      WHAWNA
     I              BYL7NA                      WHL7NA
     I              BYL8NA                      WHL8NA
     I              BYL6NA                      WHL6NA
     I              BYMFNA                      WHMFNA
     I              BYHHCD                      WHHHCD
     I              BYAWPC                      WHAWPC
     I              BYLXST                      WHLXST
     I              BYLGCD                      WHLGCD
     I              BYAXPC                      WHAXPC
     I              BYLYST                      WHLYST
     I              BYLHCD                      WHLHCD
     I              BYLICD                      WHLICD
     I              BYAIWG                      WHAIWG
     I              BYHICD                      WHHICD
     I              BYRBCD                      WHRBCD
     I              BYFZST                      WHFZST
     I              BYAVST                      WHAVST
     I              BYCZWG                      WHCZWG
     I              BYC0WG                      WHC0WG
     I              BYURTN                      WHURTN
     I              BYACC8                      WHACC8
     I              BYRINB                      WHRINB
     I              BYRHNB                      WHRHNB
     I              BYRGNB                      WHRGNB
     I              BYLNCD                      WHLNCD
     I              BYTFNB                      WHTFNB
     I              BYN0CD                      WHN0CD
     I              BYX4ST                      WHX4ST
     I              BYCHTM                      WHCHTM
     I              BYQZCD                      WHQZCD
     I              BYXWST                      WHXWST
     I              BYXXST                      WHXXST
     I              BYVMST                      WHVMST
     I              BYSWGH                      WHSWGH
     I              BYPPHE                      WHPPHE
     I              BYLRCD                      WHLRCD
     I              BYSFNB                      WHSFNB
     I              BYA3WG                      WHA3WG
     I              BYSJNB                      WHSJNB
     I              BYLLCD                      WHLLCD
     I              BYLMCD                      WHLMCD
     I              BYP3ST                      WHP3ST
     I              BYSKNB                      WHSKNB
     I              BYSLNB                      WHSLNB
     I              BYSMNB                      WHSMNB
     I              BYP4ST                      WHP4ST
     I              BYCFNB                      WHCFNB
     I              BYCGNB                      WHCGNB
     I              BYILNB                      WHILNB
     I              BYCHNB                      WHCHNB
     I              BYCINB                      WHCINB
     I              BYCJNB                      WHCJNB
     I              BYCMNB                      WHCMNB
     I              BYCNNB                      WHCNNB
     I              BYCRNB                      WHCRNB
     I              BYCSNB                      WHCSNB
     I              BYCVNB                      WHCVNB
     I              BYCWNB                      WHCWNB
     I              BYCXNB                      WHCXNB
     I              BYCZNB                      WHCZNB
     I              BYC0NB                      WHC0NB
     I              BYN1CD                      WHN1CD
     I              BYB4NB                      WHB4NB
     I              BYX5ST                      WHX5ST
     I              BYX6ST                      WHX6ST
     I              BYX7ST                      WHX7ST
     I              BYTMVA                      WHTMVA
     I              BYTNVA                      WHTNVA
     I              BYBLPR                      WHBLPR
     I              BYBMPR                      WHBMPR
     I              BYU9ST                      WHU9ST
     I              BYCMCO                      WHCMCO
     I              BYQ1CD                      WHQ1CD
     I              BYAIC3                      WHAIC3
     I              BYQ8CD                      WHQ8CD
     I              BYR3CD                      WHR3CD
     I              BYSDCD                      WHSDCD
     I              BYICN1                      WHICN1
     I              BYSVCD                      WHSVCD
     I              BYICN2                      WHICN2
     I              BYSWCD                      WHSWCD
     I              BYV2NB                      WHV2NB
     I              BYSXCD                      WHSXCD
     I              BYITCN                      WHITCN
     I              BYSYCD                      WHSYCD
     I              BYITC5                      WHITC5
     I              BYSZCD                      WHSZCD
     I              BYICN6                      WHICN6
     I              BYS0CD                      WHS0CD
     I              BYICN7                      WHICN7
     I              BYS1CD                      WHS1CD
     I              BYICN8                      WHICN8
     I              BYS2CD                      WHS2CD
     I              BYICN9                      WHICN9
     I              BYS3CD                      WHS3CD
     I              BYICN0                      WHICN0
     I              BYS4CD                      WHS4CD
     I              BYB5NB                      WHB5NB
     I              BYXRCD                      WHXRCD
     I              BYPCCT                      WHPCCT
     I              BYBDNB                      WHBDNB
     I              BYBJNB                      WHBJNB
     I              BYSUST                      WHSUST
     I              BYSVST                      WHSVST
     I              BYSYST                      WHSYST
     I              BYSZST                      WHSZST
     I              BYS1ST                      WHS1ST
     I              BYXTCD                      WHXTCD
     I              BYXUCD                      WHXUCD
     I              BYF5WG                      WHF5WG
     I              BYF6WG                      WHF6WG
     I              BYF7WG                      WHF7WG
     I              BYBLNB                      WHBLNB
     I              BYBNNB                      WHBNNB
     I              BYS2ST                      WHS2ST
     I              BYS4ST                      WHS4ST
     I              BYS5ST                      WHS5ST
     I              BYS6ST                      WHS6ST
     I              BYS8ST                      WHS8ST
     I              BYS9ST                      WHS9ST
     I              BYTCST                      WHTCST
     I              BYTDST                      WHTDST
     I              BYUVST                      WHUVST
     I              BYUWST                      WHUWST
     I              BYUXST                      WHUXST
     I              BYVSST                      WHVSST
     I              BYAHTM                      WHAHTM
     I              BYBEVN                      WHBEVN
     I              BYBFVN                      WHBFVN
     I              BYEKDT                      WHEKDT
      *
     I@BNCPFQ
      * EDI Adv Ship Ntc Order V2 Update index
      * Renamed input format fields
     I              BNH9NY                      WIH9NY
     I              BNQ2NY                      WIQ2NY
     I              BNHPAA                      WIHPAA
     I              BNTFNA                      WITFNA
     I              BNEUNZ                      WIEUNZ
     I              BNYTAA                      WIYTAA
     I              BNNVU1                      WINVU1
     I              BNYIAA                      WIYIAA
     I              BND9NZ                      WID9NZ
     I              BNFHNZ                      WIFHNZ
     I              BNFPNZ                      WIFPNZ
     I              BNFINZ                      WIFINZ
     I              BNENNZ                      WIENNZ
     I              BNEMNZ                      WIEMNZ
     I              BNEFNZ                      WIEFNZ
     I              BNEGNZ                      WIEGNZ
     I              BNXBDT                      WIXBDT
     I              BNEHNZ                      WIEHNZ
     I              BNP8U1                      WIP8U1
     I              BNFJNZ                      WIFJNZ
      *
     I@FNCPF8
      * Manifest Detail           Co/Ord/Pal/Itm/Sq/SSq/CS
      * Renamed input format fields
     I              FNAIC3                      WJAIC3
     I              FNC4NB                      WJC4NB
     I              FNDPNB                      WJDPNB
     I              FNUENB                      WJUENB
     I              FNRZNB                      WJRZNB
     I              FNFOQT                      WJFOQT
     I              FNR0NB                      WJR0NB
     I              FNPMST                      WJPMST
     I              FNK7DT                      WJK7DT
     I              FNPFNX                      WJPFNX
     I              FNHGCD                      WJHGCD
     I              FNAJCD                      WJAJCD
     I              FNELDT                      WJELDT
     I              FNN5WG                      WJN5WG
     I              FNRZNA                      WJRZNA
     I              FNH5NY                      WJH5NY
     I              FNH6NY                      WJH6NY
     I              FNH7NY                      WJH7NY
     I              FNGBTX                      WJGBTX
     I              FNN6WG                      WJN6WG
     I              FNN7WG                      WJN7WG
     I              FNGCTX                      WJGCTX
     I              FNGDTX                      WJGDTX
     I              FNRBDT                      WJRBDT
     I              FNITNY                      WJITNY
     I              FNIVNY                      WJIVNY
     I              FNIUNY                      WJIUNY
     I              FNIWNY                      WJIWNY
     I              FNIXNY                      WJIXNY
     I              FNIYNY                      WJIYNY
     I              FNUVST                      WJUVST
     I              FNUWST                      WJUWST
     I              FNUXST                      WJUXST
     I              FNVSST                      WJVSST
     I              FNAATM                      WJAATM
     I              FNAYNA                      WJAYNA
     I              FNA0NA                      WJA0NA
     I              FNAXDT                      WJAXDT
     I              FNLPNZ                      WJLPNZ
      *
     I@BGWKL1
      * Order Detail              Retrieval index
      * Renamed input format fields
     I              OMAIC3                      WKAIC3
     I              OMC4NB                      WKC4NB
     I              OMDPNB                      WKDPNB
     I              OMUENB                      WKUENB
     I              OMHGCD                      WKHGCD
     I              OMAJCD                      WKAJCD
     I              OMBKC7                      WKBKC7
     I              OMCFC7                      WKCFC7
     I              OMGMST                      WKGMST
     I              OMGNST                      WKGNST
     I              OMMAVA                      WKMAVA
     I              OMKDVA                      WKKDVA
     I              OML8VA                      WKL8VA
     I              OML9VA                      WKL9VA
     I              OMGTST                      WKGTST
     I              OMGVST                      WKGVST
     I              OMGUST                      WKGUST
     I              OMQFST                      WKQFST
     I              OMAYVA                      WKAYVA
     I              OMEXDT                      WKEXDT
     I              OMLQCD                      WKLQCD
     I              OMRDCD                      WKRDCD
     I              OMQ7CD                      WKQ7CD
     I              OMBZPR                      WKBZPR
     I              OML6NB                      WKL6NB
     I              OMU1ST                      WKU1ST
     I              OMGIDT                      WKGIDT
     I              OMCRCD                      WKCRCD
     I              OMAGCD                      WKAGCD
     I              OMRZST                      WKRZST
     I              OMR0ST                      WKR0ST
     I              OMR1ST                      WKR1ST
     I              OMG7NA                      WKG7NA
     I              OMG8NA                      WKG8NA
     I              OMRPCD                      WKRPCD
     I              OMVEST                      WKVEST
     I              OMVGST                      WKVGST
     I              OMAVST                      WKAVST
     I              OMU0ST                      WKU0ST
     I              OMRFCD                      WKRFCD
     I              OMFZST                      WKFZST
     I              OMR1NB                      WKR1NB
     I              OMAVQT                      WKAVQT
     I              OMD0WG                      WKD0WG
     I              OMCCQT                      WKCCQT
     I              OMAUWG                      WKAUWG
     I              OMCBQT                      WKCBQT
     I              OMATWG                      WKATWG
     I              OMAQCS                      WKAQCS
     I              OMAGCS                      WKAGCS
     I              OMAKPR                      WKAKPR
     I              OMALPR                      WKALPR
     I              OMAUPR                      WKAUPR
     I              OMAVWG                      WKAVWG
     I              OMA4WG                      WKA4WG
     I              OMA5DT                      WKA5DT
     I              OMAODT                      WKAODT
     I              OMGNDT                      WKGNDT
     I              OMAMST                      WKAMST
     I              OMANST                      WKANST
     I              OMVAST                      WKVAST
     I              OMRGNB                      WKRGNB
     I              OMRHNB                      WKRHNB
     I              OMRINB                      WKRINB
     I              OMRBCD                      WKRBCD
     I              OMHICD                      WKHICD
     I              OMRNCD                      WKRNCD
     I              OMROCD                      WKROCD
     I              OMCXDT                      WKCXDT
     I              OMAJVN                      WKAJVN
     I              OMKXCD                      WKKXCD
     I              OMJPCD                      WKJPCD
     I              OMCQCD                      WKCQCD
     I              OMR4CD                      WKR4CD
     I              OMZ1ST                      WKZ1ST
     I              OMZ3ST                      WKZ3ST
     I              OMZ4ST                      WKZ4ST
     I              OMDUPR                      WKDUPR
     I              OMB6VL                      WKB6VL
     I              OMA1AA                      WKA1AA
     I              OMFZSX                      WKFZSX
     I              OMF0SX                      WKF0SX
     I              OMF1SX                      WKF1SX
     I              OMF2SX                      WKF2SX
     I              OMF3SX                      WKF3SX
     I              OMF4SX                      WKF4SX
     I              OMF5SX                      WKF5SX
     I              OMF6SX                      WKF6SX
     I              OMF7SX                      WKF7SX
     I              OMNTDT                      WKNTDT
     I              OMNUDT                      WKNUDT
     I              OMNVDT                      WKNVDT
     I              OMNWDT                      WKNWDT
     I              OMNXDT                      WKNXDT
     I              OMBUTM                      WKBUTM
     I              OMBVTM                      WKBVTM
     I              OMBWTM                      WKBWTM
     I              OMBXTM                      WKBXTM
     I              OMBYTM                      WKBYTM
     I              OMH5NX                      WKH5NX
     I              OMH6NX                      WKH6NX
     I              OMH7NX                      WKH7NX
     I              OMH8NX                      WKH8NX
     I              OMH9NX                      WKH9NX
     I              OMDVPR                      WKDVPR
     I              OMDWPR                      WKDWPR
     I              OMDXPR                      WKDXPR
     I              OMDYPR                      WKDYPR
     I              OMDZPR                      WKDZPR
     I              OMGSPR                      WKGSPR
     I              OMGTPR                      WKGTPR
     I              OMGUPR                      WKGUPR
     I              OMHOST                      WKHOST
     I              OMHPST                      WKHPST
     I              OMIOST                      WKIOST
     I              OMPEWG                      WKPEWG
     I              OMRINY                      WKRINY
     I              OMTIDT                      WKTIDT
     I              OMTJDT                      WKTJDT
     I              OMH2ST                      WKH2ST
     I              OMH0ST                      WKH0ST
     I              OMH1ST                      WKH1ST
     I              OMTKDT                      WKTKDT
     I              OMTLDT                      WKTLDT
     I              OMTMDT                      WKTMDT
     I              OMUVST                      WKUVST
     I              OMUWST                      WKUWST
     I              OMUXST                      WKUXST
     I              OMAATM                      WKAATM
     I              OMAYNA                      WKAYNA
     I              OMA0NA                      WKA0NA
     I              OMAXDT                      WKAXDT
      *
     I@BTRETK
      * Item Default Extension    Retrieval index
      * Renamed input format fields
     I              BTHGCD                      WLHGCD
     I              BTCUU1                      WLCUU1
     I              BTALSC                      WLALSC
     I              BTAMSC                      WLAMSC
     I              BTANSC                      WLANSC
     I              BTAOSC                      WLAOSC
     I              BTAPSC                      WLAPSC
     I              BTAQSC                      WLAQSC
     I              BTARSC                      WLARSC
     I              BTASSC                      WLASSC
     I              BTCVU1                      WLCVU1
     I              BTKXU1                      WLKXU1
     I              BTKYU1                      WLKYU1
     I              BTKZU1                      WLKZU1
     I              BTDXNZ                      WLDXNZ
     I              BTDYNZ                      WLDYNZ
     I              BTVSST                      WLVSST
     I              BTMJDT                      WLMJDT
     I              BTBETM                      WLBETM
     I              BTCCVN                      WLCCVN
     I              BTCDVN                      WLCDVN
     I              BTMKDT                      WLMKDT
     I              BTBFTM                      WLBFTM
     I              BTCEVN                      WLCEVN
     I              BTCFVN                      WLCFVN
      *
     I@FNCPXH
      * Manifest Detail           Co/Ord/Item/Prod Date
      * Renamed input format fields
     I              FNAIC3                      WMAIC3
     I              FNC4NB                      WMC4NB
     I              FNDPNB                      WMDPNB
     I              FNUENB                      WMUENB
     I              FNRZNB                      WMRZNB
     I              FNFOQT                      WMFOQT
     I              FNR0NB                      WMR0NB
     I              FNPMST                      WMPMST
     I              FNK7DT                      WMK7DT
     I              FNPFNX                      WMPFNX
     I              FNHGCD                      WMHGCD
     I              FNAJCD                      WMAJCD
     I              FNELDT                      WMELDT
     I              FNN5WG                      WMN5WG
     I              FNRZNA                      WMRZNA
     I              FNH5NY                      WMH5NY
     I              FNH6NY                      WMH6NY
     I              FNH7NY                      WMH7NY
     I              FNGBTX                      WMGBTX
     I              FNN6WG                      WMN6WG
     I              FNN7WG                      WMN7WG
     I              FNGCTX                      WMGCTX
     I              FNGDTX                      WMGDTX
     I              FNRBDT                      WMRBDT
     I              FNITNY                      WMITNY
     I              FNIVNY                      WMIVNY
     I              FNIUNY                      WMIUNY
     I              FNIWNY                      WMIWNY
     I              FNIXNY                      WMIXNY
     I              FNIYNY                      WMIYNY
     I              FNUVST                      WMUVST
     I              FNUWST                      WMUWST
     I              FNUXST                      WMUXST
     I              FNVSST                      WMVSST
     I              FNAATM                      WMAATM
     I              FNAYNA                      WMAYNA
     I              FNA0NA                      WMA0NA
     I              FNAXDT                      WMAXDT
     I              FNLPNZ                      WMLPNZ
      *
     I@BQREF3
      * Customer Item Ref for EDI Retrieval index
      * Renamed input format fields
     I              BQJ5NX                      WOJ5NX
     I              BQHGCD                      WOHGCD
     I              BQLDSX                      WOLDSX
     I              BQCPAA                      WOCPAA
     I              BQCOAA                      WOCOAA
     I              BQVLNA                      WOVLNA
     I              BQPTNA                      WOPTNA
     I              BQPUNA                      WOPUNA
     I              BQLBSX                      WOLBSX
     I              BQLCSX                      WOLCSX
     I              BQLESX                      WOLESX
     I              BQLFSX                      WOLFSX
     I              BQVSST                      WOVSST
     I              BQMJDT                      WOMJDT
     I              BQBETM                      WOBETM
     I              BQCCVN                      WOCCVN
     I              BQCDVN                      WOCDVN
     I              BQMKDT                      WOMKDT
     I              BQBFTM                      WOBFTM
     I              BQCEVN                      WOCEVN
     I              BQCFVN                      WOCFVN
      *
     I@BIREKY
      * Customer Item Reference   Retrieval index
      * Renamed input format fields
     I              BIBKC7                      WRBKC7
     I              BIHGCD                      WRHGCD
     I              BICOAA                      WRCOAA
     I              BICPAA                      WRCPAA
     I              BIPSNA                      WRPSNA
     I              BIPTNA                      WRPTNA
     I              BIPUNA                      WRPUNA
     I              BILBSX                      WRLBSX
     I              BILCSX                      WRLCSX
     I              BILDSX                      WRLDSX
     I              BILESX                      WRLESX
     I              BILFSX                      WRLFSX
     I              BIVSST                      WRVSST
     I              BIMJDT                      WRMJDT
     I              BIBETM                      WRBETM
     I              BICCVN                      WRCCVN
     I              BICDVN                      WRCDVN
     I              BIMKDT                      WRMKDT
     I              BIBFTM                      WRBFTM
     I              BICEVN                      WRCEVN
     I              BICFVN                      WRCFVN
      *
     I@BRREGE
      * Item Shelf Life Upload    Item/ID
      * Renamed input format fields
     I              BREWNZ                      WSEWNZ
     I              BRHGCD                      WSHGCD
     I              BRAVNA                      WSAVNA
     I              BRNZU1                      WSNZU1
     I              BRN0U1                      WSN0U1
     I              BRN1U1                      WSN1U1
     I              BRN2U1                      WSN2U1
     I              BREXNZ                      WSEXNZ
     I              BREYNZ                      WSEYNZ
     I              BREZNZ                      WSEZNZ
     I              BRE0NZ                      WSE0NZ
     I              BRE1NZ                      WSE1NZ
     I              BRNVVL                      WSNVVL
     I              BRN3U1                      WSN3U1
     I              BRE2NZ                      WSE2NZ
     I              BRN4U1                      WSN4U1
     I              BRN5U1                      WSN5U1
     I              BRN6U1                      WSN6U1
     I              BRN7U1                      WSN7U1
     I              BRN8U1                      WSN8U1
     I              BRN9U1                      WSN9U1
     I              BROAU1                      WSOAU1
     I              BROBU1                      WSOBU1
     I              BROCU1                      WSOCU1
     I              BRODU1                      WSODU1
     I              BROEU1                      WSOEU1
      *
     I@BMCPFN
      * EDI Adv Ship Ntc Dtl V2   Update index
      * Renamed input format fields
     I              BMH9NY                      WTH9NY
     I              BMQ2NY                      WTQ2NY
     I              BMTFNA                      WTTFNA
     I              BMC4NB                      WTC4NB
     I              BMJJU1                      WTJJU1
     I              BMDPNB                      WTDPNB
     I              BMQ7NY                      WTQ7NY
     I              BMZEAA                      WTZEAA
     I              BMETNZ                      WTETNZ
     I              BMQ8NY                      WTQ8NY
     I              BMTCNY                      WTTCNY
     I              BMLET1                      WTLET1
     I              BMNEU1                      WTNEU1
     I              BMNFU1                      WTNFU1
     I              BMNGU1                      WTNGU1
     I              BMNHU1                      WTNHU1
     I              BMNWU1                      WTNWU1
     I              BMQBU1                      WTQBU1
     I              BMHVU1                      WTHVU1
     I              BMNCU1                      WTNCU1
     I              BMAGAB                      WTAGAB
     I              BMQCU1                      WTQCU1
     I              BMNDU1                      WTNDU1
     I              BMEINZ                      WTEINZ
     I              BMYWAA                      WTYWAA
     I              BMHZPR                      WTHZPR
     I              BMYZAA                      WTYZAA
     I              BMH0PR                      WTH0PR
     I              BMY0AA                      WTY0AA
     I              BMNIU1                      WTNIU1
     I              BMNJU1                      WTNJU1
     I              BMNKU1                      WTNKU1
     I              BMTDNY                      WTTDNY
     I              BMNLU1                      WTNLU1
     I              BMNMU1                      WTNMU1
     I              BMNNU1                      WTNNU1
     I              BMNPU1                      WTNPU1
     I              BMEJNZ                      WTEJNZ
     I              BMEKNZ                      WTEKNZ
     I              BMELNZ                      WTELNZ
      *
     I@ABREAK
      * Company Name and Address  Retrieval index       V
      * Renamed input format fields
     I              ABAIC3                      WVAIC3
     I              ABADTX                      WVADTX
     I              ABACNA                      WVACNA
     I              ABADNA                      WVADNA
     I              ABAENA                      WVAENA
     I              ABAJNA                      WVAJNA
     I              ABBTTX                      WVBTTX
     I              ABBVTX                      WVBVTX
     I              ABBWTX                      WVBWTX
     I              ABA2NA                      WVA2NA
     I              ABABTX                      WVABTX
     I              ABBGCD                      WVBGCD
     I              ABKXCD                      WVKXCD
     I              ABUVST                      WVUVST
     I              ABUWST                      WVUWST
     I              ABUXST                      WVUXST
     I              ABVSST                      WVVSST
     I              ABAATM                      WVAATM
     I              ABAYNA                      WVAYNA
     I              ABA0NA                      WVA0NA
     I              ABAXDT                      WVAXDT
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                      WWAIC3
     I              BZHGCD                      WWHGCD
     I              BZAVNA                      WWAVNA
     I              BZAWNA                      WWAWNA
     I              BZL7NA                      WWL7NA
     I              BZL8NA                      WWL8NA
     I              BZL6NA                      WWL6NA
     I              BZMFNA                      WWMFNA
     I              BZADCD                      WWADCD
     I              BZAWPC                      WWAWPC
     I              BZLXST                      WWLXST
     I              BZAECD                      WWAECD
     I              BZAXPC                      WWAXPC
     I              BZLYST                      WWLYST
     I              BZAFCD                      WWAFCD
     I              BZAICD                      WWAICD
     I              BZAIWG                      WWAIWG
     I              BZHICD                      WWHICD
     I              BZRBCD                      WWRBCD
     I              BZFZST                      WWFZST
     I              BZAVST                      WWAVST
     I              BZCZWG                      WWCZWG
     I              BZC0WG                      WWC0WG
     I              BZURTN                      WWURTN
     I              BZAJC8                      WWAJC8
     I              BZRINB                      WWRINB
     I              BZRHNB                      WWRHNB
     I              BZRGNB                      WWRGNB
     I              BZLNCD                      WWLNCD
     I              BZTFNB                      WWTFNB
     I              BZN0CD                      WWN0CD
     I              BZX4ST                      WWX4ST
     I              BZTMVA                      WWTMVA
     I              BZTNVA                      WWTNVA
     I              BZBLPR                      WWBLPR
     I              BZBMPR                      WWBMPR
     I              BZLRCD                      WWLRCD
     I              BZU9ST                      WWU9ST
     I              BZCMCO                      WWCMCO
     I              BZQ1CD                      WWQ1CD
     I              BZQ8CD                      WWQ8CD
     I              BZCHTM                      WWCHTM
     I              BZQZCD                      WWQZCD
     I              BZXWST                      WWXWST
     I              BZXXST                      WWXXST
     I              BZVMST                      WWVMST
     I              BZSWGH                      WWSWGH
     I              BZPPHE                      WWPPHE
     I              BZR3CD                      WWR3CD
     I              BZSDCD                      WWSDCD
     I              BZICN1                      WWICN1
     I              BZSVCD                      WWSVCD
     I              BZICN2                      WWICN2
     I              BZSWCD                      WWSWCD
     I              BZV2NB                      WWV2NB
     I              BZSXCD                      WWSXCD
     I              BZITCN                      WWITCN
     I              BZSYCD                      WWSYCD
     I              BZITC5                      WWITC5
     I              BZSZCD                      WWSZCD
     I              BZICN6                      WWICN6
     I              BZS0CD                      WWS0CD
     I              BZICN7                      WWICN7
     I              BZS1CD                      WWS1CD
     I              BZICN8                      WWICN8
     I              BZS2CD                      WWS2CD
     I              BZICN9                      WWICN9
     I              BZS3CD                      WWS3CD
     I              BZICN0                      WWICN0
     I              BZS4CD                      WWS4CD
     I              BZSFNB                      WWSFNB
     I              BZA3WG                      WWA3WG
     I              BZSJNB                      WWSJNB
     I              BZLLCD                      WWLLCD
     I              BZLMCD                      WWLMCD
     I              BZP3ST                      WWP3ST
     I              BZSKNB                      WWSKNB
     I              BZSLNB                      WWSLNB
     I              BZSMNB                      WWSMNB
     I              BZP4ST                      WWP4ST
     I              BZCFNB                      WWCFNB
     I              BZCGNB                      WWCGNB
     I              BZILNB                      WWILNB
     I              BZCHNB                      WWCHNB
     I              BZCINB                      WWCINB
     I              BZCJNB                      WWCJNB
     I              BZCMNB                      WWCMNB
     I              BZCNNB                      WWCNNB
     I              BZCRNB                      WWCRNB
     I              BZCSNB                      WWCSNB
     I              BZCVNB                      WWCVNB
     I              BZCWNB                      WWCWNB
     I              BZCXNB                      WWCXNB
     I              BZCZNB                      WWCZNB
     I              BZC0NB                      WWC0NB
     I              BZN1CD                      WWN1CD
     I              BZB4NB                      WWB4NB
     I              BZB5NB                      WWB5NB
     I              BZX5ST                      WWX5ST
     I              BZX6ST                      WWX6ST
     I              BZX7ST                      WWX7ST
     I              BZPCCT                      WWPCCT
     I              BZBDNB                      WWBDNB
     I              BZBJNB                      WWBJNB
     I              BZSUST                      WWSUST
     I              BZSVST                      WWSVST
     I              BZSYST                      WWSYST
     I              BZSZST                      WWSZST
     I              BZS1ST                      WWS1ST
     I              BZXRCD                      WWXRCD
     I              BZXTCD                      WWXTCD
     I              BZXUCD                      WWXUCD
     I              BZF5WG                      WWF5WG
     I              BZF6WG                      WWF6WG
     I              BZF7WG                      WWF7WG
     I              BZBLNB                      WWBLNB
     I              BZBNNB                      WWBNNB
     I              BZS2ST                      WWS2ST
     I              BZS4ST                      WWS4ST
     I              BZS5ST                      WWS5ST
     I              BZS6ST                      WWS6ST
     I              BZS8ST                      WWS8ST
     I              BZS9ST                      WWS9ST
     I              BZTCST                      WWTCST
     I              BZTDST                      WWTDST
     I              BZUVST                      WWUVST
     I              BZUWST                      WWUWST
     I              BZUXST                      WWUXST
     I              BZVSST                      WWVSST
     I              BZAATM                      WWAATM
     I              BZAYNA                      WWAYNA
     I              BZA0NA                      WWA0NA
     I              BZAXDT                      WWAXDT
      *
     I@IORETI
      * Item Bill Of Material     Retrieval index
      * Renamed input format fields
     I              IOAIC3                      WXAIC3
     I              IOHGCD                      WXHGCD
     I              IOC9NB                      WXC9NB
     I              IOV2ST                      WXV2ST
     I              IOBOPR                      WXBOPR
     I              IOBPPR                      WXBPPR
     I              IOHGQT                      WXHGQT
     I              IOHHCD                      WXHHCD
     I              IOYAST                      WXYAST
     I              IOCNSM                      WXCNSM
     I              IOBMY1                      WXBMY1
     I              IOBMY2                      WXBMY2
     I              IOIXQT                      WXIXQT
     I              IOIYQT                      WXIYQT
     I              IORSST                      WXRSST
     I              IORTST                      WXRTST
     I              IOUVST                      WXUVST
     I              IOUWST                      WXUWST
     I              IOUXST                      WXUXST
     I              IOVSST                      WXVSST
     I              IOAATM                      WXAATM
     I              IOAYNA                      WXAYNA
     I              IOA0NA                      WXA0NA
     I              IOAXDT                      WXAXDT
      *
     I@IOREIB
      * Item Bill Of Material     Co/Item/Component,Sel "S
      * Renamed input format fields
     I              IOAIC3                      WYAIC3
     I              IOHGCD                      WYHGCD
     I              IOC9NB                      WYC9NB
     I              IOV2ST                      WYV2ST
     I              IOBOPR                      WYBOPR
     I              IOBPPR                      WYBPPR
     I              IOHGQT                      WYHGQT
     I              IOHHCD                      WYHHCD
     I              IOYAST                      WYYAST
     I              IOCNSM                      WYCNSM
     I              IOBMY1                      WYBMY1
     I              IOBMY2                      WYBMY2
     I              IOIXQT                      WYIXQT
     I              IOIYQT                      WYIYQT
     I              IORSST                      WYRSST
     I              IORTST                      WYRTST
     I              IOUVST                      WYUVST
     I              IOUWST                      WYUWST
     I              IOUXST                      WYUXST
     I              IOVSST                      WYVSST
     I              IOAATM                      WYAATM
     I              IOAYNA                      WYAYNA
     I              IOA0NA                      WYA0NA
     I              IOAXDT                      WYAXDT
      *
     I@BGWKFW
      * Order Detail              Co/Order#/Item/Whse Not
      * Renamed input format fields
     I              OMAIC3                      TAAIC3
     I              OMC4NB                      TAC4NB
     I              OMDPNB                      TADPNB
     I              OMUENB                      TAUENB
     I              OMHGCD                      TAHGCD
     I              OMAJCD                      TAAJCD
     I              OMBKC7                      TABKC7
     I              OMCFC7                      TACFC7
     I              OMGMST                      TAGMST
     I              OMGNST                      TAGNST
     I              OMMAVA                      TAMAVA
     I              OMKDVA                      TAKDVA
     I              OML8VA                      TAL8VA
     I              OML9VA                      TAL9VA
     I              OMGTST                      TAGTST
     I              OMGVST                      TAGVST
     I              OMGUST                      TAGUST
     I              OMQFST                      TAQFST
     I              OMAYVA                      TAAYVA
     I              OMEXDT                      TAEXDT
     I              OMLQCD                      TALQCD
     I              OMRDCD                      TARDCD
     I              OMQ7CD                      TAQ7CD
     I              OMBZPR                      TABZPR
     I              OML6NB                      TAL6NB
     I              OMU1ST                      TAU1ST
     I              OMGIDT                      TAGIDT
     I              OMCRCD                      TACRCD
     I              OMAGCD                      TAAGCD
     I              OMRZST                      TARZST
     I              OMR0ST                      TAR0ST
     I              OMR1ST                      TAR1ST
     I              OMG7NA                      TAG7NA
     I              OMG8NA                      TAG8NA
     I              OMRPCD                      TARPCD
     I              OMVEST                      TAVEST
     I              OMVGST                      TAVGST
     I              OMAVST                      TAAVST
     I              OMU0ST                      TAU0ST
     I              OMRFCD                      TARFCD
     I              OMFZST                      TAFZST
     I              OMR1NB                      TAR1NB
     I              OMAVQT                      TAAVQT
     I              OMD0WG                      TAD0WG
     I              OMCCQT                      TACCQT
     I              OMAUWG                      TAAUWG
     I              OMCBQT                      TACBQT
     I              OMATWG                      TAATWG
     I              OMAQCS                      TAAQCS
     I              OMAGCS                      TAAGCS
     I              OMAKPR                      TAAKPR
     I              OMALPR                      TAALPR
     I              OMAUPR                      TAAUPR
     I              OMAVWG                      TAAVWG
     I              OMA4WG                      TAA4WG
     I              OMA5DT                      TAA5DT
     I              OMAODT                      TAAODT
     I              OMGNDT                      TAGNDT
     I              OMAMST                      TAAMST
     I              OMANST                      TAANST
     I              OMVAST                      TAVAST
     I              OMRGNB                      TARGNB
     I              OMRHNB                      TARHNB
     I              OMRINB                      TARINB
     I              OMRBCD                      TARBCD
     I              OMHICD                      TAHICD
     I              OMRNCD                      TARNCD
     I              OMROCD                      TAROCD
     I              OMCXDT                      TACXDT
     I              OMAJVN                      TAAJVN
     I              OMKXCD                      TAKXCD
     I              OMJPCD                      TAJPCD
     I              OMCQCD                      TACQCD
     I              OMR4CD                      TAR4CD
     I              OMZ1ST                      TAZ1ST
     I              OMZ3ST                      TAZ3ST
     I              OMZ4ST                      TAZ4ST
     I              OMDUPR                      TADUPR
     I              OMB6VL                      TAB6VL
     I              OMA1AA                      TAA1AA
     I              OMFZSX                      TAFZSX
     I              OMF0SX                      TAF0SX
     I              OMF1SX                      TAF1SX
     I              OMF2SX                      TAF2SX
     I              OMF3SX                      TAF3SX
     I              OMF4SX                      TAF4SX
     I              OMF5SX                      TAF5SX
     I              OMF6SX                      TAF6SX
     I              OMF7SX                      TAF7SX
     I              OMNTDT                      TANTDT
     I              OMNUDT                      TANUDT
     I              OMNVDT                      TANVDT
     I              OMNWDT                      TANWDT
     I              OMNXDT                      TANXDT
     I              OMBUTM                      TABUTM
     I              OMBVTM                      TABVTM
     I              OMBWTM                      TABWTM
     I              OMBXTM                      TABXTM
     I              OMBYTM                      TABYTM
     I              OMH5NX                      TAH5NX
     I              OMH6NX                      TAH6NX
     I              OMH7NX                      TAH7NX
     I              OMH8NX                      TAH8NX
     I              OMH9NX                      TAH9NX
     I              OMDVPR                      TADVPR
     I              OMDWPR                      TADWPR
     I              OMDXPR                      TADXPR
     I              OMDYPR                      TADYPR
     I              OMDZPR                      TADZPR
     I              OMGSPR                      TAGSPR
     I              OMGTPR                      TAGTPR
     I              OMGUPR                      TAGUPR
     I              OMHOST                      TAHOST
     I              OMHPST                      TAHPST
     I              OMIOST                      TAIOST
     I              OMPEWG                      TAPEWG
     I              OMRINY                      TARINY
     I              OMTIDT                      TATIDT
     I              OMTJDT                      TATJDT
     I              OMH2ST                      TAH2ST
     I              OMH0ST                      TAH0ST
     I              OMH1ST                      TAH1ST
     I              OMTKDT                      TATKDT
     I              OMTLDT                      TATLDT
     I              OMTMDT                      TATMDT
     I              OMUVST                      TAUVST
     I              OMUWST                      TAUWST
     I              OMUXST                      TAUXST
     I              OMAATM                      TAAATM
     I              OMAYNA                      TAAYNA
     I              OMA0NA                      TAA0NA
     I              OMAXDT                      TAAXDT
      *
     I@BJCPFD
      * EDI Adv Ship Ntc Tare V2  Update index
      * Renamed input format fields
     I              BJH9NY                      TBH9NY
     I              BJQ2NY                      TBQ2NY
     I              BJTFNA                      TBTFNA
     I              BJC4NB                      TBC4NB
     I              BJJJU1                      TBJJU1
     I              BJYLAA                      TBYLAA
     I              BJYIAA                      TBYIAA
     I              BJP9U1                      TBP9U1
     I              BJYMAA                      TBYMAA
     I              BJYNAA                      TBYNAA
     I              BJD9NZ                      TBD9NZ
     I              BJEBNZ                      TBEBNZ
     I              BJEMNZ                      TBEMNZ
     I              BJENNZ                      TBENNZ
     I              BJYPAA                      TBYPAA
     I              BJFKNZ                      TBFKNZ
     I              BJQAU1                      TBQAU1
      *
     I@P140GG
      * EDI Adv Ship Ntc Dtl V2   Sgt/Order/Seq/Item/Palle
      * Renamed input format fields
     I              BMH9NY                      TCH9NY
     I              BMQ2NY                      TCQ2NY
     I              BMTFNA                      TCTFNA
     I              BMC4NB                      TCC4NB
     I              BMJJU1                      TCJJU1
     I              BMDPNB                      TCDPNB
     I              BMQ7NY                      TCQ7NY
     I              BMZEAA                      TCZEAA
     I              BMETNZ                      TCETNZ
     I              BMQ8NY                      TCQ8NY
     I              BMTCNY                      TCTCNY
     I              BMLET1                      TCLET1
     I              BMNEU1                      TCNEU1
     I              BMNFU1                      TCNFU1
     I              BMNGU1                      TCNGU1
     I              BMNHU1                      TCNHU1
     I              BMNWU1                      TCNWU1
     I              BMQBU1                      TCQBU1
     I              BMHVU1                      TCHVU1
     I              BMNCU1                      TCNCU1
     I              BMAGAB                      TCAGAB
     I              BMQCU1                      TCQCU1
     I              BMNDU1                      TCNDU1
     I              BMEINZ                      TCEINZ
     I              BMYWAA                      TCYWAA
     I              BMHZPR                      TCHZPR
     I              BMYZAA                      TCYZAA
     I              BMH0PR                      TCH0PR
     I              BMY0AA                      TCY0AA
     I              BMNIU1                      TCNIU1
     I              BMNJU1                      TCNJU1
     I              BMNKU1                      TCNKU1
     I              BMTDNY                      TCTDNY
     I              BMNLU1                      TCNLU1
     I              BMNMU1                      TCNMU1
     I              BMNNU1                      TCNNU1
     I              BMNPU1                      TCNPU1
     I              BMEJNZ                      TCEJNZ
     I              BMEKNZ                      TCEKNZ
     I              BMELNZ                      TCELNZ
      *
     I@AMREJE
      * Order Header Extension    Update index
      * Renamed input format fields
     I              AMAIC3                      TDAIC3
     I              AMC4NB                      TDC4NB
     I              AMRMNB                      TDRMNB
     I              AMRUNB                      TDRUNB
     I              AMXACD                      TDXACD
     I              AMOANA                      TDOANA
     I              AMHBAA                      TDHBAA
     I              AMJ0T1                      TDJ0T1
     I              AMGENY                      TDGENY
     I              AMJ1T1                      TDJ1T1
     I              AMHCAA                      TDHCAA
     I              AMQWDT                      TDQWDT
     I              AMQXDT                      TDQXDT
     I              AMQYDT                      TDQYDT
     I              AMHDAA                      TDHDAA
     I              AMCCTX                      TDCCTX
     I              AMJ2T1                      TDJ2T1
     I              AMRLNA                      TDRLNA
     I              AMRMNA                      TDRMNA
     I              AMGINY                      TDGINY
     I              AMGFNY                      TDGFNY
     I              AMGGNY                      TDGGNY
     I              AMGHNY                      TDGHNY
     I              AMHEVL                      TDHEVL
     I              AMHFVL                      TDHFVL
     I              AMHGVL                      TDHGVL
     I              AMQZDT                      TDQZDT
     I              AMQ0DT                      TDQ0DT
     I              AMQ1DT                      TDQ1DT
     I              AMQ2DT                      TDQ2DT
     I              AMC2TX                      TDC2TX
     I              AMC3TX                      TDC3TX
     I              AMC6TX                      TDC6TX
     I              AMCHTX                      TDCHTX
     I              AMCITX                      TDCITX
     I              AMCLTX                      TDCLTX
     I              AMB4TX                      TDB4TX
     I              AMCUTX                      TDCUTX
     I              AMCVTX                      TDCVTX
     I              AMB9TX                      TDB9TX
     I              AMJWSC                      TDJWSC
     I              AMITNY                      TDITNY
     I              AMLMT1                      TDLMT1
     I              AMLWAA                      TDLWAA
     I              AMFVST                      TDFVST
     I              AMF0ST                      TDF0ST
     I              AMF2ST                      TDF2ST
     I              AMF3ST                      TDF3ST
     I              AMJUSC                      TDJUSC
     I              AMJVSC                      TDJVSC
     I              AMV3T1                      TDV3T1
     I              AMV4T1                      TDV4T1
     I              AMV5T1                      TDV5T1
     I              AMV6T1                      TDV6T1
     I              AMV7T1                      TDV7T1
     I              AMV8T1                      TDV8T1
     I              AMV9T1                      TDV9T1
     I              AMWAT1                      TDWAT1
     I              AMWBT1                      TDWBT1
     I              AMWCT1                      TDWCT1
     I              AMWDT1                      TDWDT1
     I              AMQJNY                      TDQJNY
     I              AMQKNY                      TDQKNY
     I              AMQLNY                      TDQLNY
     I              AMP8NY                      TDP8NY
     I              AMP9NY                      TDP9NY
     I              AMQANY                      TDQANY
     I              AMQCNY                      TDQCNY
     I              AMQDNY                      TDQDNY
     I              AMQENY                      TDQENY
     I              AMQFNY                      TDQFNY
     I              AMQGNY                      TDQGNY
     I              AMQHNY                      TDQHNY
     I              AMQINY                      TDQINY
     I              AMQMNY                      TDQMNY
     I              AMMYU1                      TDMYU1
     I              AMJXSC                      TDJXSC
     I              AMJYSC                      TDJYSC
     I              AMJZSC                      TDJZSC
     I              AMJ0SC                      TDJ0SC
     I              AMMZU1                      TDMZU1
     I              AMM0U1                      TDM0U1
     I              AMM1U1                      TDM1U1
     I              AMM2U1                      TDM2U1
     I              AMM3U1                      TDM3U1
     I              AMW5DT                      TDW5DT
     I              AMW6DT                      TDW6DT
     I              AMUVST                      TDUVST
     I              AMUWST                      TDUWST
     I              AMUXST                      TDUXST
     I              AMVSST                      TDVSST
     I              AMAATM                      TDAATM
     I              AMAYNA                      TDAYNA
     I              AMA0NA                      TDA0NA
     I              AMAXDT                      TDAXDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         KEY: Order Head
     C     P2H9NY        PARM                    WP0001                         EDI SURROGATE N
     C     P2KESC        PARM                    WP0002                         Set EDI 856 Pal
     C     P2J5NX        PARM                    WP0003                         EDI Trading Par
     C     P2MEQT        PARM      P2MEQT        WP0004                         Total Quantity
     C     P2IFWG        PARM      P2IFWG        WP0005                         Total Weight Sh
     C     P2QGWG        PARM      P2QGWG        WP0006                         Total Gross Wei
     C     P2FQNZ        PARM      P2FQNZ        WP0007                         Total Pallet Co
     C     P2FRNZ        PARM      P2FRNZ        WP0008                         Total Unit Coun
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Crt EDI 856 DTL & TARE XF
      * S17064 DN 05/06/21-Added 'EDI Trading Partner No.' as Input Parm.
      * Crt EDI 856 DTL & TARE RT - Order Header TRG  * By Load/BTC/Co
     C                   EXSR      SARVGN
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Crt EDI 856 DTL & TARE RT - Order Header TRG  * By Load/BTC/Co
      *================================================================
      *
     C                   EVAL      WN0001 = ' '                                 Create EDI ASN
     C                   Z-ADD     *ZERO         WN0002                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0003                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0004                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0005                         Total Pallet Co
     C                   Z-ADD     *ZERO         WN0006                         Total Unit Coun
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   EVAL      WN0008 = ' '                                 First Time Flag
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WN0001 = ' '                                 Create EDI ASN
     C                   Z-ADD     *ZERO         P2MEQT                         Total Quantity
     C                   Z-ADD     *ZERO         P2IFWG                         Total Weight Sh
     C                   Z-ADD     *ZERO         P2QGWG                         Total Gross Wei
     C                   Z-ADD     *ZERO         P2FQNZ                         Total Pallet Co
     C                   Z-ADD     *ZERO         P2FRNZ                         Total Unit Coun
     C                   Z-ADD     *ZERO         WN0002                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0003                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0004                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0005                         Total Pallet Co
     C                   Z-ADD     *ZERO         WN0006                         Total Unit Coun
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   EVAL      WN0008 = ' '                                 First Time Flag
     C                   MOVEL     'Y'           WN0008                         First Time Flag
     C                   EVAL      YL0001 = ' '                                 USR Update Flag
      * R17040 DN 05/14/21-Get EDI Tare Level f/856 Flag.
      * CASE: *OTHERWISE
      * RTV EDI Tare Level 856RT - EDI Bill To Interchange  * 
     C                   EXSR      SBRVGN
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    WQSA01                         Load ID
     C                   KFLD                    WQSA02                         Bill to Custome
     C                   KFLD                    WQSA03                         Company Number
      * Setup key
     C                   Z-ADD     P1RMNB        WQSA01                         Load ID
     C                   Z-ADD     P1B0C7        WQSA02                         Bill to Custome
     C                   Z-ADD     P1AIC3        WQSA03                         Company Number
      * Establish starting position
     C     KRSSA         SETLL     @BFCPF7                                      *
     C     KRSSA         READE     @BFCPF7                                90    *
      * Data record not found
     C   90              MOVEL     'USR0176'     W0RTN
      * USER: Process Data record
      * INITIALIZATION:
      * CASE: *OTHERWISE
     C                   DOW       NOT *IN90
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
      * VALIDATIONS:
      * CASE: *OTHERWISE
      * Val Cust Setup 4/856 V2IF
      * VALIDATIONS: Is Bill To Customer Setup for EDI 856 ASN V2?
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
      * RTV EDI ASN 856 Info  RT - EDI Bill To Interchange  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1B0C7        WL0001                         Bill to Custome
     C                   MOVEL(P)  'ADVSN'       WL0002                         Interchange Cod
     C                   EXSR      SCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0003        YL0003                         EDI Trading Par
     C                   MOVEL(P)  WL0004        YL0004                         EDI Detailed AS
     C                   MOVEL(P)  WL0005        YL0005                         Record Status
      * Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
      * CASE: *OTHERWISE
      * Bill To Customer Must Be Active & Setup for EDI 856.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.EDI Detailed ASN 856 Rqd is Yes
      *   |- c2    : LCL.Record Status is Active
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0004 = 'Y'
     C                   IF        YL0005 = 'A'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'Y'           WN0001                         Create EDI ASN
     C                   END                                                    *FI
      * WI609_2 Check Internal or External Warehouse Qualifies for 856 AS
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * RTV 1st Whse/Country   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   IF        WN0001 = 'Y'
     C                   Z-ADD     P1AIC3        WL0006                         Company Number
     C                   Z-ADD     WAC4NB        WL0007                         Order Number
     C                   Z-ADD     1             WL0008                         Order Sequence
     C                   Z-ADD     1             WL0009                         Order Secondary
     C                   EXSR      SDRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0010        YL0006                         Warehouse Code
     C                   MOVEL(P)  WL0011        YN0001                         Country Code
      * Rtv EDI 856 ASN Info RT - Warehouse Codes  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0006        WL0012                         Warehouse Code
     C                   EXSR      SERVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0013        YL0007                         Warehouse Locat
     C                   MOVEL(P)  WL0014        YL0008                         WHS Live with C
     C                   MOVEL(P)  WL0015        YN0004                         WHS PFS Interfa
     C                   MOVEL(P)  WL0016        YL0009                         Crt 856 ASN for
     C                   MOVEL     YL0007        YN0003                         Warehouse Locat
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.Warehouse Location is Internal (Plant)
      *   |- c2    : LCL.WHS Live w/Carlisle is Yes
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0007 = 'I'
     C                   IF        YL0008 = 'Y'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'Y'           WN0001                         Create EDI ASN
     C                   MOVEL     YL0006        YN0002                         Warehouse Code
     C                   ELSE
      * CASE: *OTHERWISE
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
      * WI609_2 JM 10/08/24-Allow External 3PL Warehouses to Receive EDI
      * CASE: LCL.Warehouse Location is External
      * CASE: LCL.Crt 856 ASN for 3PL Whse is Yes
     C                   IF        YL0007 = 'E'
     C                   IF        YL0009 = 'Y'
     C                   MOVEL     'Y'           WN0001                         Create EDI ASN
     C                   MOVEL     YL0006        YN0002                         Warehouse Code
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * WI609_2 JM 10/08/24-Check EDI Manual PO.
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * Rtv EDI Manual PO Sts XF - EDI Bill To Interchange  * ADVSN
     C                   IF        WN0001 = 'Y'
     C                   CALL      'PUTBXFR'                            90      Rtv EDI Manual
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1AIC3        WQ0001                         Company Number
     C                   PARM      WAC4NB        WQ0002                         Order Number
     C                   PARM      'ADVSN'       WQ0003                         Interchange Cod
     C     YL0010        PARM      *BLANK        WQ0004                         Send EDI Docume
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUTBXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * If Send EDI Documents = N, set Create EDI ASN 856 V2 USR = N
      * CASE: LCL.Send EDI Document Y/N is No
     C                   IF        YL0010 = 'N'
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
     C                   END                                                    *FI
     C                   END                                                    *FI
      * R17040 DN 03/05/21-Additional Validations.
      * CASE: *OTHERWISE
      * Do Not Reprocess EDI 856 Transactions Already Been Sent.
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * This scenario will handle Loads with different Bill To Customers
      * that may have a Load(s) that may have already been 'Sent'.
      * RTV EDI 856/824 Sts    RT - Order Header Extension  * 
     C                   IF        WN0001 = 'Y'
     C                   EXSR      SFRVGN
      * CASE: LCL.OHE EDI 856 Action is Sent
     C                   IF        YL0011 = 'S'
     C                   MOVEL     'N'           WN0001                         Create EDI ASN
     C                   END                                                    *FI
     C                   END                                                    *FI
      * If Trade Partner Control is Setup, Check for Held EDI 856.
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * RTV EDI 856 Cntrl Flag RT - Trade Partner Control  * 
     C                   IF        WN0001 = 'Y'
     C                   EXSR      SGRVGN
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Hold 856 f/Cust Asgn App# is Yes
      *   |- c2    : LCL.Hold 856 f/Carr PRO is Yes
      *   '-
      * Val Upd Held 856 f/TP XF - Order Header TRG  * 
     C                   IF        YL0012 = 'Y' OR
     C                             YL0013 = 'Y'
     C                   CLEAR                   PARC
     C                   Z-ADD     P1RMNB        PARMNB                         Load ID
     C                   Z-ADD     WAB0C7        PAB0C7                         Bill to Custome
      *
     C                   CALL      'PUSWXFR'                            90      Val Upd Held 85
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: Order Head
     C                   PARM      YL0012        WQ0005                         Hold 856 f_Cust
     C                   PARM      YL0013        WQ0006                         Hold 856 f_Carr
     C     WN0001        PARM      WN0001        WQ0007                         Create EDI ASN
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUSWXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   END                                                    *FI
     C                   END                                                    *FI
      * PROCESS: Create 856 ORD (ECP142), DTL (ECP140) & TARE (ECP145) Da
      * CASE: PAR.Create EDI ASN 856 V2 USR is Yes
      * First Time Processing.
      * CASE: PAR.First Time Flag is Yes
     C                   IF        WN0001 = 'Y'
     C                   IF        WN0008 = 'Y'
     C                   MOVEL     'N'           WN0008                         First Time Flag
     C                   MOVEL     'Y'           YL0001                         USR Update Flag
     C                   MOVEL     WABCNA        YL0014                         Customer Purcha
     C                   END                                                    *FI
      * Break by PO# and Create EDI Adv Ship Ntc Order V2 (ECP142).
      * CASE: DB1.Customer Purchase Order # EQ LCL.Customer Purchase Orde
      * Set Required Info.
      * CASE: *OTHERWISE
     C                   IF        WABCNA = YL0014
     C                   EVAL      YL0015 = ' '                                 Order Number Al
     C                   MOVEL     WAC4NB        YL0015                         Order Number Al
     C                   Z-ADD     0             ZQ
     C     WN0007        CAT(P)    YL0015:ZQ     WN0007                         Orders on PO -
      * Set Packaging Code.
      * CASE: DB1.Palletize is yes
     C                   IF        WAVEST = 'Y'
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'PLT'         YL0016                         TD101-Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'CAS'         YL0016                         TD101-Packaging
     C                   END                                                    *FI
      * LCL.Order Date USR = DB1.Order Date
     C                   IF        WAA0DT = *ZERO
     C                   Z-ADD     *ZERO         YL0017
     C                   ELSE
     C     WAA0DT        ADD       19000000      YL0017                         Order Date USR
     C                   END
      * LCL.Requested Delivery DteUSR = DB1.Requested Delivery Date
     C                   IF        WAEIDT = *ZERO
     C                   Z-ADD     *ZERO         YL0018
     C                   ELSE
     C     WAEIDT        ADD       19000000      YL0018                         Requested Deliv
     C                   END
      * R17040 DN 03/08/21-Get Customer Vendor f/PO & Save Invoice Number
      * RTV Cust Vendor f/PO  RT - Order Header Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WAAIC3        WL0017                         Company Number
     C                   Z-ADD     WAC4NB        WL0018                         Order Number
     C                   EXSR      SHRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0019        YL0019                         OHE Customer Ve
      * S17064 DN 05/06/21-If Customer Vendor is Blank, Get From ECP004.
      * CASE: LCL.OHE Customer Vendor f/PO is *Blank
      * Rtv Vendor Number     RT - EDI Purchase Order Header  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0019 = ' '
     C                   MOVEL(P)  P2J5NX        WL0020                         EDI Trading Par
     C                   MOVEL(P)  YL0014        WL0021                         G5003-PURCHASE
     C                   EXSR      SIRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0022        YL0019                         Customer Ref ID
     C                   END                                                    *FI
     C                   Z-ADD     WACONB        YL0020                         Invoice Number
      * Accumulate SUM Qty/Wgt for All Orders.
      * CASE: *OTHERWISE
      * R17040 DN 03/08/21-Added Calculation for Total Unit Count.
      * Rtv Sum Qty/Wgt 4/856  RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0023                         Company Number
     C                   Z-ADD     WAC4NB        WL0024                         Order Number
     C                   Z-ADD     YL0021        WL0025                         Total Quantity
     C                   Z-ADD     YL0022        WL0026                         Total Weight Sh
     C                   Z-ADD     YL0024        WL0028                         Total Unit Coun
     C                   EXSR      SJRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0025        YL0021                         Total Quantity
     C                   Z-ADD     WL0026        YL0022                         Total Weight Sh
     C                   Z-ADD     WL0027        YL0023                         Total Gross Wei
     C                   Z-ADD     WL0028        YL0024                         Total Unit Coun
      * R17040 DN 03/09/21-Get Total Pallet Count.
      * Exc Total Pallet Count XF - Manifest Detail  * 
     C                   CALL      'PUSXXFR'                            90      Exc Total Palle
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1AIC3        WQ0015                         Company Number
     C                   PARM      WAC4NB        WQ0016                         Order Number
     C     YL0031        PARM      YL0031        WQ0017                         Total Pallet Co
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUSXXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * Accumulate Totals for All Orders by PO# to Create ECP142 ORD Reco
     C                   ADD       YL0021        WN0002                         Total Qty Ship
     C                   ADD       YL0022        WN0003                         Total Wgt Ship
     C                   ADD       YL0023        WN0004                         Total Gross Wgt
      * R17040 DN 03/09/21-ACCUM Total Unit Count ORD & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   ADD       YL0024        WN0006                         Total Unit Coun
     C                   ADD       YL0031        WN0005                         Total Pallet Co
      * Accumulate Totals for All Orders to Create ECP139 HDR Record.
     C                   ADD       YL0021        P2MEQT                         Total Quantity
     C                   ADD       YL0022        P2IFWG                         Total Weight Sh
     C                   ADD       YL0023        P2QGWG                         Total Gross Wei
      * R17040 DN 03/08/21-ACCUM Total Unit Count Hdr & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   ADD       YL0024        P2FRNZ                         Total Unit Coun
     C                   ADD       YL0031        P2FQNZ                         Total Pallet Co
     C                   ELSE
      * CASE: *OTHERWISE
      * Create ECP142 record for each PO# Break.
      * R17040 DN 03/08/21-Populate New Fields: Pallet Count, Unit Count,
      *        Slip Sheet Count, Vendor Nbr & Invoice Nbr.
      * Crt EDI ASN Order V2  CR - EDI Adv Ship Ntc Order V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0033                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0034                         REF02-Ref ID-Lo
     C                   MOVEL(P)  YL0003        WL0035                         TRADE PARTNER C
     C                   MOVEL(P)  YL0014        WL0036                         PRF01-Customer
     C                   Z-ADD     YL0017        WL0037                         PRF04-Cust PO D
     C                   MOVEL(P)  'SO'          WL0038                         PRF07 PO Type C
     C                   MOVEL(P)  WN0007        WL0039                         Orders on PO -
     C                   MOVEL(P)  YL0016        WL0040                         TD101-Packaging
     C                   Z-ADD     WN0002        WL0041                         TD102 Case Quan
     C                   Z-ADD     WN0005        WL0042                         TD102 Pallet Co
     C                   Z-ADD     WN0006        WL0043                         Unit Count
     C                   Z-ADD     1             WL0044                         Slip Sheet Coun
     C                   Z-ADD     WN0004        WL0045                         TD107 Weight-Gr
     C                   Z-ADD     WN0003        WL0046                         TD107 Weight-Ne
     C                   Z-ADD     YL0018        WL0047                         DTM02-Req Deliv
     C                   Z-ADD     YL0018        WL0048                         DTM02-Req PU Da
     C                   Z-ADD     *ZERO         WL0049                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WL0050                         DTM02-Unused Da
     C                   MOVEL(P)  YL0019        WL0051                         REF02/IA Vendor
     C                   Z-ADD     YL0020        WL0052                         REF02 Invoice N
     C                   EXSR      SLCRRC
      * Reinitialize for Next Purchase Order #.
      * CASE: *OTHERWISE
     C                   MOVEL     WABCNA        YL0014                         Customer Purcha
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   EVAL      YL0015 = ' '                                 Order Number Al
     C                   MOVEL     WAC4NB        YL0015                         Order Number Al
     C                   EVAL      WN0007 = ' '                                 Orders on PO -
     C                   MOVEL     YL0015        WN0007                         Orders on PO -
      * Set Packaging Code.
      * CASE: DB1.Palletize is yes
     C                   IF        WAVEST = 'Y'
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'PLT'         YL0016                         TD101-Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0016 = ' '                                 TD101-Packaging
     C                   MOVEL     'CAS'         YL0016                         TD101-Packaging
     C                   END                                                    *FI
      * LCL.Order Date USR = DB1.Order Date
     C                   IF        WAA0DT = *ZERO
     C                   Z-ADD     *ZERO         YL0017
     C                   ELSE
     C     WAA0DT        ADD       19000000      YL0017                         Order Date USR
     C                   END
      * LCL.Requested Delivery DteUSR = DB1.Requested Delivery Date
     C                   IF        WAEIDT = *ZERO
     C                   Z-ADD     *ZERO         YL0018
     C                   ELSE
     C     WAEIDT        ADD       19000000      YL0018                         Requested Deliv
     C                   END
      * R17040 DN 03/08/21-Get Customer Vendor f/PO & Save Invoice Number
      * RTV Cust Vendor f/PO  RT - Order Header Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0017                         Company Number
     C                   Z-ADD     WAC4NB        WL0018                         Order Number
     C                   EXSR      SHRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0019        YL0019                         OHE Customer Ve
      * S17064 DN 05/06/21-If Customer Vendor is Blank, Get From ECP004.
      * CASE: LCL.OHE Customer Vendor f/PO is *Blank
      * Rtv Vendor Number     RT - EDI Purchase Order Header  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0019 = ' '
     C                   MOVEL(P)  P2J5NX        WL0020                         EDI Trading Par
     C                   MOVEL(P)  YL0014        WL0021                         G5003-PURCHASE
     C                   EXSR      SIRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0022        YL0019                         Customer Ref ID
     C                   END                                                    *FI
     C                   Z-ADD     WACONB        YL0020                         Invoice Number
      * Accumulate SUM Qty/Wgt for All Orders.
      * CASE: *OTHERWISE
      * R17040 DN 03/08/21-Added Calculation for Total Unit Count.
      * Rtv Sum Qty/Wgt 4/856  RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0023                         Company Number
     C                   Z-ADD     WAC4NB        WL0024                         Order Number
     C                   Z-ADD     YL0021        WL0025                         Total Quantity
     C                   Z-ADD     YL0022        WL0026                         Total Weight Sh
     C                   Z-ADD     YL0024        WL0028                         Total Unit Coun
     C                   EXSR      SJRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0025        YL0021                         Total Quantity
     C                   Z-ADD     WL0026        YL0022                         Total Weight Sh
     C                   Z-ADD     WL0027        YL0023                         Total Gross Wei
     C                   Z-ADD     WL0028        YL0024                         Total Unit Coun
      * R17040 DN 03/09/21-Get Total Pallet Count.
      * Exc Total Pallet Count XF - Manifest Detail  * 
     C                   CALL      'PUSXXFR'                            90      Exc Total Palle
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P1AIC3        WQ0018                         Company Number
     C                   PARM      WAC4NB        WQ0019                         Order Number
     C     YL0031        PARM      YL0031        WQ0020                         Total Pallet Co
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PUSXXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * PO Break, Reset Totals to Create ECP142 ORD Record.
     C                   Z-ADD     YL0021        WN0002                         Total Qty Ship
     C                   Z-ADD     YL0022        WN0003                         Total Wgt Ship
     C                   Z-ADD     YL0023        WN0004                         Total Gross Wgt
      * R17040 DN 03/09/21-Reset Total Unit Count ORD & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   Z-ADD     YL0024        WN0006                         Total Unit Coun
     C                   Z-ADD     YL0031        WN0005                         Total Pallet Co
      * Accumulate Totals for All Orders to Create ECP139 HDR Record.
     C                   ADD       YL0021        P2MEQT                         Total Quantity
     C                   ADD       YL0022        P2IFWG                         Total Weight Sh
     C                   ADD       YL0023        P2QGWG                         Total Gross Wei
      * R17040 DN 03/08/21-ACCUM Total Unit Count Hdr & Total Pallet Coun
      * CASE: *OTHERWISE
     C                   ADD       YL0024        P2FRNZ                         Total Unit Coun
     C                   ADD       YL0031        P2FQNZ                         Total Pallet Co
     C                   END                                                    *FI
      * Create ECP140 DTL & ECP145 TARE for Each Order.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * Crt EDI 856 DTL & TARE RT - Manifest Detail  * 
     C                   EXSR      SMRVGN
      * Update EDI 856 Info in OHE.
      * Upd OHE EDI 856 Error  RT - Order Header Extension  * 
     C                   EXSR      TIRVGN
     C                   END                                                    *FI
     C     KRSSA         READE     @BFCPF7                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Last Record Processing.
      * CASE: LCL.USR Update Flag is Yes
      * R17040 DN 03/08/21-Populate New Fields: Pallet Count, Unit Count,
      *        Slip Sheet Count, Vendor Nbr & Invoice Nbr.
      * Crt EDI ASN Order V2  CR - EDI Adv Ship Ntc Order V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0001 = 'Y'
     C                   Z-ADD     P2H9NY        WL0033                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0034                         REF02-Ref ID-Lo
     C                   MOVEL(P)  YL0003        WL0035                         TRADE PARTNER C
     C                   MOVEL(P)  YL0014        WL0036                         PRF01-Customer
     C                   Z-ADD     YL0017        WL0037                         PRF04-Cust PO D
     C                   MOVEL(P)  'SO'          WL0038                         PRF07 PO Type C
     C                   MOVEL(P)  WN0007        WL0039                         Orders on PO -
     C                   MOVEL(P)  YL0016        WL0040                         TD101-Packaging
     C                   Z-ADD     WN0002        WL0041                         TD102 Case Quan
     C                   Z-ADD     WN0005        WL0042                         TD102 Pallet Co
     C                   Z-ADD     WN0006        WL0043                         Unit Count
     C                   Z-ADD     1             WL0044                         Slip Sheet Coun
     C                   Z-ADD     WN0004        WL0045                         TD107 Weight-Gr
     C                   Z-ADD     WN0003        WL0046                         TD107 Weight-Ne
     C                   Z-ADD     YL0018        WL0047                         DTM02-Req Deliv
     C                   Z-ADD     YL0018        WL0048                         DTM02-Req PU Da
     C                   Z-ADD     *ZERO         WL0049                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WL0050                         DTM02-Unused Da
     C                   MOVEL(P)  YL0019        WL0051                         REF02/IA Vendor
     C                   Z-ADD     YL0020        WL0052                         REF02 Invoice N
     C                   EXSR      SLCRRC
     C                   END                                                    *FI
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   SBRVGN        BEGSR
      *================================================================
      * RTV EDI Tare Level 856RT - EDI Bill To Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0002 = ' '                                 EDI Tare Level
      * Define keylist
     C     KRSSB         KLIST
     C                   KFLD                    WBB0C7                         Bill to Custome
     C                   KFLD                    WBM4AA                         Interchange Cod
      * Setup key
     C                   Z-ADD     P1B0C7        WBB0C7                         Bill to Custome
     C                   EVALR     WBM4AA = ' '                                 Interchange Cod
     C                   MOVEL     'ADVSN'       WBM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSB         CHAIN     @GQREH2                            90        *
      * Data record not found
     C   90              MOVEL     'USR4373'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBSIAA        YL0002                         EDI Tare Level
     C                   ENDIF
      *================================================================
     CSR   SBEXIT        ENDSR
      /EJECT
     CSR   SCRVGN        BEGSR
      *================================================================
      * RTV EDI ASN 856 Info  RT - EDI Bill To Interchange  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0003 = ' '                                 EDI Trading Par
     C                   EVAL      WL0004 = ' '                                 EDI Detailed AS
     C                   EVAL      WL0005 = ' '                                 Record Status
      * Define keylist
     C     KRSSC         KLIST
     C                   KFLD                    WBB0C7                         Bill to Custome
     C                   KFLD                    WBM4AA                         Interchange Cod
      * Setup key
     C                   Z-ADD     WL0001        WBB0C7                         Bill to Custome
     C                   MOVEL     WL0002        WBM4AA                         Interchange Cod
      * Establish starting position
     C     KRSSC         CHAIN     @GQREH2                            90        *
      * Data record not found
     C   90              MOVEL     'USR4373'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WBJ5NX        WL0003                         EDI Trading Par
     C                   MOVEL     WBBIU1        WL0004                         EDI Detailed AS
     C                   MOVEL     WBVSST        WL0005                         Record Status
     C                   ENDIF
      *================================================================
     CSR   SCEXIT        ENDSR
      /EJECT
     CSR   SDRVGN        BEGSR
      *================================================================
      * RTV 1st Whse/Country   RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KPSSD         KLIST
     C                   KFLD                    WQSD01                         Company Number
     C                   KFLD                    WQSD02                         Order Number
     C                   KFLD                    WCDPNB                         Order Sequence
     C                   KFLD                    WCUENB                         Order Secondary
      * Define keylist
     C     KRSSD         KLIST
     C                   KFLD                    WQSD01                         Company Number
     C                   KFLD                    WQSD02                         Order Number
      * Setup key
     C                   Z-ADD     WL0006        WQSD01                         Company Number
     C                   Z-ADD     WL0007        WQSD02                         Order Number
     C                   Z-ADD     WL0008        WCDPNB                         Order Sequence
     C                   Z-ADD     WL0009        WCUENB                         Order Secondary
      * Establish starting position
     C     KPSSD         SETLL     @BGWKAE                                      *
     C     KRSSD         READE     @BGWKAE                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     WCAJCD        WL0010                         Warehouse Code
     C                   MOVEL     WCKXCD        WL0011                         Country Code
     C                   GOTO      SDEXIT                                       *QUIT
     C     KRSSD         READE     @BGWKAE                                90    *
     C                   ENDDO
      *================================================================
     CSR   SDEXIT        ENDSR
      /EJECT
     CSR   SERVGN        BEGSR
      *================================================================
      * Rtv EDI 856 ASN Info RT - Warehouse Codes  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSE         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0012        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSE         CHAIN     @ADREAO                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0007'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0013 = ' '                                 Warehouse Locat
     C                   EVAL      WL0014 = ' '                                 WHS Live with C
     C                   EVAL      WL0015 = ' '                                 WHS PFS Interfa
     C                   EVAL      WL0016 = ' '                                 Crt 856 ASN for
     C                   GOTO      SEEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WDT0ST        WL0013                         Warehouse Locat
     C                   MOVEL     WDRRSX        WL0014                         WHS Live with C
     C                   MOVEL     WDRSSX        WL0015                         WHS PFS Interfa
     C                   MOVEL     WDQDSC        WL0016                         Crt 856 ASN for
     C                   ENDIF
      *================================================================
     CSR   SEEXIT        ENDSR
      /EJECT
     CSR   SFRVGN        BEGSR
      *================================================================
      * RTV EDI 856/824 Sts    RT - Order Header Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0011 = ' '                                 OHE EDI 856 Act
      * Define keylist
     C     KRSSF         KLIST
     C                   KFLD                    WEAIC3                         Company Number
     C                   KFLD                    WEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WAAIC3        WEAIC3                         Company Number
     C                   Z-ADD     WAC4NB        WEC4NB                         Order Number
      * Establish starting position
     C     KRSSF         CHAIN     @AMREJF                            90        *
      * Data record not found
     C   90              MOVEL     'USR3697'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WEJUSC        YL0011                         OHE EDI 856 Act
     C                   ENDIF
      *================================================================
     CSR   SFEXIT        ENDSR
      /EJECT
     CSR   SGRVGN        BEGSR
      *================================================================
      * RTV EDI 856 Cntrl Flag RT - Trade Partner Control  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      YL0012 = ' '                                 Hold 856 f_Cust
     C                   EVAL      YL0013 = ' '                                 Hold 856 f_Carr
      * Define keylist
     C     KRSSG         KLIST
     C                   KFLD                    WFJ5NX                         EDI Trading Par
      * Setup key
     C                   MOVEL     YL0003        WFJ5NX                         EDI Trading Par
      * Establish starting position
     C     KRSSG         CHAIN     @B8REVF                            90        *
      * Data record not found
     C   90              MOVEL     'USR4842'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WFCFSC        YL0012                         Hold 856 f_Cust
     C                   MOVEL     WFCGSC        YL0013                         Hold 856 f_Carr
     C                   ENDIF
      *================================================================
     CSR   SGEXIT        ENDSR
      /EJECT
     CSR   SHRVGN        BEGSR
      *================================================================
      * RTV Cust Vendor f/PO  RT - Order Header Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0019 = ' '                                 OHE Customer Ve
      * Define keylist
     C     KRSSH         KLIST
     C                   KFLD                    WEAIC3                         Company Number
     C                   KFLD                    WEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     WL0017        WEAIC3                         Company Number
     C                   Z-ADD     WL0018        WEC4NB                         Order Number
      * Establish starting position
     C     KRSSH         CHAIN     @AMREJF                            90        *
      * Data record not found
     C   90              MOVEL     'USR3697'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WEM1U1        WL0019                         OHE Customer Ve
     C                   ENDIF
      *================================================================
     CSR   SHEXIT        ENDSR
      /EJECT
     CSR   SIRVGN        BEGSR
      *================================================================
      * Rtv Vendor Number     RT - EDI Purchase Order Header  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   EVAL      WL0022 = ' '                                 Customer Ref ID
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSI         KLIST
     C                   KFLD                    WQSI01                         EDI Trading Par
     C                   KFLD                    WQSI02                         G5003-PURCHASE
      * Setup key
     C                   MOVEL     WL0020        WQSI01                         EDI Trading Par
     C                   MOVEL     WL0021        WQSI02                         G5003-PURCHASE
      * Establish starting position
     C     KRSSI         SETLL     @P004SK                                      *
     C     KRSSI         READE     @P004SK                                90    *
      * Data record not found
     C   90              MOVEL     'USR3103'     W0RTN
      * USER: Process Data record
      * Use Last Non-Blank Vendor Number.
      * CASE: DB1.Customer Ref ID is Entered
     C                   DOW       NOT *IN90
     C                   IF        WGBRU1 <> ' '
     C                   MOVEL     WGBRU1        WL0022                         Customer Ref ID
     C                   END                                                    *FI
     C     KRSSI         READE     @P004SK                                90    *
     C                   ENDDO
      *================================================================
     CSR   SIEXIT        ENDSR
      /EJECT
     CSR   SJRVGN        BEGSR
      *================================================================
      * Rtv Sum Qty/Wgt 4/856  RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0025                         Total Quantity
     C                   Z-ADD     *ZERO         WL0026                         Total Weight Sh
     C                   Z-ADD     *ZERO         WL0027                         Total Gross Wei
     C                   Z-ADD     *ZERO         WL0028                         Total Unit Coun
     C                   MOVEL     'Y'           YL0025                         First Time Flag
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSJ         KLIST
     C                   KFLD                    WQSJ01                         Company Number
     C                   KFLD                    WQSJ02                         Order Number
      * Setup key
     C                   Z-ADD     WL0023        WQSJ01                         Company Number
     C                   Z-ADD     WL0024        WQSJ02                         Order Number
      * Establish starting position
     C     KRSSJ         SETLL     @BGWKAE                                      *
     C     KRSSJ         READE     @BGWKAE                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * Total Quantity Shipped.
     C                   DOW       NOT *IN90
     C                   ADD       WCCBQT        WL0025                         Total Quantity
      * Total Net Weight.
     C                   ADD       WCATWG        WL0026                         Total Weight Sh
      * Total Gross Weight.
      * CASE: LCL.First Time Flag is Yes
     C                   IF        YL0025 = 'Y'
     C                   MOVEL     'N'           YL0025                         First Time Flag
     C                   Z-ADD     *ZERO         YL0026                         USR Weight Accu
     C                   Z-ADD     *ZERO         YL0027                         Order Quantity
      * RTV Gross Wgt/Qty     XF - Order Detail  * 
     C                   CALL      'PQPQXFR'                            90      RTV Gross Wgt/Q
     C                   PARM      *BLANK        W0RTN
     C                   PARM      WCAIC3        WQ0008                         Company Number
     C                   PARM      WCC4NB        WQ0009                         Order Number
     C                   PARM      WCDPNB        WQ0010                         Order Sequence
     C                   PARM      WCUENB        WQ0011                         Order Secondary
     C     YL0026        PARM      YL0026        WQ0012                         USR Weight Accu
     C     YL0027        PARM      YL0027        WQ0013                         Order Quantity
     C                   PARM      *ZERO         WQ0014                         Avg Pallet Tare
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PQPQXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
     C                   Z-ADD     YL0026        WL0027                         Total Gross Wei
     C                   END                                                    *FI
      * R17040 DN 03/08/21-Get Item Dflt Info & Calc/Accum Total Unit Cou
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WCHGCD        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0028                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0029                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0030                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count Hdr.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unit Cnt Hdr
      * PAR.Total Unit Count Hdr U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : DB1.Quantity Shipped Total
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count Hdr U
     C                   IF        YL0028 = 'Y'
     C     YL0029        MULT      YL0030        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WCCBQT        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WL0028        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WL0028                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WCCBQT        WL0028                         Total Unit Coun
     C                   END                                                    *FI
     C     KRSSJ         READE     @BGWKAE                                90    *
     C                   ENDDO
      *================================================================
     CSR   SJEXIT        ENDSR
      /EJECT
     CSR   SKRVGN        BEGSR
      *================================================================
      * Rtv Piece Count Itm InfRT - Item Default  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0030 = ' '                                 Piece Count Ite
     C                   Z-ADD     *ZERO         WL0031                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WL0032                         Bags Per Unit
      * Define keylist
     C     KRSSK         KLIST
     C                   KFLD                    WHHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0029        WHHGCD                         Item Code
      * Establish starting position
     C     KRSSK         CHAIN     @BYREA1                            90        *
      * Data record not found
     C   90              MOVEL     'USR1160'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WHPCCT        WL0030                         Piece Count Ite
     C                   Z-ADD     WHBDNB        WL0031                         Pieces Per Bag
     C                   Z-ADD     WHBJNB        WL0032                         Bags Per Unit
     C                   ENDIF
      *================================================================
     CSR   SKEXIT        ENDSR
      /EJECT
     CSR   SLCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Order V2  CR - EDI Adv Ship Ntc Order V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BNCPFQ
     C                   Z-ADD     WL0033        WIH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0034        WIQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0035        WIHPAA                         TRADE PARTNER C
     C                   MOVEL     WL0036        WITFNA                         PRF01-Customer
     C                   Z-ADD     WL0037        WIEUNZ                         PRF04-Cust PO D
     C                   MOVEL     WL0038        WIYTAA                         PRF07 PO Type C
     C                   MOVEL     WL0039        WINVU1                         Orders on PO -
     C                   MOVEL     WL0040        WIYIAA                         TD101-Packaging
     C                   Z-ADD     WL0041        WID9NZ                         TD102 Case Quan
     C                   Z-ADD     WL0042        WIFHNZ                         TD102 Pallet Co
     C                   Z-ADD     WL0043        WIFPNZ                         Unit Count
     C                   Z-ADD     WL0044        WIFINZ                         Slip Sheet Coun
     C                   Z-ADD     WL0045        WIENNZ                         TD107 Weight-Gr
     C                   Z-ADD     WL0046        WIEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     WL0047        WIEFNZ                         DTM02-Req Deliv
     C                   Z-ADD     WL0048        WIEGNZ                         DTM02-Req PU Da
     C                   Z-ADD     WL0049        WIXBDT                         DTM02-Unused Da
     C                   Z-ADD     WL0050        WIEHNZ                         DTM02-Unused Da
     C                   MOVEL     WL0051        WIP8U1                         REF02/IA Vendor
     C                   Z-ADD     WL0052        WIFJNZ                         REF02 Invoice N
      *
     C     KLCRSL        KLIST
     C                   KFLD                    WIH9NY                         EDI SURROGATE N
     C                   KFLD                    WIQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WIHPAA                         TRADE PARTNER C
     C                   KFLD                    WITFNA                         PRF01-Customer
      * Check for duplicate primary key
     C     KLCRSL        SETLL     @BNCPFQ                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5142'     W0RTN
      * Send message 'EDI Adv Ship Ntc Order EX'
     C                   MOVEL     'USR5142'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SLEXIT
     C                   ENDIF
      *
     C                   WRITE     @BNCPFQ                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SLEXIT        ENDSR
      /EJECT
     CSR   SMRVGN        BEGSR
      *================================================================
      * Crt EDI 856 DTL & TARE RT - Manifest Detail  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0009                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0010                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0011                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0012                         Total Unit Wgt
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
     C                   Z-ADD     *ZERO         WN0014                         Total Unit Coun
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0018                         Quantity Ordere
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   MOVEL     'Y'           YL0032                         First Time Flag
     C                   MOVEL     'Y'           YL0033                         First Time Thro
     C                   MOVEL     'N'           YL0034                         Record Processe
     C                   MOVEL     'N'           YL0035                         Pallet ID = 0 E
      * R17040 DN 03/12/21-Initialize Single Item Pallet Flag.
     C                   MOVEL     'Y'           YL0036                         Single Item Pal
      * Declare restrictor key work fields
      * Define keylist
     C     KPSSM         KLIST
     C                   KFLD                    WQSM01                         Company Number
     C                   KFLD                    WQSM02                         Order Number
     C                   KFLD                    WJH7NY                         Manifest Pallet
      * Define keylist
     C     KRSSM         KLIST
     C                   KFLD                    WQSM01                         Company Number
     C                   KFLD                    WQSM02                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WQSM01                         Company Number
     C                   Z-ADD     WAC4NB        WQSM02                         Order Number
     C                   Z-ADD     *ZERO         WJH7NY                         Manifest Pallet
      * Establish starting position
     C     KPSSM         SETLL     @FNCPF8                                      *
     C     KRSSM         READE     @FNCPF8                                90    *
      * Data record not found
     C   90              MOVEL     'USR1196'     W0RTN
      * USER: Process Data record
      * First Time Processing.
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.First Time Flag is Yes
      *   |- c2    : DB1.Case Quantity is GT *ZERO
      *   '-
     C                   DOW       NOT *IN90
     C                   MOVEL     '0'           Y0CX01
     C                   IF        YL0032 = 'Y'
     C                   IF        WJFOQT > 0
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   MOVEL     'N'           YL0032                         First Time Flag
     C                   Z-ADD     WJH7NY        YL0037                         Manifest Pallet
     C                   Z-ADD     WJLPNZ        YL0038                         Manifest Pallet
     C                   Z-ADD     WJDPNB        YL0039                         Order Sequence
     C                   Z-ADD     WJHGCD        YL0040                         Item Code
      * R17040 DN 03/12/21-Save 1st Item Code for Each Unique Pallet #.
     C                   Z-ADD     WJHGCD        YL0041                         1st Item Code f
      * R17040 DN 03/15/21-Commented Out. No longer needed.
     C                   END                                                    *FI
      * Break & SUM Qty/Wgt by Pallet ID.
      * CASE: DB1.Case Quantity is GT *ZERO
     C                   IF        WJFOQT > 0
     C                   MOVEL     'Y'           YL0034                         Record Processe
      * CASE: DB1.Manifest Pallet Number EQ LCL.Manifest Pallet Number
      * Pallet=0, Break on Item to Clear Accum Totals for Qty/Wgt.
      * CASE: LCL.Manifest Pallet Number is Not Entered
     C                   IF        WJH7NY = YL0037
      * NOTE: This routine will handle all transactions w/ Pallet ID = 0.
     C                   IF        YL0037 = 0
     C                   MOVEL     'Y'           YL0035                         Pallet ID = 0 E
      * Item Code Break Then Create DTL Record and Reset Accum Qty/Wgt To
      * CASE: DB1.Item Code EQ LCL.Item Code
     C                   IF        WJHGCD = YL0040
     C                   ELSE
      * CASE: *OTHERWISE
      * Create EDI ASN DTL V2 (ECP140) for Item Break.
      * CASE: *OTHERWISE
     C                   MOVEL     YL0037        YL0042                         Manifest Pallet
     C                   MOVEL     YL0038        YL0043                         Manifest Pallet
      * R17040 DN 03/12/21-Set Single Item Pallet Flag to No.
     C                   MOVEL     'N'           YL0036                         Single Item Pal
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Item Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0044                         SN105 Quantity
     C                   EVAL      YL0045 = ' '                                 Product ID Manu
     C                   MOVEL     YL0040        YL0045                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0053                         Company Number
     C                   Z-ADD     WAC4NB        WL0054                         Order Number
     C                   Z-ADD     YL0039        WL0055                         Order Sequence
     C                   EXSR      SNRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0056        YL0046                         Warehouse Code
     C                   MOVEL(P)  WL0057        YL0047                         U_M_Base Price
     C                   MOVEL(P)  WL0058        YL0048                         U_M_Ordered
     C                   MOVEL(P)  WL0059        YL0049                         Order Desc_Line
     C                   Z-ADD     WL0060        YL0050                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0048 = 'BX' OR
     C                             YL0048 = 'CS'
     C                   MOVEL     'CA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0048 = 'EA' OR
     C                             YL0048 = 'CB'
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0061                         Item Code
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0062        YL0052                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        YL0056                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0056                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0063                         Company Number
     C                   Z-ADD     WAC4NB        WL0064                         Order Number
     C                   Z-ADD     YL0040        WL0065                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0066        YL0057                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0057 = *ZERO
     C                   Z-ADD     *ZERO         YL0058
     C                   ELSE
     C     YL0057        ADD       19000000      YL0058                         Production Date
     C                   END
     C                   EVAL      YL0059 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0058        YL0059                         SLN12 Prod ID L
      *
     C                   EVAL      WN0019 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0020 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0021 = ' '                                 Year  (Char) US
     C                   EVAL      WN0022 = ' '                                 Month (Char) US
     C                   EVAL      WN0023 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0020 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0057        WN0020                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0020:ZQ     WN0021                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0020:ZQ     WN0022                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0020:ZQ     WN0023                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0022        CAT(P)    WN0023:ZQ     WN0019                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0019        CAT(P)    WN0021:ZQ     WN0019                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0019        YL0060                         Date Out (6,0)
     C                   EVAL      YL0061 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0060        YL0061                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UK'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UA'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0071                         Ship To Custome
     C                   Z-ADD     YL0040        WL0072                         Item Code
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0073        YL0063                         CIR Resource No
     C                   MOVEL(P)  WL0074        YL0064                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0064 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'PI'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'CB'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0046        WL0075                         Warehouse Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0076        YL0065                         State Code
     C                   MOVEL(P)  WL0077        YL0066                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0066 = 'FR'
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0078                         Item Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0079        YL0068                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0068                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0068        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0067 = *ZERO
     C                   Z-ADD     *ZERO         YL0069
     C                   ELSE
     C     YL0067        ADD       19000000      YL0069                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0069        YL0070                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UP'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0071                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'EN'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0072                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Update ECP145 TARE only at Pallet Number Break.
      * Calc/Accum Total Unit Count TARE for Item Code Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * Clear Accum.
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
      * R17040 DN 03/09/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * CASE: LCL.Manifest Pallet Nbr 3PL is Not Zero
      * Crt EDI ASN Dtl V2 NoCDCR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0038 <> 0
     C                   Z-ADD     P2H9NY        WL0080                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0081                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0082                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0083                         Order Number
     C                   MOVEL(P)  YL0043        WL0084                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0085                         Order Sequence
     C                   Z-ADD     WN0015        WL0086                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0087                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0088                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0089                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0090                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0091                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0092                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0093                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0094                         Product ID UPC
     C                   EVAL      WL0095 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0096                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0097                         LIN/UP UPC Cons
     C                   EVAL      WL0098 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0099                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0100                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0101                         GTin 12 Lin02
     C                   EVAL      WL0102 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0103                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0104                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0105                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0106                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0107                         SLN06 Unit Pric
     C                   EVAL      WL0108 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0109                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0110                         SLN12 Prod ID L
     C                   EVAL      WL0111 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0112                         PO402-Pack Size
     C                   EVAL      WL0113 = ' '                                 PO410-Length
     C                   EVAL      WL0114 = ' '                                 PO411-Width
     C                   EVAL      WL0115 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0116                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0117                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0118                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0119                         DTM02-Manuf Dat
     C                   EXSR      SUCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0120                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0121                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0122                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0123                         Order Number
     C                   MOVEL(P)  YL0042        WL0124                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0125                         Order Sequence
     C                   Z-ADD     WN0015        WL0126                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0127                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0128                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0129                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0130                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0131                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0132                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0133                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0134                         Product ID UPC
     C                   EVAL      WL0135 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0136                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0137                         LIN/UP UPC Cons
     C                   EVAL      WL0138 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0139                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0140                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0141                         GTin 12 Lin02
     C                   EVAL      WL0142 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0143                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0144                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0145                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0146                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0147                         SLN06 Unit Pric
     C                   EVAL      WL0148 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0149                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0150                         SLN12 Prod ID L
     C                   EVAL      WL0151 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0152                         PO402-Pack Size
     C                   EVAL      WL0153 = ' '                                 PO410-Length
     C                   EVAL      WL0154 = ' '                                 PO411-Width
     C                   EVAL      WL0155 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0156                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0157                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0158                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0159                         DTM02-Manuf Dat
     C                   Z-ADD     WJAIC3        WL0160                         Company Number
     C                   Z-ADD     YL0037        WL0161                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0162                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0163                         EDI Tare Level
     C                   EXSR      SVCRRC
     C                   END                                                    *FI
      * Reinitialize for Next Pallet Number.
      * CASE: *OTHERWISE
     C                   Z-ADD     WJH7NY        YL0037                         Manifest Pallet
     C                   Z-ADD     WJLPNZ        YL0038                         Manifest Pallet
     C                   Z-ADD     WJDPNB        YL0039                         Order Sequence
     C                   Z-ADD     WJHGCD        YL0040                         Item Code
      * Clear DTL Accum Totals.
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Pallet<>0 Break on Item to Clear Total Case Qty TARE - R17040 DN
      * CASE: LCL.Manifest Pallet Number is Entered
      * NOTE: This routine will handle all transactions w/ Pallet ID <> 0
      * Item Code Break, Reset Accum Total Case Qty.
      * CASE: DB1.Item Code EQ LCL.Item Code
     C                   IF        YL0037 <> 0
     C                   IF        WJHGCD = YL0040
     C                   ELSE
      * CASE: *OTHERWISE
      * Create EDI ASN DTL V2 (ECP140) for Item Break. R17040 DN 5/7/21
      * CASE: *OTHERWISE
     C                   MOVEL     YL0037        YL0042                         Manifest Pallet
     C                   MOVEL     YL0038        YL0043                         Manifest Pallet
     C                   MOVEL     'N'           YL0036                         Single Item Pal
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Item Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0044                         SN105 Quantity
     C                   EVAL      YL0045 = ' '                                 Product ID Manu
     C                   MOVEL     YL0040        YL0045                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0053                         Company Number
     C                   Z-ADD     WAC4NB        WL0054                         Order Number
     C                   Z-ADD     YL0039        WL0055                         Order Sequence
     C                   EXSR      SNRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0056        YL0046                         Warehouse Code
     C                   MOVEL(P)  WL0057        YL0047                         U_M_Base Price
     C                   MOVEL(P)  WL0058        YL0048                         U_M_Ordered
     C                   MOVEL(P)  WL0059        YL0049                         Order Desc_Line
     C                   Z-ADD     WL0060        YL0050                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0048 = 'BX' OR
     C                             YL0048 = 'CS'
     C                   MOVEL     'CA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0048 = 'EA' OR
     C                             YL0048 = 'CB'
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0061                         Item Code
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0062        YL0052                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        YL0056                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0056                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0063                         Company Number
     C                   Z-ADD     WAC4NB        WL0064                         Order Number
     C                   Z-ADD     YL0040        WL0065                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0066        YL0057                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0057 = *ZERO
     C                   Z-ADD     *ZERO         YL0058
     C                   ELSE
     C     YL0057        ADD       19000000      YL0058                         Production Date
     C                   END
     C                   EVAL      YL0059 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0058        YL0059                         SLN12 Prod ID L
      *
     C                   EVAL      WN0026 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0027 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0028 = ' '                                 Year  (Char) US
     C                   EVAL      WN0029 = ' '                                 Month (Char) US
     C                   EVAL      WN0030 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0027 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0057        WN0027                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0027:ZQ     WN0028                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0027:ZQ     WN0029                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0027:ZQ     WN0030                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0029        CAT(P)    WN0030:ZQ     WN0026                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0026        CAT(P)    WN0028:ZQ     WN0026                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0026        YL0060                         Date Out (6,0)
     C                   EVAL      YL0061 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0060        YL0061                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UK'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UA'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0071                         Ship To Custome
     C                   Z-ADD     YL0040        WL0072                         Item Code
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0073        YL0063                         CIR Resource No
     C                   MOVEL(P)  WL0074        YL0064                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0064 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'PI'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'CB'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0046        WL0075                         Warehouse Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0076        YL0065                         State Code
     C                   MOVEL(P)  WL0077        YL0066                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0066 = 'FR'
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0078                         Item Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0079        YL0068                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0068                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0068        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0067 = *ZERO
     C                   Z-ADD     *ZERO         YL0069
     C                   ELSE
     C     YL0067        ADD       19000000      YL0069                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0069        YL0070                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UP'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0071                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'EN'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0072                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Update ECP145 TARE only at Pallet Number Break.
      * Calc/Accum Total Unit Count TARE for Item Code Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * Clear Accum.
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * CASE: LCL.Manifest Pallet Nbr 3PL is Not Zero
      * Crt EDI ASN Dtl V2 NoCDCR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0038 <> 0
     C                   Z-ADD     P2H9NY        WL0080                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0081                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0082                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0083                         Order Number
     C                   MOVEL(P)  YL0043        WL0084                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0085                         Order Sequence
     C                   Z-ADD     WN0015        WL0086                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0087                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0088                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0089                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0090                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0091                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0092                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0093                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0094                         Product ID UPC
     C                   EVAL      WL0095 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0096                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0097                         LIN/UP UPC Cons
     C                   EVAL      WL0098 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0099                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0100                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0101                         GTin 12 Lin02
     C                   EVAL      WL0102 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0103                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0104                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0105                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0106                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0107                         SLN06 Unit Pric
     C                   EVAL      WL0108 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0109                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0110                         SLN12 Prod ID L
     C                   EVAL      WL0111 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0112                         PO402-Pack Size
     C                   EVAL      WL0113 = ' '                                 PO410-Length
     C                   EVAL      WL0114 = ' '                                 PO411-Width
     C                   EVAL      WL0115 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0116                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0117                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0118                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0119                         DTM02-Manuf Dat
     C                   EXSR      SUCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0120                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0121                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0122                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0123                         Order Number
     C                   MOVEL(P)  YL0042        WL0124                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0125                         Order Sequence
     C                   Z-ADD     WN0015        WL0126                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0127                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0128                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0129                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0130                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0131                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0132                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0133                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0134                         Product ID UPC
     C                   EVAL      WL0135 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0136                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0137                         LIN/UP UPC Cons
     C                   EVAL      WL0138 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0139                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0140                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0141                         GTin 12 Lin02
     C                   EVAL      WL0142 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0143                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0144                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0145                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0146                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0147                         SLN06 Unit Pric
     C                   EVAL      WL0148 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0149                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0150                         SLN12 Prod ID L
     C                   EVAL      WL0151 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0152                         PO402-Pack Size
     C                   EVAL      WL0153 = ' '                                 PO410-Length
     C                   EVAL      WL0154 = ' '                                 PO411-Width
     C                   EVAL      WL0155 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0156                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0157                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0158                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0159                         DTM02-Manuf Dat
     C                   Z-ADD     WJAIC3        WL0160                         Company Number
     C                   Z-ADD     YL0037        WL0161                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0162                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0163                         EDI Tare Level
     C                   EXSR      SVCRRC
     C                   END                                                    *FI
      * Reinitialize for Next Item Code.
      * CASE: *OTHERWISE
     C                   Z-ADD     WJDPNB        YL0039                         Order Sequence
     C                   Z-ADD     WJHGCD        YL0040                         Item Code
      * Clear DTL Accum Totals.
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   END                                                    *FI
     C                   END                                                    *FI
      * SUM Quantity & Weights.
      * CASE: *OTHERWISE
      * For DTL Record.
     C                   ADD       WJFOQT        WN0015                         Total Qty Ship
     C                   ADD       WJR0NB        WN0016                         Total Wgt Ship
     C                   ADD       WJN5WG        WN0017                         Total Gross Wgt
      * For TARE Record.
     C                   ADD       WJFOQT        WN0009                         Total Qty Ship
     C                   ADD       WJR0NB        WN0010                         Total Wgt Ship
     C                   ADD       WJN5WG        WN0011                         Total Gross Wgt
      * Sum Total Case Quantity TARE per Item Seq. R17040 DN 03/15/21
      * CASE: *OTHERWISE
     C                   ADD       WJFOQT        WN0013                         Total Case Qty
      * Calculate/Sum Unit Weight.
      * Rtv Tare Weight        RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WJAIC3        WL0166                         Company Number
     C                   Z-ADD     YL0040        WL0167                         Item Code
     C                   EXSR      SXRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0168        YN0007                         Description Lin
     C                   Z-ADD     WL0169        YL0109                         Misc Tare Weigh
      * RTV Itm BxID & Tares  RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WJAIC3        WL0170                         Company Number
     C                   Z-ADD     YL0040        WL0171                         Item Code
     C                   EXSR      SYRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0172        YL0110                         Unit Weight
     C                   Z-ADD     WL0173        YN0008                         Number Cases On
     C                   Z-ADD     WL0174        YN0009                         Pallet Tare Wei
     C                   Z-ADD     WL0175        YN0010                         Box iD
     C     YL0110        ADD       YL0109        YL0111                         PAL05 Unit Weig
     C                   ADD       YL0111        WN0012                         Total Unit Wgt
     C                   ELSE
      * CASE: *OTHERWISE
      * Create EDI ASN DTL V2 (ECP140) & EDI ASN TARE V2 (ECP145).
      * CASE: *OTHERWISE
      * NOTE: Any changes in here, must change in 'Exit Processing' also.
     C                   MOVEL     YL0037        YL0042                         Manifest Pallet
     C                   MOVEL     YL0038        YL0043                         Manifest Pallet
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Pallet Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0044                         SN105 Quantity
     C                   EVAL      YL0045 = ' '                                 Product ID Manu
     C                   MOVEL     YL0040        YL0045                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0053                         Company Number
     C                   Z-ADD     WAC4NB        WL0054                         Order Number
     C                   Z-ADD     YL0039        WL0055                         Order Sequence
     C                   EXSR      SNRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0056        YL0046                         Warehouse Code
     C                   MOVEL(P)  WL0057        YL0047                         U_M_Base Price
     C                   MOVEL(P)  WL0058        YL0048                         U_M_Ordered
     C                   MOVEL(P)  WL0059        YL0049                         Order Desc_Line
     C                   Z-ADD     WL0060        YL0050                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0048 = 'BX' OR
     C                             YL0048 = 'CS'
     C                   MOVEL     'CA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0048 = 'EA' OR
     C                             YL0048 = 'CB'
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0061                         Item Code
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0062        YL0052                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        YL0056                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0056                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0063                         Company Number
     C                   Z-ADD     WAC4NB        WL0064                         Order Number
     C                   Z-ADD     YL0040        WL0065                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0066        YL0057                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0057 = *ZERO
     C                   Z-ADD     *ZERO         YL0058
     C                   ELSE
     C     YL0057        ADD       19000000      YL0058                         Production Date
     C                   END
     C                   EVAL      YL0059 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0058        YL0059                         SLN12 Prod ID L
      *
     C                   EVAL      WN0034 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0035 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0036 = ' '                                 Year  (Char) US
     C                   EVAL      WN0037 = ' '                                 Month (Char) US
     C                   EVAL      WN0038 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0035 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0057        WN0035                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0035:ZQ     WN0036                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0035:ZQ     WN0037                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0035:ZQ     WN0038                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0037        CAT(P)    WN0038:ZQ     WN0034                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0034        CAT(P)    WN0036:ZQ     WN0034                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0034        YL0060                         Date Out (6,0)
     C                   EVAL      YL0061 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0060        YL0061                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UK'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UA'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.  add SK to the mix
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0071                         Ship To Custome
     C                   Z-ADD     YL0040        WL0072                         Item Code
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0073        YL0063                         CIR Resource No
     C                   MOVEL(P)  WL0074        YL0064                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0064 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'PI'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
      * Try with SKU                   2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'SK'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'SK'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
      * Try with IN                    2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'IN'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'IN'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'CB'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0046        WL0075                         Warehouse Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0076        YL0065                         State Code
     C                   MOVEL(P)  WL0077        YL0066                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0066 = 'FR'
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0078                         Item Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0079        YL0068                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0068                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0068        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0067 = *ZERO
     C                   Z-ADD     *ZERO         YL0069
     C                   ELSE
     C     YL0067        ADD       19000000      YL0069                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0069        YL0070                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UP'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0071                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'EN'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0072                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Get Pallet Tiers & Pallet Blocks if Single Pallet Flag=Y.
      * CASE: LCL.Single Item Pallet Flag is Yes
      * Use 1st Save Item Code for Each Unique Pallet Number.
      * Rtv Component Item Cde RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0036 = 'Y'
     C                   Z-ADD     P1AIC3        WL0176                         Company Number
     C                   Z-ADD     YL0041        WL0177                         Item Code
     C                   EXSR      TARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0178        YL0112                         Component Item
      * Rtv Pallet Tier/Block RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0112        WL0179                         Item Code
     C                   EXSR      TBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0180        YL0113                         IDE Pallet Tier
     C                   MOVEL(P)  WL0181        YL0114                         IDE Pallet Bloc
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0113 = ' '                                 IDE Pallet Tier
     C                   EVAL      YL0114 = ' '                                 IDE Pallet Bloc
     C                   END                                                    *FI
      * Set Packaging Desc Code Based on 1st Item Code for Pallet Number.
      * CASE: *OTHERWISE
      * Rtv Pallet Type 2     RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0182                         Company Number
     C                   Z-ADD     WAC4NB        WL0183                         Order Number
     C                   Z-ADD     YL0041        WL0184                         Item Code
     C                   EXSR      TCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0185        YL0115                         OD Pallet Type
      * CASE: LCL.OD Pallet Type is CHEP Pallet
      * As of 3/12/21, we don't have a Pallet Type of 'CH' but once we
      * do we may have to revisit this logic, per Rose.
     C                   IF        YL0115 = 'CH'
     C                   EVAL      YL0116 = ' '                                 PKG04 Packaging
     C                   MOVEL     '37'          YL0116                         PKG04 Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0116 = ' '                                 PKG04 Packaging
     C                   MOVEL     '52'          YL0116                         PKG04 Packaging
     C                   END                                                    *FI
      * Calc/Accum Total Unit Count TARE for Pallet Number Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * R17040 DN 03/09/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * CASE: LCL.Manifest Pallet Nbr 3PL is Not Zero
      * Crt EDI ASN Dtl V2 NoCDCR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0038 <> 0
     C                   Z-ADD     P2H9NY        WL0080                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0081                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0082                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0083                         Order Number
     C                   MOVEL(P)  YL0043        WL0084                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0085                         Order Sequence
     C                   Z-ADD     WN0015        WL0086                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0087                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0088                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0089                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0090                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0091                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0092                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0093                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0094                         Product ID UPC
     C                   EVAL      WL0095 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0096                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0097                         LIN/UP UPC Cons
     C                   EVAL      WL0098 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0099                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0100                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0101                         GTin 12 Lin02
     C                   EVAL      WL0102 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0103                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0104                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0105                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0106                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0107                         SLN06 Unit Pric
     C                   EVAL      WL0108 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0109                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0110                         SLN12 Prod ID L
     C                   EVAL      WL0111 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0112                         PO402-Pack Size
     C                   EVAL      WL0113 = ' '                                 PO410-Length
     C                   EVAL      WL0114 = ' '                                 PO411-Width
     C                   EVAL      WL0115 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0116                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0117                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0118                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0119                         DTM02-Manuf Dat
     C                   EXSR      SUCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0120                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0121                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0122                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0123                         Order Number
     C                   MOVEL(P)  YL0042        WL0124                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0125                         Order Sequence
     C                   Z-ADD     WN0015        WL0126                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0127                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0128                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0129                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0130                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0131                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0132                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0133                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0134                         Product ID UPC
     C                   EVAL      WL0135 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0136                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0137                         LIN/UP UPC Cons
     C                   EVAL      WL0138 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0139                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0140                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0141                         GTin 12 Lin02
     C                   EVAL      WL0142 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0143                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0144                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0145                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0146                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0147                         SLN06 Unit Pric
     C                   EVAL      WL0148 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0149                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0150                         SLN12 Prod ID L
     C                   EVAL      WL0151 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0152                         PO402-Pack Size
     C                   EVAL      WL0153 = ' '                                 PO410-Length
     C                   EVAL      WL0154 = ' '                                 PO411-Width
     C                   EVAL      WL0155 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0156                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0157                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0158                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0159                         DTM02-Manuf Dat
     C                   Z-ADD     WJAIC3        WL0160                         Company Number
     C                   Z-ADD     YL0037        WL0161                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0162                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0163                         EDI Tare Level
     C                   EXSR      SVCRRC
     C                   END                                                    *FI
      * R17040 DN 03/15/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * CASE: LCL.Manifest Pallet Nbr 3PL is Not Zero
      * Crt EDI ASN Tare V2NoCDCR - EDI Adv Ship Ntc Tare V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0038 <> 0
     C                   Z-ADD     P2H9NY        WL0186                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0187                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0188                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0189                         Order Number
     C                   MOVEL(P)  YL0043        WL0190                         MAN02 Pallet Nb
     C                   MOVEL(P)  '4'           WL0191                         PAL01 Pallet Ty
     C                   MOVEL(P)  YL0016        WL0192                         TD101-Packaging
     C                   MOVEL(P)  YL0036        WL0193                         Single Item Pal
     C                   MOVEL(P)  YL0113        WL0194                         PAL02 Pallet Ti
     C                   MOVEL(P)  YL0114        WL0195                         PAL03 Pallet Bl
     C                   Z-ADD     WN0009        WL0196                         TD102 Case Quan
     C                   Z-ADD     WN0012        WL0197                         PAL05 Unit Weig
     C                   Z-ADD     WN0010        WL0198                         TD107 Weight-Ne
     C                   Z-ADD     WN0011        WL0199                         TD107 Weight-Gr
     C                   EVAL      WL0200 = ' '                                 PAL15 Pallet Ex
     C                   Z-ADD     WN0014        WL0201                         Unit Count Tare
     C                   MOVEL(P)  YL0116        WL0202                         PKG04 Packaging
     C                   EXSR      TDCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt EDI ASN Tare V2   CR - EDI Adv Ship Ntc Tare V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0203                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0204                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0205                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0206                         Order Number
     C                   MOVEL(P)  YL0042        WL0207                         MAN02 Pallet Nb
     C                   MOVEL(P)  '4'           WL0208                         PAL01 Pallet Ty
     C                   MOVEL(P)  YL0016        WL0209                         TD101-Packaging
     C                   MOVEL(P)  YL0036        WL0210                         Single Item Pal
     C                   MOVEL(P)  YL0113        WL0211                         PAL02 Pallet Ti
     C                   MOVEL(P)  YL0114        WL0212                         PAL03 Pallet Bl
     C                   Z-ADD     WN0009        WL0213                         TD102 Case Quan
     C                   Z-ADD     WN0012        WL0214                         PAL05 Unit Weig
     C                   Z-ADD     WN0010        WL0215                         TD107 Weight-Ne
     C                   Z-ADD     WN0011        WL0216                         TD107 Weight-Gr
     C                   EVAL      WL0217 = ' '                                 PAL15 Pallet Ex
     C                   Z-ADD     WN0014        WL0218                         Unit Count Tare
     C                   MOVEL(P)  YL0116        WL0219                         PKG04 Packaging
     C                   Z-ADD     WJAIC3        WL0220                         Company Number
     C                   Z-ADD     YL0037        WL0221                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0222                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0223                         EDI Tare Level
     C                   EXSR      TECRRC
     C                   END                                                    *FI
      * Reinitialize for Next Pallet Number.
      * CASE: *OTHERWISE
     C                   Z-ADD     WJH7NY        YL0037                         Manifest Pallet
     C                   Z-ADD     WJLPNZ        YL0038                         Manifest Pallet
     C                   Z-ADD     WJDPNB        YL0039                         Order Sequence
     C                   Z-ADD     WJHGCD        YL0040                         Item Code
      * R17040 DN 03/12/21-Save 1st Item Code for Each Unique Pallet #.
     C                   Z-ADD     WJHGCD        YL0041                         1st Item Code f
      * R17040 DN 03/12/21-Reset Single Item Pallet Flag to Yes.
     C                   MOVEL     'Y'           YL0036                         Single Item Pal
     C                   Z-ADD     *ZERO         WN0015                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0016                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0017                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0009                         Total Qty Ship
     C                   Z-ADD     *ZERO         WN0010                         Total Wgt Ship
     C                   Z-ADD     *ZERO         WN0011                         Total Gross Wgt
     C                   Z-ADD     *ZERO         WN0012                         Total Unit Wgt
      * R17040 DN 03/16/21-Reset Both Accum Total Case Qty TARE & Unit Co
     C                   Z-ADD     *ZERO         WN0013                         Total Case Qty
     C                   Z-ADD     *ZERO         WN0014                         Total Unit Coun
      * SUM Quantity & Weights.
      * CASE: *OTHERWISE
     C                   ADD       WJFOQT        WN0015                         Total Qty Ship
     C                   ADD       WJR0NB        WN0016                         Total Wgt Ship
     C                   ADD       WJN5WG        WN0017                         Total Gross Wgt
     C                   ADD       WJFOQT        WN0009                         Total Qty Ship
     C                   ADD       WJR0NB        WN0010                         Total Wgt Ship
     C                   ADD       WJN5WG        WN0011                         Total Gross Wgt
      * Sum Total Case Quantity TARE per Item Seq. R17040 DN 03/15/21
      * CASE: *OTHERWISE
     C                   ADD       WJFOQT        WN0013                         Total Case Qty
      * Calculate/Sum Unit Weight.
      * Rtv Tare Weight        RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WJAIC3        WL0166                         Company Number
     C                   Z-ADD     WJHGCD        WL0167                         Item Code
     C                   EXSR      SXRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0168        YN0007                         Description Lin
     C                   Z-ADD     WL0169        YL0109                         Misc Tare Weigh
      * RTV Itm BxID & Tares  RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WJAIC3        WL0170                         Company Number
     C                   Z-ADD     WJHGCD        WL0171                         Item Code
     C                   EXSR      SYRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0172        YL0110                         Unit Weight
     C                   Z-ADD     WL0173        YN0008                         Number Cases On
     C                   Z-ADD     WL0174        YN0009                         Pallet Tare Wei
     C                   Z-ADD     WL0175        YN0010                         Box iD
     C     YL0110        ADD       YL0109        YL0111                         PAL05 Unit Weig
     C                   ADD       YL0111        WN0012                         Total Unit Wgt
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSSM         READE     @FNCPF8                                90    *
     C                   ENDDO
      * USER: Exit processing
      * Last Record Processing.
      * CASE: LCL.Record Processed Usr is Yes
      * Create EDI ASN DTL V2 (ECP140) & EDI ASN TARE V2 (ECP145).
      * CASE: *OTHERWISE
     C                   IF        YL0034 = 'Y'
     C                   MOVEL     YL0037        YL0042                         Manifest Pallet
     C                   MOVEL     YL0038        YL0043                         Manifest Pallet
      * Get/Set Info for EDI Adv Ship Ntc Dtl V2 (ECP140).
      * CASE: *OTHERWISE
      * Pallet Break, Set O.D. Qty Ordered with M.D. Shipped Qty.
      * CASE: *OTHERWISE
      * NOTE: We will handle the Total Qty Ordered vs Total Qty Shipped
      *       differences, if any, in the Last Record processing.
     C                   Z-ADD     WN0015        YL0044                         SN105 Quantity
     C                   EVAL      YL0045 = ' '                                 Product ID Manu
     C                   MOVEL     YL0040        YL0045                         Product ID Manu
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0053                         Company Number
     C                   Z-ADD     WAC4NB        WL0054                         Order Number
     C                   Z-ADD     YL0039        WL0055                         Order Sequence
     C                   EXSR      SNRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0056        YL0046                         Warehouse Code
     C                   MOVEL(P)  WL0057        YL0047                         U_M_Base Price
     C                   MOVEL(P)  WL0058        YL0048                         U_M_Ordered
     C                   MOVEL(P)  WL0059        YL0049                         Order Desc_Line
     C                   Z-ADD     WL0060        YL0050                         Unit Price
      * Conversion to Set Shipped & Ordered UOM.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is EQ Boxes
      *   |- c2    : LCL.U/M - Ordered is Cases
      *   '-
     C                   IF        YL0048 = 'BX' OR
     C                             YL0048 = 'CS'
     C                   MOVEL     'CA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.U/M - Ordered is Each
      *   |- c2    : LCL.U/M - Ordered is Combos
      *   '-
     C                   IF        YL0048 = 'EA' OR
     C                             YL0048 = 'CB'
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   ELSE
      * CASE: *OTHERWISE
      * All Others Convert to Each.
     C                   MOVEL     'EA'          YL0051                         SN103 Shipped U
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Rtv GTIN              RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0061                         Item Code
     C                   EXSR      SORVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0062        YL0052                         IDE GTIN
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Set PO402-Pack Size.
      * CASE: LCL.Piece Count Item is yes
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        YL0056                         PO402-Pack Size
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     1             YL0056                         PO402-Pack Size
     C                   END                                                    *FI
      * Set Production Date.
      * CASE: *OTHERWISE
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0063                         Company Number
     C                   Z-ADD     WAC4NB        WL0064                         Order Number
     C                   Z-ADD     YL0040        WL0065                         Item Code
     C                   EXSR      SPRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0066        YL0057                         Production Date
      * LCL.Production Date USR D8# = LCL.Production Date
     C                   IF        YL0057 = *ZERO
     C                   Z-ADD     *ZERO         YL0058
     C                   ELSE
     C     YL0057        ADD       19000000      YL0058                         Production Date
     C                   END
     C                   EVAL      YL0059 = ' '                                 SLN12 Prod ID L
     C                   MOVEL     YL0058        YL0059                         SLN12 Prod ID L
      *
     C                   EVAL      WN0041 = ' '                                 Date (Char-6) U
     C                   EVAL      WN0042 = ' '                                 Date (Alpha) US
     C                   EVAL      WN0043 = ' '                                 Year  (Char) US
     C                   EVAL      WN0044 = ' '                                 Month (Char) US
     C                   EVAL      WN0045 = ' '                                 Day   (Char) US
      *
      * CNV cyymmdd to mmddyy
      * convert numeric date to character date.
     C                   EVAL      WN0042 = ' '                                 Date (Alpha) US
     C                   MOVEL     YL0057        WN0042                         Date (Alpha) US
      * extract month, day, and year.
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0042:ZQ     WN0043                 90      Year  (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0042:ZQ     WN0044                 90      Month (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     2             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00007 OR
     C                             ZQ > 00007
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  WN0042:ZQ     WN0045                 90      Day   (Char) US
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
      * reconstruct date in mmddyy format.
     C                   Z-ADD     *ZERO         ZQ
     C     WN0044        CAT(P)    WN0045:ZQ     WN0041                         Date (Char-6) U
     C                   Z-ADD     *ZERO         ZQ
     C     WN0041        CAT(P)    WN0043:ZQ     WN0041                         Date (Char-6) U
      * convert character date to numeric date.
     C                   MOVE      WN0041        YL0060                         Date Out (6,0)
     C                   EVAL      YL0061 = ' '                                 REF02-Batch Lot
     C                   MOVEL     YL0060        YL0061                         REF02-Batch Lot
      * Set Product ID UPC.
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UK'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
      * Record Exist?
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UA'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UA'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0062                         CIR Resource No
     C                   END                                                    *FI
      * Set Product ID - Purchs Item.  add SK to the mix
      * CASE: *OTHERWISE
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WABKC7        WL0071                         Ship To Custome
     C                   Z-ADD     YL0040        WL0072                         Item Code
     C                   EXSR      SRRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0073        YL0063                         CIR Resource No
     C                   MOVEL(P)  WL0074        YL0064                         CIR Resource No
      * If Purchaser Item 'PI' Not Found Try Customer Item Ref for EDI Fi
      * CASE: LCL.CIR Resource No Type is Purchaser Item Code
     C                   IF        YL0064 = 'PI'
     C                   ELSE
      * CASE: *OTHERWISE
      * Note: Trading Partner derived from BTC# & not STC#.
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'PI'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'PI'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
      * Try with SKU                   2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'SK'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'SK'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
      * Try with IN                    2/1/2021
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'IN'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'IN'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
      * Try with CB                                  W107438 DN 09/02/22
      * CASE: LCL.CIR Resource No is Not Entered
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'CB'
      * Move input parameters to subroutine local variables.
     C                   IF        YL0063 = ' '
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'CB'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0063                         CIR Resource No
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Set Shelf Life Date.
      * CASE: *OTHERWISE
      * R17040 DN 03/09/21-Changed to Get Also Whse State Code.
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0046        WL0075                         Warehouse Code
     C                   EXSR      SSRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0076        YL0065                         State Code
     C                   MOVEL(P)  WL0077        YL0066                         Warehouse Type
      * Fresh or Frozen?
      * CASE: LCL.Warehouse Type is Fresh
      * Hard coding 7 days here.
      * LCL.Shelf Life Date USR = LCL.Production Date + CON.7 *DAYS
     C                   IF        YL0066 = 'FR'
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     7             XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   ELSE
      * CASE: *OTHERWISE
      * Must be Frozen.
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0078                         Item Code
     C                   EXSR      STRVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0079        YL0068                         ISLU First Noti
      * Item Found Else Use 120 Days.
      * CASE: PGM.*Return code is *Normal
     C                   IF        W0RTN = ' '
     C                   ELSE
      * CASE: *OTHERWISE
      * Hard coding 120 days here.
     C                   Z-ADD     120           YL0068                         ISLU First Noti
     C                   END                                                    *FI
      * LCL.Shelf Life Date USR = LCL.Production Date + LCL.ISLU First No
     C     YL0057        ADD       1000000       XDINDT
     C                   EXSR      XCVTA
     C                   Z-ADD     XDAY1         XDAY2
     C                   Z-ADD     YL0068        XDURR
     C                   MOVEL     '1'           XDSEL
     C                   MOVEL     '1111111'     XDCDW
     C                   EXSR      XDOWS
     C                   EXSR      XDADY
     C                   EXSR      XCVFA
     C                   IF        XDINDT < 010101 OR
     C                             XDINDT > 4000000
     C                   Z-ADD     *ZERO         YL0067
     C                   ELSE
     C     XDINDT        SUB       1000000       YL0067
     C                   END
     C                   END                                                    *FI
      * LCL.Shelf Life Date D8# USR = LCL.Shelf Life Date USR
     C                   IF        YL0067 = *ZERO
     C                   Z-ADD     *ZERO         YL0069
     C                   ELSE
     C     YL0067        ADD       19000000      YL0069                         Shelf Life Date
     C                   END
      * LCL.DTM02-Shelf Life Date = LCL.Shelf Life Date D8# USR
     C                   Z-ADD     YL0069        YL0070                         DTM02-Shelf Lif
      * Set LIN/UP UPC Consumer Pckge & GTin 12 Lin02. R17040 DN 3/25/21
      * CASE: *OTHERWISE
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UP'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'UP'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0071                         CIR Resource No
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'EN'
      * Move input parameters to subroutine local variables.
     C                   MOVEL(P)  YL0003        WL0067                         EDI Trading Par
     C                   Z-ADD     YL0040        WL0068                         Item Code
     C                   MOVEL(P)  'EN'          WL0069                         CIR Resource No
     C                   EXSR      SQRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0070        YL0072                         CIR Resource No
      * Get/Set Info for EDI Adv Ship Ntc Tare V2 (ECP145). R17040 DN 03/
      * CASE: *OTHERWISE
      * Get Pallet Tiers & Pallet Blocks if Single Pallet Flag=Y.
      * CASE: LCL.Single Item Pallet Flag is Yes
      * Use 1st Save Item Code for Each Unique Pallet Number.
      * Rtv Component Item Cde RT - Item Bill Of Material  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0036 = 'Y'
     C                   Z-ADD     P1AIC3        WL0176                         Company Number
     C                   Z-ADD     YL0041        WL0177                         Item Code
     C                   EXSR      TARVGN
      * Move subroutine local variables to output parameters.
     C                   Z-ADD     WL0178        YL0112                         Component Item
      * Rtv Pallet Tier/Block RT - Item Default Extension  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0112        WL0179                         Item Code
     C                   EXSR      TBRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0180        YL0113                         IDE Pallet Tier
     C                   MOVEL(P)  WL0181        YL0114                         IDE Pallet Bloc
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0113 = ' '                                 IDE Pallet Tier
     C                   EVAL      YL0114 = ' '                                 IDE Pallet Bloc
     C                   END                                                    *FI
      * Set Packaging Desc Code Based on 1st Item Code for Pallet Number.
      * CASE: *OTHERWISE
      * Rtv Pallet Type 2     RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P1AIC3        WL0182                         Company Number
     C                   Z-ADD     WAC4NB        WL0183                         Order Number
     C                   Z-ADD     YL0041        WL0184                         Item Code
     C                   EXSR      TCRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0185        YL0115                         OD Pallet Type
      * CASE: LCL.OD Pallet Type is CHEP Pallet
      * As of 3/12/21, we don't have a Pallet Type of 'CH' but once we
      * do we may have to revisit this logic, per Rose.
     C                   IF        YL0115 = 'CH'
     C                   EVAL      YL0116 = ' '                                 PKG04 Packaging
     C                   MOVEL     '37'          YL0116                         PKG04 Packaging
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      YL0116 = ' '                                 PKG04 Packaging
     C                   MOVEL     '52'          YL0116                         PKG04 Packaging
     C                   END                                                    *FI
      * Calc Total Unit Count TARE for Pallet Number Break.
      * CASE: *OTHERWISE
      * Rtv Piece Count Itm InfRT - Item Default  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     YL0040        WL0029                         Item Code
     C                   EXSR      SKRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0030        YL0053                         Piece Count Ite
     C                   Z-ADD     WL0031        YL0054                         Pieces Per Bag
     C                   Z-ADD     WL0032        YL0055                         Bags Per Unit
      * Calculate & Accumulate Total Unit Count TARE.
      * CASE: LCL.Piece Count Item is yes
      * Compute: Tot Unt Cnt TARE
      * PAR.Total Unit Count TARE U =
      *    *COMPUTE ((x1 * x2 * x3) + x4)
      * x1    : LCL.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Bags Per Unit
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.Total Case Qty TARE USR
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.Total Unit Count TARE U
     C                   IF        YL0053 = 'Y'
     C     YL0054        MULT      YL0055        W0WD02                         *Synon (17,7) w
     C     W0WD02        MULT      WN0013        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0014        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0014                         Total Unit Coun
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       WN0013        WN0014                         Total Unit Coun
     C                   END                                                    *FI
      * R17040 DN 03/09/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * CASE: LCL.Manifest Pallet Nbr 3PL is Not Zero
      * Crt EDI ASN Dtl V2 NoCDCR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0038 <> 0
     C                   Z-ADD     P2H9NY        WL0080                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0081                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0082                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0083                         Order Number
     C                   MOVEL(P)  YL0043        WL0084                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0085                         Order Sequence
     C                   Z-ADD     WN0015        WL0086                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0087                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0088                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0089                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0090                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0091                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0092                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0093                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0094                         Product ID UPC
     C                   EVAL      WL0095 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0096                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0097                         LIN/UP UPC Cons
     C                   EVAL      WL0098 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0099                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0100                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0101                         GTin 12 Lin02
     C                   EVAL      WL0102 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0103                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0104                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0105                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0106                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0107                         SLN06 Unit Pric
     C                   EVAL      WL0108 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0109                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0110                         SLN12 Prod ID L
     C                   EVAL      WL0111 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0112                         PO402-Pack Size
     C                   EVAL      WL0113 = ' '                                 PO410-Length
     C                   EVAL      WL0114 = ' '                                 PO411-Width
     C                   EVAL      WL0115 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0116                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0117                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0118                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0119                         DTM02-Manuf Dat
     C                   EXSR      SUCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0120                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0121                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0122                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0123                         Order Number
     C                   MOVEL(P)  YL0042        WL0124                         MAN02 Pallet Nb
     C                   Z-ADD     YL0039        WL0125                         Order Sequence
     C                   Z-ADD     WN0015        WL0126                         SN102 Quantity
     C                   MOVEL(P)  YL0051        WL0127                         SN103 Shipped U
     C                   Z-ADD     WN0016        WL0128                         PO406 Net WT Pe
     C                   Z-ADD     WN0017        WL0129                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WL0130                         PO401-Pack
     C                   MOVEL(P)  YL0049        WL0131                         PID05-ITEM DESC
     C                   MOVEL(P)  YL0052        WL0132                         Product ID GTIN
     C                   MOVEL(P)  YL0045        WL0133                         Product ID Manu
     C                   MOVEL(P)  YL0062        WL0134                         Product ID UPC
     C                   EVAL      WL0135 = ' '                                 Product ID UCC-
     C                   MOVEL(P)  YL0063        WL0136                         Product ID - Pu
     C                   MOVEL(P)  YL0071        WL0137                         LIN/UP UPC Cons
     C                   EVAL      WL0138 = ' '                                 W1904 UPC CASE
     C                   MOVEL(P)  'US'          WL0139                         LIN13 Prod ID C
     C                   MOVEL(P)  YL0065        WL0140                         LIN Sub Country
     C                   MOVEL(P)  YL0072        WL0141                         GTin 12 Lin02
     C                   EVAL      WL0142 = ' '                                 SN101 Assigned
     C                   Z-ADD     YL0044        WL0143                         SN105 Quantity
     C                   MOVEL(P)  YL0051        WL0144                         SN106 Ordered U
     C                   Z-ADD     YL0050        WL0145                         SLN06 Unit Pric
     C                   MOVEL(P)  YL0047        WL0146                         SLN07 Unit Pric
     C                   Z-ADD     *ZERO         WL0147                         SLN06 Unit Pric
     C                   EVAL      WL0148 = ' '                                 SLN07 Unit Pric
     C                   MOVEL(P)  @CN(001)      WL0149                         SLN10 Prod ID D
     C                   MOVEL(P)  YL0059        WL0150                         SLN12 Prod ID L
     C                   EVAL      WL0151 = ' '                                 SLN14 Prod ID U
     C                   Z-ADD     YL0056        WL0152                         PO402-Pack Size
     C                   EVAL      WL0153 = ' '                                 PO410-Length
     C                   EVAL      WL0154 = ' '                                 PO411-Width
     C                   EVAL      WL0155 = ' '                                 PO412-Heights
     C                   MOVEL(P)  YL0061        WL0156                         REF02-Batch Lot
     C                   Z-ADD     *ZERO         WL0157                         DTM02-Expiratio
     C                   Z-ADD     YL0070        WL0158                         DTM02-Shelf Lif
     C                   Z-ADD     YL0058        WL0159                         DTM02-Manuf Dat
     C                   Z-ADD     WJAIC3        WL0160                         Company Number
     C                   Z-ADD     YL0037        WL0161                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0162                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0163                         EDI Tare Level
     C                   EXSR      SVCRRC
     C                   END                                                    *FI
      * R17040 DN 03/15/21-Populate New Fields.
      * R17040 DN 05/17/21-Passed in EDI Tare Level Req f/856.
      * CASE: LCL.Manifest Pallet Nbr 3PL is Not Zero
      * Crt EDI ASN Tare V2NoCDCR - EDI Adv Ship Ntc Tare V2  * 
      * Move input parameters to subroutine local variables.
     C                   IF        YL0038 <> 0
     C                   Z-ADD     P2H9NY        WL0186                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0187                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0188                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0189                         Order Number
     C                   MOVEL(P)  YL0043        WL0190                         MAN02 Pallet Nb
     C                   MOVEL(P)  '4'           WL0191                         PAL01 Pallet Ty
     C                   MOVEL(P)  YL0016        WL0192                         TD101-Packaging
     C                   MOVEL(P)  YL0036        WL0193                         Single Item Pal
     C                   MOVEL(P)  YL0113        WL0194                         PAL02 Pallet Ti
     C                   MOVEL(P)  YL0114        WL0195                         PAL03 Pallet Bl
     C                   Z-ADD     WN0009        WL0196                         TD102 Case Quan
     C                   Z-ADD     WN0012        WL0197                         PAL05 Unit Weig
     C                   Z-ADD     WN0010        WL0198                         TD107 Weight-Ne
     C                   Z-ADD     WN0011        WL0199                         TD107 Weight-Gr
     C                   EVAL      WL0200 = ' '                                 PAL15 Pallet Ex
     C                   Z-ADD     WN0014        WL0201                         Unit Count Tare
     C                   MOVEL(P)  YL0116        WL0202                         PKG04 Packaging
     C                   EXSR      TDCRRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Crt EDI ASN Tare V2   CR - EDI Adv Ship Ntc Tare V2  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     P2H9NY        WL0203                         EDI SURROGATE N
     C                   Z-ADD     P1RMNB        WL0204                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WABCNA        WL0205                         PRF01-Customer
     C                   Z-ADD     WJC4NB        WL0206                         Order Number
     C                   MOVEL(P)  YL0042        WL0207                         MAN02 Pallet Nb
     C                   MOVEL(P)  '4'           WL0208                         PAL01 Pallet Ty
     C                   MOVEL(P)  YL0016        WL0209                         TD101-Packaging
     C                   MOVEL(P)  YL0036        WL0210                         Single Item Pal
     C                   MOVEL(P)  YL0113        WL0211                         PAL02 Pallet Ti
     C                   MOVEL(P)  YL0114        WL0212                         PAL03 Pallet Bl
     C                   Z-ADD     WN0009        WL0213                         TD102 Case Quan
     C                   Z-ADD     WN0012        WL0214                         PAL05 Unit Weig
     C                   Z-ADD     WN0010        WL0215                         TD107 Weight-Ne
     C                   Z-ADD     WN0011        WL0216                         TD107 Weight-Gr
     C                   EVAL      WL0217 = ' '                                 PAL15 Pallet Ex
     C                   Z-ADD     WN0014        WL0218                         Unit Count Tare
     C                   MOVEL(P)  YL0116        WL0219                         PKG04 Packaging
     C                   Z-ADD     WJAIC3        WL0220                         Company Number
     C                   Z-ADD     YL0037        WL0221                         Manifest Pallet
     C                   MOVEL(P)  P2KESC        WL0222                         Set EDI 856 Pal
     C                   MOVEL(P)  YL0002        WL0223                         EDI Tare Level
     C                   EXSR      TECRRC
     C                   END                                                    *FI
      * Adjust QTY Ordered If Needed.
      * CASE: *OTHERWISE
      * Process will ensure ECP140 Qty Ordered matches Order Detail
      * Qty Ordered.
      * UPD EDI 856 ASN ECP140 RT - Order Detail  * 
     C                   EXSR      TFRVGN
     C                   END                                                    *FI
      *================================================================
     CSR   SMEXIT        ENDSR
      /EJECT
     CSR   SNRVGN        BEGSR
      *================================================================
      * Rtv for EDI 856 ASN   RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0056 = ' '                                 Warehouse Code
     C                   EVAL      WL0057 = ' '                                 U_M_Base Price
     C                   EVAL      WL0058 = ' '                                 U_M_Ordered
     C                   EVAL      WL0059 = ' '                                 Order Desc_Line
     C                   Z-ADD     *ZERO         WL0060                         Unit Price
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSN         KLIST
     C                   KFLD                    WQSN01                         Company Number
     C                   KFLD                    WQSN02                         Order Number
     C                   KFLD                    WQSN03                         Order Sequence
      * Setup key
     C                   Z-ADD     WL0053        WQSN01                         Company Number
     C                   Z-ADD     WL0054        WQSN02                         Order Number
     C                   Z-ADD     WL0055        WQSN03                         Order Sequence
      * Establish starting position
     C     KRSSN         SETLL     @BGWKL1                                      *
     C     KRSSN         READE     @BGWKL1                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     WKAJCD        WL0056                         Warehouse Code
     C                   MOVEL     WKCRCD        WL0057                         U_M_Base Price
     C                   MOVEL     WKAGCD        WL0058                         U_M_Ordered
     C                   MOVEL     WKG7NA        WL0059                         Order Desc_Line
     C                   Z-ADD     WKAKPR        WL0060                         Unit Price
     C     KRSSN         READE     @BGWKL1                                90    *
     C                   ENDDO
      *================================================================
     CSR   SNEXIT        ENDSR
      /EJECT
     CSR   SORVGN        BEGSR
      *================================================================
      * Rtv GTIN              RT - Item Default Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSO         KLIST
     C                   KFLD                    WLHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0061        WLHGCD                         Item Code
      * Establish starting position
     C     KRSSO         CHAIN     @BTRETK                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR4745'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      WL0062 = ' '                                 IDE GTIN
     C                   GOTO      SOEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WLCUU1        WL0062                         IDE GTIN
     C                   ENDIF
      *================================================================
     CSR   SOEXIT        ENDSR
      /EJECT
     CSR   SPRVGN        BEGSR
      *================================================================
      * RTV Oldest Prod Date   RT - Manifest Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSP         KLIST
     C                   KFLD                    WQSP01                         Company Number
     C                   KFLD                    WQSP02                         Order Number
     C                   KFLD                    WQSP03                         Item Code
      * Setup key
     C                   Z-ADD     WL0063        WQSP01                         Company Number
     C                   Z-ADD     WL0064        WQSP02                         Order Number
     C                   Z-ADD     WL0065        WQSP03                         Item Code
      * Establish starting position
     C     KRSSP         SETLL     @FNCPXH                                      *
     C     KRSSP         READE     @FNCPXH                                90    *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR1196'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0066                         Production Date
     C                   GOTO      SPEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * CASE: DB1.Case Quantity is GT *ZERO
     C                   DOW       NOT *IN90
      * PAR = DB1 By name
     C                   IF        WMFOQT > 0
     C                   Z-ADD     WMELDT        WL0066                         Production Date
     C                   GOTO      SPEXIT                                       *QUIT
     C                   END                                                    *FI
     C     KRSSP         READE     @FNCPXH                                90    *
     C                   ENDDO
      *================================================================
     CSR   SPEXIT        ENDSR
      /EJECT
     CSR   SQRVGN        BEGSR
      *================================================================
      * Rtv Resource No       RT - Customer Item Ref for EDI  * By 'UK'
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0070 = ' '                                 CIR Resource No
      * Define keylist
     C     KRSSQ         KLIST
     C                   KFLD                    WOJ5NX                         EDI Trading Par
     C                   KFLD                    WOHGCD                         Item Code
     C                   KFLD                    WOLDSX                         CIR Resource No
      * Setup key
     C                   MOVEL     WL0067        WOJ5NX                         EDI Trading Par
     C                   Z-ADD     WL0068        WOHGCD                         Item Code
     C                   MOVEL     WL0069        WOLDSX                         CIR Resource No
      * Establish starting position
     C     KRSSQ         CHAIN     @BQREF3                            90        *
      * Data record not found
     C   90              MOVEL     'USR5150'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WOCOAA        WL0070                         CIR Resource No
     C                   ENDIF
      *================================================================
     CSR   SQEXIT        ENDSR
      /EJECT
     CSR   SRRVGN        BEGSR
      *================================================================
      * Rtv Resource No & Type RT - Customer Item Reference  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0073 = ' '                                 CIR Resource No
     C                   EVAL      WL0074 = ' '                                 CIR Resource No
      * Define keylist
     C     KRSSR         KLIST
     C                   KFLD                    WRBKC7                         Ship To Custome
     C                   KFLD                    WRHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0071        WRBKC7                         Ship To Custome
     C                   Z-ADD     WL0072        WRHGCD                         Item Code
      * Establish starting position
     C     KRSSR         CHAIN     @BIREKY                            90        *
      * Data record not found
     C   90              MOVEL     'USR3081'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WRCOAA        WL0073                         CIR Resource No
     C                   MOVEL     WRLDSX        WL0074                         CIR Resource No
     C                   ENDIF
      *================================================================
     CSR   SREXIT        ENDSR
      /EJECT
     CSR   SSRVGN        BEGSR
      *================================================================
      * RTV for EDI 856 ASN   RT - Warehouse  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0076 = ' '                                 State Code
     C                   EVAL      WL0077 = ' '                                 Warehouse Type
      * Define keylist
     C     KRSSS         KLIST
     C                   KFLD                    WDAJCD                         Warehouse Code
      * Setup key
     C                   MOVEL     WL0075        WDAJCD                         Warehouse Code
      * Establish starting position
     C     KRSSS         CHAIN     @ADREAO                            90        *
      * Data record not found
     C   90              MOVEL     'USR0007'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WDBGCD        WL0076                         State Code
     C                   MOVEL     WDWPST        WL0077                         Warehouse Type
     C                   ENDIF
      *================================================================
     CSR   SSEXIT        ENDSR
      /EJECT
     CSR   STRVGN        BEGSR
      *================================================================
      * Rtv First Notice Val   RT - Item Shelf Life Upload  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0079                         ISLU First Noti
      * Declare restrictor key work fields
      * Define keylist
     C     KRSST         KLIST
     C                   KFLD                    WQST01                         Item Code
      * Setup key
     C                   Z-ADD     WL0078        WQST01                         Item Code
      * Establish starting position
     C     KRSST         SETLL     @BRREGE                                      *
     C     KRSST         READE     @BRREGE                                90    *
      * Data record not found
     C   90              MOVEL     'USR5155'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   Z-ADD     WSEXNZ        WL0079                         ISLU First Noti
     C                   GOTO      STEXIT                                       *QUIT
     C     KRSST         READE     @BRREGE                                90    *
     C                   ENDDO
      *================================================================
     CSR   STEXIT        ENDSR
      /EJECT
     CSR   SUCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Dtl V2 NoCDCR - EDI Adv Ship Ntc Dtl V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BMCPFN
     C                   Z-ADD     WL0080        WTH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0081        WTQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0082        WTTFNA                         PRF01-Customer
     C                   Z-ADD     WL0083        WTC4NB                         Order Number
     C                   MOVEL     WL0084        WTJJU1                         MAN02 Pallet Nb
     C                   Z-ADD     WL0085        WTDPNB                         Order Sequence
     C                   Z-ADD     WL0086        WTQ7NY                         SN102 Quantity
     C                   MOVEL     WL0087        WTZEAA                         SN103 Shipped U
     C                   Z-ADD     WL0088        WTETNZ                         PO406 Net WT Pe
     C                   Z-ADD     WL0089        WTQ8NY                         PO406 Gross WT
     C                   Z-ADD     WL0090        WTTCNY                         PO401-Pack
     C                   MOVEL     WL0091        WTLET1                         PID05-ITEM DESC
     C                   MOVEL     WL0092        WTNEU1                         Product ID GTIN
     C                   MOVEL     WL0093        WTNFU1                         Product ID Manu
     C                   MOVEL     WL0094        WTNGU1                         Product ID UPC
     C                   MOVEL     WL0095        WTNHU1                         Product ID UCC-
     C                   MOVEL     WL0096        WTNWU1                         Product ID - Pu
     C                   MOVEL     WL0097        WTQBU1                         LIN/UP UPC Cons
     C                   MOVEL     WL0098        WTHVU1                         W1904 UPC CASE
     C                   MOVEL     WL0099        WTNCU1                         LIN13 Prod ID C
     C                   MOVEL     WL0100        WTAGAB                         LIN Sub Country
     C                   MOVEL     WL0101        WTQCU1                         GTin 12 Lin02
     C                   MOVEL     WL0102        WTNDU1                         SN101 Assigned
     C                   Z-ADD     WL0103        WTEINZ                         SN105 Quantity
     C                   MOVEL     WL0104        WTYWAA                         SN106 Ordered U
     C                   Z-ADD     WL0105        WTHZPR                         SLN06 Unit Pric
     C                   MOVEL     WL0106        WTYZAA                         SLN07 Unit Pric
     C                   Z-ADD     WL0107        WTH0PR                         SLN06 Unit Pric
     C                   MOVEL     WL0108        WTY0AA                         SLN07 Unit Pric
     C                   MOVEL     WL0109        WTNIU1                         SLN10 Prod ID D
     C                   MOVEL     WL0110        WTNJU1                         SLN12 Prod ID L
     C                   MOVEL     WL0111        WTNKU1                         SLN14 Prod ID U
     C                   Z-ADD     WL0112        WTTDNY                         PO402-Pack Size
     C                   MOVEL     WL0113        WTNLU1                         PO410-Length
     C                   MOVEL     WL0114        WTNMU1                         PO411-Width
     C                   MOVEL     WL0115        WTNNU1                         PO412-Heights
     C                   MOVEL     WL0116        WTNPU1                         REF02-Batch Lot
     C                   Z-ADD     WL0117        WTEJNZ                         DTM02-Expiratio
     C                   Z-ADD     WL0118        WTEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     WL0119        WTELNZ                         DTM02-Manuf Dat
      *
     C     KLCRSU        KLIST
     C                   KFLD                    WTH9NY                         EDI SURROGATE N
     C                   KFLD                    WTQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WTTFNA                         PRF01-Customer
     C                   KFLD                    WTC4NB                         Order Number
     C                   KFLD                    WTJJU1                         MAN02 Pallet Nb
     C                   KFLD                    WTDPNB                         Order Sequence
      * Check for duplicate primary key
     C     KLCRSU        SETLL     @BMCPFN                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5140'     W0RTN
      * Send message 'EDI Adv Ship Ntc Dtl V EX'
     C                   MOVEL     'USR5140'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SUEXIT
     C                   ENDIF
      *
     C                   WRITE     @BMCPFN                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SUEXIT        ENDSR
      /EJECT
     CSR   SVCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Dtl V2    CR - EDI Adv Ship Ntc Dtl V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BMCPFN
     C                   Z-ADD     WL0120        WTH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0121        WTQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0122        WTTFNA                         PRF01-Customer
     C                   Z-ADD     WL0123        WTC4NB                         Order Number
     C                   MOVEL     WL0124        WTJJU1                         MAN02 Pallet Nb
     C                   Z-ADD     WL0125        WTDPNB                         Order Sequence
     C                   Z-ADD     WL0126        WTQ7NY                         SN102 Quantity
     C                   MOVEL     WL0127        WTZEAA                         SN103 Shipped U
     C                   Z-ADD     WL0128        WTETNZ                         PO406 Net WT Pe
     C                   Z-ADD     WL0129        WTQ8NY                         PO406 Gross WT
     C                   Z-ADD     WL0130        WTTCNY                         PO401-Pack
     C                   MOVEL     WL0131        WTLET1                         PID05-ITEM DESC
     C                   MOVEL     WL0132        WTNEU1                         Product ID GTIN
     C                   MOVEL     WL0133        WTNFU1                         Product ID Manu
     C                   MOVEL     WL0134        WTNGU1                         Product ID UPC
     C                   MOVEL     WL0135        WTNHU1                         Product ID UCC-
     C                   MOVEL     WL0136        WTNWU1                         Product ID - Pu
     C                   MOVEL     WL0137        WTQBU1                         LIN/UP UPC Cons
     C                   MOVEL     WL0138        WTHVU1                         W1904 UPC CASE
     C                   MOVEL     WL0139        WTNCU1                         LIN13 Prod ID C
     C                   MOVEL     WL0140        WTAGAB                         LIN Sub Country
     C                   MOVEL     WL0141        WTQCU1                         GTin 12 Lin02
     C                   MOVEL     WL0142        WTNDU1                         SN101 Assigned
     C                   Z-ADD     WL0143        WTEINZ                         SN105 Quantity
     C                   MOVEL     WL0144        WTYWAA                         SN106 Ordered U
     C                   Z-ADD     WL0145        WTHZPR                         SLN06 Unit Pric
     C                   MOVEL     WL0146        WTYZAA                         SLN07 Unit Pric
     C                   Z-ADD     WL0147        WTH0PR                         SLN06 Unit Pric
     C                   MOVEL     WL0148        WTY0AA                         SLN07 Unit Pric
     C                   MOVEL     WL0149        WTNIU1                         SLN10 Prod ID D
     C                   MOVEL     WL0150        WTNJU1                         SLN12 Prod ID L
     C                   MOVEL     WL0151        WTNKU1                         SLN14 Prod ID U
     C                   Z-ADD     WL0152        WTTDNY                         PO402-Pack Size
     C                   MOVEL     WL0153        WTNLU1                         PO410-Length
     C                   MOVEL     WL0154        WTNMU1                         PO411-Width
     C                   MOVEL     WL0155        WTNNU1                         PO412-Heights
     C                   MOVEL     WL0156        WTNPU1                         REF02-Batch Lot
     C                   Z-ADD     WL0157        WTEJNZ                         DTM02-Expiratio
     C                   Z-ADD     WL0158        WTEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     WL0159        WTELNZ                         DTM02-Manuf Dat
      *
      * USER: Processing before Data update
      * Set All Pallet ID=1 If Flag=Yes Else Use Check Digit.
      * CASE: PAR.Set EDI 856 Pallet ID=1 U is Yes
     C                   IF        WL0162 = 'Y'
     C                   EVAL      WTJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           WTJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Manifest Pallet Number is Not Entered
      * R17040 DN 05/17/21-Commented Out & Moved Below.
      * R17040 DN 05/17/21-Set MAN02 Pallet Nb/Container based on EDI Tar
      * CASE: PAR.EDI Tare Level Req f/856 is Yes
     C                   IF        WL0161 = 0
     C                   IF        WL0163 = 'Y'
     C                   EVAL      WTJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     @CN(002)      WTJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      WTJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           WTJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Calculate Check Digit Logic to Set Pallet ID #.
      *
     C                   Z-ADD     *ZERO         WN0024                         SUM Val for Odd
     C                   Z-ADD     *ZERO         WN0025                         SUM Val for Eve
      *
      * Get Calc Check Digit  IF
     C                   Z-ADD     *ZERO         YL0073                         W0407 Pallet Nu
      * SUM Up Odd & Even # Positions for Federal Tax ID.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Federal Tax ID.
      * CASE: *OTHERWISE
      * RTV Federal Tax ID    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WL0160        WL0164                         Company Number
     C                   EXSR      SWRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0165        YL0074                         Federal Tax Id
     C                   Z-ADD     7             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00020 OR
     C                             ZQ > 00020
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0075                 90      Text 7 Alpha Us
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     '1'           CAT(P)    YL0075:ZQ     YL0076                         Federal Tax ID
      * Position 1 will always be 1.
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0077                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0078                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0079                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0080                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0081                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0082                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0083                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0084                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0077        YL0085                         Federal Tax ID-
     C                   MOVE      YL0078        YL0086                         Federal Tax ID-
     C                   MOVE      YL0079        YL0087                         Federal Tax ID-
     C                   MOVE      YL0080        YL0088                         Federal Tax ID-
     C                   MOVE      YL0081        YL0089                         Federal Tax ID-
     C                   MOVE      YL0082        YL0090                         Federal Tax ID-
     C                   MOVE      YL0083        YL0091                         Federal Tax ID-
     C                   MOVE      YL0084        YL0092                         Federal Tax ID-
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos7 Nbr
     C     YL0085        ADD       YL0087        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0089        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0091        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0024                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos8 Nbr
     C     YL0086        ADD       YL0088        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0090        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0092        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0025                         SUM Val for Eve
      * SUM Up Odd & Even # Positions for Pallet Number.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Pallet Number.
      * CASE: *OTHERWISE
     C                   MOVEL     WL0161        YL0093                         Manifest Pallet
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0077                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0078                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0079                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0080                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0081                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0082                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0083                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0084                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     9             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0094                 90      Position 9 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0077        YL0095                         Manifest Pallet
     C                   MOVE      YL0078        YL0096                         Manifest Pallet
     C                   MOVE      YL0079        YL0097                         Manifest Pallet
     C                   MOVE      YL0080        YL0098                         Manifest Pallet
     C                   MOVE      YL0081        YL0099                         Manifest Pallet
     C                   MOVE      YL0082        YL0100                         Manifest Pallet
     C                   MOVE      YL0083        YL0101                         Manifest Pallet
     C                   MOVE      YL0084        YL0102                         Manifest Pallet
     C                   MOVE      YL0094        YL0103                         Manifest Pallet
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.SUM Val for Odd # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos7 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x6    : LCL.Manifest Pallet#-Pos9 Nbr
     C     WN0024        ADD       YL0095        W0WD04                         *Synon (17,7) w
     C     W0WD04        ADD       YL0097        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0099        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0101        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0103        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0024                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5)
      * x1    : PAR.SUM Val for Even # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos8 Nbr
     C     WN0025        ADD       YL0096        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0098        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0100        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0102        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0025                         SUM Val for Eve
      * Calculated Check Digit Number.
      * CASE: *OTHERWISE
      * Calculated Value
      * LCL.Calc Value USR =
      *    *COMPUTE ((x1 * x2) + x3)
      * x1    : PAR.SUM Val for Odd # Pos
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.3
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.SUM Val for Even # Pos
     C     WN0024        MULT      3             W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0025        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        YL0104                         Calc Value USR
     C                   Z-ADD     YL0104        YL0105                         Calc Value Last
     C     10            SUB       YL0105        YL0106                         Calc Check Digi
      * Format W0407 Pallet Number for Output.
      * CASE: *OTHERWISE
     C                   MOVEL     YL0106        YL0107                         Calc Check Digi
     C                   Z-ADD     *ZERO         ZQ
     C     '00'          CAT(P)    YL0076:ZQ     YL0108                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0108        CAT(P)    YL0093:ZQ     YL0108                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0108        CAT(P)    YL0107:ZQ     YL0108                         W0407 Pallet Nu
     C                   MOVE      YL0108        YL0073                         W0407 Pallet Nu
     C                   EVAL      WTJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     YL0073        WTJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KLCRSV        KLIST
     C                   KFLD                    WTH9NY                         EDI SURROGATE N
     C                   KFLD                    WTQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WTTFNA                         PRF01-Customer
     C                   KFLD                    WTC4NB                         Order Number
     C                   KFLD                    WTJJU1                         MAN02 Pallet Nb
     C                   KFLD                    WTDPNB                         Order Sequence
      * Check for duplicate primary key
     C     KLCRSV        SETLL     @BMCPFN                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5140'     W0RTN
      * Send message 'EDI Adv Ship Ntc Dtl V EX'
     C                   MOVEL     'USR5140'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      SVEXIT
     C                   ENDIF
      *
     C                   WRITE     @BMCPFN                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SVEXIT        ENDSR
      /EJECT
     CSR   SWRVGN        BEGSR
      *================================================================
      * RTV Federal Tax ID    RT - Company Name and Address  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0165 = ' '                                 Federal Tax Id
      * Define keylist
     C     KRSSW         KLIST
     C                   KFLD                    WVAIC3                         Company Number
      * Setup key
     C                   Z-ADD     WL0164        WVAIC3                         Company Number
      * Establish starting position
     C     KRSSW         CHAIN     @ABREAK                            90        *
      * Data record not found
     C   90              MOVEL     'USR0003'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WVA2NA        WL0165                         Federal Tax Id
     C                   ENDIF
      *================================================================
     CSR   SWEXIT        ENDSR
      /EJECT
     CSR   SXRVGN        BEGSR
      *================================================================
      * Rtv Tare Weight        RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSX         KLIST
     C                   KFLD                    WWAIC3                         Company Number
     C                   KFLD                    WWHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0166        WWAIC3                         Company Number
     C                   Z-ADD     WL0167        WWHGCD                         Item Code
      * Establish starting position
     C     KRSSX         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SXEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WWAVNA        WL0168                         Description Lin
     C                   Z-ADD     WWA3WG        WL0169                         Misc Tare Weigh
     C                   EVAL      W0RTN = ' '                                  *Return code
     C                   ENDIF
      *================================================================
     CSR   SXEXIT        ENDSR
      /EJECT
     CSR   SYRVGN        BEGSR
      *================================================================
      * RTV Itm BxID & Tares  RT - Item Bill Of Material  * 
      *================================================================
      *
     C                   EVAL      WN0031 = ' '                                 Item Type Code
     C                   EVAL      WN0032 = ' '                                 Package Type Co
     C                   Z-ADD     *ZERO         WN0033                         Unit Weight USR
      *
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
     C                   Z-ADD     *ZERO         WL0172                         Unit Weight
     C                   Z-ADD     *ZERO         WL0174                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WL0173                         Number Cases On
     C                   Z-ADD     *ZERO         WL0175                         Box iD
      * Declare restrictor key work fields
      * Define keylist
     C     KRSSY         KLIST
     C                   KFLD                    WQSY01                         Company Number
     C                   KFLD                    WQSY02                         Item Code
      * Setup key
     C                   Z-ADD     WL0170        WQSY01                         Company Number
     C                   Z-ADD     WL0171        WQSY02                         Item Code
      * Establish starting position
     C     KRSSY         SETLL     @IORETI                                      *
     C     KRSSY         READE     @IORETI                                90    *
      * Data record not found
     C   90              MOVEL     'USR1679'     W0RTN
      * USER: Process Data record
     C                   DOW       NOT *IN90
     C                   Z-ADD     *ZERO         WL0172                         Unit Weight
      * RTV Typ/Pk/UntWgt/Plt RT - Company Item  * 
     C                   EXSR      SZRVGN
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Type Code is Packaging and Supplies
      *   |- c2    : PAR.Package Type Code is Box
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        WN0031 = 'PS'
     C                   IF        WN0032 = 'B'
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     WXC9NB        WL0175                         Box iD
     C                   GOTO      SYEXIT                                       *QUIT
     C                   ELSE
      * CASE: *OTHERWISE
     C                   Z-ADD     *ZERO         WL0172                         Unit Weight
     C                   END                                                    *FI
     C     KRSSY         READE     @IORETI                                90    *
     C                   ENDDO
      *================================================================
     CSR   SYEXIT        ENDSR
      /EJECT
     CSR   SZRVGN        BEGSR
      *================================================================
      * RTV Typ/Pk/UntWgt/Plt RT - Company Item  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSZ         KLIST
     C                   KFLD                    WWAIC3                         Company Number
     C                   KFLD                    WWHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WXAIC3        WWAIC3                         Company Number
     C                   Z-ADD     WXC9NB        WWHGCD                         Item Code
      * Establish starting position
     C     KRSSZ         CHAIN     @BZREJU                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'USR0326'     W0RTN
      * USER: Processing if Data record not found
     C                   MOVEL     'Y2U0005'     W0RTN                          *Return code
     C                   GOTO      SZEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   Z-ADD     WWAIWG        WL0172                         Unit Weight
     C                   Z-ADD     WWURTN        WL0173                         Number Cases On
     C                   MOVEL     WWN0CD        WN0031                         Item Type Code
     C                   MOVEL     WWX4ST        WN0032                         Package Type Co
     C                   Z-ADD     WWSFNB        WL0174                         Pallet Tare Wei
     C                   EVAL      W0RTN = ' '                                  *Return code
     C                   ENDIF
      *================================================================
     CSR   SZEXIT        ENDSR
      /EJECT
     CSR   TARVGN        BEGSR
      *================================================================
      * Rtv Component Item Cde RT - Item Bill Of Material  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   Z-ADD     *ZERO         WL0178                         Component Item
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTA         KLIST
     C                   KFLD                    WQTA01                         Company Number
     C                   KFLD                    WQTA02                         Item Code
      * Setup key
     C                   Z-ADD     WL0176        WQTA01                         Company Number
     C                   Z-ADD     WL0177        WQTA02                         Item Code
      * Establish starting position
     C     KRSTA         SETLL     @IOREIB                                      *
     C     KRSTA         READE     @IOREIB                                90    *
      * Data record not found
     C   90              MOVEL     'USR1679'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   Z-ADD     WYC9NB        WL0178                         Component Item
     C                   GOTO      TAEXIT                                       *QUIT
     C     KRSTA         READE     @IOREIB                                90    *
     C                   ENDDO
      *================================================================
     CSR   TAEXIT        ENDSR
      /EJECT
     CSR   TBRVGN        BEGSR
      *================================================================
      * Rtv Pallet Tier/Block RT - Item Default Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0180 = ' '                                 IDE Pallet Tier
     C                   EVAL      WL0181 = ' '                                 IDE Pallet Bloc
      * Define keylist
     C     KRSTB         KLIST
     C                   KFLD                    WLHGCD                         Item Code
      * Setup key
     C                   Z-ADD     WL0179        WLHGCD                         Item Code
      * Establish starting position
     C     KRSTB         CHAIN     @BTRETK                            90        *
      * Data record not found
     C   90              MOVEL     'USR4745'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     WLARSC        WL0180                         IDE Pallet Tier
     C                   MOVEL     WLASSC        WL0181                         IDE Pallet Bloc
     C                   ENDIF
      *================================================================
     CSR   TBEXIT        ENDSR
      /EJECT
     CSR   TCRVGN        BEGSR
      *================================================================
      * Rtv Pallet Type 2     RT - Order Detail  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * USER: Initialize routine
      * PAR = CON By name
     C                   EVAL      WL0185 = ' '                                 OD Pallet Type
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTC         KLIST
     C                   KFLD                    WQTC01                         Company Number
     C                   KFLD                    WQTC02                         Order Number
     C                   KFLD                    WQTC03                         Item Code
      * Setup key
     C                   Z-ADD     WL0182        WQTC01                         Company Number
     C                   Z-ADD     WL0183        WQTC02                         Order Number
     C                   Z-ADD     WL0184        WQTC03                         Item Code
      * Establish starting position
     C     KRSTC         SETLL     @BGWKFW                                      *
     C     KRSTC         READE     @BGWKFW                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * PAR = DB1 By name
     C                   DOW       NOT *IN90
     C                   MOVEL     TAF5SX        WL0185                         OD Pallet Type
     C                   GOTO      TCEXIT                                       *QUIT
     C     KRSTC         READE     @BGWKFW                                90    *
     C                   ENDDO
      *================================================================
     CSR   TCEXIT        ENDSR
      /EJECT
     CSR   TDCRRC        BEGSR
      *================================================================
      * Crt EDI ASN Tare V2NoCDCR - EDI Adv Ship Ntc Tare V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BJCPFD
     C                   Z-ADD     WL0186        TBH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0187        TBQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0188        TBTFNA                         PRF01-Customer
     C                   Z-ADD     WL0189        TBC4NB                         Order Number
     C                   MOVEL     WL0190        TBJJU1                         MAN02 Pallet Nb
     C                   MOVEL     WL0191        TBYLAA                         PAL01 Pallet Ty
     C                   MOVEL     WL0192        TBYIAA                         TD101-Packaging
     C                   MOVEL     WL0193        TBP9U1                         Single Item Pal
     C                   MOVEL     WL0194        TBYMAA                         PAL02 Pallet Ti
     C                   MOVEL     WL0195        TBYNAA                         PAL03 Pallet Bl
     C                   Z-ADD     WL0196        TBD9NZ                         TD102 Case Quan
     C                   Z-ADD     WL0197        TBEBNZ                         PAL05 Unit Weig
     C                   Z-ADD     WL0198        TBEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     WL0199        TBENNZ                         TD107 Weight-Gr
     C                   MOVEL     WL0200        TBYPAA                         PAL15 Pallet Ex
     C                   Z-ADD     WL0201        TBFKNZ                         Unit Count Tare
     C                   MOVEL     WL0202        TBQAU1                         PKG04 Packaging
      *
     C     KLCRTD        KLIST
     C                   KFLD                    TBH9NY                         EDI SURROGATE N
     C                   KFLD                    TBQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    TBTFNA                         PRF01-Customer
     C                   KFLD                    TBC4NB                         Order Number
     C                   KFLD                    TBJJU1                         MAN02 Pallet Nb
      * Check for duplicate primary key
     C     KLCRTD        SETLL     @BJCPFD                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5134'     W0RTN
      * Send message 'EDI Adv Ship Ntc Tare  EX'
     C                   MOVEL     'USR5134'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      TDEXIT
     C                   ENDIF
      *
     C                   WRITE     @BJCPFD                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   TDEXIT        ENDSR
      /EJECT
     CSR   TECRRC        BEGSR
      *================================================================
      * Crt EDI ASN Tare V2   CR - EDI Adv Ship Ntc Tare V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Move all fields to @BJCPFD
     C                   Z-ADD     WL0203        TBH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0204        TBQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL     WL0205        TBTFNA                         PRF01-Customer
     C                   Z-ADD     WL0206        TBC4NB                         Order Number
     C                   MOVEL     WL0207        TBJJU1                         MAN02 Pallet Nb
     C                   MOVEL     WL0208        TBYLAA                         PAL01 Pallet Ty
     C                   MOVEL     WL0209        TBYIAA                         TD101-Packaging
     C                   MOVEL     WL0210        TBP9U1                         Single Item Pal
     C                   MOVEL     WL0211        TBYMAA                         PAL02 Pallet Ti
     C                   MOVEL     WL0212        TBYNAA                         PAL03 Pallet Bl
     C                   Z-ADD     WL0213        TBD9NZ                         TD102 Case Quan
     C                   Z-ADD     WL0214        TBEBNZ                         PAL05 Unit Weig
     C                   Z-ADD     WL0215        TBEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     WL0216        TBENNZ                         TD107 Weight-Gr
     C                   MOVEL     WL0217        TBYPAA                         PAL15 Pallet Ex
     C                   Z-ADD     WL0218        TBFKNZ                         Unit Count Tare
     C                   MOVEL     WL0219        TBQAU1                         PKG04 Packaging
      *
      * USER: Processing before Data update
      * Set All Pallet ID=1 If Flag=Yes Else Use Check Digit.
      * CASE: PAR.Set EDI 856 Pallet ID=1 U is Yes
     C                   IF        WL0222 = 'Y'
     C                   EVAL      TBJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           TBJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.Manifest Pallet Number is Not Entered
      * R17040 DN 05/17/21-Commented Out & Moved Below.
      * R17040 DN 05/17/21-Set MAN02 Pallet Nb/Container based on EDI Tar
      * CASE: PAR.EDI Tare Level Req f/856 is Yes
     C                   IF        WL0221 = 0
     C                   IF        WL0223 = 'Y'
     C                   EVAL      TBJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     @CN(002)      TBJJU1                         MAN02 Pallet Nb
     C                   ELSE
      * CASE: *OTHERWISE
     C                   EVAL      TBJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     '1'           TBJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   ELSE
      * CASE: *OTHERWISE
      * Calculate Check Digit Logic to Set Pallet ID #.
      *
     C                   Z-ADD     *ZERO         WN0039                         SUM Val for Odd
     C                   Z-ADD     *ZERO         WN0040                         SUM Val for Eve
      *
      * Get Calc Check Digit  IF
     C                   Z-ADD     *ZERO         YL0117                         W0407 Pallet Nu
      * SUM Up Odd & Even # Positions for Federal Tax ID.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Federal Tax ID.
      * CASE: *OTHERWISE
      * RTV Federal Tax ID    RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     WL0220        WL0164                         Company Number
     C                   EXSR      SWRVGN
      * Move subroutine local variables to output parameters.
     C                   MOVEL(P)  WL0165        YL0074                         Federal Tax Id
     C                   Z-ADD     7             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00020 OR
     C                             ZQ > 00020
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0074:ZQ     YL0075                 90      Text 7 Alpha Us
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     *ZERO         ZQ
     C     '1'           CAT(P)    YL0075:ZQ     YL0076                         Federal Tax ID
      * Position 1 will always be 1.
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0077                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0078                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0079                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0080                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0081                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0082                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0083                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00008 OR
     C                             ZQ > 00008
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0076:ZQ     YL0084                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0077        YL0085                         Federal Tax ID-
     C                   MOVE      YL0078        YL0086                         Federal Tax ID-
     C                   MOVE      YL0079        YL0087                         Federal Tax ID-
     C                   MOVE      YL0080        YL0088                         Federal Tax ID-
     C                   MOVE      YL0081        YL0089                         Federal Tax ID-
     C                   MOVE      YL0082        YL0090                         Federal Tax ID-
     C                   MOVE      YL0083        YL0091                         Federal Tax ID-
     C                   MOVE      YL0084        YL0092                         Federal Tax ID-
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos7 Nbr
     C     YL0085        ADD       YL0087        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0089        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0091        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0039                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4)
      * x1    : LCL.Federal Tax ID-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Federal Tax ID-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Federal Tax ID-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Federal Tax ID-Pos8 Nbr
     C     YL0086        ADD       YL0088        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0090        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0092        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0040                         SUM Val for Eve
      * SUM Up Odd & Even # Positions for Pallet Number.
      * CASE: *OTHERWISE
      * Substring Out Each Digit From Pallet Number.
      * CASE: *OTHERWISE
     C                   MOVEL     WL0221        YL0093                         Manifest Pallet
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     1             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0077                 90      Position 1 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     2             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0078                 90      Position 2 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     3             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0079                 90      Position 3 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     4             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0080                 90      Position 4 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     5             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0081                 90      Position 5 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     6             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0082                 90      Position 6 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     7             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0083                 90      Position 7 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     8             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0084                 90      Position 8 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   Z-ADD     1             YRSW00
     C                   Z-ADD     9             ZQ
     C                   IF        YRSW00 < 1 OR
     C                             ZQ < 1 OR
     C                             YRSW00 > 00009 OR
     C                             ZQ > 00009
     C                   MOVEL     'Y2U0510'     W0RTN
     C                   ELSE
     C     YRSW00        SUBST(P)  YL0093:ZQ     YL0094                 90      Position 9 Text
     C   90              MOVEL     'Y2U0510'     W0RTN
     C                   END
     C                   MOVE      YL0077        YL0095                         Manifest Pallet
     C                   MOVE      YL0078        YL0096                         Manifest Pallet
     C                   MOVE      YL0079        YL0097                         Manifest Pallet
     C                   MOVE      YL0080        YL0098                         Manifest Pallet
     C                   MOVE      YL0081        YL0099                         Manifest Pallet
     C                   MOVE      YL0082        YL0100                         Manifest Pallet
     C                   MOVE      YL0083        YL0101                         Manifest Pallet
     C                   MOVE      YL0084        YL0102                         Manifest Pallet
     C                   MOVE      YL0094        YL0103                         Manifest Pallet
      * SUM Val for Odd # Pos
      * PAR.SUM Val for Odd # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5 + x6)
      * x1    : PAR.SUM Val for Odd # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos1 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos3 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos5 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos7 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x6    : LCL.Manifest Pallet#-Pos9 Nbr
     C     WN0039        ADD       YL0095        W0WD04                         *Synon (17,7) w
     C     W0WD04        ADD       YL0097        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0099        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0101        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0103        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0039                         SUM Val for Odd
      * SUM Val for Even # Pos
      * PAR.SUM Val for Even # Pos =
      *    *COMPUTE (x1 + x2 + x3 + x4 + x5)
      * x1    : PAR.SUM Val for Even # Pos
      * +     : PGM.*Synon (17,7) work field
      * x2    : LCL.Manifest Pallet#-Pos2 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x3    : LCL.Manifest Pallet#-Pos4 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x4    : LCL.Manifest Pallet#-Pos6 Nbr
      * +     : PGM.*Synon (17,7) work field
      * x5    : LCL.Manifest Pallet#-Pos8 Nbr
     C     WN0040        ADD       YL0096        W0WD03                         *Synon (17,7) w
     C     W0WD03        ADD       YL0098        W0WD02                         *Synon (17,7) w
     C     W0WD02        ADD       YL0100        W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       YL0102        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        WN0040                         SUM Val for Eve
      * Calculated Check Digit Number.
      * CASE: *OTHERWISE
      * Calculated Value
      * LCL.Calc Value USR =
      *    *COMPUTE ((x1 * x2) + x3)
      * x1    : PAR.SUM Val for Odd # Pos
      * *     : PGM.*Synon (17,7) work field *
      * x2    : CON.3
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.SUM Val for Even # Pos
     C     WN0039        MULT      3             W0WD01                         *Synon (17,7) w
     C     W0WD01        ADD       WN0040        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     W0WD00        YL0104                         Calc Value USR
     C                   Z-ADD     YL0104        YL0105                         Calc Value Last
     C     10            SUB       YL0105        YL0106                         Calc Check Digi
      * Format W0407 Pallet Number for Output.
      * CASE: *OTHERWISE
     C                   MOVEL     YL0106        YL0107                         Calc Check Digi
     C                   Z-ADD     *ZERO         ZQ
     C     '00'          CAT(P)    YL0076:ZQ     YL0108                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0108        CAT(P)    YL0093:ZQ     YL0108                         W0407 Pallet Nu
     C                   Z-ADD     *ZERO         ZQ
     C     YL0108        CAT(P)    YL0107:ZQ     YL0108                         W0407 Pallet Nu
     C                   MOVE      YL0108        YL0117                         W0407 Pallet Nu
     C                   EVAL      TBJJU1 = ' '                                 MAN02 Pallet Nb
     C                   MOVEL     YL0117        TBJJU1                         MAN02 Pallet Nb
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KLCRTE        KLIST
     C                   KFLD                    TBH9NY                         EDI SURROGATE N
     C                   KFLD                    TBQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    TBTFNA                         PRF01-Customer
     C                   KFLD                    TBC4NB                         Order Number
     C                   KFLD                    TBJJU1                         MAN02 Pallet Nb
      * Check for duplicate primary key
     C     KLCRTE        SETLL     @BJCPFD                                90    *
     C                   IF        *IN90
     C                   MOVEL     'USR5134'     W0RTN
      * Send message 'EDI Adv Ship Ntc Tare  EX'
     C                   MOVEL     'USR5134'     ZAMSID
     C                   EXSR      ZASNMS
     C                   GOTO      TEEXIT
     C                   ENDIF
      *
     C                   WRITE     @BJCPFD                              91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   TEEXIT        ENDSR
      /EJECT
     CSR   TFRVGN        BEGSR
      *================================================================
      * UPD EDI 856 ASN ECP140 RT - Order Detail  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0046                         Qty Difference
      *
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTF         KLIST
     C                   KFLD                    WQTF01                         Company Number
     C                   KFLD                    WQTF02                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WQTF01                         Company Number
     C                   Z-ADD     WAC4NB        WQTF02                         Order Number
      * Establish starting position
     C     KRSTF         SETLL     @BGWKAE                                      *
     C     KRSTF         READE     @BGWKAE                                90    *
      * Data record not found
     C   90              MOVEL     'USR1309'     W0RTN
      * USER: Process Data record
      * CASE: DB1.Quantity Ordered NE DB1.Quantity Shipped Total
     C                   DOW       NOT *IN90
     C                   IF        WCAVQT <> WCCBQT
     C     WCAVQT        SUB       WCCBQT        WN0046                         Qty Difference
     C                   EVAL      YL0118 = ' '                                 Product ID Manu
     C                   MOVEL     WCHGCD        YL0118                         Product ID Manu
      * UPD EDI 856 ASN ECP140 RT - EDI Adv Ship Ntc Dtl V2  * 
     C                   EXSR      TGRVGN
     C                   END                                                    *FI
     C     KRSTF         READE     @BGWKAE                                90    *
     C                   ENDDO
      *================================================================
     CSR   TFEXIT        ENDSR
      /EJECT
     CSR   TGRVGN        BEGSR
      *================================================================
      * UPD EDI 856 ASN ECP140 RT - EDI Adv Ship Ntc Dtl V2  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Declare restrictor key work fields
      * Define keylist
     C     KRSTG         KLIST
     C                   KFLD                    WQTG01                         EDI SURROGATE N
     C                   KFLD                    WQTG02                         Order Number
     C                   KFLD                    WQTG03                         Order Sequence
     C                   KFLD                    WQTG04                         Product ID Manu
      * Setup key
     C                   Z-ADD     P2H9NY        WQTG01                         EDI SURROGATE N
     C                   Z-ADD     WCC4NB        WQTG02                         Order Number
     C                   Z-ADD     WCDPNB        WQTG03                         Order Sequence
     C                   MOVEL     YL0118        WQTG04                         Product ID Manu
      * Establish starting position
     C     KRSTG         SETLL     @P140GG                                      *
     C     KRSTG         READE     @P140GG                                90    *
      * Data record not found
     C   90              MOVEL     'USR5139'     W0RTN
      * USER: Process Data record
      * CASE: PAR.Qty Difference USR is NE Zero
     C                   DOW       NOT *IN90
      * CASE: PAR.Qty Difference USR is GT Zero
     C                   IF        WN0046 <> 0
     C                   IF        WN0046 > 0
     C     TCEINZ        ADD       WN0046        YL0119                         SN105 Quantity
     C                   Z-ADD     *ZERO         WN0046                         Qty Difference
      * Chg EDI ASN Dtl V2    CH - EDI Adv Ship Ntc Dtl V2  * Upd Qty Ord
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     TCH9NY        WL0224                         EDI SURROGATE N
     C                   Z-ADD     TCQ2NY        WL0225                         REF02-Ref ID-Lo
     C                   MOVEL(P)  TCTFNA        WL0226                         PRF01-Customer
     C                   Z-ADD     TCC4NB        WL0227                         Order Number
     C                   MOVEL(P)  TCJJU1        WL0228                         MAN02 Pallet Nb
     C                   Z-ADD     TCDPNB        WL0229                         Order Sequence
     C                   Z-ADD     TCQ7NY        WL0230                         SN102 Quantity
     C                   MOVEL(P)  TCZEAA        WL0231                         SN103 Shipped U
     C                   Z-ADD     TCETNZ        WL0232                         PO406 Net WT Pe
     C                   Z-ADD     TCQ8NY        WL0233                         PO406 Gross WT
     C                   Z-ADD     TCTCNY        WL0234                         PO401-Pack
     C                   MOVEL(P)  TCLET1        WL0235                         PID05-ITEM DESC
     C                   MOVEL(P)  TCNEU1        WL0236                         Product ID GTIN
     C                   MOVEL(P)  TCNFU1        WL0237                         Product ID Manu
     C                   MOVEL(P)  TCNGU1        WL0238                         Product ID UPC
     C                   MOVEL(P)  TCNHU1        WL0239                         Product ID UCC-
     C                   MOVEL(P)  TCNWU1        WL0240                         Product ID - Pu
     C                   MOVEL(P)  TCQBU1        WL0241                         LIN/UP UPC Cons
     C                   MOVEL(P)  TCHVU1        WL0242                         W1904 UPC CASE
     C                   MOVEL(P)  TCNCU1        WL0243                         LIN13 Prod ID C
     C                   MOVEL(P)  TCAGAB        WL0244                         LIN Sub Country
     C                   MOVEL(P)  TCQCU1        WL0245                         GTin 12 Lin02
     C                   MOVEL(P)  TCNDU1        WL0246                         SN101 Assigned
     C                   Z-ADD     YL0119        WL0247                         SN105 Quantity
     C                   MOVEL(P)  TCYWAA        WL0248                         SN106 Ordered U
     C                   Z-ADD     TCHZPR        WL0249                         SLN06 Unit Pric
     C                   MOVEL(P)  TCYZAA        WL0250                         SLN07 Unit Pric
     C                   Z-ADD     TCH0PR        WL0251                         SLN06 Unit Pric
     C                   MOVEL(P)  TCY0AA        WL0252                         SLN07 Unit Pric
     C                   MOVEL(P)  TCNIU1        WL0253                         SLN10 Prod ID D
     C                   MOVEL(P)  TCNJU1        WL0254                         SLN12 Prod ID L
     C                   MOVEL(P)  TCNKU1        WL0255                         SLN14 Prod ID U
     C                   Z-ADD     TCTDNY        WL0256                         PO402-Pack Size
     C                   MOVEL(P)  TCNLU1        WL0257                         PO410-Length
     C                   MOVEL(P)  TCNMU1        WL0258                         PO411-Width
     C                   MOVEL(P)  TCNNU1        WL0259                         PO412-Heights
     C                   MOVEL(P)  TCNPU1        WL0260                         REF02-Batch Lot
     C                   Z-ADD     TCEJNZ        WL0261                         DTM02-Expiratio
     C                   Z-ADD     TCEKNZ        WL0262                         DTM02-Shelf Lif
     C                   Z-ADD     TCELNZ        WL0263                         DTM02-Manuf Dat
     C                   EXSR      THCHRC
     C                   ELSE
      * CASE: *OTHERWISE
      * Convert to Absolute Value.
     C     WN0046        MULT      -1            YL0120                         Qty Difference
      * CASE: DB1.SN105 Quantity Ordered GE LCL.Qty Difference USR
     C                   IF        TCEINZ >= YL0120
     C     TCEINZ        ADD       WN0046        YL0119                         SN105 Quantity
     C                   Z-ADD     *ZERO         WN0046                         Qty Difference
     C                   ELSE
      * CASE: *OTHERWISE
     C                   ADD       TCEINZ        WN0046                         Qty Difference
     C                   Z-ADD     *ZERO         YL0119                         SN105 Quantity
     C                   END                                                    *FI
      * Chg EDI ASN Dtl V2    CH - EDI Adv Ship Ntc Dtl V2  * Upd Qty Ord
      * Move input parameters to subroutine local variables.
     C                   Z-ADD     TCH9NY        WL0224                         EDI SURROGATE N
     C                   Z-ADD     TCQ2NY        WL0225                         REF02-Ref ID-Lo
     C                   MOVEL(P)  TCTFNA        WL0226                         PRF01-Customer
     C                   Z-ADD     TCC4NB        WL0227                         Order Number
     C                   MOVEL(P)  TCJJU1        WL0228                         MAN02 Pallet Nb
     C                   Z-ADD     TCDPNB        WL0229                         Order Sequence
     C                   Z-ADD     TCQ7NY        WL0230                         SN102 Quantity
     C                   MOVEL(P)  TCZEAA        WL0231                         SN103 Shipped U
     C                   Z-ADD     TCETNZ        WL0232                         PO406 Net WT Pe
     C                   Z-ADD     TCQ8NY        WL0233                         PO406 Gross WT
     C                   Z-ADD     TCTCNY        WL0234                         PO401-Pack
     C                   MOVEL(P)  TCLET1        WL0235                         PID05-ITEM DESC
     C                   MOVEL(P)  TCNEU1        WL0236                         Product ID GTIN
     C                   MOVEL(P)  TCNFU1        WL0237                         Product ID Manu
     C                   MOVEL(P)  TCNGU1        WL0238                         Product ID UPC
     C                   MOVEL(P)  TCNHU1        WL0239                         Product ID UCC-
     C                   MOVEL(P)  TCNWU1        WL0240                         Product ID - Pu
     C                   MOVEL(P)  TCQBU1        WL0241                         LIN/UP UPC Cons
     C                   MOVEL(P)  TCHVU1        WL0242                         W1904 UPC CASE
     C                   MOVEL(P)  TCNCU1        WL0243                         LIN13 Prod ID C
     C                   MOVEL(P)  TCAGAB        WL0244                         LIN Sub Country
     C                   MOVEL(P)  TCQCU1        WL0245                         GTin 12 Lin02
     C                   MOVEL(P)  TCNDU1        WL0246                         SN101 Assigned
     C                   Z-ADD     YL0119        WL0247                         SN105 Quantity
     C                   MOVEL(P)  TCYWAA        WL0248                         SN106 Ordered U
     C                   Z-ADD     TCHZPR        WL0249                         SLN06 Unit Pric
     C                   MOVEL(P)  TCYZAA        WL0250                         SLN07 Unit Pric
     C                   Z-ADD     TCH0PR        WL0251                         SLN06 Unit Pric
     C                   MOVEL(P)  TCY0AA        WL0252                         SLN07 Unit Pric
     C                   MOVEL(P)  TCNIU1        WL0253                         SLN10 Prod ID D
     C                   MOVEL(P)  TCNJU1        WL0254                         SLN12 Prod ID L
     C                   MOVEL(P)  TCNKU1        WL0255                         SLN14 Prod ID U
     C                   Z-ADD     TCTDNY        WL0256                         PO402-Pack Size
     C                   MOVEL(P)  TCNLU1        WL0257                         PO410-Length
     C                   MOVEL(P)  TCNMU1        WL0258                         PO411-Width
     C                   MOVEL(P)  TCNNU1        WL0259                         PO412-Heights
     C                   MOVEL(P)  TCNPU1        WL0260                         REF02-Batch Lot
     C                   Z-ADD     TCEJNZ        WL0261                         DTM02-Expiratio
     C                   Z-ADD     TCEKNZ        WL0262                         DTM02-Shelf Lif
     C                   Z-ADD     TCELNZ        WL0263                         DTM02-Manuf Dat
     C                   EXSR      THCHRC
     C                   END                                                    *FI
     C                   END                                                    *FI
     C     KRSTG         READE     @P140GG                                90    *
     C                   ENDDO
      *================================================================
     CSR   TGEXIT        ENDSR
      /EJECT
     CSR   THCHRC        BEGSR
      *================================================================
      * Chg EDI ASN Dtl V2    CH - EDI Adv Ship Ntc Dtl V2  * Upd Qty Or
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YARDC = ' '
      *
      * Move key fields to @BMCPFN
     C                   Z-ADD     WL0224        WTH9NY                         EDI SURROGATE N
     C                   Z-ADD     WL0225        WTQ2NY                         REF02-Ref ID-Lo
     C                   MOVEL(P)  WL0226        WTTFNA                         PRF01-Customer
     C                   Z-ADD     WL0227        WTC4NB                         Order Number
     C                   MOVEL(P)  WL0228        WTJJU1                         MAN02 Pallet Nb
     C                   Z-ADD     WL0229        WTDPNB                         Order Sequence
      *
     C     KLCHTH        KLIST
     C                   KFLD                    WTH9NY                         EDI SURROGATE N
     C                   KFLD                    WTQ2NY                         REF02-Ref ID-Lo
     C                   KFLD                    WTTFNA                         PRF01-Customer
     C                   KFLD                    WTC4NB                         Order Number
     C                   KFLD                    WTJJU1                         MAN02 Pallet Nb
     C                   KFLD                    WTDPNB                         Order Sequence
     C     KLCHTH        CHAIN     @BMCPFN                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'ECP140L0'    MDACP
     C                   MOVEL     '@BMCPFN'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL001.
     C                   MOVEL     'LBL001'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      THEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      THEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QECP12        YARDCS
      * Move non-key fields to @BMCPFN
     C                   Z-ADD     WL0230        WTQ7NY                         SN102 Quantity
     C                   MOVEL(P)  WL0231        WTZEAA                         SN103 Shipped U
     C                   Z-ADD     WL0232        WTETNZ                         PO406 Net WT Pe
     C                   Z-ADD     WL0233        WTQ8NY                         PO406 Gross WT
     C                   Z-ADD     WL0234        WTTCNY                         PO401-Pack
     C                   MOVEL(P)  WL0235        WTLET1                         PID05-ITEM DESC
     C                   MOVEL(P)  WL0236        WTNEU1                         Product ID GTIN
     C                   MOVEL(P)  WL0237        WTNFU1                         Product ID Manu
     C                   MOVEL(P)  WL0238        WTNGU1                         Product ID UPC
     C                   MOVEL(P)  WL0239        WTNHU1                         Product ID UCC-
     C                   MOVEL(P)  WL0240        WTNWU1                         Product ID - Pu
     C                   MOVEL(P)  WL0241        WTQBU1                         LIN/UP UPC Cons
     C                   MOVEL(P)  WL0242        WTHVU1                         W1904 UPC CASE
     C                   MOVEL(P)  WL0243        WTNCU1                         LIN13 Prod ID C
     C                   MOVEL(P)  WL0244        WTAGAB                         LIN Sub Country
     C                   MOVEL(P)  WL0245        WTQCU1                         GTin 12 Lin02
     C                   MOVEL(P)  WL0246        WTNDU1                         SN101 Assigned
     C                   Z-ADD     WL0247        WTEINZ                         SN105 Quantity
     C                   MOVEL(P)  WL0248        WTYWAA                         SN106 Ordered U
     C                   Z-ADD     WL0249        WTHZPR                         SLN06 Unit Pric
     C                   MOVEL(P)  WL0250        WTYZAA                         SLN07 Unit Pric
     C                   Z-ADD     WL0251        WTH0PR                         SLN06 Unit Pric
     C                   MOVEL(P)  WL0252        WTY0AA                         SLN07 Unit Pric
     C                   MOVEL(P)  WL0253        WTNIU1                         SLN10 Prod ID D
     C                   MOVEL(P)  WL0254        WTNJU1                         SLN12 Prod ID L
     C                   MOVEL(P)  WL0255        WTNKU1                         SLN14 Prod ID U
     C                   Z-ADD     WL0256        WTTDNY                         PO402-Pack Size
     C                   MOVEL(P)  WL0257        WTNLU1                         PO410-Length
     C                   MOVEL(P)  WL0258        WTNMU1                         PO411-Width
     C                   MOVEL(P)  WL0259        WTNNU1                         PO412-Heights
     C                   MOVEL(P)  WL0260        WTNPU1                         REF02-Batch Lot
     C                   Z-ADD     WL0261        WTEJNZ                         DTM02-Expiratio
     C                   Z-ADD     WL0262        WTEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     WL0263        WTELNZ                         DTM02-Manuf Dat
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QECP12 <> YARDCS AND
     C                             YARDC <> 'N'
     C                   MOVE      'Y'           YARDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YARDC = 'Y'
     C                   UPDATE    @BMCPFN                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    ECP140L0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   THEXIT        ENDSR
      /EJECT
     CSR   TIRVGN        BEGSR
      *================================================================
      * Upd OHE EDI 856 Error  RT - Order Header Extension  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSTI         KLIST
     C                   KFLD                    WEAIC3                         Company Number
     C                   KFLD                    WEC4NB                         Order Number
      * Setup key
     C                   Z-ADD     P1AIC3        WEAIC3                         Company Number
     C                   Z-ADD     WAC4NB        WEC4NB                         Order Number
      * Establish starting position
     C     KRSTI         CHAIN     @AMREJF                            90        *
      * Data record not found
     C   90              MOVEL     'USR3697'     W0RTN
      * USER: Process Data record
      * CHG OHE EDI 856 Error  CH - Order Header Extension  * 
     C                   IF        NOT *IN90
     C                   EXSR      TJCHRC
     C                   ENDIF
      *================================================================
     CSR   TIEXIT        ENDSR
      /EJECT
     CSR   TJCHRC        BEGSR
      *================================================================
      * CHG OHE EDI 856 Error  CH - Order Header Extension  * 
      *================================================================
      *
     C                   Z-ADD     *ZERO         WN0047                         Load ID
     C                   Z-ADD     *ZERO         WN0048                         Stop_Drop Seque
     C                   EVAL      WN0049 = ' '                                 Shipping Line
     C                   EVAL      WN0050 = ' '                                 Port Delv Termi
     C                   EVAL      WN0051 = ' '                                 OHE City
     C                   EVAL      WN0052 = ' '                                 OHE Vessel_Airl
     C                   EVAL      WN0053 = ' '                                 OHE Voyage_Flig
     C                   EVAL      WN0054 = ' '                                 OHE Booking Num
     C                   EVAL      WN0055 = ' '                                 OHE Discharge P
     C                   Z-ADD     *ZERO         WN0056                         OHE Sail_Flight
     C                   Z-ADD     *ZERO         WN0057                         OHE Port Cut Da
     C                   Z-ADD     *ZERO         WN0058                         OHE Arrival Dat
     C                   EVAL      WN0059 = ' '                                 OHE Late Delive
     C                   EVAL      WN0060 = ' '                                 OHE Ship Status
     C                   EVAL      WN0061 = ' '                                 OHE Container N
     C                   EVAL      WN0062 = ' '                                 OHE Comment 1
     C                   EVAL      WN0063 = ' '                                 OHE Comment 2
     C                   Z-ADD     *ZERO         WN0064                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0065                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0066                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0067                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0068                         OHE HPB RIN Equ
     C                   Z-ADD     *ZERO         WN0069                         OHE HPB RIN Pri
     C                   Z-ADD     *ZERO         WN0070                         Transload Termi
     C                   Z-ADD     *ZERO         WN0071                         OHE Est Arrv at
     C                   Z-ADD     *ZERO         WN0072                         OHE Backhaul ET
     C                   Z-ADD     *ZERO         WN0073                         OHE Port_Pier P
     C                   Z-ADD     *ZERO         WN0074                         OHE Actual Ship
     C                   EVAL      WN0075 = ' '                                 OHE Carrier SCA
     C                   EVAL      WN0076 = ' '                                 OHE Spot Buy
     C                   EVAL      WN0077 = ' '                                 OHE PO ACK Flag
     C                   EVAL      WN0078 = ' '                                 OHE Override Ty
     C                   EVAL      WN0079 = ' '                                 OHE Backhaul St
     C                   EVAL      WN0080 = ' '                                 OHE Backhaul ET
     C                   EVAL      WN0081 = ' '                                 OHE Load Haul T
     C                   EVAL      WN0082 = ' '                                 OHE Backhaul Ca
     C                   EVAL      WN0083 = ' '                                 OHE Bookings Co
     C                   EVAL      WN0084 = ' '                                 OHE EDI Error R
     C                   Z-ADD     *ZERO         WN0085                         HPB COA Batch N
     C                   EVAL      WN0086 = ' '                                 Delivery P_O  N
     C                   EVAL      WN0087 = ' '                                 OHE Intended fo
     C                   EVAL      WN0088 = ' '                                 OHE EDI 943 Act
     C                   EVAL      WN0089 = ' '                                 OHE EDI 944 Act
     C                   EVAL      WN0090 = ' '                                 OHE EDI 940 Act
     C                   EVAL      WN0091 = ' '                                 OHE EDI 945 Act
     C                   EVAL      WN0092 = ' '                                 OHE EDI 824 Act
     C                   EVAL      WN0093 = ' '                                 OHE Transload S
     C                   EVAL      WN0094 = ' '                                 OHE Abs Rate Ov
     C                   EVAL      WN0095 = ' '                                 OHE Appt Confir
     C                   EVAL      WN0096 = ' '                                 OHE Backhaul Co
     C                   EVAL      WN0097 = ' '                                 OHE Backhaul Ch
     C                   EVAL      WN0098 = ' '                                 OHE Transload C
     C                   EVAL      WN0099 = ' '                                 OHE Pier Pass I
     C                   EVAL      WN0100 = ' '                                 OHE Carrier Nm
     C                   EVAL      WN0101 = ' '                                 OHE Appt Confir
     C                   EVAL      WN0102 = ' '                                 OHE Backhaul Co
     C                   EVAL      WN0103 = ' '                                 Letter of Credi
     C                   Z-ADD     *ZERO         WN0104                         OHE Backhaul Re
     C                   Z-ADD     *ZERO         WN0105                         LD Stop_Drop
     C                   Z-ADD     *ZERO         WN0106                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WN0107                         OHE Pier Pass F
     C                   Z-ADD     *ZERO         WN0108                         OHE Port Check
     C                   Z-ADD     *ZERO         WN0109                         OHE Port Cut Ti
     C                   Z-ADD     *ZERO         WN0110                         OHE Backhaul Tr
     C                   Z-ADD     *ZERO         WN0111                         OHE Load Sched
     C                   Z-ADD     *ZERO         WN0112                         Original Appoin
     C                   Z-ADD     *ZERO         WN0113                         Original Appoin
     C                   Z-ADD     *ZERO         WN0114                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WN0115                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WN0116                         OHE Unused Nume
     C                   Z-ADD     *ZERO         WN0117                         OHE Orig ABS Fr
     C                   EVAL      WN0118 = ' '                                 OHE Genset Numb
     C                   EVAL      WN0119 = ' '                                 OHE Email BOL_S
     C                   EVAL      WN0120 = ' '                                 OHE EDI Order A
     C                   EVAL      WN0121 = ' '                                 OHE EDI 601 Act
     C                   EVAL      WN0122 = ' '                                 OHE Unused Stat
     C                   EVAL      WN0123 = ' '                                 OHE Unused Text
     C                   EVAL      WN0124 = ' '                                 OHE Unused Text
     C                   EVAL      WN0125 = ' '                                 OHE Customer Ve
     C                   EVAL      WN0126 = ' '                                 OHE EDI 824 AES
     C                   EVAL      WN0127 = ' '                                 OHE Unused Text
     C                   Z-ADD     *ZERO         WN0128                         OHE Unused Date
     C                   Z-ADD     *ZERO         WN0129                         OHE Unused Date
     C                   EVAL      WN0130 = ' '                                 EDI Status 1
     C                   EVAL      WN0131 = ' '                                 EDI Status 2
     C                   EVAL      WN0132 = ' '                                 EDI Status 3
     C                   EVAL      WN0133 = ' '                                 Record Status
     C                   Z-ADD     *ZERO         WN0134                         Job Time
     C                   EVAL      WN0135 = ' '                                 User Id
     C                   EVAL      WN0136 = ' '                                 Job Name
     C                   Z-ADD     *ZERO         WN0137                         Job Date
      *
     C                   EVAL      W0RTN = ' '
      * Set PGM.*Record Data Changed flag
     C                   EVALR     YBRDC = ' '
      *
      * Move key fields to @AMREJE
     C                   Z-ADD     WEAIC3        TDAIC3                         Company Number
     C                   Z-ADD     WEC4NB        TDC4NB                         Order Number
      *
     C     KLCHTJ        KLIST
     C                   KFLD                    TDAIC3                         Company Number
     C                   KFLD                    TDC4NB                         Order Number
     C     KLCHTJ        CHAIN     @AMREJE                            9091      *
      *
      * Record not found
     C                   IF        *IN90
     C                   MOVEL     'Y2U0009'     W0RTN
     C                   MOVEL     ##PGM         MDPGM
     C                   MOVEL     'PMAMREL0'    MDACP
     C                   MOVEL     '@AMREJE'     MDFMT
     C                   MOVEL     '*CHG'        MDACT
      * Record not found label: LBL002.
     C                   MOVEL     'LBL002'      MDLBL
      * Send message '*Record no longer on file'
     C                   MOVEL     'Y2U0009'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     MD0009        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   EVAL      MD0009 = ' '
     C                   GOTO      TJEXIT
     C                   ENDIF
      *
      * Record locked
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
      * Send message '*Database operation error'
     C                   MOVEL     'Y2U0004'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   GOTO      TJEXIT
     C                   ENDIF
      *
      * Store record data for null update check
     C                   MOVE      QPMAM1        YBRDCS
      * Move non-key fields to @AMREJE
     C                   EVAL      TDJWSC = ' '                                 OHE EDI Error R
     C                   MOVEL(P)  'S'           TDJUSC                         OHE EDI 856 Act
      *
      * Set PGM.*Record Data Changed flag
     C                   IF        QPMAM1 <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * USER: Processing before Data update
     C                   Z-ADD     ##JTM         TDAATM                         Job Time
     C                   Z-ADD     ##JDT         TDAXDT                         Job Date
     C                   MOVEL     ##PGM         TDA0NA                         Job Name
     C                   MOVEL     ##USR         TDAYNA                         User Id
      * Set PGM.*Record Data Changed flag
     C                   IF        QPMAM1 <> YBRDCS AND
     C                             YBRDC <> 'N'
     C                   MOVE      'Y'           YBRDC
     C                   ENDIF
      * If changed update record otherwise release record
     C                   IF        YBRDC = 'Y'
     C                   UPDATE    @AMREJE                              91      *
     C                   ELSE
      * Release record lock
     C                   UNLOCK    PMAMREL0                             91      *
     C                   ENDIF
      * Change error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
      *
      * DBF change successful
     C                   ENDIF
      *================================================================
     CSR   TJEXIT        ENDSR
      /EJECT
     CSR   XCVFA         BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C                   IF        XDAY1 > 109267
     C                   ADD       2             XDAY1
     C                   ELSE
     C                   IF        XDAY1 > 36218
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      * Full years (up to the date)
     C     XDAY1         DIV       365.25        XDWK1
     C                   MVR                     XDWK3
     C                   Z-ADD     XDWK1         XDINYY
      * The date is the end of a year
     C                   IF        XDWK3 = 0
     C                   Z-ADD     12            XDINMM
     C                   Z-ADD     31            XDINDD
     C                   ELSE
      * Year days up to the date
     C     XDWK1         MULT      365.25        XDWK2
     C                   SUB       XDWK2         XDAY1
     C                   ADD       1             XDINYY
      * Leap year ?
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
      * March 1 (relative day of the year)
     C                   IF        XDWK1 = 0
     C                   Z-ADD     60            XDWK1
     C                   ELSE
     C                   Z-ADD     59            XDWK1
     C                   END
      * Define date base month and offset day -
      *  - January (thru February)
     C                   IF        XDAY1 <= XDWK1
     C                   Z-ADD     1             XDINMM
     C                   ELSE
     C                   SUB       XDWK1         XDAY1
      *  - March (thru July)
     C                   IF        XDAY1 <= 153
     C                   Z-ADD     3             XDINMM
     C                   ELSE
      *  - August (thru December)
     C                   Z-ADD     8             XDINMM
     C                   SUB       153           XDAY1
     C                   END
      * Calculate 2 month base and offset day
     C     XDAY1         SUB       1             XDWK1
     C                   DIV       61            XDWK1
     C                   MVR                     XDAY1
     C                   ADD       1             XDAY1
     C                   MULT      2             XDWK1
     C                   ADD       XDWK1         XDINMM
     C                   END
      * Calculate date increment,
     C                   IF        XDAY1 > 31
     C                   ADD       1             XDINMM
     C                   SUB       31            XDAY1
     C                   END
     C                   Z-ADD     XDAY1         XDINDD
     C                   END
      *================================================================
     CSR   XCVFAE        ENDSR
      /EJECT
     CSR   XCVTA         BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C     XDINYY        SUB       1             XDWK1
     C     XDWK1         MULT      365.25        XDAY1
     C                   IF        XDWK1 >= 300
     C                   SUB       2             XDAY1
     C                   ELSE
     C                   IF        XDWK1 >= 100
     C                   SUB       1             XDAY1
     C                   END
     C                   END
      * (from the beginning of the year to the beginning of the month:)
     C     XDINMM        SUB       1             XDWK1
      *     ...+31*(MM-1) (for January-February) ...
     C                   IF        XDINMM < 3
     C                   MULT      31            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                   MULT      30            XDWK1
     C                   ADD       XDWK1         XDAY1
      *         ...-2 (for preceding February) ...
     C                   SUB       2             XDAY1
      *         ...+1 (for preceding February, if leap year) ...
     C                   IF        XDINYY <> 100 AND
     C                             XDINYY <> 300
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   IF        XDWK1 = 0
     C                   ADD       1             XDAY1
     C                   END
     C                   END
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C                   IF        XDINMM < 8
     C     XDINMM        MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C     XDINMM        ADD       1             XDWK1
     C                   MULT      .5            XDWK1
     C                   ADD       XDWK1         XDAY1
     C                   END
     C                   END
      * ...+DD (days in the month up to the ending date)
     C                   ADD       XDINDD        XDAY1
      *================================================================
     CSR   XCVTAE        ENDSR
      /EJECT
     CSR   XDADY         BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
      * None days of week selected
     C                   IF        XDURR = 0 OR
     C                             XDWSL = 0
     C                   Z-ADD     XDAY2         XDAY1
      * Return Code: Unable to increment date.
     C                   IF        XDURR <> *ZERO
     C                   MOVEL     'Y2U0059'     W0RTN
     C                   ENDIF
     C                   GOTO      XDADYE
     C                   ENDIF
      * All days of week selected
     C                   IF        XDWSL = 7
     C     XDAY2         ADD       XDURR         XDAY1
     C                   GOTO      XDADYM
     C                   ENDIF
      * Some days of week selected
     C                   IF        XDURR >= 0
     C                   Z-ADD     1             XDSTP
     C                   ELSE
     C                   Z-ADD     -1            XDSTP
     C                   ENDIF
      * Get number of full weeks in the duration
     C     XDURR         DIV       XDWSL         XDWNB
      * Isolate the last week
     C                   MVR                     XDLSW
     C                   IF        XDLSW = 0
     C     XDWSL         MULT      XDSTP         XDLSW
     C                   SUB       XDSTP         XDWNB
     C                   ENDIF
      * Increment the date by the full weeks
     C     XDWNB         MULT      7             XDWK1
     C     XDAY2         ADD       XDWK1         XDAY1
      * Determine day of week of the beginning date
     C     XDAY2         ADD       3             YY
     C                   DIV       7             YY
     C                   MVR                     YY
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ENDIF
      * Loop: Increment the date by the last week
      * Increment the date
     C                   DOW       XDLSW <> 0
     C                   ADD       XDSTP         XDAY1
      * Increment the day of week
     C                   ADD       XDSTP         YY
      * Put day of week into the range 1-7
     C                   IF        YY = 0
     C                   Z-ADD     7             YY
     C                   ELSE
     C                   IF        YY = 8
     C                   Z-ADD     1             YY
     C                   ELSE
     C                   IF        YY = -1
     C                   Z-ADD     6             YY
     C                   ENDIF
     C                   ENDIF
     C                   ENDIF
      * Selected day of the last week has been processed
     C                   IF        YDOW(YY) = XDSEL
     C                   SUB       XDSTP         XDLSW
     C                   ENDIF
      * End of loop
     C                   ENDDO
     C     XDADYM        TAG
     C                   IF        XDINDD < 1
     C                   Z-ADD     1             XDINDD
     C                   MOVEL     'Y2U0006'     W0RTN
     C                   ENDIF
      *================================================================
     CSR   XDADYE        ENDSR
      /EJECT
     CSR   XDOWS         BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                   MOVEA     XDCDW         YDOW
     C                   Z-ADD     0             XDWSL
     C                   Z-ADD     1             YY
     C                   DOW       YY <= 7
     C                   IF        YDOW(YY) = XDSEL
     C                   ADD       1             XDWSL
     C                   END
     C                   ADD       1             YY
     C                   END
      *================================================================
     CSR   XDOWSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      *
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAAIC3                         Company Number
     C                   Z-ADD     *ZERO         WAC4NB                         Order Number
     C                   Z-ADD     *ZERO         WAANC7                         AR Customer Num
     C                   Z-ADD     *ZERO         WABKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         WAB0C7                         Bill to Custome
     C                   Z-ADD     *ZERO         WAA0DT                         Order Date
     C                   Z-ADD     *ZERO         WAA5DT                         Requested Ship
     C                   Z-ADD     *ZERO         WAGNDT                         Actual Shipped
     C                   Z-ADD     *ZERO         WAACDT                         Cancel Date
     C                   Z-ADD     *ZERO         WAAODT                         Scheduled Ship
     C                   Z-ADD     *ZERO         WACXDT                         Date of Origina
     C                   Z-ADD     *ZERO         WAJZVA                         Order Value Tot
     C                   Z-ADD     *ZERO         WAA1WG                         Order Weight To
     C                   Z-ADD     *ZERO         WAEIDT                         Requested Deliv
     C                   Z-ADD     *ZERO         WAAFTM                         Requested Deliv
     C                   Z-ADD     *ZERO         WARMNB                         Load ID
     C                   Z-ADD     *ZERO         WATBNB                         Absorbed Freigh
     C                   Z-ADD     *ZERO         WAR1NB                         Rated Freight
     C                   Z-ADD     *ZERO         WARNNB                         Reefer Temperat
     C                   Z-ADD     *ZERO         WAATIN                         Attach to Invoi
     C                   Z-ADD     *ZERO         WARSRN                         Resell Referenc
     C                   Z-ADD     *ZERO         WAT3NB                         Attach to Order
     C                   Z-ADD     *ZERO         WACONB                         Invoice Number
     C                   Z-ADD     *ZERO         WAAWDT                         Invoice Date
     C                   Z-ADD     *ZERO         WAVRVA                         A_R order Value
     C                   Z-ADD     *ZERO         WAB7VL                         Invoice Order V
     C                   Z-ADD     *ZERO         WANODT                         OH Appt Confirm
     C                   Z-ADD     *ZERO         WANPDT                         JPN Invoice Iss
     C                   Z-ADD     *ZERO         WANQDT                         Load Actual Shi
     C                   Z-ADD     *ZERO         WANRDT                         Load BOL Comple
     C                   Z-ADD     *ZERO         WANSDT                         Load Truck Depa
     C                   Z-ADD     *ZERO         WABPTM                         Maximum Gross W
     C                   Z-ADD     *ZERO         WABQTM                         Time of Origina
     C                   Z-ADD     *ZERO         WABRTM                         OH Appt Confirm
     C                   Z-ADD     *ZERO         WABSTM                         Load BOL Comple
     C                   Z-ADD     *ZERO         WABTTM                         Load Truck Depa
     C                   Z-ADD     *ZERO         WAH0NX                         Act Frt Referen
     C                   Z-ADD     *ZERO         WAH1NX                         Act Non_Ref Frt
     C                   Z-ADD     *ZERO         WAH2NX                         OH Fuel Surchar
     C                   Z-ADD     *ZERO         WAH3NX                         OH Total Non_Re
     C                   Z-ADD     *ZERO         WAH4NX                         OH Total Ref Fr
     C                   Z-ADD     *ZERO         WAC0C7                         Claim Number
     C                   Z-ADD     *ZERO         WAAATM                         Job Time
     C                   Z-ADD     *ZERO         WAAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WBB0C7                         Bill to Custome
     C                   Z-ADD     *ZERO         WBY4NY                         EDI Alt ST Cust
     C                   Z-ADD     *ZERO         WBY5NY                         EDI unused nbr
     C                   Z-ADD     *ZERO         WBMJDT                         Create Date
     C                   Z-ADD     *ZERO         WBBETM                         Create Time
     C                   Z-ADD     *ZERO         WBMKDT                         Change Date
     C                   Z-ADD     *ZERO         WBBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WCAIC3                         Company Number
     C                   Z-ADD     *ZERO         WCC4NB                         Order Number
     C                   Z-ADD     *ZERO         WCDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WCUENB                         Order Secondary
     C                   Z-ADD     *ZERO         WCHGCD                         Item Code
     C                   Z-ADD     *ZERO         WCBKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         WCCFC7                         Order Group Cod
     C                   Z-ADD     *ZERO         WCMAVA                         Billing Detail
     C                   Z-ADD     *ZERO         WCKDVA                         Billing Detail
     C                   Z-ADD     *ZERO         WCL8VA                         Billing Detail
     C                   Z-ADD     *ZERO         WCL9VA                         Quantity to Sub
     C                   Z-ADD     *ZERO         WCAYVA                         Extended Amount
     C                   Z-ADD     *ZERO         WCEXDT                         Market Pricing
     C                   Z-ADD     *ZERO         WCBZPR                         Price Overage O
     C                   Z-ADD     *ZERO         WCL6NB                         Contract Number
     C                   Z-ADD     *ZERO         WCGIDT                         Pricing Date Us
     C                   Z-ADD     *ZERO         WCR1NB                         Rated Freight
     C                   Z-ADD     *ZERO         WCAVQT                         Quantity Ordere
     C                   Z-ADD     *ZERO         WCD0WG                         Weight Ordered
     C                   Z-ADD     *ZERO         WCCCQT                         Quantity Schedu
     C                   Z-ADD     *ZERO         WCAUWG                         Weight Schedule
     C                   Z-ADD     *ZERO         WCCBQT                         Quantity Shippe
     C                   Z-ADD     *ZERO         WCATWG                         Weight Shipped
     C                   Z-ADD     *ZERO         WCAQCS                         Unit Cost Prici
     C                   Z-ADD     *ZERO         WCAGCS                         Unit Cost Per P
     C                   Z-ADD     *ZERO         WCAKPR                         Unit Price
     C                   Z-ADD     *ZERO         WCALPR                         Unit Price_Cred
     C                   Z-ADD     *ZERO         WCAUPR                         Unit Price Orde
     C                   Z-ADD     *ZERO         WCAVWG                         Unit Weight Ord
     C                   Z-ADD     *ZERO         WCA4WG                         Tare Weight Tot
     C                   Z-ADD     *ZERO         WCA5DT                         Requested Ship
     C                   Z-ADD     *ZERO         WCAODT                         Scheduled Ship
     C                   Z-ADD     *ZERO         WCGNDT                         Actual Shipped
     C                   Z-ADD     *ZERO         WCRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WCRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WCRINB                         Item Structure
     C                   Z-ADD     *ZERO         WCCXDT                         Date of Origina
     C                   Z-ADD     *ZERO         WCDUPR                         Invoice Unit Pr
     C                   Z-ADD     *ZERO         WCB6VL                         Invoice Extende
     C                   Z-ADD     *ZERO         WCA1AA                         Ham Group Numbe
     C                   Z-ADD     *ZERO         WCNTDT                         Warehouse Palle
     C                   Z-ADD     *ZERO         WCNUDT                         Consumed Item C
     C                   Z-ADD     *ZERO         WCNVDT                         Deadline Depart
     C                   Z-ADD     *ZERO         WCNWDT                         OD Price Type R
     C                   Z-ADD     *ZERO         WCNXDT                         OD Firm Date
     C                   Z-ADD     *ZERO         WCBUTM                         Deadline Depart
     C                   Z-ADD     *ZERO         WCBVTM                         Price Code
     C                   Z-ADD     *ZERO         WCBWTM                         Maximum Net Wei
     C                   Z-ADD     *ZERO         WCBXTM                         Substitution Li
     C                   Z-ADD     *ZERO         WCBYTM                         Max Qty to sche
     C                   Z-ADD     *ZERO         WCH5NX                         Warehouse Palle
     C                   Z-ADD     *ZERO         WCH6NX                         Warehouse Avg P
     C                   Z-ADD     *ZERO         WCH7NX                         OD Item Target
     C                   Z-ADD     *ZERO         WCH8NX                         OD Estimated Gr
     C                   Z-ADD     *ZERO         WCH9NX                         OD Maximum Unit
     C                   Z-ADD     *ZERO         WCDVPR                         Order Gate_Fina
     C                   Z-ADD     *ZERO         WCDWPR                         OD Ceiling Pric
     C                   Z-ADD     *ZERO         WCDXPR                         OD Gate_Final P
     C                   Z-ADD     *ZERO         WCDYPR                         OD Weighted Avg
     C                   Z-ADD     *ZERO         WCDZPR                         OD Original Ord
     C                   Z-ADD     *ZERO         WCGSPR                         OD Cancel Date
     C                   Z-ADD     *ZERO         WCGTPR                         OD Unused Prc 7
     C                   Z-ADD     *ZERO         WCGUPR                         OD Unused Prc 8
     C                   Z-ADD     *ZERO         WCPEWG                         Weight Amount E
     C                   Z-ADD     *ZERO         WCRINY                         Item Age Days
     C                   Z-ADD     *ZERO         WCTIDT                         Production Ovr
     C                   Z-ADD     *ZERO         WCTJDT                         Production Ovr
     C                   Z-ADD     *ZERO         WCTKDT                         OD Market Begin
     C                   Z-ADD     *ZERO         WCTLDT                         OD Market Endin
     C                   Z-ADD     *ZERO         WCTMDT                         OD Atch to Ord
     C                   Z-ADD     *ZERO         WCAATM                         Job Time
     C                   Z-ADD     *ZERO         WCAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WDDBNB                         Warehouse Chill
     C                   Z-ADD     *ZERO         WDBWC3                         Shipping Compan
     C                   Z-ADD     *ZERO         WDBTC3                         Accounting Comp
     C                   Z-ADD     *ZERO         WDBUC3                         WHS Sched Prod
     C                   Z-ADD     *ZERO         WDBVC3                         WHS Inventory C
     C                   Z-ADD     *ZERO         WDAATM                         Job Time
     C                   Z-ADD     *ZERO         WDAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WEAIC3                         Company Number
     C                   Z-ADD     *ZERO         WEC4NB                         Order Number
     C                   Z-ADD     *ZERO         WERMNB                         Load ID
     C                   Z-ADD     *ZERO         WERUNB                         Stop_Drop Seque
     C                   Z-ADD     *ZERO         WEQWDT                         OHE Sail_Flight
     C                   Z-ADD     *ZERO         WEQXDT                         OHE Port Cut Da
     C                   Z-ADD     *ZERO         WEQYDT                         OHE Arrival Dat
     C                   Z-ADD     *ZERO         WEGINY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WEGFNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WEGGNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WEGHNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WEHEVL                         OHE HPB RIN Equ
     C                   Z-ADD     *ZERO         WEHFVL                         OHE HPB RIN Pri
     C                   Z-ADD     *ZERO         WEHGVL                         Transload Termi
     C                   Z-ADD     *ZERO         WEQZDT                         OHE Est Arrv at
     C                   Z-ADD     *ZERO         WEQ0DT                         OHE Backhaul ET
     C                   Z-ADD     *ZERO         WEQ1DT                         OHE Port_Pier P
     C                   Z-ADD     *ZERO         WEQ2DT                         OHE Actual Ship
     C                   Z-ADD     *ZERO         WEITNY                         HPB COA Batch N
     C                   Z-ADD     *ZERO         WEQJNY                         OHE Backhaul Re
     C                   Z-ADD     *ZERO         WEQKNY                         LD Stop_Drop
     C                   Z-ADD     *ZERO         WEQLNY                         OHE Unused Numb
     C                   Z-ADD     *ZERO         WEP8NY                         OHE Pier Pass F
     C                   Z-ADD     *ZERO         WEP9NY                         OHE Port Check
     C                   Z-ADD     *ZERO         WEQANY                         OHE Port Cut Ti
     C                   Z-ADD     *ZERO         WEQCNY                         OHE Backhaul Tr
     C                   Z-ADD     *ZERO         WEQDNY                         OHE Load Sched
     C                   Z-ADD     *ZERO         WEQENY                         Original Appoin
     C                   Z-ADD     *ZERO         WEQFNY                         Original Appoin
     C                   Z-ADD     *ZERO         WEQGNY                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WEQHNY                         OHE PowerPro Lo
     C                   Z-ADD     *ZERO         WEQINY                         OHE Unused Nume
     C                   Z-ADD     *ZERO         WEQMNY                         OHE Orig ABS Fr
     C                   Z-ADD     *ZERO         WEW5DT                         OHE Unused Date
     C                   Z-ADD     *ZERO         WEW6DT                         OHE Unused Date
     C                   Z-ADD     *ZERO         WEAATM                         Job Time
     C                   Z-ADD     *ZERO         WEAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WFV1DT                         TPC Unused Date
     C                   Z-ADD     *ZERO         WFV2DT                         TPC Unused date
     C                   Z-ADD     *ZERO         WFMJDT                         Create Date
     C                   Z-ADD     *ZERO         WFBETM                         Create Time
     C                   Z-ADD     *ZERO         WFMKDT                         Change Date
     C                   Z-ADD     *ZERO         WFBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WGTSCN                         ST02-TRANS SET
     C                   Z-ADD     *ZERO         WGOSDT                         G5002-ORDER DAT
     C                   Z-ADD     *ZERO         WGHUVL                         SAC05-$$ AMT OF
     C                   Z-ADD     *ZERO         WGT6DT                         G6202 Ship Date
     C                   Z-ADD     *ZERO         WGDELV                         G6202-DELIVERY
     C                   Z-ADD     *ZERO         WGD3VL                         G7601-QUANTITY
     C                   Z-ADD     *ZERO         WGD4VL                         G7603-WEIGHT OR
     C                   Z-ADD     *ZERO         WGAMTX                         G7608-ORDER AMO
     C                   Z-ADD     *ZERO         WGUFDT                         POH Date Stamp
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WHHGCD                         Item Code
     C                   Z-ADD     *ZERO         WHAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WHAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WHAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WHCZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WHC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WHURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WHACC8                         Vendor item Def
     C                   Z-ADD     *ZERO         WHRINB                         Item Structure
     C                   Z-ADD     *ZERO         WHRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WHRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WHTFNB                         Transportation
     C                   Z-ADD     *ZERO         WHCHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WHSWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WHPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WHSFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WHA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WHSJNB                         Production Lead
     C                   Z-ADD     *ZERO         WHSKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WHSLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WHSMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WHCFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WHCGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WHILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WHCHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WHCINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WHCJNB                         Package Level s
     C                   Z-ADD     *ZERO         WHCMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WHCNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WHCRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WHCSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WHCVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WHCWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WHCXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WHCZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WHC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WHB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WHTMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WHTNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WHBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WHBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WHCMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WHAIC3                         Company Number
     C                   Z-ADD     *ZERO         WHICN1                         Item Category N
     C                   Z-ADD     *ZERO         WHICN2                         Item Category N
     C                   Z-ADD     *ZERO         WHV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WHITCN                         Item Category N
     C                   Z-ADD     *ZERO         WHITC5                         Item Category N
     C                   Z-ADD     *ZERO         WHICN6                         Item Category N
     C                   Z-ADD     *ZERO         WHICN7                         Item Category N
     C                   Z-ADD     *ZERO         WHICN8                         Item Category N
     C                   Z-ADD     *ZERO         WHICN9                         Item Category N
     C                   Z-ADD     *ZERO         WHICN0                         Item Category N
     C                   Z-ADD     *ZERO         WHB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WHBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WHBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WHF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WHF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WHF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WHBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WHBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WHAHTM                         Job Time 1
     C                   Z-ADD     *ZERO         WHEKDT                         Job Date 1
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WIH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WIQ2NY                         REF02-Ref ID-Lo
     C                   Z-ADD     *ZERO         WIEUNZ                         PRF04-Cust PO D
     C                   Z-ADD     *ZERO         WID9NZ                         TD102 Case Quan
     C                   Z-ADD     *ZERO         WIFHNZ                         TD102 Pallet Co
     C                   Z-ADD     *ZERO         WIFPNZ                         Unit Count
     C                   Z-ADD     *ZERO         WIFINZ                         Slip Sheet Coun
     C                   Z-ADD     *ZERO         WIENNZ                         TD107 Weight-Gr
     C                   Z-ADD     *ZERO         WIEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     *ZERO         WIEFNZ                         DTM02-Req Deliv
     C                   Z-ADD     *ZERO         WIEGNZ                         DTM02-Req PU Da
     C                   Z-ADD     *ZERO         WIXBDT                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WIEHNZ                         DTM02-Unused Da
     C                   Z-ADD     *ZERO         WIFJNZ                         REF02 Invoice N
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WJAIC3                         Company Number
     C                   Z-ADD     *ZERO         WJC4NB                         Order Number
     C                   Z-ADD     *ZERO         WJDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WJUENB                         Order Secondary
     C                   Z-ADD     *ZERO         WJRZNB                         Case Sequence N
     C                   Z-ADD     *ZERO         WJFOQT                         Case Quantity
     C                   Z-ADD     *ZERO         WJR0NB                         Case Weight
     C                   Z-ADD     *ZERO         WJK7DT                         Label Date
     C                   Z-ADD     *ZERO         WJPFNX                         PT Serial Numbe
     C                   Z-ADD     *ZERO         WJHGCD                         Item Code
     C                   Z-ADD     *ZERO         WJELDT                         Production Date
     C                   Z-ADD     *ZERO         WJN5WG                         Manifest Gross
     C                   Z-ADD     *ZERO         WJH5NY                         Manifest Total
     C                   Z-ADD     *ZERO         WJH6NY                         Manifest Co_Par
     C                   Z-ADD     *ZERO         WJH7NY                         Manifest Pallet
     C                   Z-ADD     *ZERO         WJN6WG                         HPB Meter Net G
     C                   Z-ADD     *ZERO         WJN7WG                         Manifest Net We
     C                   Z-ADD     *ZERO         WJRBDT                         Manifest Unused
     C                   Z-ADD     *ZERO         WJITNY                         HPB COA Batch N
     C                   Z-ADD     *ZERO         WJIVNY                         HPB Meter Start
     C                   Z-ADD     *ZERO         WJIUNY                         HPB Meter Endin
     C                   Z-ADD     *ZERO         WJIWNY                         HPB Meter Total
     C                   Z-ADD     *ZERO         WJIXNY                         HPB Meter Net W
     C                   Z-ADD     *ZERO         WJIYNY                         HPB Density Ref
     C                   Z-ADD     *ZERO         WJAATM                         Job Time
     C                   Z-ADD     *ZERO         WJAXDT                         Job Date
     C                   Z-ADD     *ZERO         WJLPNZ                         Manifest Pallet
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WLHGCD                         Item Code
     C                   Z-ADD     *ZERO         WLDXNZ                         IDE Unused Nbr
     C                   Z-ADD     *ZERO         WLDYNZ                         IDE Manufacture
     C                   Z-ADD     *ZERO         WLMJDT                         Create Date
     C                   Z-ADD     *ZERO         WLBETM                         Create Time
     C                   Z-ADD     *ZERO         WLMKDT                         Change Date
     C                   Z-ADD     *ZERO         WLBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WRBKC7                         Ship To Custome
     C                   Z-ADD     *ZERO         WRHGCD                         Item Code
     C                   Z-ADD     *ZERO         WRMJDT                         Create Date
     C                   Z-ADD     *ZERO         WRBETM                         Create Time
     C                   Z-ADD     *ZERO         WRMKDT                         Change Date
     C                   Z-ADD     *ZERO         WRBFTM                         Change Time
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WSEWNZ                         ISLU ID Nbr
     C                   Z-ADD     *ZERO         WSHGCD                         Item Code
     C                   Z-ADD     *ZERO         WSEXNZ                         ISLU First Noti
     C                   Z-ADD     *ZERO         WSEYNZ                         ISLU Critical N
     C                   Z-ADD     *ZERO         WSEZNZ                         ISLU Goto DST W
     C                   Z-ADD     *ZERO         WSE0NZ                         ISLU Shelf Life
     C                   Z-ADD     *ZERO         WSE1NZ                         ISLU To Be Tank
     C                   Z-ADD     *ZERO         WSNVVL                         ISLU Last Year
     C                   Z-ADD     *ZERO         WSN3U1                         ISLU Fresh Code
     C                   Z-ADD     *ZERO         WSE2NZ                         ISLU Fresh Code
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WTH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         WTQ2NY                         REF02-Ref ID-Lo
     C                   Z-ADD     *ZERO         WTC4NB                         Order Number
     C                   Z-ADD     *ZERO         WTDPNB                         Order Sequence
     C                   Z-ADD     *ZERO         WTQ7NY                         SN102 Quantity
     C                   Z-ADD     *ZERO         WTETNZ                         PO406 Net WT Pe
     C                   Z-ADD     *ZERO         WTQ8NY                         PO406 Gross WT
     C                   Z-ADD     *ZERO         WTTCNY                         PO401-Pack
     C                   Z-ADD     *ZERO         WTEINZ                         SN105 Quantity
     C                   Z-ADD     *ZERO         WTHZPR                         SLN06 Unit Pric
     C                   Z-ADD     *ZERO         WTH0PR                         SLN06 Unit Pric
     C                   Z-ADD     *ZERO         WTTDNY                         PO402-Pack Size
     C                   Z-ADD     *ZERO         WTEJNZ                         DTM02-Expiratio
     C                   Z-ADD     *ZERO         WTEKNZ                         DTM02-Shelf Lif
     C                   Z-ADD     *ZERO         WTELNZ                         DTM02-Manuf Dat
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WVAIC3                         Company Number
     C                   Z-ADD     *ZERO         WVAATM                         Job Time
     C                   Z-ADD     *ZERO         WVAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WWAIC3                         Company Number
     C                   Z-ADD     *ZERO         WWHGCD                         Item Code
     C                   Z-ADD     *ZERO         WWAWPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WWAXPC                         Conversion Fact
     C                   Z-ADD     *ZERO         WWAIWG                         Unit Weight
     C                   Z-ADD     *ZERO         WWCZWG                         Minimum Weight
     C                   Z-ADD     *ZERO         WWC0WG                         Maximum Weight
     C                   Z-ADD     *ZERO         WWURTN                         Number Cases On
     C                   Z-ADD     *ZERO         WWAJC8                         Vendor Item Def
     C                   Z-ADD     *ZERO         WWRINB                         Item Structure
     C                   Z-ADD     *ZERO         WWRHNB                         Item Structure
     C                   Z-ADD     *ZERO         WWRGNB                         Item Structure
     C                   Z-ADD     *ZERO         WWTFNB                         Transportation
     C                   Z-ADD     *ZERO         WWTMVA                         Maximum Audit V
     C                   Z-ADD     *ZERO         WWTNVA                         Minimum Audit V
     C                   Z-ADD     *ZERO         WWBLPR                         Market Overage
     C                   Z-ADD     *ZERO         WWBMPR                         Standard Overag
     C                   Z-ADD     *ZERO         WWCMCO                         Item Pricing Co
     C                   Z-ADD     *ZERO         WWCHTM                         Fresh Chilling
     C                   Z-ADD     *ZERO         WWSWGH                         Std Weight_Head
     C                   Z-ADD     *ZERO         WWPPHE                         Pieces Per Head
     C                   Z-ADD     *ZERO         WWICN1                         Item Category N
     C                   Z-ADD     *ZERO         WWICN2                         Item Category N
     C                   Z-ADD     *ZERO         WWV2NB                         Item Category N
     C                   Z-ADD     *ZERO         WWITCN                         Item Category N
     C                   Z-ADD     *ZERO         WWITC5                         Item Category N
     C                   Z-ADD     *ZERO         WWICN6                         Item Category N
     C                   Z-ADD     *ZERO         WWICN7                         Item Category N
     C                   Z-ADD     *ZERO         WWICN8                         Item Category N
     C                   Z-ADD     *ZERO         WWICN9                         Item Category N
     C                   Z-ADD     *ZERO         WWICN0                         Item Category N
     C                   Z-ADD     *ZERO         WWSFNB                         Pallet Tare Wei
     C                   Z-ADD     *ZERO         WWA3WG                         Misc Tare Weigh
     C                   Z-ADD     *ZERO         WWSJNB                         Production Lead
     C                   Z-ADD     *ZERO         WWSKNB                         Agrimetrics gro
     C                   Z-ADD     *ZERO         WWSLNB                         Agrimetrics pac
     C                   Z-ADD     *ZERO         WWSMNB                         Agrimetrics gra
     C                   Z-ADD     *ZERO         WWCFNB                         PM Pounds per H
     C                   Z-ADD     *ZERO         WWCGNB                         Item Frt Overag
     C                   Z-ADD     *ZERO         WWILNB                         Packages per ca
     C                   Z-ADD     *ZERO         WWCHNB                         Use_Freeze_Sell
     C                   Z-ADD     *ZERO         WWCINB                         PM Batch Size
     C                   Z-ADD     *ZERO         WWCJNB                         Package Level s
     C                   Z-ADD     *ZERO         WWCMNB                         Partial Item Co
     C                   Z-ADD     *ZERO         WWCNNB                         WIP Item Code
     C                   Z-ADD     *ZERO         WWCRNB                         WIP Reject Code
     C                   Z-ADD     *ZERO         WWCSNB                         Std Costing Uni
     C                   Z-ADD     *ZERO         WWCVNB                         FP Std Green We
     C                   Z-ADD     *ZERO         WWCWNB                         PM Std LBS Man
     C                   Z-ADD     *ZERO         WWCXNB                         PM Raw Meat LBS
     C                   Z-ADD     *ZERO         WWCZNB                         PM Formula LBS
     C                   Z-ADD     *ZERO         WWC0NB                         PM Finished LBS
     C                   Z-ADD     *ZERO         WWB4NB                         PM Raw Material
     C                   Z-ADD     *ZERO         WWB5NB                         PM Line Number
     C                   Z-ADD     *ZERO         WWBDNB                         Pieces Per Bag
     C                   Z-ADD     *ZERO         WWBJNB                         Bags Per Unit
     C                   Z-ADD     *ZERO         WWF5WG                         Item Target Pri
     C                   Z-ADD     *ZERO         WWF6WG                         Minimum Piece W
     C                   Z-ADD     *ZERO         WWF7WG                         Maximum Piece W
     C                   Z-ADD     *ZERO         WWBLNB                         Seaboard Equiva
     C                   Z-ADD     *ZERO         WWBNNB                         Production Qty
     C                   Z-ADD     *ZERO         WWAATM                         Job Time
     C                   Z-ADD     *ZERO         WWAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WXAIC3                         Company Number
     C                   Z-ADD     *ZERO         WXHGCD                         Item Code
     C                   Z-ADD     *ZERO         WXC9NB                         Component Item
     C                   Z-ADD     *ZERO         WXBOPR                         Sales Yield
     C                   Z-ADD     *ZERO         WXBPPR                         Production Yiel
     C                   Z-ADD     *ZERO         WXHGQT                         Packaging Quant
     C                   Z-ADD     *ZERO         WXCNSM                         Consume Priorit
     C                   Z-ADD     *ZERO         WXBMY1                         Consume Priorit
     C                   Z-ADD     *ZERO         WXBMY2                         BOM Pumped Perc
     C                   Z-ADD     *ZERO         WXIXQT                         BOM Meat Cost C
     C                   Z-ADD     *ZERO         WXIYQT                         BOM Off Line Yi
     C                   Z-ADD     *ZERO         WXAATM                         Job Time
     C                   Z-ADD     *ZERO         WXAXDT                         Job Date
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         TBH9NY                         EDI SURROGATE N
     C                   Z-ADD     *ZERO         TBQ2NY                         REF02-Ref ID-Lo
     C                   Z-ADD     *ZERO         TBC4NB                         Order Number
     C                   Z-ADD     *ZERO         TBD9NZ                         TD102 Case Quan
     C                   Z-ADD     *ZERO         TBEBNZ                         PAL05 Unit Weig
     C                   Z-ADD     *ZERO         TBEMNZ                         TD107 Weight-Ne
     C                   Z-ADD     *ZERO         TBENNZ                         TD107 Weight-Gr
     C                   Z-ADD     *ZERO         TBFKNZ                         Unit Count Tare
      * Define *Synon program work fields
     C                   Z-ADD     *ZEROS        W0WD02                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD01                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD00                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        YRSW00                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        YRSW01                         *Synon (5,0) wo
     C                   Z-ADD     *ZEROS        W0WD04                         *Synon (17,7) w
     C                   Z-ADD     *ZEROS        W0WD03                         *Synon (17,7) w
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     @CN(1)        @CN(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SCRVGN.
     C                   Z-ADD     *ZERO         WL0001
     C                   EVAL      WL0002 = ' '
     C                   EVAL      WL0003 = ' '
     C                   EVAL      WL0004 = ' '
     C                   EVAL      WL0005 = ' '
      * Define local variables for subroutine SDRVGN.
     C                   Z-ADD     *ZERO         WL0006
     C                   Z-ADD     *ZERO         WL0007
     C                   Z-ADD     *ZERO         WL0008
     C                   Z-ADD     *ZERO         WL0009
     C                   EVAL      WL0010 = ' '
     C                   EVAL      WL0011 = ' '
      * Define local variables for subroutine SERVGN.
     C                   EVAL      WL0012 = ' '
     C                   EVAL      WL0013 = ' '
     C                   EVAL      WL0014 = ' '
     C                   EVAL      WL0015 = ' '
     C                   EVAL      WL0016 = ' '
      * Define local variables for subroutine SHRVGN.
     C                   Z-ADD     *ZERO         WL0017
     C                   Z-ADD     *ZERO         WL0018
     C                   EVAL      WL0019 = ' '
      * Define local variables for subroutine SIRVGN.
     C                   EVAL      WL0020 = ' '
     C                   EVAL      WL0021 = ' '
     C                   EVAL      WL0022 = ' '
      * Define local variables for subroutine SJRVGN.
     C                   Z-ADD     *ZERO         WL0023
     C                   Z-ADD     *ZERO         WL0024
     C                   Z-ADD     *ZERO         WL0025
     C                   Z-ADD     *ZERO         WL0026
     C                   Z-ADD     *ZERO         WL0027
     C                   Z-ADD     *ZERO         WL0028
      * Define local variables for subroutine SKRVGN.
     C                   Z-ADD     *ZERO         WL0029
     C                   EVAL      WL0030 = ' '
     C                   Z-ADD     *ZERO         WL0031
     C                   Z-ADD     *ZERO         WL0032
      * Define local variables for subroutine SLCRRC.
     C                   Z-ADD     *ZERO         WL0033
     C                   Z-ADD     *ZERO         WL0034
     C                   EVAL      WL0035 = ' '
     C                   EVAL      WL0036 = ' '
     C                   Z-ADD     *ZERO         WL0037
     C                   EVAL      WL0038 = ' '
     C                   EVAL      WL0039 = ' '
     C                   EVAL      WL0040 = ' '
     C                   Z-ADD     *ZERO         WL0041
     C                   Z-ADD     *ZERO         WL0042
     C                   Z-ADD     *ZERO         WL0043
     C                   Z-ADD     *ZERO         WL0044
     C                   Z-ADD     *ZERO         WL0045
     C                   Z-ADD     *ZERO         WL0046
     C                   Z-ADD     *ZERO         WL0047
     C                   Z-ADD     *ZERO         WL0048
     C                   Z-ADD     *ZERO         WL0049
     C                   Z-ADD     *ZERO         WL0050
     C                   EVAL      WL0051 = ' '
     C                   Z-ADD     *ZERO         WL0052
      * Define local variables for subroutine SNRVGN.
     C                   Z-ADD     *ZERO         WL0053
     C                   Z-ADD     *ZERO         WL0054
     C                   Z-ADD     *ZERO         WL0055
     C                   EVAL      WL0056 = ' '
     C                   EVAL      WL0057 = ' '
     C                   EVAL      WL0058 = ' '
     C                   EVAL      WL0059 = ' '
     C                   Z-ADD     *ZERO         WL0060
      * Define local variables for subroutine SORVGN.
     C                   Z-ADD     *ZERO         WL0061
     C                   EVAL      WL0062 = ' '
      * Define local variables for subroutine SPRVGN.
     C                   Z-ADD     *ZERO         WL0063
     C                   Z-ADD     *ZERO         WL0064
     C                   Z-ADD     *ZERO         WL0065
     C                   Z-ADD     *ZERO         WL0066
      * Define local variables for subroutine SQRVGN.
     C                   EVAL      WL0067 = ' '
     C                   Z-ADD     *ZERO         WL0068
     C                   EVAL      WL0069 = ' '
     C                   EVAL      WL0070 = ' '
      * Define local variables for subroutine SRRVGN.
     C                   Z-ADD     *ZERO         WL0071
     C                   Z-ADD     *ZERO         WL0072
     C                   EVAL      WL0073 = ' '
     C                   EVAL      WL0074 = ' '
      * Define local variables for subroutine SSRVGN.
     C                   EVAL      WL0075 = ' '
     C                   EVAL      WL0076 = ' '
     C                   EVAL      WL0077 = ' '
      * Define local variables for subroutine STRVGN.
     C                   Z-ADD     *ZERO         WL0078
     C                   Z-ADD     *ZERO         WL0079
      * Define local variables for subroutine SUCRRC.
     C                   Z-ADD     *ZERO         WL0080
     C                   Z-ADD     *ZERO         WL0081
     C                   EVAL      WL0082 = ' '
     C                   Z-ADD     *ZERO         WL0083
     C                   EVAL      WL0084 = ' '
     C                   Z-ADD     *ZERO         WL0085
     C                   Z-ADD     *ZERO         WL0086
     C                   EVAL      WL0087 = ' '
     C                   Z-ADD     *ZERO         WL0088
     C                   Z-ADD     *ZERO         WL0089
     C                   Z-ADD     *ZERO         WL0090
     C                   EVAL      WL0091 = ' '
     C                   EVAL      WL0092 = ' '
     C                   EVAL      WL0093 = ' '
     C                   EVAL      WL0094 = ' '
     C                   EVAL      WL0095 = ' '
     C                   EVAL      WL0096 = ' '
     C                   EVAL      WL0097 = ' '
     C                   EVAL      WL0098 = ' '
     C                   EVAL      WL0099 = ' '
     C                   EVAL      WL0100 = ' '
     C                   EVAL      WL0101 = ' '
     C                   EVAL      WL0102 = ' '
     C                   Z-ADD     *ZERO         WL0103
     C                   EVAL      WL0104 = ' '
     C                   Z-ADD     *ZERO         WL0105
     C                   EVAL      WL0106 = ' '
     C                   Z-ADD     *ZERO         WL0107
     C                   EVAL      WL0108 = ' '
     C                   EVAL      WL0109 = ' '
     C                   EVAL      WL0110 = ' '
     C                   EVAL      WL0111 = ' '
     C                   Z-ADD     *ZERO         WL0112
     C                   EVAL      WL0113 = ' '
     C                   EVAL      WL0114 = ' '
     C                   EVAL      WL0115 = ' '
     C                   EVAL      WL0116 = ' '
     C                   Z-ADD     *ZERO         WL0117
     C                   Z-ADD     *ZERO         WL0118
     C                   Z-ADD     *ZERO         WL0119
      * Define local variables for subroutine SVCRRC.
     C                   Z-ADD     *ZERO         WL0120
     C                   Z-ADD     *ZERO         WL0121
     C                   EVAL      WL0122 = ' '
     C                   Z-ADD     *ZERO         WL0123
     C                   EVAL      WL0124 = ' '
     C                   Z-ADD     *ZERO         WL0125
     C                   Z-ADD     *ZERO         WL0126
     C                   EVAL      WL0127 = ' '
     C                   Z-ADD     *ZERO         WL0128
     C                   Z-ADD     *ZERO         WL0129
     C                   Z-ADD     *ZERO         WL0130
     C                   EVAL      WL0131 = ' '
     C                   EVAL      WL0132 = ' '
     C                   EVAL      WL0133 = ' '
     C                   EVAL      WL0134 = ' '
     C                   EVAL      WL0135 = ' '
     C                   EVAL      WL0136 = ' '
     C                   EVAL      WL0137 = ' '
     C                   EVAL      WL0138 = ' '
     C                   EVAL      WL0139 = ' '
     C                   EVAL      WL0140 = ' '
     C                   EVAL      WL0141 = ' '
     C                   EVAL      WL0142 = ' '
     C                   Z-ADD     *ZERO         WL0143
     C                   EVAL      WL0144 = ' '
     C                   Z-ADD     *ZERO         WL0145
     C                   EVAL      WL0146 = ' '
     C                   Z-ADD     *ZERO         WL0147
     C                   EVAL      WL0148 = ' '
     C                   EVAL      WL0149 = ' '
     C                   EVAL      WL0150 = ' '
     C                   EVAL      WL0151 = ' '
     C                   Z-ADD     *ZERO         WL0152
     C                   EVAL      WL0153 = ' '
     C                   EVAL      WL0154 = ' '
     C                   EVAL      WL0155 = ' '
     C                   EVAL      WL0156 = ' '
     C                   Z-ADD     *ZERO         WL0157
     C                   Z-ADD     *ZERO         WL0158
     C                   Z-ADD     *ZERO         WL0159
     C                   Z-ADD     *ZERO         WL0160
     C                   Z-ADD     *ZERO         WL0161
     C                   EVAL      WL0162 = ' '
     C                   EVAL      WL0163 = ' '
      * Define local variables for subroutine SWRVGN.
     C                   Z-ADD     *ZERO         WL0164
     C                   EVAL      WL0165 = ' '
      * Define local variables for subroutine SXRVGN.
     C                   Z-ADD     *ZERO         WL0166
     C                   Z-ADD     *ZERO         WL0167
     C                   EVAL      WL0168 = ' '
     C                   Z-ADD     *ZERO         WL0169
      * Define local variables for subroutine SYRVGN.
     C                   Z-ADD     *ZERO         WL0170
     C                   Z-ADD     *ZERO         WL0171
     C                   Z-ADD     *ZERO         WL0172
     C                   Z-ADD     *ZERO         WL0173
     C                   Z-ADD     *ZERO         WL0174
     C                   Z-ADD     *ZERO         WL0175
      * Define local variables for subroutine TARVGN.
     C                   Z-ADD     *ZERO         WL0176
     C                   Z-ADD     *ZERO         WL0177
     C                   Z-ADD     *ZERO         WL0178
      * Define local variables for subroutine TBRVGN.
     C                   Z-ADD     *ZERO         WL0179
     C                   EVAL      WL0180 = ' '
     C                   EVAL      WL0181 = ' '
      * Define local variables for subroutine TCRVGN.
     C                   Z-ADD     *ZERO         WL0182
     C                   Z-ADD     *ZERO         WL0183
     C                   Z-ADD     *ZERO         WL0184
     C                   EVAL      WL0185 = ' '
      * Define local variables for subroutine TDCRRC.
     C                   Z-ADD     *ZERO         WL0186
     C                   Z-ADD     *ZERO         WL0187
     C                   EVAL      WL0188 = ' '
     C                   Z-ADD     *ZERO         WL0189
     C                   EVAL      WL0190 = ' '
     C                   EVAL      WL0191 = ' '
     C                   EVAL      WL0192 = ' '
     C                   EVAL      WL0193 = ' '
     C                   EVAL      WL0194 = ' '
     C                   EVAL      WL0195 = ' '
     C                   Z-ADD     *ZERO         WL0196
     C                   Z-ADD     *ZERO         WL0197
     C                   Z-ADD     *ZERO         WL0198
     C                   Z-ADD     *ZERO         WL0199
     C                   EVAL      WL0200 = ' '
     C                   Z-ADD     *ZERO         WL0201
     C                   EVAL      WL0202 = ' '
      * Define local variables for subroutine TECRRC.
     C                   Z-ADD     *ZERO         WL0203
     C                   Z-ADD     *ZERO         WL0204
     C                   EVAL      WL0205 = ' '
     C                   Z-ADD     *ZERO         WL0206
     C                   EVAL      WL0207 = ' '
     C                   EVAL      WL0208 = ' '
     C                   EVAL      WL0209 = ' '
     C                   EVAL      WL0210 = ' '
     C                   EVAL      WL0211 = ' '
     C                   EVAL      WL0212 = ' '
     C                   Z-ADD     *ZERO         WL0213
     C                   Z-ADD     *ZERO         WL0214
     C                   Z-ADD     *ZERO         WL0215
     C                   Z-ADD     *ZERO         WL0216
     C                   EVAL      WL0217 = ' '
     C                   Z-ADD     *ZERO         WL0218
     C                   EVAL      WL0219 = ' '
     C                   Z-ADD     *ZERO         WL0220
     C                   Z-ADD     *ZERO         WL0221
     C                   EVAL      WL0222 = ' '
     C                   EVAL      WL0223 = ' '
      * Define local variables for subroutine THCHRC.
     C                   Z-ADD     *ZERO         WL0224
     C                   Z-ADD     *ZERO         WL0225
     C                   EVAL      WL0226 = ' '
     C                   Z-ADD     *ZERO         WL0227
     C                   EVAL      WL0228 = ' '
     C                   Z-ADD     *ZERO         WL0229
     C                   Z-ADD     *ZERO         WL0230
     C                   EVAL      WL0231 = ' '
     C                   Z-ADD     *ZERO         WL0232
     C                   Z-ADD     *ZERO         WL0233
     C                   Z-ADD     *ZERO         WL0234
     C                   EVAL      WL0235 = ' '
     C                   EVAL      WL0236 = ' '
     C                   EVAL      WL0237 = ' '
     C                   EVAL      WL0238 = ' '
     C                   EVAL      WL0239 = ' '
     C                   EVAL      WL0240 = ' '
     C                   EVAL      WL0241 = ' '
     C                   EVAL      WL0242 = ' '
     C                   EVAL      WL0243 = ' '
     C                   EVAL      WL0244 = ' '
     C                   EVAL      WL0245 = ' '
     C                   EVAL      WL0246 = ' '
     C                   Z-ADD     *ZERO         WL0247
     C                   EVAL      WL0248 = ' '
     C                   Z-ADD     *ZERO         WL0249
     C                   EVAL      WL0250 = ' '
     C                   Z-ADD     *ZERO         WL0251
     C                   EVAL      WL0252 = ' '
     C                   EVAL      WL0253 = ' '
     C                   EVAL      WL0254 = ' '
     C                   EVAL      WL0255 = ' '
     C                   Z-ADD     *ZERO         WL0256
     C                   EVAL      WL0257 = ' '
     C                   EVAL      WL0258 = ' '
     C                   EVAL      WL0259 = ' '
     C                   EVAL      WL0260 = ' '
     C                   Z-ADD     *ZERO         WL0261
     C                   Z-ADD     *ZERO         WL0262
     C                   Z-ADD     *ZERO         WL0263
      * Define local work field USR Update Flag
     C                   EVAL      YL0001 = ' '
      * Define local work field EDI Tare Level Req f/856
     C                   EVAL      YL0002 = ' '
      * Define local work field EDI Trading Partner No
     C                   EVAL      YL0003 = ' '
      * Define null work field Country Code
     C                   EVAL      YN0001 = ' '
      * Define null work field Warehouse Code
     C                   EVAL      YN0002 = ' '
      * Define null work field Warehouse Location
     C                   EVAL      YN0003 = ' '
      * Define local work field EDI Detailed ASN 856 Rqd
     C                   EVAL      YL0004 = ' '
      * Define local work field Record Status
     C                   EVAL      YL0005 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0006 = ' '
      * Define local work field Warehouse Location
     C                   EVAL      YL0007 = ' '
      * Define local work field WHS Live with Carlisle
     C                   EVAL      YL0008 = ' '
      * Define null work field WHS PFS Interface
     C                   EVAL      YN0004 = ' '
      * Define local work field Crt 856 ASN for 3PL Whse
     C                   EVAL      YL0009 = ' '
      * Define local work field Send EDI Document Y/N
     C                   EVAL      YL0010 = ' '
      * Define null work field OHE EDI Error Reasons 2
     C                   EVAL      YN0005 = ' '
      * Define local work field OHE EDI 856 Action
     C                   EVAL      YL0011 = ' '
      * Define null work field OHE EDI 824 Action
     C                   EVAL      YN0006 = ' '
      * Define local work field Hold 856 f_Cust Asgn App#
     C                   EVAL      YL0012 = ' '
      * Define local work field Hold 856 f_Carr PRO
     C                   EVAL      YL0013 = ' '
      * Define local work field Customer Purchase Order #
     C                   EVAL      YL0014 = ' '
      * Define local work field Order Number Alpha
     C                   EVAL      YL0015 = ' '
      * Define local work field TD101-Packaging Code
     C                   EVAL      YL0016 = ' '
      * Define local work field Order Date USR
     C                   Z-ADD     *ZERO         YL0017
      * Define local work field Requested Delivery DteUSR
     C                   Z-ADD     *ZERO         YL0018
      * Define local work field OHE Customer Vendor f_PO
     C                   EVAL      YL0019 = ' '
      * Define local work field Invoice Number
     C                   Z-ADD     *ZERO         YL0020
      * Define local work field Total Quantity Ship  USR
     C                   Z-ADD     *ZERO         YL0021
      * Define local work field Total Weight Ship    USR
     C                   Z-ADD     *ZERO         YL0022
      * Define local work field Total Gross Weight USR
     C                   Z-ADD     *ZERO         YL0023
      * Define local work field Total Unit Count Hdr U
     C                   Z-ADD     *ZERO         YL0024
      * Define local work field First Time Flag
     C                   EVAL      YL0025 = ' '
      * Define local work field USR Weight Accumulated
     C                   Z-ADD     *ZERO         YL0026
      * Define local work field Order Quantity
     C                   Z-ADD     *ZERO         YL0027
      * Define local work field Piece Count Item
     C                   EVAL      YL0028 = ' '
      * Define local work field Pieces Per Bag
     C                   Z-ADD     *ZERO         YL0029
      * Define local work field Bags Per Unit
     C                   Z-ADD     *ZERO         YL0030
      * Define local work field Total Pallet Count Hdr U
     C                   Z-ADD     *ZERO         YL0031
      * Define local work field First Time Flag
     C                   EVAL      YL0032 = ' '
      * Define local work field First Time Through USR
     C                   EVAL      YL0033 = ' '
      * Define local work field Record Processed Usr
     C                   EVAL      YL0034 = ' '
      * Define local work field Pallet ID = 0 Exist USR
     C                   EVAL      YL0035 = ' '
      * Define local work field Single Item Pallet Flag
     C                   EVAL      YL0036 = ' '
      * Define local work field Manifest Pallet Number
     C                   Z-ADD     *ZERO         YL0037
      * Define local work field Manifest Pallet Nbr 3PL
     C                   Z-ADD     *ZERO         YL0038
      * Define local work field Order Sequence Number
     C                   Z-ADD     *ZERO         YL0039
      * Define local work field Item Code
     C                   Z-ADD     *ZERO         YL0040
      * Define local work field 1st Item Code f/Pallet U
     C                   Z-ADD     *ZERO         YL0041
      * Define local work field Manifest Pallet# Txt
     C                   EVAL      YL0042 = ' '
      * Define local work field Manifest Pallet Txt 3PL
     C                   EVAL      YL0043 = ' '
      * Define local work field SN105 Quantity Ordered
     C                   Z-ADD     *ZERO         YL0044
      * Define local work field Product ID Manuf Item
     C                   EVAL      YL0045 = ' '
      * Define local work field Warehouse Code
     C                   EVAL      YL0046 = ' '
      * Define local work field U_M_Base Price
     C                   EVAL      YL0047 = ' '
      * Define local work field U_M_Ordered
     C                   EVAL      YL0048 = ' '
      * Define local work field Order Desc_Line One
     C                   EVAL      YL0049 = ' '
      * Define local work field Unit Price
     C                   Z-ADD     *ZERO         YL0050
      * Define local work field SN103 Shipped UOM
     C                   EVAL      YL0051 = ' '
      * Define local work field IDE GTIN
     C                   EVAL      YL0052 = ' '
      * Define local work field Piece Count Item
     C                   EVAL      YL0053 = ' '
      * Define local work field Pieces Per Bag
     C                   Z-ADD     *ZERO         YL0054
      * Define local work field Bags Per Unit
     C                   Z-ADD     *ZERO         YL0055
      * Define local work field PO402-Pack Size
     C                   Z-ADD     *ZERO         YL0056
      * Define local work field Production Date
     C                   Z-ADD     *ZERO         YL0057
      * Define local work field Production Date USR D8#
     C                   Z-ADD     *ZERO         YL0058
      * Define local work field SLN12 Prod ID LT
     C                   EVAL      YL0059 = ' '
      * Define local work field Date Out (6,0) USR
     C                   Z-ADD     *ZERO         YL0060
      * Define local work field REF02-Batch Lot
     C                   EVAL      YL0061 = ' '
      * Define local work field Product ID UPC
     C                   EVAL      YL0062 = ' '
      * Define local work field CIR Resource No
     C                   EVAL      YL0063 = ' '
      * Define local work field CIR Resource No Type
     C                   EVAL      YL0064 = ' '
      * Define local work field State Code
     C                   EVAL      YL0065 = ' '
      * Define local work field Warehouse Type
     C                   EVAL      YL0066 = ' '
      * Define local work field Shelf Life Date USR
     C                   Z-ADD     *ZERO         YL0067
      * Define local work field ISLU First Notice
     C                   Z-ADD     *ZERO         YL0068
      * Define local work field Shelf Life Date D8# USR
     C                   Z-ADD     *ZERO         YL0069
      * Define local work field DTM02-Shelf Life Date
     C                   Z-ADD     *ZERO         YL0070
      * Define local work field LIN/UP UPC Consumer Pckge
     C                   EVAL      YL0071 = ' '
      * Define local work field GTin 12 Lin02
     C                   EVAL      YL0072 = ' '
      * Define local work field W0407 Pallet Number
     C                   Z-ADD     *ZERO         YL0073
      * Define local work field Federal Tax Id
     C                   EVAL      YL0074 = ' '
      * Define local work field Text 7 Alpha Usr
     C                   EVAL      YL0075 = ' '
      * Define local work field Federal Tax ID 8 Byte
     C                   EVAL      YL0076 = ' '
      * Define local work field Position 1 Text USR
     C                   EVAL      YL0077 = ' '
      * Define local work field Position 2 Text USR
     C                   EVAL      YL0078 = ' '
      * Define local work field Position 3 Text USR
     C                   EVAL      YL0079 = ' '
      * Define local work field Position 4 Text USR
     C                   EVAL      YL0080 = ' '
      * Define local work field Position 5 Text USR
     C                   EVAL      YL0081 = ' '
      * Define local work field Position 6 Text USR
     C                   EVAL      YL0082 = ' '
      * Define local work field Position 7 Text USR
     C                   EVAL      YL0083 = ' '
      * Define local work field Position 8 Text USR
     C                   EVAL      YL0084 = ' '
      * Define local work field Federal Tax ID-Pos1 Nbr
     C                   Z-ADD     *ZERO         YL0085
      * Define local work field Federal Tax ID-Pos2 Nbr
     C                   Z-ADD     *ZERO         YL0086
      * Define local work field Federal Tax ID-Pos3 Nbr
     C                   Z-ADD     *ZERO         YL0087
      * Define local work field Federal Tax ID-Pos4 Nbr
     C                   Z-ADD     *ZERO         YL0088
      * Define local work field Federal Tax ID-Pos5 Nbr
     C                   Z-ADD     *ZERO         YL0089
      * Define local work field Federal Tax ID-Pos6 Nbr
     C                   Z-ADD     *ZERO         YL0090
      * Define local work field Federal Tax ID-Pos7 Nbr
     C                   Z-ADD     *ZERO         YL0091
      * Define local work field Federal Tax ID-Pos8 Nbr
     C                   Z-ADD     *ZERO         YL0092
      * Define local work field Manifest Pallet# Txt
     C                   EVAL      YL0093 = ' '
      * Define local work field Position 9 Text USR
     C                   EVAL      YL0094 = ' '
      * Define local work field Manifest Pallet#-Pos1 Nbr
     C                   Z-ADD     *ZERO         YL0095
      * Define local work field Manifest Pallet#-Pos2 Nbr
     C                   Z-ADD     *ZERO         YL0096
      * Define local work field Manifest Pallet#-Pos3 Nbr
     C                   Z-ADD     *ZERO         YL0097
      * Define local work field Manifest Pallet#-Pos4 Nbr
     C                   Z-ADD     *ZERO         YL0098
      * Define local work field Manifest Pallet#-Pos5 Nbr
     C                   Z-ADD     *ZERO         YL0099
      * Define local work field Manifest Pallet#-Pos6 Nbr
     C                   Z-ADD     *ZERO         YL0100
      * Define local work field Manifest Pallet#-Pos7 Nbr
     C                   Z-ADD     *ZERO         YL0101
      * Define local work field Manifest Pallet#-Pos8 Nbr
     C                   Z-ADD     *ZERO         YL0102
      * Define local work field Manifest Pallet#-Pos9 Nbr
     C                   Z-ADD     *ZERO         YL0103
      * Define local work field Calc Value USR
     C                   Z-ADD     *ZERO         YL0104
      * Define local work field Calc Value Last Digit USR
     C                   Z-ADD     *ZERO         YL0105
      * Define local work field Calc Check Digit# USR
     C                   Z-ADD     *ZERO         YL0106
      * Define local work field Calc Check Digit# Txt USR
     C                   EVAL      YL0107 = ' '
      * Define local work field W0407 Pallet Number Txt U
     C                   EVAL      YL0108 = ' '
      * Define null work field Description Line One
     C                   EVAL      YN0007 = ' '
      * Define local work field Misc Tare Weight
     C                   Z-ADD     *ZERO         YL0109
      * Define local work field Box Weight
     C                   Z-ADD     *ZERO         YL0110
      * Define null work field Number Cases On A Pallet
     C                   Z-ADD     *ZERO         YN0008
      * Define null work field Pallet Tare Weight
     C                   Z-ADD     *ZERO         YN0009
      * Define null work field Box iD
     C                   Z-ADD     *ZERO         YN0010
      * Define local work field PAL05 Unit Weight
     C                   Z-ADD     *ZERO         YL0111
      * Define local work field Component Item Code
     C                   Z-ADD     *ZERO         YL0112
      * Define local work field IDE Pallet Tiers
     C                   EVAL      YL0113 = ' '
      * Define local work field IDE Pallet Blocks
     C                   EVAL      YL0114 = ' '
      * Define local work field OD Pallet Type
     C                   EVAL      YL0115 = ' '
      * Define local work field PKG04 Packaging Desc Code
     C                   EVAL      YL0116 = ' '
      * Define local work field W0407 Pallet Number
     C                   Z-ADD     *ZERO         YL0117
      * Define local work field Product ID Manuf Item
     C                   EVAL      YL0118 = ' '
      * Define local work field SN105 Quantity Ordered
     C                   Z-ADD     *ZERO         YL0119
      * Define local work field Qty Difference USR
     C                   Z-ADD     *ZERO         YL0120
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0736490
00002 99000000000000000001
