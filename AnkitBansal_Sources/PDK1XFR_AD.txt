// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDK1XFR
// ?Date: 14.08.2025 Time: 03:32:07
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Rtv Active Status     RT) TYPE(RTVOBJ) FILE(PPBUREP)           AC1740339;
PARAMETER(PAR.Company_Number);
PARAMETER('BOXPRD');
PARAMETER(LCL.PFS_AccuSort_Active);
PARAMETER(LCL.PFS_Carlisle_Active);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?AccSort:  Create Product
CASE;

// IF LCL.PFS AccuSort Active is Yes
IF LCL.PFS_AccuSort_Active = 'Y';

//?If item is FG/RM/WP then add to AS Product, else if box add to AS Box ID
CASE;

// IF PAR.Item Type Code is FG/RM/WP
IF PAR.Item_Type_Code = 'FG'/'RM'/'WP';

EXECUTE FUNCTION(Rtv AS Box ID for Item RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1321893;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.AS_Box_ID);
{
 //?USER: Initialize routine

 // WRK.Calc 2 = CON.*ZERO
 WRK.Calc_2 = *ZERO;

 // PAR.AS Box ID = CVTVAR(WRK.Calc 2)
 PAR.AS_Box_ID = CVTVAR(WRK.Calc_2);

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Item Type/Pack Cd  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1302162;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 PARAMETER(WRK.Pallet_Tare_Weight);
 PARAMETER(WRK.Misc_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Package Type Code is Box
 IF PAR.Package_Type_Code = 'B';

 // WRK.Calc 2 = DB1.Component Item Code * CON.1 *
 WRK.Calc_2 = DB1.Component_Item_Code * 1;

 // PAR.AS Box ID = CVTVAR(WRK.Calc 2)
 PAR.AS_Box_ID = CVTVAR(WRK.Calc_2);

 QUIT;

 ENDIF;

}


//?If Box ID is Invalid, then do not write to Accusort
CASE;

// IF PAR.AS Box ID EQ WRK.Alpha Zeros
IF PAR.AS_Box_ID = WRK.Alpha_Zeros_2;

// OR PAR.AS Box ID EQ WRK.BLANK
OR PAR.AS_Box_ID = WRK.BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

// WRK.Calc 5 = CON.1 * PAR.Item Code *
WRK.Calc_5 = 1 * PAR.Item_Code;

// PAR.AS Product Code = CVTVAR(WRK.Calc 5)
PAR.AS_Product_Code = CVTVAR(WRK.Calc_5);

//?Multiply fields for an implied decimal of 12345.6
//?If non-catchweight item calculate nominal weight, else zero
CASE;

// IF PAR.Catch Weight Status is no
IF PAR.Catch_Weight_Status = 'N';

// WRK.Calc 6 = PAR.Unit Weight * CON.10 *Rounded
WRK.Calc_6 = PAR.Unit_Weight * 10 'H';

// PAR.AS Nominal Weight = CVTVAR(WRK.Calc 6)
PAR.AS_Nominal_Weight = CVTVAR(WRK.Calc_6);

//?If non-catchweight item calculate nominal weight, else zero
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Calc 6 = CON.*ZERO
WRK.Calc_6 = *ZERO;

// PAR.AS Nominal Weight = CVTVAR(WRK.Calc 6)
PAR.AS_Nominal_Weight = CVTVAR(WRK.Calc_6);

ENDIF;

// WRK.Calc 6 = PAR.Maximum Weight Per Case * CON.10 *Rounded
WRK.Calc_6 = PAR.Maximum_Weight_Per_Case * 10 'H';

// PAR.AS Hi Weight Limit = CVTVAR(WRK.Calc 6)
PAR.AS_Hi_Weight_Limit = CVTVAR(WRK.Calc_6);

// WRK.Calc 6 = PAR.Minimum Weight Per Case * CON.10 *Rounded
WRK.Calc_6 = PAR.Minimum_Weight_Per_Case * 10 'H';

// PAR.AS Lo Weight Limit = CVTVAR(WRK.Calc 6)
PAR.AS_Lo_Weight_Limit = CVTVAR(WRK.Calc_6);

// WRK.Calc 5 = PAR.Misc Tare Weight * CON.100 *
WRK.Calc_5 = PAR.Misc_Tare_Weight * 100;

// PAR.AS Misc Tare Weight = CVTVAR(WRK.Calc 5)
PAR.AS_Misc_Tare_Weight = CVTVAR(WRK.Calc_5);

// WRK.Calc 3 = PAR.Number Cases On A Pallet * CON.1 *
WRK.Calc_3 = PAR.Number_Cases_On_A_Pallet * 1;

// PAR.AS Pallet Quantity = CVTVAR(WRK.Calc 3)
PAR.AS_Pallet_Quantity = CVTVAR(WRK.Calc_3);

// WRK.Calc 2 = PAR.Chilling Time * CON.1 *
WRK.Calc_2 = PAR.Fresh_Chilling_Time * 1;

// PAR.AS Date Code = CVTVAR(WRK.Calc 2)
PAR.AS_Date_Code = CVTVAR(WRK.Calc_2);

// Call program Zzz Lock/Unlock Prodct XF.
CALL PROGRAM(Zzz Lock/Unlock Prodct XF) ('PDH4XFR');
PARAMETER('L');

EXECUTE FUNCTION(Val AS Product         RT) TYPE(RTVOBJ) FILE(PDJPREP)          AC1321945;
PARAMETER(PAR.AS_Product_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Record selected is *NO
IF PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

//?Add or change AS Product
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

EXECUTE FUNCTION(Crt AS Product         CR) TYPE(CRTOBJ) FILE(PDJPREP)          AC1321930;
PARAMETER(PAR.AS_Product_Code);
PARAMETER(PAR.Item_Label_Line_1);
PARAMETER(PAR.Item_Label_Line_2);
PARAMETER(PAR.Item_Label_Line_3);
PARAMETER(0736490);
PARAMETER(PAR.AS_Nominal_Weight);
PARAMETER(PAR.AS_Hi_Weight_Limit);
PARAMETER(PAR.AS_Lo_Weight_Limit);
PARAMETER(PAR.AS_Box_ID);
PARAMETER(PAR.AS_Misc_Tare_Weight);
PARAMETER(PAR.AS_Pallet_Quantity);
PARAMETER(PAR.Default_Warehouse);
PARAMETER(PAR.AS_Date_Code);
PARAMETER(PAR.AS_Add_Change_Delete);
PARAMETER(*BLANK);

//?Add or change AS Product
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Chg AS Product         CH) TYPE(CHGOBJ) FILE(PDJPREP)          AC1321933;
PARAMETER(PAR.AS_Product_Code);
PARAMETER(PAR.Item_Label_Line_1);
PARAMETER(PAR.Item_Label_Line_2);
PARAMETER(PAR.Item_Label_Line_3);
PARAMETER(0736490);
PARAMETER(PAR.AS_Nominal_Weight);
PARAMETER(PAR.AS_Hi_Weight_Limit);
PARAMETER(PAR.AS_Lo_Weight_Limit);
PARAMETER(PAR.AS_Box_ID);
PARAMETER(PAR.AS_Misc_Tare_Weight);
PARAMETER(PAR.AS_Pallet_Quantity);
PARAMETER(PAR.Default_Warehouse);
PARAMETER(PAR.AS_Date_Code);
PARAMETER(PAR.AS_Add_Change_Delete);
PARAMETER(*BLANK);

ENDIF;

ENDIF;

// Call program Zzz Lock/Unlock Prodct XF.
CALL PROGRAM(Zzz Lock/Unlock Prodct XF) ('PDH4XFR');
PARAMETER('U');

//?If item is FG/RM/WP then add to AS Product, else if box add to AS Box ID
// IF *OTHERWISE
IF *OTHERWISE;

//?Multiply fields for an implied decimal of 12345.6
// WRK.Calc 5 = PAR.Unit Weight * CON.100 *
WRK.Calc_5 = PAR.Unit_Weight * 100;

// PAR.AS Misc Tare Weight = CVTVAR(WRK.Calc 5)
PAR.AS_Misc_Tare_Weight = CVTVAR(WRK.Calc_5);

//?If item is a box, then add to AS Box ID
CASE;

// IF PAR.Package Type Code is Box Kit
IF PAR.Package_Type_Code = 'B';

// WRK.Calc 2 = PAR.Item Code * CON.1 *
WRK.Calc_2 = PAR.Item_Code * 1;

// PAR.AS Box ID = CVTVAR(WRK.Calc 2)
PAR.AS_Box_ID = CVTVAR(WRK.Calc_2);

// Call program Zzz Lock/Unlock Box ID XF.
CALL PROGRAM(Zzz Lock/Unlock Box ID XF) ('PDH1XFR');
PARAMETER('L');

EXECUTE FUNCTION(Val AS Box ID          RT) TYPE(RTVOBJ) FILE(PDJNREP)          AC1321997;
PARAMETER(PAR.AS_Box_ID);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

EXECUTE FUNCTION(Crt AS Box ID          CR) TYPE(CRTOBJ) FILE(PDJNREP)          AC1321986;
PARAMETER(PAR.AS_Box_ID);
PARAMETER(PAR.Description_Line_One);
PARAMETER(PAR.AS_Misc_Tare_Weight);
PARAMETER(PAR.AS_Add_Change_Delete);
PARAMETER(*BLANK);

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Chg AS Box ID          CH) TYPE(CHGOBJ) FILE(PDJNREP)          AC1321987;
PARAMETER(PAR.AS_Box_ID);
PARAMETER(PAR.Description_Line_One);
PARAMETER(PAR.AS_Misc_Tare_Weight);
PARAMETER(PAR.AS_Add_Change_Delete);
PARAMETER(*BLANK);

ENDIF;

// Call program Zzz Lock/Unlock Box ID XF.
CALL PROGRAM(Zzz Lock/Unlock Box ID XF) ('PDH1XFR');
PARAMETER('U');

ENDIF;

ENDIF;

ENDIF;

//?Carlisle:  Create Product
CASE;

// IF LCL.PFS Carlisle Active is Yes
IF LCL.PFS_Carlisle_Active = 'Y';

// OR LCL.Plant Floor System USR is Both
OR LCL.Plant_Floor_System_USR = 'B';

//?Create PFS Product or PFS Box
CASE;

// IF PAR.Item Type Code is FG/WP
IF PAR.Item_Type_Code = 'FG'/'WP';

CASE;

// IF PAR.Item Code is 8000000 - 8999999
IF PAR.Item_Code >= 8000000;
AND PAR.Item_Code <= 8999999;

// IF PAR.Item Code is GE 9000000
IF PAR.Item_Code >= 9000000;

// LCL.Number 5,0            USR = PAR.Item Code
LCL.Number_50_USR = PAR.Item_Code;

// Call program PFS One Product       XF.
CALL PROGRAM(PFS One Product       XF) ('PPMVXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(LCL.Number_50_USR);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program PFS One Product       XF.
CALL PROGRAM(PFS One Product       XF) ('PPMVXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);

ENDIF;

//?Create PFS Product or PFS Box
// IF PAR.Item Type Code is Packaging and Supplies
IF PAR.Item_Type_Code = 'PS';

// AND PAR.Package Type Code is Box Kit
AND PAR.Package_Type_Code = 'B';

// Call program PFS One Box           XF.
CALL PROGRAM(PFS One Box           XF) ('PPMYXFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);

ENDIF;

ENDIF;

//?PK0318 5/09/01  Add WP item type code
