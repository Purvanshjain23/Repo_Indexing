// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPD2PFR
// ?Date: 14.08.2025 Time: 12:06:30
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?Match passed user code model, if any
CASE;

// IF PAR.User Code Model NE WRK.BLANK
IF PAR.User_Code_Model <> WRK.BLANK;

CASE;

// IF DB1.User Code Model NE PAR.User Code Model
IF DB1.User_Code_Model <> PAR.User_Code_Model;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.User Code Model = PAR.User Code Model
X1PG_User_Code_Model = PAR.User_Code_Model;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
CASE;

// IF DB1.Company Number is Equal to zero
IF DB1.Company_Number = *ZERO;

// CUR.Company Name = CON.Company number blank
CUR.Company_Name = 'Company number blank';

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Company Number = DB1.Company Number
CUR.Company_Number = DB1.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

// Print Accounting Company Number header format
PRINT Accounting Company Number header format;

ENDIF;

// SUPPRESSED PRINT Description header format

//?USER: On print of detail format

// CUR.Yes/No Description = Condition name of DB1.Allow Multi-Company
CUR.Yes_No_Description = RTVCND(DB1.Allow_Multi_Company);

// CUR.Yes/No Description 2 = Condition name of DB1.Allow Requisitions
CUR.Yes_No_Description_2 = RTVCND(DB1.Application_WHS_Restrict);

// CUR.USR Trans type descript = Condition name of DB1.Credit Hold Authority
CUR.USR_Trans_type_descript = RTVCND(DB1.Credit_Hold_Authority);

// CUR.USR Work Field 3A = Condition name of DB1.Production Hold Authority
CUR.USR_Work_Field_3A = RTVCND(DB1.Production_Hold_Authority);

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : Prt Production Line   PO
EXECUTE FUNCTION(Prt Production Line   PO) TYPE(PRTOBJ);
PARAMETER(CUR.User_Profile_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

NXT.User_Code_Count = CNT();

//?USER: Print required level totals

// SUPPRESSED PRINT Description totals format

// SUPPRESSED PRINT Accounting Company Number totals format

