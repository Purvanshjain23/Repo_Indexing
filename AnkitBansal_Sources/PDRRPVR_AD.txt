// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDRRPVR
// ?Date: 14.08.2025 Time: 03:29:32
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//?s14774 RMC 04/03/19 Chg duration from 40 TO 70 days-from system value
//? 2/24/2017 JBB E9064 - Add company 440 logic to this screen
//?FP1054 RMC 01/20/09 Chg duration from 21 to 40 days
//?FP1054 Run for both plants every time now 3/04/09,remove F10,company,cut
//?FP1054 Added field for recovery to allow alloc by ordered qty instead of
//?      scheduled, in case the plan didnt build correctly overnight.
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// WRK.Display Flag = CND.No
WRK.Display_Flag = 'N';

// LCL.Company Number = CON.*ZERO
LCL.Company_Number = *ZERO;

//?USER: Load screen

//?First time processing - do for each plant
CASE;

// IF PAR.First Time Flag EQ WRK.BLANK
IF PAR.First_Time_Flag = WRK.BLANK;

// DTL.Company Number 360 = CON.360
DTL.Company_Number_360 = 360;

// DTL.Company Number 440 = CON.440
DTL.Company_Number_440 = 440;

// DTL.Company Number 960 = CON.960
DTL.Company_Number_960 = 960;

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

//?Set Up Kill & Production Date / Kill & Production Date Ranges
DO;

//?Calculate From and To Kill Dates
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Kill Date CUR USR = JOB.*Job date
PAR.Kill_Date_CUR_USR = JOB.*Job_date;

// PAR.Kill Date PRV USR = PAR.Kill Date CUR USR + CON.-1 *DAYS
PAR.Kill_Date_PRV_USR = DATEINCR(PAR.Kill_Date_CUR_USR '-1' 'DY' 1111111 'NONE' 'N' 1);

// DTL.Kill Date = PAR.Kill Date PRV USR
DTL.Kill_Date = PAR.Kill_Date_PRV_USR;

// DTL.Kill Date 360 RGF = DTL.Kill Date + CON.1 *DAYS
DTL.Kill_Date_360_RGF = DATEINCR(DTL.Kill_Date 1 'DY' 1111111 'NONE' 'N' 1);

EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1510877;
PARAMETER('ALLOCDAYS');
PARAMETER(LCL.*Duration_factor);
{
 //?USER: Process Data record

 // PAR.System Value Numeric = DB1.System Value Numeric
 PAR.System_Value_Numeric = DB1.System_Value_Numeric;

 QUIT;

}


CASE;

// IF LCL.*Duration (factor) is EQ Zero
IF LCL.*Duration_factor = *ZERO;

// LCL.*Duration (factor) = CON.40
LCL.*Duration_factor = 40;

ENDIF;

EXECUTE FUNCTION(RTV KillDay Dte-Durtn  RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1369299;
PARAMETER(DTL.Company_Number_360);
PARAMETER(DTL.Kill_Date_360_RGF);
PARAMETER(LCL.*Duration_factor);
PARAMETER(DTL.Kill_Date_360_RGT);
{
 //?USER: Initialize routine

 // WRK.Count USR = CON.*ZERO
 WRK.Count_USR = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF WRK.Count USR EQ PAR.*Duration (factor)
 IF WRK.Count_USR = PAR.*Duration_factor;

 // PAR.*DATE = DB1.Post to G/L Date
 PAR.*DATE = DB1.Post_to_G_L_Date;

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

}


// DTL.Date                  USR = DTL.Kill Date
DTL.Date_USR = DTL.Kill_Date;

// DTL.Kill Date 440 RGF = DTL.Kill Date 360 RGF
DTL.Kill_Date_440_RGF = DTL.Kill_Date_360_RGF;

// DTL.Kill Date 440 RGT = DTL.Kill Date 360 RGT
DTL.Kill_Date_440_RGT = DTL.Kill_Date_360_RGT;

// DTL.Kill Date 960 RGF = DTL.Kill Date 360 RGF
DTL.Kill_Date_960_RGF = DTL.Kill_Date_360_RGF;

// DTL.Kill Date 960 RGT = DTL.Kill Date 360 RGT
DTL.Kill_Date_960_RGT = DTL.Kill_Date_360_RGT;

ENDIF;

//?Calculate From and To Production Dates
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Production Date = DTL.Kill Date
DTL.Production_Date = DTL.Kill_Date;

// DTL.Production Date 360 RGF = DTL.Kill Date 360 RGF
DTL.Production_Date_360_RGF = DTL.Kill_Date_360_RGF;

// DTL.Production Date 360 RGT = DTL.Kill Date 360 RGT
DTL.Production_Date_360_RGT = DTL.Kill_Date_360_RGT;

// DTL.Production Date 440 RGF = DTL.Production Date 360 RGF
DTL.Production_Date_440_RGF = DTL.Production_Date_360_RGF;

// DTL.Production Date 440 RGT = DTL.Production Date 360 RGT
DTL.Production_Date_440_RGT = DTL.Production_Date_360_RGT;

// DTL.Production Date 960 RGF = DTL.Production Date 360 RGF
DTL.Production_Date_960_RGF = DTL.Production_Date_360_RGF;

// DTL.Production Date 960 RGT = DTL.Production Date 360 RGT
DTL.Production_Date_960_RGT = DTL.Production_Date_360_RGT;

ENDIF;

ENDDO;

ENDIF;

// DTL.First Lvl Prod Sts USR = CND.no
DTL.First_Lvl_Prod_Sts_USR = 'N';

// DTL.Overlay Schedule   USR = CND.no
DTL.Overlay_Schedule_USR = 'N';

//?USER: Validate fields

//?NOT LETTING THEM CHANGE THE KILL DATE.
//?------------ Guymon  ------------------
//?------------ Triumph ------------------
//?USER: User defined action

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Build Production Schedule');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Application_Code);
PARAMETER(*MISSING);
PARAMETER(2);

//?If F3 not pressed from prompt screen, process companies
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?If F3 not pressed from prompt screen, process companies
// IF *OTHERWISE
IF *OTHERWISE;

//?Guymon 1st Level Cut and getting PDI8CPP ready
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DTL.Company_Number_360);
PARAMETER('HPEJOBD');
PARAMETER(WRK.Job_description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?this executed Pdrsupr before FP1054
// DTL.Company Number = CND.Guymon
DTL.Company_Number = 360;

//?Calc kill dates & prod dates
// PAR.Kill Date Alpha USR = CVTVAR(DTL.Kill Date)
PAR.Kill_Date_Alpha_USR = CVTVAR(DTL.Kill_Date);

// PAR.Kill Date RGF Alpha USR = CVTVAR(DTL.Kill Date 360 RGF)
PAR.Kill_Date_RGF_Alpha_USR = CVTVAR(DTL.Kill_Date_360_RGF);

// PAR.Kill Date RGT Alpha USR = CVTVAR(DTL.Kill Date 360 RGT)
PAR.Kill_Date_RGT_Alpha_USR = CVTVAR(DTL.Kill_Date_360_RGT);

// PAR.Prod Date Alpha USR = CVTVAR(DTL.Production Date)
PAR.Prod_Date_Alpha_USR = CVTVAR(DTL.Production_Date);

// PAR.Prod Date RGF Alpha USR = CVTVAR(DTL.Production Date 360 RGF)
PAR.Prod_Date_RGF_Alpha_USR = CVTVAR(DTL.Production_Date_360_RGF);

// PAR.Prod Date RGT Alpha USR = CVTVAR(DTL.Production Date 360 RGT)
PAR.Prod_Date_RGT_Alpha_USR = CVTVAR(DTL.Production_Date_360_RGT);

// Execute command - 'PS All Bld Prd Sched/Plan'
EXECUTE COMMAND(USR4162);
PARAMETER(DTL.Company_Number_360);
PARAMETER(PAR.Kill_Date_Alpha_USR);
PARAMETER(PAR.Kill_Date_RGF_Alpha_USR);
PARAMETER(PAR.Kill_Date_RGT_Alpha_USR);
PARAMETER(PAR.Prod_Date_Alpha_USR);
PARAMETER(PAR.Prod_Date_RGF_Alpha_USR);
PARAMETER(PAR.Prod_Date_RGT_Alpha_USR);
PARAMETER(DTL.First_Lvl_Prod_Sts_USR);
PARAMETER(DTL.Overlay_Schedule_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(WRK.Job_description);

ENDIF;

//?Seaboard Triumph 1st Level Cut and getting PDI8CPP ready
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DTL.Company_Number_440);
PARAMETER('HPEJOBD');
PARAMETER(WRK.Job_description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Calc kill dates & prod dates
// PAR.Kill Date Alpha USR = CVTVAR(DTL.Date                  USR)
PAR.Kill_Date_Alpha_USR = CVTVAR(DTL.Date_USR);

// PAR.Kill Date RGF Alpha USR = CVTVAR(DTL.Kill Date 440 RGF)
PAR.Kill_Date_RGF_Alpha_USR = CVTVAR(DTL.Kill_Date_440_RGF);

// PAR.Kill Date RGT Alpha USR = CVTVAR(DTL.Kill Date 440 RGT)
PAR.Kill_Date_RGT_Alpha_USR = CVTVAR(DTL.Kill_Date_440_RGT);

// PAR.Prod Date Alpha USR = CVTVAR(DTL.Production Date Ref)
PAR.Prod_Date_Alpha_USR = CVTVAR(DTL.Production_Date_Ref);

// PAR.Prod Date RGF Alpha USR = CVTVAR(DTL.Production Date 440 RGF)
PAR.Prod_Date_RGF_Alpha_USR = CVTVAR(DTL.Production_Date_440_RGF);

// PAR.Prod Date RGT Alpha USR = CVTVAR(DTL.Production Date 440 RGT)
PAR.Prod_Date_RGT_Alpha_USR = CVTVAR(DTL.Production_Date_440_RGT);

// Execute command - 'PS All Bld Prd Sched/Plan'
EXECUTE COMMAND(USR4162);
PARAMETER(DTL.Company_Number_440);
PARAMETER(PAR.Kill_Date_Alpha_USR);
PARAMETER(PAR.Kill_Date_RGF_Alpha_USR);
PARAMETER(PAR.Kill_Date_RGT_Alpha_USR);
PARAMETER(PAR.Prod_Date_Alpha_USR);
PARAMETER(PAR.Prod_Date_RGF_Alpha_USR);
PARAMETER(PAR.Prod_Date_RGT_Alpha_USR);
PARAMETER(DTL.First_Lvl_Prod_Sts_USR);
PARAMETER(DTL.Overlay_Schedule_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(WRK.Job_description);

ENDIF;

//?Triumph 1st Level Cut and getting PDI8CPP ready
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DTL.Company_Number_960);
PARAMETER('HPEJOBD');
PARAMETER(WRK.Job_description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Calc kill dates & prod dates
// PAR.Kill Date Alpha USR = CVTVAR(DTL.Date                  USR)
PAR.Kill_Date_Alpha_USR = CVTVAR(DTL.Date_USR);

// PAR.Kill Date RGF Alpha USR = CVTVAR(DTL.Kill Date 960 RGF)
PAR.Kill_Date_RGF_Alpha_USR = CVTVAR(DTL.Kill_Date_960_RGF);

// PAR.Kill Date RGT Alpha USR = CVTVAR(DTL.Kill Date 960 RGT)
PAR.Kill_Date_RGT_Alpha_USR = CVTVAR(DTL.Kill_Date_960_RGT);

// PAR.Prod Date Alpha USR = CVTVAR(DTL.Production Date Ref)
PAR.Prod_Date_Alpha_USR = CVTVAR(DTL.Production_Date_Ref);

// PAR.Prod Date RGF Alpha USR = CVTVAR(DTL.Production Date 960 RGF)
PAR.Prod_Date_RGF_Alpha_USR = CVTVAR(DTL.Production_Date_960_RGF);

// PAR.Prod Date RGT Alpha USR = CVTVAR(DTL.Production Date 960 RGT)
PAR.Prod_Date_RGT_Alpha_USR = CVTVAR(DTL.Production_Date_960_RGT);

// Execute command - 'PS All Bld Prd Sched/Plan'
EXECUTE COMMAND(USR4162);
PARAMETER(DTL.Company_Number_960);
PARAMETER(PAR.Kill_Date_Alpha_USR);
PARAMETER(PAR.Kill_Date_RGF_Alpha_USR);
PARAMETER(PAR.Kill_Date_RGT_Alpha_USR);
PARAMETER(PAR.Prod_Date_Alpha_USR);
PARAMETER(PAR.Prod_Date_RGF_Alpha_USR);
PARAMETER(PAR.Prod_Date_RGT_Alpha_USR);
PARAMETER(DTL.First_Lvl_Prod_Sts_USR);
PARAMETER(DTL.Overlay_Schedule_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(WRK.Job_description);

ENDIF;

//?Build Schedule for both plants
CASE;

// IF DTL.Build Sched with Ord Qty is No
IF DTL.Build_Sched_with_Ord_Qty = *BLANK;

// Execute command - 'CLRPFM'
EXECUTE COMMAND(USR2862);
PARAMETER('PME6CPP');

// Call program BPS Order Det Bld Sch XF.
SBMJOB;
CALL PROGRAM(BPS Order Det Bld Sch XF) ('PMD1XFR');
PARAMETER(1);
PARAMETER(DTL.Production_Date_360_RGT);
SBMJOBOVR JOB(BPSBLDSCHE);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBOVR JOBQ(PRK);
SBMJOBEND;

ENDIF;

ENDIF;

