// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBNLPVR
// ?Date: 14.08.2025 Time: 03:48:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification History
DO;

//?** 06/03/2014 ISJHIGH E3113 New PMTRCD to print Production Daily
//?              Packaging Report. Designed for Purchasing Group to
//?              calculate and send a daily packaging summary based
//?              on Daily Production Schedule.
//?              - Only allowed for 360/GP1 and 960/SJ1
//?              - Boxes Only
//?              - Production Qty > 0
//?              - Limited to 30 days maximum
//?              - Production Tupe
//?                - If Production Date From = Job Date,
//?                  select S=Scheduled
//?                - If Production Date From NE Job Date,
//?                  select P=Planned
//?** 06/03/2014 ISJHIGH E3113 Remove Repeat Prompt option.
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(WRK.Company_Number);
PARAMETER(WRK.Warehouse_Code);
PARAMETER(LCL.Allow_Multi_Company);
PARAMETER(LCL.Default_Printer);
PARAMETER(LCL.Salesperson_Code);

// LCL.PRT Night Queue Run Sts = CND.no
LCL.PRT_Night_Queue_Run_Sts = 'N';

// LCL.Paper Type USR = CND.Legal
LCL.Paper_Type_USR = 2;

// LCL.PRT Description = CON.Production Packaging Rpt
LCL.PRT_Description = 'Production Packaging Rpt';

// WRK.Display Prt Opt Pmt USR = CND.*YES
WRK.Display_Prt_Opt_Pmt_USR = *YES;

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

//?USER: Load screen

CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// DTL.Production Date = JOB.*Job date
DTL.Production_Date = JOB.*Job_date;

// DTL.Production Date To = JOB.*Job date
DTL.Production_Date_To = JOB.*Job_date;

// DTL.Company = WRK.Company Number
DTL.Company = WRK.Company_Number;

//?Set Company Number to 360, if not 360 or 960
CASE;

// IF DTL.Company is Guymon
IF DTL.Company = 360;

// OR DTL.Company is St. Joseph
OR DTL.Company = 960;

//?Set Company Number to 360, if not 360 or 960
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Company = CND.Guymon
DTL.Company = 360;

ENDIF;

// DTL.Email Selection usr = CND.Not Selected
DTL.Email_Selection_usr = *BLANK;

//?Set Warehouse Code to GP1 for 360 or SJ1 for 960
CASE;

// IF DTL.Company is Guymon
IF DTL.Company = 360;

// DTL.Warehouse Code = CND.Guymon Fresh
DTL.Warehouse_Code = 'GP1';

//?Set Warehouse Code to GP1 for 360 or SJ1 for 960
// IF DTL.Company is St. Joseph
IF DTL.Company = 960;

// DTL.Warehouse Code = CND.St. Joseph
DTL.Warehouse_Code = 'SJ1';

ENDIF;

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

ENDIF;

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Warehouse_Description);

//?CALC: Screen function fields

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Warehouse_Description);

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(DTL.Company_Name_DRV);
PARAMETER(DTL.Company_Number);

//?USER: Validate relations

//?SNDERRMSG if Company not 360 or 960.
CASE;

// IF DTL.Company is Guymon
IF DTL.Company = 360;

// OR DTL.Company is St. Joseph
OR DTL.Company = 960;

//?Set Warehouse Code to GP1 for 360 or SJ1 for 960
CASE;

// IF DTL.Company is Guymon
IF DTL.Company = 360;

// DTL.Warehouse Code = CND.Guymon Fresh
DTL.Warehouse_Code = 'GP1';

//?Set Warehouse Code to GP1 for 360 or SJ1 for 960
// IF DTL.Company is St. Joseph
IF DTL.Company = 960;

// DTL.Warehouse Code = CND.St. Joseph
DTL.Warehouse_Code = 'SJ1';

ENDIF;

//?SNDERRMSG if Company not 360 or 960.
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company Number is not a valid Plant Company.'
ERROR(USR4719);
MSGPARM(DTL.Company);

ENDIF;

EXECUTE FUNCTION(Val Warehouse Exists   RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1323885;
PARAMETER(DTL.Warehouse_Code);

//?SNDERRMSG if Warehouse Not Found
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Warehouse not found'
ERROR(USR0372);
MSGPARM(DTL.Warehouse_Code);

ENDIF;

//?SNDERRMSG if Production Date From not GE Job Date
CASE;

// IF DTL.Production Date GE JOB.*Job date
IF DTL.Production_Date >= JOB.*Job_date;

//?SNDERRMSG if Production Date From not GE Job Date
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Only Today or Future Date'
ERROR(USR4633);
MSGPARM(DTL.Production_Date);

ENDIF;

// LCL.Days Duration USR = DTL.Production Date To - DTL.Production Date *DAYS
LCL.Days_Duration_USR = DURATION(DTL.Production_Date_To DTL.Production_Date 'DY' 1111111           +
 'NONE' 'N' 1);

//?SNDERRMSG if Production Date To GT 30 Days from Production Date From
CASE;

// IF LCL.Days Duration USR is LT 0
IF LCL.Days_Duration_USR < *ZERO;

// Send error message - 'Date must be equal to or gretater than the Production Date.'
ERROR(USR4718);
MSGPARM(DTL.Production_Date_To);

//?SNDERRMSG if Production Date To GT 30 Days from Production Date From
// IF LCL.Days Duration USR is GT 30
IF LCL.Days_Duration_USR > 30;

// Send error message - 'Production Date To is limited to 30 days from Production Date From.'
ERROR(USR4720);
MSGPARM(DTL.Production_Date_To);

ENDIF;

//?USER: User defined action

//?Load parms for sbmjob
// LCL.Warehouse Code = DTL.Warehouse Code
LCL.Warehouse_Code = DTL.Warehouse_Code;

// LCL.Production Date = DTL.Production Date
LCL.Production_Date = DTL.Production_Date;

// LCL.Production Date To = DTL.Production Date To
LCL.Production_Date_To = DTL.Production_Date_To;

EXECUTE FUNCTION(Rtv Description       RT) TYPE(RTVOBJ) FILE(POBHREP)           AC1631475;
PARAMETER(WRK.Item_Category_Type_Number);
PARAMETER(WRK.Item_Category_Type_Code);
PARAMETER(LCL.Item_Category_Type_Desc);

CASE;

// IF DTL.*CMD key is CF03
IF DTL.*CMD_key = '03';

// IF *OTHERWISE
IF *OTHERWISE;

//?Print Prompt
CASE;

// IF WRK.Display Prt Opt Pmt USR is *YES
IF WRK.Display_Prt_Opt_Pmt_USR = *YES;

EXECUTE FUNCTION(Rtv Default Print Opt RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1277460;
PARAMETER(JOB.*USER);
PARAMETER(LCL.PRT_Printer_Device);

// LCL.PRT Save Output Sts = CND.*NO
LCL.PRT_Save_Output_Sts = *NO;

// LCL.PRT Hold Output Sts = CND.*YES
LCL.PRT_Hold_Output_Sts = *YES;

// LCL.PRT Number of Copies = CND.One
LCL.PRT_Number_of_Copies = 1;

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER(LCL.PRT_Description);
PARAMETER(LCL.PRT_Printer_Device);
PARAMETER(LCL.PRT_Hold_Output_Sts);
PARAMETER(LCL.PRT_Save_Output_Sts);
PARAMETER(LCL.PRT_Number_of_Copies);
PARAMETER(LCL.PRT_Night_Queue_Run_Sts);
PARAMETER(LCL.PRT_Night_Queue);
PARAMETER('P/S');
PARAMETER(*MISSING);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Display Prt Opt Pmt USR = CND.*NO
WRK.Display_Prt_Opt_Pmt_USR = *NO;

ENDIF;

ENDIF;

//?Prepare report processing
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?Prepare report processing
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Company Alpha = CVTVAR(DTL.Company)
LCL.Company_Alpha = CVTVAR(DTL.Company);

// LCL.Prod Date From Alpha USR = CVTVAR(DTL.Production Date)
LCL.Prod_Date_From_Alpha_USR = CVTVAR(DTL.Production_Date);

// LCL.Prod Date To Alpha USR = CVTVAR(DTL.Production Date To)
LCL.Prod_Date_To_Alpha_USR = CVTVAR(DTL.Production_Date_To);

// LCL.PRT Nbr of Copies Alpha = CVTVAR(LCL.PRT Number of Copies)
LCL.PRT_Nbr_of_Copies_Alpha = CVTVAR(LCL.PRT_Number_of_Copies);

// LCL.Originating Process Name = CND.Prt Prd Itm Sched Pkg PMT
LCL.Originating_Process_Name = 'PBMZPVR';

// Call program Prt Prd Packaging     UP.
CALL PROGRAM(Prt Prd Packaging     UP) ('PBM5UPC');
PARAMETER(LCL.PRT_Printer_Device);
PARAMETER(LCL.PRT_Hold_Output_Sts);
PARAMETER(LCL.PRT_Save_Output_Sts);
PARAMETER(LCL.PRT_Nbr_of_Copies_Alpha);
PARAMETER(LCL.Company_Alpha);
PARAMETER(LCL.Prod_Date_From_Alpha_USR);
PARAMETER(LCL.Prod_Date_To_Alpha_USR);
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Email_Address);

ENDIF;

ENDIF;

