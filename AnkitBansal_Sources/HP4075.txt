      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4075
      * TITLE:       Specify Options for Movement Verification Report Options
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/06/00
      *
      *
      * FUNCTION: This Specify uses an edit record format to allow the user
      *           to specify options for generating the listing.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/13/01  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production types, we changed the edit for a farm.  The production type
      *           of a selected farm no longer has to "match" the production type that
      *           the user may have keyed on the screen.
      *
      * 07/18/02  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production phases, we changed the edit for a farm.  The production phase
      *           of a selected farm no longer has to "match" the production phase that
      *           the user may have keyed on the screen.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4075   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp001    if   e           k disk
      *    Authorized users
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
      *
     FHSP010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D all             c                   'A'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2    inz('00')
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fields
      *
     D svdvcd          s                   like(fsdvcd)
     D termfl          s              1a
     D wkodfl          s              1a
      *
      *
      * Parm fields
      *
     D xxaist          s              1
     D xxcell          s              2a
     D xxalphfscd      s              5a
     D xxppcd          s                   like(ppppcd)
     D xxppds          s                   like(d1orppds)
     D xxptcd          s                   like(fsptcd)
     D xxptds          s                   like(d1orptds)
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxfsbo          s                   like(fsfsbo)
     D xxbods          s                   like(d1orbods)
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               d   datfmt(*iso)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfmdy                 1      6  0
     D  ldtmdy                 7     12  0
     D  ldfcymd               13     20  0
     D  ldtcymd               21     28  0
      *
     D  ldorfsbo              29     33
     D  ldorptcd              34     38
     D  ldorppcd              39     43
     D  ldorcell              44     45  0
     D  ldorfscd              46     50  0
      *
     D  lddnfsbo              51     55
     D  lddnptcd              56     60
     D  lddnppcd              61     65
     D  lddncell              66     67  0
     D  lddnfscd              68     72  0
      *
     D  ldorbods              73    102
     D  ldorptds             103    112
     D  ldorppds             113    142
     D  ldorfsnm             143    167
      *
     D  lddnbods             168    197
     D  lddnptds             198    207
     D  lddnppds             208    237
     D  lddnfsnm             238    262
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * $set1 - set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $scrn1 - perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * If the user failed the initial security checks, set on indicator to
      * protect input fields and invalidate function keys.
      *
     C                   if        termfl = yes
     C                   seton                                        99
     C                   endif
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4075k1
     C                   write     hp4075ec
     C                   exfmt     hp4075r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on or                               F3-exit
     C                             termfl = yes
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
     C                   other
      *
      * Set routine to edit data
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $edit1 - edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) from date
      *   2) to date
      *
     C                   exsr      $fmdy
     C                   exsr      $tmdy
      *
      * Validate origin fields:
      *   1) business office
      *   2) production type
      *   3) production phase
      *   4) cell
      *   5) farm site
      *
     C                   exsr      $orfsbo
     C                   exsr      $orptcd
     C                   exsr      $orppcd
     C                   exsr      $orcell
     C                   exsr      $orfscd
      *
      * Validate destination fields:
      *   1) business office
      *   2) production type
      *   3) production phase
      *   4) cell
      *   5) farm site
      *
     C                   exsr      $dnfsbo
     C                   exsr      $dnptcd
     C                   exsr      $dnppcd
     C                   exsr      $dncell
     C                   exsr      $dnfscd
      *
      * If there are no errors, execute the subroutine to submit the
      * report.
      *
     C                   if        error = 0                                    If no error
     C                   if        *in44 = *off                                 If no F8
     C                   seton                                        44
     C                   else
     C                   if        *in08 = *on                                  If F8=submit
     C                   exsr      $proc1
     C                   endif                                                  If F8=submit
     C                   endif                                                  If no F8
     C                   else
     C                   setoff                                       44
     C                   endif                                                  If no error
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate from date
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) cannot be negative
      *  3) must be a valid date
      *
      *
     C     $fmdy         begsr
      *
     C                   z-add     0             ldfcymd
      *
     C                   select
     C                   when      d1fmdy = 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1fmdy < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1fmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1fmdy        wkcymdiso
     C                   move      wkcymdiso     ldfcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate to date
      *----------------------------------------------------------------
      *
      *  1) required
      *  2) cannot be negative
      *  3) must be a valid date
      *  4) must be later than from date
      *
      *
     C     $tmdy         begsr
      *
     C                   z-add     0             ldtcymd
      *
     C                   select
     C                   when      d1tmdy = 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1tmdy < 0
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1tmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1tmdy        wkcymdiso
     C                   move      wkcymdiso     ldtcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      * To date cannot be earlier than from date.
      *
     C                   if        *in30 = *off and
     C                             *in31 = *off and
     C                             ldtcymd < ldfcymd
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09009'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate origin business office
      *----------------------------------------------------------------
      *
     C     $orfsbo       begsr
      *
     C                   move      *blank        d1orbods
      *
     C                   if        d1orfsbo <> *blank                           If entered
     C                   move      'O'           wkodfl
     C                   move      d1orfsbo      xxfsbo
     C                   exsr      $chkbo
     C                   move      oubods        d1orbods
      *
     C                   if        oubofl = yes
     C                   seton                                        32
     C                   endif
      *
     C                   endif                                                  If entered
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate destination business office
      *----------------------------------------------------------------
      *
     C     $dnfsbo       begsr
      *
     C                   move      *blank        d1dnbods
      *
     C                   if        d1dnfsbo <> *blank                           If entered
     C                   move      'D'           wkodfl
     C                   move      d1dnfsbo      xxfsbo
     C                   exsr      $chkbo
      *
     C                   move      oubods        d1dnbods
      *
     C                   if        oubofl = yes
     C                   seton                                        37
     C                   endif
     C                   endif                                                  If entered
      *
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate origin production type
      *----------------------------------------------------------------
      *
     C     $orptcd       begsr
      *
     C                   move      *blank        d1orptds
      *
     C                   select
     C                   when      d1orptcd <> *blank
     C     d1orptcd      chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1orptds
     C                   else
     C                   seton                                        33
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1orptcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate destination production type
      *----------------------------------------------------------------
      *
     C     $dnptcd       begsr
      *
     C                   move      *blank        d1dnptds
      *
     C                   select
     C                   when      d1dnptcd <> *blank
     C     d1dnptcd      chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1dnptds
     C                   else
     C                   seton                                        38
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1dnptcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate origin production phase
      *----------------------------------------------------------------
      *
     C     $orppcd       begsr
      *
     C                   move      *blank        d1orppds
      *
     C                   select
     C                   when      d1orppcd <> *blank
     C     d1orppcd      chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1orppds
     C                   else
     C                   seton                                        34
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1orppcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate destination production phase
      *----------------------------------------------------------------
      *
     C     $dnppcd       begsr
      *
     C                   move      *blank        d1dnppds
      *
     C                   select
     C                   when      d1dnppcd <> *blank
     C     d1dnppcd      chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1dnppds
     C                   else
     C                   seton                                        39
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1dnppcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate origin cell
      *----------------------------------------------------------------
      *
     C     $orcell       begsr
      *
     C                   if        d1orcell < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate destination cell
      *----------------------------------------------------------------
      *
     C     $dncell       begsr
      *
     C                   if        d1dncell < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate origin farm site
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) must be valid in farm master
      *  3) farm business office and screen business office must match
      *  4) farm cell and screen cell must match
      *
     C     $orfscd       begsr
      *
     C                   move      *blank        d1orfsnm
      *
     C                   select
     C                   when      d1orfscd = 0
     C                   other
      *
     C     d1orfscd      chain     hsp018                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1orfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      fsfsnm        d1orfsnm
      *
      *
      * Check for business office match
      *
     C                   if        d1orfsbo <> *blank and
     C                             d1orfsbo <> fsfsbo
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00158'     mgid(e)
     C                   clear                   mgw
     C                   move      d1orfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsfsbo        mgw(6)
     C                   movea     d1orfsbo      mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      *
      * Check for cell match
      *
     C                   if        d1orcell <> 0 and
     C                             d1orcell <> fscell
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1orfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxcell
     C                   movea     xxcell        mgw(6)
     C                   move      d1orcell      xxcell
     C                   movea     xxcell        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate destination farm site
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) must be valid in farm master
      *  3) farm business office and screen business office must match
      *  4) farm cell and screen cell must match
      *
     C     $dnfscd       begsr
      *
     C                   move      *blank        d1dnfsnm
      *
     C                   select
     C                   when      d1dnfscd = 0
     C                   other
      *
     C     d1dnfscd      chain     hsp018                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1dnfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      fsfsnm        d1dnfsnm
      *
      *
      * Check for business office match
      *
     C                   if        d1dnfsbo <> *blank and
     C                             d1dnfsbo <> fsfsbo
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00158'     mgid(e)
     C                   clear                   mgw
     C                   move      d1dnfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fsfsbo        mgw(6)
     C                   movea     d1dnfsbo      mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
      *
      * Check for cell match
      *
     C                   if        d1dncell <> 0 and
     C                             d1dncell <> fscell
     C                   seton                                        41
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1dnfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxcell
     C                   movea     xxcell        mgw(6)
     C                   move      d1dncell      xxcell
     C                   movea     xxcell        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Check the business office
      *----------------------------------------------------------------
      *
     C     $chkbo        begsr
      *
      * Set the 'Validate B.O.' flag depending on whether the user left
      * business office blank to get all business offices or entered a
      * specific office.
      *
     C                   if        xxfsbo = *blank
     C                   move      all           inbofl
     C                   else
     C                   move      yes           inbofl
     C                   endif
      *
      *
      * Check the user's security to the business office.  Set the INDVFL flag
      * to YES to tell the security program to compare the function division
      * code to the B.O. division code.
      *
     C                   move      yes           indvfl
     C                   exsr      $sec
     C                   move      no            indvfl
      *
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $sec - Security Program
      *---------------------------------------------------------------
      *
     C     $sec          begsr
      *
      * Set up fields to send into the security program
      *
     C                   select
     C                   when      wkodfl = 'O'
     C                   move      d1orfsbo      inbobo
     C                   when      wkodfl = 'D'
     C                   move      d1dnfsbo      inbobo
     C                   endsl
      *
     C                   move      no            termfl
      *
     C                   call      'HPSEC  '
      **** IN
     C                   parm                    mgid                           MSGID ARRAY
     C                   parm                    mgdt                           MSGDTA DATA
     C                   parm                    error                          # OF errorS
     C                   parm      sdpgm         infncd                         FUNC CODE
     C                   parm                    inbobo                         BO CODE
     C                   parm                    indvfl                         CHECK DIV?
     C                   parm                    inbofl                         CHECK B.O.?
      **** OUT
     C                   parm      *blank        oubobo                         BO CODE
     C                   parm      *blank        oubods                         BO DESC.
     C                   parm      *blank        oudvcd                         DIV CODE
     C                   parm                    secfl                          SEC ERR FLAG
     C                   parm      *blank        oubofl                         B.O. ERR FLG
     C                   parm                    ourmfl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $proc1 - process user's request
      *---------------------------------------------------------------
      *
      * This subroutine is only executed if the user submits the listing
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   z-add     d1fmdy        ldfmdy
     C                   z-add     d1tmdy        ldtmdy
      *
     C                   movel     d1orfsbo      ldorfsbo
     C                   movel     d1orbods      ldorbods
     C                   movel     d1orptcd      ldorptcd
     C                   movel     d1orptds      ldorptds
     C                   movel     d1orppcd      ldorppcd
     C                   movel     d1orppds      ldorppds
     C                   z-add     d1orcell      ldorcell
     C                   z-add     d1orfscd      ldorfscd
     C                   movel     d1orfsnm      ldorfsnm
      *
     C                   movel     d1dnfsbo      lddnfsbo
     C                   movel     d1dnbods      lddnbods
     C                   movel     d1dnptcd      lddnptcd
     C                   movel     d1dnptds      lddnptds
     C                   movel     d1dnppcd      lddnppcd
     C                   movel     d1dnppds      lddnppds
     C                   z-add     d1dncell      lddncell
     C                   z-add     d1dnfscd      lddnfscd
     C                   movel     d1dnfsnm      lddnfsnm
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      * Issue the standard request submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      *  F4 prompt on screen 1
      *----------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Origin business office
      *
     C                   select
     C                   when      fld = 'D1ORFSBO'
     C                   call      'HP503'
     C                   parm      *blank        xxfsbo
     C                   parm      *blank        xxbods
     C                   parm                    svdvcd
     C                   seton                                        52
     C                   if        xxfsbo <> *blank
     C                   movel     xxfsbo        d1orfsbo
     C                   movel     xxbods        d1orbods
     C                   endif
      *
      * Origin production type
      *
     C                   when      fld = 'D1ORPTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        53
     C                   if        xxptcd <> *blank
     C                   movel     xxptcd        d1orptcd
     C                   movel     xxptds        d1orptds
     C                   endif
      *
      * Origin production phase
      *
     C                   when      fld = 'D1ORPPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        54
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1orppcd
     C                   movel     xxppds        d1orppds
     C                   endif
      *
      * Origin farm site
      *
     C                   when      fld = 'D1ORFSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        56
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1orfscd
     C                   movel     xxfsnm        d1orfsnm
     C                   endif
      *
      * Destination business office
      *
     C                   when      fld = 'D1DNFSBO'
     C                   call      'HP503'
     C                   parm      *blank        xxfsbo
     C                   parm      *blank        xxbods
     C                   parm                    svdvcd
     C                   seton                                        57
     C                   if        xxfsbo <> *blank
     C                   movel     xxfsbo        d1dnfsbo
     C                   movel     xxbods        d1dnbods
     C                   endif
      *
      * Destination production type
      *
     C                   when      fld = 'D1DNPTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        58
     C                   if        xxptcd <> *blank
     C                   movel     xxptcd        d1dnptcd
     C                   movel     xxptds        d1dnptds
     C                   endif
      *
      *
      * Destination production phase
      *
     C                   when      fld = 'D1DNPPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        59
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1dnppcd
     C                   movel     xxppds        d1dnppds
     C                   endif
      *
      * Destination farm site
      *
     C                   when      fld = 'D1DNFSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        51
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1dnfscd
     C                   movel     xxfsnm        d1dnfsnm
     C                   endif
     C                   other
      *
      * F4 not valid for this field, so issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09011'
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $wrmsg - write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * $clmsg - clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * $exit - seton last record and end job
      *---------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * *inzsr - initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
      * Initialize all numeric LDA fields
      *
     C                   z-add     0             ldfmdy
     C                   z-add     0             ldtmdy
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtcymd
     C                   z-add     0             ldorcell
     C                   z-add     0             lddncell
     C                   z-add     0             ldorfscd
     C                   z-add     0             lddnfscd
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      *
      * Execute the security routine to determine the user's authorizations.
      *
     C                   movel     no            inbofl
     C                   exsr      $sec
     C                   movel     yes           inbofl
     C                   movel     oudvcd        svdvcd
      *
      * If errors on the initial call, set the terminal flag to yes.
      *
     C                   if        secfl = yes
     C                   movel     yes           termfl
     C                   endif
      *
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP4075CL)) JOB(VERIFICA) JOBQ(__________)
