      *****************  RPG PROGRAM HEADING  ************************
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      MNU---Datamart
      * PROGRAM:     MN200 - Datamart Menu User Access
      * PROGRAMMER:  Barb Gutierrez
      * CREATED:     04/13/05
      *
      * FUNCTION: This program reads the files in the AS/400 menu system (WM400)
      *           and updates the menu access datamart files.
      *
      *           These files in the Datamart will be added and or updated with
      *           each load of the Datamart.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      * 07/28/06  Barb Gutierrez
      *           Changed to not process inactive menu items, group ID's
      *           GPPRKTST, QPGMR, GPTFTEST or the *ATTN key menu.
      * 08/04/06  Barb Gutierrez
      *           Fixed problem of clear the count field.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fwmauth    if   e           k disk
      *  Menu Authority file
      *
     Fwmuser    if   e           k disk    rename(wmuserr:usrrec) prefix(usr)
      *   Menu User File
      *
     Fwmmenu    if   e           k disk    rename(wmmenur:mnurec) prefix(mnu)
      *   Menu Master file
      *
     Fwmoptn2   if   e           k disk    rename(wmoptnr:optrec) prefix(opt)
      *   Menu Option File
      *
     Fwmgroup2  if   e           k disk    rename(wmgroupr:grprec) prefix(grp)
      *   Menu Group Master file  Key company, group id
      *
     Fmnp001    o  a e             disk
      *    Datamart: Menu User Access
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
     D upper           c                   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
     D lower           c                   'abcdefghijklmnopqrstuvwxyz'
      *
      *---------------------------------------------------------------
      *  Standalone fields
      *---------------------------------------------------------------
      *
     D wkclass         s              5a
     D wkapp           s              5a
     D process         s              1a
      *
     D first           s              1
     D svsys           s                   like(mnsys)
     D svmenu          s                   like(mnmnu#)
     D svmnudesc       s                   like(mnname)
     D svoptn          s                   like(mnopt#)
     D svoptdsc        s                   like(mnoptdsc)
     D svgrpid         s                   like(mngrpid)
     D svgrpnm         s                   like(usruserid)
     D svcoptfl        s                   like(mncoptfl)
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
     D
      *
      *---------------------------------------------------------------
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read the authority file.  It only contains groups.  It has no user id's.  It contains
      * every menu name and the associated options.
      *
     C     *loval        setll     wmauth
     C                   dou       *in89 = *on                                  89 doueq on
     C                   read      wmauth                                 89
      *
      *------------------
      *
      * When the menu changes.....
      *
     C                   if        mname <> svmenu                              menu changes
      *
      * get description
      *
     C                   exsr      $mnudesc
     C                   endif                                                  menu changes
      *------------------
      *
      * When the option changes.....
      *
     C                   if        moptn <> svoptn                              option changes
      *
      * get description
      *
     C                   exsr      $optndesc
     C                   endif                                                  opt changes
      *
      *  Detail Time.....................
      *  do not process test groups, programmer group or attn key menu
      *
     C                   if        *in89 = *off and                             89 = Off
     C                               userid <> 'GPPRKTST' and
     C                               userid <> 'QPGMR' and
     C                               userid <> 'GPTFTEST'
     C                   if        mclass <> '*ATTN'                            class <> attn
      *
      * get group name
      *
     C                   exsr      $grpname
      *
      * get the menu user's associated with the group
      *
     C                   exsr      $mnuusers
      *
     C                   endif                                                  class <> attn
     C                   endif                                                  89 = Off
     C                   enddo                                                  89 doueq on
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Get group name
      *---------------------------------------------------------------
      *
     C     $grpname      begsr
      *
     C                   movel(p)  userid        svgrpid                        group ID
     C     key01         chain     usrrec                             90
     C                   if        *in90 = *off                                 90 = off
     C                   movel(p)  usruname      svgrpnm                        group name
     C                   endif                                                  90 = off
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Get users associated with the group
      *---------------------------------------------------------------
      *
     C     $mnuusers     begsr
      *
      *  Take the group ID and find all the users associated with this group.
      *
     C     key01         setll     grprec
     C                   dou       *in93 = *on                                  93 doueq on
     C     key01         reade     grprec                                 93
     C                   if        *in93 = *off                                 93 = off
      *
      * get user name and write record
      *
     C                   movel(p)  grpuserid     mnusrid                     user id
     C     key04         chain     usrrec                             94
     C                   if        *in94 = *off                                 94 = off
     C                   movel(p)  usruname      mnusrnm                        user name
      *
     C                   movel(p)  coid          mncocd                         guy
     C                   movel(p)  svsys         mnsys                          system
     C                   movel(p)  svmenu        mnmnu#                         menu number
     C                   movel(p)  svmnudesc     mnname                         menu description
     C                   movel(p)  svoptn        mnopt#                         menu option
     C                   movel(p)  svoptdsc      mnoptdsc                       menu description
     C                   movel(p)  svgrpid       mngrpid                        group id
     C                   movel(p)  svgrpnm       mngrpnm                        group name
     C                   move      svcoptfl      mncoptfl                       critcal opn flag
     C****
     C                   if        process = 'Y'                                process record
     C                   write     mnrec
     C                   endif                                                  process record
      *
     C                   endif                                                  94 = off
     C                   endif                                                  93 = off
     C                   enddo                                                  93 doueq on
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Get menu option descriptions
      *---------------------------------------------------------------
      *
     C     $optndesc     begsr
      *
      *  Get option description.  Read the file until we get the first option that
      *  has an option number.  We have some records in this file with no option number
      *  or description.  These are the blank lines we put in the menu to break up the
      *  appearance of the menu.  *** ONLY PROCESS ACTIVE OPTIONS ***
      *
     C     key02         setll     optrec
     C                   dou       *in92 = *on                                  92 doueq on
     C     key02         reade     optrec                                 92
     C                   if        *in92 = *off
     C                   if        optmoptn <> *blank and                       optn not blank
     C                              optmfunct = 'A'
     C                   movel(p)  optmoptn      svoptn                         option #
     C                   movel(p)  optmdesc      svoptdsc                       option descr
     C                   move      'Y'           process
     C****
     C**** Determine if this is a critcal option or not.
     C****
     C                   if        optmosdat <> *blanks
     C                   move      'Y'           svcoptfl                       critcal opn flag
     C                   else
     C                   move      'N'           svcoptfl                       critcal opn flag
     C                   endif
      *
     C                   move      *on           *in92
     C                   else                                                   optn not blank
     C                   move      'N'           process
     C                   endif                                                  optn not blank
      *
     C                   endif                                                  92 = off
     C                   enddo                                                  92 = doueq on
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Get menu description
      *---------------------------------------------------------------
      *
     C     $mnudesc      begsr
     C                   eval      svsys = *blanks
      *
      * get system
     C                   eval      svsys = %subst(mname:1:3)
      *
      *  Take the menu ID and get the title
      *
     C     key03         chain     mnurec                             91
     C                   if        *in91 = *off                                 91 = off
     C                   movel(p)  mnumname      svmenu                         menu name
     C                   movel(p)  mnumtitle     svmnudesc                      menu description
     C                   endif                                                  91 = off
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
      *
     C     key01         klist
     C                   kfld                    coid                           Company ID
     C                   kfld                    svgrpid                        grp id
      *
     C     key02         klist
     C                   kfld                    coid                           Company ID
     C                   kfld                    mclass                         class
     C                   kfld                    maplcn                         application
     C                   kfld                    mname                          menu #
     C                   kfld                    moptn                          option #
      *
     C     key03         klist
     C                   kfld                    coid                           Company ID
     C                   kfld                    mclass                         class
     C                   kfld                    maplcn
     C                   kfld                    mname                          menu #
      *
     C     key04         klist
     C                   kfld                    coid                           Company
     C                   kfld                    mnusrid                        user
      *
     C***                move      *blanks       wkclass
     C***                move      *blanks       wkapp
     C                   z-add     1             mncount
      *
     C                   endsr
