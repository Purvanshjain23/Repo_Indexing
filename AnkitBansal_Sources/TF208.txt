      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF208 - Weekly Revenue Close: Extract Sales
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/24/05
      *
      * Function:    When there are no errors from the edit, this program writes
      *              weekly records with:
      *                1) sales data
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Recompile only. "Floor" produced pounds and amount were added
      *           to file TFP010.
      *
      * 04/27/06  LeAnne Fedor
      *           Changed the calc of SBF and TF Net Product Revenue Amount to be
      *           conditional based on the Exempt Record flag.
      *
      * 09/29/06  LeAnne Fedor
      *           Removed logic to retrieve 'Pump %'.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 03/26/07  LeAnne Ramsey
      *           Added logic to retrieve the Capability Flag and populate this
      *           new field in the Weekly Product Revenue Detail file.
      *
      * 04/05/07  LeAnne Ramsey
      *           We just added the Exclude from Mix and Exclude from Volume Flags to the
      *           Weekly Product Revenue Detail file. So, I expanded the logic that
      *           retrieves the new Capablity Flag to retrieve these two "exclude" flags.
      *
      * 04/16/07  LeAnne Ramsey
      *           On the call to TF809:
      *           Added parms: Meat Cost Group Code
      *           Changed parms: Exclude from Mix Flag     to  Mix Flag
      *                          Exclude from Volume Flag  to  Volume Flag
      *                          Capability Flag           to  Inventory Flag
      *
      * 05/14/07  LeAnne Ramsey
      *           Added 3 fields to Weekly Product Revenue Detail file to facilitate
      *           new Prime Pork logic:
      *              Co-owned Flag
      *              Producing Company
      *              TF Percent Owned
      *           Added these new fields as parms on calls to generic programs:
      *              Co-owned Flag     (TF813)
      *              Producing Company (TF813)
      *              TF Percent Owned  (TF809)
      *           Added additional "aggregate" fields so that the "aggregate"
      *           fields mirror the SBF/TF fields for the new Prime Pork logic.
      *
      * 07/03/07  Alice Brownfield
      *           Added logic to do the Co-Owned % splits for the Net Product Revenue Amt
      *           and the Pre-paid Freight pounds.
      *
      * 08/13/07  LeAnne Ramsey
      *           We are now putting Work-in-Process items in file TFP010.
      *           Prior to this, we only had Finished Goods items in TFP010.
      *           So, we changed our logic here to use a logical file that has only
      *           Finished Goods.
      *
      * 08/29/07  LeAnne Ramsey
      *           Prior to this change, we calculated TF Net Product Revenue Amount
      *           differently for Record Exempt vs Not Record Exempt items.
      *           Now, we will just calc it 1 way.
      *
      * 08/15/08  LeAnne Ramsey
      *           On the call to TF809:
      *           Added parm: Producing Company (3A)
      *
      * 09/11/08  LeAnne Ramsey
      *           Added parm to the call to TF813:
      *               Export/Domestic Flag
      *
      * 11/25/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Added 25 STF fields to TFP010 file.
      *           Populate STF fields in TFP010 from Sales History.
      *           Populate STF Net Product Revenue Amt with STF Net Sales Amount. STF
      *           Adjustment Amt will always be 0.
      *           Do NOT change any AGG totals within the '$calcs' routine.
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fomhstpl4  if   e           k disk
      *    Sales history (records selected/keyed in open query)
      *
      *
     Ftfp007    if   e           k disk
      *    Exempt codes
      *
      *
     Ftfl010c   uf a e           k disk
      *  Weekly product revenue detail
      *  (LF selects only Finished Goods)
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svprcd          s                   like(prprcd)
     D svexcd          s                   like(exexcd)
      *
      *
      * Workfields
      *
     D wknsam          s                   like(prsnsam)
      *
     D wksnsam         s                   like(prsnsam)
     D wksgsam         s                   like(prsgsam)
     D wkssllb         s                   like(prssllb)
     D wkspflb         s                   like(prspflb)
      *
     D wksslafam       s                   like(prsslafam)
     D wksslbcam       s                   like(prsslbcam)
     D wkssloxam       s                   like(prssloxam)
      *
     D wktnsam         s                   like(prtnsam)
     D wktgsam         s                   like(prtgsam)
     D wktsllb         s                   like(prtsllb)
     D wktpflb         s                   like(prtpflb)
      *
     D wksownpc        s                   like(prtownpc)
     D wkrate          s              9  6
      *
     D wktslafam       s                   like(prtslafam)
     D wktslbcam       s                   like(prtslbcam)
     D wktsloxam       s                   like(prtsloxam)
      *
12011D wkxgsam         s                   like(prxgsam)
  |  D wkxnsam         s                   like(prxnsam)
  |  D wkxsllb         s                   like(prxsllb)
  |  D wkxpflb         s                   like(prxpflb)
  |  D wkxslafam       s                   like(prxslafam)
  |  D wkxslbcam       s                   like(prxslbcam)
12011D wkxsloxam       s                   like(prxsloxam)
      *
     D wkrcexfl        s                   like(prrcexfl)
     D wkprexfl        s                   like(prprexfl)
      *
      *
      * Parm fields
      *
     D xxprcd          s                   like(prprcd)
     D xxistycd        s                   like(pristycd)
     D xxisgrcd        s                   like(prisgrcd)
     D xxisclcd        s                   like(prisclcd)
     D xxtfclcd        s                   like(prtfclcd)
     D xxtfcgcd        s                   like(prtfcgcd)
     D xxglsub         s                   like(prglsub)
     D xxinvfl         s                   like(prinvfl)
     D xxmixfl         s                   like(prmixfl)
     D xxvolfl         s                   like(prvolfl)
     D xxcgcd          s                   like(prcgcd)
     D xxcoownfl       s                   like(prcoownfl)
     D xxprdcmp        s                   like(prprdcmp)
     D xxtownpc        s                   like(prtownpc)
     D xxitycd         s                   like(pritycd)
     D xxedfl          s                   like(predfl)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldyr                   1      4  0
     D  ldwk                   5      6  0
     D  ldwbdt                 7     14  0
     D  ldsynwbdt             15     21  0
     D  ldwedt                22     29  0
     D  ldsynwedt             30     36  0
     D  ldpfcd                37     37
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read all Sales History records selected by the open query. The query
      * selects records with:
      *   1) Actual Ship Date in week
      *   2) Order type is OR=order
      *   3) Company of 360 or 960
      *   4) Item Type Code is FG=Finished Goods
      *
593  C*    *loval        setll     omhstpl4
593  C     *start        setll     omhstpl4
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      omhstpl4                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Control break
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     f4s5nb        svprcd
     C                   move      f4iusx        svexcd
      *
      *       Product and/or exempt code
      *
     C                   when      f4s5nb <> svprcd or
     C                             f4iusx <> svexcd
     C                   exsr      $upd010
     C                   z-add     f4s5nb        svprcd
     C                   move      f4iusx        svexcd
     C                   endsl
      *
      * Detail processing:
      *    Accumulate values for Weekly Product Revenue Detail record
      *
     C                   exsr      $accum010
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
      *
     C                   if        first = no
     C                   exsr      $upd010
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Accumulate Sales Data for Weekly Product Revenue Detail file
      *---------------------------------------------------------------
      *
     C     $accum010     begsr
      *
      * Calculate Net Sales Amount as:
      *                Billing Detail Gross Dollars
      *              - absorbed freight amount
      *              - trade fund accrual amount
      *              - commission amount (non-automatic accruals)
      *              - financials amount spec
      *              - financials amount freight
      *
     C                   eval      wknsam = f4kdva - f4ulva - f4unva
     C                                    - f4uova - f4upva - f4uqva
      *
      * Accumulate
      *   billing detail gross dollars as gross sales amount
      *   net sales amount (see above)
      *   weight billed into:
      *      sold pounds
      *      prepaid freight pounds (when position 1 of F4Q2CD-Shipping Method = P)
      *
      * Seaboard
     C                   select
     C                   when      f4aic3 = 360
     C                   add       f4kdva        wksgsam
     C                   add       wknsam        wksnsam
     C                   add       f4bywg        wkssllb
      *
     C                   if        %subst(f4q2cd:1:1) = 'P'
     C                   add       f4bywg        wkspflb
     C                   endif
      *
     C                   add       f4ulva        wksslafam
     C                   add       f4uova        wksslbcam
      *
     C                   add       f4unva        wkssloxam
     C                   add       f4upva        wkssloxam
     C                   add       f4uqva        wkssloxam
      * Triumph
     C                   when      f4aic3 = 960
     C                   add       f4kdva        wktgsam
     C                   add       wknsam        wktnsam
     C                   add       f4bywg        wktsllb
      *
     C                   if        %subst(f4q2cd:1:1) = 'P'
     C                   add       f4bywg        wktpflb
     C                   endif
      *
     C                   add       f4ulva        wktslafam
     C                   add       f4uova        wktslbcam
      *
     C                   add       f4unva        wktsloxam
     C                   add       f4upva        wktsloxam
     C                   add       f4uqva        wktsloxam
12011 * Seaboard Triumph Foods
  |  C                   when      f4aic3 = 440
  |  C                   add       f4kdva        wkxgsam
  |  C                   add       wknsam        wkxnsam
  |  C                   add       f4bywg        wkxsllb
  |   *
  |  C                   if        %subst(f4q2cd:1:1) = 'P'
  |  C                   add       f4bywg        wkxpflb
  |  C                   endif
  |   *
  |  C                   add       f4ulva        wkxslafam
  |  C                   add       f4uova        wkxslbcam
  |   *
  |  C                   add       f4unva        wkxsloxam
  |  C                   add       f4upva        wkxsloxam
12011C                   add       f4uqva        wkxsloxam
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Break logic when Product and/or Exempt Code changes
      *---------------------------------------------------------------
      *
     C     $upd010       begsr
      *
      * Using the saved Exempt Code, retrieve its 'exempt' flag values
      * from the Exempt Code Master file.
      *
     C     svexcd        chain     tfp007                             92
     C                   if        *in92 = *off
     C                   move      exrcexfl      wkrcexfl
     C                   move      exprexfl      wkprexfl
     C                   else
     C                   move      no            wkrcexfl
     C                   move      no            wkprexfl
     C                   endif
      *
      * Records in TFP010 are unique by Product/Date/Exempt Flag values. So,
      * if you already have a TFP010 record for this combination, update it;
      * otherwise, write a TFP010 record for this combination.
      *
     C     key02         chain     tfl010c                            92
     C                   if        *in92 = *on                                  If new
     C                   exsr      $wrt010
     C                   else
      *
     C                   add       wksgsam       prsgsam
     C                   add       wksnsam       prsnsam
     C                   add       wkssllb       prssllb
     C                   add       wkspflb       prspflb
      *
     C                   add       wksslafam     prsslafam
     C                   add       wksslbcam     prsslbcam
     C                   add       wkssloxam     prssloxam
      *
     C                   add       wktgsam       prtgsam
     C                   add       wktnsam       prtnsam
     C                   add       wktsllb       prtsllb
     C                   add       wktpflb       prtpflb
      *
     C                   add       wktslafam     prtslafam
     C                   add       wktslbcam     prtslbcam
     C                   add       wktsloxam     prtsloxam
      *
12011C                   add       wkxgsam       prxgsam
  |  C                   add       wkxnsam       prxnsam
  |  C                   add       wkxsllb       prxsllb
  |  C                   add       wkxpflb       prxpflb
  |   *
  |  C                   add       wkxslafam     prxslafam
  |  C                   add       wkxslbcam     prxslbcam
12011C                   add       wkxsloxam     prxsloxam
      *
     C                   exsr      $calcs
     C                   update    prrec
     C                   endif                                                  If new
      *
      * Clear all accumulators.
      *
     C                   exsr      $clear
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Weekly Product Revenue Detail record
      *---------------------------------------------------------------
      *
     C     $wrt010       begsr
      *
     C                   clear                   prrec
      *
     C                   z-add     ldyr          pryr
     C                   z-add     ldwk          prwk
     C                   z-add     ldwbdt        prwbdt
     C                   z-add     ldwedt        prwedt
     C                   move      ldpfcd        prpfcd
      *
     C                   z-add     svprcd        prprcd
     C                   move      wkrcexfl      prrcexfl
     C                   move      wkprexfl      prprexfl
      * Seaboard
     C                   z-add     wksgsam       prsgsam
     C                   z-add     wksnsam       prsnsam
     C                   z-add     wkssllb       prssllb
     C                   z-add     wkspflb       prspflb
      *
     C                   z-add     wksslafam     prsslafam
     C                   z-add     wksslbcam     prsslbcam
     C                   z-add     wkssloxam     prssloxam
      * Triumph
     C                   z-add     wktgsam       prtgsam
     C                   z-add     wktnsam       prtnsam
     C                   z-add     wktsllb       prtsllb
     C                   z-add     wktpflb       prtpflb
      *
     C                   z-add     wktslafam     prtslafam
     C                   z-add     wktslbcam     prtslbcam
     C                   z-add     wktsloxam     prtsloxam
      *
      * Seaboard Triumph Foods
12011C                   z-add     wkxgsam       prxgsam
  |  C                   z-add     wkxnsam       prxnsam
  |  C                   z-add     wkxsllb       prxsllb
  |  C                   z-add     wkxpflb       prxpflb
  |   *
  |  C                   z-add     wkxslafam     prxslafam
  |  C                   z-add     wkxslbcam     prxslbcam
12011C                   z-add     wkxsloxam     prxsloxam
      *
      * Retrieve TF Classification and Item Structure stuff
      *
     C                   call      'TF813'
     C                   parm      prprcd        xxprcd
     C     pristycd      parm      0             xxistycd
     C     prisgrcd      parm      0             xxisgrcd
     C     prisclcd      parm      0             xxisclcd
     C     prtfclcd      parm      *blank        xxtfclcd
     C     prtfcgcd      parm      *blank        xxtfcgcd
     C     prglsub       parm      *blank        xxglsub
     C     pritycd       parm      *blank        xxitycd
     C     prcoownfl     parm      *blank        xxcoownfl
     C     prprdcmp      parm      *blank        xxprdcmp
     C     predfl        parm      *blank        xxedfl
      *
      *
      * Retrieve Item Structure Values
      *
     C                   call      'TF809'
     C                   parm      prtfclcd      xxtfclcd
     C                   parm      pristycd      xxistycd
     C                   parm      prisgrcd      xxisgrcd
     C                   parm      prisclcd      xxisclcd
     C     prinvfl       parm      *blank        xxinvfl
     C     prmixfl       parm      *blank        xxmixfl
     C     prvolfl       parm      *blank        xxvolfl
     C     prcgcd        parm      *blank        xxcgcd
     C     prtownpc      parm      0             xxtownpc
     C                   parm      *blank        xxprdcmp
      *
      * Make calculations
      *
     C                   exsr      $calcs
      *
     C                   write     prrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clear all accumulators
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             wknsam
      *
     C                   z-add     0             wksgsam
     C                   z-add     0             wksnsam
     C                   z-add     0             wkssllb
     C                   z-add     0             wkspflb
      *
     C                   z-add     0             wksslafam
     C                   z-add     0             wksslbcam
     C                   z-add     0             wkssloxam
      *
     C                   z-add     0             wktgsam
     C                   z-add     0             wktnsam
     C                   z-add     0             wktsllb
     C                   z-add     0             wktpflb
      *
     C                   z-add     0             wktslafam
     C                   z-add     0             wktslbcam
     C                   z-add     0             wktsloxam
      *
12011C                   z-add     0             wkxgsam
  |  C                   z-add     0             wkxnsam
  |  C                   z-add     0             wkxsllb
  |  C                   z-add     0             wkxpflb
  |   *
  |  C                   z-add     0             wkxslafam
  |  C                   z-add     0             wkxslbcam
12011C                   z-add     0             wkxsloxam
      *
     C                   z-add     0             wksownpc
     C                   z-add     0             wkrate
      *
     C                   move      *blank        wkrcexfl
     C                   move      *blank        wkprexfl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculations for fields in TFP010
      *---------------------------------------------------------------
      *
     C     $calcs        begsr
      *
      * If this is a Coowned product,
      * calculate the Seaboard % Owned and the rate to use for spliting
      *
     C                   if        prcoownfl = yes and prtownpc <> 0
     C     100           sub       prtownpc      wksownpc
     C                   eval      wkrate = wksownpc / 100
     C                   endif
      *
      * Calculate 'Total Sales Expense Amount'
      *
      *         Seaboard:
     C                   eval      prsslsxam = prsslafam + prsslbcam + prssloxam
      *         Triumph:
     C                   eval      prtslsxam = prtslafam + prtslbcam + prtsloxam
      *
12011 *         Seaboard Triumph Foods:
     C                   eval      prxslsxam = prxslafam + prxslbcam + prxsloxam
      *
      * Add Seaboard + Triumph values to get 'Aggregate' values for Sales Expenses:
      *   absorbed freight amount
      *   broker commission amount
      *   other sales expenses amount
      *   total sales expense amount
      *
     C                   eval      praslafam = prsslafam + prtslafam
     C                   eval      praslbcam = prsslbcam + prtslbcam
     C                   eval      prasloxam = prssloxam + prtsloxam
     C                   eval      praslsxam = prsslsxam + prtslsxam
      *
      * Add Seaboard + Triumph values to get 'Aggregate' values for:
      *
      * Calculate the Aggregate prepaid freight pounds
      * and split the prepaid freight based on the Seaboard Coowned %
      *
     C     prspflb       add       prtpflb       prapflb
     C                   if        wksownpc <> 0
     C                   eval(h)   prspflb = prapflb * wkrate
     C                   eval      prtpflb = prapflb - prspflb
     C                   endif
      *
      * Aggregate sold pounds
      *
     C     prssllb       add       prtsllb       prasllb
      *
      * Aggregate gross sales amount
      * Aggregate gross product revenue amount (populated with Gross Sales Amount)
      *
     C     prsgsam       add       prtgsam       pragsam
     C     prsgsam       add       prtgsam       pragpram
      *
      * Aggregate net sales amount
      * Aggregate net product revenue amount (populated with Net Sales Amount)
      *
     C     prsnsam       add       prtnsam       pransam
     C     prsnsam       add       prtnsam       pranpram
      *
      * Set Aggregate Net Product Revenue Percent to 100%.
      *
     C                   z-add     100           pranprpc
      *
      * Calculate: Aggregate Net Product Revenue Price per Pound
      *
     C                   if        prasllb <> 0
     C     pranpram      div(h)    prasllb       pranprpr
     C                   endif
      *
      *
      * Calculate: Seaboard Net Product Revenue Amount
      *
      * When Record Exempt Flag = NO
      *      If TF Sold Pounds are zero,
      *         set value equal to Aggregate Net Product Revenue Amount
      *      else,
      *         aggregate net product revenue price per pound * SBF sold pounds
      *
      * When Record Exempt Flag = YES
      *      set value equal to SBF Net Sales Amount
      *
     C                   select
     C                   when      prrcexfl = no
     C                   if        prtsllb = 0
     C                   z-add     pranpram      prsnpram
     C                   else
     C     pranprpr      mult(h)   prssllb       prsnpram
     C                   endif
      *
     C                   when      prrcexfl = yes
     C                   z-add     prsnsam       prsnpram
     C                   endsl
      *
      * Now, override the SBF Net Product Revenue Amount just calculated based on
      * the CoOwned % (calc: aggregate net product revenue amount * SBF CoOwned %)
      *
     C                   if        wksownpc <> 0
     C                   eval(h)   prsnpram = pranpram * wkrate
     C                   endif
      *
      *
      * Calculate  Triumph Net Product Revenue Amount:
      *            Aggregate Net Product Revenue Amt less Seaboard Net Product Revenue Amount
      *
     C     pranpram      sub       prsnpram      prtnpram
      *
      *
12011 * R12011-Calculate STF Net Product Revenue Amount:
  |   *            STF Net Product Rev Amt = STF Net Sales Amt
  |   *
12011C                   eval      prxnpram = prxnsam
      *
      *
      * Calculate: Seaboard Net Product Revenue Percent
      *   When Coowned Flag = yes
      *            set value equal to SBF Owned %
      *   When TF Sold Pounds are zero, then
      *            set value equal to 100%
      *   When SBF Sold Pounds are zero, then
      *            set value equal to 0%
      *   else, calc as:
      *            Seaboard Net Product Revenue Amount / Aggregate Net Product Revenue Amount
      *            Then, multiply the result times 100 to get the value into % format
      *
     C                   select
     C                   when      wksownpc <> 0
     C                   z-add     wksownpc      prsnprpc
      *
     C                   when      prtsllb = 0
     C                   z-add     100           prsnprpc
      *
     C                   when      prssllb = 0
     C                   z-add     0             prsnprpc
     C
     C                   when      pranpram <> 0
     C                   eval(h)   prsnprpc = (prsnpram / pranpram) * 100
     C                   endsl
      *
      *
      * Calculate: Triumph Net Product Revenue Percent as:
      *            100% less Seaboard Net Product Revenue Percent
      *
     C     100           sub       prsnprpc      prtnprpc
      *
12011 * Calculate: Seaboard Triumph Foods Net Product Revenue Percent as:
  |   *            100%
  |   *
  |  C                   if        prxnsam = 0
  |  C                   eval      prxnprpc = 0
  |  C                   else
  |  C                   eval      prxnprpc = 100
12011C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key02         klist
     C                   kfld                    svprcd
     C                   kfld                    ldwedt
     C                   kfld                    wkrcexfl
     C                   kfld                    wkprexfl
      *
     C                   endsr
      /eject
