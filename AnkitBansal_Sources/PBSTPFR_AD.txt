// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBSTPFR
// ?Date: 14.08.2025 Time: 12:03:32
// ?------------------------------------------------------------------------------------------------

//?USER: Process top of page

// TOP.Company Number = PAR.PFS Company Number
TOP_Company_Number = PAR.PFS_Company_Number;

// TOP.PFS Batch Date = PAR.PFS Batch Date
TOP_PFS_Batch_Date = PAR.PFS_Batch_Date;

// TOP.PFS Batch Time = PAR.PFS Batch Time
TOP_PFS_Batch_Time = PAR.PFS_Batch_Time;

// TOP.PFS User ID = PAR.PFS User ID
TOP_PFS_User_ID = PAR.PFS_User_ID;

EXECUTE FUNCTION(Rtv PFS Production Dt RT) TYPE(RTVOBJ) FILE(PBB1CPP)           AC2111495;
PARAMETER(DB1.PFS_Company_Number);
PARAMETER(TOP_PFS_Batch_Date);
PARAMETER(TOP_PFS_Batch_Time);
PARAMETER(TOP_PFS_User_ID);
PARAMETER(TOP_PFS_Production_Date);
{
 //?USER: Initialize routine

 //?E3787 JJH 09/01/15 - This RTVOBJ is used to get the PFS Production
 //?  Date from the first record in PFS Prod Sched Batch Dtl file.
 //?USER: Process Data record

 // PAR.PFS Production Date = DB1.PFS Production Date
 PAR.PFS_Production_Date = DB1.PFS_Production_Date;

 QUIT;

}


//?Process Status
CASE;

// IF PAR.PFS Process Status is Ready to Send
IF PAR.PFS_Process_Status = 6;

// TOP.PFS Process Status Desc = CON.Ready to send
TOP_PFS_Process_Status_Desc = 'Ready to send';

//?Process Status
// IF PAR.PFS Process Status is Sent
IF PAR.PFS_Process_Status = 9;

// TOP.PFS Process Status Desc = CON.Sent
TOP_PFS_Process_Status_Desc = 'Sent';

//?Process Status
// IF PAR.PFS Process Status is Batch Selection
IF PAR.PFS_Process_Status = 4;

// TOP.PFS Process Status Desc = CON.Batch Selection
TOP_PFS_Process_Status_Desc = 'Batch Selection';

ENDIF;

//?Update Baseline
CASE;

// IF PAR.PFS Baseline Schedule is Baseline
IF PAR.PFS_Baseline_Schedule = 'B';

// TOP.Update Baseline Sts = CND.Yes
TOP_Update_Baseline_Sts = 'Y';

//?Update Baseline
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Update Baseline Sts = CND.No
TOP_Update_Baseline_Sts = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT PFS Company Number header format

// SUPPRESSED PRINT PFS Batch Date header format

// SUPPRESSED PRINT PFS Batch Time header format

CASE;

IF NEW PFS_Item_Structure_Type;
EXECUTE FUNCTION(RTV  Description       RT) TYPE(RTVOBJ) FILE(OME8REP)          AC1219219;
PARAMETER(CUR.PFS_Item_Structure_Type);
PARAMETER(CUR.Item_Structure_Type_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


// Print PFS Item Structure Type header format
PRINT PFS Item Structure Type header format;

ENDIF;

CASE;

IF NEW PFS_Item_Structure_Group;
EXECUTE FUNCTION(Rtv Group Description  RT) TYPE(RTVOBJ) FILE(OME9REP)          AC1202656;
PARAMETER(CUR.PFS_Item_Structure_Group);
PARAMETER(CUR.PFS_Item_Structure_Type);
PARAMETER(CUR.Item_Structure_Group_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Print PFS Item Structure Group header format
PRINT PFS Item Structure Group header format;

ENDIF;

// SUPPRESSED PRINT PFS Primary UOM header format

// SUPPRESSED PRINT PFS Base/Converted header format

// SUPPRESSED PRINT PFS Item Code header format

//?USER: On print of detail format

//?Company Item Description Line 1
EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CUR.PFS_Company_Number);
PARAMETER(CUR.PFS_Item_Code);
PARAMETER(CUR.Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(NLL.UOM_Primary);
PARAMETER(NLL.UOM_Second);
PARAMETER(NLL.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Box Description
EXECUTE FUNCTION(RTV BOX ID FOR ITEM    RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1396535;
PARAMETER(CUR.PFS_Company_Number);
PARAMETER(CUR.PFS_Item_Code);
PARAMETER(NLL.Box_iD);
PARAMETER(NLL.Unit_Weight);
PARAMETER(CUR.Box_Description);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // WRK.Unit Weight = CON.*ZERO
 WRK.Unit_Weight = *ZERO;

 EXECUTE FUNCTION(RTV Item Type & PckCD  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1396536;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.Unit_Weight);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 PARAMETER(WRK.Pallet_Tare_Weight);
 PARAMETER(WRK.Misc_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Package Type Code is Box
 IF PAR.Package_Type_Code = 'B';

 // PAR.Box Description = WRK.Description Line One
 PAR.Box_Description = WRK.Description_Line_One;

 // PAR.Unit Weight = WRK.Unit Weight
 PAR.Unit_Weight = WRK.Unit_Weight;

 // PAR.Box iD = DB1.Component Item Code * CON.1 *
 PAR.Box_iD = DB1.Component_Item_Code * 1;

 QUIT;

 ENDIF;

}


//?Bag Code (Packaging Item Code)
EXECUTE FUNCTION(RTV Itm Bag Code      RT) TYPE(RTVOBJ) FILE(POAZCPP)           AC1790992;
PARAMETER(CUR.PFS_Company_Number);
PARAMETER(CUR.PFS_Item_Code);
PARAMETER(CUR.Packaging_Item_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?Pckg Item Description
EXECUTE FUNCTION(RTV Packaging Item    RT) TYPE(RTVOBJ) FILE(POARREP)           AC1602514;
PARAMETER(CUR.PFS_Company_Number);
PARAMETER(CUR.Packaging_Item_Code);
PARAMETER(CUR.Pckg_Item_Description);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Done & Need
// CUR.Done Usr = CON.____
CUR.Done_Usr = '____';

// CUR.Need Usr = CON.____
CUR.Need_Usr = '____';

//?USER: Print required level totals

// SUPPRESSED PRINT PFS Item Code totals format

// SUPPRESSED PRINT PFS Base/Converted totals format

// SUPPRESSED PRINT PFS Primary UOM totals format

// SUPPRESSED PRINT PFS Item Structure Group totals format

// SUPPRESSED PRINT PFS Item Structure Type totals format

// SUPPRESSED PRINT PFS Batch Time totals format

// SUPPRESSED PRINT PFS Batch Date totals format

// SUPPRESSED PRINT PFS Company Number totals format

