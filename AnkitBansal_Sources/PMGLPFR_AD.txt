// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMGLPFR
// ?Date: 14.08.2025 Time: 12:05:33
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?** 07/24/08 SAZ Added Summary level field.
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?** Select meat cost group if entered
CASE;

// IF PAR.TFMC Group Code is Entered
IF PAR.TFMC_Group_Code <> *BLANK;

CASE;

// IF DB1.TFMC Group Code NE PAR.TFMC Group Code
IF DB1.TFMC_Group_Code <> PAR.TFMC_Group_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?** Select Record Status if entered
CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

CASE;

// IF DB1.Record Status NE PAR.Record Status
IF DB1.Record_Status <> PAR.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: On print of first page format

// 1PG.TFMC Group Code = PAR.TFMC Group Code
X1PG_TFMC_Group_Code = PAR.TFMC_Group_Code;

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

//?** Meat Cost Description, or *ALL if par blanks
CASE;

// IF 1PG.TFMC Group Code is Not Entered
IF X1PG_TFMC_Group_Code = *BLANK;

// 1PG.TFMC Group Description = CON.*ALL
X1PG_TFMC_Group_Description = *ALL;

//?** Meat Cost Description, or *ALL if par blanks
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.TFMC Group Description = Condition name of 1PG.TFMC Group Code
X1PG_TFMC_Group_Description = RTVCND(X1PG_TFMC_Group_Code);

ENDIF;

//?** Record Status condition name, or *ALL if Rec Sts is blanks
CASE;

// IF 1PG.Record Status is *blank
IF X1PG_Record_Status = *BLANK;

// 1PG.Status Description = CON.*ALL
X1PG_Status_Description = *ALL;

//?** Record Status condition name, or *ALL if Rec Sts is blanks
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Status Description = Condition name of 1PG.Record Status
X1PG_Status_Description = RTVCND(X1PG_Record_Status);

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: On print of detail format

// CUR.Description 14A      USR = Condition name of CUR.TFMC Summary Level
CUR.Description_14A_USR = RTVCND(CUR.TFMC_Summary_Level);

// CUR.Status Description = Condition name of CUR.Record Status
CUR.Status_Description = RTVCND(CUR.Record_Status);

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

