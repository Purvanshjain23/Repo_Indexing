// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLUFXFR
// ?Date: 14.08.2025 Time: 02:55:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Crt/Upd Tattoo Detail and Update Tattoo Header
//?Modificaitons and Comments
DO;

//?RMC Force MANUAL create sts so the next pgm doesnt alter pen cur head
//?E4154 JJH 07/28/15
//?- Modified: Rtv TST,Crt Ttt Dtl   RT - Tattoo Scale Ticket
//?  Remove logic that only updated Pen when the Record Created Status
//?  is Manual Record.
//?H16853 ISE 11/02/2020 CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

EXECUTE FUNCTION(Rtv TST,Crt Ttt Dtl   RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1183557;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.TH_Scale_Ticket_Sts);
{
 //?USER: Initialize routine

 //?E4154 JJH 07/28/15 - Remove logic that only updated Pen when the
 //?  Record Created Status is Manual Record.
 //?USER: Process Data record

 CASE;

 // IF PAR.TH Scale Ticket Sts is Not Printed
 IF PAR.TH_Scale_Ticket_Sts = 'N';

 //?Change Tattoo Header and Change/Create Tattoo Detail
 EXECUTE FUNCTION(Rtv/Crt TttDtl F/TST  RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1135542;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TST_Wgt);
 PARAMETER(DB1.TST_Head);
 PARAMETER(DB1.Pen_Company_Number);
 PARAMETER(DB1.Pen_Number);
 {
  //?USER: Processing if Data record not found

  //?Calculate average live weight
  // WRK.TD Avg Live Wgt = PAR.TD Live Wgt / PAR.TD Pen Head *
  WRK.TD_Avg_Live_Wgt = PAR.TD_Live_Wgt / PAR.TD_Pen_Head;

  //?Find last sequence number for key
  // WRK.TD Sequence Number = CON.*ZERO
  WRK.TD_Sequence_Number = *ZERO;

  EXECUTE FUNCTION(Rtv Last Seq Nbr      RT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1135613;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(WRK.TD_Sequence_Number);
  {
   //?USER: Processing if Data record not found

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.TD_Sequence_Number = *ZERO;

   //?USER: Process Data record

   // PAR.TD Sequence Number = DB1.TD Sequence Number
   PAR.TD_Sequence_Number = DB1.TD_Sequence_Number;

   QUIT;

  }

  // WRK.TD Sequence Number = WRK.TD Sequence Number + CON.1
  WRK.TD_Sequence_Number = WRK.TD_Sequence_Number + 1;

  //?Create new tattoo detail
  EXECUTE FUNCTION(Create Tattoo Detail) TYPE(CRTOBJ) FILE(PKA2CPP)               AB1101750;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(WRK.TD_Sequence_Number);
  PARAMETER(PAR.TD_Live_Wgt);
  PARAMETER(PAR.TD_Pen_Head);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(WRK.TD_Avg_Live_Wgt);
  PARAMETER(WRK.Blank_USR);
  PARAMETER('N');
  PARAMETER('N');
  PARAMETER('N');
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Pen_Company_Number);
  PARAMETER(PAR.Pen_Number);
  PARAMETER('O');
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('A');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  //?USER: Process Data record

  // WRK.TD Live Wgt = DB1.TD Live Wgt + PAR.TD Live Wgt
  WRK.TD_Live_Wgt = DB1.TD_Live_Wgt + PAR.TD_Live_Wgt;

  // WRK.TD Pen Head = DB1.TD Pen Head + PAR.TD Pen Head
  WRK.TD_Pen_Head = DB1.TD_Pen_Head + PAR.TD_Pen_Head;

  // WRK.TD Avg Live Wgt = WRK.TD Live Wgt / WRK.TD Pen Head *
  WRK.TD_Avg_Live_Wgt = WRK.TD_Live_Wgt / WRK.TD_Pen_Head;

  EXECUTE FUNCTION(Chg Tattoo Detail     CH) TYPE(CHGOBJ) FILE(PKA2CPP)           AB1101751;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TD_Sequence_Number);
  PARAMETER(WRK.TD_Live_Wgt);
  PARAMETER(WRK.TD_Pen_Head);
  PARAMETER(DB1.TD_Yard_Dead);
  PARAMETER(DB1.TD_Held_Over);
  PARAMETER(DB1.TD_Held_Over_Status);
  PARAMETER(DB1.TD_Drive_Time);
  PARAMETER(DB1.TD_Drive_Hour);
  PARAMETER(DB1.TD_Drive_Card_Number);
  PARAMETER(WRK.TD_Avg_Live_Wgt);
  PARAMETER(DB1.TD_Gen_Bal_To_Kill);
  PARAMETER(DB1.TD_Recs_Created_for_HO);
  PARAMETER(DB1.TD_User_Status_2);
  PARAMETER(DB1.TD_User_Status_3);
  PARAMETER(DB1.TD_User_Date_1);
  PARAMETER(DB1.TD_User_Date_2);
  PARAMETER(DB1.TD_Drive_Date);
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(DB1.TDP_Process_Code);
  PARAMETER(DB1.Held_Over_Pen_Company_Num);
  PARAMETER(DB1.Held_Over_Pen_Number);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?E4154 JJH 07/28/15 - Remove logic that only updated Pen when the
 //?  Record Created Status is Manual Record.
 EXECUTE FUNCTION(Rtv/Chg Pen Hd,Gntcs  RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1136497;
 PARAMETER(DB1.Pen_Company_Number);
 PARAMETER(DB1.Pen_Number);
 PARAMETER(DB1.TST_Head);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Tattoo GENETICS) TYPE(RTVOBJ) FILE(PKA1CPP)                AB1107783;
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(WRK.GN_Genetic_Code);
  PARAMETER(WRK.Pen_Description);
  {
   //?USER: Processing if Data record not found

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.GN_Genetic_Code = *BLANK;

   // *MO.VE             1183529*Bu = ilt. in functions
   PAR.Pen_Description = *BLANK;

   //?USER: Process Data record

   // PAR.GN Genetic Code = DB1.GN Genetic Code
   PAR.GN_Genetic_Code = DB1.GN_Genetic_Code;

   EXECUTE FUNCTION(Rtv Genetic Record    RT) TYPE(RTVOBJ) FILE(PKAIREP)           AB1107738;
   PARAMETER(DB1.GN_Genetic_Code);
   PARAMETER(PAR.Pen_Description);
   {
    //?USER: Processing if Data record not found

    // *MO.VE             1183529*Bu = ilt. in functions
    PAR.GN_Description = *BLANK;

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

  }

  CASE;

  // IF DB1.Pen Current Head is *Zeros
  IF DB1.Pen_Current_Head = *ZERO;

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF WRK.GN Genetic Code NE DB1.GN Genetic Code
  IF WRK.GN_Genetic_Code <> DB1.GN_Genetic_Code;

  // WRK.GN Genetic Code = DB1.GN Genetic Code
  WRK.GN_Genetic_Code = DB1.GN_Genetic_Code;

  // WRK.Pen Description = CON.MIXED
  WRK.Pen_Description = 'MIXED';

  ENDIF;

  ENDIF;

  // WRK.Pen Current Head = DB1.Pen Current Head + PAR.Pen Current Head
  WRK.Pen_Current_Head = DB1.Pen_Current_Head + PAR.Pen_Current_Head;

  EXECUTE FUNCTION(Chg Pen               CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1102758;
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(WRK.Pen_Description);
  PARAMETER(DB1.Pen_Maximun_Capacity);
  PARAMETER(WRK.Pen_Current_Head);
  PARAMETER(DB1.Pen_Current_Drive_Card_No);
  PARAMETER(DB1.Pen_Sts);
  PARAMETER(DB1.Pen_Drive_Sequence);
  PARAMETER(DB1.Pen_Type);
  PARAMETER(DB1.Pen_Adjustment);
  PARAMETER(WRK.GN_Genetic_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 //?BOH - Change Status to Locked so BOH info may not be changed!
 EXECUTE FUNCTION(Rtv/Chg BOH Status     RT) TYPE(RTVOBJ) FILE(PKAWCPP)          AB1145779;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER('L');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg BOH Status        CH) TYPE(CHGOBJ) FILE(PKAWCPP)           AB1145821;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOH_Buy_Order_Date);
  PARAMETER(DB1.BOH_Kill_Date);
  PARAMETER(DB1.BOH_Payment_Type);
  PARAMETER(DB1.BOH_Buy_Order_Type);
  PARAMETER(DB1.BOH_Market_Add_Deduct);
  PARAMETER(PAR.BOH_Status);
  PARAMETER(DB1.BOH_Delv_Plan_Printed);
  PARAMETER(DB1.BOH_Quote_Price_Type);
  PARAMETER(DB1.BOH_Quoted_Base_Mkt_Price);
  PARAMETER(*MISSING);
  PARAMETER(*MISSING);
  PARAMETER(*MISSING);
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PC_Contract_Code);
  PARAMETER(DB1.PSC_Sub_Contract_Code);
  PARAMETER(DB1.GN_Genetic_Code);
  PARAMETER(DB1.PO_Option_Code);
  PARAMETER(DB1.CMP_Program_Code);
  PARAMETER(DB1.HB_Buyer_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Update TH Scale Ticket Sts with P
 EXECUTE FUNCTION(Rtv/Chg f/SclTk Reprnt RT) TYPE(RTVOBJ) FILE(PKA1CPP)          AB1156408;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Ttto's SclTckPrt  CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1190813;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER('P');
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

}


// Call program Chg BOL/THDR Rec/WgtRapXF.
CALL PROGRAM(Chg BOL/THDR Rec/WgtRapXF) ('PLUGXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);

