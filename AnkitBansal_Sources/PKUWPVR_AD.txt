// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKUWPVR
// ?Date: 14.08.2025 Time: 02:52:58
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

//?USER: Load screen

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// DTL.CSD Company Number = PAR.CC Company Number
DTL.CSD_Company_Number = PAR.CC_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(LCL.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Validate fields

CASE;

// IF DTL.CSD Type is Other
IF DTL.CSD_Type = 'O';

// DTL.CSD Month = CON.*ZERO
DTL.CSD_Month = *ZERO;

// DTL.CSD Week = CON.*ZERO
DTL.CSD_Week = *ZERO;

//?Val:  From Date
CASE;

// IF DTL.Date From USR EQ LCL.Zero USR
IF DTL.Date_From_USR = LCL.Zero_USR;

// Send error message - 'Date is required.'
ERROR(PRK0772);
MSGPARM(DTL.Date_From_USR);

ENDIF;

//?Val:  To Date
CASE;

// IF DTL.Date To   USR EQ LCL.Zero USR
IF DTL.Date_To_USR = LCL.Zero_USR;

// Send error message - 'Date is required.'
ERROR(PRK0772);
MSGPARM(DTL.Date_From_USR);

ENDIF;

// IF DTL.CSD Type is Monthly
IF DTL.CSD_Type = 'M';

// DTL.CSD Week = CON.*ZERO
DTL.CSD_Week = *ZERO;

// DTL.Date From USR = CON.*ZERO
DTL.Date_From_USR = *ZERO;

// DTL.Date To   USR = CON.*ZERO
DTL.Date_To_USR = *ZERO;

// IF DTL.CSD Type is Weekly
IF DTL.CSD_Type = 'W';

// DTL.CSD Month = CON.*ZERO
DTL.CSD_Month = *ZERO;

// DTL.Date From USR = CON.*ZERO
DTL.Date_From_USR = *ZERO;

// DTL.Date To   USR = CON.*ZERO
DTL.Date_To_USR = *ZERO;

ENDIF;

//?CALC: Screen function fields

// DTL.Condition Name USR = Condition name of DTL.CSD Type
DTL.Condition_Name_USR = RTVCND(DTL.CSD_Type);

//?USER: User defined action

// LCL.Year Alpha Usr = CVTVAR(DTL.CSD Year)
LCL.Year_Alpha_Usr = CVTVAR(DTL.CSD_Year);

CASE;

// IF DTL.CSD Type is Other
IF DTL.CSD_Type = 'O';

EXECUTE FUNCTION(Del Std Deviation     RT) TYPE(RTVOBJ) FILE(PKEYCPP)           AB1232569;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(DTL.Date_From_USR);
PARAMETER(DTL.Date_To_USR);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Company Std Deviat) TYPE(DLTOBJ) FILE(PKEYCPP)          AB1232467;
 PARAMETER(DB1.CSD_Company_Number);
 PARAMETER(DB1.CSD_Type);
 PARAMETER(DB1.CSD_From_Date);
 PARAMETER(DB1.CSD_To_Date);
 PARAMETER(DB1.CSD_Source_Type);
 PARAMETER(DB1.CSD_Producer_Code);
 PARAMETER(DB1.CSD_Location_Code);
}


// Call program Crt Std Deviation     UP.
SBMJOB;
CALL PROGRAM(Crt Std Deviation     UP) ('PKUUUPR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(DTL.Date_From_USR);
PARAMETER(DTL.Date_To_USR);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
SBMJOBEND;

// IF DTL.CSD Type is Monthly
IF DTL.CSD_Type = 'M';

//?Monthly
CASE;

// IF DTL.CSD Month is Entered
IF DTL.CSD_Month <> *ZERO;

// LCL.Month Alpha USR = CVTVAR(DTL.CSD Month)
LCL.Month_Alpha_USR = CVTVAR(DTL.CSD_Month);

//?* From Date *
// LCL.Date From Convert USR = CONCAT(LCL.Month Alpha USR,CON.01,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Month_Alpha_USR + '01' (*ZERO);

// LCL.Date From Convert USR = CONCAT(LCL.Date From Convert USR,LCL.Year Alpha Usr,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Date_From_Convert_USR + LCL.Year_Alpha_Usr (*ZERO);

// Call program Cvt Date              UP.
CALL PROGRAM(Cvt Date              UP) ('PKPOUPR');
PARAMETER(LCL.Date_From_Convert_USR);
PARAMETER(LCL.Date_To_Convert_USR);
PARAMETER(*MDYY);
PARAMETER(*CYMD);
PARAMETER(*NONE);

// LCL.Date Alpha USR = LCL.Date To Convert USR
LCL.Date_Alpha_USR = LCL.Date_To_Convert_USR;

// LCL.CSD From Date = CVTVAR(LCL.Date Alpha USR)
LCL.CSD_From_Date = CVTVAR(LCL.Date_Alpha_USR);

//?* To Date   *
// LCL.Number 1 USR = LCL.CSD From Date *MONTH LENGTH
LCL.Number_1_USR = DATEDTLS(LCL.CSD_From_Date 'ML' 1111111 'NONE' 'N' 1);

// LCL.Length Usr Txt = CVTVAR(LCL.Number 1 USR)
LCL.Length_Usr_Txt = CVTVAR(LCL.Number_1_USR);

// LCL.Date From Convert USR = CONCAT(LCL.Month Alpha USR,LCL.Length Usr Txt,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Month_Alpha_USR + LCL.Length_Usr_Txt (*ZERO);

// LCL.Date From Convert USR = CONCAT(LCL.Date From Convert USR,LCL.Year Alpha Usr,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Date_From_Convert_USR + LCL.Year_Alpha_Usr (*ZERO);

// Call program Cvt Date              UP.
CALL PROGRAM(Cvt Date              UP) ('PKPOUPR');
PARAMETER(LCL.Date_From_Convert_USR);
PARAMETER(LCL.Date_To_Convert_USR);
PARAMETER(*MDYY);
PARAMETER(*CYMD);
PARAMETER(*NONE);

// LCL.Date Alpha USR = LCL.Date To Convert USR
LCL.Date_Alpha_USR = LCL.Date_To_Convert_USR;

// LCL.CSD To Date = CVTVAR(LCL.Date Alpha USR)
LCL.CSD_To_Date = CVTVAR(LCL.Date_Alpha_USR);

//?* Create Standard Deviation *
EXECUTE FUNCTION(Del Std Deviation     RT) TYPE(RTVOBJ) FILE(PKEYCPP)           AB1232569;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Company Std Deviat) TYPE(DLTOBJ) FILE(PKEYCPP)          AB1232467;
 PARAMETER(DB1.CSD_Company_Number);
 PARAMETER(DB1.CSD_Type);
 PARAMETER(DB1.CSD_From_Date);
 PARAMETER(DB1.CSD_To_Date);
 PARAMETER(DB1.CSD_Source_Type);
 PARAMETER(DB1.CSD_Producer_Code);
 PARAMETER(DB1.CSD_Location_Code);
}


// Call program Crt Std Deviation     UP.
SBMJOB;
CALL PROGRAM(Crt Std Deviation     UP) ('PKUUUPR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
PARAMETER(DTL.CSD_Month);
PARAMETER(*ZERO);
SBMJOBEND;

//?Monthly
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Number 1 USR = CON.01
LCL.Number_1_USR = 01;

// LCL.Year USR = JOB.*Job date *YEAR
LCL.Year_USR = DATEDTLS(JOB.*Job_date 'YR' 1111111 'NONE' 'N' 1);

CASE;

// IF DTL.CSD Year LT LCL.Year USR
IF DTL.CSD_Year < LCL.Year_USR;

// LCL.Number 2 USR = CON.12
LCL.Number_2_USR = 12;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Number 2 USR = JOB.*Job date *MONTH
LCL.Number_2_USR = DATEDTLS(JOB.*Job_date 'MO' 1111111 'NONE' 'N' 1);

// LCL.Number 2 USR = LCL.Number 2 USR - CON.1
LCL.Number_2_USR = LCL.Number_2_USR - 1;

ENDIF;

// DOW LCL.Number 1 USR LE LCL.Number 2 USR
DOW LCL.Number_1_USR <= LCL.Number_2_USR;

// LCL.Month Alpha USR = CVTVAR(LCL.Number 1 USR)
LCL.Month_Alpha_USR = CVTVAR(LCL.Number_1_USR);

//?* From Date *
// LCL.Date From Convert USR = CONCAT(LCL.Month Alpha USR,CON.01,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Month_Alpha_USR + '01' (*ZERO);

// LCL.Date From Convert USR = CONCAT(LCL.Date From Convert USR,LCL.Year Alpha Usr,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Date_From_Convert_USR + LCL.Year_Alpha_Usr (*ZERO);

// Call program Cvt Date              UP.
CALL PROGRAM(Cvt Date              UP) ('PKPOUPR');
PARAMETER(LCL.Date_From_Convert_USR);
PARAMETER(LCL.Date_To_Convert_USR);
PARAMETER(*MDYY);
PARAMETER(*CYMD);
PARAMETER(*NONE);

// LCL.Date Alpha USR = LCL.Date To Convert USR
LCL.Date_Alpha_USR = LCL.Date_To_Convert_USR;

// LCL.CSD From Date = CVTVAR(LCL.Date Alpha USR)
LCL.CSD_From_Date = CVTVAR(LCL.Date_Alpha_USR);

//?* To Date   *
// LCL.Number 3 USR = LCL.CSD From Date *MONTH LENGTH
LCL.Number_3_USR = DATEDTLS(LCL.CSD_From_Date 'ML' 1111111 'NONE' 'N' 1);

// LCL.Length Usr Txt = CVTVAR(LCL.Number 3 USR)
LCL.Length_Usr_Txt = CVTVAR(LCL.Number_3_USR);

// LCL.Date From Convert USR = CONCAT(LCL.Month Alpha USR,LCL.Length Usr Txt,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Month_Alpha_USR + LCL.Length_Usr_Txt (*ZERO);

// LCL.Date From Convert USR = CONCAT(LCL.Date From Convert USR,LCL.Year Alpha Usr,CON.*ZERO)
LCL.Date_From_Convert_USR = LCL.Date_From_Convert_USR + LCL.Year_Alpha_Usr (*ZERO);

// Call program Cvt Date              UP.
CALL PROGRAM(Cvt Date              UP) ('PKPOUPR');
PARAMETER(LCL.Date_From_Convert_USR);
PARAMETER(LCL.Date_To_Convert_USR);
PARAMETER(*MDYY);
PARAMETER(*CYMD);
PARAMETER(*NONE);

// LCL.Date Alpha USR = LCL.Date To Convert USR
LCL.Date_Alpha_USR = LCL.Date_To_Convert_USR;

// LCL.CSD To Date = CVTVAR(LCL.Date Alpha USR)
LCL.CSD_To_Date = CVTVAR(LCL.Date_Alpha_USR);

//?* Create Standard Deviation *
EXECUTE FUNCTION(Del Std Deviation     RT) TYPE(RTVOBJ) FILE(PKEYCPP)           AB1232569;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Company Std Deviat) TYPE(DLTOBJ) FILE(PKEYCPP)          AB1232467;
 PARAMETER(DB1.CSD_Company_Number);
 PARAMETER(DB1.CSD_Type);
 PARAMETER(DB1.CSD_From_Date);
 PARAMETER(DB1.CSD_To_Date);
 PARAMETER(DB1.CSD_Source_Type);
 PARAMETER(DB1.CSD_Producer_Code);
 PARAMETER(DB1.CSD_Location_Code);
}


// Call program Crt Std Deviation     UP.
SBMJOB;
CALL PROGRAM(Crt Std Deviation     UP) ('PKUUUPR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
PARAMETER(LCL.Number_1_USR);
PARAMETER(*ZERO);
SBMJOBEND;

//?* Increment Month *
// LCL.Number 1 USR = LCL.Number 1 USR + CON.1
LCL.Number_1_USR = LCL.Number_1_USR + 1;

ENDDO;

ENDIF;

// IF DTL.CSD Type is Weekly
IF DTL.CSD_Type = 'W';

//?Weekly
CASE;

// IF DTL.CSD Week is Entered
IF DTL.CSD_Week <> *ZERO;

// Call program RTV Wk Start/End      RT.
CALL PROGRAM(RTV Wk Start/End      RT) ('POENXFR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Year);
PARAMETER(DTL.CSD_Week);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);

//?* Create Standard Deviation *
EXECUTE FUNCTION(Del Std Deviation     RT) TYPE(RTVOBJ) FILE(PKEYCPP)           AB1232569;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Company Std Deviat) TYPE(DLTOBJ) FILE(PKEYCPP)          AB1232467;
 PARAMETER(DB1.CSD_Company_Number);
 PARAMETER(DB1.CSD_Type);
 PARAMETER(DB1.CSD_From_Date);
 PARAMETER(DB1.CSD_To_Date);
 PARAMETER(DB1.CSD_Source_Type);
 PARAMETER(DB1.CSD_Producer_Code);
 PARAMETER(DB1.CSD_Location_Code);
}


// Call program Crt Std Deviation     UP.
SBMJOB;
CALL PROGRAM(Crt Std Deviation     UP) ('PKUUUPR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
PARAMETER(*ZERO);
PARAMETER(DTL.CSD_Week);
SBMJOBEND;

//?Weekly
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Number 1 USR = CON.01
LCL.Number_1_USR = 01;

// Call program RTV Wk Start/End      RT.
CALL PROGRAM(RTV Wk Start/End      RT) ('POENXFR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Year);
PARAMETER(LCL.Number_1_USR);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);

// LCL.Year USR = LCL.CSD To Date *YEAR
LCL.Year_USR = DATEDTLS(LCL.CSD_To_Date 'YR' 1111111 'NONE' 'N' 1);

// DOW DTL.CSD Year EQ LCL.Year USR
DOW DTL.CSD_Year = LCL.Year_USR;

// AND LCL.CSD To Date LE JOB.*Job date
AND LCL.CSD_To_Date <= JOB.*Job_date;

CASE;

// IF LCL.CSD From Date is Entered
IF LCL.CSD_From_Date <> *ZERO;

// AND LCL.CSD To Date is Entered
AND LCL.CSD_To_Date <> *ZERO;

//?* Create Standard Deviation *
EXECUTE FUNCTION(Del Std Deviation     RT) TYPE(RTVOBJ) FILE(PKEYCPP)           AB1232569;
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Company Std Deviat) TYPE(DLTOBJ) FILE(PKEYCPP)          AB1232467;
 PARAMETER(DB1.CSD_Company_Number);
 PARAMETER(DB1.CSD_Type);
 PARAMETER(DB1.CSD_From_Date);
 PARAMETER(DB1.CSD_To_Date);
 PARAMETER(DB1.CSD_Source_Type);
 PARAMETER(DB1.CSD_Producer_Code);
 PARAMETER(DB1.CSD_Location_Code);
}


// Call program Crt Std Deviation     UP.
SBMJOB;
CALL PROGRAM(Crt Std Deviation     UP) ('PKUUUPR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Type);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);
PARAMETER(*ZERO);
PARAMETER(LCL.Number_1_USR);
SBMJOBEND;

ENDIF;

//?* Increment Week *
// LCL.Number 1 USR = LCL.Number 1 USR + CON.1
LCL.Number_1_USR = LCL.Number_1_USR + 1;

// Call program RTV Wk Start/End      RT.
CALL PROGRAM(RTV Wk Start/End      RT) ('POENXFR');
PARAMETER(DTL.CSD_Company_Number);
PARAMETER(DTL.CSD_Year);
PARAMETER(LCL.Number_1_USR);
PARAMETER(LCL.CSD_From_Date);
PARAMETER(LCL.CSD_To_Date);

// LCL.Year USR = LCL.CSD To Date *YEAR
LCL.Year_USR = DATEDTLS(LCL.CSD_To_Date 'YR' 1111111 'NONE' 'N' 1);

ENDDO;

ENDIF;

ENDIF;

