      *These two lines here to aid in debugging when needed***************
     H debug(*yes)
     H option(*srcstmt:*nodebugio)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP213 - Build DataMart Group Header (Nursery/Grow Finish)
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/23/00
      *
      * FUNCTION:    This is the Datamart file that holds 1 record per group.
      *
      *              Only Nursery and Grow Finish groups are included.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/07/01  LeAnne Fedor
      *           Changed logic to use new data area instead of hardcoded dates.
      *
      * 03/13/01  LeAnne Fedor
      *           Changed logic to populate 'days in the phase' fields.
      *
      * 06/11/01  LeAnne Fedor
      *           Added logic to populate new field 'transferred out head to sow farm'
      *           which was added to the Datamart Group Header file.
      *
      * 12/05/01  LeAnne Fedor
      *           Added logic to populate origin fields/flags from new Sire Line Derivation
      *           files instead of the Group Source Report workfiles.
      *
      * 01/14/02  LeAnne Fedor
      *           Fixed bug. The concatenation logic of origin farms into a single field was
      *           duplicating farms.
      *
      * 02/28/02  LeAnne Fedor
      *           Increased length of data area DAFIN.
      *
      * 04/09/02  LeAnne Fedor
      *           Changed logic to populate 1) origin cells 2) origin farms from the
      *           Sire Line Derivation files instead of HSP034. Changed flag defaults
      *           from S=single to U=unknown.
      *
      *           Added 7 new fields:
      *             number of bgf source farms
      *             number of bgf source cells
      *
      *             origin bgf source pod
      *             multiple bgf source pods
      *             number of bgf source pods
      *
      *             number of nur source farms
      *             number of nur source cells
      *
      * 05/30/02  LeAnne Fedor
      *           Added Current vs History processing logic. This was accomplished
      *           by adding an conditional query in the CL prior to the call of this program.
      *
      * 08/01/02  LeAnne Fedor
      *           Increased DAFIN data area by 1. 'Days' is now 3 long instead of 2.
      *
      * 10/21/02  LeAnne Fedor
      *           Added new field 'total square feet in room' to Cognos 'group' file.
      *
      * 12/16/02  LeAnne Fedor
      *           We have changed the sow/sire line derivation programs to include files
      *           with stats based on 'total head received'...instead of stats based on
      *           transfers we could process (ie: omitted catch-22 transfers).
      *           So, per AMB, we will use stats based on these new files (ie: based
      *           on 'total head received'). So, we will use:
      *               HSP336 instead of HSP326
      *               HSP340 instead of HSP328
      *               HSP356 instead of HSP324
      *
      * 12/19/02  LeAnne Fedor
      *           Added 'stocking density' and 'stayed/moved' codes to Datamart file.
      *
      * 12/29/02  LeAnne Fedor
      *           Added Cognos Report Grouping.
      *
      * 02/10/03  LeAnne Fedor
      *           Added new field: average days of growth in
      *
      * 10/01/03  Alice Brownfield
      *           Removed (commented out) the code that omits "CR"eated Groups.
      *           We need to include "CR"eated groups for the Open Group Cost Detail
      *           Data Mart processing that we just added.
      *
      * 01/10/04  Barb Gutierrez
      *           Force 12/28 through 12/31 to have a dispose date of 12/27.
      *           Force the close date to be 12/27.
      *
      * 01/28/04  Barb Gutierrez
      *           Removed the forcing of 12/28 through 12/31 to have a dispose date of 12/27
      *           and the close date to be 12/27.
      *
      * 01/29/04  LeAnne Fedor
      *           Added 3 fields:
      *                opened accounting period
      *                disposed accounting period
      *                closed accounting period
      *
      * 04/20/04  LeAnne Fedor
      *           Changed the Cognos Report Grouping logic. Now, if the chain to HSP098-
      *           Sire Lines fails, we move HGGNCD into the Cognos Report Grouping field
      *           instead of moving in the literal 'UNK??'.
      *
      * 09/01/04  LeAnne Fedor
      *           We have created a new HPS file call Group Overrides. The group values
      *           that users enter in this file are retrieved and used in place of the
      *           calculated values in the Datamart Group Header file.
      *
      *           The 3 override fields are:
      *                1) sire line code
      *                2) origin BGF farm site
      *                3) origin nursery farm site
      *
      *           Over a dozen other fields are subsequently retrieved/overridden based
      *           on the values in these override fields.
      *
      * 10/11/04  LeAnne Fedor
      *           Added a 'submitted flag' position to the data area DAFIN.
      *
      * 11/12/04  LeAnne Fedor
      *           The users changed the calc for 'Average Days of Growth In'.
      *           We now use a hardcoded value of '16' days instead of '14' days in
      *           the calc.
      *
      * 02/01/05  LeAnne Fedor
      *           Added Sire Line Company and Prime Line to file. Also, removed logic
      *           based on hard-coded Sire Line values.
      *
      * 10/05/05  LeAnne Fedor
      *           If Origin BGF Pod is zero, we will set it to 1.
      *
      * 01/16/06  LeAnne Fedor
      *           Recompile only.
      *           We have removed "Bin Set" from HSP020-Building/Rooms and put it in our new
      *           HSP113-Rooms/Bin Sets file.
      *
      * 06/02/06  LeAnne Fedor
      *           An enhancement to the FOS (feed ordering system) needed Origin BGF Pod.
      *           So, for FOS we decided to retrieve the POD value from HPPF034.
      *           BUT, groups opened after the previous Saturday were omitted from HPPF034.
      *           SO, some of our FOS groups were not in HPPF034; thus, no Pod to retrieve.
      *           We have changed this Datamart logic to include OPEN groups whose Open Date
      *           is on/before the Saturday "subsequent" to the system date.
      *           Prior to this change, we included OPEN groups with an Open Date on/before
      *           the Saturday PRIOR to the system date.
      *
      * 08/02/06  LeAnne Fedor
      *           Recompile only. Two new fields (ration 8 feed pounds, ration paylean flag)
      *           added to Datamart Group Header file.
      *
      * 06/01/07  Sharon Zurn
      *           Added Nur/FIn Target fields to HPPF034.  Added logic to populate them
      *          -Add routine to retrieve quarter and week of quarter.
      *           Calendar file.
      *          -Add routine to calculate number of weeks to add 1 to
      *           within a 13 week quarter.
      *
      * 08/09/07  LeAnne Ramsey
      *           At this point, we are only doing 'target' logic for Closed Groups.
      *           And, we need the 'adjusted transfer in' head for this--which we don't
      *           have in our file until HP218-Datamart: Update Group Header-Disposed/Closed
      *           Groups. So, I took the 'target' logic out of this program and moved it to
      *           HP218.
      *
      * 09/10/07  LeAnne Ramsey
      *           Recompile only. We added "sales date" fields to the Calendar file.
      *
      * 09/21/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added/removed in the Datamart Group
      *           Header file.
      *
      * 06/20/08  LeAnne Ramsey
      *           Recompile only. Corrected some program documentation
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one in file HSP098-Sire Lines.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/14/16  Barb Gutierrez
      *           Three new fields (total sold days in phase, avg sld days in
      *           phase, and wgt open date added to Datamart group header HPPF034.These fields will
      *           be populated in HP236 instead of this program.  Also added company number to
      *           HPPF034.  It will be populated in this program.  E6136
      /eject
      ****************************************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************************************
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp020    if   e           k disk
      *    Building rooms
      *
      *
     Fhsp034    if   e           k disk
      *    Hog group
      *    (For a 'current' run, an open query in the CL limits the records in this file)
      *    (There is no open query logic for a 'history' run.)
      *
      *
     Fhsj058a   if   e           k disk
      *   Movement Event + Transfer Header
      *
      *
     Fhsp075    if   e           k disk
      *   Transfer Movement Detail
      *
      *
     Fhsp098    if   e           k disk
      *   Sire Lines
      *
      *
     Fhsj075g   if   e           k disk    rename(mdrec:mdrecg)
      *   Transfer detail + Transfer Header
      *
      *
     Fhsp130    if   e           k disk
      *   Group overrides
      *
      *
     Fhsp327    if   e           k disk
      *   Workfile: Nursery-to-Nursery Transfers
      *
      *
     Fhsp329    if   e           k disk
      *   Workfile: Grow Finish Groups--Nursery Sources
      *
      *
     Fhsp336    if   e           k disk
      *   Workfile: Nursery Groups--BGF Source Total
      *
      *
     Fhsp340    if   e           k disk
      *  Workfile: Nursery groups--sire line total
      *
      *
     Fhsp356    if   e           k disk
      *   Workfile: Grow Finish Groups--BGF Source Total
      *
      *
     Fhppf034   o    e             disk    rename(hgrec:hgrec1) prefix(p1)
      *   Datamart FIN: Group header
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrfscd         s              5p 0 dim(500)
     D arrcell         s              2p 0 dim(500)
     D arrpod          s              3p 0 dim(500)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields for dates
      *
     D wkalph          s              8a
     D wkccyy0000      s              8  0
     D wkccyymmdd      s              8  0
     D wkmedt          s              8  0
     D wkyymmdd        s              6  0
     D wkcymdiso       s               D   datfmt(*iso)
      *
     D wktosatdt       s              8  0
     D wksubsatdt      s              8  0
      *
      *
      * Workfields
      *
     D start           s              3  0
     D begin           s              3  0
     D length          s              1  0
     D wkfarm          s              5a
     D wkconcat        s             20a
      *
     D wkwk            s              2  0
     D wkday           s              1  0
     D wkalphwk        s              2
     D wkalphday       s              1
      *
     D wkhd            s                   like(tinhd)
     D wkavlb          s                   like(p1hgmxavlb)
     D wktihd          s                   like(tinhd)
     D wkajtihd        s                   like(tinhd)
     D wkfactor        s             15  2
     D wkfld           s             15  2
      *
     D wksicd          s                   like(gosicd)
     D wkobfs          s                   like(goobfs)
     D wkonfs          s                   like(goonfs)
     D wkaadglb        s                   like(siaadglb)
      *
      *
      * Counters
      *
     D count           s              3  0
      *
      *
      * Parm fields
      *
     D xxcyymmddi      s              7  0
     D xxcyymmddo      s              7  0
     D xxcocd          s              3  0
     D xxreturn        s              7a
     D xxjulian        s              5  0
     D xxcdyr          s                   like(p1hgopcdyr)
     D xxcdwk          s                   like(p1hgopcdwk)
     D xxacyr          s                   like(p1hgopcdyr)
     D xxacpe          s              2  0
     D xxacqr          s                   like(p1hgopacqr)
     D xxacwk          s                   like(p1hgopcdwk)
     D xxwk            s                   like(p1hgopcdwk)
     D xxday           s              1a
     D xxpicdt         s              5  0
      *
      *
      * Define parms for the generic movement program
      *
     D zzcymd          s              8  0
      *
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
     D w               s              3  0
     D z               s              3  0
     D u               s              3  0
     D v               s              3  0
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Definition for external data area
      *---------------------------------------------------------------
      *
     Ddafin            ds                  dtaara(dafin)
     D  daccyy                 1      4
     D  dacwkbegdt            29     36  0
     D  dacwkenddt            38     45  0
     D  dadays                47     49  0
     D  dasbmfl               62     62
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Read the hog group master file. Do not process groups that have:
      *     1) a production phase of BGF, or
      *     2) a status of voided
      *     3) a dispose date prior to the 'historical' year in the data area, or
      *     4) a closed date prior to the 'historical' year in the data area, or
      *     NOTE: If you are doing 'current' processing, an open query in the CL
      *           has already limited the groups in this file.
      *     NOTE: As of October 2003, we do include CR=Created groups.
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp034                                 90
     C                   if        *in90 = *off and                             If not EOF
     C                             hgppcd <> 'BGF  ' and
     C                             hggscd <> 'VD' and
     C                             (hgdsdt = 0 or hgdsdt > wkccyy0000) and
     C                             (hgcldt = 0 or hgcldt > wkccyy0000) and
     C                             hgopdt <= wksubsatdt
      *
      * Set a default of NO for the 'in before out flag'.  The true value for
      * this field is retrieved in a later step in the job stream.
      *
     C                   move      no            p1hginoufl
      *
      * Set defaults for 'mixed flag' fields that will only be populated for
      * Grow Finish Groups
     C                   move      no            p1hgbmxfl
     C                   move      no            p1hgsimxfl
      *
      *
      * Perform the following:
      *     1) Retrieve Group Override record
      *     2) Setup fields that map directly from the HPS Hog Group file
      *     3) Populate Cognos Report Grouping field
      *     4) Retrieve room info
      *     5) Determine the number of 'days in the phase' for the group.
      *     6) Determine the number of 'fill days' for the group.
      *     7) Retrieve BGF source info from the Sire Line Derivation files
      *     8) Retrieve Nursery source info from the Sire Line Derivation files
      *
     C                   exsr      $overrides
     C                   exsr      $directmap
     C                   exsr      $cognos
     C                   exsr      $room
     C                   exsr      $phasedays
     C                   exsr      $filldays
      *
      * Use Standard or Override logic for BGF and Nursery 'source' retrieval.
      *
      * BGF source
     C                   if        wkobfs = 0
     C                   exsr      $bgfsource
     C                   else
     C                   exsr      $overbgf
     C                   endif
      * Nursery source
     C                   if        wkonfs = 0
     C                   exsr      $nursource
     C                   else
     C                   exsr      $overnur
     C                   endif
      *
      *
      * Determine the following:
      *     1) A 'cutoff' date to use in processing transfers in for the
      *        following weight calculations.
      *     2) Determine the 'average weight in'
      *     3) Determine the 'maximum average weight in'
      *     4) Determine the 'predicted average daily gain'
      *
     C                   exsr      $cutoff
     C                   exsr      $avlb
     C                   exsr      $mxavlb
     C                   exsr      $padglb
      *
      * For grow finish groups only:
      *
     C                   if        hgppcd = 'GF   '                             If grow finish
     C                   exsr      $gfonly
     C                   endif                                                  If grow finish
      *
      * If, at this point, the Origin BGF Pod is zero, set it to 1.
      *
     C                   if        p1hgobpod = 0
     C                   z-add     1             p1hgobpod
     C                   endif
      *
     C                   write     hgrec1
     C                   clear                   hgrec1
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------------
      * Retrieve group overrides
      *----------------------------------------------------------------------
      *
     C     $overrides    begsr
      *
     C     hghgsn        chain     hsp130                             92
     C                   if        *in92 = *off
     C                   move      gosicd        wksicd
     C                   z-add     goobfs        wkobfs
     C                   z-add     goonfs        wkonfs
     C                   else
     C                   move      *blank        wksicd
     C                   z-add     0             wkobfs
     C                   z-add     0             wkonfs
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------
      * Setup and format fields that map directly from the HPS Hog Group file
      *----------------------------------------------------------------------
      *
     C     $directmap    begsr
      *
     C                   movel     hgcocd        p1hgcocd
     C                   movel     hghgcd        p1hghgcd
     C                   z-add     hghgsn        p1hghgsn
     C                   movel     hggscd        p1hggscd
     C                   movel     hggtcd        p1hggtcd
     C                   movel     hgsdcd        p1hgsdcd
     C                   movel     hgsmcd        p1hgsmcd
     C                   movel     hgbscd        p1hgbscd
     C                   movel     hgsxcd        p1hgsxcd
      *
     C                   movel     hgptcd        p1hgptcd
     C                   movel     hgppcd        p1hgppcd
     C                   z-add     hgfscd        p1hgfscd
     C                   movel     hgblcd        p1hgblcd
     C                   movel     hgrmcd        p1hgrmcd
      *
     C                   z-add     hgadoi        p1hgadoi
     C                   z-add     hgadoo        p1hgadoo
      *
     C     *iso          test(d)                 hgcrdt                 92
     C                   if        *in92 = *off
     C                   movel     hgcrdt        p1hgcrdt
     C                   endif
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off
     C                   movel     hgopdt        p1hgopdt
     C                   movel     p1hgopdt      wkccyymmdd
     C                   exsr      $cdyrwk
     C                   if        xxreturn = *blank
     C                   z-add     xxcdyr        p1hgopcdyr
     C                   z-add     xxcdwk        p1hgopcdwk
     C                   z-add     xxacpe        p1hgopacpe
     C                   z-add     xxacqr        p1hgopacqr
     C                   endif
     C                   endif
      *
     C     *iso          test(d)                 hgdsdt                 92
     C                   if        *in92 = *off
     C                   movel     hgdsdt        p1hgdsdt
     C                   if        hgdsdt = 20001231
     C                   movel     '2000-12-30'  p1hgdsdt
     C                   endif
     C                   if        hgdsdt > 20021228 and hgdsdt < 20030101
     C                   movel     '2002-12-28'  p1hgdsdt
     C                   endif
      *
     C                   movel     p1hgdsdt      wkccyymmdd
     C                   exsr      $cdyrwk
     C                   if        xxreturn = *blank
     C                   z-add     xxcdyr        p1hgdscdyr
     C                   z-add     xxcdwk        p1hgdscdwk
     C                   z-add     xxacpe        p1hgdsacpe
     C                   z-add     xxacqr        p1hgdsacqr
     C                   endif
     C                   endif
      *
     C     *iso          test(d)                 hgcldt                 92
     C                   if        *in92 = *off
     C                   movel     hgcldt        p1hgcldt
     C                   if        hgcldt = 20001231
     C                   movel     '2000-12-30'  p1hgcldt
     C                   endif
     C                   if        hgcldt = 20021231
     C                   movel     '2002-12-28'  p1hgcldt
     C                   endif
      *
     C                   movel     p1hgcldt      wkccyymmdd
     C                   exsr      $cdyrwk
     C                   if        xxreturn = *blank
     C                   z-add     xxcdyr        p1hgclcdyr
     C                   z-add     xxcdwk        p1hgclcdwk
     C                   z-add     xxacpe        p1hgclacpe
     C                   z-add     xxacqr        p1hgclacqr
     C                   endif
     C                   endif
      *
      * If you have a user override value for Sire Line, use it; otherwise,
      * use the value from the Hog Group Master file.
      *
     C                   if        wksicd <> *blank
     C                   movel     wksicd        p1hgsicd
     C                   else
     C                   movel     hggncd        p1hgsicd
     C                   endif
      *
      * Retrieve for this Sire Line
      *   1) sire line company
      *   2) prime line
      *   3) average daily gain genetic adjustment pounds
      *
     C     p1hgsicd      chain     hsp098                             92
     C                   if        *in92 = *off
     C                   move      sisicomp      p1hgsicomp
     C                   z-add     siprime       p1hgprime
     C                   z-add     siaadglb      wkaadglb
     C                   else
     C                   z-add     0             wkaadglb
     C                   endif
      *
      * Create a 'building' description field that concatenates the
      * word 'building' and the building code.
      *
     C                   eval      p1hgblcdds = 'Bldg' + ' ' + %trim(p1hgblcd)
      *
      *
      * Create a 'room' description field that concatenates the
      * word 'room' and the room code.
      *
     C                   eval      p1hgrmcdds = 'Room' + ' ' + %trim(p1hgrmcd)
      *
      * Populate 'average days of growth in' as follows:
      *   If 'average days old in' is less than 20 days,
      *      Set the value to zero
      *   Otherwise
      *      Subtract 16 days from 'average days old in'
      *   (Note: We use 16 days because the users think it is the average number of days
      *          a piglet lives in the BGF farm before it is weaned.)
      *
     C                   select
     C                   when      hgadoi < 20
     C                   z-add     0             p1hgadgi
     C                   other
      *
     C     hgadoi        sub       16            p1hgadgi
     C                   endsl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------------
      * Call a SYNON program to return the HPS calendar year/week for a date
      *----------------------------------------------------------------------
      *
     C     $cdyrwk       begsr
      *
      * Retrieve the HPS calendar year/week associated with a date from the OMS
      * Calendar file by calling a SYNON program.
      * You must send input parms of 1) company number and 2) date in the
      * SYNON format of CYYMMDD.
      *
      * Get the date into the SYNON format.
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmddi
     C                   else
     C                   z-add     wkyymmdd      xxcyymmddi
     C                   endif
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm      350           xxcocd
     C                   parm                    xxcyymmddi
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxwk
     C                   parm      0             xxpicdt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
      * Call the generic program to retrieve the quarter associated with the
      * accounting period.
      *
     C                   call      'HP8006'
     C                   parm                    xxacpe
     C                   parm      0             xxacqr
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------
      * Populate Cognos Report Grouping value
      *------------------------------------------------------------------
      *
      * Retrieve the Cognos Report Grouping value associated with the Sire Line.
      *
     C     $cognos       begsr
      *
     C                   select
     C                   when      p1hgsicd = 'UNK??'
     C                   movel     p1hgsicd      p1hggg0
      *
     C                   when      p1hgsicd = 'MIXED'
     C                   movel     p1hgsicd      p1hggg0
      *
     C                   when      p1hgsicd = *blank
     C                   move      *blank        p1hggg0
     C                   other
      *
     C     p1hgsicd      chain     hsp098                             92
     C                   if        *in92 = *off
     C                   movel     sigg0         p1hggg0
     C                   else
     C                   movel     p1hgsicd      p1hggg0
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------
      * Retrieve Room info
      *------------------------------------------------------------------
      *
     C     $room         begsr
      *
     C     key02         chain     hsp020                             92
     C                   if        *in92 = *off                                 If room hit
     C                   z-add     brrmsqft      p1hgrmsqft
     C                   endif                                                  If room hit
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------
      * Determine the 'days in the phase' for the group
      *------------------------------------------------------------------
      *
     C     $phasedays    begsr
      *
      * Calculate the days in the phase
      *
     C                   select
      * Disposed
     C                   when      hgdsdt <> 0
     C     p1hgdsdt      subdur    p1hgopdt      p1hgphsday:*d
      *
      * Opened after 'prior' Saturday
      *
     C                   when      hgopdt > wktosatdt
     C                   z-add     0             p1hgphsday
     C                   other
      *
     C                   movel     wktosatdt     wkcymdiso
     C     wkcymdiso     subdur    p1hgopdt      p1hgphsday:*d
     C                   endsl
      *
      * Format days in the phase into an alpha field of weeks-days
      *
     C                   exsr      $phswd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Format the days in the phase into an alpha field of weeks-days
      *----------------------------------------------------------------
      *
     C     $phswd        begsr
      *
      * Calculate 'weeks in the phase'.
      *
     C     p1hgphsday    div       7             wkwk
     C                   mvr                     wkday
      *
      *
      * Concatenate the week and day into a single alpha field.
      *
     C                   movel     wkwk          wkalphwk
     C                   if        %subst(wkalphwk: 1: 1) = '0'
     C                   eval      %subst(wkalphwk: 1: 1) = *blank
     C                   endif
      *
     C                   movel     wkday         wkalphday
      *
     C                   eval      p1hgphswd = wkalphwk + '-' + wkalphday
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------
      * $filldays - Determine how many 'days' it took to fill the group
      *------------------------------------------------------------------
      *
      * Fill days is derived as follows:
      *   1) calculate cutoff date = open date + 14 days
      *   2) find the last 'transfer in' movement on or before the cutoff date
      *   3) find the difference between the movement date and the open date
      *   4) add one day to the difference
      *
      *
     C     $filldays     begsr
      *
      * Calculate cutoff date
      *
     C     p1hgopdt      adddur    14:*days      wkcymdiso
     C                   movel     wkcymdiso     wkccyymmdd
      *
      *
      * Find latest 'transfer in' prior to cut-off date.
      *
     C                   z-add     0             wkmedt
      *
     C     hghgsn        setll     hsj058a
      *
     C                   dou       *in91 = *on  or memedt > wkccyymmdd          Do events
     C     hghgsn        reade     hsj058a                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             memedt <= wkccyymmdd
     C                   z-add     memedt        wkmedt
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do events
      *
      *
      * Find the number of days between the movement date and the open date
      * and then add 1 day.
      *
     C     *iso          test(d)                 wkmedt                 92
     C                   if        *in92 = *off                                 If valid date
     C                   movel     wkmedt        wkcymdiso
     C     wkcymdiso     subdur    p1hgopdt      p1hgfilday:*d
     C                   add       1             p1hgfilday
     C                   endif                                                  If valid date
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Override BGF source farms
      *---------------------------------------------------------------
      *
     C     $overbgf      begsr
      *
     C                   z-add     wkobfs        p1hgobfs
     C                   move      'S'           p1hgmbffl
     C                   move      'S'           p1hgmbcfl
     C                   move      'S'           p1hgmbpfl
     C                   z-add     1             p1hgobfno
     C                   z-add     1             p1hgobcno
     C                   z-add     1             p1hgobpno
      *
      * Populate the 20-character BGF 'farms' field.
      *
     C                   eval      p1hgobfarm = %triml(%editc(wkobfs:'Z'))
      *
      *
      * Retrieve cell/pod for BGF source farm
      *
     C     wkobfs        chain     hsp018                             92
     C                   if        *in92 = *off                                 If farm hit
     C                   z-add     fscell        p1hgobcell
     C                   z-add     fspod         p1hgobpod
     C                   endif                                                  If farm hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve BGF source farms
      *---------------------------------------------------------------
      *
     C     $bgfsource    begsr
      *
      *
      * Initialize fields used in concatenating multiple BGF farms into a field.
      *
     C                   move      *blank        wkconcat
     C                   z-add     1             begin
      *
      * Set defaults of U=unknown for the BGF 'source' flag fields:
      *   a) multiple BGF farms flag
      *   b) multiple BGF cells flag
      *   b) multiple BGF pods flag
      *
     C                   move      'U'           p1hgmbffl
     C                   move      'U'           p1hgmbcfl
     C                   move      'U'           p1hgmbpfl
      *
      * Initialize arrays and indexes used in populating these flag fields.
      *
     C                   exsr      $cleararr
      *
      * To populate these initialized fields, you will read files created during the
      * Sire Line Derivation function. The file you read depends on the Production
      * Phase of this group.
      *
      * Grow finish group
     C                   select
     C                   when      hgppcd = 'GF   '
     C                   exsr      $bgfgf
      *
      * Nursery group
     C                   when      hgppcd = 'NUR  '
     C                   exsr      $bgfnur
     C                   endsl
      *
      * Move concatenated farms field to file field
      *
     C                   movel(p)  wkconcat      p1hgobfarm
      *
      * Set multiple BGF farms flag
      *
     C                   select
     C                   when      y = 1
     C                   move      'S'           p1hgmbffl
     C                   z-add     arrfscd(1)    p1hgobfs                 92
      *
     C                   when      y = 2 or y = 3
     C                   move      'M'           p1hgmbffl
     C                   when      y > 3
     C                   move      '+'           p1hgmbffl
     C                   endsl
      *
      * Number of BGF source farms
      *
     C                   z-add     y             p1hgobfno
      *
      *
      *
      * Set multiple BGF cells flag
      *
     C                   select
     C                   when      z = 1
     C                   move      'S'           p1hgmbcfl
     C                   z-add     arrcell(1)    p1hgobcell               92
     C                   when      z = 2 or z = 3
     C                   move      'M'           p1hgmbcfl
     C                   when      z > 3
     C                   move      '+'           p1hgmbcfl
     C                   endsl
      *
      * Number of BGF source cells
      *
     C                   z-add     z             p1hgobcno
      *
      *
      * Set multiple BGF pods flag
      *
     C                   select
     C                   when      v = 1
     C                   move      'S'           p1hgmbpfl
     C                   z-add     arrpod(1)     p1hgobpod                92
     C                   when      v = 2 or v = 3
     C                   move      'M'           p1hgmbpfl
     C                   when      v > 3
     C                   move      '+'           p1hgmbpfl
     C                   endsl
      *
      * Number of BGF source pods
      *
     C                   z-add     v             p1hgobpno
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Retrieve BGF sources for Grow Finish group
      *-----------------------------------------------------------------------
      *
     C     $bgfgf        begsr
      *
     C     hghgsn        setll     hsp356
      *
     C                   dou       *in91 = *on                                  Do GF
     C     hghgsn        reade     hsp356                                 91
     C                   if        *in91 = *off and wborfscd <> 0               If record
      *
      *
      * Load farm array
      *
     C                   z-add     1             x
     C     wborfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If new farm
     C                   add       1             y
     C                   z-add     wborfscd      arrfscd(y)
     C                   movel(p)  wborfscd      wkfarm
     C                   exsr      $concat
     C                   endif                                                  If new farm
      *
      * Load cell array
      *
     C                   z-add     1             w
     C     wborcell      lookup    arrcell(w)                             92
     C                   if        *in92 = *off                                 If new cell
     C                   add       1             z
     C                   z-add     wborcell      arrcell(z)
     C                   endif                                                  If new cell
      *
      *
      * Load pod array
      *   1) retrieve 'pod' associated with origin farm site
      *   2) load pod array
      *
     C     wborfscd      chain     hsp018                             92
     C                   if        *in92 = *off                                 If farm hit
      *
     C                   z-add     1             u
     C     fspod         lookup    arrpod(u)                              92
     C                   if        *in92 = *off                                 If new pod
     C                   add       1             v
     C                   z-add     fspod         arrpod(v)
     C                   endif                                                  If new pod
     C                   endif                                                  If farm hit
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do GF
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Retrieve BGF source info for Nursery group
      *-----------------------------------------------------------------------
      *
     C     $bgfnur       begsr
      *
     C     hghgsn        setll     hsp336
      *
     C                   dou       *in91 = *on                                  Do nursery
     C     hghgsn        reade     hsp336                                 91
     C                   if        *in91 = *off and w9orfscd <> 0               If record
      *
      *
      * Load farm array
     C                   z-add     1             x
     C     w9orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If new farm
     C                   add       1             y
     C                   z-add     w9orfscd      arrfscd(y)
     C                   movel(p)  w9orfscd      wkfarm
     C                   exsr      $concat
     C                   endif                                                  If new farm
      *
      * Load cell array
     C                   z-add     1             w
     C     w9orcell      lookup    arrcell(w)                             92
     C                   if        *in92 = *off                                 If new cell
     C                   add       1             z
     C                   z-add     w9orcell      arrcell(z)
     C                   endif                                                  If new cell
      *
      *
      * Load pod array
      *   1) retrieve 'pod' associated with origin farm site
      *   2) load pod array
      *
     C     w9orfscd      chain     hsp018                             92
     C                   if        *in92 = *off                                 If farm hit
      *
     C                   z-add     1             u
     C     fspod         lookup    arrpod(u)                              92
     C                   if        *in92 = *off                                 If new pod
     C                   add       1             v
     C                   z-add     fspod         arrpod(v)
     C                   endif                                                  If new pod
     C                   endif                                                  If farm hit
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do nursery
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Override Nursery source farms
      *---------------------------------------------------------------
      *
     C     $overnur      begsr
      *
     C                   z-add     wkonfs        p1hgonfs
     C                   move      'S'           p1hgmnffl
     C                   move      'S'           p1hgmncfl
     C                   z-add     1             p1hgonfno
     C                   z-add     1             p1hgoncno
      *
      *
      * Retrieve cell for Nursery source farm
      *
     C     wkonfs        chain     hsp018                             92
     C                   if        *in92 = *off                                 If farm hit
     C                   z-add     fscell        p1hgoncell
     C                   endif                                                  If farm hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Nursery source info for the group
      *---------------------------------------------------------------
      *
     C     $nursource    begsr
      *
      *
      * Set defaults of U=unknown for the Nursery 'source' flag fields:
      *   a) multiple Nursery farms flag
      *   b) multiple Nursery cells flag
      *
     C                   move      'U'           p1hgmnffl
     C                   move      'U'           p1hgmncfl
      *
      * Initialize arrays and indexes used in populating these flag fields.
      *
     C                   exsr      $cleararr
      *
      * To populate these initialized fields, you will read files created during the
      * Sire Line Derivation function. The file you read depends on the Production
      * Phase of this group.
      *
      * Grow finish group
     C                   select
     C                   when      hgppcd = 'GF   '
     C                   exsr      $nurgf
      *
      * Nursery group
     C                   when      hgppcd = 'NUR  '
     C                   exsr      $nurnur
     C                   endsl
      *
      *
      * Set multiple Nursery farms flag
      *
     C                   select
     C                   when      y = 1
     C                   move      'S'           p1hgmnffl
     C                   z-add     arrfscd(1)    p1hgonfs                 92
      *
     C                   when      y = 2 or y = 3
     C                   move      'M'           p1hgmnffl
      *
     C                   when      y > 3
     C                   move      '+'           p1hgmnffl
     C                   endsl
      *
      * Number of Nursery source farms
      *
     C                   z-add     y             p1hgonfno
      *
      *
      * Set Multiple Nursery Source Cells flag
      *
     C                   select
     C                   when      z = 1
     C                   move      'S'           p1hgmncfl
     C                   z-add     arrcell(1)    p1hgoncell
      *
     C                   when      z = 2 or z = 3
     C                   move      'M'           p1hgmncfl
      *
     C                   when      z > 3
     C                   move      '+'           p1hgmncfl
     C                   endsl
      *
      * Number of Nursery source cells
      *
     C                   z-add     z             p1hgoncno
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Retrieve Nursery source info for Grow Finish group
      *-----------------------------------------------------------------------
      *
     C     $nurgf        begsr
      *
     C     hghgsn        setll     hsp329
      *
     C                   dou       *in91 = *on                                  Do GF
     C     hghgsn        reade     hsp329                                 91
     C                   if        *in91 = *off and w5orfscd <> 0               If record
      *
      * Load farm array
      *
     C                   z-add     1             x
     C     w5orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If new farm
     C                   add       1             y
     C                   z-add     w5orfscd      arrfscd(y)
     C                   endif                                                  If new farm
      *
      * Load cell array
      *
     C                   z-add     1             w
     C     w5orcell      lookup    arrcell(w)                             92
     C                   if        *in92 = *off                                 If new cell
     C                   add       1             z
     C                   z-add     w5orcell      arrcell(z)
     C                   endif                                                  If new cell
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do GF
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Retrieve Nursery source info for Nursery group
      *-----------------------------------------------------------------------
      *
     C     $nurnur       begsr
      *
     C     hghgsn        setll     hsp327
      *
     C                   dou       *in91 = *on                                  Do nursery
     C     hghgsn        reade     hsp327                                 91
     C                   if        *in91 = *off and w3orfscd <> 0               If record
      *
      *
      * Load farm array
     C                   z-add     1             x
     C     w3orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If new farm
     C                   add       1             y
     C                   z-add     w3orfscd      arrfscd(y)
     C                   endif                                                  If new farm
      *
      * Load cell array
      *
     C                   z-add     1             w
     C     w3orcell      lookup    arrcell(w)                             92
     C                   if        *in92 = *off                                 If new cell
     C                   add       1             z
     C                   z-add     w3orcell      arrcell(z)
     C                   endif                                                  If new cell
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do nursery
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Clear arrays and initialize array indexes
      *-----------------------------------------------------------------------
      *
     C     $cleararr     begsr
      *
     C                   z-add     0             arrfscd
     C                   z-add     0             arrcell
     C                   z-add     0             arrpod
      *
     C                   z-add     0             x
     C                   z-add     0             y
     C                   z-add     0             w
     C                   z-add     0             z
     C                   z-add     0             u
     C                   z-add     0             v
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Concatenate another farm onto the end of a 20-character field
      *-----------------------------------------------------------------------
      *
     C     $concat       begsr
      *
     C     '0'           check     wkfarm        start
     C                   eval      wkfarm = %subst(wkfarm:start)
     C                   eval      length = 5 - start + 2
      *
      * You may not be able to get all of the source farms into the 20-character field.
      * So, stop trying when you run out of space.
      *
     C                   select
     C                   when      (begin + length) > 20
      *
     C                   when      begin = 1
     C                   eval      %subst(wkconcat:begin) = %trim(wkfarm)
      *
     C                   other
     C                   eval      %subst(wkconcat:begin) = '-' + %trim(wkfarm)
     C                   endsl
      *
     C     ' '           checkr    wkconcat      begin
     C                   add       1             begin
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Calculate a cutoff date to use in processing transfers into the group
      *-----------------------------------------------------------------------
      *
      * Calculate the cut-off date as open date plus:
      *   a) 7 days for nursery groups
      *   b) 30 days for grow finish groups
      *
      *
     C     $cutoff       begsr
      *
     C                   select
     C                   when      p1hgppcd = 'NUR  '
     C     p1hgopdt      adddur    7:*days       wkcymdiso
      *
     C                   when      p1hgppcd = 'GF   '
     C     p1hgopdt      adddur    30:*days      wkcymdiso
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculate the 'average weight in'
      *---------------------------------------------------------------
      *
      * Calculate the average weight in for transfers in during the initial
      * days of a group's life. (See the subroutine $cutoff to see how we
      * determined 'initial days.)
      *
      *
     C     $avlb         begsr
      *
     C                   movel     wkcymdiso     zzcymd
     C                   call      'HPMOVE'      plist01
      *
     C                   if        tinhd <> 0                                   If trans in
     C     tinlb         div(h)    tinhd         p1hgavlb
     C                   endif                                                  If trans in
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculate the 'maximum average weight in'
      *---------------------------------------------------------------
      *
      * The 'maximum' is retrieved by reading all the transfers into the group
      * during the initial days of a group's life. (See the subroutine
      * see the determination of initial days.)
      *
      *
     C     $mxavlb       begsr
      *
     C                   movel     wkcymdiso     wkccyymmdd
      *
      * Read movement event file
      *
     C     hghgsn        setll     hsj058a
      *
     C                   dou       *in91 = *on  or memedt > wkccyymmdd          Do events
     C     hghgsn        reade     hsj058a                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             memedt <= wkccyymmdd
      *
      * Retrieve transfer detail
      *
     C     key01         chain     hsp075                             92
     C                   if        *in92 = *off                                 If hit
     C     mdqlhd        add       mdrjhd        wkhd
     C                   if        wkhd   <> 0                                  If head
     C                   eval(h)   wkfld = (mdqllb + mdrjlb) / wkhd
     C                   z-add     wkfld         wkavlb
     C                   if        wkavlb > p1hgmxavlb
     C                   z-add     wkavlb        p1hgmxavlb
     C                   endif                                                  If head
     C                   endif
     C                   endif                                                  If hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do events
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Determine the 'predicted average daily gain'
      *---------------------------------------------------------------
      *
     C     $padglb       begsr
      *
      * Start with a standard daily gain
      *
     C                   z-add     1.5           p1hgpadglb
      *
      *
      * Add the 'Average Daily Gain Genetic Adjustment Pounds' associated
      * with this Sire Line.
      *
     C                   add       wkaadglb      p1hgpadglb
      *
      *
      * Conditionally increase the daily gain depending on sex.
      *
     C                   select
     C                   when      p1hgsxcd = 'F' or
     C                             p1hgsxcd = 'M'
     C                   add       0.05          p1hgpadglb
     C                   endsl
      *
      * Decrease/increase the daily gain based on stocking density.
      *
     C                   exsr      $density
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Determine average daily gain increment based on density
      *---------------------------------------------------------------
      *
     C     $density      begsr
      *
      * Decrease/increase the predicted daily gain based on stocking density.
      *     1) Retrieve the total head transferred into the group.
      *     2) Calculate the 'adjusted transfer in' head as
      *        transfers in less transfers out in the first 7 days
      *     3) Subtract the adjusted transferred in head from a standard
      *        hardcoded density of 950 head.
      *     4) Divide the above difference by 100. For every 100 head above/
      *        below the hardcoded density, we will add to or subtract from
      *        the predicted average daily gain.
      *
      *
      * Retrieve transfers into the group
      *
     C                   z-add     99999999      zzcymd
     C                   call      'HPMOVE'      plist01
     C                   z-add     tinhd         wktihd
      *
      *
      * Retrieve transfers out and calculate adjusted transfers in
      *
     C     p1hgopdt      adddur    7:*days       wkcymdiso
     C                   movel     wkcymdiso     zzcymd
     C                   call      'HPMOVE'      plist01
     C     wktihd        sub       touhd         wkajtihd
      *
      *
      * Find the difference between the hardcoded density head and
      * the adjusted transferred in head.  Then, divide this difference in head
      * by 100 to determine the 'density factor.'
      * The density factor is how many increments of 100 head
      * you have above/below the hardcoded density head.
      *
     C                   eval      wkfactor  = (950 - wkajtihd) / 100
      *
      * Calculate the increase/decrease in gain by
      * multiplying the density factor times .03 pounds.
      *
     C     wkfactor      mult      .03           wkavlb
      *
      *
      * Add/subtract the pounds to the predicted average daily gain.
      *
     C                   add       wkavlb        p1hgpadglb
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Logic for Grow Finish Groups only
      *---------------------------------------------------------------
      *
      * 1) accumulate all head that were transferred out to groups on BGF farms
      * 2) set two 'mixed' flags:
      *          a) BGF source mixed in nursery
      *          b) sire line mixed in nursery
      *
     C     $gfonly       begsr
      *
      * Accumulate all head that were transferred out to groups on BGF farms
      *
     C                   exsr      $tranobgf
      *
      * If the group had 'multiple BGF source farms',
      * determine the value for the 'BGF source mixed in nursery' flag
      *
     C                   if        p1hgmbffl = 'M' or p1hgmbffl = '+'
     C                   exsr      $mixedsrc
     C                   endif
      *
      *
      * If the group's sire line is mixed,
      * determine the value for the 'sire line mixed in nursery' flag
      *
     C                   if        p1hgsicd = 'MIXED'
     C                   exsr      $mixedsire
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Accumulate all head that transferred out to BGF farms
      *---------------------------------------------------------------
      *
     C     $tranobgf     begsr
      *
     C     hghgsn        setll     hsj075g
      *
     C                   dou       *in91 = *on                                  Do to BGF
     C     hghgsn        reade     hsj075g                                91
     C                   if        *in91 = *off and mhdnpp = 'BGF  '            If not EOF
     C                   add       mdqlhd        p1hgbtohd
     C                   add       mdrjhd        p1hgbtohd
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do to BGF
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Determine value for 'BGF source mixed in nursery' flag
      *-----------------------------------------------------------------------
      *
      * For Grow Finish groups that had 'multiple BGF source farms',
      * set the 'BGF source mixed in nursery' flag to YES if:
      *   any Nursery group sending pigs to that farm has more than 1 BGF source farm
      *
     C     $mixedsrc     begsr
      *
      * Read Grow Finish Groups--Nursery Sources workfile
      *
     C     hghgsn        setll     hsp329
      *
     C                   dou       *in91 = *on or p1hgbmxfl = yes               Do GF
     C     hghgsn        reade     hsp329                                 91
     C                   if        *in91 = *off and p1hgbmxfl = no              If record
     C                             and w5orhgsn <> 0
      *
      * Count the BGF farms that sent pigs to the Nursery group.
      *
     C                   z-add     0             count
     C     w5orhgsn      setll     hsp336
     C                   dou       *in93 = *on                                  Do nursery
     C     w5orhgsn      reade     hsp336                                 93
     C                   if        *in93 = *off and w9orfscd <> 0               If not EOF
     C                   add       1             count
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do nursery
      *
     C                   if        count > 1
     C                   move      yes           p1hgbmxfl
     C                   endif
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do GF
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Determine value for 'Sire Line Mixed in Nursery' flag
      *-----------------------------------------------------------------------
      *
      * For Grow Finish groups that had a sire line value of MIXED,
      * set the 'sire line mixed in nursery' flag to YES if:
      *   any Nursery group sending pigs to that group had more than 1 sire line
      *
     C     $mixedsire    begsr
      *
      * Read Grow Finish Groups--Nursery Sources workfile
      *
     C     hghgsn        setll     hsp329
      *
     C                   dou       *in91 = *on or p1hgsimxfl = yes              Do GF
     C     hghgsn        reade     hsp329                                 91
     C                   if        *in91 = *off and p1hgsimxfl = no             If record
     C                             and w5orhgsn <> 0
      *
      * Retrieve the first sire line record for that nursery group. If
      * the percent is not 100%, then we set the flag to YES.
      *
     C     w5orhgsn      chain     hsp340                             92
     C                   if        *in92 = *off and w0hdpr <> 100               If not 100%
     C                   move      yes           p1hgsimxfl
     C                   endif                                                  If not 100%
      *
     C                   endif                                                  If record
     C                   enddo                                                  Do GF
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    hghgsn
     C                   parm                    zzcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    memvsn
     C                   kfld                    melnno
      *
      *
     C     key02         klist
     C                   kfld                    hgfscd
     C                   kfld                    hgblcd
     C                   kfld                    hgrmcd
      *
      * Using the system date as a starting point, retrieve the previous
      * Saturday from the OMS calendar file.
      *
     C                   move      *date         wkcymdiso
     C                   move      wkcymdiso     wkccyymmdd
      *
      * Get the date into the SYNON format.
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmddi
     C                   else
     C                   z-add     wkyymmdd      xxcyymmddi
     C                   endif
      *
      * Call SYNON program to get previous Saturday
      *
     C                   z-add     0             wktosatdt
     C                   call      'POGSXFR'
     C                   parm      *blank        xxreturn
     C                   parm      350           xxcocd
     C                   parm                    xxcyymmddi
     C                   parm      0             xxcyymmddo
      *
     C                   if        xxreturn = *blank                            If got Saturday
     C                   z-add     xxcyymmddo    wkyymmdd
     C                   z-add     wkyymmdd      wktosatdt
     C                   if        xxcyymmddo >= 1000000
     C                   add       20000000      wktosatdt
     C                   else
     C                   add       19000000      wktosatdt
     C                   endif
     C                   endif                                                  If got Saturday
      *
      * If the above logic got you a Saturday, then find the 'subsequent'
      * Saturday. (We will use this in our 'open group' extraction logic.)
      *
     C                   if        wktosatdt <> 0
     C                   movel     wktosatdt     wkcymdiso
     C                   adddur    7:*days       wkcymdiso
     C                   move      wkcymdiso     wksubsatdt
     C                   endif
      *
      * Bring in the data area that contains the 'historical' year that controls
      * data selection.  Concatenate the year which is in the format CCYY with
      * four zeros so that you get a value such as 19980000.
      *
     C                   in        dafin
      *
     C                   movel     daccyy        wkalph
     C                   move      '0000'        wkalph
     C                   move      wkalph        wkccyy0000
      *
     C                   endsr
      /eject
