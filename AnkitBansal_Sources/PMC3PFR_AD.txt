// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMC3PFR
// ?Date: 14.08.2025 Time: 12:05:28
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?** Select by Company Number if not zeros
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

// AND DB1.Company Number NE PAR.Company Number
AND DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select by Warehouse Type if not blanks
CASE;

// IF PAR.Warehouse Type is Fresh or Frozen
IF PAR.Warehouse_Type = 'FR'/'FZ';

// AND DB1.Warehouse Type NE PAR.Warehouse Type
AND DB1.Warehouse_Type <> PAR.Warehouse_Type;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select by Customer Number if not blanks
CASE;

// IF PAR.Customer Number       NBR is not equal 0
IF PAR.Customer_Number_NBR <> *ZERO;

// AND DB1.Customer Number       NBR NE PAR.Customer Number       NBR
AND DB1.Customer_Number_NBR <> PAR.Customer_Number_NBR;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?** Select by Record Status if not blanks
CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

// AND DB1.Record Status NE PAR.Record Status
AND DB1.Record_Status <> PAR.Record_Status;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

//?** Print Co# and Co Name or *ALL
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

// 1PG.Company Number = PAR.Company Number
X1PG_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name Only  RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1100959;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** Print Co# and Co Name or *ALL
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Company Name = CON.*All
X1PG_Company_Name = *All;

ENDIF;

//?** Print Warehouse type and condition name or *All
CASE;

// IF PAR.Warehouse Type is Fresh or Frozen
IF PAR.Warehouse_Type = 'FR'/'FZ';

// 1PG.Warehouse Type = PAR.Warehouse Type
X1PG_Warehouse_Type = PAR.Warehouse_Type;

// 1PG.Condition Name 10 USR = Condition name of PAR.Warehouse Type
X1PG_Condition_Name_10_USR = RTVCND(PAR.Warehouse_Type);

//?** Print Warehouse type and condition name or *All
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Warehouse Type = CND.Equal blank
X1PG_Warehouse_Type = *BLANK;

// 1PG.Condition Name 10 USR = CON.*All
X1PG_Condition_Name_10_USR = *All;

ENDIF;

//?** Print Customer Number and name or *All
CASE;

// IF PAR.Customer Number       NBR is not equal 0
IF PAR.Customer_Number_NBR <> *ZERO;

// 1PG.Customer Number       NBR = PAR.Customer Number       NBR
X1PG_Customer_Number_NBR = PAR.Customer_Number_NBR;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(X1PG_Customer_Number_NBR);
PARAMETER(X1PG_Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** Print Customer Number and name or *All
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Customer Number       NBR = CND.equal 0
X1PG_Customer_Number_NBR = *ZERO;

// 1PG.Customer Name = CON.*All
X1PG_Customer_Name = *All;

ENDIF;

//?** Print Record status condition name or *All
CASE;

// IF PAR.Record Status is Valid Entries
IF PAR.Record_Status = 'A'/'D'/'I';

// 1PG.Record Status = PAR.Record Status
X1PG_Record_Status = PAR.Record_Status;

// 1PG.Condition Desc. 1  USR = Condition name of PAR.Record Status
X1PG_Condition_Desc_1_USR = RTVCND(PAR.Record_Status);

//?** Print Record status condition name or *All
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Record Status = CND.*blank
X1PG_Record_Status = *BLANK;

// 1PG.Condition Desc. 1  USR = CON.*All
X1PG_Condition_Desc_1_USR = *All;

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Warehouse Type header format

// SUPPRESSED PRINT Customer Number       NBR header format

//?USER: On print of detail format

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Description);
PARAMETER(LCL.Description_Line_Two);
PARAMETER(LCL.UOM_Primary);
PARAMETER(LCL.UOM_Second);
PARAMETER(LCL.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(CUR.Customer_Name_DRV);
PARAMETER(CUR.Customer_Number_NBR);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Print required level totals

// SUPPRESSED PRINT Customer Number       NBR totals format

// SUPPRESSED PRINT Warehouse Type totals format

// SUPPRESSED PRINT Company Number totals format

