// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKXTE1R
// ?Date: 14.08.2025 Time: 02:50:46
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.Company_Number_USR);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(WRK.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Initialize detail screen (existing record)

// Call program Val Commodity Group   XF.
CALL PROGRAM(Val Commodity Group   XF) ('PDG2XFR');
PARAMETER(DTL.CCC_Commodity_Price_Group);
PARAMETER(DTL.Market_Group_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// DTL.Market Group Desc USR = CONCAT(CON.Invalid Price Group,CON.*BLANK,CND.*None)
DTL.Market_Group_Desc_USR = 'Invalid Price Group' + *BLANK (*ZERO);

ENDIF;

// Call program Val Commodity Market  XF.
CALL PROGRAM(Val Commodity Market  XF) ('PDG1XFR');
PARAMETER(DB1.CCC_Commodity_Mrkt_Code);
PARAMETER(DTL.Market_Code_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// DTL.Market Code Desc USR = CONCAT(CON.Invalid Market Code,CON.*BLANK,CND.*None)
DTL.Market_Code_Desc_USR = 'Invalid Market Code' + *BLANK (*ZERO);

ENDIF;

// Call program Val Market Date Method UP.
CALL PROGRAM(Val Market Date Method UP) ('PDZUXFR');
PARAMETER(WRK.*Return_code);
PARAMETER(WRK.Company_Number_USR);
PARAMETER(DB1.CCC_Market_Date_Method);
PARAMETER(DTL.Market_Date_Method_Desc);
PARAMETER('H');

CASE;

// IF DTL.Market Date Method Desc EQ WRK.Blank USR
IF DTL.Market_Date_Method_Desc = WRK.Blank_USR;

// DTL.Market Date Method Desc = CONCAT(CON.Invalid Market Date Metho,CON.d,CND.*No
DTL.Market_Date_Method_Desc = 'Invalid Market Date Metho' + 'd' (*ZERO);

ENDIF;

//?USER: Validate detail screen fields

//?Select Commodity Market Code & Price Group
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.CCC Commodity Mrkt Code
IF PGM.*Cursor_field = DTL.CCC_Commodity_Mrkt_Code;

// Call program Sel Commodity Market  XF.
CALL PROGRAM(Sel Commodity Market  XF) ('PDEDSRR');
PARAMETER(DTL.CCC_Commodity_Mrkt_Code);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'Y';

QUIT;

// IF PGM.*Cursor field <IS> DTL.CCC Commodity Price Group
IF PGM.*Cursor_field = DTL.CCC_Commodity_Price_Group;

// Call program Sel Commodity Group   XF.
CALL PROGRAM(Sel Commodity Group   XF) ('PDECSRR');
PARAMETER(DTL.CCC_Commodity_Price_Group);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'Y';

QUIT;

ENDIF;

ENDIF;

//?Select Market Date Method
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.CCC Market Date Method
IF PGM.*Cursor_field = DTL.CCC_Market_Date_Method;

// Call program Sel Market Date Method UP.
CALL PROGRAM(Sel Market Date Method UP) ('PDZWXFR');
PARAMETER(PGM.*Return_code);
PARAMETER(WRK.Company_Number_USR);
PARAMETER(DTL.CCC_Market_Date_Method);
PARAMETER(DTL.Market_Date_Method_Desc);
PARAMETER('H');

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'Y';

QUIT;

ENDIF;

ENDIF;

//?Validate Market and Group
DO;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Invalid_Y_N_USR = *BLANK;

// Call program Val Commodity Market  XF.
CALL PROGRAM(Val Commodity Market  XF) ('PDG1XFR');
PARAMETER(DTL.CCC_Commodity_Mrkt_Code);
PARAMETER(DTL.Market_Code_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// Send error message - 'Commodity Market Code is invalid.'
ERROR(PRK0028);
MSGPARM(DTL.CCC_Commodity_Mrkt_Code);

ENDIF;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Invalid_Y_N_USR = *BLANK;

// Call program Val Commodity Group   XF.
CALL PROGRAM(Val Commodity Group   XF) ('PDG2XFR');
PARAMETER(DTL.CCC_Commodity_Price_Group);
PARAMETER(DTL.Market_Group_Desc_USR);
PARAMETER(WRK.Invalid_Y_N_USR);

CASE;

// IF WRK.Invalid Y/N USR is Yes
IF WRK.Invalid_Y_N_USR = 'Y';

// Send error message - 'Commodity Price Group is invalid.'
ERROR(PRK0027);
MSGPARM(DTL.CCC_Commodity_Price_Group);

ENDIF;

ENDDO;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.*Return_code = *BLANK;

// Call program Val Market Date Method UP.
CALL PROGRAM(Val Market Date Method UP) ('PDZUXFR');
PARAMETER(WRK.*Return_code);
PARAMETER(WRK.Company_Number_USR);
PARAMETER(DTL.CCC_Market_Date_Method);
PARAMETER(DTL.Market_Date_Method_Desc);
PARAMETER('H');

CASE;

// IF DTL.Market Date Method Desc EQ WRK.Blank USR
IF DTL.Market_Date_Method_Desc = WRK.Blank_USR;

// Send error message - 'Invalid Market Date Method.'
ERROR(PRK0556);
MSGPARM(DTL.CCC_Market_Date_Method);

ENDIF;

// *MO.VE             1183529*Bu = ilt. in functions
WRK.*Return_code = *BLANK;

//?USER: Create DBF record

EXECUTE FUNCTION(Create Competitors Commod) TYPE(CRTOBJ) FILE(PKDEREP)          AB1166587;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Compet Commod     CH) TYPE(CHGOBJ) FILE(PKDEREP)           AB1166588;

//?USER: Process command keys

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

RETURN;

ENDIF;

