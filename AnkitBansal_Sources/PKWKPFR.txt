     H/TITLE Tst Prt Crc Sum (fnts)PF  Print file
     H            Y
     Z* CRTRPGPGM
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : SYNON/2  Version:  1204
     H* Function type : Print file
      *
     H* Company       :    Hog Procurement & Evaluation
     H* System        : HPEMDL
     H* User name     : ISSMASO
     H* Date          : 11/07/95  Time  : 14:52:56
     H* Copyright     :    Hog Procurement & Evaluation
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKCXREL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0001
     F                                              KINFSR *PSSR
      * RTV : Crc Sum Lean Dist Range   Retrieval index
      *
     FPKA1CPL0IF  E           K        DISK                           UC
     F                                              KINFDS ID0002
     F                                              KINFSR *PSSR
      * RTV : Tattoo Header             Retrieval index
      *
     FPKACREL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0003
     F                                              KINFSR *PSSR
      * RTV : Producer                  Retrieval index
      *
     FPKCYCPL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0004
     F                                              KINFSR *PSSR
      * RTV : Crc Sum Tattoo Lean Dist  Retrieval index
      *
     FPKC0CPL2IF  E           K        DISK                           UC
     F                                              KINFDS ID0005
     F                                              KINFSR *PSSR
      * RSQ : Crc Sum Prd Lean Dst YTD  Co/Prd/Kldte(d)/Ln%
      *
     FPKDBCPL2IF  E           K        DISK                           UC
     F                                              KINFDS ID0006
     F                                              KINFSR *PSSR
      * RSQ : Crc Sum Co Wgt Lot   WK   Co/WkEnd-d/Min-d/Max
      *
     FPKCZCPL3IF  E           K        DISK                           UC
     F                                              KINFDS ID0007
     F                                              KINFSR *PSSR
      * RSQ : Crc Sum Prd          YTD  Co/Prd/KlDte(d)
      *
     FPKC3CPL2IF  E           K        DISK                           UC
     F                                              KINFDS ID0008
     F                                              KINFSR *PSSR
      * RSQ : Crc Sum Co Wgt Lot   YTD  Co/WkEnd-d/Min-d/Max
      *
     FPKCZCPL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0009
     F                                              KINFSR *PSSR
      * RTV : Crc Sum Prd          YTD  Retrieval index
      *
     FPKBPREL3IF  E           K        DISK                           UC
     F                                              KINFDS ID0010
     F                                              KINFSR *PSSR
      * RSQ : Loss Type                 LossDfn/LossTyp
      *
     FPKBSCPL6IF  E           K        DISK                           UC
     F                                              KINFDS ID0011
     F                                              KINFSR *PSSR
      * RSQ : Loss Trans                Co/LsTyp/Bo/Ld/Tto
      *
     FPKBRREL1IF  E           K        DISK                           UC
     F                                              KINFDS ID0012
     F                                              KINFSR *PSSR
      * RTV : Loss Reason               Retrieval index
      *
     FPKWKPFR$O   E             97     PRINTER                        UC
     F                                              KINFDS INFDS$
     F                                              KINFSR *PSSR
      * PRT: Tst Prt Crc Sum (fnts)PF  Print file
      *
      * Long constants
     E                    @CN#    1   1  6   @CN    25
     I@CZCPO1
      * Crc Sum Prd          YTD  Retrieval index
      * Renamed input format fields
     I              CZHONB                          WAHONB
     I              CZABCD                          WAABCD
     I              CZCHDT                          WACHDT
     I              CZN4NB                          WAN4NB
     I              CZMFNB                          WAMFNB
     I              CZN2NB                          WAN2NB
     I              CZN3NB                          WAN3NB
     I              CZBGVA                          WABGVA
     I              CZBHVA                          WABHVA
     I              CZN1NB                          WAN1NB
     I              CZDXPC                          WADXPC
     I              CZDYPC                          WADYPC
     I              CZERPR                          WAERPR
     I              CZESPR                          WAESPR
     I              CZAAVN                          WAAAVN
     I              CZAADT                          WAAADT
     I              CZAMTM                          WAAMTM
     I              CZAJST                          WAAJST
     I              CZAHVN                          WAAHVN
     I              CZAGVN                          WAAGVN
     I              CZABVN                          WAABVN
     I              CZABDT                          WAABDT
     I              CZABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IID0001      DS                            528
      * File information data structure
      *
     IID0002      DS                            528
      * File information data structure
      *
     IID0003      DS                            528
      * File information data structure
      *
     IID0004      DS                            528
      * File information data structure
      *
     IID0005      DS                            528
      * File information data structure
      *
     IID0006      DS                            528
      * File information data structure
      *
     IID0007      DS                            528
      * File information data structure
      *
     IID0008      DS                            528
      * File information data structure
      *
     IID0009      DS                            528
      * File information data structure
      *
     IID0010      DS                            528
      * File information data structure
      *
     IID0011      DS                            528
      * File information data structure
      *
     IID0012      DS                            528
      * File information data structure
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             15
      * KEY: Tattoo Header             Retrieval index
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * I : RST BOH Buy Order Number
     I                                    P   3   50P1BNNB
      * I : RST BOL Load Number
     I                                    P   6   80P1BONB
      * I : RST TH Tattoo Number
     I                                    P   9  110P1CVNB
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Lean Rng Hdg 1 USR
     I                                        1   5 P2DVCD
      * N :  Lean Rng Hdg 2 USR
     I                                        6  10 P2DWCD
      * N :  Lean Rng Hdg 3 USR
     I                                       11  15 P2DXCD
      * N :  Lean Rng Hdg 4 USR
     I                                       16  20 P2DYCD
      * N :  Lean Rng Hdg 5 USR
     I                                       21  25 P2DZCD
      * N :  Lean Rng Hdg 6 USR
     I                                       26  30 P2D0CD
      * N :  Lean Rng Hdg 7 USR
     I                                       31  35 P2D1CD
      * N :  Lean Rng Hdg 8 USR
     I                                       36  40 P2D2CD
      * N :  Lean Rng Min 1 USR
     I                                    P  41  420P2CXPC
      * N :  Lean Rng Max 1 USR
     I                                    P  43  440P2CYPC
      * N :  Lean Rng Min 2 USR
     I                                    P  45  460P2CZPC
      * N :  Lean Rng Max 2 USR
     I                                    P  47  480P2C0PC
      * N :  Lean Rng Min 3 USR
     I                                    P  49  500P2C1PC
      * N :  Lean Rng Max 3 USR
     I                                    P  51  520P2C2PC
      * N :  Lean Rng Min 4 USR
     I                                    P  53  540P2C3PC
      * N :  Lean Rng Max 4 USR
     I                                    P  55  560P2C4PC
      * N :  Lean Rng Min 5 USR
     I                                    P  57  580P2C5PC
      * N :  Lean Rng Max 5 USR
     I                                    P  59  600P2C6PC
      * N :  Lean Rng Min 6 USR
     I                                    P  61  620P2C7PC
      * N :  Lean Rng Max 6 USR
     I                                    P  63  640P2C8PC
      * N :  Lean Rng Min 7 USR
     I                                    P  65  660P2C9PC
      * N :  Lean Rng Max 7 USR
     I                                    P  67  680P2DAPC
      * N :  Lean Rng Min 8 USR
     I                                    P  69  700P2DBPC
      * N :  Lean Rng Max 8 USR
     I                                    P  71  720P2DCPC
     IP3PARM      DS
      * N :  PY Head Killed
     I                                    P   1   40P3MFNB
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           KEY: Tattoo Hea
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Tst Prt Crc Sum (fnts)PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$NENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Tst Prt Crc Sum (fnts)PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
     C           *LIKE     DEFN A1BNNB    WQKA02           BOH Buy Order N
     C           *LIKE     DEFN A1BONB    WQKA03           BOL Load Number
     C           *LIKE     DEFN A1CVNB    WQKA04           TH Tattoo Numbe
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           WQKA02           BOH Buy Order N
     C                     KFLD           WQKA03           BOL Load Number
     C                     KFLD           WQKA04           TH Tattoo Numbe
      * Move fields to key list
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
     C                     Z-ADDP1BNNB    WQKA02           BOH Buy Order N
     C                     Z-ADDP1BONB    WQKA03           BOL Load Number
     C                     Z-ADDP1CVNB    WQKA04           TH Tattoo Numbe
      * Establish starting position
     C           KRSA      SETLL@A1CPC4                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0AL02  1        BOL Load Number
     C                     MOVEL'Y'       W0AL03  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
      * Load related totals format
     C                     Z-ADDA1HMNB    $LHMNB           BOH Company Num
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $EBNNB           BOH Buy Order N
      * Load related totals format
     C                     Z-ADDA1HMNB    $KHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $KBNNB           BOH Buy Order N
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $FHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $FBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $FBONB           BOL Load Number
      * Load related totals format
     C                     Z-ADDA1HMNB    $JHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $JBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $JBONB           BOL Load Number
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $GHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $GBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $GBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $GCVNB           TH Tattoo Numbe
      * Load related totals format
     C                     Z-ADDA1HMNB    $IHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $IBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $IBONB           BOL Load Number
     C                     Z-ADDA1CVNB    $ICVNB           TH Tattoo Numbe
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $HHMNB           BOH Company Num
     C                     Z-ADDA1BONB    $HBONB           BOL Load Number
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     Z-ADDA1AWDT    $HAWDT           TH Purchase Dat
     C                     Z-ADDA1B0DT    $HB0DT           TH Kill Date
     C                     Z-ADDA1CVNB    $HCVNB           TH Tattoo Numbe
     C                     MOVELA1CPST    $HCPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $HACPR           TH Live Purchas
     C                     Z-ADDA1B9PR    $HB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $HCAPR           TH LIve Net Amt
     C                     MOVELA1C4ST    $HC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $HAIPR           TH Resale Price
     C                     Z-ADDA1A6DT    $HA6DT           TH Resale Invoi
     C                     MOVELA1C2ST    $HC2ST           TH Resale Print
     C                     Z-ADDA1CXNB    $HCXNB           TH Dead On Arri
     C                     Z-ADDA1CWNB    $HCWNB           TH Head Receive
     C                     Z-ADDA1H9NB    $HH9NB           TH Held Over
     C                     Z-ADDA1FENB    $HFENB           TH Head Killed
     C                     Z-ADD*ZERO     $HN7NB           TH Live Wgt DRV
     C                     Z-ADD*ZERO     $HOANB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $HPKNB           Th Live Adj Wgt
     C                     Z-ADDA1LRNB    $HLRNB           TH Adj Live Wgt
     C                     Z-ADDA1HFNB    $HHFNB           TH Head Analyze
     C                     Z-ADDA1CYNB    $HCYNB           TH Live Wgt
     C                     Z-ADDA1F7NB    $HF7NB           TH Avg Live Wgt
     C                     Z-ADDA1AMPR    $HAMPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     $HE8PR           TH CM Base Live
     C                     Z-ADD*ZERO     $HE7PR           TH CM BASE CARC
     C                     MOVELA1ABCD    $HABCD           PD Producer Cod
     C                     MOVEL*BLANK    $HAGTX           PD Name
     C                     MOVELA1ACCD    $HACCD           HB Buyer Code
     C                     Z-ADDA1ANPR    $HANPR           TH CM Base Mkt
     C                     Z-ADDA1D6PR    $HD6PR           TH CM Bse Mkt L
     C                     Z-ADDA1D7PR    $HD7PR           TH CM Bse Mkt C
     C                     Z-ADDA1AWPC    $HAWPC           TH Actual Yield
     C                     Z-ADDA1CWPC    $HCWPC           TH Adj Actual Y
     C                     Z-ADDA1A2PR    $HA2PR           TH Actual Value
     C                     MOVELA1JWST    $HJWST           TH Calc Net Sts
     C                     Z-ADDA1AYVA    $HAYVA           TH CM Sort Disc
     C                     Z-ADDA1D8PR    $HD8PR           TH CM Srt Dsc L
     C                     Z-ADDA1D9PR    $HD9PR           TH CM Srt Dsc C
     C                     Z-ADDA1AWVA    $HAWVA           TH CM Yield Gai
     C                     Z-ADDA1EAPR    $HEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $HEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     $HD0PC           TH Avg Lean Per
     C                     Z-ADDA1F4NB    $HF4NB           TH Avg Lean Per
     C                     Z-ADDA1A5PC    $HA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $HFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $HA4PC           TH Tot Light Re
     C                     Z-ADDA1AOPR    $HAOPR           TH CM Base Carc
     C                     Z-ADDA1ECPR    $HECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $HEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     $HOBNB           TH Hot Wgt DRV
     C                     Z-ADDA1E0NB    $HE0NB           TH Hot Wgt
     C                     Z-ADDA1AXVA    $HAXVA           TH CM LN AddOn/
     C                     Z-ADDA1EEPR    $HEEPR           TH CM Lean Prem
     C                     Z-ADDA1EFPR    $HEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HOCNB           TH Avg Hot Wgt
     C                     Z-ADDA1HDNB    $HHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1APPR    $HAPPR           TH CM Carcass G
     C                     Z-ADDA1EGPR    $HEGPR           TH CM Gross Liv
     C                     Z-ADDA1EHPR    $HEHPR           TH CM Gross Car
     C                     MOVELA1KAST    $HKAST           TH Source Type
     C                     MOVELA1J7ST    $HJ7ST           TH Scale Ticket
     C                     MOVELA1J8ST    $HJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $HLIST           TH Unused Sts 1
     C                     MOVELA1LJST    $HLJST           TH Unused Sts 2
     C                     MOVELA1J9ST    $HJ9ST           TH Payment Type
     C                     MOVELA1LKST    $HLKST           TH Source Code
     C                     MOVELA1LLST    $HLLST           TH Hog Class Ty
     C                     Z-ADDA1F2NB    $HF2NB           TH Avg Backfat
     C                     Z-ADDA1F5NB    $HF5NB           TH Avg Light Re
     C                     MOVEL*BLANK    $HGWTX           Ded Line 1 Desc
     C                     Z-ADD*ZERO     $HC7PR           Ded Line 1 USR
     C                     MOVEL*BLANK    $HGXTX           Ded Line 2 Desc
     C                     Z-ADD*ZERO     $HC9PR           Ded Line 2 USR
     C                     Z-ADDA1ASPR    $HASPR           TH Deduction Am
     C                     Z-ADDA1AVPC    $HAVPC           TH Std Yield Pe
     C                     Z-ADDA1A8PC    $HA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $HA7PC           TH UnUsed Field
     C                     Z-ADDA1B8PR    $HB8PR           TH CM Market Pr
     C                     Z-ADDA1A4VA    $HA4VA           TH Total Net WO
     C                     Z-ADDA1F3NB    $HF3NB           TH Avg Loin Eye
     C                     MOVEL*BLANK    $HGYTX           Ded Line 3 Desc
     C                     Z-ADD*ZERO     $HC6PR           Ded Line 3 USR
     C                     Z-ADDA1A5VA    $HA5VA           TH Additions Am
     C                     MOVEL*BLANK    $HGZTX           Ded Line 4 Desc
     C                     Z-ADD*ZERO     $HC8PR           Ded Line 4 USR
     C                     Z-ADDA1HINB    $HHINB           TH FFLI
     C                     MOVEL*BLANK    $HG0TX           Ded Line 5 Desc
     C                     Z-ADD*ZERO     $HC5PR           Ded Line 5 USR
     C                     MOVEL*BLANK    $HG1TX           Ded Line 6 Desc
     C                     Z-ADD*ZERO     $HEIPR           Ded Line 6 USR
     C                     MOVEL*BLANK    $HHETX           Ded Line 7 Desc
     C                     Z-ADD*ZERO     $HELPR           Ded Line 7 USR
     C                     MOVEL*BLANK    $HHFTX           Ded Line 8 Desc
     C                     Z-ADD*ZERO     $HEMPR           Ded Line 8 USR
     C                     Z-ADDA1ATPR    $HATPR           TH Carcass Net
     C                     MOVEL*BLANK    $HDVCD           Lean Rng Hdg 1
     C                     MOVEL*BLANK    $HDWCD           Lean Rng Hdg 2
     C                     MOVEL*BLANK    $HDXCD           Lean Rng Hdg 3
     C                     MOVEL*BLANK    $HDYCD           Lean Rng Hdg 4
     C                     MOVEL*BLANK    $HDZCD           Lean Rng Hdg 5
     C                     MOVEL*BLANK    $HD0CD           Lean Rng Hdg 6
     C                     MOVEL*BLANK    $HD1CD           Lean Rng Hdg 7
     C                     MOVEL*BLANK    $HD2CD           Lean Rng Hdg 8
     C                     Z-ADD*ZERO     $HM2NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM3NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM4NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM5NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM6NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM7NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM8NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM9NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HDDPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDEPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDFPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDGPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDHPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDIPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDJPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HDKPC           Lean Rng Tto Pc
     C                     Z-ADD*ZERO     $HNANB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNBNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNCNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNDNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNENB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNFNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNGNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNHNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HDLPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDMPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDNPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDOPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDPPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDQPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDRPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HDSPC           Lean Rng Prd Pc
     C                     Z-ADD*ZERO     $HCHDT           PY As of Kill D
     C                     Z-ADDA1FCNB    $HFCNB           TH Yard Deads
     C                     Z-ADDA1FDNB    $HFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     $HMHNB           CWL Min Live Wg
     C                     Z-ADD*ZERO     $HMINB           CWL Max Live Wg
     C                     MOVEL*BLANK    $HG3TX           Reason 1 Desc U
     C                     Z-ADD*ZERO     $HMRNB           Reason Head 1 U
     C                     MOVEL*BLANK    $HG9TX           Reason 2 Desc U
     C                     Z-ADD*ZERO     $HMSNB           Reason Head 2 U
     C                     MOVEL*BLANK    $HHATX           Reason 3 Desc U
     C                     Z-ADD*ZERO     $HMTNB           Reason Head 3 U
     C                     MOVEL*BLANK    $HHKTX           Yield NA WK USR
     C                     MOVEL*BLANK    $HHRTX           Yield Top X WK
     C                     MOVEL*BLANK    $HHTTX           Yield Mid Hi X
     C                     MOVEL*BLANK    $HHSTX           Yield Mid Low X
     C                     MOVEL*BLANK    $HHUTX           Yield Lower X W
     C                     MOVEL*BLANK    $HHBTX           Reason 4 Desc U
     C                     Z-ADD*ZERO     $HMUNB           Reason Head 4 U
     C                     MOVEL*BLANK    $HHJTX           Lean% NA WK USR
     C                     MOVEL*BLANK    $HHNTX           Lean% Top X WK
     C                     MOVEL*BLANK    $HHPTX           Lean% Mid Hi X
     C                     MOVEL*BLANK    $HHOTX           Lean% Mid Low X
     C                     MOVEL*BLANK    $HHQTX           Lean% Lower X W
     C                     MOVEL*BLANK    $HHCTX           Reason 5 Desc U
     C                     Z-ADD*ZERO     $HMVNB           Reason Head 5 U
     C                     MOVEL*BLANK    $HHLTX           Lean Prm NA WK
     C                     MOVEL*BLANK    $HHVTX           Lean Prm Top X
     C                     MOVEL*BLANK    $HHXTX           Lean Prm Mid Hi
     C                     MOVEL*BLANK    $HHWTX           Lean Prm Mid Lo
     C                     MOVEL*BLANK    $HHYTX           Lean Prm Lower
     C                     MOVEL*BLANK    $HHMTX           Sort Dsc NA WK
     C                     MOVEL*BLANK    $HHZTX           Sort Dsc Top X
     C                     MOVEL*BLANK    $HH1TX           Sort Dsc Mid Hi
     C                     MOVEL*BLANK    $HH0TX           Sort Dsc Mid Lo
     C                     MOVEL*BLANK    $HH2TX           Sort Dsc Lower
     C                     MOVEL*BLANK    $HG4TX           Trim 1 Desc USR
     C                     Z-ADD*ZERO     $HMWNB           Trim Head 1 USR
     C                     Z-ADD*ZERO     $HN4NB           PY Head Receive
     C                     Z-ADD*ZERO     $HN1NB           PY Avg Live Wgt
     C                     MOVEL*BLANK    $HG5TX           Trim 2 Desc USR
     C                     Z-ADD*ZERO     $HMXNB           Trim Head 2 USR
     C                     MOVEL*BLANK    $HG6TX           Trim 3 Desc USR
     C                     Z-ADD*ZERO     $HMYNB           Trim Head 3 USR
     C                     Z-ADD*ZERO     $HNXNB           Live Wgt Min US
     C                     Z-ADD*ZERO     $HNYNB           Live Wgt Max US
     C                     MOVEL*BLANK    $HG7TX           Trim 4 Desc USR
     C                     Z-ADD*ZERO     $HMZNB           Trim Head 4 USR
     C                     MOVEL*BLANK    $HG8TX           Trim 5 Desc USR
     C                     Z-ADD*ZERO     $HM0NB           Trim Head 5 USR
     C                     Z-ADD*ZERO     $HDXPC           PY Actual Yield
     C                     MOVEL*BLANK    $HH3TX           Yield NA YTD US
     C                     MOVEL*BLANK    $HIBTX           Yield Top X YTD
     C                     MOVEL*BLANK    $HIDTX           Yield Mid Hi X
     C                     MOVEL*BLANK    $HICTX           Yield Mid Low X
     C                     MOVEL*BLANK    $HIETX           Yield Lower X Y
     C                     Z-ADD*ZERO     $HH3NB           Weight Tot USR
     C                     Z-ADD*ZERO     $HDYPC           PY Avg Lean %
     C                     MOVEL*BLANK    $HH4TX           Lean% NA YTD US
     C                     MOVEL*BLANK    $HH7TX           Lean% Top X YTD
     C                     MOVEL*BLANK    $HH9TX           Lean% Mid Hi X
     C                     MOVEL*BLANK    $HH8TX           Lean% Mid Low X
     C                     MOVEL*BLANK    $HIATX           Lean% Lower X Y
     C                     Z-ADD*ZERO     $HERPR           PY Lean Prem/De
     C                     MOVEL*BLANK    $HH5TX           Lean Prm NA YTD
     C                     MOVEL*BLANK    $HIFTX           Lean Prm Top X
     C                     MOVEL*BLANK    $HIJTX           Lean Prm Mid Hi
     C                     MOVEL*BLANK    $HIHTX           Lean Prm Mid Lw
     C                     MOVEL*BLANK    $HILTX           Lean Prm Lower
     C                     Z-ADD*ZERO     $HESPR           PY Sort Discoun
     C                     MOVEL*BLANK    $HH6TX           Sort Dsc NA YTD
     C                     MOVEL*BLANK    $HIGTX           Sort Dsc Top X
     C                     MOVEL*BLANK    $HIKTX           Sort Dsc Mid Hi
     C                     MOVEL*BLANK    $HIITX           Sort DSC Mid Lw
     C                     MOVEL*BLANK    $HIMTX           Sort Dsc Lower
     C                     Z-ADDA1HENB    $HHENB           TH Head Adds
     C                     Z-ADD*ZERO     $HCGDT           Kill Date Usr
     C                     Z-ADD*ZERO     $HCJDT           CWLY Week Endin
     C                     Z-ADDA1BNNB    $HBNNB           BOH Buy Order N
     C                     Z-ADDA1OXNB    $HOXNB           TH Movement Ref
     C                     MOVELA1BICD    $HBICD           TH Tattoo Refer
     C                     Z-ADDA1CBPR    $HCBPR           TH Payment Gros
     C                     Z-ADDA1CCPR    $HCCPR           Th Payment Net
     C                     Z-ADDA1LPNB    $HLPNB           TH AP Voucher/D
     C                     Z-ADDA1CDPR    $HCDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $HA7VA           TH Contract Adj
     C                     MOVELA1CWST    $HCWST           TH Payment Sts
     C                     MOVELA1D7ST    $HD7ST           TH Header Error
     C                     MOVELA1D8ST    $HD8ST           TH Detail Error
     C                     MOVELA1DWST    $HDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $HD6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $HGHNB           TH UnUsed Fld
     C                     Z-ADDA1BYDT    $HBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $HE0ST           TH User Error O
     C                     MOVELA1E1ST    $HE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $HE2ST           TH Sex
     C                     Z-ADDA1BSDT    $HBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $HBTDT           TH Unused Date
     C                     Z-ADDA1BUDT    $HBUDT           TH Unused Date
     C                     Z-ADDA1HGNB    $HHGNB           TH Unused Wgt 1
     C                     Z-ADDA1HHNB    $HHHNB           TH Unused Wgt 2
     C                     Z-ADDA1A3PR    $HA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $HA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $HA6PR           TH Render Produ
     C                     Z-ADDA1J9NB    $HJ9NB           TH Head Deletes
     C                     MOVELA1AGCD    $HAGCD           GN Genetic Code
     C                     MOVELA1BECD    $HBECD           HC Class Code
     C                     MOVELA1BDCD    $HBDCD           DF Defect Code
     C                     MOVELA1CSCD    $HCSCD           THP Process Cod
     C                     MOVELA1AECD    $HAECD           PL Location Cod
     C                     MOVELA1AAVN    $HAAVN           RS User Changed
     C                     Z-ADDA1AADT    $HAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $HAMTM           RS Time Changed
     C                     MOVELA1AJST    $HAJST           RS Record Statu
     C                     MOVELA1AHVN    $HAHVN           RS Job
     C                     MOVELA1AGVN    $HAGVN           RS Program
     C                     MOVELA1ABVN    $HABVN           RS User Added
     C                     Z-ADDA1ABDT    $HABDT           RS Date Added
     C                     Z-ADDA1ABTM    $HABTM           RS Time Added
      * USER: Process before print of detail format
      * CUR = PAR By name
     C                     Z-ADDP1HMNB    $HHMNB           BOH Company Num
     C                     Z-ADDP1BONB    $HBONB           BOL Load Number
     C                     Z-ADDP1CVNB    $HCVNB           TH Tattoo Numbe
     C                     MOVELP2DVCD    $HDVCD           Lean Rng Hdg 1
     C                     MOVELP2DWCD    $HDWCD           Lean Rng Hdg 2
     C                     MOVELP2DXCD    $HDXCD           Lean Rng Hdg 3
     C                     MOVELP2DYCD    $HDYCD           Lean Rng Hdg 4
     C                     MOVELP2DZCD    $HDZCD           Lean Rng Hdg 5
     C                     MOVELP2D0CD    $HD0CD           Lean Rng Hdg 6
     C                     MOVELP2D1CD    $HD1CD           Lean Rng Hdg 7
     C                     MOVELP2D2CD    $HD2CD           Lean Rng Hdg 8
     C                     Z-ADDP1BNNB    $HBNNB           BOH Buy Order N
      * Held Over Processing
      * CASE: DB1.TH Held Over Record is Yes
     C           A1E1ST    IFEQ 'Y'                        *IF
      * Clear all neither parameters
     C                     Z-ADD*ZERO     WN0001 152       Lean % * Wgt US
     C                     Z-ADD*ZERO     WN0002 152       Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0003 152       Loin-Eye * Wgt
      *
      * Prt Crc Sum (Hld Ovr) IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HB0DT           TH Kill Date
     C                     Z-ADD*ZERO     $HCWNB           TH Head Receive
     C                     Z-ADD*ZERO     $HFCNB           TH Yard Deads
     C                     Z-ADD*ZERO     $HFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     $HFENB           TH Head Killed
     C                     Z-ADD*ZERO     $HHENB           TH Head Adds
     C                     Z-ADD*ZERO     $HCYNB           TH Live Wgt
     C                     Z-ADD*ZERO     $HLRNB           TH Adj Live Wgt
     C                     Z-ADD*ZERO     $HE0NB           TH Hot Wgt
     C                     Z-ADD*ZERO     $HF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $HHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $HF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $HF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $HF2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     $HAWPC           TH Actual Yield
     C                     Z-ADD*ZERO     $HCWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     $HANPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     $HAYVA           TH CM Sort Disc
     C                     Z-ADD*ZERO     $HAWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     $HAOPR           TH CM Base Carc
     C                     Z-ADD*ZERO     $HAXVA           TH CM LN AddOn/
     C                     Z-ADD*ZERO     $HAPPR           TH CM Carcass G
     C                     Z-ADD*ZERO     $HASPR           TH Deduction Am
     C                     Z-ADD*ZERO     $HATPR           TH Carcass Net
     C                     Z-ADD*ZERO     $HA5VA           TH Additions Am
     C                     Z-ADD*ZERO     $HCBPR           TH Payment Gros
     C                     Z-ADD*ZERO     $HCCPR           Th Payment Net
     C                     Z-ADD*ZERO     $HHINB           TH FFLI
     C                     Z-ADD*ZERO     $HD6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     $HD7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     $HD8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     $HD9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     $HEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     $HEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     $HECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     $HEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     $HEEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEGPR           TH CM Gross Liv
     C                     Z-ADD*ZERO     $HEHPR           TH CM Gross Car
     C                     Z-ADD*ZERO     WN0001           Lean % * Wgt US
     C                     Z-ADD*ZERO     WN0002           Backfat * Wgt U
     C                     Z-ADD*ZERO     WN0003           Loin-Eye * Wgt
      * Prt Crc Sum (Hld Ovr) RT - Tattoo Header  * 
     C                     EXSR SBRVGN
      * Calculate Live /CWT and Carc /CWT
      * CASE: WRK.#Sequence Block is NULL
     C           WUJ0ST    IFEQ *BLANK                     *IF
      * Calculate Carc/CWT if Par.Th Hot Wt is n= 0
      * CASE: PAR.TH Hot Wgt NE WRK.Zero USR
     C           $HE0NB    IFNE WUE9NB                     *IF
      * TH CM Bse Mkt Carc /CWT
      * PAR.TH CM Bse Mkt Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Mkt Price Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HANPR    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HD7PR           TH CM Bse Mkt C
      * TH CM Srt Dsc Carc /CWT
      * PAR.TH CM Srt Dsc Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Sort Discount Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAYVA    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HD9PR           TH CM Srt Dsc C
      * TH CM Yld G/L Carc /CWT
      * PAR.TH CM Yld G/L Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Yield Gain/Loss Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAWVA    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEBPR           TH CM Yld G/L C
      * TH CM Crc Val Carc /CWT
      * PAR.TH CM Crc Val Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Carcass Value
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAOPR    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEDPR           TH CM Crc Val C
      * TH CM Lean Prem Carc /CWT
      * PAR.TH CM Lean Prem Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM LN AddOn/Deduct Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAXVA    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEFPR           TH CM Lean Prem
      * TH CM Gross Carc /CWT
      * PAR.TH CM Gross Carc /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Carcass Gross Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAPPR    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEHPR           TH CM Gross Car
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HD7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     $HD9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     $HEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     $HEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     $HEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEHPR           TH CM Gross Car
     C                     END                             *FI
      * Calculate Live/CWT if Par.Th live wt is n= 0
      * CASE: PAR.TH Live Wgt NE WRK.Zero USR
     C           $HCYNB    IFNE WUE9NB                     *IF
      * TH CM Bse Mkt Live /CWT
      * PAR.TH CM Bse Mkt Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Mkt Price Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HANPR    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HD6PR           TH CM Bse Mkt L
      * TH CM Srt Dsc Live /CWT
      * PAR.TH CM Srt Dsc Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Sort Discount Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAYVA    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HD8PR           TH CM Srt Dsc L
      * TH CM Yld G/L Live /CWT
      * PAR.TH CM Yld G/L Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Yield Gain/Loss Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAWVA    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEAPR           TH CM Yld G/L L
      * TH CM Crc Val Live /CWT
      * PAR.TH CM Crc Val Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Base Carcass Value
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAOPR    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HECPR           TH CM Crc Val L
      * TH CM Lean Prem Live /CWT
      * PAR.TH CM Lean Prem Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM LN AddOn/Deduct Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAXVA    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEEPR           TH CM Lean Prem
      * TH CM Gross Live /CWT
      * PAR.TH CM Gross Live /CWT =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : PAR.TH CM Carcass Gross Amt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HCYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           $HAPPR    DIV  W0WD01    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEGPR           TH CM Gross Liv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HD6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     $HD8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     $HEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     $HECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     $HEEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     $HEGPR           TH CM Gross Liv
     C                     END                             *FI
     C                     END                             *FI
      * Calc Avg Live Wt
      * CASE: PAR.TH Head Received is *Zeros
     C           $HCWNB    IFEQ *ZERO                      *IF
     C                     Z-ADD*ZERO     WUF7NB           TH Avg Live Wgt
     C                     ELSE
      * CASE: *OTHERWISE
     C           $HCYNB    DIV  $HCWNB    WUF7NB    H      TH Avg Live Wgt
     C                     END                             *FI
      * Calc Adj Live Weight
      * CASE: PAR.TH Head Received EQ PAR.TH Head Killed
     C           $HCWNB    IFEQ $HFENB                     *IF
     C                     Z-ADD$HCYNB    WULRNB           TH Adj Live Wgt
     C                     ELSE
      * CASE: *OTHERWISE
     C           $HFENB    MULT WUF7NB    WULRNB           TH Adj Live Wgt
     C                     END                             *FI
     C                     Z-ADDWUF7NB    $HF7NB           TH Avg Live Wgt
     C                     Z-ADDWULRNB    $HLRNB           TH Adj Live Wgt
      * Calc Actual Yield %
      * CASE: PAR.TH Live Wgt NE WRK.Zero USR
     C           $HCYNB    IFNE WUE9NB                     *IF
      * TH Actual Yield %
      * PAR.TH Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Live Wgt
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  $HCYNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HAWPC           TH Actual Yield
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HAWPC           TH Actual Yield
     C                     END                             *FI
      * Calc Adj Actual Yield %
      * CASE: PAR.TH Adj Live Wgt NE WRK.Zero USR
     C           $HLRNB    IFNE WUE9NB                     *IF
      * TH Adj Actual Yield %
      * PAR.TH Adj Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.TH Adj Live Wgt
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HE0NB    DIV  $HLRNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HCWPC           TH Adj Actual Y
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HCWPC           TH Adj Actual Y
     C                     END                             *FI
      * Calc Avg Hot Wt
      * CASE: PAR.TH Head Killed NE WRK.Zero USR
     C           $HFENB    IFNE WUE9NB                     *IF
     C           $HE0NB    DIV  $HFENB    $HHDNB    H      TH Avg Hot Wgt
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HHDNB           TH Avg Hot Wgt
     C                     END                             *FI
      * Calc Avg Lean %, Loin eye, & Backfat
      * CASE: PAR.TH Hot Wgt NE WRK.Zero USR
     C           $HE0NB    IFNE WUE9NB                     *IF
     C           WN0001    DIV  $HE0NB    $HF4NB    H      TH Avg Lean Per
     C           WN0003    DIV  $HE0NB    $HF3NB    H      TH Avg Loin Eye
     C           WN0002    DIV  $HE0NB    $HF2NB    H      TH Avg Backfat
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $HF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     $HF2NB           TH Avg Backfat
     C                     END                             *FI
      * TH FFLI
      * PAR.TH FFLI =
      *    *COMPUTE (x1 + (x2 * x3) - (x4 * x5))
      * x1    : CON.51.537
      * +     : PGM.*Synon (17,7) work field
      * x2    : CON..035
      * *     : PGM.*Synon (17,7) work field *
      * x3    : PAR.TH Hot Wgt
      * -     : PGM.*Synon (17,7) work field
      * x4    : CON.12.26
      * *     : PGM.*Synon (17,7) work field *
      * x5    : PAR.TH Avg Backfat
     C           .035      MULT $HE0NB    W0WD02           *Synon (17,7) w
     C           51.537    ADD  W0WD02    W0WD01           *Synon (17,7) w
     C           12.26     MULT $HF2NB    W0WD03           *Synon (17,7) w
     C           W0WD01    SUB  W0WD03    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HHINB           TH FFLI
     C                     END                             *FI
      * Live/Carcass Merit Payment
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     MOVEL'L I V E' $HHDTX           Payment Type De
     C                     Z-ADD$HACPR    $HAMPR           TH CM Base Mkt
     C                     Z-ADD$HCBPR    $HAPPR           TH CM Carcass G
     C                     Z-ADD$HCCPR    $HATPR           TH Carcass Net
      * TH CM Gross Live /CWT
      * CASE: DB1.TH Live Wgt NE WRK.Zero USR
     C           A1CYNB    IFNE WUE9NB                     *IF
      * re-cal for live only CWT
      * CUR.TH CM Gross Live /CWT =
      *    *COMPUTE ((x1 / (x2 / x3)))
      * x1    : CUR.TH Payment Gross
      * /     : PGM.*Synon (17,7) work field *
      * x2    : DB1.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           A1CYNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HCBPR    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEGPR           TH CM Gross Liv
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HEGPR           TH CM Gross Liv
     C                     END                             *FI
      * TH CM Gross Carc /CWT
      * CASE: DB1.TH Hot Wgt NE WRK.Zero USR
     C           A1E0NB    IFNE WUE9NB                     *IF
      * re-cal for live only CWT
      * CUR.TH CM Gross Carc /CWT =
      *    *COMPUTE ((x1 / (x2 / x3)))
      * x1    : CUR.TH Payment Gross
      * /     : PGM.*Synon (17,7) work field *
      * x2    : DB1.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           A1E0NB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HCBPR    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HEHPR           TH CM Gross Car
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     $HEHPR           TH CM Gross Car
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
     C                     MOVEL*BLANK    $HHDTX           Payment Type De
     C                     MOVEL@CN,01    $HHDTX           Payment Type De
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SCRVGN
      * Prt Crc Sum Ded/Add   UP - Tattoo Ded/Add  * 
     C                     CALL 'PKT0UPR'              90  Prt Crc Sum Ded
     C           W0RTN     PARM W0RTN     WQ0001  7        @TXT 7 postions
     C                     PARM $HHMNB    WQ0002  30       BOH Company Num
     C                     PARM $HBNNB    WQ0003  50       BOH Buy Order N
     C                     PARM $HBONB    WQ0004  50       BOL Load Number
     C                     PARM $HCVNB    WQ0005  50       TH Tattoo Numbe
     C           $HGWTX    PARM $HGWTX    WQ0006 20        Ded Line 1 Desc
     C           $HGXTX    PARM $HGXTX    WQ0007 20        Ded Line 2 Desc
     C           $HGYTX    PARM $HGYTX    WQ0008 20        Ded Line 3 Desc
     C           $HGZTX    PARM $HGZTX    WQ0009 20        Ded Line 4 Desc
     C           $HG0TX    PARM $HG0TX    WQ0010 20        Ded Line 5 Desc
     C           $HG1TX    PARM $HG1TX    WQ0011 20        Ded Line 6 Desc
     C           $HHETX    PARM $HHETX    WQ0012 20        Ded Line 7 Desc
     C           $HHFTX    PARM $HHFTX    WQ0013 20        Ded Line 8 Desc
     C           $HC7PR    PARM $HC7PR    WQ0014  72       Ded Line 1 USR
     C           $HC9PR    PARM $HC9PR    WQ0015  72       Ded Line 2 USR
     C           $HC6PR    PARM $HC6PR    WQ0016  72       Ded Line 3 USR
     C           $HC8PR    PARM $HC8PR    WQ0017  72       Ded Line 4 USR
     C           $HC5PR    PARM $HC5PR    WQ0018  72       Ded Line 5 USR
     C           $HEIPR    PARM $HEIPR    WQ0019  72       Ded Line 6 USR
     C           $HELPR    PARM $HELPR    WQ0020  72       Ded Line 7 USR
     C           $HEMPR    PARM $HEMPR    WQ0021  72       Ded Line 8 USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKT0UPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
      * Carcass Merit Hogs Only
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
      * Rtv Tattoo Lean Dist  RT - Crc Sum Tattoo Lean Dist  * 
     C                     EXSR SDRVGN
      * Rtv Prd Lean Dist     RT - Crc Sum Prd Lean Dst YTD  * 
     C                     EXSR SERVGN
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CUR) $HMHNB' defaulted for 'CWL Min Live Wgt'.
      * Field '(CUR) $HMINB' defaulted for 'CWL Max Live Wgt'.
      * Field '(CUR) $HF7NB' defaulted for 'TH Avg Live Wgt'.
      * Field '(CUR) $HF4NB' defaulted for 'TH Avg Lean Percent'.
      * Field '(CUR) $HAWPC' defaulted for 'TH Actual Yield %'.
      * Field '(CUR) $HD8PR' defaulted for 'TH CM Srt Dsc Live /CWT'.
      * Field '(CUR) $HEEPR' defaulted for 'TH CM Lean Prem Live /CWT'.
      * Clear all neither parameters
     C                     Z-ADD*ZERO     WN0004  52       CWLW Min Top Yi
     C                     Z-ADD*ZERO     WN0005  52       CWLW Max Top Yi
     C                     Z-ADD*ZERO     WN0006  52       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0007  52       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0008  52       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0009  52       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0010  52       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0011  52       CWLW Max Lower
     C                     Z-ADD*ZERO     WN0012  30       CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0013  30       CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0014  30       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0015  30       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0016  30       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0017  30       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0018  30       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0019  30       CWLW Max Lower
     C                     Z-ADD*ZERO     WN0020  52       CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0021  52       CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0022  52       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0023  52       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0024  52       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0025  52       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0026  52       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0027  52       CWLW Max Lower
     C                     Z-ADD*ZERO     WN0028  52       CWLW Min Top So
     C                     Z-ADD*ZERO     WN0029  52       CWLW Max Top So
     C                     Z-ADD*ZERO     WN0030  52       CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0031  52       CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0032  52       CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0033  52       CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0034  52       CWLW Min Lower
     C                     Z-ADD*ZERO     WN0035  52       CWLW Max Lower
      *
      * Prt Crc Sum WtLt WK   IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0004           CWLW Min Top Yi
     C                     Z-ADD*ZERO     WN0005           CWLW Max Top Yi
     C                     Z-ADD*ZERO     WN0006           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0007           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0008           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0009           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0010           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0011           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0012           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0013           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0014           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0015           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0016           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0017           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0018           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0019           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0020           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0021           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0022           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0023           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0024           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0025           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0026           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0027           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0028           CWLW Min Top So
     C                     Z-ADD*ZERO     WN0029           CWLW Max Top So
     C                     Z-ADD*ZERO     WN0030           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0031           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0032           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0033           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0034           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0035           CWLW Max Lower
     C                     MOVEL*BLANK    $HHKTX           Yield NA WK USR
     C                     MOVEL*BLANK    $HHRTX           Yield Top X WK
     C                     MOVEL*BLANK    $HHTTX           Yield Mid Hi X
     C                     MOVEL*BLANK    $HHSTX           Yield Mid Low X
     C                     MOVEL*BLANK    $HHUTX           Yield Lower X W
     C                     MOVEL*BLANK    $HHJTX           Lean% NA WK USR
     C                     MOVEL*BLANK    $HHNTX           Lean% Top X WK
     C                     MOVEL*BLANK    $HHPTX           Lean% Mid Hi X
     C                     MOVEL*BLANK    $HHOTX           Lean% Mid Low X
     C                     MOVEL*BLANK    $HHQTX           Lean% Lower X W
     C                     MOVEL*BLANK    $HHLTX           Lean Prm NA WK
     C                     MOVEL*BLANK    $HHVTX           Lean Prm Top X
     C                     MOVEL*BLANK    $HHXTX           Lean Prm Mid Hi
     C                     MOVEL*BLANK    $HHWTX           Lean Prm Mid Lo
     C                     MOVEL*BLANK    $HHYTX           Lean Prm Lower
     C                     MOVEL*BLANK    $HHMTX           Sort Dsc NA WK
     C                     MOVEL*BLANK    $HHZTX           Sort Dsc Top X
     C                     MOVEL*BLANK    $HH1TX           Sort Dsc Mid Hi
     C                     MOVEL*BLANK    $HH0TX           Sort Dsc Mid Lo
     C                     MOVEL*BLANK    $HH2TX           Sort Dsc Lower
     C                     Z-ADD*ZERO     $HMHNB           CWL Min Live Wg
     C                     Z-ADD*ZERO     $HMINB           CWL Max Live Wg
     C                     Z-ADD*ZERO     $HNXNB           Live Wgt Min US
     C                     Z-ADD*ZERO     $HNYNB           Live Wgt Max US
      * Prt Crc Sum WtLt WK   RT - Crc Sum Co Wgt Lot   WK  * 
     C                     EXSR SFRVGN
      * Yield
      * CASE: Max Top or Actual Yield = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLW Max Top Yield EQ WRK.Zero USR
      *   |- c2    : PAR.TH Actual Yield % EQ WRK.Zero USR
      *   '-
     C           WN0005    IFEQ WUE9NB                     *IF
     C           $HAWPC    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HHKTX           Yield NA WK USR
     C                     ELSE
      * CASE: *OTHERWISE
      * Yield Compare
      * CASE: PAR.TH Actual Yield % GT PAR.CWLW Max Mid Hi Yield
     C           $HAWPC    IFGT WN0009                     *IF
     C                     MOVEL'X'       $HHRTX           Yield Top X WK
     C                     ELSE
      * CASE: Max Mid Low < Yield <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH Actual Yield % GT PAR.CWLW Max Mid Low Yield
      *   |- c2    : PAR.TH Actual Yield % LE PAR.CWLW Max Mid Hi Yield
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HAWPC    IFGT WN0007                     *IF
     C           $HAWPC    IFLE WN0009                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHTTX           Yield Mid Hi X
     C                     ELSE
      * CASE: Max Lower < Yield <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH Actual Yield % GT PAR.CWLW Max Lower Yield
      *   |- c2    : PAR.TH Actual Yield % LE PAR.CWLW Max Mid Low Yield
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HAWPC    IFGT WN0011                     *IF
     C           $HAWPC    IFLE WN0007                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHSTX           Yield Mid Low X
     C                     ELSE
      * CASE: PAR.TH Actual Yield % LE PAR.CWLW Max Lower Yield
     C           $HAWPC    IFLE WN0011                     *IF
     C                     MOVEL'X'       $HHUTX           Yield Lower X W
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lean Percent
      * CASE: Max Top or Lean% = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLW Max Top Lean% EQ WRK.Zero USR
      *   |- c2    : PAR.TH Avg Lean Percent EQ WRK.Zero USR
      *   '-
     C           WN0013    IFEQ WUE9NB                     *IF
     C           $HF4NB    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HHJTX           Lean% NA WK USR
     C                     ELSE
      * CASE: *OTHERWISE
      * Lean Percent Compare
      * CASE: PAR.TH Avg Lean Percent GT PAR.CWLW Max Mid Hi Lean%
     C           $HF4NB    IFGT WN0017                     *IF
     C                     MOVEL'X'       $HHNTX           Lean% Top X WK
     C                     ELSE
      * CASE: Max Mid Low < Lean% <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH Avg Lean Percent GT PAR.CWLW Max Mid Low Lean
      *   |- c2    : PAR.TH Avg Lean Percent LE PAR.CWLW Max Mid Hi Lean%
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HF4NB    IFGT WN0015                     *IF
     C           $HF4NB    IFLE WN0017                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHPTX           Lean% Mid Hi X
     C                     ELSE
      * CASE: Max Lower < Lean% <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH Avg Lean Percent GT PAR.CWLW Max Lower Lean%
      *   |- c2    : PAR.TH Avg Lean Percent LE PAR.CWLW Max Mid Low Lean
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HF4NB    IFGT WN0019                     *IF
     C           $HF4NB    IFLE WN0015                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHOTX           Lean% Mid Low X
     C                     ELSE
      * CASE: PAR.TH Avg Lean Percent LE PAR.CWLW Max Lower Lean%
     C           $HF4NB    IFLE WN0019                     *IF
     C                     MOVEL'X'       $HHQTX           Lean% Lower X W
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lean Premium Lv/CWT
      * CASE: Max Top or Lean Prm = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLW Max Top Lean Prm EQ WRK.Zero USR
      *   |- c2    : PAR.TH CM Lean Prem Live /CWT EQ WRK.Zero USR
      *   '-
     C           WN0021    IFEQ WUE9NB                     *IF
     C           $HEEPR    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HHLTX           Lean Prm NA WK
     C                     ELSE
      * CASE: *OTHERWISE
      * Lean Premium Compare
      * CASE: PAR.TH CM Lean Prem Live /CWT GT PAR.CWLW Max Mid Hi Lean P
     C           $HEEPR    IFGT WN0025                     *IF
     C                     MOVEL'X'       $HHVTX           Lean Prm Top X
     C                     ELSE
      * CASE: Max Mid Low < Lean prm <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Lean Prem Live /CWT GT PAR.CWLW Max Mid Lo
      *   |- c2    : PAR.TH CM Lean Prem Live /CWT LE PAR.CWLW Max Mid Hi
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HEEPR    IFGT WN0023                     *IF
     C           $HEEPR    IFLE WN0025                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHXTX           Lean Prm Mid Hi
     C                     ELSE
      * CASE: Max Lower < Lean prm <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Lean Prem Live /CWT GT PAR.CWLW Max Lower
      *   |- c2    : PAR.TH CM Lean Prem Live /CWT LE PAR.CWLW Max Mid Lo
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HEEPR    IFGT WN0027                     *IF
     C           $HEEPR    IFLE WN0023                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HHWTX           Lean Prm Mid Lo
     C                     ELSE
      * CASE: PAR.TH CM Lean Prem Live /CWT LE PAR.CWLW Max Lower Lean Pr
     C           $HEEPR    IFLE WN0027                     *IF
     C                     MOVEL'X'       $HHYTX           Lean Prm Lower
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sort Discount Lv/CWT
      * CASE: Max Top or Sort Dsc = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLW Max Top Sort Dsc EQ WRK.Zero USR
      *   |- c2    : PAR.TH CM Srt Dsc Live /CWT EQ WRK.Zero USR
      *   '-
     C           WN0029    IFEQ WUE9NB                     *IF
     C           $HD8PR    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HHMTX           Sort Dsc NA WK
     C                     ELSE
      * CASE: *OTHERWISE
      * Sort Discount Compare
      * CASE: PAR.TH CM Srt Dsc Live /CWT GT PAR.CWLW Max Mid Hi Sort Dsc
     C           $HD8PR    IFGT WN0033                     *IF
     C                     MOVEL'X'       $HHZTX           Sort Dsc Top X
     C                     ELSE
      * CASE: Max Mid Low < Sort Dsc <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Srt Dsc Live /CWT GT PAR.CWLW Max Mid Low
      *   |- c2    : PAR.TH CM Srt Dsc Live /CWT LE PAR.CWLW Max Mid Hi S
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HD8PR    IFGT WN0031                     *IF
     C           $HD8PR    IFLE WN0033                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HH1TX           Sort Dsc Mid Hi
     C                     ELSE
      * CASE: Max Lower < Sort Dsc <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.TH CM Srt Dsc Live /CWT GT PAR.CWLW Max Lower So
      *   |- c2    : PAR.TH CM Srt Dsc Live /CWT LE PAR.CWLW Max Mid Low
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HD8PR    IFGT WN0035                     *IF
     C           $HD8PR    IFLE WN0031                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HH0TX           Sort Dsc Mid Lo
     C                     ELSE
      * CASE: PAR.TH CM Srt Dsc Live /CWT LE PAR.CWLW Max Lower Sort Dsc
     C           $HD8PR    IFLE WN0035                     *IF
     C                     MOVEL'X'       $HH2TX           Sort Dsc Lower
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Clear all neither parameters
     C                     Z-ADD*ZERO     WN0036  52       CWLY Min Top Yi
     C                     Z-ADD*ZERO     WN0037  52       CWLY Max Top Yi
     C                     Z-ADD*ZERO     WN0038  52       CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0039  52       CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0040  52       CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0041  52       CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0042  52       CWLY Min Lower
     C                     Z-ADD*ZERO     WN0043  52       CWLY Max Lower
     C                     Z-ADD*ZERO     WN0044  30       CWLY Min Top Le
     C                     Z-ADD*ZERO     WN0045  30       CWLY Max Top Le
     C                     Z-ADD*ZERO     WN0046  30       CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0047  30       CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0048  30       CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0049  30       CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0050  30       CWLY Min Lower
     C                     Z-ADD*ZERO     WN0051  30       CWLY Max Lower
     C                     Z-ADD*ZERO     WN0052  52       CWLY Min Top Le
     C                     Z-ADD*ZERO     WN0053  52       CWLY Max Top Le
     C                     Z-ADD*ZERO     WN0054  52       CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0055  52       CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0056  52       CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0057  52       CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0058  52       CWLY Min Lower
     C                     Z-ADD*ZERO     WN0059  52       CWLY Max Lower
     C                     Z-ADD*ZERO     WN0060  52       CWLY Min Top So
     C                     Z-ADD*ZERO     WN0061  52       CWLY Max Top So
     C                     Z-ADD*ZERO     WN0062  52       CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0063  52       CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0064  52       CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0065  52       CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0066  52       CWLY Min Lower
     C                     Z-ADD*ZERO     WN0067  52       CWLY Max Lower
      *
      * Prt Crc Sum WtLt YTD  IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0036           CWLY Min Top Yi
     C                     Z-ADD*ZERO     WN0037           CWLY Max Top Yi
     C                     Z-ADD*ZERO     WN0038           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0039           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0040           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0041           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0042           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0043           CWLY Max Lower
     C                     Z-ADD*ZERO     WN0044           CWLY Min Top Le
     C                     Z-ADD*ZERO     WN0045           CWLY Max Top Le
     C                     Z-ADD*ZERO     WN0046           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0047           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0048           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0049           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0050           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0051           CWLY Max Lower
     C                     Z-ADD*ZERO     WN0052           CWLY Min Top Le
     C                     Z-ADD*ZERO     WN0053           CWLY Max Top Le
     C                     Z-ADD*ZERO     WN0054           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0055           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0056           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0057           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0058           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0059           CWLY Max Lower
     C                     Z-ADD*ZERO     WN0060           CWLY Min Top So
     C                     Z-ADD*ZERO     WN0061           CWLY Max Top So
     C                     Z-ADD*ZERO     WN0062           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0063           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0064           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0065           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0066           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0067           CWLY Max Lower
     C                     MOVEL*BLANK    $HH3TX           Yield NA YTD US
     C                     MOVEL*BLANK    $HIBTX           Yield Top X YTD
     C                     MOVEL*BLANK    $HIDTX           Yield Mid Hi X
     C                     MOVEL*BLANK    $HICTX           Yield Mid Low X
     C                     MOVEL*BLANK    $HIETX           Yield Lower X Y
     C                     MOVEL*BLANK    $HH4TX           Lean% NA YTD US
     C                     MOVEL*BLANK    $HH7TX           Lean% Top X YTD
     C                     MOVEL*BLANK    $HH9TX           Lean% Mid Hi X
     C                     MOVEL*BLANK    $HH8TX           Lean% Mid Low X
     C                     MOVEL*BLANK    $HIATX           Lean% Lower X Y
     C                     MOVEL*BLANK    $HH5TX           Lean Prm NA YTD
     C                     MOVEL*BLANK    $HIFTX           Lean Prm Top X
     C                     MOVEL*BLANK    $HIJTX           Lean Prm Mid Hi
     C                     MOVEL*BLANK    $HIHTX           Lean Prm Mid Lw
     C                     MOVEL*BLANK    $HILTX           Lean Prm Lower
     C                     MOVEL*BLANK    $HH6TX           Sort Dsc NA YTD
     C                     MOVEL*BLANK    $HIGTX           Sort Dsc Top X
     C                     MOVEL*BLANK    $HIKTX           Sort Dsc Mid Hi
     C                     MOVEL*BLANK    $HIITX           Sort DSC Mid Lw
     C                     MOVEL*BLANK    $HIMTX           Sort Dsc Lower
     C                     Z-ADD*ZERO     $HCJDT           Date USR
     C                     Z-ADD*ZERO     $HNXNB           Live Wgt Min US
     C                     Z-ADD*ZERO     $HNYNB           Live Wgt Max US
     C                     Z-ADD*ZERO     $HCGDT           Kill Date Usr
     C                     Z-ADD*ZERO     $HN4NB           PY Head Receive
     C                     Z-ADD*ZERO     $HN1NB           PY Avg Live Wgt
     C                     Z-ADD*ZERO     $HDXPC           PY Actual Yield
     C                     Z-ADD*ZERO     $HDYPC           PY Avg Lean %
     C                     Z-ADD*ZERO     $HERPR           PY Lean Prem/De
     C                     Z-ADD*ZERO     $HESPR           PY Sort Discoun
      * Rtv Prd YTD Info      RT - Crc Sum Prd          YTD  * 
     C                     EXSR SGRVGN
      * Prt Crc Sum WtLt      RT - Crc Sum Co Wgt Lot   YTD  * 
     C                     EXSR SHRVGN
      * Yield
      * CASE: Max Top or Actual Yield = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLY Max Top Yield EQ WRK.Zero USR
      *   |- c2    : PAR.PY Actual Yield % EQ WRK.Zero USR
      *   '-
     C           WN0037    IFEQ WUE9NB                     *IF
     C           $HDXPC    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HH3TX           Yield NA YTD US
     C                     ELSE
      * CASE: *OTHERWISE
      * Yield Compare
      * CASE: PAR.PY Actual Yield % GT PAR.CWLY Max Mid Hi Yield
     C           $HDXPC    IFGT WN0041                     *IF
     C                     MOVEL'X'       $HIBTX           Yield Top X YTD
     C                     ELSE
      * CASE: Max Mid Low < Yield <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.PY Actual Yield % GT PAR.CWLY Max Mid Low Yield
      *   |- c2    : PAR.PY Actual Yield % LE PAR.CWLY Max Mid Hi Yield
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HDXPC    IFGT WN0039                     *IF
     C           $HDXPC    IFLE WN0041                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HIDTX           Yield Mid Hi X
     C                     ELSE
      * CASE: Max Lower < Yield <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.PY Actual Yield % GT PAR.CWLY Max Lower Yield
      *   |- c2    : PAR.PY Actual Yield % LE PAR.CWLY Max Mid Low Yield
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HDXPC    IFGT WN0043                     *IF
     C           $HDXPC    IFLE WN0039                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HICTX           Yield Mid Low X
     C                     ELSE
      * CASE: PAR.PY Actual Yield % LE PAR.CWLY Max Lower Yield
     C           $HDXPC    IFLE WN0043                     *IF
     C                     MOVEL'X'       $HIETX           Yield Lower X Y
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lean Percent
      * CASE: Max Top or Lean% = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLY Max Top Lean% EQ WRK.Zero USR
      *   |- c2    : PAR.PY Avg Lean % EQ WRK.Zero USR
      *   '-
     C           WN0045    IFEQ WUE9NB                     *IF
     C           $HDYPC    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HH4TX           Lean% NA YTD US
     C                     ELSE
      * CASE: *OTHERWISE
      * Lean Percent Compare
      * CASE: PAR.PY Avg Lean % GT PAR.CWLY Max Mid Hi Lean%
     C           $HDYPC    IFGT WN0049                     *IF
     C                     MOVEL'X'       $HH7TX           Lean% Top X YTD
     C                     ELSE
      * CASE: Max Mid Low < Lean% <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.PY Avg Lean % GT PAR.CWLY Max Mid Low Lean%
      *   |- c2    : PAR.PY Avg Lean % LE PAR.CWLY Max Mid Hi Lean%
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HDYPC    IFGT WN0047                     *IF
     C           $HDYPC    IFLE WN0049                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HH9TX           Lean% Mid Hi X
     C                     ELSE
      * CASE: Max Lower < Lean% <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.PY Avg Lean % GT PAR.CWLY Max Lower Lean%
      *   |- c2    : PAR.PY Avg Lean % LE PAR.CWLY Max Mid Low Lean%
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HDYPC    IFGT WN0051                     *IF
     C           $HDYPC    IFLE WN0047                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HH8TX           Lean% Mid Low X
     C                     ELSE
      * CASE: PAR.PY Avg Lean % LE PAR.CWLY Max Lower Lean%
     C           $HDYPC    IFLE WN0051                     *IF
     C                     MOVEL'X'       $HIATX           Lean% Lower X Y
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Lean Premium Lv/CWT
      * CASE: Max Top or Lean Prm = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLY Max Top Lean Prm EQ WRK.Zero USR
      *   |- c2    : PAR.PY Lean Prem/Ded Lv /CWT EQ WRK.Zero USR
      *   '-
     C           WN0053    IFEQ WUE9NB                     *IF
     C           $HERPR    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HH5TX           Lean Prm NA YTD
     C                     ELSE
      * CASE: *OTHERWISE
      * Lean Premium Compare
      * CASE: PAR.PY Lean Prem/Ded Lv /CWT GT PAR.CWLY Max Mid Hi Lean Pr
     C           $HERPR    IFGT WN0057                     *IF
     C                     MOVEL'X'       $HIFTX           Lean Prm Top X
     C                     ELSE
      * CASE: Max Mid Low < Lean prm <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.PY Lean Prem/Ded Lv /CWT GT PAR.CWLY Max Mid Low
      *   |- c2    : PAR.PY Lean Prem/Ded Lv /CWT LE PAR.CWLY Max Mid Hi
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HERPR    IFGT WN0055                     *IF
     C           $HERPR    IFLE WN0057                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HIJTX           Lean Prm Mid Hi
     C                     ELSE
      * CASE: Max Lower < Lean prm <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.PY Lean Prem/Ded Lv /CWT GT PAR.CWLY Max Lower L
      *   |- c2    : PAR.PY Lean Prem/Ded Lv /CWT LE PAR.CWLY Max Mid Low
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HERPR    IFGT WN0059                     *IF
     C           $HERPR    IFLE WN0055                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HIHTX           Lean Prm Mid Lw
     C                     ELSE
      * CASE: PAR.PY Lean Prem/Ded Lv /CWT LE PAR.CWLY Max Lower Lean Prm
     C           $HERPR    IFLE WN0059                     *IF
     C                     MOVEL'X'       $HILTX           Lean Prm Lower
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Sort Discount Lv/CWT
      * CASE: Max Top or Sort Dsc = 0
      *  - c1 OR c2
      *   |- c1    : PAR.CWLY Max Top Sort Dsc EQ WRK.Zero USR
      *   |- c2    : PAR.PY Sort Discount Lv /CWT EQ WRK.Zero USR
      *   '-
     C           WN0061    IFEQ WUE9NB                     *IF
     C           $HESPR    OREQ WUE9NB                     *OR
     C                     MOVEL'NA'      $HH6TX           Sort Dsc NA YTD
     C                     ELSE
      * CASE: *OTHERWISE
      * Sort Discount Compare
      * CASE: PAR.PY Sort Discount Lv /CWT GT PAR.CWLY Max Mid Hi Sort Ds
     C           $HESPR    IFGT WN0065                     *IF
     C                     MOVEL'X'       $HIGTX           Sort Dsc Top X
     C                     ELSE
      * CASE: Max Mid Low < Sort Dsc <= Max Mid Hi
      *  - c1 AND c2
      *   |- c1    : PAR.PY Sort Discount Lv /CWT GT PAR.CWLY Max Mid Low
      *   |- c2    : PAR.PY Sort Discount Lv /CWT LE PAR.CWLY Max Mid Hi
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HESPR    IFGT WN0063                     *IF
     C           $HESPR    IFLE WN0065                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HIKTX           Sort Dsc Mid Hi
     C                     ELSE
      * CASE: Max Lower < Sort Dsc <= Max Mid Low
      *  - c1 AND c2
      *   |- c1    : PAR.PY Sort Discount Lv /CWT GT PAR.CWLY Max Lower S
      *   |- c2    : PAR.PY Sort Discount Lv /CWT LE PAR.CWLY Max Mid Low
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $HESPR    IFGT WN0067                     *IF
     C           $HESPR    IFLE WN0063                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'X'       $HIITX           Sort DSC Mid Lw
     C                     ELSE
      * CASE: PAR.PY Sort Discount Lv /CWT LE PAR.CWLY Max Lower Sort Dsc
     C           $HESPR    IFLE WN0067                     *IF
     C                     MOVEL'X'       $HIMTX           Sort Dsc Lower
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Calculate Tattoo Percent and YTD Percent.
      * CASE: WRK.#Sequence Block is NULL
     C           WUJ0ST    IFEQ *BLANK                     *IF
      * Tattoo %
      * CASE: CUR.TH Head Killed is Not Zero
     C           $HFENB    IFNE *ZERO                      *IF
      * Tattoo % 1
      * CUR.Lean Rng Tto Pct 1 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 1 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM2NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDDPC           Lean Rng Tto Pc
      * Tattoo % 2
      * CUR.Lean Rng Tto Pct 2 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 2 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM3NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDEPC           Lean Rng Tto Pc
      * Tattoo % 3
      * CUR.Lean Rng Tto Pct 3 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 3 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM4NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDFPC           Lean Rng Tto Pc
      * Tattoo % 4
      * CUR.Lean Rng Tto Pct 4 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 4 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM5NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDGPC           Lean Rng Tto Pc
      * Tattoo % 5
      * CUR.Lean Rng Tto Pct 5 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 5 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM6NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDHPC           Lean Rng Tto Pc
      * Tattoo % 6
      * CUR.Lean Rng Tto Pct 6 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 6 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM7NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDIPC           Lean Rng Tto Pc
      * Tattoo % 7
      * CUR.Lean Rng Tto Pct 7 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 7 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM8NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDJPC           Lean Rng Tto Pc
      * Tattoo % 8
      * CUR.Lean Rng Tto Pct 8 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Tto Cnt 8 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CUR.TH Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HM9NB    DIV  $HFENB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDKPC           Lean Rng Tto Pc
     C                     END                             *FI
      * Rtv Head Killed       RT - Crc Sum Prd          YTD  * 
     C                     EXSR SIRVGN
      * Producer YTD %
      * CASE: PAR.PY Head Killed is Greater then Zero
     C           P3MFNB    IFGT *ZERO                      *IF
      * YTD % 1
      * CUR.Lean Rng Prd Pct 1 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 1 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNANB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDLPC           Lean Rng Prd Pc
      * YTD % 2
      * CUR.Lean Rng Prd Pct 2 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 2 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNBNB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDMPC           Lean Rng Prd Pc
      * YTD % 3
      * CUR.Lean Rng Prd Pct 3 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 3 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNCNB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDNPC           Lean Rng Prd Pc
      * YTD % 4
      * CUR.Lean Rng Prd Pct 4 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 4 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNDNB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDOPC           Lean Rng Prd Pc
      * YTD % 5
      * CUR.Lean Rng Prd Pct 5 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 5 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNENB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDPPC           Lean Rng Prd Pc
      * YTD % 6
      * CUR.Lean Rng Prd Pct 6 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 6 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNFNB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDQPC           Lean Rng Prd Pc
      * YTD % 7
      * CUR.Lean Rng Prd Pct 7 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 7 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNGNB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDRPC           Lean Rng Prd Pc
      * YTD % 8
      * CUR.Lean Rng Prd Pct 8 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Lean Rng Prd Cnt 8 USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.PY Head Killed
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $HNHNB    DIV  P3MFNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HDSPC           Lean Rng Prd Pc
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Market and Subject Hogs Only
      * CASE: DB1.HC Class Code is Resale
     C           A1BECD    IFEQ 'RSL'                      *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Prt Crc Sum Cndmns    RT - Loss Type  * 
     C                     EXSR SJRVGN
      * Prt Crc Sum Trim Dtl  RT - Loss Type  * 
     C                     EXSR SQRVGN
     C                     END                             *FI
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1BNNB    WZA002           BOH Buy Order N
     C                     Z-ADDA1BNNB    WZA002
     C           *LIKE     DEFN A1BONB    WZA003           BOL Load Number
     C                     Z-ADDA1BONB    WZA003
     C           *LIKE     DEFN A1CVNB    WZA004           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPC4                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     MOVEL'Y'       W0RSL            *Record selecte
      * CASE: DB1.TH Held Over GT WRK.Zero USR
     C           A1H9NB    IFGT WUE9NB                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        BOH Buy Order N
     C                     MOVEL*BLANK    W0AL02  1        BOL Load Number
     C                     MOVEL*BLANK    W0AL03  1        TH Tattoo Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        BOH Buy Order N
     C                     MOVEL'Y'       W0AL02  1        BOL Load Number
     C                     MOVEL'Y'       W0AL03  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1BNNB    IFNE WZA002                     BOH Buy Order N
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1BONB    IFNE WZA003                     BOL Load Number
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1CVNB    IFNE WZA004                     TH Tattoo Numbe
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$IKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$JKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$KKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Mention hidden format
     C   99N99             WRITE$LKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * Mention hidden format
     C   99N99             WRITE$MFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Tst Prt Crc Sum (fnts)PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Tst Prt Crc Sum (fnts)PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$C1STPAG
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Tst Prt Crc Sum (fnts)PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$DKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print BOH Buy Order Number of Tst Prt Crc Sum (fnts)PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$EKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print BOL Load Number of Tst Prt Crc Sum (fnts)PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$FKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print TH Tattoo Number of Tst Prt Crc Sum (fnts)PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$GKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Tst Prt Crc Sum (fnts)PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     Z-ADD*ZERO     $HN7NB           TH Live Wgt DRV
      * TH Live Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HCYNB    MULT 1         $HN7NB    H      TH Live Wgt DRV
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HCYNB    $HN7NB           TH Live Wgt DRV
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HOANB           TH Avg Live Wgt
      * TH Avg Live Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HF7NB    MULT 1         $HOANB    H      TH Avg Live Wgt
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HF7NB    $HOANB           TH Avg Live Wgt
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HD0PC           TH Avg Lean Per
      * TH Avg Lean Percent DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HF4NB    MULT 1         $HD0PC    H      TH Avg Lean Per
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HF4NB    $HD0PC           TH Avg Lean Per
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HOBNB           TH Hot Wgt DRV
      * TH Hot Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HE0NB    MULT 1         $HOBNB    H      TH Hot Wgt DRV
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HE0NB    $HOBNB           TH Hot Wgt DRV
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HOCNB           TH Avg Hot Wgt
      * TH Avg Hot Wgt DRV
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HHDNB    MULT 1         $HOCNB    H      TH Avg Hot Wgt
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HHDNB    $HOCNB           TH Avg Hot Wgt
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADD*ZERO     $HPKNB           Th Live Adj Wgt
      * Th Live Adj Wgt Drv
      * CASE: PAR.@Status (Rnd/Trn) is Rounded
     C           'T'       IFEQ 'R'                        *IF
     C           $HLRNB    MULT 1         $HPKNB    H      Th Live Adj Wgt
     C                     ELSE
      * CASE: PAR.@Status (Rnd/Trn) is Truncated
     C           'T'       IFEQ 'T'                        *IF
     C                     Z-ADD$HLRNB    $HPKNB           Th Live Adj Wgt
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CUR.TH Source Type is Internal
     C           $HKAST    IFEQ 'I'                        *IF
      * Rtv HPS Group Rfrn Cd UP - STR HPS Interface  * 
     C                     CALL 'HP254'                90  Rtv HPS Group R
     C           WULMST    PARM WULMST    WQ0022  7        Return Code USR
     C           $HBICD    PARM $HBICD    WQ0023 10        Group Reference
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP254'   W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      *
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Purchase Date to display format
     C           1000000   ADD  $HAWDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHAWDT
      * Convert TH Kill Date to display format
     C           1000000   ADD  $HB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHB0DT
      * Convert PY As of Kill Date to display format
     C           1000000   ADD  $HCHDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHCHDT
      * Convert Kill Date Usr to display format
     C           1000000   ADD  $HCGDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHCGDT
      * Convert CWLY Week Ending Date to display format
     C           1000000   ADD  $HCJDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VHCJDT
     C                     MOVEL'0'       *IN79
     C           $HJ9ST    IFEQ 'L'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           $HE1ST    IFEQ *BLANK                     *IF
     C           $HE1ST    OREQ 'N'
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$HCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$HDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0APDT    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C                     Z-ADD@$CLN     W0FSUM  30
     C                     Z-ADD*ZERO     W0DTLN  30
     C                     Z-ADD*ZERO     W0COLN  30
      * * First Page Format of Tst Prt Crc Sum (fnts)PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Tst Prt Crc Sum (fnts)PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Buy Order Number of Tst Prt Crc Sum (fnts)PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOL Load Number of Tst Prt Crc Sum (fnts)PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Tst Prt Crc Sum (fnts)PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Tst Prt Crc Sum (fnts)PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD77        W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Lean Hdg/Rng      RT - Crc Sum Lean Dist Range  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CXHONB    WQSA01           CC Company Numb
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           CC Company Numb
      * Move fields to key list
     C                     Z-ADDP1HMNB    WQSA01           CC Company Numb
     C           KRSSA     SETLL@CXREOL                    *
     C           KRSSA     READE@CXREOL                  90*
      * Data record not found
     C   90                MOVEL'PRK0420' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.CLDR Sequence is = 1
     C           CXMCNB    IFEQ 1                          *IF
     C                     MOVELCXDTCD    P2DVCD           Lean Rng Hdg 1
     C                     Z-ADDCXBWPC    P2CXPC           Lean Rng Min 1
     C                     Z-ADDCXBXPC    P2CYPC           Lean Rng Max 1
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 2
     C           CXMCNB    IFEQ 2                          *IF
     C                     MOVELCXDTCD    P2DWCD           Lean Rng Hdg 2
     C                     Z-ADDCXBWPC    P2CZPC           Lean Rng Min 2
     C                     Z-ADDCXBXPC    P2C0PC           Lean Rng Max 2
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 3
     C           CXMCNB    IFEQ 3                          *IF
     C                     MOVELCXDTCD    P2DXCD           Lean Rng Hdg 3
     C                     Z-ADDCXBWPC    P2C1PC           Lean Rng Min 3
     C                     Z-ADDCXBXPC    P2C2PC           Lean Rng Max 3
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 4
     C           CXMCNB    IFEQ 4                          *IF
     C                     MOVELCXDTCD    P2DYCD           Lean Rng Hdg 4
     C                     Z-ADDCXBWPC    P2C3PC           Lean Rng Min 4
     C                     Z-ADDCXBXPC    P2C4PC           Lean Rng Max 4
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 5
     C           CXMCNB    IFEQ 5                          *IF
     C                     MOVELCXDTCD    P2DZCD           Lean Rng Hdg 5
     C                     Z-ADDCXBWPC    P2C5PC           Lean Rng Min 5
     C                     Z-ADDCXBXPC    P2C6PC           Lean Rng Max 5
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 6
     C           CXMCNB    IFEQ 6                          *IF
     C                     MOVELCXDTCD    P2D0CD           Lean Rng Hdg 6
     C                     Z-ADDCXBWPC    P2C7PC           Lean Rng Min 6
     C                     Z-ADDCXBXPC    P2C8PC           Lean Rng Max 6
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 7
     C           CXMCNB    IFEQ 7                          *IF
     C                     MOVELCXDTCD    P2D1CD           Lean Rng Hdg 7
     C                     Z-ADDCXBWPC    P2C9PC           Lean Rng Min 7
     C                     Z-ADDCXBXPC    P2DAPC           Lean Rng Max 7
     C                     ELSE
      * CASE: DB1.CLDR Sequence is = 8
     C           CXMCNB    IFEQ 8                          *IF
     C                     MOVELCXDTCD    P2D2CD           Lean Rng Hdg 8
     C                     Z-ADDCXBWPC    P2DBPC           Lean Rng Min 8
     C                     Z-ADDCXBXPC    P2DCPC           Lean Rng Max 8
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSA     READE@CXREOL                  90*
     C                     END
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Prt Crc Sum (Hld Ovr) RT - Tattoo Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WUHBST           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQSB01           BOH Company Num
     C           *LIKE     DEFN A1BNNB    WQSB02           BOH Buy Order N
     C           *LIKE     DEFN A1BONB    WQSB03           BOL Load Number
     C           *LIKE     DEFN A1CVNB    WQSB04           TH Tattoo Numbe
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           BOH Company Num
     C                     KFLD           WQSB02           BOH Buy Order N
     C                     KFLD           WQSB03           BOL Load Number
     C                     KFLD           WQSB04           TH Tattoo Numbe
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSB01           BOH Company Num
     C                     Z-ADD$HBNNB    WQSB02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSB03           BOL Load Number
     C                     Z-ADD$HCVNB    WQSB04           TH Tattoo Numbe
     C           KRSSB     SETLL@A1CPC4                    *
     C           KRSSB     READE@A1CPC4                  90*
      * Data record not found
     C   90                MOVEL'PRK0061' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * First Kill Date
      * CASE: WRK.First Time Flag Usr is Yes
     C           WUHBST    IFEQ 'Y'                        *IF
     C                     Z-ADDA1B0DT    $HB0DT           TH Kill Date
     C                     MOVEL'N'       WUHBST           First Time Flag
     C                     END                             *FI
     C                     ADD  A1CWNB    $HCWNB           TH Head Receive
     C                     ADD  A1FCNB    $HFCNB           TH Yard Deads
     C                     ADD  A1FDNB    $HFDNB           TH Head Condemn
     C                     ADD  A1FENB    $HFENB           TH Head Killed
     C                     ADD  A1HENB    $HHENB           TH Head Adds
     C                     ADD  A1CYNB    $HCYNB           TH Live Wgt
     C                     ADD  A1LRNB    $HLRNB           TH Adj Live Wgt
     C                     ADD  A1E0NB    $HE0NB           TH Hot Wgt
     C                     ADD  A1ANPR    $HANPR           TH CM Base Mkt
     C                     ADD  A1AYVA    $HAYVA           TH CM Sort Disc
     C                     ADD  A1AWVA    $HAWVA           TH CM Yield Gai
     C                     ADD  A1AOPR    $HAOPR           TH CM Base Carc
     C                     ADD  A1AXVA    $HAXVA           TH CM LN AddOn/
     C                     ADD  A1APPR    $HAPPR           TH CM Carcass G
     C                     ADD  A1ATPR    $HATPR           TH Carcass Net
     C                     ADD  A1CBPR    $HCBPR           TH Payment Gros
     C                     ADD  A1CCPR    $HCCPR           Th Payment Net
      * Lean % * Wgt USR
      * PAR.Lean % * Wgt USR =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Lean % * Wgt USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Lean Percent
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F4NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0001    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0001           Lean % * Wgt US
      * Backfat * Wgt USR
      * PAR.Backfat * Wgt USR =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Backfat * Wgt USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Backfat
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F2NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0002    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0002           Backfat * Wgt U
      * Loin-Eye * Wgt USR
      * PAR.Loin-Eye * Wgt USR =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Loin-Eye * Wgt USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : DB1.TH Avg Loin Eye Depth
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : DB1.TH Hot Wgt
     C           A1F3NB    MULT A1E0NB    W0WD01           *Synon (17,7) w
     C           WN0003    ADD  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0003           Loin-Eye * Wgt
     C                     ADD  A1ASPR    $HASPR           TH Deduction Am
     C                     ADD  A1A5VA    $HA5VA           TH Additions Am
     C           KRSSB     READE@A1CPC4                  90*
     C                     END
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Move fields to key list
     C                     MOVEL$HABCD    ACABCD           PD Producer Cod
     C           KRSSC     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    $HAGTX           PD Name
     C                     END
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Tattoo Lean Dist  RT - Crc Sum Tattoo Lean Dist  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HM2NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM3NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM4NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM5NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM6NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM7NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM8NB           Lean Rng Tto Cn
     C                     Z-ADD*ZERO     $HM9NB           Lean Rng Tto Cn
      * Declare restrictor key work fields
     C           *LIKE     DEFN CYHMNB    WQSD01           BOH Company Num
     C           *LIKE     DEFN CYBNNB    WQSD02           BOH Buy Order N
     C           *LIKE     DEFN CYBONB    WQSD03           BOL Load Number
     C           *LIKE     DEFN CYCVNB    WQSD04           TH Tattoo Numbe
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           BOH Company Num
     C                     KFLD           WQSD02           BOH Buy Order N
     C                     KFLD           WQSD03           BOL Load Number
     C                     KFLD           WQSD04           TH Tattoo Numbe
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSD01           BOH Company Num
     C                     Z-ADD$HBNNB    WQSD02           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSD03           BOL Load Number
     C                     Z-ADD$HCVNB    WQSD04           TH Tattoo Numbe
     C           KRSSD     SETLL@CYCPOY                    *
     C           KRSSD     READE@CYCPOY                  90*
      * Data record not found
     C   90                MOVEL'PRK0422' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: Min 1 <= % < Max 1
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 1 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 1 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2CXPC                     *IF
     C           CYBYPC    IFLT P2CYPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM2NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 2 <= % < Max 2
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 2 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 2 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2CZPC                     *IF
     C           CYBYPC    IFLT P2C0PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM3NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 3 <= % < Max 3
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 3 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 3 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C1PC                     *IF
     C           CYBYPC    IFLT P2C2PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM4NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 4 <= % < Max 4
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 4 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 4 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C3PC                     *IF
     C           CYBYPC    IFLT P2C4PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM5NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 5 <= % < Max 5
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 5 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 5 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C5PC                     *IF
     C           CYBYPC    IFLT P2C6PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM6NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 6 <= % < Max 6
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 6 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 6 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C7PC                     *IF
     C           CYBYPC    IFLT P2C8PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM7NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 7 <= % < Max 7
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 7 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 7 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2C9PC                     *IF
     C           CYBYPC    IFLT P2DAPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM8NB           Lean Rng Tto Cn
     C                     ELSE
      * CASE: Min 8 <= % < Max 8
      *  - c1 AND c2
      *   |- c1    : DB1.CTLD Lean % GE PAR.Lean Rng Min 8 USR
      *   |- c2    : DB1.CTLD Lean % LT PAR.Lean Rng Max 8 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           CYBYPC    IFGE P2DBPC                     *IF
     C           CYBYPC    IFLT P2DCPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  CYMENB    $HM9NB           Lean Rng Tto Cn
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@CYCPOY                  90*
     C                     END
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Prd Lean Dist     RT - Crc Sum Prd Lean Dst YTD  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HNANB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNBNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNCNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNDNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNENB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNFNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNGNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HNHNB           Lean Rng Prd Cn
     C                     Z-ADD*ZERO     $HCHDT           Date USR
     C                     MOVEL'Y'       WUHBST           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN C0HONB    WQSE01           CC Company Numb
     C           *LIKE     DEFN C0ABCD    WQSE02           PD Producer Cod
      * Define keylist
     C           KPSSE     KLIST
     C                     KFLD           WQSE01           CC Company Numb
     C                     KFLD           WQSE02           PD Producer Cod
     C                     KFLD           C0CHDT           PY As of Kill D
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           CC Company Numb
     C                     KFLD           WQSE02           PD Producer Cod
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSE01           CC Company Numb
     C                     MOVEL$HABCD    WQSE02           PD Producer Cod
     C                     Z-ADDA1B0DT    C0CHDT           PY As of Kill D
     C           KPSSE     SETLL@C0CPO9                    *
     C           KRSSE     READE@C0CPO9                  90*
      * Data record not found
     C   90                MOVEL'PRK0426' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: WRK.First Time Flag Usr is Yes
     C           WUHBST    IFEQ 'Y'                        *IF
     C                     Z-ADDC0CHDT    WUCHDT           PY As of Kill D
     C                     Z-ADDC0CHDT    $HCHDT           Date USR
     C                     MOVEL'N'       WUHBST           First Time Flag
     C                     END                             *FI
      * CASE: DB1.PY Kill Date NE WRK.PY Kill Date
     C           C0CHDT    IFNE WUCHDT                     *IF
     C                     GOTO SEEXIT                     *QUIT
     C                     END                             *FI
      * Accumulate Head Killed
      * CASE: Min 1 <= % < Max 1
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 1 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 1 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2CXPC                     *IF
     C           C0BZPC    IFLT P2CYPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNANB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 2 <= % < Max 2
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 2 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 2 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2CZPC                     *IF
     C           C0BZPC    IFLT P2C0PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNBNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 3 <= % < Max 3
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 3 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 3 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C1PC                     *IF
     C           C0BZPC    IFLT P2C2PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNCNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 4 <= % < Max 4
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 4 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 4 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C3PC                     *IF
     C           C0BZPC    IFLT P2C4PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNDNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 5 <= % < Max 5
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 5 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 5 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C5PC                     *IF
     C           C0BZPC    IFLT P2C6PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNENB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 6 <= % < Max 6
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 6 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 6 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C7PC                     *IF
     C           C0BZPC    IFLT P2C8PC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNFNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 7 <= % < Max 7
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 7 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 7 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2C9PC                     *IF
     C           C0BZPC    IFLT P2DAPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNGNB           Lean Rng Prd Cn
     C                     ELSE
      * CASE: Min 8 <= % < Max 8
      *  - c1 AND c2
      *   |- c1    : DB1.PLDY Lean % GE PAR.Lean Rng Min 8 USR
      *   |- c2    : DB1.PLDY Lean % LT PAR.Lean Rng Max 8 USR
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           C0BZPC    IFGE P2DBPC                     *IF
     C           C0BZPC    IFLT P2DCPC                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  C0MGNB    $HNHNB           Lean Rng Prd Cn
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSE     READE@C0CPO9                  90*
     C                     END
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Prt Crc Sum WtLt WK   RT - Crc Sum Co Wgt Lot   WK  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DBHONB    WQSF01           CC Company Numb
      * Define keylist
     C           KPSSF     KLIST
     C                     KFLD           WQSF01           CC Company Numb
     C                     KFLD           DBCPDT           CWLW Week Endin
     C                     KFLD           DBMHNB           CWL Min Live Wg
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           CC Company Numb
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSF01           CC Company Numb
     C                     Z-ADD$HB0DT    DBCPDT           CWLW Week Endin
     C                     Z-ADD$HF7NB    DBMHNB           CWL Min Live Wg
     C           KPSSF     SETLL@DBCPRL                    *
     C           KRSSF     READE@DBCPRL                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0506' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HNXNB           Live Wgt Min US
     C                     Z-ADD*ZERO     $HNYNB           Live Wgt Max US
     C                     Z-ADD*ZERO     WN0004           CWLW Min Top Yi
     C                     Z-ADD*ZERO     WN0005           CWLW Max Top Yi
     C                     Z-ADD*ZERO     WN0006           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0007           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0008           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0009           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0010           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0011           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0012           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0013           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0014           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0015           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0016           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0017           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0018           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0019           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0020           CWLW Min Top Le
     C                     Z-ADD*ZERO     WN0021           CWLW Max Top Le
     C                     Z-ADD*ZERO     WN0022           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0023           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0024           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0025           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0026           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0027           CWLW Max Lower
     C                     Z-ADD*ZERO     WN0028           CWLW Min Top So
     C                     Z-ADD*ZERO     WN0029           CWLW Max Top So
     C                     Z-ADD*ZERO     WN0030           CWLW Min Mid Lo
     C                     Z-ADD*ZERO     WN0031           CWLW Max Mid Lo
     C                     Z-ADD*ZERO     WN0032           CWLW Min Mid Hi
     C                     Z-ADD*ZERO     WN0033           CWLW Max Mid Hi
     C                     Z-ADD*ZERO     WN0034           CWLW Min Lower
     C                     Z-ADD*ZERO     WN0035           CWLW Max Lower
     C                     GOTO SFEXIT
     C                     END
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDBE2PC    WN0004           CWLW Min Top Yi
     C                     Z-ADDDBE3PC    WN0005           CWLW Max Top Yi
     C                     Z-ADDDBE4PC    WN0006           CWLW Min Mid Lo
     C                     Z-ADDDBE5PC    WN0007           CWLW Max Mid Lo
     C                     Z-ADDDBE6PC    WN0008           CWLW Min Mid Hi
     C                     Z-ADDDBE7PC    WN0009           CWLW Max Mid Hi
     C                     Z-ADDDBE8PC    WN0010           CWLW Min Lower
     C                     Z-ADDDBE9PC    WN0011           CWLW Max Lower
     C                     Z-ADDDBFAPC    WN0012           CWLW Min Top Le
     C                     Z-ADDDBFBPC    WN0013           CWLW Max Top Le
     C                     Z-ADDDBFCPC    WN0014           CWLW Min Mid Lo
     C                     Z-ADDDBFDPC    WN0015           CWLW Max Mid Lo
     C                     Z-ADDDBFEPC    WN0016           CWLW Min Mid Hi
     C                     Z-ADDDBFFPC    WN0017           CWLW Max Mid Hi
     C                     Z-ADDDBFGPC    WN0018           CWLW Min Lower
     C                     Z-ADDDBFHPC    WN0019           CWLW Max Lower
     C                     Z-ADDDBFPPR    WN0020           CWLW Min Top Le
     C                     Z-ADDDBFQPR    WN0021           CWLW Max Top Le
     C                     Z-ADDDBFRPR    WN0022           CWLW Min Mid Lo
     C                     Z-ADDDBFSPR    WN0023           CWLW Max Mid Lo
     C                     Z-ADDDBFTPR    WN0024           CWLW Min Mid Hi
     C                     Z-ADDDBFUPR    WN0025           CWLW Max Mid Hi
     C                     Z-ADDDBFVPR    WN0026           CWLW Min Lower
     C                     Z-ADDDBFWPR    WN0027           CWLW Max Lower
     C                     Z-ADDDBFXPR    WN0028           CWLW Min Top So
     C                     Z-ADDDBFYPR    WN0029           CWLW Max Top So
     C                     Z-ADDDBFZPR    WN0030           CWLW Min Mid Lo
     C                     Z-ADDDBF0PR    WN0031           CWLW Max Mid Lo
     C                     Z-ADDDBF1PR    WN0032           CWLW Min Mid Hi
     C                     Z-ADDDBF2PR    WN0033           CWLW Max Mid Hi
     C                     Z-ADDDBF3PR    WN0034           CWLW Min Lower
     C                     Z-ADDDBF4PR    WN0035           CWLW Max Lower
     C                     Z-ADDDBMHNB    $HNXNB           Live Wgt Min US
     C                     Z-ADDDBMINB    $HNYNB           Live Wgt Max US
     C                     GOTO SFEXIT                     *QUIT
     C           KRSSF     READE@DBCPRL                  90*
     C                     END
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Prd YTD Info      RT - Crc Sum Prd          YTD  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN CZHONB    WQSG01           CC Company Numb
     C           *LIKE     DEFN CZABCD    WQSG02           PD Producer Cod
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           CC Company Numb
     C                     KFLD           WQSG02           PD Producer Cod
     C                     KFLD           CZCHDT           PY As of Kill D
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           CC Company Numb
     C                     KFLD           WQSG02           PD Producer Cod
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSG01           CC Company Numb
     C                     MOVEL$HABCD    WQSG02           PD Producer Cod
     C                     Z-ADD$HB0DT    CZCHDT           PY As of Kill D
     C           KPSSG     SETLL@CZCPP4                    *
     C           KRSSG     READE@CZCPP4                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0424' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HN4NB           PY Head Receive
     C                     Z-ADD*ZERO     $HN1NB           PY Avg Live Wgt
     C                     Z-ADD*ZERO     $HDXPC           PY Actual Yield
     C                     Z-ADD*ZERO     $HDYPC           PY Avg Lean %
     C                     Z-ADD*ZERO     $HERPR           PY Lean Prem/De
     C                     Z-ADD*ZERO     $HESPR           PY Sort Discoun
     C                     Z-ADD*ZERO     $HCGDT           Kill Date Usr
     C                     GOTO SGEXIT
     C                     END
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDCZN4NB    $HN4NB           PY Head Receive
     C                     Z-ADDCZN1NB    $HN1NB           PY Avg Live Wgt
     C                     Z-ADDCZDXPC    $HDXPC           PY Actual Yield
     C                     Z-ADDCZDYPC    $HDYPC           PY Avg Lean %
     C                     Z-ADDCZERPR    $HERPR           PY Lean Prem/De
     C                     Z-ADDCZESPR    $HESPR           PY Sort Discoun
     C                     Z-ADDCZCHDT    $HCGDT           Kill Date Usr
     C                     GOTO SGEXIT                     *QUIT
     C           KRSSG     READE@CZCPP4                  90*
     C                     END
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Prt Crc Sum WtLt      RT - Crc Sum Co Wgt Lot   YTD  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN C3HONB    WQSH01           CC Company Numb
      * Define keylist
     C           KPSSH     KLIST
     C                     KFLD           WQSH01           CC Company Numb
     C                     KFLD           C3CJDT           CWLY Week Endin
     C                     KFLD           C3MHNB           CWL Min Live Wg
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           CC Company Numb
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSH01           CC Company Numb
     C                     Z-ADD$HB0DT    C3CJDT           CWLY Week Endin
     C                     Z-ADD$HN1NB    C3MHNB           CWL Min Live Wg
     C           KPSSH     SETLL@C3CPPZ                    *
     C           KRSSH     READE@C3CPPZ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0432' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $HCJDT           Date USR
     C                     Z-ADD*ZERO     $HNXNB           Live Wgt Min US
     C                     Z-ADD*ZERO     $HNYNB           Live Wgt Max US
     C                     Z-ADD*ZERO     WN0036           CWLY Min Top Yi
     C                     Z-ADD*ZERO     WN0037           CWLY Max Top Yi
     C                     Z-ADD*ZERO     WN0038           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0039           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0040           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0041           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0042           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0043           CWLY Max Lower
     C                     Z-ADD*ZERO     WN0044           CWLY Min Top Le
     C                     Z-ADD*ZERO     WN0045           CWLY Max Top Le
     C                     Z-ADD*ZERO     WN0046           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0047           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0048           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0049           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0050           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0051           CWLY Max Lower
     C                     Z-ADD*ZERO     WN0052           CWLY Min Top Le
     C                     Z-ADD*ZERO     WN0053           CWLY Max Top Le
     C                     Z-ADD*ZERO     WN0054           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0055           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0056           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0057           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0058           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0059           CWLY Max Lower
     C                     Z-ADD*ZERO     WN0060           CWLY Min Top So
     C                     Z-ADD*ZERO     WN0061           CWLY Max Top So
     C                     Z-ADD*ZERO     WN0062           CWLY Min Mid Lo
     C                     Z-ADD*ZERO     WN0063           CWLY Max Mid Lo
     C                     Z-ADD*ZERO     WN0064           CWLY Min Mid Hi
     C                     Z-ADD*ZERO     WN0065           CWLY Max Mid Hi
     C                     Z-ADD*ZERO     WN0066           CWLY Min Lower
     C                     Z-ADD*ZERO     WN0067           CWLY Max Lower
     C                     GOTO SHEXIT
     C                     END
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDC3CGPC    WN0036           CWLY Min Top Yi
     C                     Z-ADDC3CHPC    WN0037           CWLY Max Top Yi
     C                     Z-ADDC3CIPC    WN0038           CWLY Min Mid Lo
     C                     Z-ADDC3CJPC    WN0039           CWLY Max Mid Lo
     C                     Z-ADDC3CKPC    WN0040           CWLY Min Mid Hi
     C                     Z-ADDC3CLPC    WN0041           CWLY Max Mid Hi
     C                     Z-ADDC3CMPC    WN0042           CWLY Min Lower
     C                     Z-ADDC3CNPC    WN0043           CWLY Max Lower
     C                     Z-ADDC3COPC    WN0044           CWLY Min Top Le
     C                     Z-ADDC3CPPC    WN0045           CWLY Max Top Le
     C                     Z-ADDC3CQPC    WN0046           CWLY Min Mid Lo
     C                     Z-ADDC3CRPC    WN0047           CWLY Max Mid Lo
     C                     Z-ADDC3CSPC    WN0048           CWLY Min Mid Hi
     C                     Z-ADDC3CTPC    WN0049           CWLY Max Mid Hi
     C                     Z-ADDC3CUPC    WN0050           CWLY Min Lower
     C                     Z-ADDC3CVPC    WN0051           CWLY Max Lower
     C                     Z-ADDC3DQPR    WN0052           CWLY Min Top Le
     C                     Z-ADDC3DRPR    WN0053           CWLY Max Top Le
     C                     Z-ADDC3DSPR    WN0054           CWLY Min Mid Lo
     C                     Z-ADDC3DTPR    WN0055           CWLY Max Mid Lo
     C                     Z-ADDC3DUPR    WN0056           CWLY Min Mid Hi
     C                     Z-ADDC3DVPR    WN0057           CWLY Max Mid Hi
     C                     Z-ADDC3DWPR    WN0058           CWLY Min Lower
     C                     Z-ADDC3DXPR    WN0059           CWLY Max Lower
     C                     Z-ADDC3DYPR    WN0060           CWLY Min Top So
     C                     Z-ADDC3DZPR    WN0061           CWLY Max Top So
     C                     Z-ADDC3D0PR    WN0062           CWLY Min Mid Lo
     C                     Z-ADDC3D1PR    WN0063           CWLY Max Mid Lo
     C                     Z-ADDC3D2PR    WN0064           CWLY Min Mid Hi
     C                     Z-ADDC3D3PR    WN0065           CWLY Max Mid Hi
     C                     Z-ADDC3D4PR    WN0066           CWLY Min Lower
     C                     Z-ADDC3D5PR    WN0067           CWLY Max Lower
     C                     Z-ADDC3CJDT    $HCJDT           Date USR
     C                     Z-ADDC3MHNB    $HNXNB           Live Wgt Min US
     C                     Z-ADDC3MINB    $HNYNB           Live Wgt Max US
     C                     GOTO SHEXIT                     *QUIT
     C           KRSSH     READE@C3CPPZ                  90*
     C                     END
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Head Killed       RT - Crc Sum Prd          YTD  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAHONB    WQSI01           CC Company Numb
     C           *LIKE     DEFN WAABCD    WQSI02           PD Producer Cod
      * Define keylist
     C           KPSSI     KLIST
     C                     KFLD           WQSI01           CC Company Numb
     C                     KFLD           WQSI02           PD Producer Cod
     C                     KFLD           WACHDT           PY As of Kill D
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           CC Company Numb
     C                     KFLD           WQSI02           PD Producer Cod
      * Move fields to key list
     C                     Z-ADD$HHMNB    WQSI01           CC Company Numb
     C                     MOVEL$HABCD    WQSI02           PD Producer Cod
     C                     Z-ADDA1B0DT    WACHDT           PY As of Kill D
     C           KPSSI     SETLL@CZCPO1                    *
     C           KRSSI     READE@CZCPO1                  90*
      * Data record not found
     C   90                MOVEL'PRK0424' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDWAMFNB    P3MFNB           PY Head Killed
     C                     GOTO SIEXIT                     *QUIT
     C           KRSSI     READE@CZCPO1                  90*
     C                     END
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * Prt Crc Sum Cndmns    RT - Loss Type  * 
      *================================================================
      * Clear all neither parameters
     C                     Z-ADD*ZERO     WN0068  20       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0069  20       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0070  20       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0071  20       Loss Reason Cod
     C                     Z-ADD*ZERO     WN0072  20       Loss Reason Cod
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG3TX           Reason 1 Desc U
     C                     MOVEL*BLANK    $HG9TX           Reason 2 Desc U
     C                     MOVEL*BLANK    $HHATX           Reason 3 Desc U
     C                     MOVEL*BLANK    $HHBTX           Reason 4 Desc U
     C                     MOVEL*BLANK    $HHCTX           Reason 5 Desc U
     C                     Z-ADD*ZERO     $HMRNB           Reason Head 1 U
     C                     Z-ADD*ZERO     $HMSNB           Reason Head 2 U
     C                     Z-ADD*ZERO     $HMTNB           Reason Head 3 U
     C                     Z-ADD*ZERO     $HMUNB           Reason Head 4 U
     C                     Z-ADD*ZERO     $HMVNB           Reason Head 5 U
     C                     Z-ADD*ZERO     WN0068           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0069           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0070           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0071           Loss Reason Cod
     C                     Z-ADD*ZERO     WN0072           Loss Reason Cod
      * Declare restrictor key work fields
     C           *LIKE     DEFN BPEZST    WQSJ01           LT Loss Definit
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           WQSJ01           LT Loss Definit
      * Move fields to key list
     C                     MOVEL'C'       WQSJ01           LT Loss Definit
     C           KRSSJ     SETLL@BPREPD                    *
     C           KRSSJ     READE@BPREPD                  90*
      * Data record not found
     C   90                MOVEL'PRK0109' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Crc Sum Cndmn Rsn RT - Loss Trans  * 
     C                     EXSR SKRVGN
      * Reason 1 Desc
      * CASE: PAR.Loss Reason Code 1 USR NE WRK.Zero USR
     C           WN0068    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SLRVGN
     C                     END                             *FI
      * Reason 2 Desc
      * CASE: PAR.Loss Reason Code 2 USR NE WRK.Zero USR
     C           WN0069    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SMRVGN
     C                     END                             *FI
      * Reason 3 Desc
      * CASE: PAR.Loss Reason Code 3 USR NE WRK.Zero USR
     C           WN0070    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SNRVGN
     C                     END                             *FI
      * Reason 4 Desc
      * CASE: PAR.Loss Reason Code 4 USR NE WRK.Zero USR
     C           WN0071    IFNE WUE9NB                     *IF
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SORVGN
     C                     END                             *FI
      * Reason 5 Desc
      * CASE: PAR.Loss Reason Code 1 USR NE WRK.Zero USR
     C           WN0068    IFNE WUE9NB                     *IF
      * CASE: PAR.Loss Reason Code 5 USR is = 99
     C           WN0072    IFEQ 99                         *IF
     C                     MOVEL*BLANK    $HHCTX           Reason 5 Desc U
     C                     MOVEL'Other'   $HHCTX           Reason 5 Desc U
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Loss Reason       RT - Loss Reason  * 
     C                     EXSR SPRVGN
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSJ     READE@BPREPD                  90*
     C                     END
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv Crc Sum Cndmn Rsn RT - Loss Trans  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BSBWCD    WQSK01           LT Type Code
     C           *LIKE     DEFN BSHMNB    WQSK02           BOH Company Num
     C           *LIKE     DEFN BSBNNB    WQSK03           BOH Buy Order N
     C           *LIKE     DEFN BSBONB    WQSK04           BOL Load Number
     C           *LIKE     DEFN BSCVNB    WQSK05           TH Tattoo Numbe
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           LT Type Code
     C                     KFLD           WQSK02           BOH Company Num
     C                     KFLD           WQSK03           BOH Buy Order N
     C                     KFLD           WQSK04           BOL Load Number
     C                     KFLD           WQSK05           TH Tattoo Numbe
      * Move fields to key list
     C                     Z-ADDBPBWCD    WQSK01           LT Type Code
     C                     Z-ADD$HHMNB    WQSK02           BOH Company Num
     C                     Z-ADD$HBNNB    WQSK03           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSK04           BOL Load Number
     C                     Z-ADD$HCVNB    WQSK05           TH Tattoo Numbe
     C           KRSSK     SETLL@BSCPPE                    *
     C           KRSSK     READE@BSCPPE                  90*
      * Data record not found
     C   90                MOVEL'PRK0115' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Set up Reason Codes
      * CASE: Reason 1
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 1 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 1 USR
      *   '-
     C           WN0068    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0068                     *OR
     C                     Z-ADDBSBYCD    WN0068           Loss Reason Cod
     C                     ADD  1         $HMRNB           Reason Head 1 U
     C                     ELSE
      * CASE: Reason 2
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 2 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 2 USR
      *   '-
     C           WN0069    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0069                     *OR
     C                     Z-ADDBSBYCD    WN0069           Loss Reason Cod
     C                     ADD  1         $HMSNB           Reason Head 2 U
     C                     ELSE
      * CASE: Reason 3
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 3 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 3 USR
      *   '-
     C           WN0070    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0070                     *OR
     C                     Z-ADDBSBYCD    WN0070           Loss Reason Cod
     C                     ADD  1         $HMTNB           Reason Head 3 U
     C                     ELSE
      * CASE: Reason 4
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 4 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 4 USR
      *   '-
     C           WN0071    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0071                     *OR
     C                     Z-ADDBSBYCD    WN0071           Loss Reason Cod
     C                     ADD  1         $HMUNB           Reason Head 4 U
     C                     ELSE
      * CASE: Reason 5
      *  - c1 OR c2
      *   |- c1    : PAR.Loss Reason Code 5 USR EQ WRK.Zero USR
      *   |- c2    : DB1.LR Reason Code EQ PAR.Loss Reason Code 5 USR
      *   '-
     C           WN0072    IFEQ WUE9NB                     *IF
     C           BSBYCD    OREQ WN0072                     *OR
     C                     Z-ADDBSBYCD    WN0072           Loss Reason Cod
     C                     ADD  1         $HMVNB           Reason Head 5 U
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD99        WN0072           Loss Reason Cod
     C                     ADD  1         $HMVNB           Reason Head 5 U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSK     READE@BSCPPE                  90*
     C                     END
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Move fields to key list
     C                     Z-ADDWN0068    BRBYCD           LR Reason Code
     C           KRSSL     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG3TX           LR Description
     C                     GOTO SLEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HG3TX           LR Description
     C                     END
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Move fields to key list
     C                     Z-ADDWN0069    BRBYCD           LR Reason Code
     C           KRSSM     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG9TX           LR Description
     C                     GOTO SMEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HG9TX           LR Description
     C                     END
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Move fields to key list
     C                     Z-ADDWN0070    BRBYCD           LR Reason Code
     C           KRSSN     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HHATX           LR Description
     C                     GOTO SNEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HHATX           LR Description
     C                     END
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Move fields to key list
     C                     Z-ADDWN0071    BRBYCD           LR Reason Code
     C           KRSSO     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HHBTX           LR Description
     C                     GOTO SOEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HHBTX           LR Description
     C                     END
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Loss Reason       RT - Loss Reason  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           BRBYCD           LR Reason Code
      * Move fields to key list
     C                     Z-ADDWN0072    BRBYCD           LR Reason Code
     C           KRSSP     CHAIN@BRREFQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0113' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $HHCTX           LR Description
     C                     GOTO SPEXIT
     C                     END
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBRBYTX    $HHCTX           LR Description
     C                     END
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * Prt Crc Sum Trim Dtl  RT - Loss Type  * 
      *================================================================
      * Clear all neither parameters
     C                     MOVEL*BLANK    WN0073  2        Trim Location 1
     C                     MOVEL*BLANK    WN0074  2        Trim Location 2
     C                     MOVEL*BLANK    WN0075  2        Trim Location 3
     C                     MOVEL*BLANK    WN0076  2        Trim Location 4
     C                     MOVEL*BLANK    WN0077  2        Trim Location 5
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    $HG4TX           Trim 1 Desc USR
     C                     MOVEL*BLANK    $HG5TX           Trim 2 Desc USR
     C                     MOVEL*BLANK    $HG6TX           Trim 3 Desc USR
     C                     MOVEL*BLANK    $HG7TX           Trim 4 Desc USR
     C                     MOVEL*BLANK    $HG8TX           Trim 5 Desc USR
     C                     Z-ADD*ZERO     $HMWNB           Trim Head 1 USR
     C                     Z-ADD*ZERO     $HMXNB           Trim Head 2 USR
     C                     Z-ADD*ZERO     $HMYNB           Trim Head 3 USR
     C                     Z-ADD*ZERO     $HMZNB           Trim Head 4 USR
     C                     Z-ADD*ZERO     $HM0NB           Trim Head 5 USR
     C                     Z-ADD*ZERO     $HH3NB           Weight Tot USR
     C                     MOVEL*BLANK    WN0073           Trim Location 1
     C                     MOVEL*BLANK    WN0074           Trim Location 2
     C                     MOVEL*BLANK    WN0075           Trim Location 3
     C                     MOVEL*BLANK    WN0076           Trim Location 4
     C                     MOVEL*BLANK    WN0077           Trim Location 5
      * Declare restrictor key work fields
     C           *LIKE     DEFN BPEZST    WQSQ01           LT Loss Definit
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           LT Loss Definit
      * Move fields to key list
     C                     MOVEL'T'       WQSQ01           LT Loss Definit
     C           KRSSQ     SETLL@BPREPD                    *
     C           KRSSQ     READE@BPREPD                  90*
      * Data record not found
     C   90                MOVEL'PRK0109' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Crc Sum Trim Dtl  RT - Loss Trans  * 
     C                     EXSR SRRVGN
      * PAR.Trim 1 Desc USR = Condition name of PAR.Trim Location 1 USR
     C                     CALL 'PKRVCNR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0073    W0INVL 20        Trim Location 1
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HG4TX    PARM           W0CNNM 25        Trim 1 Desc USR
      *
      * PAR.Trim 2 Desc USR = Condition name of PAR.Trim Location 2 USR
     C                     CALL 'PKRVCNR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0074    W0INVL 20        Trim Location 2
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HG5TX    PARM           W0CNNM 25        Trim 2 Desc USR
      *
      * PAR.Trim 3 Desc USR = Condition name of PAR.Trim Location 3 USR
     C                     CALL 'PKRVCNR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0075    W0INVL 20        Trim Location 3
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HG6TX    PARM           W0CNNM 25        Trim 3 Desc USR
      *
      * PAR.Trim 4 Desc USR = Condition name of PAR.Trim Location 4 USR
     C                     CALL 'PKRVCNR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0076    W0INVL 20        Trim Location 4
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HG7TX    PARM           W0CNNM 25        Trim 4 Desc USR
      *
      * PAR.Trim 5 Desc USR = Condition name of PAR.Trim Location 5 USR
     C                     CALL 'PKRVCNR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1158543   Y2LSNO  70       List number
     C                     PARM WN0077    W0INVL 20        Trim Location 5
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $HG8TX    PARM           W0CNNM 25        Trim 5 Desc USR
      *
     C           KRSSQ     READE@BPREPD                  90*
     C                     END
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Rtv Crc Sum Trim Dtl  RT - Loss Trans  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BSBWCD    WQSR01           LT Type Code
     C           *LIKE     DEFN BSHMNB    WQSR02           BOH Company Num
     C           *LIKE     DEFN BSBNNB    WQSR03           BOH Buy Order N
     C           *LIKE     DEFN BSBONB    WQSR04           BOL Load Number
     C           *LIKE     DEFN BSCVNB    WQSR05           TH Tattoo Numbe
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           LT Type Code
     C                     KFLD           WQSR02           BOH Company Num
     C                     KFLD           WQSR03           BOH Buy Order N
     C                     KFLD           WQSR04           BOL Load Number
     C                     KFLD           WQSR05           TH Tattoo Numbe
      * Move fields to key list
     C                     Z-ADDBPBWCD    WQSR01           LT Type Code
     C                     Z-ADD$HHMNB    WQSR02           BOH Company Num
     C                     Z-ADD$HBNNB    WQSR03           BOH Buy Order N
     C                     Z-ADD$HBONB    WQSR04           BOL Load Number
     C                     Z-ADD$HCVNB    WQSR05           TH Tattoo Numbe
     C           KRSSR     SETLL@BSCPPE                    *
     C           KRSSR     READE@BSCPPE                  90*
      * Data record not found
     C   90                MOVEL'PRK0115' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Set up Trim Locations
      * CASE: Trim 1
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 1 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 1 USR
      *   '-
     C           WN0073    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0073                     *OR
     C                     MOVELBSS4NB    WN0073           Trim Location 1
     C                     ADD  1         $HMWNB           Trim Head 1 USR
     C                     ELSE
      * CASE: Trim 2
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 2 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 2 USR
      *   '-
     C           WN0074    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0074                     *OR
     C                     MOVELBSS4NB    WN0074           Trim Location 2
     C                     ADD  1         $HMXNB           Trim Head 2 USR
     C                     ELSE
      * CASE: Trim 3
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 3 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 3 USR
      *   '-
     C           WN0075    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0075                     *OR
     C                     MOVELBSS4NB    WN0075           Trim Location 3
     C                     ADD  1         $HMYNB           Trim Head 3 USR
     C                     ELSE
      * CASE: Trim 4
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 4 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 4 USR
      *   '-
     C           WN0076    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0076                     *OR
     C                     MOVELBSS4NB    WN0076           Trim Location 4
     C                     ADD  1         $HMZNB           Trim Head 4 USR
     C                     ELSE
      * CASE: Trim 5
      *  - c1 OR c2
      *   |- c1    : PAR.Trim Location 5 USR EQ WRK.Blank USR
      *   |- c2    : DB1.LTN Trim Location EQ PAR.Trim Location 5 USR
      *   '-
     C           WN0077    IFEQ WUCRTX                     *IF
     C           BSS4NB    OREQ WN0077                     *OR
     C                     MOVELBSS4NB    WN0077           Trim Location 5
     C                     ADD  1         $HM0NB           Trim Head 5 USR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'99'      WUE5TX           Length Usr Txt
     C                     MOVELWUE5TX    WN0077           Trim Location 5
     C                     ADD  1         $HM0NB           Trim Head 5 USR
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  BSDSNB    $HH3NB           Weight Tot USR
     C           KRSSR     READE@BSCPPE                  90*
     C                     END
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA132        Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2DVCD           Lean Rng Hdg 1
     C                     MOVEL*BLANK    P2DWCD           Lean Rng Hdg 2
     C                     MOVEL*BLANK    P2DXCD           Lean Rng Hdg 3
     C                     MOVEL*BLANK    P2DYCD           Lean Rng Hdg 4
     C                     MOVEL*BLANK    P2DZCD           Lean Rng Hdg 5
     C                     MOVEL*BLANK    P2D0CD           Lean Rng Hdg 6
     C                     MOVEL*BLANK    P2D1CD           Lean Rng Hdg 7
     C                     MOVEL*BLANK    P2D2CD           Lean Rng Hdg 8
     C                     Z-ADD*ZERO     P2CXPC           Lean Rng Min 1
     C                     Z-ADD*ZERO     P2CYPC           Lean Rng Max 1
     C                     Z-ADD*ZERO     P2CZPC           Lean Rng Min 2
     C                     Z-ADD*ZERO     P2C0PC           Lean Rng Max 2
     C                     Z-ADD*ZERO     P2C1PC           Lean Rng Min 3
     C                     Z-ADD*ZERO     P2C2PC           Lean Rng Max 3
     C                     Z-ADD*ZERO     P2C3PC           Lean Rng Min 4
     C                     Z-ADD*ZERO     P2C4PC           Lean Rng Max 4
     C                     Z-ADD*ZERO     P2C5PC           Lean Rng Min 5
     C                     Z-ADD*ZERO     P2C6PC           Lean Rng Max 5
     C                     Z-ADD*ZERO     P2C7PC           Lean Rng Min 6
     C                     Z-ADD*ZERO     P2C8PC           Lean Rng Max 6
     C                     Z-ADD*ZERO     P2C9PC           Lean Rng Min 7
     C                     Z-ADD*ZERO     P2DAPC           Lean Rng Max 7
     C                     Z-ADD*ZERO     P2DBPC           Lean Rng Min 8
     C                     Z-ADD*ZERO     P2DCPC           Lean Rng Max 8
     C                     Z-ADD*ZERO     P3MFNB           PY Head Killed
      *
      * Setup job date/time
      *
     C                     Z-ADDUDATE     ##JDT
      * Set century digit (If YY prior to 1940 treat as 20YY)
     C           ##JYY     IFLT 40
     C                     Z-ADD1         ##JCC
     C                     ELSE
     C                     Z-ADD0         ##JCC
     C                     END
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     Z-ADD*ZERO     A1HMNB           BOH Company Num
     C                     Z-ADD*ZERO     A1BNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     A1BONB           BOL Load Number
     C                     Z-ADD*ZERO     A1CVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     A1B0DT           TH Kill Date
      * Define work field First Time Flag Usr
     C                     MOVEL*BLANK    WUHBST  1
      * Define work field #Sequence Block
     C                     MOVEL*BLANK    WUJ0ST  1
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field TH Avg Live Wgt
     C                     Z-ADD*ZERO     WUF7NB  51
      * Define work field TH Adj Live Wgt
     C                     Z-ADD*ZERO     WULRNB  71
      * Define work field PY As of Kill Date
     C                     Z-ADD*ZERO     WUCHDT  70
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Length Usr Txt
     C                     MOVEL*BLANK    WUE5TX  2
      * Define work field Return Code USR
     C                     MOVEL*BLANK    WULMST  7
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Open files
     C                     OPEN PKCXREL1
     C                     OPEN PKA1CPL0
     C                     OPEN PKACREL1
     C                     OPEN PKCYCPL1
     C                     OPEN PKC0CPL2
     C                     OPEN PKDBCPL2
     C                     OPEN PKCZCPL3
     C                     OPEN PKC3CPL2
     C                     OPEN PKCZCPL1
     C                     OPEN PKBPREL3
     C                     OPEN PKBSCPL6
     C                     OPEN PKBRREL1
     C                     OPEN PKWKPFR$
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Rtv Lean Hdg/Rng      RT - Crc Sum Lean Dist Range  * 
     C                     EXSR SARVGN
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
      /EJECT
     CSR         *PSSR     BEGSR
      *================================================================
      * Program error/exception handler
      *================================================================
      *
      * Detect error in error handler
     C           P@ERR     IFNE *BLANK
     C                     SETON                     H9LR
     C                     RETRN
     C                     END
      *
      * Signal error handler active
     C                     MOVE 'Y'       P@ERR   1
      *
      * Trap unmonitored errors
     C           P@SEV     IFEQ *BLANK
     C                     MOVE '90'      P@SEV
     C                     END
      *
     C                     CALL 'Y2PSSRR'
      * Return code
     C                     PARM           P@RTN   7
      * Exit label
     C                     PARM           P@LABL  6
      * Monitor/Severity
     C                     PARM           P@SEV   2
      * Program DS
     C                     PARM           PGMDS
      * File Information DS
     C                     PARM           ID0001
      * File Information DS
     C                     PARM           ID0002
      * File Information DS
     C                     PARM           ID0003
      * File Information DS
     C                     PARM           ID0004
      * File Information DS
     C                     PARM           ID0005
      * File Information DS
     C                     PARM           ID0006
      * File Information DS
     C                     PARM           ID0007
      * File Information DS
     C                     PARM           ID0008
      * File Information DS
     C                     PARM           ID0009
      * File Information DS
     C                     PARM           ID0010
      * File Information DS
     C                     PARM           ID0011
      * File Information DS
     C                     PARM           ID0012
      * File Information DS
     C                     PARM           INFDS$
      *
      * Signal error handler inactive
     C                     MOVE *BLANK    P@ERR
      * Clear severity (for unmonitored next error)
     C                     MOVE *BLANK    P@SEV
      *================================================================
     CSR         P@EXIT    ENDSRP@LABL
** @CN
00001 C A R C A S S   M E R I T
