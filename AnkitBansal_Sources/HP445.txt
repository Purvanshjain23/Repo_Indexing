      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP445
      * TITLE:       WORK WITH SCHEDULED SALE MOVEMENTS
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     09/21/95
      *
      * FUNCTION: THIS IS A WORK WITH THAT DISPLAYS THE SALE MOVEMENTS THAT HAVE A
      *           STATUS OF SCHEDULED.
      *
      *           THIS FUNCTION WAS ORIGINALLY CREATED BECAUSE THE USERS DID NOT
      *           WANT THE PERSON DOING THE SCHEDULING TO BE ABLE TO ACCESS THE
      *           'SHIPPING' PART OF THE SALES.
      *           SO, THIS IS A SCALED DOWN VERSION OF HP446-WORK WITH
      *           SALES.  (WORK WITH SALES ALLOWS BOTH SCHEDULING AND
      *           SHIPPING WHILE THIS FUNCTION ONLY ALLOWS SCHEDULING).
      *
      *           POSITIONERS:
      *               MOVEMENT NUMBER
      *
      *           SELECTORS:
      *               BUSINESS OFFICE
      *               FARM SITE
      *               BUILDING
      *               GROUP
      *               PHASE
      *               SALES TYPE
      *               LOAD TYPE
      *               CUSTOMER
      *
      *           IT HAS F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      * IMPORTANT:
      *           As of January 2003, we have 2 versions of this program. The 'version'
      *           that a user gets is controlled by an incoming parm.  We went to this
      *           approach because there will now be WEB/SYNON/batch edits and posting
      *           into HPS for Seaboard market sales movements.  Alice hopes to force
      *           the Synon users to create/maintain Seaboard market sales thru the WEB
      *           and Synon. But, as a backup, Alice wants the HPS users to be able to
      *           'get the job' done by creating/maintaining thru the HPS functions.
      *
      *           So, the plan is to have the main access into this program 'restricted';
      *           but, there will also be full, unrestricted version. The incoming
      *           parms will control which 'version' a user is getting:
      *           1) R = restricted
      *              The Restricted Version restricts the functions that a user can
      *              perform on the 'Market' sales that are for Seaboard (customer 360516)
      *           2) ' '= full, not restricted
      *              The Full Version has all the functionality that existed prior
      *              to 2003.
      /EJECT
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 10/03/95  LEANNE FEDOR
      *           ADDED A NEW COLUMN AND SELECTOR CALLED 'SCHEDULED
      *           SHIP DATE' AND ADDED ALSO A 'SCHEDULED HEAD' COLUMN.
      *           REMOVED CUSTOMER NAME TO MAKE ROOM ON THE SCREEN.
      *
      * 11/01/95  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'GROUP TYPE' ADDED TO
      *           HOG GROUP FILE.
      *
      * 02/06/96  LEANNE FEDOR
      *           ADDED NEW FUNCTION KEY F17=PRINT BOL.
      *
      * 05/13/96  LEANNE FEDOR
      *           MADE CHANGES TO FACILITATE NEW JDE RELEASE CONVERSION
      *           CHANGED SEARCH TYPE TO 3A.
      *
      * 08/20/96  LEANNE FEDOR
      *           CHANGED LOGIC FOR ALL DATES USED AS SELECTORS OR
      *           POSITIONERS. IN ORDER TO RETRIEVE THE VALUE FOR
      *           'CENTURY' THAT WILL BE USED IN POSITIONING OR
      *           SELECTING RECORDS, WE WILL NOW CALL THE DATE
      *           UTILITY PROGRAM. IF THE DATE KEYED BY THE USER IS
      *           INVALID, THE DATE RETURNED BY THE UTILITY PROGRAM
      *           WILL BE ZERO. WE WILL NOT ISSUE AN ERROR MESSAGE.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 02/16/98  LeAnne Fedor
      *           Recompile only. Added the following fields to the
      *           database for sales movement detail and check detail:
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *
      * 01/11/99  LeAnne Fedor
      *           Recompile only. New field 'scheduled kill date' added
      *           to sales movement header file.
      *
      * 10/21/99  LeAnne Fedor
      *           We added a new option 4=delete to the Work With. When the user
      *           takes this option, the movement will be deleted without displaying
      *           any other screens.  So, we have to check for the user's authority
      *           to delete movements in this program.
      *
      * 11/24/99  LeAnne Fedor
      *           When user takes F6=create, this program now calls our new program
      *           where the user specifies whether he wants a) the function to create
      *           1 movement per screen or b) the function to create multiple movements
      *           per screen.
      *
      * 10/17/00  LeAnne Fedor
      *           Added new field 'load type' in sales movement header
      *           file to subfile and as a selector on the screen.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 12/17/02  LeAnne Fedor
      *           Removed Production Phase/Production Type from the Sales Movement
      *           Header.
      *
      * 01/20/03  LeAnne Fedor
      *           Added logic to have 2 versions:  restricted, not restricted
      *           Removed Business Office from screen.
      *           Added Scheduled Kill Date to screen.
      *
      * 12/08/04  LeAnne Fedor
      *           Since October the users have been using new BOL programs called from
      *           the menu. They are now ready to replace the old BOL programs called
      *           from this Work With with the new versions. So, we have replaced the
      *           call to the old HP470 with a call to the new HP4070.
      *
      * 12/13/04  LeAnne Fedor
      *           Per AMB, we want to call the new HP4070 with a reprint value of NO. Thus,
      *           thru this Work With, you will only be allowed to print BOLs that have
      *           never been printed before. If you wish to reprint a movement, you
      *           will have to do it thru the Reprint Menu Option.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      * 02/18/16  Rose Centonze   E5190
      *           Added Business office restrictor
      * 02/27/18  Brad Baden      E010812 - Market Hogs to OTC
      *           Data area DACOPY has been changed to contain separate
      *           flags for Guymon 'OKLIV' and Seaboard Triumph Foods
      *           'IFLIV'.  Position 6 in the data area is for Guymon,
      *           and position 14 is for Seaboard Triumph Foods.  If
      *           the appropriate flag is yes, the user cannot create or
      *           update a record.
      * 08/03/20  Danny Nguyen    R16686 - Optima BOL Premise ID
      *           Renamed F17 from 'F17=Print BOL' to 'F17=Prt/Email BOL'.
      *           No logic changed.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD445    CF   E             WORKSTN SFILE(HP445S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE
      *
      *
     FHSL034D   IF   E           K DISK
      *    HOG GROUP
      *
      *
     FHSJ085C   IF   E           K DISK    INFDS(DBFEED)
      *  SALES HEADER + DETAIL
      *
      /EJECT
      ****************************************************************
      * Definition specs
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------
      *
      * Fields for date manipulation
      *
     D wkmdy           s              6  0
     D wkscdt          s                   like(shscdt)
     D wksckldt        s                   like(shsckldt)
     D wkisodate       s               D   datfmt(*iso)
     D wkccyymmdd      s              8  0
      *
      * Field for DACOPY flag
     D dafl            s              1
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DACOPY' WHICH HOLDS
      *  A FLAG VALUE INDICATING WHETHER THE 'COPY' IS CURRENTLY BEING
      *  RUN.
      *---------------------------------------------------------------
     D                 DS
     D  DACOPY                 1     14
     D  DAFLGUY                6      6
     D  DAFLSTP               14     14
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  FILL THE SUBFILE
      *
     C     TERMFL        IFEQ      NO
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
     C                   ENDIF
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP445K1
     C                   WRITE     HP445EC
     C                   EXFMT     HP445C1
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * THE USER IS NOT ALLOWED TO CHANGE AN EXISTING SALES MOVEMENT OR
      * CREATE A NEW MOVEMENT IF THE BATCH 'COPY' OF KILL DATA IS
      * RUNNING TO COPY KILL DATA FROM THE HOG PROCUREMENT AND
      * EVALUATION SYSTEM TO THE HOG PRODUCTION SYSTEM. SO, BRING IN
      * THE DATA AREA THAT CONTAINS THE FLAG WHICH INDICATES WHETHER
      * THE BATCH COPY IS CURRENTLY BEING PERFORMED.
      *
     C     *DTAARA       DEFINE                  DACOPY
     C                   IN        *DTAARA
      *
     C                   select
     C                   when      c1fsbo = 'OKLIV'
     C                   eval      dafl = daflguy
      *
     C                   when      c1fsbo = 'IFLIV'
     C                   eval      dafl = daflstp
      *
     C                   other
     C                   eval      dafl = ' '
     C                   endsl
      *
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C     FLD           IFEQ      'C1FSBO'                                     E5190
     C     C1FSBO        ANDNE     SVFSBO
     C                   MOVEL(P)  'HP445'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C                   MOVEL     c1FSBO        svFSBO
     C                   MOVEL     c1BODS        svBODS
     C     SVMVSN        IFNE      C1MVSN
     C     SVSMDY        ORNE      C1SMDY
     C     SVKMDY        ORNE      C1KMDY
     C     SVHGCD        ORNE      C1HGCD
     C     SVFSCD        ORNE      C1FSCD
     C     SVBLCD        ORNE      C1BLCD
     C     SVPPCD        ORNE      C1PPCD
     C     SVSTCD        ORNE      C1STCD
     C     SVLTCD        ORNE      C1LTCD
     C     SVCVNO        ORNE      C1CVNO
     C                   EXSR      $CHKSV
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SVFSBO        C1FSBO                          E5190
     C                   MOVEL     SVBODS        C1BODS                          E5190
     C                   MOVEL     SET1          ROUTNE
      *
      *  CHECK USER AUTHORITY TO THE FUNCTION AND CHECK IF
      *  THE COPY FROM HOG PROCUREMENT & EVALUATION IS IN
      *  PROGRESS.  The Guymon flag is DAFLGUY, and the
      *  Seaboard Triumph Foods flag is DAFLSTP.
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C     C1FSBO        IFNE      SVFSBO                                       E5190
     C                   MOVEL(P)  'HP445'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF                                                  E5190
      *
     C     DAFL          IFEQ      YES                                          IF COPYING
     C                   ADD       1             ERROR
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00707'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF COPYING
      *
     C     ERROR         IFEQ      0                                            E5190
     C                   MOVEL     C1FSBO        SVFSBO                            "
     C                   MOVEL     C1BODS        SVBODS                            "
     C                   MOVEL(P)  'HP140'       WKFNCD                            "
     C                   EXSR      $SEC                                            "
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $CREAT
     C                   ENDIF
     C                   ENDIF
      *
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-BOL
     C     C1FSBO        IFNE      SVFSBO
     C                   MOVEL(P)  'HP445'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
     C                   IF        ERROR = 0
     C                   MOVEL     C1FSBO        SVFSBO                           E5190
     C                   MOVEL     C1BODS        SVBODS                           E5190
     C*
     C                   MOVEL(P)  'HP4070'      WKFNCD
     C                   EXSR      $SEC
     C     ERROR         IFEQ      0
     C                   CALL      'HP4070'
     C                   parm      'N'           XXREPRINT
     C                   PARM                    VERSION
     C                   PARM                    C1VERSION
     C                   ENDIF
     C                   ENDIF
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'                                       API
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR SELECTORS IN THE CONTROL RECORD.
      *
     C     SVFSBO        WHENNE    C1FSBO                                       IF RESTRICT  E5190
     C     SVMVSN        orne      C1MVSN                                       IF POSITION
     C     SVSMDY        ORNE      C1SMDY
     C     SVKMDY        ORNE      C1KMDY
     C     SVHGCD        ORNE      C1HGCD
     C     SVFSCD        ORNE      C1FSCD
     C     SVBLCD        ORNE      C1BLCD
     C     SVPPCD        ORNE      C1PPCD
     C     SVSTCD        ORNE      C1STCD
     C     SVLTCD        ORNE      C1LTCD
     C     SVCVNO        ORNE      C1CVNO
      *
     C     SVFSBO        IFNE      C1FSBO                                       E5190
     C                   MOVE      *BLANK        C1BODS                            "
     C                   MOVEL(P)  'HP445'       WKFNCD                            "
     C                   EXSR      $CHKBO                                          "
     C                   ENDIF                                                     "
      *
     C     ERROR         IFEQ      0                                               "
     C                   MOVEL     C1FSBO        SVFSBO                           E5190
     C                   MOVEL     C1BODS        SVBODS                           E5190
     C                   EXSR      $CHKSV
     c                   else
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                     "
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKSV - SAVE THE CONTROL RECORD POSITIONERS/SELECTORS
      *----------------------------------------------------------------
      *
     C     $CHKSV        BEGSR
      *
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
      *
      * IF THE 'SHIP DATE' SELECTOR HAS CHANGED, FLIP IT TO THE
      * CCYYMMDD FORMAT NEEDED FOR DATA COMPARISON FOR RETRIEVAL.  IF
      * IT IS AN INVALID DATE, THE RETURNED DATE WILL BE ZERO.
      *
     C                   if        svsmdy <> c1smdy
     C                   z-add     0             wkscdt
     C                   z-add     c1smdy        wkmdy
     C                   exsr      $tocymd
     C                   z-add     wkccyymmdd    wkscdt
     C                   endif                                                  IF DIFF DATE
      *
      * IF THE 'KILL DATE' SELECTOR HAS CHANGED, FLIP IT TO THE
      * CCYYMMDD FORMAT NEEDED FOR DATA COMPARISON FOR RETRIEVAL.  IF
      * IT IS AN INVALID DATE, THE RETURNED DATE WILL BE ZERO.
      *
     C                   if        svkmdy <> c1kmdy
     C                   z-add     0             wksckldt
     C                   z-add     c1kmdy        wkmdy
     C                   exsr      $tocymd
     C                   z-add     wkccyymmdd    wksckldt
     C                   endif                                                  IF DIFF DATE
      *
     C                   MOVEL     C1FSBO        SVFSBO                          E5190
     C                   MOVEL     C1BODS        SVBODS                             "
      *                                                                             "
     C                   Z-ADD     C1MVSN        SVMVSN
      *
     C                   MOVEL     C1HGCD        SVHGCD
     C                   Z-ADD     C1FSCD        SVFSCD
     C                   MOVEL     C1BLCD        SVBLCD
     C                   MOVEL     C1PPCD        SVPPCD
     C                   MOVEL     C1STCD        SVSTCD
     C                   MOVEL     C1LTCD        SVLTCD
     C                   Z-ADD     C1CVNO        SVCVNO
     C                   Z-ADD     C1SMDY        SVSMDY
     C                   Z-ADD     C1KMDY        SVKMDY
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTIONS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE SUBFILE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ELSE
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN WITH ERRORS TO USER
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP445S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP445C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN SALES DETAIL FILE TO START WITH 'SCHEDULED'
      * MOVEMENTS.
      *
     C     C1MVSN        IFEQ      0
     C     WKMSCD        SETLL     HSJ085C
     C                   ELSE
     C     K1L085        SETLL     HSJ085C
     C                   ENDIF
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', JUST START THE SUBFILE OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE. ONLY PROCESS
      * THE 'SCHEDULED' MOVEMENTS BY USING A READ EQUAL ON A WORKFIELD
      * SET UP WITH THE STATUS OF SC=SCHEDULED.
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
     C     WKMSCD        READE     HSJ085C                                82
     C     *IN82         IFEQ      *OFF                                          IF READ
     c     shfsbo        ifeq      c1fsbo                                        E5190
      *
      * RETRIEVE HOG GROUP VALUES
      *
     C     SGHGSN        CHAIN     HSL034D                            90
     C     *IN90         IFEQ      *OFF                                         IF GROUP
     C                   MOVEL     HGHGCD        DFHGCD
     C                   MOVEL     HGBLCD        DFBLCD
     C                   MOVEL     HGPPCD        DFPPCD
     C                   ELSE
     C                   MOVE      *BLANK        DFHGCD
     C                   MOVE      *BLANK        DFBLCD
     C                   MOVE      *BLANK        DFPPCD
     C                   ENDIF                                                  IF GROUP
      *
      * ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1SMDY        IFNE      0                                            IF SCHED
     C     WKSCDT        ANDNE     SHSCDT
     C                   ELSE
      *
     C     C1KMDY        IFNE      0                                            IF KILL
     C     WKSCKLDT      ANDNE     SHSCKLDT
     C                   ELSE
      *
     C     C1PPCD        IFNE      *BLANK                                       IF PHASE
     C     C1PPCD        ANDNE     DFPPCD
     C                   ELSE
      *
     C     C1FSCD        IFNE      0                                            IF FARM
     C     C1FSCD        ANDNE     SHFSCD
     C                   ELSE
      *
     C     C1HGCD        IFNE      *BLANK                                       IF GROUP
     C     C1HGCD        ANDNE     DFHGCD
     C                   ELSE
      *
     C     C1BLCD        IFNE      *BLANK                                       IF BLDG
     C     C1BLCD        ANDNE     DFBLCD
     C                   ELSE
      *
     C     C1STCD        IFNE      *BLANK                                       IF SALES TYP
     C     C1STCD        ANDNE     SHSTCD
     C                   ELSE
      *
     C     C1LTCD        IFNE      *BLANK                                       IF LOAD TYPE
     C     C1LTCD        ANDNE     SHLTCD
     C                   ELSE
      *
     C     C1CVNO        IFNE      0                                            IF CUSTOMER
     C     C1CVNO        ANDNE     SHCVNO
     C                   ELSE
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFOPT
     C                   Z-ADD     SHMVSN        DFMVSN
     C                   Z-ADD     SHFSCD        DFFSCD
     C                   MOVEL     SHSTCD        DFSTCD
     C                   MOVEL     SHLTCD        DFLTCD
     C                   Z-ADD     SHCVNO        DFCVNO
     C                   Z-ADD     SGSCHD        DFSCHD
      *
      *  FLIP 'SCHEDULED SHIP DATE' TO MMDDY FORMAT
      *
     C                   z-add     shscdt        wkccyymmdd
     C                   exsr      $tomdy
     C                   z-add     wkmdy         dfsmdy
      *
      *  FLIP 'SCHEDULED KILL DATE' TO MMDDY FORMAT
      *
     C                   z-add     shsckldt      wkccyymmdd
     C                   exsr      $tomdy
     C                   z-add     wkmdy         dfkmdy
      *
     C                   WRITE     HP445S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF CUSTOMER
     C                   ENDIF                                                  IF LOAD TYPE
     C                   ENDIF                                                  IF SALES TYP
     C                   ENDIF                                                  IF BLDG
     C                   ENDIF                                                  IF GROUP
     C                   ENDIF                                                  IF FARM
     C                   ENDIF                                                  IF PHASE
     C                   ENDIF                                                  IF KILL
     C                   ENDIF                                                  IF SCHED
     C                   ENDIF                                                  IF fsbo  e5190
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   MOVEL     YES           NORECS
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CREAT - SUBROUTINE TO CALL CREATE SPECIFICATION PROGRAM WHEN
      *          USER HAS TAKEN F6=CREATE
      *----------------------------------------------------------------
      *
     C     $CREAT        BEGSR
      *
     C                   CALL      'HP485'
     C                   PARM      BOCOCD        XXCOCD
     C                   PARM                    VERSION
     C                   PARM                    C1VERSION
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR    subr added E5190
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    BE A 'LIVE PRODUCTION' DIVISION OFFICE
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CLEAR SUBFILE
      *
     C                   EXSR      $CLR1
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
     C                   MOVEL     NO            INDVFL                          RESET FL
      *
     C                   MOVEL     OUBODS        C1BODS
      *
     C                   ENDSR
      *---------------------------------------------------------------
      * $EDOP1 - SUBROUTINE TO READ CHANGED RECORDS IN SUBFILE AND
      *          EDIT FOR VALID SUBFILE OPTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READC
     C                   READC     HP445S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZERO                                        IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 2'                                         IF BAD OPT
     C     DFOPT         ANDNE     ' 4'
     C     DFOPT         ANDNE     ' 5'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        30
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ELSE
      *
      * CHECK THE USER'S AUTHORITY TO THE FUNCTION
      *
     C     DFOPT         IFEQ      ' 2'                                         IF OPTION
     C     DFOPT         OREQ      ' 4'
     C     DFOPT         OREQ      ' 5'
      *
     C                   SELECT
     C                   when      dfopt = ' 2' or dfopt = ' 4'
     C                   MOVEL(P)  'HP145'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 5'
     C                   MOVEL(P)  'HP745'       WKFNCD
     C                   ENDSL
      *
     C                   EXSR      $SEC
      *
     C     SECFL         IFEQ      YES                                          IF PROBLEM
     C                   SETON                                        30
     C                   EXSR      $ERR1
     C                   ELSE
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 4=DELETE
      * 1) THE USER MUST HAVE AUTHORITY TO DELETE SCHEDULED MOVEMENTS.
      *
     C     DFOPT         IFEQ      ' 4'                                         IF DELETE
     C                   CALL      'HPSECD'
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM                    SDUSR
     C                   PARM      'SC'          XXMSCD
     C                   if        error <> 0                                   If no authority
     C                   seton                                        30
     C                   exsr      $err1
     C                   endif                                                  If no authority
     C                   endif                                                  IF DELETE
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 2=REVISE AND OPTION 4=DELETE
      *
     C                   if        dfopt = ' 2' or dfopt = ' 4'                 If 2 or 4
      *
      * THE USER CANNOT REVISE/DELETE WHEN:
      *     1) THE BATCH COPY OF DATA FROM THE HOG PROCUREMENT
      *        AND EVALUATION SYSTEM TO THE HOG PRODUCTION
      *        SYSTEM IS IN PROGRESS.
      *
     C                   if        dafl = yes
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00707'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF
      *
      * If the user is in here with the 'Restricted' version, then do this
      * check.
     C                   if        version = 'R' and                            If SBD market
     C                             dfstcd = 'MRKTS' and dfcvno = 360516
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00884'     mgid(e)
     C                   exsr      $err1
     C                   endif
     C                   endif                                                  If SBD market
      *
     C                   endif                                                  If 2 or 4
      *
      *
     C                   ENDIF                                                  IF PROBLEM
     C                   ENDIF                                                  IF OPTION
     C                   ENDIF                                                  IF BAD OPT
      *
      * REWRITE THE SUBFILE RECORD WITH THE MODIFIED DATA TAG ON SO
      * IT WILL BE REREAD AND PROCESSED IN THE SUBROUTINE $PROC1.
      *
     C     ERROR         IFEQ      0
     C     DFOPT         ANDEQ     *BLANK
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF
      *
     C                   UPDATE    HP445S1
     C                   SETOFF                                       8530
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS AND PROCESS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP445S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      * IF USER SELECTED OPTION 2=REVISE, SET PARM FOR REVISE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 2'
     C                   MOVEL     YES           RESET
     C                   MOVEL     REVISE        MODE
     C                   MOVEL     BOCOCD        XXCOCD
     C                   CALL      'HP145'
     C                   PARM                    MODE
     C                   PARM                    XXCOCD
     C                   PARM                    DFMVSN
     C                   PARM                    RTNCD
     C                   PARM                    VERSION
     C                   PARM                    C1VERSION
     C                   ENDIF
      *
      *
      * IF USER SELECTED OPTION 4=DELETE, SET PARM FOR DELETE MODE
      * AND SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 4'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP145'
     C                   PARM      DELETE        MODE
     C                   PARM      BOCOCD        XXCOCD
     C                   PARM                    DFMVSN
     C                   PARM                    RTNCD
     C                   PARM                    VERSION
     C                   PARM                    C1VERSION
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 5=VIEW SALES,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 5'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP745'
     C                   PARM                    DFMVSN
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * UPON RETURNING FROM THE CALLED PROGRAM,
      * CLEAR THE SUBFILE OPTION SELECTOR ENTERED BY THE USER AND
      * REWRITE THE SUBFILE RECORD
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   UPDATE    HP445S1
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF BUSINESS OFFICE CODE                               E5190
      *
     C     FLD           WHENEQ    'C1FSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        C1FSBO
     C                   MOVEL     XXBODS        C1BODS
     C                   ENDIF                                                  IF SELECTED
      *
      * HOG GROUP
      *
     C     FLD           WHENEQ    'C1HGCD'
     C****               MOVE      *blanks       XXFSBO
     C                   MOVE      C1fsbo        XXFSBO                          E5190
     C                   Z-ADD     0             WKFSCD
     C                   MOVE      *BLANK        XXHGCD
     C                   CALL      'HP541'
     C                   PARM                    XXFSBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXHGCD
     C                   SETON                                        52
      *
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        C1HGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * FARM SITE
      *
     C*    FLD           WHENEQ    'C1FSCD'
     C*                  CALL      'HP5040'
     C*                  PARM      *blank        xxaist
     C*                  PARM      0             WKFSCD
     C*                  PARM      *blank        XXFSNM
     C*                  SETON                                        53
     C*    WKFSCD        IFNE      0                                            IF SELECTED
     C*                  Z-ADD     WKFSCD        C1FSCD
     C*                  ENDIF                                                  IF SELECTED
     C     FLD           WHENEQ    'C1FSCD'                                     new for E5190
     C                   MOVEL     C1FSBO        XXFSBO
     C                   Z-ADD     0             XXFSCD
     C                   MOVE      *BLANK        XXFSNM           30
     C                   MOVEL     C1PPCD        XXPPCD
     C                   MOVEL     *blanks       XXPTCD
     C                   CALL      'HP505'
     C                   PARM                    XXFSBO
     C                   PARM                    XXFSCD
     C                   PARM                    XXFSNM
     C                   PARM                    XXPPCD
     C                   PARM                    XXPTCD
     C                   SETON                                        52
     C     XXFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     XXFSCD        C1FSCD
     C                   ENDIF                                                  IF SELECTED
      *
      * PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'C1PPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP507'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        54
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        C1PPCD
     C                   ENDIF                                                  IF SELECTED
      *
      * LOAD  TYPE
      *
     C     FLD           WHENEQ    'C1LTCD'
     C                   CALL      'HP5012'
     C                   PARM      *blank        XXLTCD
     C                   PARM      *blank        XXLTDS
     C                   SETON                                        57
     C                   if        xxltcd <> *blank                             IF SELECTED
     C                   MOVEL     XXLTCD        C1LTCD
     C                   ENDIF                                                  IF SELECTED
      *
      * SALES TYPE
      *
     C     FLD           WHENEQ    'C1STCD'
     C                   MOVE      *BLANK        XXSTCD
     C                   MOVE      *BLANK        XXSTDS
     C                   CALL      'HP544'
     C                   PARM                    XXSTCD
     C                   PARM                    XXSTDS
     C                   SETON                                        56
     C     XXSTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXSTCD        C1STCD
     C                   ENDIF                                                  IF SELECTED
      *
      * JDE CUSTOMER NUMBER
      *
     C     FLD           WHENEQ    'C1CVNO'
     C                   MOVEL(P)  'C'           INAT1
     C                   CALL      'HP513'
     C                   PARM      BOCOCD        XXCOCD                         COMPANY
     C                   PARM                    INAT1                          SEARCH TYPE
     C                   PARM      *ZERO         OUAJD                          JDE NUMBER
     C                   PARM      *BLANK        OUALPH                         JDE NAME
      *
     C                   SETON                                        55
     C     OUAJD         IFNE      0                                            IF SELECTED
     C                   Z-ADD     OUAJD         C1CVNO
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT THE
      *          FIRST PAGE THAT HAS ERRORS ON SCREEN 1
      *----------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Flip date from MMDDYY to CCYYMMDD
      *---------------------------------------------------------------
      *
      * Test the field for a valid date; if it is valid, flip it from
      * MMDDYY to CCYYMMDD.
      *
     C     $tocymd       begsr
      *
     C     *mdy          test(d)                 wkmdy                  92
     C                   if        *in92 = *off                                 If good date
     C     *mdy          move      wkmdy         wkisodate
     C                   move      wkisodate     wkccyymmdd
     C                   else
     C                   z-add     wkmdy         wkccyymmdd
     C                   endif                                                  If good date
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Flip date from CCYYMMDD to MMDDYY
      *---------------------------------------------------------------
      *
      * Test the field for a valid date; if it is valid, flip it from
      * CCYYMMDD to MMDDYY.
      *
     C     $tomdy        begsr
      *
     C                   z-add     0             wkmdy
      *
     C     *iso          test(d)                 wkccyymmdd             92
     C                   if        *in92 = *off                                 If OK date
     C                   move      wkccyymmdd    wkisodate
     C     *mdy          move      wkisodate     wkmdy
     C                   endif                                                  If OK date
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     C1FSBO        INBOBO                         E5190
     C                   MOVE      *BLANK        OUBOBO                         BO CODE   E5190
     C                   MOVE      *BLANK        OUBODS                         BO DESC   E5190
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            B.O. ERR FLG
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
     C     *entry        plist
     C                   parm                    version           1
      *
     C                   select
     C                   when      version = 'R'
     C                   eval      c1version = 'Restricted Version'
     C                   other
     C                   eval      c1version = 'Full Version'
     C                   endsl
      *
      *
      *
      * KEY FOR MOVEMENT EVENT
      *
     C     K1L085        KLIST
     C                   KFLD                    WKMSCD
     C                   KFLD                    C1MVSN
      *
      * PARM LISTS
      *  NONE
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              7            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
     C                   Z-ADD     0             COUNT             2 0
      *
      * DEFINE SAVE FIELDS
      *
     C     *LIKE         DEFINE    C1FSBO        SVFSBO                            E5190
     C     *LIKE         DEFINE    C1BODS        SVBODS                            E5190
     C     *LIKE         DEFINE    C1MVSN        SVMVSN
     C     *LIKE         DEFINE    C1HGCD        SVHGCD
     C     *LIKE         DEFINE    C1FSCD        SVFSCD
     C     *LIKE         DEFINE    C1BLCD        SVBLCD
     C     *LIKE         DEFINE    C1PPCD        SVPPCD
     C     *LIKE         DEFINE    C1STCD        SVSTCD
     C     *LIKE         DEFINE    C1LTCD        SVLTCD
     C     *LIKE         DEFINE    C1CVNO        SVCVNO
     C     *LIKE         DEFINE    C1SMDY        SVSMDY
     C     *LIKE         DEFINE    C1KMDY        SVKMDY
      *
      * DEFINE WORFIELDS
      *
     C     *LIKE         DEFINE    SHMSCD        WKMSCD
     C                   MOVEL     'SC'          WKMSCD
     C     *LIKE         DEFINE    SHFSCD        WKFSCD
      *
      * DEFINE FIELDS FOR USE AS PARMS WHEN CALLING PROMPT PROGRAMS
      *
     C     *LIKE         DEFINE    C1BODS        XXBODS                          e5190
     C     *LIKE         DEFINE    C1FSCD        xxFSCD                          e5190
     C     *LIKE         DEFINE    BOCOCD        XXCOCD
     C     *LIKE         DEFINE    shmscd        xxmscd
     C                   MOVE      *BLANK        XXMSDS           20
     C                   MOVE      *BLANK        XXMTCD            1
     C     *LIKE         DEFINE    SHFSBO        XXFSBO
     C     *LIKE         DEFINE    C1PPCD        XXPPCD                          e5190
     C     *LIKE         DEFINE    HGPTCD        XXPTCD                          e5190
     C                   MOVE      *BLANK        XXFSNM           30
     C     *LIKE         DEFINE    HGPPCD        XXPPCD
     C                   MOVE      *BLANK        XXPPDS           30
     C     *LIKE         DEFINE    HGHGCD        XXHGCD
     C     *LIKE         DEFINE    HGDVCD        XXDVCD
     C                   MOVEL     'LIVE '       XXDVCD
     C                   MOVE      *BLANK        XXBODS           30
     C     *LIKE         DEFINE    C1STCD        XXSTCD
     C                   MOVE      *BLANK        XXSTDS           20
     C     *LIKE         DEFINE    C1LTCD        XXLTCD
     C                   MOVE      *BLANK        XXLTDS           25
     C                   MOVE      *BLANK        XXAIST            1
     C                   MOVE      *BLANK        XXREPRINT         1
      *
      * JDE FIELDS
      *
     C                   MOVE      *BLANK        JDEFL             1            JDE ERR FLAG
     C                   MOVE      *BLANK        INAT1             3            JDE ADDR TYP
     C                   MOVE      *BLANK        OUALPH           40            JDE NAME
     C     *LIKE         DEFINE    SHCVNO        OUAJD                          JDE NUMBER
      *
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     10            WKPLIN            2 0          SFLPAG(0010)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD                          e5190
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * MOVE RETURNED FIELDS TO SCREEN (AND SAVE IN WORK      ????     dont know if need this E5190
      * FIELDS FOR USE WITH F5=REFRESH LOGIC)                                 "
      *                                                                      "
     C                   MOVEL     OUBOBO        C1FSBO                      "
     C                   MOVEL     OUBOBO        SVFSBO                      "
     C                   MOVEL     OUBODS        C1BODS                      "
     C                   MOVEL     OUBODS        SVBODS                       E5190
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * GET THE COMPANY CODE/COST CENTER FROM THE USER'S DEFAULT B/O
      * TO USE WITH RETRIEVING JDE CUSTOMER INFO
      *
     C     OUBOBO        CHAIN     HSP009                             90
     C     *IN90         IFEQ      *OFF
     C                   MOVEL     BOCOCD        XXCOCD
     C                   ELSE
     C                   MOVE      *BLANK        XXCOCD
     C                   ENDIF
      *
      *
     C                   ENDSR
      /EJECT
