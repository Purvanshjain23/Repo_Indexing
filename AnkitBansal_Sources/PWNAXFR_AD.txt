// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWNAXFR
// ?Date: 14.08.2025 Time: 02:57:02
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//? 5/28/2021 JBB SDN619 - Tattoo Repayment By Business
//?                        Function created.  This function marks the
//?                        Tattoo records as paid, Locks the Buy Order
//?                        Header record, and resets the Payment
//?                        Processing Parm record to the next Payment
//?                        Date/Step 1, and marks the Tattoo Repayment
//?                        records as repaid.
ENDDO;

//?Step 1. Read all Tattoo Repayment Detail records and mark
//?        associated Tattoo Header records as Paid
EXECUTE FUNCTION(Upd Tattoo Hdr as Paid RT) TYPE(RTVOBJ) FILE(PWAXCPP)          AB1367576;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
{
 //?USER: Process Data record

 CASE;

 // IF NOT DB1.TRD Repayment Status is Transfered
 IF ! DB1.TRD_Repayment_Status = 'T';

 EXECUTE FUNCTION(Chg Paid Info 4 Repay RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1369566;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.TRD_Payment_Sts);
 PARAMETER(DB1.TRD_Process_Code);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Paid Info 4 Repay CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1369567;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.TH_AP_Voucher_Document#);
  PARAMETER(PAR.TH_Payment_Sts);
  PARAMETER(DB1.TH_Voucher_Payment_Date);
  PARAMETER(*ZERO);
  PARAMETER(PAR.THP_Process_Code);
  PARAMETER(JOB.*USER);
  PARAMETER(JOB.*Job_date);
  PARAMETER(JOB.*Job_time);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?USER: Processing before Data read

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
   PARAMETER(DB1.TH_Payment_Sts);
   PARAMETER(DB1.TH_Payment_Type);
   {
    //?Execute internal function

    EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
    {
     //?Execute internal function

     //?1/10/96  HPE056   Allow payment type to be update based on
     //?                  what the payment status is at the time this
     //?                  tattoo is being updated
    }

    //?Function Description:  If there are any fields that need to be
    //?Changed/Created during the Change functions or Create function
    //?Presently: Payment Type
    //?Add this routine to all of the change objects and create object
    //?that update the Payment Type
    CASE;

    // IF PAR.TH Payment Sts is Live anything
    IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

    // PAR.TH Payment Type = CND.Live
    PAR.TH_Payment_Type = 'L';

    // IF *OTHERWISE
    IF *OTHERWISE;

    // PAR.TH Payment Type = CND.Carcass Merit
    PAR.TH_Payment_Type = 'C';

    ENDIF;

   }

  }

 }

 //?Create a System comment - Tattoo Header Repaid
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Convert numeric values to alpha for Comment records
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Tattoo Number Alpha = DB1.TH Tattoo Number
 LCL.Tattoo_Number_Alpha = DB1.TH_Tattoo_Number;

 // LCL.Buy Order Number Alpha = DB1.BOH Buy Order Number
 LCL.Buy_Order_Number_Alpha = DB1.BOH_Buy_Order_Number;

 // LCL.Buy Order Load Alpha = DB1.BOL Load Number
 LCL.Buy_Order_Load_Alpha = DB1.BOL_Load_Number;

 // Call program Cvt cyymmdd to mm/dd/yyUP.
 CALL PROGRAM(Cvt cyymmdd to mm/dd/yyUP) ('PWMZUPR');
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.Date_MM_DD_YY);

 ENDIF;

 //?Line 1
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.TRC Comment = CONCAT(CON.Tattoo Header record mark,CON.ed as Paid for Tattoo,CND.*None)
 LCL.TRC_Comment = 'Tattoo Header record mark' + 'ed as Paid for Tattoo' (*ZERO);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Tattoo Number Alpha,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + LCL.Tattoo_Number_Alpha (1);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON.on,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + 'on' (1);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 //?Line 2
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.TRC Comment = CONCAT(CON.   Buy Order,LCL.Buy Order Number Alpha,CND.*One)
 LCL.TRC_Comment = '   Buy Order' + LCL.Buy_Order_Number_Alpha (1);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Load,CND.*None)
 LCL.TRC_Comment = LCL.TRC_Comment + ', Load' (*ZERO);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Buy Order Load Alpha,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + LCL.Buy_Order_Load_Alpha (1);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Kill Date,CND.*None)
 LCL.TRC_Comment = LCL.TRC_Comment + ', Kill Date' (*ZERO);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Date MM/DD/YY,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + LCL.Date_MM_DD_YY (1);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 //?Line 3
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.TRC Comment = CONCAT(CON.   Payment Status =,DB1.TRD Payment Sts,CND.*None)
 LCL.TRC_Comment = '   Payment Status =' + DB1.TRD_Payment_Sts (*ZERO);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Process Code =,CND.*None)
 LCL.TRC_Comment = LCL.TRC_Comment + ', Process Code =' (*ZERO);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,DB1.TRD Process Code,CND.*None)
 LCL.TRC_Comment = LCL.TRC_Comment + DB1.TRD_Process_Code (*ZERO);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

}


//?Step 2. Update BO Status to Locked / BOL Paid Trucker to Paid
EXECUTE FUNCTION(Upd Buy Order Sts      RT) TYPE(RTVOBJ) FILE(PWAXCPP)          AB1367577;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
{
 //?USER: Initialize routine

 // LCL.Buy Order Number = CON.*ZERO
 LCL.Buy_Order_Number = *ZERO;

 //?USER: Process Data record

 //?If Buy Order Number changes, update the status to passed in value
 CASE;

 // IF DB1.TRD Repayment Status is Transfered
 IF DB1.TRD_Repayment_Status = 'T';

 //?If Buy Order Number changes, update the status to passed in value
 // IF LCL.Buy Order Number NE DB1.BOH Buy Order Number
 IF LCL.Buy_Order_Number <> DB1.BOH_Buy_Order_Number;

 EXECUTE FUNCTION(Chg BOH Status-Repay  CH) TYPE(CHGOBJ) FILE(PKAWCPP)           AB1347375;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER('L');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 EXECUTE FUNCTION(Chg Trucker Pymt Sts  CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1348770;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TRD_Trucker_Payment_Sts);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 // LCL.Buy Order Number = DB1.BOH Buy Order Number
 LCL.Buy_Order_Number = DB1.BOH_Buy_Order_Number;

 // LCL.Buy Order Number Alpha = DB1.BOH Buy Order Number
 LCL.Buy_Order_Number_Alpha = DB1.BOH_Buy_Order_Number;

 // LCL.TRC Comment = CONCAT(CON.Buy Order Number,LCL.Buy Order Number Alpha,CND.*One)
 LCL.TRC_Comment = 'Buy Order Number' + LCL.Buy_Order_Number_Alpha (1);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON.status marked as Locked,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + 'status marked as Locked' (1);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 ENDIF;

}


//?Step 3. Update Payment Date/Step and PP Repayment Status
EXECUTE FUNCTION(Upd Payment Proc Parm RT) TYPE(RTVOBJ) FILE(PWAWCPP)           AB1367578;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Chg PPP for Repay     CH) TYPE(CHGOBJ) FILE(PKC4REP)           AB1367554;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(JOB.*Job_date);
 PARAMETER(1);
 PARAMETER('N');
 PARAMETER('N');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 //?Convert job date to mm/dd/yy
 // Call program Cvt cyymmdd to mm/dd/yyUP.
 CALL PROGRAM(Cvt cyymmdd to mm/dd/yyUP) ('PWMZUPR');
 PARAMETER(JOB.*Job_date);
 PARAMETER(LCL.Date_MM_DD_YY);

 // LCL.TRC Comment = CONCAT(CON.Payment Date and Step cha,CON.nged to:,CND.*None)
 LCL.TRC_Comment = 'Payment Date and Step cha' + 'nged to:' (*ZERO);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Date MM/DD/YY,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + LCL.Date_MM_DD_YY (1);

 // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Step 1.,CND.*One)
 LCL.TRC_Comment = LCL.TRC_Comment + ', Step 1.' (1);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 QUIT;

}


//?Step 4. Mark all Tattoo Repayment Hdr/Dtl records as Repaid
EXECUTE FUNCTION(Upd Mark All Repaid   RT) TYPE(RTVOBJ) FILE(PWAWCPP)           AB1368841;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
{
 //?USER: Process Data record

 //?Read all Tattoo Repayment Detail records for Repay ID
 EXECUTE FUNCTION(Upd All Tatt Repay Dtl RT) TYPE(RTVOBJ) FILE(PWAXCPP)          AB1368842;
 PARAMETER(DB1.CC_Company_Number);
 PARAMETER(DB1.TRH_Repayment_ID);
 PARAMETER('R');
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.TRD Repayment Status is Transfered
  IF DB1.TRD_Repayment_Status = 'T';

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Chg Tatt Repay-Repaid  CH) TYPE(CHGOBJ) FILE(PWAXCPP)          AB1369558;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TRH_Repayment_ID);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.Transfer_Kill_Date);
  PARAMETER(DB1.Transfer_Site_ID);
  PARAMETER(DB1.Transfer_Subsidiary_Code);
  PARAMETER(DB1.Transfer_State_Code);
  PARAMETER(PAR.TRD_Repayment_Status);
  PARAMETER(DB1.TRD_Payment_Sts);
  PARAMETER(DB1.TRD_Process_Code);
  PARAMETER(DB1.TRD_Trucker_Payment_Sts);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  //?Convert numeric values to alpha for comments
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Buy Order Number Alpha = DB1.BOH Buy Order Number
  LCL.Buy_Order_Number_Alpha = DB1.BOH_Buy_Order_Number;

  // LCL.Load Number Alpha = DB1.BOL Load Number
  LCL.Load_Number_Alpha = DB1.BOL_Load_Number;

  // LCL.Tattoo Number Alpha = DB1.TH Tattoo Number
  LCL.Tattoo_Number_Alpha = DB1.TH_Tattoo_Number;

  //?Convert Kill Date from cmmddyy to mm/dd/yy
  CASE;

  // IF DB1.TH Kill Date is Entered
  IF DB1.TH_Kill_Date <> *ZERO;

  // Call program Cvt cyymmdd to mm/dd/yyUP.
  CALL PROGRAM(Cvt cyymmdd to mm/dd/yyUP) ('PWMZUPR');
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(LCL.Date_MM_DD_YY);

  ENDIF;

  ENDIF;

  //?Line 1
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.TRC Comment = CONCAT(CON.Tattoo Repayment Detail r,CON.ecord marked as Repaid fo,CND.*None)
  LCL.TRC_Comment = 'Tattoo Repayment Detail r' + 'ecord marked as Repaid fo' (*ZERO);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON.r,CND.*None)
  LCL.TRC_Comment = LCL.TRC_Comment + 'r' (*ZERO);

  EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TRH_Repayment_ID);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(LCL.TRC_Comment);
  PARAMETER('S');
  {
   //?USER: Processing before Data update

   //?Make sure BOH Company Number is populated
   CASE;

   // IF PAR.BOH Company Number is *ZERO
   IF PAR.BOH_Company_Number = *ZERO;

   // DB1.BOH Company Number = PAR.CC Company Number
   DB1.BOH_Company_Number = PAR.CC_Company_Number;

   ENDIF;

   EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
   PARAMETER(PAR.CC_Company_Number);
   PARAMETER(PAR.TRH_Repayment_ID);
   PARAMETER(DB1.TRC_Sequence);
   {
    //?USER: Processing if Data record not found

    // PAR.TRC Sequence = CON.1
    PAR.TRC_Sequence = 1;

    //?USER: Process Data record

    // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
    PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

    QUIT;

   }

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  ENDIF;

  //?Line 2
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.TRC Comment = CONCAT(CON.   BO#,LCL.Buy Order Number Alpha,CND.*One)
  LCL.TRC_Comment = '   BO#' + LCL.Buy_Order_Number_Alpha (1);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Load,CND.*None)
  LCL.TRC_Comment = LCL.TRC_Comment + ', Load' (*ZERO);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Load Number Alpha,CND.*One)
  LCL.TRC_Comment = LCL.TRC_Comment + LCL.Load_Number_Alpha (1);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Tattoo,CND.*None)
  LCL.TRC_Comment = LCL.TRC_Comment + ', Tattoo' (*ZERO);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Tattoo Number Alpha,CND.*One)
  LCL.TRC_Comment = LCL.TRC_Comment + LCL.Tattoo_Number_Alpha (1);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON., Kill Date,CND.*None)
  LCL.TRC_Comment = LCL.TRC_Comment + ', Kill Date' (*ZERO);

  // LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Date MM/DD/YY,CND.*One)
  LCL.TRC_Comment = LCL.TRC_Comment + LCL.Date_MM_DD_YY (1);

  EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(DB1.TRH_Repayment_ID);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(LCL.TRC_Comment);
  PARAMETER('S');
  {
   //?USER: Processing before Data update

   //?Make sure BOH Company Number is populated
   CASE;

   // IF PAR.BOH Company Number is *ZERO
   IF PAR.BOH_Company_Number = *ZERO;

   // DB1.BOH Company Number = PAR.CC Company Number
   DB1.BOH_Company_Number = PAR.CC_Company_Number;

   ENDIF;

   EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
   PARAMETER(PAR.CC_Company_Number);
   PARAMETER(PAR.TRH_Repayment_ID);
   PARAMETER(DB1.TRC_Sequence);
   {
    //?USER: Processing if Data record not found

    // PAR.TRC Sequence = CON.1
    PAR.TRC_Sequence = 1;

    //?USER: Process Data record

    // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
    PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

    QUIT;

   }

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  ENDIF;

  ENDIF;

 }

 //?USER: Exit processing

 EXECUTE FUNCTION(Chg Tattoo Repay Hdr  CH) TYPE(CHGOBJ) FILE(PWAWCPP)           AB1364805;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER('R');
 PARAMETER(DB1.TRH_Date_Start);
 PARAMETER(DB1.TRH_Time_Start);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.TRH_Payment_Date);
 PARAMETER(DB1.TRH_Payment_Step);
 PARAMETER(DB1.TRH_Backup_File_Prefix);
 PARAMETER('A');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

 // LCL.TRC Comment = CONCAT(CON.Tattoo Repayment Header m,CON.arked as Repaid,CND.*None)
 LCL.TRC_Comment = 'Tattoo Repayment Header m' + 'arked as Repaid' (*ZERO);

 EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.TRC_Comment);
 PARAMETER('S');
 {
  //?USER: Processing before Data update

  //?Make sure BOH Company Number is populated
  CASE;

  // IF PAR.BOH Company Number is *ZERO
  IF PAR.BOH_Company_Number = *ZERO;

  // DB1.BOH Company Number = PAR.CC Company Number
  DB1.BOH_Company_Number = PAR.CC_Company_Number;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.TRH_Repayment_ID);
  PARAMETER(DB1.TRC_Sequence);
  {
   //?USER: Processing if Data record not found

   // PAR.TRC Sequence = CON.1
   PAR.TRC_Sequence = 1;

   //?USER: Process Data record

   // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
   PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

}


