// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDP4PFR
// ?Date: 14.08.2025 Time: 12:04:16
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
//?08/03/2016 JBB E5262 - Chargeback and Rebill modifications
//?           Recompile for adding RB to conditions list
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?08/03/2016 JBB E5262 - RB added to conditions list
//?Record Selection criteria
CASE;

// IF DB1.Invoice Suffix is IN, DM, CB or RB
IF DB1.Invoice_Suffix = 'CB'/'DM'/'IN'/'RB';

EXECUTE FUNCTION(RTV Last Payment Date  RT) TYPE(RTVOBJ) FILE(ARBECPP)          AC1429496;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Invoice_Number);
PARAMETER(DB1.Invoice_Suffix);
PARAMETER(PAR.Payment_Deposit_Date);
{
 //?USER: Initialize routine

 // PAR.Payment/Deposit Date = CND.not entered
 PAR.Payment_Deposit_Date = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.Adjustment Type Code is Regular Pay
 IF DB1.Adjustment_Type_Code = 'PAY';

 CASE;

 // IF DB1.Payment/Deposit Date GT PAR.Payment/Deposit Date
 IF DB1.Payment_Deposit_Date > PAR.Payment_Deposit_Date;

 // PAR.Payment/Deposit Date = DB1.Payment/Deposit Date
 PAR.Payment_Deposit_Date = DB1.Payment_Deposit_Date;

 ENDIF;

 ENDIF;

}


CASE;

// IF PAR.Payment/Deposit Date is entered
IF PAR.Payment_Deposit_Date <> *ZERO;

// AND PAR.Payment/Deposit Date NE DB1.Last Payment Date
AND PAR.Payment_Deposit_Date <> DB1.Last_Payment_Date;

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Record Selection criteria
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Invoice Number header format

//?USER: On print of detail format

EXECUTE FUNCTION(CLC Days Paid          IF) TYPE(EXCINTFUN)                     AC1351456;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Transaction_Date_Code);
PARAMETER(PAR.Payment_Deposit_Date);
PARAMETER(CUR.USR_Days_to_Pay);
{
 //?Execute internal function

 //?  Transaction Date (Invoice Date) will be used instead of Due Date.
 //?     PER Request ARS038
 //?  The Paid in Full Date has been Changed to the Deposit Date
 //?     Which is the Last Payment Date
 // PAR.Number of Days = PAR.Last Payment Date - PAR.Transaction Date Code *DAYS
 PAR.Number_of_Days = DURATION(PAR.Last_Payment_Date PAR.Transaction_Date_Code 'DY'
 1111111 'NONE' 'N' 1);

 //?Handle Negative Days to Pay
 CASE;

 // IF PAR.Number of Days is Less Than Zero
 IF PAR.Number_of_Days < *ZERO;

 // PAR.Days to Pay = CND.equal to zero
 PAR.Days_to_Pay = *ZERO;

 //?Handle Negative Days to Pay
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Days to Pay = PAR.Number of Days
 PAR.Days_to_Pay = PAR.Number_of_Days;

 ENDIF;

}


// CUR.USR Date - ATR = PAR.Payment/Deposit Date
CUR.USR_Date_ATR = PAR.Payment_Deposit_Date;

//?USER: Process after print of detail format

//?If Update Run update Header file
CASE;

// IF PAR.USR Update Flag is Yes
IF PAR.USR_Update_Flag = 'Y';

// NXT.USR Total Number Records = CON.1 + NXT.USR Total Number Records
NXT.USR_Total_Number_Records = 1 + NXT.USR_Total_Number_Records;

EXECUTE FUNCTION(CHG Fix Pay Date       RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC1429554;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Invoice_Number);
PARAMETER(CUR.Invoice_Suffix);
PARAMETER(PAR.Payment_Deposit_Date);
PARAMETER(CUR.USR_Days_to_Pay);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CHG Fix Pay Date       CH) TYPE(CHGOBJ) FILE(ARBDCPP)          AC1429555;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(PAR.Last_Payment_Date);
 PARAMETER(PAR.Days_to_Pay);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 QUIT;

}


ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Invoice Number totals format

// SUPPRESSED PRINT Company Number totals format

