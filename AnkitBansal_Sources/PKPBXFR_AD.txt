// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKPBXFR
// ?Date: 14.08.2025 Time: 02:50:04
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/02/20 - Increased the Buy Order Number field
//?                      length from 5 to 7.
ENDDO;

EXECUTE FUNCTION(Upd LsTrnsUPL          RT) TYPE(RTVOBJ) FILE(PKCRCPP)          AB1135508;
{
 //?USER: Process Data record

 CASE;

 // IF WRK.First Time Flag Usr is Yes
 IF WRK.First_Time_Flag_Usr = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(WRK.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);
 {
  //?Execute internal function

  // Call program Val Company Number    XF.
  CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
  PARAMETER(PAR.CC_Company_Number);
  PARAMETER(PAR.Oms_Name);
  PARAMETER(WRK.Invalid_Y_N_USR);

  CASE;

  // IF WRK.Invalid Y/N USR is Yes
  IF WRK.Invalid_Y_N_USR = 'Y';

  // Send error message - 'Invalid Company Number'
  ERROR(PRK0299);
  MSGPARM(PAR.CC_Company_Number);

  ENDIF;

  // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
  PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

 }

 // WRK.First Time Flag Usr = CND.Yes
 WRK.First_Time_Flag_Usr = 'Y';

 ENDIF;

 // WRK.Return Code USR = CND.*Normal
 WRK.Return_Code_USR = *BLANK;

 EXECUTE FUNCTION(Rtv Tatts/Bo Load     RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1135414;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.TH_Sex);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_Hog_Class_Type);
 PARAMETER(WRK.THP_Process_Code);
 PARAMETER(WRK.HC_Class_Code);
 PARAMETER(WRK.Return_Code_USR);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Return Code USR = CND.*Record does not exist
  PAR.Return_Code_USR = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF WRK.Return Code USR is *Normal
 IF WRK.Return_Code_USR = *BLANK;

 //?Process Code
 CASE;

 // IF WRK.THP Process Code is Receiving
 IF WRK.THP_Process_Code = 'RECV';

 //?Valid record
 //?Process Code
 // IF WRK.THP Process Code is Slaughter
 IF WRK.THP_Process_Code = 'SLG';

 //?Valid record
 //?Process Code
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Ls Trns Inv Next  RT) TYPE(RTVOBJ) FILE(PKCSCPP)           AB1135843;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTI_Record_Number);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.LTI_Record_Number = 1;

  //?USER: Process Data record

  CASE;

  // IF DB1.LTI Record Number is Entry Allowed
  IF DB1.LTI_Record_Number >= 000001;
  AND DB1.LTI_Record_Number <= 699999;

  // PAR.LTI Record Number = DB1.LTI Record Number + CON.1
  PAR.LTI_Record_Number = DB1.LTI_Record_Number + 1;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(Create Loss Trans Invalid) TYPE(CRTOBJ) FILE(PKCSCPP)          AB1135513;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTI_Record_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Shift);
 PARAMETER(DB1.LTA_Wgt);
 PARAMETER('P');
 PARAMETER('T');
 PARAMETER(DB1.LTA_Extent_Location);
 PARAMETER(DB1.LT_Type_Code);
 PARAMETER(DB1.LR_Reason_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 ENDIF;

 CASE;

 // IF WRK.TH Hog Class Type is Resale
 IF WRK.TH_Hog_Class_Type = 'R';

 EXECUTE FUNCTION(RTV Ls Trns Inv Next  RT) TYPE(RTVOBJ) FILE(PKCSCPP)           AB1135843;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTI_Record_Number);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.LTI_Record_Number = 1;

  //?USER: Process Data record

  CASE;

  // IF DB1.LTI Record Number is Entry Allowed
  IF DB1.LTI_Record_Number >= 000001;
  AND DB1.LTI_Record_Number <= 699999;

  // PAR.LTI Record Number = DB1.LTI Record Number + CON.1
  PAR.LTI_Record_Number = DB1.LTI_Record_Number + 1;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(Create Loss Trans Invalid) TYPE(CRTOBJ) FILE(PKCSCPP)          AB1135513;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTI_Record_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Shift);
 PARAMETER(DB1.LTA_Wgt);
 PARAMETER('P');
 PARAMETER('R');
 PARAMETER(DB1.LTA_Extent_Location);
 PARAMETER(DB1.LT_Type_Code);
 PARAMETER(DB1.LR_Reason_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Valid record
 DO;

 EXECUTE FUNCTION(Crt Loss Tran from UPL IF) TYPE(EXCINTFUN)                     AB1158730;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTN_Record_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Shift);
 PARAMETER(DB1.LTA_Wgt);
 PARAMETER(*BLANK);
 PARAMETER('P');
 PARAMETER('N');
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(DB1.LT_Type_Code);
 PARAMETER(DB1.LR_Reason_Code);
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(WRK.BOH_Buy_Order_Number);
 PARAMETER(WRK.BOL_Load_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 PARAMETER(DB1.LTA_Extent_Location);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Loss Trans Next   RT) TYPE(RTVOBJ) FILE(PKBSCPP)           AB1135836;
  PARAMETER(PAR.LTN_Company_Number);
  PARAMETER(PAR.LTN_Kill_Date);
  PARAMETER(PAR.LTN_Record_Number);
  {
   //?USER: Processing if Data record not found

   // PAR.LTN Record Number = CON.1
   PAR.LTN_Record_Number = 1;

   QUIT;

   //?USER: Process Data record

   CASE;

   // IF DB1.LTN Record Number is Entry Allowed
   IF DB1.LTN_Record_Number >= 000001;
   AND DB1.LTN_Record_Number <= 699999;

   // PAR.LTN Record Number = DB1.LTN Record Number + CON.1
   PAR.LTN_Record_Number = DB1.LTN_Record_Number + 1;

   QUIT;

   ENDIF;

  }

  //?Format from numeric extent/loc to alpha extent, or alpa trim location
  CASE;

  // IF PAR.LT Type Code is Viscera Loss
  IF PAR.LT_Type_Code = 04;

  // WRK.LTN Extent = CVTVAR(PAR.LTA Extent/Location)
  WRK.LTN_Extent = CVTVAR(PAR.LTA_Extent_Location);

  // WRK.LTN Trim Location = CND.Trim
  WRK.LTN_Trim_Location = 00;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // WRK.LTN Extent = CND.*
  WRK.LTN_Extent = 00;

  // WRK.LTN Trim Location = CVTVAR(PAR.LTA Extent/Location)
  WRK.LTN_Trim_Location = CVTVAR(PAR.LTA_Extent_Location);

  ENDIF;

  EXECUTE FUNCTION(Crt Loss Transaction  CR) TYPE(CRTOBJ) FILE(PKBSCPP)           AB1102905;
  PARAMETER(PAR.LTN_Company_Number);
  PARAMETER(PAR.LTN_Kill_Date);
  PARAMETER(PAR.LTN_Record_Number);
  PARAMETER(PAR.LTN_Tattoo_Number);
  PARAMETER(PAR.LTN_Shift);
  PARAMETER(PAR.LTN_Wgt);
  PARAMETER(WRK.LTN_Extent);
  PARAMETER(WRK.LTN_Trim_Location);
  PARAMETER(PAR.LTN_Error_Sts);
  PARAMETER(PAR.LTN_Record_Created_Status);
  PARAMETER(PAR.LTN_User_Error_Override);
  PARAMETER(*MISSING);
  PARAMETER(PAR.LT_Type_Code);
  PARAMETER(PAR.LR_Reason_Code);
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER(PAR.BOH_Buy_Order_Number);
  PARAMETER(PAR.BOL_Load_Number);
  PARAMETER(PAR.TH_Tattoo_Number);
  PARAMETER(PAR.TH_Kill_Date);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER('A');
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(PAR.RU_Date);
  PARAMETER(PAR.RU_Time);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp-Sys Dt  IF) TYPE(EXCINTFUN)                      AB1237005;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // Call program Rtv System Date & Tim UP.
    CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
    PARAMETER(PAR.RS_Date_Added);
    PARAMETER(PAR.RS_Time_Added);

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

 ENDDO;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Invalid tattoo number
 EXECUTE FUNCTION(RTV Ls Trns Inv Next  RT) TYPE(RTVOBJ) FILE(PKCSCPP)           AB1135843;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTI_Record_Number);
 {
  //?USER: Processing if Data record not found

  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.LTI_Record_Number = 1;

  //?USER: Process Data record

  CASE;

  // IF DB1.LTI Record Number is Entry Allowed
  IF DB1.LTI_Record_Number >= 000001;
  AND DB1.LTI_Record_Number <= 699999;

  // PAR.LTI Record Number = DB1.LTI Record Number + CON.1
  PAR.LTI_Record_Number = DB1.LTI_Record_Number + 1;

  QUIT;

  ENDIF;

 }

 EXECUTE FUNCTION(Create Loss Trans Invalid) TYPE(CRTOBJ) FILE(PKCSCPP)          AB1135513;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(WRK.LTI_Record_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Shift);
 PARAMETER(DB1.LTA_Wgt);
 PARAMETER('P');
 PARAMETER('T');
 PARAMETER(DB1.LTA_Extent_Location);
 PARAMETER(DB1.LT_Type_Code);
 PARAMETER(DB1.LR_Reason_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(JOB.*JOB);
 PARAMETER(JOB.*PROGRAM);
 PARAMETER(JOB.*USER);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
 ENDIF;

 EXECUTE FUNCTION(Chg Loss Trans Upl     CH) TYPE(CHGOBJ) FILE(PKCRCPP)          AB1135504;
 PARAMETER(DB1.LTA_Company_Number);
 PARAMETER(DB1.LTA_Kill_Date);
 PARAMETER(DB1.LTA_Record_Number);
 PARAMETER(DB1.LTA_Tattoo_Number);
 PARAMETER(DB1.LTA_Shift);
 PARAMETER(DB1.LTA_Wgt);
 PARAMETER(DB1.LTA_Extent_Location);
 PARAMETER(DB1.LTA_Record_Created_Status);
 PARAMETER('Y');
 PARAMETER(DB1.LT_Type_Code);
 PARAMETER(DB1.LR_Reason_Code);
 PARAMETER(DB1.RU_Date);
 PARAMETER(DB1.RU_Time);
}


// Call program Zzz Loss Trans Invalid PF.
CALL PROGRAM(Zzz Loss Trans Invalid PF) ('PKPCPFR');
PARAMETER(WRK.Oms_System_Value_Alpha);

