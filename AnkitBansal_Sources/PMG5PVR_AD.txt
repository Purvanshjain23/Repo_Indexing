// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMG5PVR
// ?Date: 14.08.2025 Time: 03:43:07
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.Post Flag USR = CND.No
LCL.Post_Flag_USR = 'N';

//?USER: Validate fields

//?PMT: Commodity Market Code
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Commodity Market Code USR
AND PGM.*Cursor_field = DTL.Commodity_Market_Code_USR;

// Call program SEL Commod. Mkts Actve SR.
CALL PROGRAM(SEL Commod. Mkts Actve SR) ('PDEDSRR');
PARAMETER(DTL.Commodity_Market_Code_USR);

ENDIF;

//?PMT: Market Date
CASE;

// IF DTL.*CMD key is CF12
IF DTL.*CMD_key = '12';

// AND PGM.*Cursor field <IS> DTL.Market Price Date
AND PGM.*Cursor_field = DTL.Market_Price_Date;

//?Select function on Market Price
// Call program SEL CMP Act By CmDteGrpSR.
CALL PROGRAM(SEL CMP Act By CmDteGrpSR) ('PMHESRR');
PARAMETER(DTL.Commodity_Market_Code_USR);
PARAMETER(DTL.Market_Price_Date);

ENDIF;

//?validate commodity market
DO;

EXECUTE FUNCTION(Val Commodity Markets  RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1824613;
PARAMETER(DTL.Commodity_Market_Code_USR);
PARAMETER(DTL.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Commodity Market not found'
ERROR(USR2162);
MSGPARM(DTL.Commodity_Market_Code_USR);

QUIT;

ENDIF;

ENDDO;

//?Validation on market Date must be greater then or equal to current
DO;

CASE;

// IF DTL.Market Price Date GE JOB.*Job date
IF DTL.Market_Price_Date >= JOB.*Job_date;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - '&1 entered must be equal to or greater than &2.'
ERROR(USR2018);
MSGPARM(DTL.Market_Price_Date);
MSGPARM(JOB.*Job_date);

ENDIF;

ENDDO;

//?validate commodity market Price  By Market code and date
DO;

//?VAL:  CMD 11
CASE;

// IF DTL.*CMD key is CF11
IF DTL.*CMD_key = '11';

EXECUTE FUNCTION(Val CommMrktPrc/Short  RT) TYPE(RTVOBJ) FILE(OMF0CPP)          AC1824614;
PARAMETER(DTL.Commodity_Market_Code_USR);
PARAMETER(DTL.Market_Price_Date);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Commodity Mrkt Price not found.'
ERROR(USR1222);

ENDIF;

//?VAL:  CMD 11
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val CommMrktPrc/Short  RT) TYPE(RTVOBJ) FILE(OMF0CPP)          AC1824614;
PARAMETER(DTL.Commodity_Market_Code_USR);
PARAMETER(DTL.Market_Price_Date);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// Send error message - 'Commodity Mrkt Price already exists.'
ERROR(USR1223);

QUIT;

ENDIF;

ENDIF;

ENDDO;

// LCL.Day of Week (SYN) USR = DTL.Market Price Date *DAY OF WEEK
LCL.Day_of_Week_SYN_USR = DATEDTLS(DTL.Market_Price_Date 'DW' 1111111 'NONE' 'N' 1);

CASE;

// IF LCL.Day of Week (SYN) USR is Sunday
IF LCL.Day_of_Week_SYN_USR = 7;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Date entered must be a Sunday'
ERROR(USR2170);
MSGPARM(DTL.Market_Price_Date);

ENDIF;

//?USER: User defined action

CASE;

// IF DTL.*CMD key is CF11
IF DTL.*CMD_key = '11';

//?Delete function
EXECUTE FUNCTION(DLT OM Commod Mrkt/Prc RT) TYPE(RTVOBJ) FILE(OMF0CPP)          AC1821950;
PARAMETER(DTL.Market_Price_Date);
PARAMETER(DTL.Commodity_Market_Code_USR);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(DLT OM Commod Mrkt/Prc DL) TYPE(DLTOBJ) FILE(OMF0CPP)          AC1185927;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
}


// LCL.Post Flag USR = CND.Yes
LCL.Post_Flag_USR = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Crt JRD InvPrc/MktPrc  RT) TYPE(RTVOBJ) FILE(JRINPRI)          AC1821931;
PARAMETER(DTL.Commodity_Market_Code_USR);
PARAMETER(DTL.Market_Price_Date);
{
 //?USER: Process Data record

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 EXECUTE FUNCTION(Rtv Item Com Grp/Sts  RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1843776;
 PARAMETER(DB1.ITEM_NUMBER);
 PARAMETER(LCL.Commodity_Price_Group);
 PARAMETER(LCL.Record_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Record Status is *blank
 IF LCL.Record_Status = *BLANK;

 EXECUTE FUNCTION(Rtv SBD Equiv Item    RT) TYPE(RTVOBJ) FILE(OMBYREP)           AC1843748;
 PARAMETER(DB1.ITEM_NUMBER);
 PARAMETER(LCL.Record_Found_USR);
 PARAMETER(LCL.Item_Code);
 PARAMETER(LCL.Commodity_Price_Group);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

 }

 CASE;

 // IF LCL.Record Found USR is Record Found
 IF LCL.Record_Found_USR = 'Y';

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Record Status is Active
 IF LCL.Record_Status = 'A';

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 ENDIF;

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // LCL.Commodity Market Price = DB1.COST5
 LCL.Commodity_Market_Price = DB1.COST5;

 CASE;

 // IF LCL.Commodity Market Price is Not Entered
 IF LCL.Commodity_Market_Price = *ZERO;

 // LCL.Commodity Market Price = CON..01
 LCL.Commodity_Market_Price = .01;

 ENDIF;

 EXECUTE FUNCTION(CRT OM Commod Mrkt/Prc CR) TYPE(CRTOBJ) FILE(OMF0CPP)          AC1185925;
 PARAMETER(PAR.Commodity_Market_Code);
 PARAMETER(LCL.Commodity_Price_Group);
 PARAMETER(PAR.Market_Price_Date);
 PARAMETER(LCL.Commodity_Market_Price);
 PARAMETER(*ZERO);
 PARAMETER(LCL.EDI_Status_1);
 PARAMETER(LCL.EDI_Status_2);
 PARAMETER(LCL.EDI_Status_3);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


// LCL.Post Flag USR = CND.Yes
LCL.Post_Flag_USR = 'Y';

ENDIF;

//?If F11 to delete then clear workfile
CASE;

// IF DTL.*CMD key is CF11
IF DTL.*CMD_key = '11';

// Call program Zzz WF Sls/Brkr file  CL.
CALL PROGRAM(Zzz WF Sls/Brkr file  CL) ('PNHIUPC');

//?If F11 to delete then clear workfile
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Bld WF Sls/Brkr file  CL.
SBMJOB;
CALL PROGRAM(Bld WF Sls/Brkr file  CL) ('PNHJUPC');
PARAMETER(DTL.Market_Price_Date);
SBMJOBOVR JOB(BLDDMPRC);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

ENDIF;

//?USER: Exit program processing

CASE;

// IF LCL.Post Flag USR is Yes
IF LCL.Post_Flag_USR = 'Y';

// Call program Zzz Post All Open Ord XF.
CALL PROGRAM(Zzz Post All Open Ord XF) ('PMPBXFR');
PARAMETER(DTL.Market_Price_Date);

ENDIF;

