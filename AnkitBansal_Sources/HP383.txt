      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP383 - Copy Quarterly Prodiction Values
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/31/02
      *
      * FUNCTION:    This program allows users to copy 1 set of Quarterly Prediction
      *              values to another year/quarter/cell/group type.
      *              The only purpose of the COPY function is to reduce user keying time.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE       PROGRAMMER
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp083    if   e           k disk
      *  Quarterly prediction values (records selected with open query)
      *
      *
     Fhsl083a   uf a e           k disk    rename(qprec:qpreca) prefix(p1)
      *  Quarterly prediction values
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wktcdqr         s                   like(qpcdqr)
     D wktcell         s                   like(qpcell)
     D wktgtcd         s                   like(qpgtcd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfcdyr                1      4  0
     D  ldfcdqr                5      5  0
     D  ldfcell                6      7  0
     D  ldfgtcd                8      8
      *
     D  ldtcdyr                9     12  0
     D  ldtcdqr               13     13  0
     D  ldtcell               14     15  0
     D  ldtgtcd               16     16
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Process all Quarterly Prediction Value records selected by the
      * open query. These records represent the 'copy from' side of the copy.
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp083                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Set up key field values for the 'TO' side of the copy.
      *
     C                   exsr      $keys
      *
      * Now, create/update the 'TO' side record.
      *
     C                   exsr      $update
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Set up key field values for 'to' side of the copy
      *---------------------------------------------------------------
      *
     C     $keys         begsr
      *
      * Calendar quarter
     C                   if        ldtcdqr = 0
     C                   z-add     qpcdqr        wktcdqr
     C                   else
     C                   z-add     ldtcdqr       wktcdqr
     C                   endif
      *
      * Cell
     C                   if        ldtcell = 0
     C                   z-add     qpcell        wktcell
     C                   else
     C                   z-add     ldtcell       wktcell
     C                   endif
      *
      * Group type
     C                   if        ldtgtcd = *blank
     C                   move      qpgtcd        wktgtcd
     C                   else
     C                   move      ldtgtcd       wktgtcd
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Create or update the 'TO' side record
      *---------------------------------------------------------------
      *
     C     $update       begsr
      *
     C     key01         chain     hsl083a                            92
     C                   if        *in92 = *off                                 If found
     C                   exsr      $directmap
     C                   update    qpreca
     C                   else
      *
     C                   z-add     ldtcdyr       p1qpcdyr
     C                   z-add     wktcdqr       p1qpcdqr
     C                   z-add     wktcell       p1qpcell
     C                   move      wktgtcd       p1qpgtcd
     C                   exsr      $directmap
     C                   write     qpreca
     C                   endif                                                  If found
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Populate 'TO' fields with 'FROM' field values.
      *---------------------------------------------------------------
      *
     C     $directmap    begsr
      *
     C                   z-add     qpltosv       p1qpltosv
     C                   z-add     qphtosv       p1qphtosv
     C                   z-add     qpotosv       p1qpotosv
      *
     C                   z-add     qplcrpr       p1qplcrpr
     C                   z-add     qphcrpr       p1qphcrpr
     C                   z-add     qpocrpr       p1qpocrpr
      *
     C                   z-add     qplfrpr       p1qplfrpr
     C                   z-add     qphfrpr       p1qphfrpr
     C                   z-add     qpofrpr       p1qpofrpr
      *
     C                   z-add     qplfopr       p1qplfopr
     C                   z-add     qphfopr       p1qphfopr
     C                   z-add     qpofopr       p1qpofopr
      *
     C                   z-add     qplltbahd     p1qplltbahd
     C                   z-add     qphltbahd     p1qphltbahd
     C                   z-add     qpoltbahd     p1qpoltbahd
      *
     C                   z-add     qplpmpr       p1qplpmpr
     C                   z-add     qphpmpr       p1qphpmpr
     C                   z-add     qpopmpr       p1qpopmpr
      *
     C                   z-add     qplnrmpr      p1qplnrmpr
     C                   z-add     qphnrmpr      p1qphnrmpr
     C                   z-add     qponrmpr      p1qponrmpr
      *
     C                   z-add     qplfrmpr      p1qplfrmpr
     C                   z-add     qphfrmpr      p1qphfrmpr
     C                   z-add     qpofrmpr      p1qpofrmpr
      *
     C                   z-add     qplgspr       p1qplgspr
     C                   z-add     qphgspr       p1qphgspr
     C                   z-add     qpogspr       p1qpogspr
      *
     C                   z-add     qplsopr       p1qplsopr
     C                   z-add     qphsopr       p1qphsopr
     C                   z-add     qposopr       p1qposopr
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wktcell
     C                   kfld                    wktgtcd
     C                   kfld                    ldtcdyr
     C                   kfld                    wktcdqr
      *
     C                   endsr
      /eject
