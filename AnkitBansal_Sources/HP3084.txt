      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP3084
      * TITLE:       Low Inventory Report
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     05/19/04
      *
      * FUNCTION:  Builds a workfile of data for the report.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp025    if   e           k disk
      *  Group type
      *
      *
     Fhsl034m   if   e           k disk
      *  Hog group   (records selected with open query)
      *
      *
     Fhsp3084   o    e           k disk
      *  Workfile: Low inventory report
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields for date manipulation
      *
     D wkisoopdt       s               d   datfmt(*iso)
     D wkisoepdt       s               d   datfmt(*iso)
     D wkmmddyy        s               d   datfmt(*mdy)
      *
      *
      * Define parms for the generic movement program
      *
     D xxcymd          s                   like(hgopdt)
     D xxhgsn          s                   like(hghgsn)
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldfcymd                1     08  0
     D  ldtcymd                9     16  0
     D  ldper                 17     18  0
     D  ldeffl                19     19
     D  ldccyy                20     23  0
     D  ldfmdy                60     66  0
     D  ldtmdy                70     76  0
      *
     D  ldhd                 297    299  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each group selected by the open query.
      *
     C     *loval        setll     hsl034m
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsl034m                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Determine the group's inventory.
      *
     C                   if        hggscd = 'DS'
     C                   z-add     hgdsdt        xxcymd
     C                   else
     C                   z-add     ldtcymd       xxcymd
     C                   endif
      *
     C                   z-add     hghgsn        xxhgsn
     C                   call      'HPMOVE'      plist01
      *
      * If the group's inventory is equal/less than the user's specified
      * value, write the group to the workfile--except for disposed groups
      * with zero head. (Disposed with zero head is the goal; so, we don't
      * want to show these groups on this report--which the users are using
      * to find the problem groups.)
      *
     C                   select
     C                   when      hggscd = 'DS' and gpihd = 0
      *
     C                   when      gpihd <= ldhd
     C                   exsr      $wrt3084
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Write a workfile record
      *---------------------------------------------------------------
      *
     C     $wrt3084      begsr
      *
     C                   z-add     gpihd         w1inhd
      *
     C                   move      hghgcd        w1hgcd
     C                   z-add     hghgsn        w1hgsn
      *
     C                   z-add     hgfscd        w1fscd
     C                   move      hgblcd        w1blcd
     C                   move      hgrmcd        w1rmcd
      *
     C                   move      hgppcd        w1ppcd
     C                   move      hgptcd        w1ptcd
      *
     C                   z-add     hgadoi        w1adoi
      *
      * Open date
     C                   z-add     hgopdt        w1opdt
      *
     C                   if        hgopdt <> 0
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off                                 If valid date
     C     *iso          move      hgopdt        wkmmddyy
     C                   move      wkmmddyy      w1opdtmdy
     C                   endif                                                  If valid date
     C                   endif
      *
      *
      * Disposed date
     C                   z-add     hgdsdt        w1dsdt
      *
     C                   if        hgdsdt <> 0
     C     *iso          test(d)                 hgdsdt                 92
     C                   if        *in92 = *off                                 If valid date
     C     *iso          move      hgdsdt        wkmmddyy
     C                   move      wkmmddyy      w1dsdtmdy
     C                   endif                                                  If valid date
     C                   endif
      *
      * Retrieve description for Group Type
      *
     C     hggtcd        chain     hsp025                             92
     C                   if        *in92 = *off
     C                   move      gtgtds        w1gtds
     C                   endif
      *
      * Figure out the 'age' of the group.
      *
     C                   exsr      $age
      *
      * Write workfile record
      *
     C                   write     w1rec
     C                   clear                   w1rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Determine the 'age' of the group
      *---------------------------------------------------------------
      *
     C     $age          begsr
      *
      * Calculate the 'days in the phase' for the group as the difference between
      * the OPEN date and the cutoff/eop date.
      *
     C     *iso          move      ldtcymd       wkisoepdt
     C     *iso          move      w1opdt        wkisoopdt
     C     wkisoepdt     subdur    wkisoopdt     w1daysold:*d
      *
      *
      * If the Average Days Old In for the group is NOT zero,
      *        add the Average Days Old In to the Days in the Phase
      * If the Average Days Old In for the group IS zero,
      *        set the phase days to zero so the user will ultimately see an age
      *        of zero on the report and do something about it!
      *
     C                   if        w1adoi = 0
     C                   z-add     0             w1daysold
     C                   else
     C                   add       w1adoi        w1daysold
     C                   endif
      *
      * Convert total days of age into weeks/days
      *
     C                   if        w1daysold > 0
     C     w1daysold     div       7             w1agewk
     C                   mvr                     w1ageday
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *   None
      *
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    hghgsn
     C                   parm                    xxcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    todphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
     C                   endsr
      /EJECT
