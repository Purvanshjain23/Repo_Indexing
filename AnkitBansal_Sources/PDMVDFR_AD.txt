// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDMVDFR
// ?Date: 14.08.2025 Time: 03:35:15
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.PRT Printer Device = CND.Not entered
PAR.PRT_Printer_Device = *BLANK;

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.Display Prt Opt Pmt USR = CND.*YES
PAR.Display_Prt_Opt_Pmt_USR = *YES;

// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

// PAR.Error Flag            USR = CND.No
PAR.Error_Flag_USR = 'N';

//?USER: Initialize subfile control

CASE;

// IF PAR.First Time Flag is Yes
IF PAR.First_Time_Flag = 'Y';

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?R13944 DN 11/20/18-Initialize Control Positioners.
// LCL.ED Attachment Type Sts U = CTL.ED Attachment Type Sts U
LCL.ED_Attachment_Type_Sts_U = CTL.ED_Attachment_Type_Sts_U;

// LCL.ED Attachment Subtype U = CTL.ED Attachment Subtype U
LCL.ED_Attachment_Subtype_U = CTL.ED_Attachment_Subtype_U;

// LCL.ED Live with PHIS USR = CTL.ED Live with PHIS USR
LCL.ED_Live_with_PHIS_USR = CTL.ED_Live_with_PHIS_USR;

//?USER: Initialize subfile record from DBF record

// RCD.Export Document Desc = Condition name of RCD.ED Export Document Type
RCD.Export_Document_Desc = RTVCND(RCD.ED_Export_Document_Type);

//?W114372 DN 11/17/22-Override Doc Desc for CHN Co 360/440 Doc Type L & U.
CASE;

// IF RCD.Country Code is China
IF RCD.Country_Code = 'CHN';

CASE;

// IF RCD.Company Number is Guymon
IF RCD.Company_Number = 360;

// OR RCD.Company Number is Seaboard Triumph Foods
OR RCD.Company_Number = 440;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// RCD.Export Document Desc = CND.Blank
RCD.Export_Document_Desc = *BLANK;

// RCD.Export Document Desc = CON.Letterhead-Casings Only
RCD.Export_Document_Desc = 'Letterhead-Casings Only';

// IF RCD.ED Export Document Type is Letterhead- CF1
IF RCD.ED_Export_Document_Type = 'U';

// RCD.Export Document Desc = CND.Blank
RCD.Export_Document_Desc = *BLANK;

// RCD.Export Document Desc = CON.Letterhead-Pork to Export
RCD.Export_Document_Desc = 'Letterhead-Pork to Export';

ENDIF;

ENDIF;

ENDIF;

CASE;

// IF DB1.Company Number NE CTL.Company Number
IF DB1.Company_Number <> CTL.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?R13944 DN 11/20/18-Select by User Defined CTL Positioners & Save Original.
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

// RCD.ED Live with PHIS USR = RCD.ED Live with PHIS
RCD.ED_Live_with_PHIS_USR = RCD.ED_Live_with_PHIS;

// RCD.ED Attachment Type Sts U = RCD.ED Attachment Type Sts
RCD.ED_Attachment_Type_Sts_U = RCD.ED_Attachment_Type_Sts;

// RCD.ED Attachment Subtype U = RCD.ED Attachment Subtype
RCD.ED_Attachment_Subtype_U = RCD.ED_Attachment_Subtype;

//?Select by Live with PHIS.
CASE;

// IF CTL.ED Live with PHIS USR is blank
IF CTL.ED_Live_with_PHIS_USR = *BLANK;

// OR CTL.ED Live with PHIS USR EQ RCD.ED Live with PHIS USR
OR CTL.ED_Live_with_PHIS_USR = RCD.ED_Live_with_PHIS_USR;

//?Select by Live with PHIS.
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select by Attachment Type.
CASE;

// IF CTL.ED Attachment Type Sts U is Not Selected
IF CTL.ED_Attachment_Type_Sts_U = *BLANK;

// OR CTL.ED Attachment Type Sts U EQ RCD.ED Attachment Type Sts U
OR CTL.ED_Attachment_Type_Sts_U = RCD.ED_Attachment_Type_Sts_U;

//?Select by Attachment Type.
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Select by Attachment Subtype.
CASE;

// IF CTL.ED Attachment Subtype U is Not Selected
IF CTL.ED_Attachment_Subtype_U = *BLANK;

// OR CTL.ED Attachment Subtype U EQ RCD.ED Attachment Subtype U
OR CTL.ED_Attachment_Subtype_U = RCD.ED_Attachment_Subtype_U;

//?Select by Attachment Subtype.
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?R13944 DN 11/20/18-Reload Subfile When User Defined Selector Changes.
CASE;

// IF CTL.ED Attachment Type Sts U NE LCL.ED Attachment Type Sts U
IF CTL.ED_Attachment_Type_Sts_U <> LCL.ED_Attachment_Type_Sts_U;

// OR CTL.ED Attachment Subtype U NE LCL.ED Attachment Subtype U
OR CTL.ED_Attachment_Subtype_U <> LCL.ED_Attachment_Subtype_U;

// OR CTL.ED Live with PHIS USR NE LCL.ED Live with PHIS USR
OR CTL.ED_Live_with_PHIS_USR <> LCL.ED_Live_with_PHIS_USR;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?F4= prompt
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.Company Number
IF PGM.*Cursor_field = CTL.Company_Number;

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(CTL.Company_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> CTL.Country Code
IF PGM.*Cursor_field = CTL.Country_Code;

// Call program SEL Country Active     SR.
CALL PROGRAM(SEL Country Active     SR) ('PDEGSRR');
PARAMETER(CTL.Country_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?F6= Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// Call program Pmt Crt Default Rcd    PV.
CALL PROGRAM(Pmt Crt Default Rcd    PV) ('PDOFPVR');

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Edit
CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

CASE;

// IF RCD.ED Export Document Type is Application for Export
IF RCD.ED_Export_Document_Type = 'A';

// Call program Edt Appl For Export Df ER.
CALL PROGRAM(Edt Appl For Export Df ER) ('PONJE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

QUIT;

ENDIF;

//?Canada --
CASE;

// IF RCD.Country Code is Canada
IF RCD.Country_Code = 'CAN';

CASE;

// IF RCD.ED Export Document Type is Customs Invoice
IF RCD.ED_Export_Document_Type = 'C';

// OR RCD.ED Export Document Type is Customs Invoice-Willson
OR RCD.ED_Export_Document_Type = 'W';

// Call program Edt Canad CstmInv Dflt ER.
CALL PROGRAM(Edt Canad CstmInv Dflt ER) ('PDNGE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Canad MPD Dflts   ER.
CALL PROGRAM(Edt Canad MPD Dflts   ER) ('PDNAE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Intent to Import
IF RCD.ED_Export_Document_Type = 'I';

// Call program Edt Canad Intent to Im ER.
CALL PROGRAM(Edt Canad Intent to Im ER) ('PDNEE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.TWN
WRK.Country_Code = 'TWN';

//?Taiwan --
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Form 9290
IF RCD.ED_Export_Document_Type = 'E';

// Call program Edt Taiw Form 9285 Dft ER.
CALL PROGRAM(Edt Taiw Form 9285 Dft ER) ('POMCE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Taiw MPD Dflts  ER.
CALL PROGRAM(Edt Taiw MPD Dflts  ER) ('PDM5E2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

// WRK.Country Code = CON.JAP
WRK.Country_Code = 'JAP';

// WRK.USR Country Code = CON.JPN
WRK.USR_Country_Code = 'JPN';

//?Japan ---
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

// OR RCD.Country Code EQ WRK.USR Country Code
OR RCD.Country_Code = WRK.USR_Country_Code;

CASE;

// IF RCD.ED Export Document Type is Form 9290
IF RCD.ED_Export_Document_Type = 'E';

// Call program Edt Japan Form 9290    ER.
CALL PROGRAM(Edt Japan Form 9290    ER) ('PDNDE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Japan MPD    Dflts ER.
CALL PROGRAM(Edt Japan MPD    Dflts ER) ('PDM7E2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead-JPN 3rd Cntry
IF RCD.ED_Export_Document_Type = 'J';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

// WRK.Country Code = CON.KOR
WRK.Country_Code = 'KOR';

//?Korea --
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Korea MPD Dflts ER.
CALL PROGRAM(Edt Korea MPD Dflts ER) ('PDM6E2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Form 9290
IF RCD.ED_Export_Document_Type = 'E';

// Call program Edt Kor Form 9305 Dft ER.
CALL PROGRAM(Edt Kor Form 9305 Dft ER) ('POI5E2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Kor Crt of Org Dft ER.
CALL PROGRAM(Edt Kor Crt of Org Dft ER) ('PPEGE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

// WRK.Country Code = CON.CHN
WRK.Country_Code = 'CHN';

// WRK.Country Code          USR = CON.HKG
WRK.Country_Code_USR = 'HKG';

//?DN 03/18/22 DO2416-Updated Country Code ISO 3 Standard for South Africa.
//?China/Hong Kong /South Africa
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

// OR RCD.Country Code EQ WRK.Country Code          USR
OR RCD.Country_Code = WRK.Country_Code_USR;

// OR RCD.Country Code is South Africa
OR RCD.Country_Code = 'ZAF';

CASE;

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt China MPD    Dflts ER.
CALL PROGRAM(Edt China MPD    Dflts ER) ('POKTE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Form 9290
IF RCD.ED_Export_Document_Type = 'E';

// Call program Edt China 9295   Dflts ER.
CALL PROGRAM(Edt China 9295   Dflts ER) ('POLAE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Form 9060-7 (Casings)
IF RCD.ED_Export_Document_Type = 'G';

// Call program Edt China 9060-7 Dflts ER.
CALL PROGRAM(Edt China 9060-7 Dflts ER) ('PBD0E2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead- CF1
IF RCD.ED_Export_Document_Type = 'U';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

// WRK.Country Code = CON.MEX
WRK.Country_Code = 'MEX';

//?Mexico ----
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Mexico MPD   Dflts ER.
CALL PROGRAM(Edt Mexico MPD   Dflts ER) ('POKVE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Form 9290
IF RCD.ED_Export_Document_Type = 'E';

// IF RCD.ED Export Document Type is Form 9060-7 (Casings)
IF RCD.ED_Export_Document_Type = 'G';

// Call program Edt China 9060-7 Dflts ER.
CALL PROGRAM(Edt China 9060-7 Dflts ER) ('PBD0E2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Not Mex re-export to Jpn
IF RCD.ED_Export_Document_Type = 'N'/'L'/'R'/'S'/'P'/'Q'/'T'/'J'/'U';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead-Pork to Mex-Jp
IF RCD.ED_Export_Document_Type = 'M';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead-Casings
IF RCD.ED_Export_Document_Type = 'T';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

// WRK.Country Code = CON.AUS
WRK.Country_Code = 'AUS';

//?Australia --- RMC 3/9/05
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Australia MPD Dflt ER.
CALL PROGRAM(Edt Australia MPD Dflt ER) ('PPKXE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Form 9290/9285/9295/9115
IF RCD.ED_Export_Document_Type = 'E';

// Call program Edt Australia Vet 9115 ER.
CALL PROGRAM(Edt Australia Vet 9115 ER) ('PPUIE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

// WRK.Country Code = CON.RUS
WRK.Country_Code = 'RUS';

//?Russia    --- RMC 5/03/06
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Form 9290/9285/9295/9115
IF RCD.ED_Export_Document_Type = 'E';

// Call program Edt Russia 9450-3 dft ER.
CALL PROGRAM(Edt Russia 9450-3 dft ER) ('PPX7E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

QUIT;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.CRI
WRK.Country_Code = 'CRI';

//?Costa rica--- RMC 11/09/09
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.NZL
WRK.Country_Code = 'NZL';

//?new zealand - RMC 04/09/12
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.CHL
WRK.Country_Code = 'CHL';

//?Chile     --- RMC 10/27/10
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

//?R13944 DN 1/10/19-Call new Chile Letterhead Screen.
// Call program Edt Chile Letterheads  ER.
CALL PROGRAM(Edt Chile Letterheads  ER) ('PUKXE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

// WRK.Country Code = CON.COL
WRK.Country_Code = 'COL';

//?Colombia  --- RMC 10/27/10
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.MYS
WRK.Country_Code = 'MYS';

//?Malaysia  --- RMC 10/27/10
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

// WRK.Country Code = CON.NIC
WRK.Country_Code = 'NIC';

//?Nicaragua --- RMC 11/02/10
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.SGP
WRK.Country_Code = 'SGP';

//?Singapore --- RMC 11/02/10
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

// WRK.Country Code = CON.AGO
WRK.Country_Code = 'AGO';

//?Angola    --- RMC 09/30/11
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

//?DN 03/18/22 DO2416-Updated to Country Code ISO 3 Standard.
// WRK.Country Code = CON.VNM
WRK.Country_Code = 'VNM';

//?Vietnam   --- RMC 11/02/10
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Certificate of Origin
IF RCD.ED_Export_Document_Type = 'O';

// Call program Edt Jpn Crt of Org Dft ER.
CALL PROGRAM(Edt Jpn Crt of Org Dft ER) ('PONFE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// IF RCD.ED Export Document Type is Letterhead-Offal(Organs)
IF RCD.ED_Export_Document_Type = 'S';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

// WRK.Country Code = CON.PER
WRK.Country_Code = 'PER';

//?Peru      --- RMC 01/30/20
CASE;

// IF RCD.Country Code EQ WRK.Country Code
IF RCD.Country_Code = WRK.Country_Code;

CASE;

// IF RCD.ED Export Document Type is Letterhead-Pork to Export
IF RCD.ED_Export_Document_Type = 'L';

// Call program Edt Export Letterheads ER.
CALL PROGRAM(Edt Export Letterheads ER) ('PNI2E1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

ENDIF;

ENDIF;

//?*********   S00781                               *****
//?*** call generic MPH pgm for all other countries *****
CASE;

// IF RCD.ED Export Document Type is MPD
IF RCD.ED_Export_Document_Type = 'H';

// Call program Edt Hondur MPD   Dflts ER.
CALL PROGRAM(Edt Hondur MPD   Dflts ER) ('PPXHE2R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

QUIT;

ENDIF;

ENDIF;

//?3=Copy Defaults
CASE;

// IF RCD.*SFLSEL is *Copy request
IF RCD.*SFLSEL = '3'/'3';

// Call program PMT Copy Dflts to new  PV.
CALL PROGRAM(PMT Copy Dflts to new  PV) ('PDNIPVR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?R13944 DN 12/14/18-Validate Attachment Type / Subtype.
CASE;

// IF RCD.ED Attachment Type Sts U is Supplemental
IF RCD.ED_Attachment_Type_Sts_U = '1';

// AND RCD.ED Attachment Subtype U is Not Selected
AND RCD.ED_Attachment_Subtype_U = *BLANK;

// Send error message - 'Attachment Subtype is required.'
ERROR(USR5094);
MSGPARM(RCD.ED_Attachment_Subtype_U);

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

QUIT;

//?R13944 DN 12/14/18-Validate Attachment Type / Subtype.
// IF RCD.ED Attachment Type Sts U is Supporting
IF RCD.ED_Attachment_Type_Sts_U = '2';

// AND NOT RCD.ED Attachment Subtype U is Not Selected
AND ! RCD.ED_Attachment_Subtype_U = *BLANK;

// RCD.ED Attachment Subtype U = CND.Not Selected
RCD.ED_Attachment_Subtype_U = *BLANK;

// Send information message - '&1'
MESSAGE(USR4976 *INFO);
MSGPARM('Subtype not required.');

ENDIF;

//?R13944 DN 12/14/18-Validate ED Live with PHIS.
CASE;

// IF RCD.ED Export Document Type is Application for Export
IF RCD.ED_Export_Document_Type = 'A';

//?Value Cannot be 'O' (Overlay Doc).
CASE;

// IF RCD.ED Live with PHIS USR is Overlay Doc
IF RCD.ED_Live_with_PHIS_USR = 'O';

// Send error message - 'Value &1 is not allowed for Doc Type &2.'
ERROR(USR5099);
MSGPARM(RCD.ED_Live_with_PHIS_USR);
MSGPARM(RCD.ED_Export_Document_Type);

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

QUIT;

ENDIF;

//?R13944 DN 12/14/18-Validate ED Live with PHIS.
// IF NOT RCD.ED Export Document Type is Application for Export
IF ! RCD.ED_Export_Document_Type = 'A';

//?Value Cannot be 'Y or N'.
CASE;

// IF RCD.ED Live with PHIS USR is yes
IF RCD.ED_Live_with_PHIS_USR = 'Y';

// OR RCD.ED Live with PHIS USR is no
OR RCD.ED_Live_with_PHIS_USR = 'N';

// Send error message - 'Value &1 is not allowed for Doc Type &2. Select Blank or O.'
ERROR(USR5100);
MSGPARM(RCD.ED_Live_with_PHIS_USR);
MSGPARM(RCD.ED_Export_Document_Type);

// PAR.Error Flag            USR = CND.Yes
PAR.Error_Flag_USR = 'Y';

QUIT;

ENDIF;

ENDIF;

//?R13944 DN 12/14/18-Update if Live w/ PHIS & Attach Type/Subtype Changed.
CASE;

// IF RCD.ED Attachment Type Sts U NE RCD.ED Attachment Type Sts
IF RCD.ED_Attachment_Type_Sts_U <> RCD.ED_Attachment_Type_Sts;

// OR RCD.ED Attachment Subtype U NE RCD.ED Attachment Subtype
OR RCD.ED_Attachment_Subtype_U <> RCD.ED_Attachment_Subtype;

// OR RCD.ED Live with PHIS USR NE RCD.ED Live with PHIS
OR RCD.ED_Live_with_PHIS_USR <> RCD.ED_Live_with_PHIS;

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

ENDIF;

//?USER: Final processing (Pre-confirm)

//?R13944 DN 11/20/18-Only Reload if No Errors.
CASE;

// IF PAR.Error Flag            USR is No
IF PAR.Error_Flag_USR = 'N';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Del Exp Doc Defaults   DL) TYPE(DLTOBJ) FILE(PDMMREP)          AC1523772;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?R13944 DN 12/14/18-Update if Live w/ PHIS & Attach Type/Subtype Changed.
CASE;

// IF RCD.ED Attachment Type Sts U NE RCD.ED Attachment Type Sts
IF RCD.ED_Attachment_Type_Sts_U <> RCD.ED_Attachment_Type_Sts;

// OR RCD.ED Attachment Subtype U NE RCD.ED Attachment Subtype
OR RCD.ED_Attachment_Subtype_U <> RCD.ED_Attachment_Subtype;

// OR RCD.ED Live with PHIS USR NE RCD.ED Live with PHIS
OR RCD.ED_Live_with_PHIS_USR <> RCD.ED_Live_with_PHIS;

EXECUTE FUNCTION(Chg PHIS Info          CH) TYPE(CHGOBJ) FILE(PDMMREP)          AC2160817;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.ED_Export_Document_Type);
PARAMETER(RCD.Country_Code);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(*MISSING);
PARAMETER(RCD.ED_Attachment_Subtype_U);
PARAMETER(RCD.ED_Attachment_Type_Sts_U);
PARAMETER(RCD.ED_Live_with_PHIS_USR);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


// PAR.Error Flag            USR = CND.No
PAR.Error_Flag_USR = 'N';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

