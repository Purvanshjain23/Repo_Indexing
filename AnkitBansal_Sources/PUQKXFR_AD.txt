// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUQKXFR
// ?Date: 14.08.2025 Time: 03:51:07
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?**************************************************************************
//?** PR1 Parms Represent Old Record Fields (Will be blank for Insert).
//?** PR2 Parms Represent New Record Fields (Will be blank for Delete).
//?**************************************************************************
//?Trigger Processing for Insert Event.
CASE;

// IF PR3.TRG Database Event is Insert
IF PR3.TRG_Database_Event = '1';

EXECUTE FUNCTION(Crt Item Bal Dtl TRG   CR) TYPE(CRTOBJ) FILE(PUB0CPP)          AC2183328;
PARAMETER(PR2.Company_Number);
PARAMETER(PR2.Item_Code);
PARAMETER(PR2.Warehouse_Code);
PARAMETER(PR2.Production_Date);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.IBD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


ENDIF;

//?Trigger Processing for Update Event.
CASE;

// IF PR3.TRG Database Event is Update
IF PR3.TRG_Database_Event = '3';

//?Update If Any Non-Key Fields Have Changed.
CASE;

// IF PR1.Physical Count Weight NE PR2.Physical Count Weight
IF PR1.Physical_Count_Weight <> PR2.Physical_Count_Weight;

// OR PR1.Physical Count Qty - U/M1 NE PR2.Physical Count Qty - U/M1
OR PR1.Physical_Count_Qty_UOM1 <> PR2.Physical_Count_Qty_UOM1;

// OR PR1.Physical Count Qty - U/M2 NE PR2.Physical Count Qty - U/M2
OR PR1.Physical_Count_Qty_UOM2 <> PR2.Physical_Count_Qty_UOM2;

// OR PR1.Physical Count Qty - U/M3 NE PR2.Physical Count Qty - U/M3
OR PR1.Physical_Count_Qty_UOM3 <> PR2.Physical_Count_Qty_UOM3;

// OR PR1.Physical Count Status NE PR2.Physical Count Status
OR PR1.Physical_Count_Status <> PR2.Physical_Count_Status;

// OR PR1.Quantity on Hand - Weight NE PR2.Quantity on Hand - Weight
OR PR1.Quantity_on_Hand_Weight <> PR2.Quantity_on_Hand_Weight;

// OR PR1.Quantity on Hand - U/M1 NE PR2.Quantity on Hand - U/M1
OR PR1.Quantity_on_Hand_UOM1 <> PR2.Quantity_on_Hand_UOM1;

// OR PR1.Quantity on Hand - U/M2 NE PR2.Quantity on Hand - U/M2
OR PR1.Quantity_on_Hand_UOM2 <> PR2.Quantity_on_Hand_UOM2;

// OR PR1.Quantity on Hand - U/M3 NE PR2.Quantity on Hand - U/M3
OR PR1.Quantity_on_Hand_UOM3 <> PR2.Quantity_on_Hand_UOM3;

// OR PR1.Quantity In Chill NE PR2.Quantity In Chill
OR PR1.Quantity_In_Chill <> PR2.Quantity_In_Chill;

// OR PR1.Weight In Chill NE PR2.Weight In Chill
OR PR1.Weight_In_Chill <> PR2.Weight_In_Chill;

// OR PR1.Update Exception Status NE PR2.Update Exception Status
OR PR1.Update_Exception_Status <> PR2.Update_Exception_Status;

// OR PR1.Physical Start Weight NE PR2.Physical Start Weight
OR PR1.Physical_Start_Weight <> PR2.Physical_Start_Weight;

// OR PR1.Physical Start U/M1 NE PR2.Physical Start U/M1
OR PR1.Physical_Start_UOM1 <> PR2.Physical_Start_UOM1;

// OR PR1.Physical Start U/M2 NE PR2.Physical Start U/M2
OR PR1.Physical_Start_UOM2 <> PR2.Physical_Start_UOM2;

// OR PR1.Physical Start U/M3 NE PR2.Physical Start U/M3
OR PR1.Physical_Start_UOM3 <> PR2.Physical_Start_UOM3;

// OR PR1.Physical Start Date NE PR2.Physical Start Date
OR PR1.Physical_Start_Date <> PR2.Physical_Start_Date;

// OR PR1.Unit Cost Per Pound NE PR2.Unit Cost Per Pound
OR PR1.Unit_Cost_Per_Pound <> PR2.Unit_Cost_Per_Pound;

// OR PR1.Last Cost NE PR2.Last Cost
OR PR1.Last_Cost <> PR2.Last_Cost;

// OR PR1.Value of On Hand Inventor NE PR2.Value of On Hand Inventor
OR PR1.Value_of_On_Hand_Inventor <> PR2.Value_of_On_Hand_Inventor;

// OR PR1.Label Date NE PR2.Label Date
OR PR1.Label_Date <> PR2.Label_Date;

// OR PR1.Item Structure Class Code NE PR2.Item Structure Class Code
OR PR1.Item_Structure_Class_Code <> PR2.Item_Structure_Class_Code;

// OR PR1.Item Structure Group Code NE PR2.Item Structure Group Code
OR PR1.Item_Structure_Group_Code <> PR2.Item_Structure_Group_Code;

// OR PR1.Item Structure Type Code NE PR2.Item Structure Type Code
OR PR1.Item_Structure_Type_Code <> PR2.Item_Structure_Type_Code;

// OR PR1.EDI Status 1 NE PR2.EDI Status 1
OR PR1.EDI_Status_1 <> PR2.EDI_Status_1;

// OR PR1.EDI Status 2 NE PR2.EDI Status 2
OR PR1.EDI_Status_2 <> PR2.EDI_Status_2;

// OR PR1.EDI Status 3 NE PR2.EDI Status 3
OR PR1.EDI_Status_3 <> PR2.EDI_Status_3;

// OR PR1.Record Status NE PR2.Record Status
OR PR1.Record_Status <> PR2.Record_Status;

EXECUTE FUNCTION(Crt Item Bal Dtl TRG   CR) TYPE(CRTOBJ) FILE(PUB0CPP)          AC2183328;
PARAMETER(PR2.Company_Number);
PARAMETER(PR2.Item_Code);
PARAMETER(PR2.Warehouse_Code);
PARAMETER(PR2.Production_Date);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.IBD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


ENDIF;

ENDIF;

//?Trigger Processing for Delete Event.
CASE;

// IF PR3.TRG Database Event is Delete
IF PR3.TRG_Database_Event = '2';

EXECUTE FUNCTION(Crt Item Bal Dtl TRG   CR) TYPE(CRTOBJ) FILE(PUB0CPP)          AC2183328;
PARAMETER(PR1.Company_Number);
PARAMETER(PR1.Item_Code);
PARAMETER(PR1.Warehouse_Code);
PARAMETER(PR1.Production_Date);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.IBD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


//?W109570 DN 09/29/22-If Record Already Exist.
CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// Call program RTV System Date/Time   UP.
CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
PARAMETER(LCL.Current_System_Date);
PARAMETER(LCL.Current_System_Time);

// WRK.Current System Time = LCL.Current System Time
WRK.Current_System_Time = LCL.Current_System_Time;

//?Loop Until System Time Changes.
// DOW LCL.Current System Time EQ WRK.Current System Time
DOW LCL.Current_System_Time = WRK.Current_System_Time;

// Call program RTV System Date/Time   UP.
CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
PARAMETER(LCL.Current_System_Date);
PARAMETER(WRK.Current_System_Time);

ENDDO;

EXECUTE FUNCTION(Crt Item Bal Dtl TRG   CR) TYPE(CRTOBJ) FILE(PUB0CPP)          AC2183328;
PARAMETER(PR1.Company_Number);
PARAMETER(PR1.Item_Code);
PARAMETER(PR1.Warehouse_Code);
PARAMETER(PR1.Production_Date);
PARAMETER(PR3.TRG_Database_Event);
PARAMETER(0);
PARAMETER(*ZERO);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Timestamp TS#     IF) TYPE(EXCINTFUN)                      AC2131367;
 PARAMETER(DB1.IBD_Timestamp);
 {
  //?Execute internal function

  // PAR.@Timestamp TS# = JOB.*System timestamp
  PAR.@Timestamp_TS# = JOB.*System_timestamp;

 }

}


ENDIF;

ENDIF;

