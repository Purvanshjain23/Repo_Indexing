     F*****************************************************************
     H*
     H*  Program number:  HPEVCHW - CRT VOUCHERS FOR JDE WORLD
     H*  Program name:    CREATE VOUCHERS IN JDE FOR PAYMENT
     H*  Programmer:      BARB GUTIERREZ
     H*  Date created:    05/31/95
     H*  Program purpose: CREATE VOUCHERS FOR EXTERNAL PRODUCERS AND
     H*                   TRUCKERS IN JDE.  IF THE ERR CODE PASSED IN
     H*                   = 'Y', THE RECORDS WILL BE WRITTEN AS
     H*                   UNPOSTED.  IF IT'S 'N', THE RECORDS WILL BE
     H*                   WRITTEN AS POSTED, READY FOR PAYMENT.
     H***
     H*                   WILL CREATE JOURNAL ENTRIES FOR ALL INTERNALS.
     H*                   WILL CREATE MANUAL CHECK ENTRIES FOR ALL     .
     H*                   MANUAL CHECKS.                               .
     H***
     H*                   ONLY PROCESS RECORDS WITH A STATUS OF 'C'.
     H***
     H*                   WILL UPDATE THE VOUCHER HEADER WITH THE
     H*                   DOCUMENT NUMBER ASSIGNED IN JDE AND CHANGE   E
     H*                   THE STATUS CODE TO BE A 'P'. (PROCESSED)
     H*
     H*                   IF THE BATCH IS WRITTEN AS POSTED, THE
     H*                   JDE BALANCE FILE (F0902) WILL ALSO BE UPDATED
     H***
     H*                   THE USER MUST THEN GO INTO JDE TO ACTUALLY
     H*                   SELECT THE CHECKS FOR PRINT (IF NOT A MANUAL
     H*                   CHECK) OR MAKE ANY CORRECTIONS.
     H***
     H***  **** NOTE ****
     H***
     H***    IF IT IS DETERMINED THAT THERE WILL BE ONE STANDARD
     H***    CONTRA COST CENTER WHILE I AM OFF ON MATERNITY LEAVE,
     H***    SCAN FOR BG111695 AND DO WHAT IT SAYS....
     H***
     H*  Modified by:     BARB GUTIERREZ             02/01/96
     H***                 Corrected problem of the contra accounts not
     H***                 posting correctly.  Swapped the Debit and
     H***                 the Credit account numbers.
     H***
     H*  Modified by:     BARB GUTIERREZ             02/09/96
     H***                 Do not print the deduction description on the
     H***                 voucher report.  Removed the write to field
     H***                 glexr when reading the tatoo D/A file.
     H***                 scan: BLG 02/09/96
     H*  Modified by:     BARB GUTIERREZ             03/06/96
     H***                 Corrected problem when writing the tatoo d/a
     H***                 record.  We were not setting up the acct i.d.
     H***                 Therefore the i.d. and the object/sub didn't
     H***                 match. scan: BLG030696
     H*  Modified by:     BARB GUTIERREZ             03/14/96
     H***                 Changed to not write a 911 record if the
     H***                 amount field is zero.  Scan: BLG031496
     H*  Modified by:     BARB GUTIERREZ             05/14/96
     H***                 JDE Release A7.1 changes.  F0411 has been
     H***                 split into 3 separate files.  (F0411, F0413
     H***                 and F0414).
     H***                 Dates are now stored in JDE in Julian
     H***                 format instead of separate fields for month,
     H***                 day, year and century.
     H***                 New fields in F0011 - ICPOB and ICIBOI.
     H*  Modified by:     BARB GUTIERREZ             07/03/96
     H***                 Commented out the write of the AE records and
     H***                 the balance file since we are writing
     H***                 unposted batches.  Scan for AE
     H***                 Also commented out file F0012.  This is only
     H***                 used in the AE subroutine.
     H*  Modified by:     BARB GUTIERREZ             08/16/96
     H***                 Commented out the write of the F0902 file
     H***                 and all associated fields in the file with a
     H***                 prefix of GB since we are writing unposted
     H***                 batches.  The balance file only gets updated
     H***                 when a batch is posted.
     H*  Modified by:     BARB GUTIERREZ             09/24/96
     H***                 Corrected problem with Internals.  If there
     H***                 were held overs, the inter-company record was
     H***                 getting written at LR causing the journal
     H***                 entry to be out of balance.  Changed to write
     H***                 the inter-company record every time a record
     H***                 is read from the HPE voucher header file.
     H*  Modified by:     BARB GUTIERREZ             10/09/96
     H***                 Corrected problem with Internals.  We were
     H***                 not updating the amount in JDE correctly for
     H***                 the intercompany.  Also fixed missing doc
     H***                 type & batch type at LR
     H*  Modified by:     BARB GUTIERREZ             10/22/96
     H***                 Corrected problem with Internals.  When
     H***                 fixing problem with not writing the batch
     H***                 type on internals, I moved some code.  In
     H***                 doing this I was not setting up the key to
     H***                 write to i0011.
     H*  Modified by:     ROSE CENTONZE              11/19/96
     H***                 RECOMPILE FOR PKCDCPL1 DDS CHANGE
     H*  Modified by:     BARB GUTIERREZ             01/08/97
     H***                 CHANGED TO NOT WRITE THE CONTRA ACCOUNT
     H***                 RECORDS WHEN THE CONTRA ACCOUNT IS BLANK IN
     H***                 THE TATOO D/A FILE.
     H*  Modified by:     BARB GUTIERREZ             03/18/97
     H***                 When processing the tatoo d/a file, if the
     H***                 expense type = F and the Expense paid by is
     H***                 = S, use the cost center, object & sub
     H***                 retrieved from the voucher detail file to
     H***                 post to.  This is because Seaboard may be
     H***                 paying the freight instead of the producer.
     H***                 Scan:  BG031897
     H*  Modified by:     BARB GUTIERREZ             05/05/97
     H***                 Retrieve the payment instrument type from
     H***                 file F0401 for each vendor to determine
     H***                 if the check should be direct deposited or
     H***                 not.  If it's a 'T', it should be.  Otherwise
     H***                 it will be a 'C' for Check to be cut.
     H***                 Scan:  BG050597
     H*  Modified by:     BARB GUTIERREZ             06/27/97
     H***                 Corrected problem with the suffix number in
     H***                 f0411 (RPSFX) not getting incremented on
     H***                 a split producer.  SCAN:  BG062797
     H*  Modified by:     BARB GUTIERREZ             03/02/98
     H***                 Corrected problem with a split producer that
     H***                 had 2 different tatoos.  One was live and one
     H***                 was carcass merrit.  When writing the f0911 record,
     H***                 we wrote both tattoos with the net amount from the
     H***                 HPE header record instead of the HPE detail record.
     H***                 Scan:  BG980302
      *
      *  Modified by:     BARB GUTIERREZ             12/09/98
      *                   ADDED PROCESSING FOR COMMISSION CHECKS.
      *                   ALSO FIXED PROBLEM OF NOT WRITING MANUAL
      *                   CHECKS (PN) RECORD TO THE 911 FOR TRUCKERS.
      *                   Scan:  BG981209
      *  Modified by:     ROSE CENTONZE              02/29/00
      *                   FOR SPLIT CHECKS, MOVE THE REMARKS INTO
      *                   THE F0411 REMARKS FIELD.
      *                   Scan:  RC000229
      *  Modified by:     BARB GUTIERREZ             03/06/00
      *                   RETRIEVE THE G/L OFFSET BY RETRIEVING THE G/L
      *                   CLASS CODE (A6APC) FROM THE VENDOR MASTER
      *                   (F0401).
      *                   CALL:  C10115
      *                   Scan:  BG000306
      *  Modified by:     BARB GUTIERREZ             05/01/01
      *                   CHANGED THE DEFAULT OF THE PAYMENT INSTRUMENT
      *                   TYPE FROM C TO H.  ALSO CHANGED THE DIRECT
      *                   DEPOSIT PAYMENT INSTRUMENT TYPE FROM T TO E.
      *                   THIS IS BEING DONE SO WE DON'T HAVE TO HAVE
      *                   THIS PROGRAM LIVING IN STAGEGUY.
      *                   Scan:  BG010501
      *  Modified by:     BARB GUTIERREZ             05/31/01
      *                   ADDED THE INTERCO SALES JOURNAL ENTRY.
      *                   Scan:  BG010531
      *  Modified by:     BARB GUTIERREZ             07/11/01
      *                   CORRECTED PROBLEM WITH G/L DATE ON THE
      *                   INTERCO SALES JOURNAL ENTRY.  NEEDS TO BE
      *                   THE DATE FROM THE VOUCHER HEADER FILE NOT THE
      *                   BATCH DATE.
      *                   Scan:  BG010711
      *  Modified by:     PURVA DROGE                12/15/03
      *                   CORRECTED PROBLEM CALLING PKTIXFR
      *  Modified by:     BARB GUTIERREZ             08/08/05
      *                   Added the ability to process transportation allowance
      *                   payments.  These allowance payments will be a
      *                   deduction in the tatoo D/A file.  These allowances
      *                   will be written to the G/L with a subledger.  The
      *                   subledger will the vendor id for the producer or
      *                   the producer location depending upon what level the
      *                   the allowance is applied in HPE.  See subroutine
      *                   @PRLOC.
      *  Modified by:     BARB GUTIERREZ             11/08/05
      *                   . Rewrote program to be more modularized.
      *                   . Removed all commented out code. Most of it had
      *                     been commented out so long ago that it junked up
      *                     the pgm making it hard to follow.
      *                   . Made pgm multi company capable allowing for vouchers
      *                     to be cut for producers of Triumph Foods.
      *  Modified by:     BARB GUTIERREZ             12/12/05
      *                   . Added the ability for Triumph Foods to process
      *                     HPE payments.
      *                   . Removed the hard coding of user = HOGBUY
      *                   . Added subroutine TRALL
      *                   . Changed the processing of the payment instrument
      *                     type.  If TF, default in an "S", otherwise it's an
      *                     "H".  This value could get overriden from the value
      *                     in the vendor master.
      *  Modified by:     BARB GUTIERREZ             01/18/06
      *                   . Changed to write out the gross amount to the
      *                     purchase account instead of the net and all of the
      *                     Lean Premium, Yield, etc amounts.
      *                   . Fixed the transporation allowance for Triumph.
      *                     We were writing the account out twice.
      *  Modified by:     BARB GUTIERREZ             01/24/06
      *                   . Fixed problem with the transportation allowance
      *                     not writing out.  Also need to make sure the
      *                     expense account is written out as a negative and
      *                     the balance sheet account is a positive.
      *  Modified by:     BARB GUTIERREZ             03/10/06
      *                   . Per project TFS021 concatenate the tatoo number
      *                     onto the end of the invoice number for trucker
      *                     payments.
      *  Modified by:     Barb Gutierrez             08/08/08
      *                   Changed the parm list on the call to PKTHXFR to add
      *                   the source producer code.  Triumph needs to be able
      *                   to keep members vs non-members separate.  This is for
      *                   project FP1284.
      *  Modified by:     Barb Gutierrez             09/08/08
      *                   Split payments were not written to the voucher header/
      *                   detail files correctly.  Once this change was made, it
      *                   was determined the account number was not updated
      *                   for splits in JDE.  Dan Schmerbach said splits never
      *                   had an account number but since there wasn't that
      *                   many, he just manually fixed.  Fixed pgm to populate
      *                   the account number.  See project S00445.
      *  Modified by:     Barb Gutierrez             12/22/08
      *                   Need to accumulate the Tatoo D/A codes by co/buyorder/
      *                   load#/Tatoo #/D&A Code so holdovers will process
      *                   correctly.  Then when we calculate total freight, we
      *                   need to use the accumulated $$.  In order to
      *                   accomplish this, we replaced PKCDCPL1 with
      *                   PKCDCPLF.   Request S00572.
      *  Modified by:     Barb Gutierrez             08/31/10
      *                   Fix problem where SBD paid frt expense amount is not
      *                   being written correctly.  Request C00970
      *  Modified by:     Barb Gutierrez             05/04/11
      *                   Concatenate the producer code to the end of the
      *                   invoice number when writing the remark field in f0411.
      *                   E001490
      *  Modified by:     ROSE CENTONZE              03/17/20
      *    T8163          M3-PASS IN PARM TO PROCESS INTERNAL ONLY INTCO 350
      *                   SO ONLY ACCUM VOUCHER HEADER THAT ARE INTERNAL FOR
      *                   $ICSAL ROUTINE TO CREATE THE 350 ENTRIES
      *                   Update glcff1 with "I" so it wont sync to E1  6/17/2020
      *        SCAN:      DONT GET NEXT NBR IF DOING INTCO ONLY   9-22-2020  RMC
      *  Modified by:     ISE                        11/24/20
      *    H16853         Increased Buy Order Number field length from 5 to 7.
     H*****************************************************************
     F*
     FPKBKCPL0  UF   E           K DISK
     F* HPE VOUCHER HEADER FILE        KEY: CO#/BATCH#/HEADER#
     F*
     FPKBLCPL1  IF   E           K DISK
     F* HPE VOUCHER DETAIL FILE        KEY: CO#/BATCH#/HEADER#
     F*
     FPKCDCPLF  IF   E           K DISK
     F* HPE TATOO D/A FILE             KEY: CO#/BUYORDER#/LOAD#/TATOO#/DA Code
     F*
     FPKA1CPL0  IF   E           K DISK
     F* HPE TATOO HEADER               KEY: CO#/BUYORDER#/LOAD#/TATOO#/KILL DATE
     F*
     FPKACREL1  IF   E           K DISK
     F* HPE Producer File              KEY: Producer
     F*
     FPKAFREL0  IF   E           K DISK
     F* HPE Producer Location          KEY: Producer/Location
     F*
     FPDKMREL1  IF   E           K DISK
     F* Company Values File            KEY: Company/Company Value code
     F*
     FF0101LA   IF   E           K DISK
     F* JDE ADRESS BOOK
     F*
     F* Beg:  BG050597
     FF0401LA   IF   E           K DISK
     F* SUPPLIER MASTER
     F* End:  BG050597
     F*
     FF0011     UF A E           K DISK
     F*   JDE BATCH HEADER FILE
     F*
     FF0411     O    E             DISK
     F* JDE A/P LEDGER FILE
     F*
     FF0413     UF   E           K DISK
     F* JDE A/P MATCHING DOCUMENT FILE
     F*
     FF0414     O    E             DISK
     F* JDE A/P MATCHING DOCUMENT DETAIL FILE
     F*
     FF0911     O    E             DISK
     F* JDE G/L LEDGER FILE
     F*
     D*
     D NET             S             15  0 DIM(14)
     D*
     D****/COPY JDECPY,I090171
     D**************************************************************
     D*  This copy module contains the record image for the F0901
     D*  file at the A7.1 release level.
     D*****************************************************************
     D*
     D*    XF file server format, @@FMT = A71
     D*
     D I0901           DS           500    INZ
     D*                                                                        )
     D*    company
     D  GMCO                   1      5
     D*    account id
     D  GMAID                  6     13
     D*    cost center
     D  GMMCU                 14     25
     D*    object account
     D  GMOBJ                 26     31
     D*    subsidiary
     D  GMSUB                 32     39
     D*    free form (3rd acct  no )
     D  GMANS                 40     64
     D*    description
     D  GMDL01                65     94
     D*    account level of detail
     D  GMLDA                 95     95
     D*    budget pattern code
     D  GMBPC                 96     98
     D*    posting edit
     D  GMPEC                 99     99
     D*    billable (y/n)
     D  GMBILL               100    100
     D*    currency code
     D  GMCRCD               101    103
     D*    unit of measure
     D  GMUM                 104    105
     D*    category code 001
     D  GMR001               106    108
     D*    category code 002
     D  GMR002               109    111
     D*    category code 003
     D  GMR003               112    114
     D*    category code 004
     D  GMR004               115    117
     D*    category code 005
     D  GMR005               118    120
     D*    category code 006
     D  GMR006               121    123
     D*    category code 007
     D  GMR007               124    126
     D*    category code 008
     D  GMR008               127    129
     D*    category code 009
     D  GMR009               130    132
     D*    category code 010
     D  GMR010               133    135
     D*    category code 011
     D  GMR011               136    138
     D*    category code 012
     D  GMR012               139    141
     D*    category code 013
     D  GMR013               142    144
     D*    category code 014
     D  GMR014               145    147
     D*    category code 015
     D  GMR015               148    150
     D*    category code 016
     D  GMR016               151    153
     D*    category code 017
     D  GMR017               154    156
     D*    category code 018
     D  GMR018               157    159
     D*    category code 019
     D  GMR019               160    162
     D*    category code 020
     D  GMR020               163    165
     D*    category code 021
     D  GMR021               166    175
     D*    category code 022
     D  GMR022               176    185
     D*    category code 023
     D  GMR023               186    195
     D*    alternate object account
     D  GMOBJA               196    201
     D*    alternate subsidiary
     D  GMSUBA               202    209
     D*    workers comp
     D  GMWCMP               210    213
     D*    method of computation
     D  GMCCT                214    214
     D*    equipment rate code
     D  GMERC                215    216
     D*    header type code
     D  GMHTC                217    217
     D*    lod quantity roll-up code
     D  GMQLDA               218    218
     D*    cost code complete (y/n)
     D  GMCCC                219    219
     D*    flag model and consolidated accounts
     D  GMFMOD               220    220
     D*    user id
     D  GMUSER               221    230
     D*    program id
     D  GMPID                231    240
     D*    work station id
     D  GMJOBN               241    250
     D*    date updated
     D  GMUPMJ               251    256  0
     D*    time last updated
     D  GMUPMT               257    262  0
     D*
     D*
     D*  SETUP *LDA
     D*
     D                UDS
     D  BATCH1                 1      8
     D  BATCH2                10     17
     D  BATCH3                19     26
     D*
     D***  RETRIEVE USER I.D. AND WORKSTATION I.D.
     D*
     D                SDS
     D  PGMSGQ           *PROC
     D  WRKSTN               244    253
     D  USRNAM               254    263
     D*
     D* STRUCTURE PRODUCER INVOICE # PRINT ON CHECK STUB
     D*
     D                 DS
     D  PRINV#                 1     10
     D  INVDES                 1      4
     D  PRORD#                 5      9
     D*
     D* STRUCTURE TRUCKER INVOICE # PRINT ON CHECK STUB
     D*
     D                 DS
     D  TRINV#                 1     16
     D  TRORD#                 1      5
     D  TRDSH                  6      6    INZ('-')
     D  TRLOAD                 7     10
     D  TRDSH2                11     11    INZ('-')
     D  TRTATT                12     16
     D*
     D***  G/L DATE  CCYYMMDD
     D*
     D                 DS
     D  GLDATE                 1      7  0
     D  GLCENT                 1      1  0
     D  GLYR                   2      3  0
     D  GLMO                   4      5  0
     D  GLDA                   6      7  0
     D*
     D***  G/L DATE FROM VOUCHER HEADER  MMDDYY
     D*
     D                 DS
     D  GLMDY                  1      6  0
     D  MOGL                   1      2  0
     D  DAGL                   3      4  0
     D  YRGL                   5      6  0
     D*
     D***  CHECK DATE  CCYYMMDD
     D*
     D                 DS
     D  CKCYMD                 1      7  0
     D  CKCC                   1      1  0
     D  CKYR                   2      3  0
     D  CKMO                   4      5  0
     D  CKDA                   6      7  0
     D*
     D***  CHECK DATE  MMDDYY
     D*
     D                 DS
     D  CKMDY                  1      6  0
     D  MOCK                   1      2  0
     D  DACK                   3      4  0
     D  YRCK                   5      6  0
     D*
     D***  UDATE MMDDYY
     D*
     D                 DS
     D  WKUDAT                 1      6  0
     D  WKUMO                  1      2  0
     D  WKUDA                  3      4  0
     D  WKUYR                  5      6  0
     D*
     D***  UDATE CCYYMMDD
     D*
     D                 DS
     D  UDT                    1      8  0
     D  UCC                    1      2  0
     D  UYY                    3      4  0
     D  UMM                    5      6  0
     D  UDD                    7      8  0
     D*
     D*   SET UP DESCRIPTION FOR INTERCOMPANY HOG PURCHASE OFFSET
     D*
     D                 DS
     D  WKINT                  1     30
     D  WKINT1                 1     19    INZ('INTERCOMPANY HOG PU')
     D  WKINT2                20     30    INZ('RCH. OFFSET')
     D* B:  BG010531
     D*   SET UP DESCRIPTION FOR INTERCOMPANY SALES OFFSET
     D*
     D                 DS
     D  WKICS                  1     25
     D  WKICS1                 1     19    INZ('Intercompany Sales ')
     D  WKICS2                20     25    INZ('Offset')
     D* E:  BG010531
     D*
     D**  INTIALIZE FIELDS THAT ARE DEFAULTED TO A PARTICULAR VALUE
     D**
     D GLAM            C                   CONST('2')
     D RPPST           C                   CONST('A')
     D RPAM            C                   CONST('2')
     D GLPKCO          C                   CONST('00000')
     D GLOKCO          C                   CONST('00000')
     D GLPSFX          C                   CONST('000')
     C*
     C/EJECT
     C*----------------------------------------------------------------
     C* MAIN PROCESSING LOOP
     C*----------------------------------------------------------------
     C*   READ VOUCHER HEADER FOR THE COMPANY AND BATCH PASSED IN
     C*
     C     KEYHD         SETLL     @BKCPEJ
     C     *IN50         DOUEQ     *ON
     C     KEYHD         READE     @BKCPEJ                                50
     C     *IN50         IFEQ      *OFF                                         HAVE RECORD
     C*
     C* ONLY PROCESS RECORDS READY TO BE CREATED IN JDE
     C*
     C     BKC0ST        IFEQ      'C'                                          CREATE??
     C                   Z-ADD     0             GLJELN                         JE LINE CNT
     C                   MOVE      *BLANKS       GLEXR                          REMARKS
     C*
     C*      RETRIEVE VENDOR NAME
     C*
     C     BKLXNB        CHAIN     I0101                              40
     C     *IN40         IFEQ      *OFF                                         40 = OFF
     C                   MOVE      ABALPH        WKALPH           40            NAME
     C                   ELSE                                                   40 = ON
     C                   MOVE      *BLANKS       WKALPH                         NAME
     C                   END                                                    40 = OFF
     C*
     C*   RETRIEVE JULIAN DATE FOR G/L DATE BY USING JDE'S ROUTINE...
     C*
     C                   MOVE      BKA4DT        #SIDAT            6
     C                   EXSR      $RVJDT
     C                   MOVE      #SIDAT        SVGLDT            6            G/L DATE
     C*
     C*  CONVERT G/L DATE FROM YYMMDD TO MMDDYY
     C*
     C                   Z-ADD     BKA4DT        GLDATE
     C                   Z-ADD     GLYR          YRGL
     C                   Z-ADD     GLMO          MOGL
     C                   Z-ADD     GLDA          DAGL
     C*
     C*  CALCULATE PERIOD & FISCAL YEAR FROM G/L DATE
     C*
     C                   EXSR      $YRPER
     C*
     C                   Z-ADD     #PN           WKPN              2 0
     C                   Z-ADD     #FY           WKFY              2 0
     C                   Z-ADD     #CTRY         WKCEN             2 0
     C*
     C* SETUP DOCUMENT NUMBER/TYPE AND BATCH NUMBER/TYPE DEPENDING UPON
     C* IF INTERNAL, EXTERNAL OR TRUCKER.
     C*
     C*----------------------------
     C*     INTERNAL........
     C*----------------------------
     C*
     C     BKCSST        IFEQ      'I'                                           INTERNAL
     C*
      * GENERATE NEXT AVAILABLE DOCUMENT # FOR INTERNALS
      *
     C                   MOVEL     '09  '        WKSY              4
     C                   MOVEL     '02'          WKIDX             2
     C                   EXSR      $RVNBR
     C*
     C                   Z-ADD     PSNBR         SVDOC             8 0
     C                   Z-ADD     SVDOC         INTDOC            8 0
     C                   Z-ADD     0             SVJELN                         SAVE LINE CN
     C*  ONE TIME
     C     *IN91         IFEQ      *OFF                                          BEG ONE TIME
     C*
      * GENERATE NEXT AVAILABLE JE BATCH # FROM JDE
      *
     C                   MOVEL     '00  '        WKSY
     C                   MOVEL     '01'          WKIDX
     C                   EXSR      $RVNBR
     C*
     C                   Z-ADD     PSNBR         JEICU             8 0          BATCH NUM
     C                   MOVEL     'G'           JEICUT            2            BATCH TYPE
     C                   MOVE      PSNBR         BATCH2
     C                   MOVE      *ON           *IN91
     C                   END                                                    END ONE TIME
     C*
     C*--------------------------------------------
     C*     EXTERNAL/TRUCKER/COMMISSIONS ........
     C*--------------------------------------------
     C*
     C                   ELSE                                                    NOT INTERNAL
     C*
      * GENERATE NEXT AVAILABLE DOCUMENT #
      *
     C                   MOVEL     '04  '        WKSY
     C                   MOVEL     '01'          WKIDX
     C                   EXSR      $RVNBR
     C*
     C                   Z-ADD     PSNBR         SVDOC
     C*
     C*------------------------
     C*  REGULAR CHECK ......
     C*------------------------
     C*
     C     BKCUST        IFNE      'M'                                          NOT MANUAL
     C     *IN92         IFEQ      *OFF                                          BEG ONE TIME
     C*
      * GENERATE NEXT AVAILABLE VOUCHER BATCH NUMBER FOR NON-MANUAL
      *    DONT GET NEXT NBR IF DOING INTCO ONLY   9-22-2020  RMC
     C     INTCO         IFNE      'Y'                                           IF NOT INTCO ONLY
     C                   MOVEL     '00  '        WKSY
     C                   MOVEL     '01'          WKIDX
     C                   EXSR      $RVNBR
     C*
     C                   Z-ADD     PSNBR         PVICU             8 0          BATCH NUM
     C                   MOVEL     'V'           PVICUT            2            BATCH TYPE
     C                   MOVE      PSNBR         BATCH1
     C                   MOVE      *ON           *IN92                           regular vchr ind
     C                   ENDIF                                                  endif intco
     C                   ENDIF                                                  BEG ONE TIME
     C                   ELSE                                                   NOT MANUAL
     C*
     C*------------------------
     C*  MANUAL CHECK.....
     C*------------------------
     C*
      * GENERATE NEXT AVAILABLE VOUCHER BATCH NUMBER FOR MANUAL
      *
     C     *IN93         IFEQ      *OFF                                         BEG ONE TIME
      *    DONT GET NEXT NBR IF DOING INTCO ONLY   9-22-2020  RMC
     C     INTCO         IFNE      'Y'                                           IF NOT INTCO ONLY
     C                   MOVEL     '00  '        WKSY
     C                   MOVEL     '01'          WKIDX
     C                   EXSR      $RVNBR
     C*
     C                   Z-ADD     PSNBR         PMICU             8 0          BATCH NUM
     C                   MOVEL     'M'           PMICUT            2            BATCH TYPE
     C                   MOVE      PSNBR         BATCH3
     C                   ENDIF                                                  END INTCO ONLY
     C*
     C                   MOVE      *ON           *IN93
     C                   ENDIF                                                  END ONE TIME
     C                   ENDIF                                                  NOT MANUAL
     C*
     C                   ENDIF                                                  INTERNAL
     C*
     C/EJECT
     C*--------------------------------------------------------------
     C*--------------------------------------------------------------
     C*  Read the check detail file for the batch and header being
     C*  processed.
     C*
     C                   Z-ADD     0             COUNT             3 0
     C                   MOVE      '000'         RPSFX                           PAY ITEM
     C*
     C     KEYDT         SETLL     @BLCPEP                                      PKBLCPL1
     C     *IN51         DOUEQ     *ON
     C     KEYDT         READE     @BLCPEP                                51
     C     *IN51         IFEQ      *OFF                                         HAVE RECORD
     C*
     C*--------------------------------------------------------------
     C* Process Internal and External Producers Check Detail
     C*--------------------------------------------------------------
     C*
     C     BKCSST        IFNE      'T'                                          NOT A TRUCKER
     C     BKCSST        ANDNE     'C'                                          NOT A COMMSSION
     C     INTCO         ANDNE     'Y'                                            T8163
     C*
     C                   EXSR      $INEX
     C*
     C*--------------------------------------------------------------
     C*  Process Truckers Check Detail
     C*--------------------------------------------------------------
     C*
     C                   ELSE                                                   TRUCKER
     C     BKCSST        IFEQ      'T'
     C     INTCO         ANDNE     'Y'                                            T8163
     C                   EXSR      $TRK
     C*
     C                   ELSE                                                   NOT TRUCKER
     C* -------------------------------------------------------------------
     C*  Process Commissions Check Detail
     C* -------------------------------------------------------------------
     C*
     C     BKCSST        IFEQ      'C'                                          COMMISSIONS
     C     INTCO         ANDNE     'Y'                                            T8163
     C                   EXSR      $COMM
     C                   ENDIF                                                  COMMISSIONS
     C*
     C                   ENDIF                                                  TRUCKER
     C                   ENDIF                                                  NOT TRUCKER
     C*
     C     BKCSST        IFEQ      'I'                                          ACCUM FOR 350
     C     INTCO         ANDEQ     'Y'                                            T8163
     C                   ADD       BLAMVA        WKICS$
     C                   ENDIF
     C*
     C                   ENDIF                                                  check detail
     C                   ENDDO                                                  check detail
     C*---------------------------------------------------------------
     C*   If this is an internal, write the inter-company record
     C*---------------------------------------------------------------
     C*
     C     BKCSST        IFEQ      'I'                                           INTERNAL
     C     INTCO         IFEQ      'Y'
     C                   ELSE
     C                   EXSR      $INTCO
     C                   ENDIF
     C                   ENDIF
     C*
     C*---------------------------------------------------------------
     C*   UPDATE VOUCHER HEADER FOR THE PRODUCER OR THE SPLIT
     C*---------------------------------------------------------------
     C*
     C     INTCO         IFNE      'Y'
     C                   EXSR      $HEAD
     C                   ENDIF
     C*
     C                   ENDIF                                                  BKCOST = C
     C*
     C                   ENDIF                                                  50 = OFF
     C                   ENDDO                                                  HEADER
     C*
     C*  After all vouchers have been processed, write the intercompany Sales
     C*  JE for Internals only.
     C*
     C     WKICS$        IFNE      0                                            NET $ NOT 0
     C                   EXSR      $ICSAL
     C                   ENDIF
     C*
     C/EJECT
     C*----------------------------------------------------------------
     C* EOF PROCESSING: PRINT AP DISTRIBUTION TOTALS
     C*----------------------------------------------------------------
     C*
     C*   WRITE BATCH RECORD IF BATCH NUMBER GENERATED
     C*
     C                   MOVE      GLDICJ        ICDICJ
     C                   MOVE      'A'           ICIAPP
     C                   MOVE      'Y'           ICBAL
     C                   MOVE      ' '           ICBALJ
     C                   MOVE      'N'           ICPOB
     C                   MOVE      'Y'           ICIBOI
     C*
     C* REGULAR VOUCHER
     C     *IN92         IFEQ      *ON                                          HAVE BATCH
     C                   MOVE      PVICUT        WKICUT
     C                   MOVE      PVICU         WKICU
     C*
     C     KEY11         CHAIN     I0011                              51
     C     *IN51         IFEQ      *ON                                          51 = ON
     C                   MOVE      PVICU         ICICU
     C                   MOVE      PVAMT         ICAICU
     C                   MOVE      PVCNT         ICNDO
     C                   MOVE      PVAMT         ICAME
     C                   MOVE      PVCNT         ICDOCN
     C                   MOVE      PVICUT        ICICUT
     C*
     C                   WRITE     I0011
     C                   ENDIF                                                  51 = ON
     C                   ENDIF                                                  VOUCHERS
     C*
     C* MANUAL VOUCHER
     C     *IN93         IFEQ      *ON                                          HAVE BATCH
     C                   MOVE      PMICUT        WKICUT
     C                   MOVE      PMICU         WKICU
     C*
     C     KEY11         CHAIN     I0011                              51
     C     *IN51         IFEQ      *ON                                          51 = ON
     C                   MOVE      PMICU         ICICU
     C                   MOVE      PMAMT         ICAICU
     C                   MOVE      PMCNT         ICNDO
     C                   MOVE      PMAMT         ICAME
     C                   MOVE      PMCNT         ICDOCN
     C                   MOVEL     PMICUT        ICICUT
     C*
     C                   WRITE     I0011
     C                   ENDIF                                                  51 = ON
     C                   ENDIF                                                  MANUAL
     C*
     C* JOURNAL ENTRY BATCH
     C     *IN91         IFEQ      *ON                                          HAVE BATCH
     C                   MOVE      JEICUT        WKICUT                         BATCH TYPE
     C                   MOVE      JEICU         WKICU                          BATCH #
     C*
     C     KEY11         CHAIN     I0011                              51
     C     *IN51         IFEQ      *ON                                          51 = ON
     C                   MOVE      JEICU         ICICU
     C                   MOVE      JEAMT         ICAICU
     C                   MOVE      JECNT         ICNDO
     C                   MOVE      JEAMT         ICAME
     C                   MOVE      JECNT         ICDOCN
     C                   MOVEL     JEICUT        ICICUT
     C*
     C                   WRITE     I0011
     C                   ENDIF                                                  51 = ON
     C                   ENDIF                                                  J/E'S
     C*
     C* THIS WILL CLOSE ANY FILES THAT ARE LEFT OPEN FROM ANY CALLED
     C* PROGRAMS WITHIN THIS PROGRAM.
     C*
     C                   CALL      'UTRCRSC'
     C*
     C                   MOVE      *ON           *INLR
     C/EJECT
     C*---------------------------------------------------------------
     C* SUBROUTINE SECTION
     C*--------------------------------------------------------------
     C*----------------------------------------------------------------
     C*   RETRIVE JULIAN DATE
     C*----------------------------------------------------------------
     C*
     C     $RVJDT        BEGSR
     C                   TIME                    $TIME            12 0
     C                   MOVE      $TIME         $DATE             6 0
     C                   MOVEL     '*YMD   '     #FFMT             7
     C                   MOVE      *BLANK        #EDAT             8
     C                   MOVEL     '*JUL   '     #TFMT             7
     C                   MOVEL     '*NONE'       #SEP              7
     C                   MOVE      *BLANK        $ERTST            1
     C                   CALL      'X0028   '
     C                   PARM                    #SIDAT
     C                   PARM                    #EDAT
     C                   PARM                    #FFMT
     C                   PARM                    #TFMT
     C                   PARM                    #SEP
     C                   PARM                    $ERTST
     C                   PARM      *BLANKS       $CTRY
     C                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*   RETRIVE YEAR AND PERIOD FROM JDE
     C*----------------------------------------------------------------
     C*
     C     $YRPER        BEGSR
     C                   CALL      'X09031'
     C                   PARM      '1'           #CALC             1
     C                   PARM      WKCO          #CO               5
     C                   PARM      GLMDY         #DG               6 0
     C                   PARM                    #PN               2 0
     C                   PARM                    #FY               2 0
     C                   PARM                    #CTRY             2 0
     C                   PARM                    #EDT              1
     C                   PARM                    #DGSY             1
     C                   ENDSR
     C*
     C*----------------------------------------------------------------
     C*   RETRIVE NEXT AVAILABLE NUMBER FROM JDE
     C*----------------------------------------------------------------
     C*
     C     $RVNBR        BEGSR
     C                   CALL      'X0010'
     C                   PARM      WKSY          PSSY              4
     C                   PARM      WKIDX         PSIDX             2
     C                   PARM                    PSNBR             8 0
     C                   ENDSR
     C/EJECT
     C*----------------------------------------------------------------
     C*   Process Internal/External Producers Only
     C*----------------------------------------------------------------
     C*
     C     $INEX         BEGSR
     C*
     C                   MOVE      *BLANKS       WKMCU            12
     C                   MOVE      *BLANKS       PURMCU           12
     C                   MOVE      *BLANKS       PUROBJ            6
     C                   MOVE      *BLANKS       PURSUB            8
     C                   MOVE      *BLANKS       PURAID            8
     C*
     C*  Call Subroutine to retrieve the cost center and account code for the
     C*  producer. (PKCVREP)
     C*
     C                   EXSR      $RGLCD
     C*
     C* Save the producer cost center for use in writing the contra record.
     C*
     C                   MOVE      WKMCU         SVMCU            12
     C*
     C*  CALCULATE THE TOTAL DEDUCTIONS TO PRINT ON THE CHECK STUB
     C*     (DEDUCTION AMT + SPLIT AMT = TOTDIS)
     C*
     C     BLALVA        ADD       BLCVPR        TOTDIS           11 2
     C*
     C                   MOVEL     BLBNNB        PRORD#                         PRNT INVOICE#
     C*
     C*---------------------
     C* NOT A SPLIT CHECK
     C*---------------------
     C*
     C     BKJHST        IFNE      'Y'                                          NOT SPLIT
     C*
     C*--------------------------------------
     C     BKCSST        IFEQ      'I'                                          INTERNAL
     C*
     C* ACCUMULATE NET AMOUNT FOR I/C OFFSET FOR INTERNALS
     C*
     C                   ADD       BLAMVA        WKNAMT           11 2
     C*
     C* ACCUMALATE NET $ FOR I/C SALES OFFSET
     C*
     C                   ADD       BLAMVA        WKICS$           11 2
     C*
     C                   ENDIF                                                  INTERNAL
     C*--------------------------------------
     C*
     C*  Execute subroutine to retrieve the JDE account ID for the purchase
     C*  account.
     C*
     C                   EXSR      $RACID
     C*
     C*  Execute subroutine to retrieve the JDE Object and sub code for the
     C*  purchase account
     C*
     C                   EXSR      $EDTAC
     C*
     C* EXECUTE SUBROUTINE TO MAKE SURE THE PURCHASE ACCOUNT COST
     C* CENTER COMBINED WITH THE OBJECT AND SUB IS A VALID COMBIANTION.
     C*
     C                   EXSR      $VAL
     C*
     C* Save the purchase account information to use when writing the
     C* sort disc amt, yield gain/loss amount and the lean percent amount.
     C* These amounts are only valid on market purchases not resales.
     C*
     C     BLJIST        IFNE      'R'                                          Not resale
     C                   MOVE      GLMCU         PURMCU
     C                   MOVE      GLOBJ         PUROBJ
     C                   MOVE      GLSUB         PURSUB
     C                   MOVE      GLAID         PURAID
     C                   ENDIF                                                  Not resale
     C*
     C*  DETERMINE PAYMENT TYPE.   LIVE OR CARCASS MERIT...
     C*
     C*------------------------------
     C*       LIVE............
     C*------------------------------
     C*
     C     BLI6ST        IFEQ      'L'                                          LIVE
     C                   MOVE      'LIV-'        INVDES                         PRNT INVOICE#
     C*
     C*
     C*   WRITE RECORD TO G/L FILE
     C*
     C                   MOVE      BLAKVA        WKAMT                          Gross Amt
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C*------------------------------
     C*       CARCASS MERIT......
     C*------------------------------
     C*
     C                   ELSE                                                   NOT LIVE
     C                   MOVE      'CAR-'        INVDES                         PRNT INVOICE#
     C*
     C**********           MOVE BLCNPR    WKAMT  150       Base Mkt Price
     C                   MOVE      BLAKVA        WKAMT            15 0          Gross Amount
     C*
     C*   WRITE RECORD TO G/L FILE
     C*
     C     WKAMT         IFNE      *ZERO
     C                   EXSR      $911
     C                   ENDIF
     C******
     C                   ENDIF                                                  LIVE
     C*
     C*------------------
     C*
     C*    ONLY WRITE TO THE A/P FILE IF AN EXTERNAL PRODUCER
     C*
     C     BKCSST        IFEQ      'E'                                          EXTERNAL
     C*
     C*  Concatenate the producer code to the end of the invoic number
     C****                 MOVELBLF5TX    RPRMK            REMARK
     C     BLF5TX        CAT       BLABCD:1      RPRMK                          REMARK
     C*
     C                   ADD       1             COUNT             3 0
     C                   MOVE      COUNT         RPSFX                          PAY ITEM
     C                   MOVEL     PRINV#        RPVINV                         INVOICE #
     C*
     C*  WRITE RECORD TO A/P FILE
     C*
     C                   EXSR      $411
     C                   ENDIF                                                  EXTERNAL
     C*
     C*  IF THE LESS SPLIT AMOUNT FIELD IS NOT ZERO, WRITE THE RECORD
     C*  TO THE G/L FILE.
     C*
     C     BLCVPR        IFNE      *ZERO                                        SPLIT AMT
     C*
     C                   MOVE      BLCVPR        WKAMT            15 0
     C*
     C                   MOVE      *BLANKS       GLEXR                          REMARKS
     C                   MOVEL     'Split'       GLEXR                          REMARKS
     C*
     C*   WRITE RECORD TO G/L FILE
     C*
     C*    BLG031496
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C                   ENDIF                                                  SPLIT AMT
     C*
     C*---------------------------------------
     C*  READ THE TATOO D/A FILE (PKCDCPLH)
     C*---------------------------------------
     C*
     C                   MOVE      'Y'           FIRST             1
     C                   Z-ADD     0             ACCAMT                         Accumulated amt
     C*
     C     KEYTA         SETLL     @CDCPPU
     C     *IN52         DOUEQ     *ON
     C     KEYTA         READE     @CDCPPU                                52
     C     *IN52         IFEQ      *OFF                                         HAVE RECORD
     C*
     C     CDA0VA        ANDNE     *ZERO                                        AMT NOT 0
     C*
     C                   MOVE      *BLANKS       GLEXR                          REMARK
     C*
     C* First time, save fields..
     C*
     C     FIRST         IFEQ      'Y'                                          First deduction ??
     C                   MOVE      CDBQCD        SVBQCD            5            D/A Code
     C                   MOVE      CDPEST        SVPEST            1            Expense paid by
     C                   MOVE      CDPFST        SVPFST            1            Expense Type
     C                   MOVE      CDDPCD        SVDPCD            8            GL Code
     C                   MOVE      CDE3CD        SVE3CD            8            GL Contra code
     C                   MOVE      'N'           FIRST             1
     C                   ENDIF                                                  First deduction ??
     C*
     C* D/A code is different
     C*
     C     CDBQCD        IFNE      SVBQCD                                       D/A Code is diff
     C*
     C* If this expense record is paid for by (S)eaboard..
     C*
     C     SVPEST        IFEQ      'S'                                          Exp pd by SEABOARD
     C*
     C                   EXSR      $SBD
     C                   ELSE                                                   Exp pd by Producer
     C*
     C* If this expense record is paid for by producer......
     C*
     C                   EXSR      $REG
     C                   ENDIF                                                  Exp pd by seaboard
     C*
     C* save new fields
     C*
     C                   MOVE      CDBQCD        SVBQCD                         D/A Code
     C                   MOVE      CDPEST        SVPEST                         Expense paid by
     C                   MOVE      CDPFST        SVPFST                         Expense Type
     C                   MOVE      CDDPCD        SVDPCD                         GL Code
     C                   MOVE      CDE3CD        SVE3CD                         GL Contra code
     C                   Z-ADD     0             ACCAMT                         Accumulated amt
     C                   ENDIF                                                  D/A Code is diff
     C*
     C* Accumulate amount..........
     C*
     C*
     C     CDJBST        IFEQ      '+'
     C                   MOVE      CDA0VA        WKAMT            15 0
     C                   ELSE
     C     CDA0VA        MULT      -1            WKA0VA
     C                   MOVE      WKA0VA        WKAMT
     C                   ENDIF
     C*
     C                   ADD       WKAMT         ACCAMT           15 0
     C*
     C                   ENDIF                                                  HAVE RECORD
     C                   ENDDO                                                  TATOO D/A
     C*
     C*  Process last D/A record.
     C*
     C     ACCAMT        IFNE      0                                            Accamt ne 0
     C*
     C* If this expense record is paid for by (S)eaboard..
     C*
     C     SVPEST        IFEQ      'S'                                          Exp pd by SEABOARD
     C*
     C                   EXSR      $SBD
     C                   ELSE                                                   Exp pd by Producer
     C*
     C* If this expense record is paid for by producer......
     C*
     C                   EXSR      $REG
     C                   ENDIF                                                  Exp pd by seaboard
     C                   ENDIF                                                  Accamt ne 0
     C*
     C*--------------------------------------
     C*   WRITE MANUAL CHECK RECORD TO F0911
     C*--------------------------------------
     C*
     C     BKCUST        IFEQ      'M'
     C                   EXSR      $MAN
     C                   ENDIF
     C*
     C*---------------------------------
     C*   UPDATE TATTOO HEADER FILE
     C*---------------------------------
     C*
     C                   CALL      'PKTKXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#               3 0
16853C*                  PARM      BLBNNB        BUYORD            5 0
16853C                   PARM      BLBNNB        BUYORD            7 0
     C                   PARM      BLBONB        LOAD              5 0
     C                   PARM      BLCVNB        TATOO             5 0
     C                   PARM      SVDOC         VOUCH             8 0
     C*
     C*------------------------------
     C*   UPDATE TATOO DRIVER FILE
     C*------------------------------
     C*
     C                   CALL      'PKTLXFR'
     C                   PARM                    RETRN
     C                   PARM      SVDOC         VOUCH             8 0
     C                   PARM      CO            CO#               3 0
16853C*                  PARM      BLBNNB        BUYORD            5 0
16853C                   PARM      BLBNNB        BUYORD            7 0
     C                   PARM      BLBONB        LOAD              5 0
     C                   PARM      BLCVNB        TATOO             5 0
     C*
     C*--------------
     C* SPLIT CHECK
     C*--------------
     C*
     C                   ELSE                                                   SPLIT
     C*
     C*  Execute subroutine to retrieve the GL Code based on Payment type,
     C*  hog class type, BO type, and source contract type.
     C*
     C                   EXSR      $RGLCD
     C*
     C*  Execute subroutine to retrieve the JDE account ID for the purchase
     C*  account.
     C*
     C                   EXSR      $RACID
     C*
     C*  Execute subroutine to retrieve the JDE Object and sub code for the
     C*  purchase account
     C*
     C                   EXSR      $EDTAC
     C*
     C* EXECUTE SUBROUTINE TO MAKE SURE THE PURCHASE ACCOUNT COST
     C* CENTER COMBINED WITH THE OBJECT AND SUB IS A VALID COMBIANTION.
     C*
     C                   EXSR      $VAL
     C*
     C                   MOVE      *BLANKS       GLEXR                          REMARKS
     C                   MOVEL     'Split'       GLEXR                          REMARKS
     C*
     C                   MOVE      BLAKVA        WKAMT                          GROSS AMT
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C*   WRITE RECORD TO A/P FILE
     C*
     C                   ADD       1             COUNT
     C                   MOVE      COUNT         RPSFX                          PAY ITEM
     C*
     C*  Concatenate the producer code to the end of the invoic number
     C*
     C****                 MOVELBLF5TX    RPRMK            REMARK
     C     BLF5TX        CAT       BLABCD:1      RPRMK                          REMARK
     C*
     C     BLI6ST        IFEQ      'L'                                          LIVE
     C                   MOVE      'LIV-'        INVDES                         PRNT INVOICE#
     C                   ELSE                                                   CARCASS
     C                   MOVE      'CAR-'        INVDES                         PRNT INVOICE#
     C                   ENDIF                                                  LIVE
     C*
     C                   MOVEL     PRINV#        RPVINV                         INVOICE #
     C                   EXSR      $411
     C*
     C                   ENDIF                                                  SPLIT
     C                   ENDSR
     C/EJECT
      *---------------------------------------------------------------
      * $TRK    Process Trucker vouchers only
      *---------------------------------------------------------------
     C*
     C     $TRK          BEGSR
     C*
     C                   MOVEL     BLBNNB        TRORD#
     C                   MOVE      BLBONB        TRLOAD
     C*
     C* Move tatoo number onto the end of the invoice number
     C*
     C                   MOVEL     BLCVNB        TRTATT
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPTRKEXP'    WKACT             8
     C                   MOVE      *BLANKS       WKID              8
     C*
     C*  Execute subroutine to retrieve the JDE account ID
     C*
     C                   EXSR      $RACID
     C*
     C*  Execute subroutine to retrieve the JDE Object and sub code
     C*
     C                   EXSR      $EDTAC
     C*
     C*  IF THE BALANCE SHEET STATUS IS A 'Y', THE COMPANY NUMBER WILL
     C*  BE DEFAULTED INTO THE COST CENTER.  ELSE USE THE COST CENTER
     C*  ASSOCIATED WITH THE ACCT ID.
     C*
     C                   MOVE      *BLANKS       WKMCU
     C     BALSHT        IFEQ      'Y'
     C                   MOVE      ACO           WKMCU
     C                   ELSE
     C                   MOVE      PSMCU         WKMCU
     C                   ENDIF
     C*
     C* CALL SUBROUTINE TO VALIDATE COST CENTER/OBJECT/SUB COMBINATION
     C*
     C                   EXSR      $VAL
     C*
     C*   WRITE RECORD TO G/L FILE
     C*
     C     BLAMVA        IFNE      0                                            NET N= 0
     C                   MOVE      BLAMVA        WKAMT
     C                   ELSE                                                   NET = 0
     C                   MOVE      BLAKVA        WKAMT
     C                   ENDIF                                                  NET N= 0
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C*   WRITE RECORD TO A/P FILE
     C*
     C                   MOVEL     BLF5TX        RPRMK                          REMARK
     C                   ADD       1             COUNT
     C                   MOVE      COUNT         RPSFX                          PAY ITEM
     C                   MOVEL     TRINV#        RPVINV                         INVOICE #
     C                   EXSR      $411
     C*
     C*-------------------------------------
     C* WRITE MANUAL CHECK RECORD TO 911
     C*-------------------------------------
     C*
     C     BKCUST        IFEQ      'M'                                          MANUAL
     C                   EXSR      $MAN
     C                   ENDIF                                                  MANUAL
     C*
     C*   UPDATE BUYORDER LOAD FILE FOR THE TRUCKER WITH THE DOCUMENT
     C*   NUMBER THAT WAS WRITTEN TO JDE
     C*
     C                   CALL      'PKTJXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#               3 0
16853C*                  PARM      BLBNNB        BUYORD            5 0
16853C                   PARM      BLBNNB        BUYORD            7 0
     C                   PARM      BLBONB        LOAD              5 0
     C                   PARM      SVDOC         VOUCH             8 0
     C*
     C                   ENDSR
      *
     C/EJECT
      *---------------------------------------------------------------
      * $COMM - Process Commission vouchers only
      *---------------------------------------------------------------
      *
     C     $COMM         BEGSR
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPCOMPD '    WKACT             8
     C                   MOVE      *BLANKS       WKID              8
     C*
     C*  Execute subroutine to retrieve the JDE account ID
     C*
     C                   EXSR      $RACID
     C*
     C*  Execute subroutine to retrieve the JDE Object and sub code
     C*
     C                   EXSR      $EDTAC
     C*
     C*  IF THE BALANCE SHEET STATUS IS A 'Y', THE COMPANY NUMBER WILL
     C*  BE DEFAULTED INTO THE COST CENTER.  ELSE USE THE COST CENTER
     C*  ASSOCIATED WITH THE ACCT ID.
     C*
     C                   MOVE      *BLANKS       WKMCU
     C     BALSHT        IFEQ      'Y'
     C                   MOVE      ACO           WKMCU
     C                   ELSE
     C                   MOVE      PSMCU         WKMCU
     C                   ENDIF
     C*
     C* CALL SUBROUTINE TO VALIDATE COST CENTER/OBJECT/SUB COMBINATION
     C*
     C                   EXSR      $VAL
     C*
     C*   WRITE RECORD TO G/L FILE
     C*
     C     BLAMVA        IFNE      0                                            NET N= 0
     C                   MOVE      BLAMVA        WKAMT
     C                   ELSE                                                   NET = 0
     C                   MOVE      BLAKVA        WKAMT
     C                   ENDIF                                                  NET N= 0
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C*   WRITE RECORD TO A/P FILE
     C*
     C                   MOVEL     BLF5TX        RPRMK                          REMARK
     C                   MOVEL     BLCVNB        RPVINV                         INVOICE #
     C                   ADD       1             COUNT
     C                   MOVE      COUNT         RPSFX                          PAY ITEM
     C                   EXSR      $411
     C*
     C*-------------------------------------
     C* WRITE MANUAL CHECK RECORD TO 911
     C*-------------------------------------
     C*
     C     BKCUST        IFEQ      'M'                                          MANUAL
     C                   EXSR      $MAN
     C                   ENDIF                                                  MANUAL
     C*
     C*-------------------------------------
     C*   UPDATE TATTOO HEADER FILE
     C*-------------------------------------
     C*
     C                   CALL      'PKPLXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#
     C                   PARM      BLBNNB        BUYORD
     C                   PARM      BLBONB        LOAD
     C                   PARM      BLCVNB        TATTOO            5 0
     C                   PARM      SVDOC         VOUCH
      *
     C                   ENDSR
     C/EJECT
     C*
     C*---------------------------------------------------------------*
     C*   SEABOARD Paid Expense
     C*---------------------------------------------------------------*
     C*
     C     $SBD          BEGSR
     C*
     C*  Write Purchase account as a debit....
     C*
     C                   MOVE      PURMCU        GLMCU                          COST CENTER
     C                   MOVE      PUROBJ        GLOBJ                          OBJECT
     C                   MOVE      PURSUB        GLSUB                          SUB
     C                   MOVE      PURAID        GLAID                          ACCT ID
     C*
     C                   MOVE      ACCAMT        WKAMT            15 0
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C*  CALL PROGAM TO RETRIEVE THE G/L ACCOUNT I.D. for the expense
     C*  account....
     C*
     C                   CALL      'PKTIXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#               3 0
     C                   PARM      SVDPCD        GLCOD             8
     C     WKID          PARM                    ACTID             8
     C                   PARM                    SUBTYP            1
     C     BALSHT        PARM                    BALTYP            1
     C     ACCTCO        PARM                    ACCTCO            3 0
     C*
     C* Execute the subroutine to revrieve the cost center/object/sub
     C*
     C                   EXSR      $CCOBS
     C*
     C*  write amount as a negative..
     C*
     C     ACCAMT        MULT      -1            WKAMT
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C                   ENDSR
     C*
     C/EJECT
     C*---------------------------------------------------------------*
     C*   REGULAR DEDUCTIONS
     C*---------------------------------------------------------------*
     C*
     C     $REG          BEGSR
     C*
     C*  If the Tatoo D/A code is for Triumphs Transportation allowance....
     C*
     C     SVBQCD        IFEQ      'TPALW'
     C     CO            ANDEQ     960
     C                   EXSR      $TRALL
     C                   ELSE
     C*
     C* Retreive G/L account ID using the accound ID from the tatoo d/A file
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     SVDPCD        WKACT
     C*
     C                   EXSR      $RACID
     C*
     C* Execute the subroutine to revrieve the cost center/object/sub
     C*
     C                   EXSR      $CCOBS
     C*
     C*   WRITE BALANCE SHEET RECORD TO G/L FILE
     C*
     C*    BLG031496
     C*
     C     ACCAMT        IFNE      0
     C                   MOVE      ACCAMT        WKAMT
     C                   EXSR      $911
     C                   ENDIF
     C*
     C                   ENDIF                                                  svbqcd = tpalw
     C*
     C* BLANK OUT SUBLEDGER AFTER EACH DEDUCTION CODE
     C*
     C                   MOVE      *BLANKS       GLSBL                          SUB LEDGER
     C                   MOVE      *BLANKS       GLSBLT                         SUBLEDGER TYPE
     C*
     C* PROCESS CONTRA RECORDS IF NEED TO
     C*
     C     SVE3CD        IFNE      *BLANKS                                      CONTRA N=' '
     C                   EXSR      $CNTRA
2    C                   ENDIF
     C*
     C                   ENDSR
     C*
     C/EJECT
     C*----------------------------------------------------------------
     C*  $TRALL  Transportation Allowance
     C*----------------------------------------------------------------
     C*
     C     $TRALL        BEGSR
     C*
     C* Set up the account for Feight on Hog Purchases
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPPURFRT'    WKACT                           expense acct
     C*
     C                   EXSR      $RACID
     C*
     C*  Execute subroutine to retrieve the cost center/object/sub
     C*
     C                   EXSR      $CCOBS
     C*
     C*   Retrieve the freight rate from the company values file.
     C*
     C                   MOVEL     'TPALW   '    WKVAL
     C     KEYVAL        CHAIN     PDKMREL1                           90
     C     *IN90         IFEQ      *OFF                                         90 = OFF
     C                   Z-ADD     KMM8NB        WKFTRT            7 5
     C                   ELSE
     C                   Z-ADD     0             WKFTRT
     C                   ENDIF                                                  90 = OFF
     C*
      * Calculate Freight on Hog Purchases Amount.  This amount should
      * be written as a debit.
     C*
     C*               Head Killed mult Frt Rate (4.00)
     C*
     C     BLL6A1        MULT      WKFTRT        FTPUR$            9 2
     C*
     C                   MOVE      FTPUR$        WKAMT
     C*
     C*    BLG031496
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C* Set up the account for Transportation Allowance Accrual
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPTPALAC'    WKACT
     C*
     C*  Execute subroutine to retrieve the JDE account ID
     C*
     C                   EXSR      $RACID
     C*
     C*  EXECUTE SUBROUTINE TO RETRIEVE THE COST CENTER/OBJECT/SUB
     C*
     C                   EXSR      $CCOBS
     C*
      * Calculate Transportation Allowance Accrual Amount.  This amount
      * should be written as a credit.
     C*
     C*  MOVE ACCAMT (15.0) BACK INTO A DECIMAL AMOUNT TO DO CALC.
     C*
     C                   MOVE      ACCAMT        WKDAMT            9 2
     C     FTPUR$        SUB       WKDAMT        FTACC$            9 2
     C                   MOVE      FTACC$        WKAMT
     C*
     C*    BLG031496
     C*
     C     WKAMT         IFNE      *ZEROS
     C     WKAMT         MULT      -1            WKAMT
     C                   EXSR      $911
     C                   ENDIF
     C*
     C                   ENDSR
     C/EJECT
     C*
     C*---------------------------------------------------------------*
     C*   WRITE VOUCHER ENTRY RECORD TO JD EDWARDS
     C*---------------------------------------------------------------*
     C*
     C     $411          BEGSR
     C*
     C*  Retrieve the payment instrument type for the producer from
     C*  JDE.  Initially hard code to the value for actual checks.  If
     C*  the vendor ID has something coded on it in the vendor master,
     C*  then use that payment instrument type.  The vendor id payment
     C*  instrument type will only contain a value if something other than
     C*  a check is to be cut.
     C*
     C     CO            IFEQ      960
     C                   MOVE      'S'           RPPYIN                         PAYMENT CODE
     C                   ELSE
     C                   MOVE      'H'           RPPYIN                         PAYMENT CODE
     C                   ENDIF
     C*
     C                   MOVE      *BLANKS       RPGLC                          G/L OFFSET
     C*
     C     BKLXNB        CHAIN     I0401                              40
     C     *IN40         IFEQ      *OFF                                         40 = OFF
     C*
     C     A6PYIN        IFNE      ' '                                          DIRECT DEPOSIT
     C                   MOVE      A6PYIN        RPPYIN                         PAYMENT CODE
     C                   ENDIF                                                  DIRECT DEPOSIT
     C                   MOVE      A6APC         RPGLC                          G/L OFFSET
     C                   ENDIF                                                  40 = OFF
     C*
     C*  MOVE IN THE BANK SHORT ACCOUNT I.D.
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPBNK'       WKACT                          BANK
     C*
     C*  Execute subroutine to retrieve the JDE account ID
     C*
     C                   EXSR      $RACID
     C*
     C                   MOVE      WKID          RPGLBA                         BNK ACT I.D.
     C*
     C* CALL PGM TO RETRIEVE THE COST CENTER THAT GOES WITH THE SHORT
     C* ACCOUNT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   MOVE      *BLANKS       WKANI
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      RPGLBA        PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFEQ      *BLANKS
     C                   MOVE      PSMCU         RPMCU
     C                   ELSE
     C                   MOVE      *BLANKS       RPMCU
     C                   ENDIF
     C*
     C                   MOVE      SVGLDT        RPDIVJ                         INVOICE DATE
     C*
     C*   MOVE NET AMOUNT INTO GROSS AMOUNT IF NET IS NOT ZERO.
     C*   OTHERWISE MOVE GROSS AMOUNT IN FROM DETAIL FILE IF NOT A SPLIT.
     C*
     C     BLAMVA        IFNE      0                                            NET N= 0
     C                   MOVE      BLAMVA        RPAAP                          OPEN AMT
     C                   MOVE      BLAMVA        RPAG                           GROSS AMT
     C                   ELSE                                                   NET = 0
     C                   MOVE      BLAKVA        RPAAP                          OPEN AMT
     C                   MOVE      BLAKVA        RPAG                           GROSS AMT
     C                   ENDIF                                                  NET N= 0
     C*
     C*---------------------------
     C*  IF EXTERNAL PRODUCER...
     C*---------------------------
     C*
     C     BKCSST        IFEQ      'E'                                          EXTERNAL
     C*
     C* MOVE IN TOTAL DEDUCTIONS TO THE FOREIGN DISCOUNT AMOUNT TAKEN.
     C* WHEN PRINTING CHECKS, THE TOTDIS WILL BE ADDED TO THE NET AMOUNT
     C* TO COME UP WITH THE GROSS AMOUNT TO PRINT ON THE CHECK STUB.
     C* (RPCDSA + RPAG = GROSS).  THE CHECK ROUTING FIELD WILL GROUP ALL
     C* EXTERNAL CHECKS TOGETHER AND THEN ALL TRUCKER CHECKS TOGETHER
     C* WHEN PRINTING...
     C*
     C                   MOVE      TOTDIS        RPCDSA                         FOREIGN DISC
     C                   MOVEL     'E'           RPCRC                          CHECK ROUTING
     C                   ELSE                                                   NOT EXT.
     C*---------------------------
     C*  IF TRUCKER....
     C*---------------------------
     C     BKCSST        IFEQ      'T'                                          TRUCKER
     C                   Z-ADD     0             RPCDSA                         FOREIGN DISC
     C                   MOVEL     'T'           RPCRC                          CHECK ROUTING
     C                   ELSE                                                   NOT TRUCKER
     C*---------------------------
     C*  IF COMMISSION...
     C*---------------------------
     C*
     C     BKCSST        IFEQ      'C'                                          COMMISSIONS
     C                   Z-ADD     0             RPCDSA                         FOREIGN DISC
     C                   MOVEL     'C'           RPCRC                          CHECK ROUTING
     C                   ENDIF                                                  COMMISSIONS
     C*
     C                   ENDIF                                                  TRUCKER
     C                   ENDIF                                                  EXTERNAL
     C*
     C* SETUP DOCUMENT AND BATCH TYPE DEPENDING UPON TYPE OF CHECK
     C*
     C     BKCUST        IFEQ      'M'                                          MANUAL
     C                   MOVEL     'M'           RPICUT                         BATCH TYPE
     C                   Z-ADD     PMICU         RPICU                          BATCH #
     C                   MOVE      'PM'          RPDCT                          DOC TYPE
     C*
     C                   MOVE      BLAMVA        WAMT             15 0          BATCH AMT
     C                   ADD       WAMT          PMAMT            15 0          BATCH AMT
     C                   ADD       1             PMCNT             5 0          BATCH COUNT
     C                   ELSE                                                   NOT MANUAL
     C     BKCUST        IFEQ      'R'                                          REGULAR
     C                   MOVEL     'V'           RPICUT                         BATCH TYPE
     C                   Z-ADD     PVICU         RPICU                          BATCH #
     C                   MOVE      'PV'          RPDCT                          DOC TYPE
      *
      *  IF THE NET AMOUNT OF THE CHECK IS NOT ZERO, WE WILL WRITE THE
      *  NET AMOUNT.  OTHERWISE WE WILL WRITE THE GROSS AMOUNT SO WE
      *  GET A ZERO AMOUNT CHECK...
     C*
     C     BLAMVA        IFNE      0                                            NET NOT 0
     C                   MOVE      BLAMVA        WAMT                           NET AMT
     C                   ELSE                                                   NET = 0
     C                   MOVE      BLAKVA        WAMT                           GROSS AMT
     C                   ENDIF                                                  NET NOT 0
      *
     C                   ADD       WAMT          PVAMT            15 0          BATCH AMT
     C                   ADD       1             PVCNT             5 0          BATCH COUNT
     C                   ENDIF                                                  REGULAR
     C                   ENDIF                                                  MANUAL
      *
     C                   Z-ADD     SVDOC         RPDOC                          DOCUMENT #
      *
     C                   Z-ADD     BKLXNB        RPAN8                          VENDOR #
     C                   Z-ADD     BKLXNB        RPPYE                          PAYEE ADR #
     C*
     C                   Z-ADD     WKPN          RPPN                           PERIOD #
     C                   Z-ADD     WKFY          RPFY                           FISCAL YR
     C                   Z-ADD     WKCEN         RPCTRY                         CENTURY
     C*
     C                   MOVE      SVGLDT        RPDGJ                          G/L DATE
     C                   MOVE      SVGLDT        RPDDJ                          DUE DATE
     C                   MOVE      SVGLDT        RPDSVJ                         SERV/TAX DATE
     C*
     C                   MOVE      '000'         RPSFXO                         ORDER SUFFIX
     C*
     C*   WRITE RECORD TO JDE A/P LEDGER (F0411)
     C*
     C                   WRITE     I0411
     C*
     C*  IF THIS IS A ZERO AMOUNT CHECK, WRITE A REVERSAL ENTRY WITH A
     C*  DIFFERENT DOCUMENT TYPE...
     C*
     C     BKAJVA        IFEQ      0                                            NET = 0
     C                   MOVE      'PD'          RPDCT                          DOC TYPE
     C*
     C                   MOVE      BLAKVA        WAMT
     C*
     C     WAMT          MULT      -1            WAMT                           GROSS AMT
     C                   MOVE      WAMT          RPAAP                          OPEN AMT
     C                   MOVE      WAMT          RPAG                           GROSS AMT
     C                   ADD       WAMT          PVAMT                          BATCH AMT
     C                   ADD       1             PVCNT                          BATCH COUNT
     C*
     C*   WRITE RECORD TO JDE A/P LEDGER (F0411)
     C*
     C                   WRITE     I0411
     C                   ENDIF                                                  NET = 0
     C*
     C*  IF THIS IS A MANUAL CHECK, WRITE THE CHECK RECORD TO THE
     C*  MATCHING DOCUMENTS FILE AND THE MATCHING DOCUMENTS DETAIL FILE
     C*
     C     BKCUST        IFEQ      'M'                                          MANUAL
     C                   MOVE      'PN'          RMDCTM                         CHECK DOC TYPE
     C                   MOVEL     PMICUT        RMICUT                         BATCH TYPE
     C                   MOVEL     PMICU         RMICU                          BATCH #
     C*
     C                   Z-ADD     BKDKNB        RMDOCM                         CHECK #
     C                   Z-ADD     BKA2DT        CKCYMD                         CHECK DATE
     C*
     C*   RETRIEVE JULIAN DATE FOR CHECK DATE BY USING JDE'S ROUTINE..
     C*
     C                   TIME                    $TIME            12 0
     C                   MOVE      $TIME         $DATE             6 0
     C                   MOVE      BKA2DT        #SIDAT            6
     C                   MOVE      *BLANK        #EDAT             8
     C                   MOVEL     '*SYSVAL'     #FFMT             7
     C                   MOVEL     '*JUL   '     #TFMT             7
     C                   MOVEL     '*NONE'       #SEP              7
     C                   MOVE      *BLANK        $ERTST            1
     C                   CALL      'X0028   '
     C                   PARM                    #SIDAT
     C                   PARM                    #EDAT
     C                   PARM                    #FFMT
     C                   PARM                    #TFMT
     C                   PARM                    #SEP
     C                   PARM                    $ERTST
     C                   PARM      *BLANKS       $CTRY             2
     C                   MOVE      #SIDAT        RMDMTJ                         CHECK DATE
     C*
     C                   Z-ADD     BKLXNB        RMPYE                          VENDOR #
     C                   MOVE      RPGLBA        RMGLBA                         BANK ACCOUNT
     C                   Z-ADD     0             RMVDGJ                         VOID DATE
     C                   MOVE      '2'           RMAM                           ACCT MODE
     C                   MOVEL     WRKSTN        RMJOBN                         WORK STATION
     C*
     C                   MOVE      BKAJVA        WAMT                           PYMNT AMOUNT
     C     WAMT          MULT      -1            RMPAAP                         PYMNT AMOUNT
     C*
     C*  CALL JDE'S ROUTINE TO RETRIEVE THE NEXT AVAILABLE PAYMENT ID.
     C*  THIS ROUTINE WRITES A BLANK RECORD TO F0413 WITH THIS PAYMENT
     C*  I.D.  PAYMENT ID IS A UNIQUE NUMBER.
     C*
     C                   CALL      'X04131'
     C                   PARM      *ZEROS        RMPYID           15 0          PYMNT ID
     C*
     C*   CHAIN TO MATCHING DOCUMENTS FILE TO UPDATE RECORD JUST
     C*   WRITTEN IN THE CALL TO X04131.
     C*
     C     RMPYID        CHAIN     I0413                              55
     C     *IN55         IFEQ      *OFF
     C                   UPDATE    I0413
     C                   ENDIF
     C*
     C                   Z-ADD     RMPYID        RNPYID                         PAYMENT ID
     C                   MOVEL     'PN'          RNDCTM                         PY ITM DOC
     C                   MOVEL     WKCO          RNKCO                          DOC CO #
     C                   MOVEL     'PM'          RNDCT                          DOC TYPE
     C                   Z-ADD     SVDOC         RNDOC                          DOC #
     C                   MOVEL     '000'         RNSFX                          PAY ITEM
     C     RMPAAP        MULT      -1            RNPAAP                         PYMNT AMOUNT
     C                   MOVE      *ZEROS        RNCRR                          EXCHANGE RATE
     C                   MOVE      *ZEROS        RNHCRR                         HIST EXCH RATE
     C                   Z-ADD     RPPN          RNPN                           PERIOD #
     C                   Z-ADD     RPFY          RNFY                           FISCAL YEAR
     C                   Z-ADD     RPCTRY        RNCTRY                         CENTURY
     C                   Z-ADD     RPAN8         RNAN8                          VENDOR #
     C                   MOVE      WKCO          RNCO                           COMPANY #
     C                   MOVEL     WRKSTN        RNJOBN                         WORK STATION
     C                   MOVEL     RPMCU         RNMCU                          COST CENTER
     C*
     C*  EXECUTE JDE'S ROUTINE TO RETRIEVE THE NEXT FILE LINE ID FOR
     C*  THE PAYMENT ID JUST WRITTEN.
     C*
     C                   Z-ADD     RNPYID        #414ID
     C                   EXSR      C04141
     C                   Z-ADD     #414C5        RNRC5                          FILE LINE ID
     C*
     C*   WRITE RECORD TO MATCHING DOCUMENTS DETAIL FILE
     C*
     C                   WRITE     I0414
     C*
     C                   ENDIF                                                  MANUAL
     C*
     C                   ENDSR
     C/EJECT
     C*
     C*---------------------------------------------------------------*
     C*   WRITE JOURNAL ENTRY RECORD TO JD EDWARDS SUBROUTINE
     C*---------------------------------------------------------------*
     C*
     C     $911          BEGSR
     C*
     C* SETUP DOCUMENT AND BATCH TYPE DEPENDING UPON TYPE OF CHECK
     C* AND PAYEE TYPE...
     C* BG981209 -- ADDED BKCSST OREQ 'C'OMMISSIONS
     C*
     C     BKCSST        IFEQ      'E'                                          EXTERNAL
     C     BKCSST        OREQ      'T'                                          TRUCKER
     C     BKCSST        OREQ      'C'                                          COMMISSIONS
     C*
     C     BKCUST        IFEQ      'M'                                          MANUAL
     C                   MOVEL     PMICUT        GLICUT                         BATCH TYPE
     C                   Z-ADD     PMICU         GLICU                          BATCH #
     C                   MOVE      'PM'          GLDCT                          DOC TYPE
     C*
     C                   ELSE                                                   NOT MANUAL
     C     BKCUST        IFEQ      'R'                                          REGULAR
     C                   MOVEL     PVICUT        GLICUT                         BATCH TYPE
     C                   Z-ADD     PVICU         GLICU                          BATCH #
     C                   MOVE      'PV'          GLDCT                          DOC TYPE
     C*
     C                   ENDIF                                                  REGULAR
     C                   ENDIF                                                  MANUAL
     C*
     C                   ELSE                                                   INTERNAL
     C                   MOVEL     JEICUT        GLICUT                         BATCH TYPE
     C                   Z-ADD     JEICU         GLICU                          BATCH #
     C                   MOVE      'UC'          GLDCT                          DOC TYPE
     C                   MOVE      'R'           GLRCND                         RECONCILED CODE
     C                   MOVE      'I'           GLCFF1                         P16169
     C                   ADD       1             JECNT             5 0
     C                   ADD       WKAMT         JEAMT            15 0
     C                   ENDIF                                                  EXTERNAL
      *
     C                   Z-ADD     SVDOC         GLDOC                          DOCUMENT #
      *
     C                   Z-ADD     0             GLDKC                          CHECK CLEAR DATE
     C                   MOVE      SVGLDT        GLDGJ                          G/L DATE
     C*
     C* BG981209 -- ADDED BKCSST IFEQ 'C'OMMISSIONS
     C*
     C     BKCSST        IFEQ      'T'                                          TRUCKER
     C                   MOVEL     TRINV#        GLVINV                         INVOICE #
     C                   ELSE                                                   TRUCKER
     C     BKCSST        IFEQ      'C'                                          COMMISSION
     C                   MOVEL     BLCVNB        GLVINV                         INVOICE #
     C                   ELSE                                                   NOT COMMISSION
     C                   MOVEL     PRINV#        GLVINV                         INVOICE #
     C                   ENDIF                                                  COMMISSION
     C                   ENDIF                                                  TRUCKER
     C*
     C                   MOVE      *BLANKS       GLCN                           CHECK #
     C                   Z-ADD     0             GLDKJ                          CHECK DATE
     C*
     C                   ADD       1             GLJELN                         LINE NUMBER
     C*
     C* SAVE LINE COUNTER ON INTERNALS TO USE WHEN WRITING THE INTER-CO
     C* RECORD TO F0911 AT LR TO PREVENT WRITING A DUPLICATE RECORD.
     C*
     C     BKCSST        IFEQ      'I'                                          INTERNAL
     C                   Z-ADD     GLJELN        SVJELN            7 1          LINE NUMBER
     C                   ENDIF                                                  INTERNAL
     C*
     C*  If the posting edit code for this account is an "L", process the
     C*  subroutine that will determine whether to use the producer or the
     C*  producer location as the subledger.
     C*
     C     GMPEC         IFEQ      'L'
     C                   EXSR      $PRLOC
     C                   ELSE
     C                   MOVE      *BLANKS       GLSBL                          Subledger
     C                   MOVE      *BLANKS       GLSBLT                         Subledger Type
     C                   ENDIF
     C*
      * CALL PGM TO GET STRUCTURED ACCOUNT NUMBER.
     C*
     C                   MOVE      *BLANKS       WKANI            29
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '2'           PSOMOD            1
     C                   PARM      '9'           PSIMOD            1
     C     WKANI         PARM                    PSANI            29
     C                   PARM      GLMCU         PSMCU            12
     C                   PARM      GLOBJ         PSOBJ             6
     C                   PARM      GLSUB         PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFEQ      *BLANKS
     C                   MOVEL     WKANI         GLANI
     C                   ELSE
     C                   MOVE      *BLANKS       GLANI
     C                   ENDIF
     C*
     C                   Z-ADD     WKPN          GLPN                           PERIOD #
     C                   Z-ADD     WKFY          GLFY                           FISCAL YEAR
     C                   Z-ADD     WKCEN         GLCTRY                         CENTURY
     C*
     C                   MOVE      WKAMT         GLAA                           GROSS AMT
     C                   MOVEL     WKALPH        GLEXA                          ALPHA NAME
     C                   Z-ADD     BKLXNB        GLAN8                          VENDOR NUMBER
     C*
     C                   MOVE      SVGLDT        GLDSVJ                         SERV/TAX DATE
     C*
     C                   MOVE      *BLANKS       GLRE                           REVERSE/VOID
     C*
     C                   WRITE     I0911
     C*
     C*  IF THIS IS A ZERO AMOUNT CHECK, WRITE A REVERSAL ENTRY WITH A
     C*  DIFFERENT DOCUMENT TYPE...
     C*
     C     BKAJVA        IFEQ      0                                            NET = 0
     C                   MOVE      'PD'          GLDCT                          DOC TYPE
     C                   MOVE      'V'           GLRE                           REVERSAL/VOID
     C     WKAMT         MULT      -1            GLAA                           AMOUNT
     C                   ADD       1             GLJELN                         J/E LINE CNT
     C*
     C*   WRITE RECORD TO JDE G/L LEDGER (F0911)
     C*
     C                   WRITE     I0911
     C                   MOVE      *BLANKS       GLEXR
     C*
     C                   ENDIF                                                  NET = 0
     C*
     C*
     C*  ONLY ACCUMULATE DEBIT AMOUNTS FOR BATCH HEADER
     C*
     C     GLAA          IFGT      0                                            GLAA > 0
     C                   ADD       GLAA          BATAMT           15 0
     C                   ADD       1             BATNDO            5 0
     C                   ENDIF                                                  GLAA > 0
     C                   ENDSR
     C/EJECT
     C*
     C*---------------------------------------------------------------*
     C*   Producer or Producer Location?
     C*---------------------------------------------------------------*
     C*
     C     $PRLOC        BEGSR
     C*
     C                   Z-ADD     *ZEROS        WKVNDR            8 0          Vendor
     C*
     C*  Chain to the Tatoo header to retrieve the producer code and the
     C*  producer location code.
     C*
     C     KEYTH         CHAIN     @A1CPC4                            56        pka1cpl0
     C     *IN56         IFEQ      *OFF                                         56 = OFF
     C*
     C*  Depending on subtype retrieved from the G/L account ID, determines
     C*  if producer vendor # is used for the subledger or if the producer
     C*  location # is used for the subledger.
     C*
     C     SUBTYP        IFEQ      'P'                                          Producer
     C* Use producer
     C*
     C*  Chain to the Producer file.  If no producer found, zero out the
     C*  vendor number to make the subledger invalid.
     C*
     C     A1ABCD        CHAIN     @ACREAI                            57        pkacrel1
     C     *IN57         IFEQ      *OFF                                         57 = OFF
     C                   Z-ADD     ACGCNB        WKVNDR                         Vendor
     C                   ELSE                                                   57 = ON
     C                   Z-ADD     *ZEROS        WKVNDR                         Vendor
     C                   ENDIF                                                  57 = OFF
     C*
     C                   ELSE                                                   Not Producer
     C* Use location
     C     SUBTYP        IFEQ      'L'                                          Producer Location
     C*
     C*  Chain to the Producer Location file.  If no location found, zero out
     C*  the vendor number to make the subledger invalid.
     C*
     C     KEYPL         CHAIN     @AFREAR                            58        pkafrel0
     C     *IN58         IFEQ      *OFF                                         58 = OFF
     C                   Z-ADD     AFGLNB        WKVNDR                         Vendor
     C                   ELSE                                                   58 = ON
     C                   Z-ADD     *ZEROS        WKVNDR                         Vendor
     C                   ENDIF                                                  58 = OFF
     C*
     C                   ENDIF                                                  Producer Location
     C                   ENDIF                                                  Producer
     C*
     C*  Validate the vendor number in the vendor master.  If found, use
     C*  that vendor number as the subledger.  If not found, move blanks
     C*  into the subledger And the subledger type.
     C*
     C     WKVNDR        CHAIN     I0101                              59        F0101
     C     *IN59         IFEQ      *OFF                                         59 = OFF
     C                   MOVEL     WKVNDR        GLSBL                          Subledger
     C*
     C*  By moving an "A" into the subledger type, the subledger will be
     C*  validated again against the vendor master once the batch is approved
     C*  in JDE.
     C                   MOVE      'A'           GLSBLT                         Subledger type
     C                   ELSE                                                   59 = OFF
     C*
     C                   MOVE      *BLANKS       GLSBL                          Subledger
     C                   MOVE      *BLANKS       GLSBLT                         Subledger type
     C                   ENDIF                                                  59 = OFF
     C                   ENDIF                                                  56 = OFF
     C*
     C                   ENDSR
     C/EJECT
     C*
     C*---------------------------------------------------------------*
     C*   WRITE MANUAL CHECK RECORD TO JD EDWARDS SUBROUTINE
     C*---------------------------------------------------------------*
     C*
     C     $MAN          BEGSR
     C*
     C*  IF THIS IS A MANUAL CHECK, WRITE THE CHECK RECORD.
     C*
     C                   MOVEL     PMICUT        GLICUT                         BATCH TYPE
     C                   Z-ADD     PMICU         GLICU                          BATCH #
     C                   MOVE      'PN'          GLDCT                          DOC TYPE
     C                   Z-ADD     BKDKNB        GLDOC                          DOC #
     C*
     C                   MOVE      SVGLDT        GLDGJ                          G/L DATE
     C*
     C* BG981209 -- ADDED BKCSST IFEQ 'C'OMMISSIONS
     C*
     C     BKCSST        IFEQ      'T'                                          TRUCKER
     C                   MOVEL     TRINV#        GLVINV                         INVOICE #
     C                   ELSE                                                   TRUCKER
     C     BKCSST        IFEQ      'C'                                          COMMISSIONS
     C                   MOVEL     BLCVNB        GLVINV                         INVOICE #
     C                   ELSE                                                   NOT COMMSSIONS
     C                   MOVEL     PRINV#        GLVINV                         INVOICE #
     C                   ENDIF                                                  COMMISSIONS
     C                   ENDIF                                                  TRUCKER
     C*
     C                   ADD       1             GLJELN                         J/E LINE CNT
     C*
     C                   MOVE      *ZEROS        GLCN                           CHECK #
     C                   MOVE      BKDKNB        GLCN                           CHECK #
     C                   Z-ADD     BKA2DT        CKCYMD                         CHECK DATE
     C*
     C*   RETRIEVE JULIAN DATE FOR CHECK DATE BY USING JDE'S ROUTINE.
     C*
     C                   TIME                    $TIME            12 0
     C                   MOVE      $TIME         $DATE             6 0
     C                   MOVE      BKA2DT        #SIDAT            6
     C                   MOVE      *BLANK        #EDAT             8
     C                   MOVEL     '*YMD   '     #FFMT             7
     C                   MOVEL     '*JUL   '     #TFMT             7
     C                   MOVEL     '*NONE'       #SEP              7
     C                   MOVE      *BLANK        $ERTST            1
     C                   CALL      'X0028   '
     C                   PARM                    #SIDAT
     C                   PARM                    #EDAT
     C                   PARM                    #FFMT
     C                   PARM                    #TFMT
     C                   PARM                    #SEP
     C                   PARM                    $ERTST
     C                   PARM      *BLANKS       $CTRY
     C                   MOVE      #SIDAT        GLDKJ                          CHECK DATE
     C*
     C                   MOVE      ' '           GLRCND                         RECONCILIED
     C                   MOVE      'I'           GLCFF1                         P16169
     C*
     C*  MOVE IN THE BANK SHORT ACCOUNT I.D.
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPBNK'       WKACT                          BANK
     C*
     C*  Execute subroutine to retrieve the JDE account ID
     C*
     C                   EXSR      $RACID
     C*
     C* CALL PGM TO RETRIEVE THE COST CENTER/OBJ/SUB THAT BELONGS TO
     C* THE ACT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       GLMCU
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   MOVE      *BLANKS       WKID
     C                   ELSE
     C                   MOVE      PSMCU         GLMCU
     C                   MOVE      PSOBJ         WKOBJ
     C                   MOVE      PSSUB         WKSUB
     C                   ENDIF
     C*
     C                   MOVE      WKID          GLAID                          BNK ACT I.D.
     C*
      * CALL PGM TO GET STRUCTURED ACCOUNT NUMBER.
     C*
     C                   MOVE      *BLANKS       WKANI            29
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '2'           PSOMOD            1
     C                   PARM      '9'           PSIMOD            1
     C     WKANI         PARM                    PSANI            29
     C                   PARM      GLMCU         PSMCU            12
     C                   PARM      GLOBJ         PSOBJ             6
     C                   PARM      GLSUB         PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFEQ      *BLANKS
     C                   MOVEL     WKANI         GLANI
     C                   ELSE
     C                   MOVE      *BLANKS       GLANI
     C                   ENDIF
     C*
     C*      CALCULATE PERIOD & FISCAL YEAR FROM CHECK DATE
     C*
     C                   Z-ADD     CKMO          MOCK
     C                   Z-ADD     CKDA          DACK
     C                   Z-ADD     CKYR          YRCK
     C*
     C                   CALL      'X09031'
     C                   PARM      '1'           #CALC             1
     C                   PARM      WKCO          #CO               5
     C                   PARM      CKMDY         #DG               6 0
     C                   PARM                    #PN               2 0
     C                   PARM                    #FY               2 0
     C                   PARM                    #CTRY             2 0
     C                   PARM                    #EDT              1
     C                   PARM                    #DGSY             1
     C*
     C                   Z-ADD     #PN           GLPN                           PERIOD #
     C                   Z-ADD     #FY           GLFY                           FISCAL YEAR
     C                   Z-ADD     #CTRY         GLCTRY                         CENTURY
     C*
     C                   MOVE      BKAJVA        WKAMT                          GROSS AMT
     C     WKAMT         MULT      -1            GLAA                           GROSS AMT
     C                   MOVEL     WKALPH        GLEXA                          ALPHA NAME
     C                   MOVE      *ZEROS        GLR1                           REFERENCE #
     C                   MOVE      BKDKNB        GLR1                           REFERENCE #
     C                   MOVE      *ZEROS        GLAN8                          VENDOR #
     C                   Z-ADD     BKLXNB        GLAN8                          VENDOR NUMBER
     C                   MOVE      *ZEROS        GLR2                           REF 2
     C                   MOVE      BKLXNB        GLR2                           REF 2
     C                   MOVE      '000'         GLSFX                          PAY ITEM
     C*
     C                   MOVE      GLDKJ         GLDSVJ                         SERV/TAX DATEH
     C*
     C*   WRITE CHECK TO JDE G/L LEDGER (F0911)
     C*
     C                   WRITE     I0911
     C*
     C                   ENDSR
     C/EJECT
     C*---------------------------------------------------------------
     C*              WRITE INTERCOMPANY OFFSET RECORD FOR INTERNALS
     C*---------------------------------------------------------------
     C*
     C     $INTCO        BEGSR
     C*
     C                   MOVE      WKNAMT        NAMT             15 0
     C     NAMT          MULT      -1            GLAA                           Amount
     C*
     C                   Z-ADD     INTDOC        GLDOC                          DOCUMENT #
     C                   MOVEL     JEICUT        GLICUT                         BATCH TYPE
     C                   Z-ADD     JEICU         GLICU                          BATCH #
     C                   MOVE      'UC'          GLDCT                          DOC TYPE
      *
     C                   Z-ADD     0             GLDKC                          CHECK CLEAR DATE
     C                   MOVE      SVGLDT        GLDGJ                          G/L DATE
     C*
     C                   MOVE      *BLANKS       GLCN                           CHECK #
     C                   Z-ADD     0             GLDKJ                          CHECK DATE
     C*
     C                   Z-ADD     SVJELN        GLJELN                         LINE NUMBER
     C                   ADD       1             GLJELN                         LINE NUMBER
     C*
     C*  RETRIEVE THE OFFSET ACCOUNT
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     'HPINTCO '    WKACT             8
     C                   MOVE      *BLANKS       WKID              8
     C*
     C*  Execute subroutine to retrieve the JDE account ID
     C*
     C                   EXSR      $RACID
     C*
     C* CALL PGM TO RETRIEVE THE COST CENTER/OBJ/SUB THAT BELONGS TO
     C* THE ACT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   ELSE
     C                   MOVE      PSOBJ         WKOBJ
     C                   MOVE      PSSUB         WKSUB
     C                   ENDIF
     C*
     C*  IF THE BALANCE SHEET STATUS IS A 'Y', THE COMPANY NUMBER WILL
     C*  BE DEFAULTED INTO THE COST CENTER.  ELSE USE THE COST CENTER
     C*  ASSOCIATED WITH THE ACCT ID.
     C*
     C                   MOVE      *BLANKS       WKMCU
     C     BALSHT        IFEQ      'Y'
     C                   MOVE      ACO           WKMCU
     C                   ELSE
     C                   MOVE      PSMCU         WKMCU
     C                   ENDIF
     C*
     C* CALL SUBROUTINE TO VALIDATE COST CENTER/OBJECT/SUB COMBINATION
     C*
     C                   EXSR      $VAL
     C*
      * CALL PGM TO GET STRUCTURED ACCOUNT NUMBER AND ACCOUNT I.D.
     C*
     C                   MOVE      *BLANKS       WKANI            29
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '2'           PSOMOD            1
     C                   PARM      '9'           PSIMOD            1
     C     WKANI         PARM                    PSANI            29
     C                   PARM      GLMCU         PSMCU            12
     C                   PARM      GLOBJ         PSOBJ             6
     C                   PARM      GLSUB         PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFEQ      *BLANKS
     C                   MOVEL     WKANI         GLANI
     C                   ELSE
     C                   MOVE      *BLANKS       GLANI
     C                   ENDIF
     C*
     C                   Z-ADD     WKPN          GLPN                           PERIOD #
     C                   Z-ADD     WKFY          GLFY                           FISCAL YEAR
     C                   Z-ADD     WKCEN         GLCTRY                         CENTURY
     C*
     C*  SETUP DESCRIPTION
     C*
     C                   MOVE      *BLANKS       GLEXR                          REMARKS
     C                   MOVE      *BLANKS       GLEXA
     C                   MOVEL     WKINT         GLEXA
     C*
     C                   Z-ADD     0             GLAN8                          VENDOR #
     C                   MOVE      SVGLDT        GLDSVJ                         SERV/TAX DATE
     C*
     C                   MOVE      *BLANKS       GLRE                           REVERSE/VOID
     C                   MOVE      'R'           GLRCND                         RECONCILED
     C                   MOVE      'I'           GLCFF1                         P16169
     C*
     C                   MOVE      *BLANKS       GLSBL
     C                   MOVE      *BLANKS       GLSBLT
     C                   WRITE     I0911
     C                   Z-ADD     0             WKNAMT
     C*
     C                   ENDSR
     C/EJECT
     C*---------------------------------------------------------------
     C*       WRITE INTERCOMPANY SALES OFFSET RECORD FOR INTERNALS
     C*---------------------------------------------------------------
     C* B:  BG010531 - ADDED SUBROUTINE TO WRITE THE IC SALES FOR THE
     C*                INTERNALS.
     C*
     C     $ICSAL        BEGSR
     C*
     C* CALL PGM TO GENERATE NEXT AVAILABLE DOCUMENT # FROM JDE
     C*
     C                   MOVEL     '09  '        WKSY
     C                   MOVEL     '02'          WKIDX
     C                   EXSR      $RVNBR
     C*
     C                   Z-ADD     PSNBR         GLDOC
     C*
     C                   MOVEL     JEICUT        GLICUT                         BATCH TYPE
     C                   Z-ADD     JEICU         GLICU                          BATCH #
     C                   MOVE      'JE'          GLDCT                          DOC TYPE
      *
     C                   Z-ADD     0             GLDKC                          CHECK CLEAR DATE
      *
     C                   MOVE      *ZEROS        GLCO
     C                   Z-ADD     350           CO350             3 0
     C                   MOVE      CO350         GLCO
      *
      * B:  BG010711 --  MOVE IN SAVED G/L DATE INSTEAD OF BATCH DATE
      *
     C                   MOVE      SVGLDT        GLDGJ                          G/L DATE
      * E:  BG010711
     C*
     C                   MOVE      *BLANKS       GLVINV                         INVOICE #
     C                   MOVE      *BLANKS       GLCN                           CHECK #
     C                   Z-ADD     0             GLDKJ                          CHECK DATE
     C*
     C                   Z-ADD     1             GLJELN                         LINE NUMBER
     C*
     C*  RETRIEVE THE OFFSET ACCOUNTS
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     '1910    '    WKACT             8
     C                   MOVE      *BLANKS       WKID              8
     C                   MOVE      GLCO          GLKCO
     C*
     C*  CALL PROGAM TO RETRIEVE THE G/L ACCOUNT I.D.
     C*
     C                   CALL      'PKTIXFR'
     C                   PARM                    RETRN
     C                   PARM      CO350         CO#               3 0
     C                   PARM      WKACT         GLCOD             8
     C     WKID          PARM                    ACTID             8
     C                   PARM                    SUBTYP            1
     C     BALSHT        PARM                    BALTYP            1
     C     ACCTCO        PARM                    ACCTCO            3 0
     C*
     C* CALL PGM TO RETRIEVE THE COST CENTER/OBJ/SUB THAT BELONGS TO
     C* THE ACT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       WKMCU
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   ELSE
     C                   MOVE      PSMCU         WKMCU
     C                   MOVE      PSOBJ         WKOBJ
     C                   MOVE      PSSUB         WKSUB
     C                   ENDIF
     C*
     C* CALL SUBROUTINE TO VALIDATE COST CENTER/OBJECT/SUB COMBINATION
     C*
     C                   EXSR      $VAL
     C*
      * CALL PGM TO GET STRUCTURED ACCOUNT NUMBER AND ACCOUNT I.D.
     C*
     C                   MOVE      *BLANKS       WKANI            29
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '2'           PSOMOD            1
     C                   PARM      '9'           PSIMOD            1
     C     WKANI         PARM                    PSANI            29
     C                   PARM      GLMCU         PSMCU            12
     C                   PARM      GLOBJ         PSOBJ             6
     C                   PARM      GLSUB         PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFEQ      *BLANKS
     C                   MOVEL     WKANI         GLANI
     C                   ELSE
     C                   MOVE      *BLANKS       GLANI
     C                   ENDIF
     C*
     C                   Z-ADD     WKPN          GLPN                           PERIOD #
     C                   Z-ADD     WKFY          GLFY                           FISCAL YEAR
     C                   Z-ADD     WKCEN         GLCTRY                         CENTURY
     C*
     C*  SETUP DESCRIPTION
     C*
     C                   MOVE      *BLANKS       GLEXR                          REMARKS
     C                   MOVE      *BLANKS       GLEXA
     C                   MOVEL(P)  WKICS         GLEXA
     C*
     C                   Z-ADD     0             GLAN8                          VENDOR #
     C                   MOVE      SVGLDT        GLDSVJ                         SERV/TAX DATE
     C*
     C                   MOVE      *BLANKS       GLRE                           REVERSE/VOID
     C                   MOVE      'R'           GLRCND                         RECONCILED
     C                   MOVE      'I'           GLCFF1                         P16169
     C*
     C                   MOVE      *BLANKS       GLSBL
     C                   MOVE      *BLANKS       GLSBLT
     C*
     C                   MOVE      WKICS$        GLAA                           DEBIT
     C                   WRITE     I0911
     C*
     C*  RETRIEVE THE OFFSET ACCOUNT TO WRITE THE OTHER SIDE OF THE J/E
     C*
     C                   MOVE      *BLANKS       WKACT
     C                   MOVEL     '5021    '    WKACT
     C                   MOVE      *BLANKS       WKID
     C*
     C*  CALL PROGAM TO RETRIEVE THE G/L ACCOUNT I.D.
     C*
     C                   CALL      'PKTIXFR'
     C                   PARM                    RETRN
     C                   PARM      CO350         CO#               3 0
     C                   PARM      WKACT         GLCOD             8
     C     WKID          PARM                    ACTID             8
     C                   PARM                    SUBTYP            1
     C     BALSHT        PARM                    BALTYP            1
     C     ACCTCO        PARM                    ACCTCO            3 0
     C*
     C* CALL PGM TO RETRIEVE THE COST CENTER/OBJ/SUB THAT BELONGS TO
     C* THE ACT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       WKMCU
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   ELSE
     C                   MOVE      PSMCU         WKMCU
     C                   MOVE      PSOBJ         WKOBJ
     C                   MOVE      PSSUB         WKSUB
     C                   ENDIF
     C*
     C* CALL SUBROUTINE TO VALIDATE COST CENTER/OBJECT/SUB COMBINATION
     C*
     C                   EXSR      $VAL
     C*
      * CALL PGM TO GET STRUCTURED ACCOUNT NUMBER AND ACCOUNT I.D.
     C*
     C                   MOVE      *BLANKS       WKANI            29
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '2'           PSOMOD            1
     C                   PARM      '9'           PSIMOD            1
     C     WKANI         PARM                    PSANI            29
     C                   PARM      GLMCU         PSMCU            12
     C                   PARM      GLOBJ         PSOBJ             6
     C                   PARM      GLSUB         PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFEQ      *BLANKS
     C                   MOVEL     WKANI         GLANI
     C                   ELSE
     C                   MOVE      *BLANKS       GLANI
     C                   ENDIF
     C*
     C                   ADD       1             GLJELN                         LINE NUMBER
     C*
     C                   MOVE      WKICS$        NAMT             15 0
     C     NAMT          MULT      -1            GLAA                           CREDIT
     C                   WRITE     I0911
     C                   Z-ADD     0             WKICS$
     C*
     C                   ENDSR
     C/EJECT
     C*---------------------------------------------------------------
     C*              UPDATE VOUCHER HEADER RECORD
     C*---------------------------------------------------------------
     C*
     C     $HEAD         BEGSR
      *
     C                   Z-ADD     SVDOC         BKLYNB                         VOUCHER #
     C                   MOVE      'P'           BKC0ST                         PROCESS STAT
     C                   Z-ADD     UDATE         WKUDAT
     C                   Z-ADD     WKUMO         UMM
     C                   Z-ADD     WKUDA         UDD
     C                   Z-ADD     WKUYR         UYY
     C*
     C     UYY           IFLE      39
     C                   Z-ADD     1             UCC
     C                   Z-ADD     UDT           BKAADT                         DATE CHANGED
     C                   ELSE
     C                   Z-ADD     0             UCC
     C                   Z-ADD     UDT           BKAADT                         DATE CHANGED
     C                   ENDIF
     C*
     C                   TIME                    BKAMTM                         TIME CHANGED
     C*
     C                   UPDATE    @BKCPEJ
     C                   ENDSR
     C/EJECT
     C*
     C*----------------------------------------------------------------------
     C*  Retrieve GL Code set up in company cost center file
     C*----------------------------------------------------------------------
     C*
     C     $RGLCD        BEGSR
     C*
     C*  Call program to retrieve the cost center and account code for the
     C*  producer. (PKCVREP)
     C*
     C                   CALL      'PKTHXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#               3 0
     C                   PARM      BLI6ST        PYTYP             1
     C                   PARM      BLJPST        BOTYP             1
     C                   PARM      BLJIST        HOGCLS            1
     C                   PARM      BLC2SS        SOURCE            1
     C     WKMCU         PARM                    CST              12
     C     WKACT         PARM                    GLCODE            8
     C*
     C                   ENDSR
     C*
     C/EJECT
     C*
     C*----------------------------------------------------------------------
     C*  Retrieve JDE acount ID
     C*----------------------------------------------------------------------
     C*
     C     $RACID        BEGSR
     C*
     C*  CALL PROGAM TO RETRIEVE THE G/L ACCOUNT I.D. from G/L account code
     C*  file PKCWREP
     C*
     C                   CALL      'PKTIXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#               3 0
     C                   PARM      WKACT         GLCOD             8
     C     WKID          PARM                    ACTID             8
     C                   PARM                    SUBTYP            1
     C     BALSHT        PARM                    BALTYP            1
     C     ACCTCO        PARM                    ACCTCO            3 0
     C*
     C                   ENDSR
     C*
     C/EJECT
     C*
     C*----------------------------------------------------------------------
     C*  Retrieve cost center/object/sub
     C*----------------------------------------------------------------------
     C*
     C     $CCOBS        BEGSR
     C*
     C* CALL PGM TO RETRIEVE THE COST CENTER/OBJ/SUB THAT BELONGS TO
     C* THE ACT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       GLMCU
     C                   MOVE      *BLANKS       GLOBJ
     C                   MOVE      *BLANKS       GLSUB
     C                   MOVE      *BLANKS       GLAID
     C                   ELSE
     C                   MOVE      PSOBJ         GLOBJ
     C                   MOVE      PSSUB         GLSUB
     C                   MOVE      PSMCU         GLMCU
     C                   MOVE      WKID          GLAID
     C                   ENDIF
     C                   ENDSR
     C/EJECT
     C*---------------------------------------------------------------
     C*  Edit account number in JDE
     C*---------------------------------------------------------------
     C     $EDTAC        BEGSR
     C*
      * CALL PGM TO EDIT ACCOUNT # IN JDE (1=SHORT ACCT I.D., 9=
     C* SEPARATE COST CENTER, OBJECT AND SUB CODE) WE WANT TO RETRIEVE
     C* THE INDIVIDUAL OBJECT AND SUB.
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   MOVE      *BLANKS       WKID
     C                   ELSE
     C                   MOVE      PSOBJ         WKOBJ             6
     C                   MOVE      PSSUB         WKSUB             8
     C                   ENDIF
     C                   ENDSR
     C*
     C/EJECT
     C*----------------------------------------------------------------
     C*  $VAL   VALIDATE COST CENTER/OBJ/SUB COMBINATION
     C*----------------------------------------------------------------
     C*
     C     $VAL          BEGSR
     C*
      * CALL PGM TO EDIT THE COST CENTER/OBJECT/SUB IS A VALID COMBO
      * (1=SHORT ACCT I.D., 9=SEPARATE COST CENTER, OBJECT AND SUB)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '1'           PSOMOD            1
     C                   PARM      '9'           PSIMOD            1
     C     WKID          PARM                    PSANI            29
     C                   PARM      WKMCU         PSMCU            12
     C                   PARM      WKOBJ         PSOBJ             6
     C                   PARM      WKSUB         PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       GLMCU
     C                   MOVE      *BLANKS       GLOBJ
     C                   MOVE      *BLANKS       GLSUB
     C                   MOVE      *BLANKS       GLAID
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   MOVE      *BLANKS       WKMCU
     C                   MOVE      *BLANKS       WKID
     C                   ELSE
     C                   MOVE      WKMCU         GLMCU
     C                   MOVE      WKOBJ         GLOBJ
     C                   MOVE      WKSUB         GLSUB
     C                   MOVE      WKID          GLAID
     C                   ENDIF
     C*
     C                   ENDSR
     C*
     C/EJECT
     C*----------------------------------------------------------------
     C*  $CNTRA  PROCESS CONTRA RECORDS
     C*----------------------------------------------------------------
     C*
     C     $CNTRA        BEGSR
     C*
     C*   WRITE CONTRA ACCOUNT RECORD TO G/L FILE USING THE COST
     C*   CENTER RETRIEVED FROM THE PRODUCER PAYMENT TYPE IF THE
     C*   CONTRA ACCOUNT FIELD IS NOT BLANK.
     C*
     C                   MOVE      SVMCU         WKMCU
     C*
     C*  CALL PROGAM TO RETRIEVE THE G/L ACCOUNT I.D.
     C*
     C                   CALL      'PKTIXFR'
     C                   PARM                    RETRN
     C                   PARM      CO            CO#               3 0
     C                   PARM      SVE3CD        GLCOD             8
     C     WKID          PARM                    ACTID             8
     C                   PARM                    SUBTYP            1
     C     BALSHT        PARM                    BALTYP            1
     C     ACCTCO        PARM                    ACCTCO            3 0
     C                   MOVE      WKID          SVID              8
     C*
     C* CALL PGM TO RETRIEVE THE OBJ/SUB THAT BELONGS TO
     C* THE ACT I.D. (1 = SHORT ACT I.D., 9 = INDIVIDUAL COST CENTER,
     C* OBJECT AND SUB CODE)
     C*
     C                   CALL      'X0901'
     C                   PARM                    PSSYM             1
     C                   PARM      '9'           PSOMOD            1
     C                   PARM      '1'           PSIMOD            1
     C                   PARM      WKID          PSANI            29
     C                   PARM                    PSMCU            12
     C                   PARM                    PSOBJ             6
     C                   PARM                    PSSUB             8
     C                   PARM                    PSERRM            4
     C                   PARM                    I0901
     C*
     C     PSERRM        IFNE      *BLANKS
     C                   MOVE      *BLANKS       WKOBJ
     C                   MOVE      *BLANKS       WKSUB
     C                   MOVE      *BLANKS       WKID
     C                   ELSE
     C                   MOVE      PSOBJ         WKOBJ
     C                   MOVE      PSSUB         WKSUB
     C*
     C* SAVE THE COST CENTER TO USE WHEN WRITING THE CONTRA ACCOUNT
     C*
     C                   MOVE      PSMCU         CNMCU            12
     C                   ENDIF
     C*
     C* CALL SUBROUTINE TO VALIDATE COST CENTER/OBJECT/SUB COMBINATION
     C* COST CENTER WAS RETRIEVED FROM PAYMENT TYPE AND BUYORDER TYPE
     C* WHEN READING THE CHEKC DETAIL FILE.
     C*
     C                   EXSR      $VAL
     C*
     C*  DETERMINE SIGN TO KNOW TO WRITE AS POSITIVE(+) OR NEGATIVE(-)
     C*
     C     CDJBST        IFEQ      '+'
     C                   MOVE      CDA0VA        WKAMT            15 0
     C                   ELSE
     C*
     C     CDA0VA        MULT      -1            WKA0VA            7 2
     C                   MOVE      WKA0VA        WKAMT
     C                   ENDIF
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*-------------------------------------------------------------
     C*
     C*   WRITE CONTRA ACCOUNT RECORD TO G/L FILE USING THE COST
     C*   CENTER RETRIEVED FROM THE ACCOUNT ID IN THE TATOO D/A FILE
     C*
     C*-------------------------------------------------------------
     C                   MOVE      SVID          GLAID
     C*
     C                   MOVE      CNMCU         GLMCU
     C*
     C*  DETERMINE SIGN.  WRITE OUT THE OPPOSITE OF THE FIRST CONTRA
     C*  RECORD....
     C*
     C     CDJBST        IFEQ      '+'
     C     CDA0VA        MULT      -1            WKA0VA            7 2
     C                   MOVE      WKA0VA        WKAMT
     C                   ELSE
     C                   MOVE      CDA0VA        WKAMT
     C                   ENDIF
     C*
     C*    BLG031496
     C*
     C     WKAMT         IFNE      *ZEROS
     C                   EXSR      $911
     C                   ENDIF
     C*
     C* BLANK OUT SUBLEDGER AFTER THE CONTRA RECORDS ARE WRITTEN
     C*
     C                   MOVE      *BLANKS       GLSBL                          SUB LEDGER
     C                   MOVE      *BLANKS       GLSBLT                         SUBLEDGER TYPE
     C*
     C                   ENDSR
     C*
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
     C*
     C* KEY LISTS
     C*
     C* KEY USED FOR VOUCHER HEADER
     C*
     C     KEYHD         KLIST                                                  PKBKCPL0
     C                   KFLD                    CO
     C                   KFLD                    BATCH
     C*
     C* KEY USED FOR VOUCHER DETAIL
     C*
     C     KEYDT         KLIST                                                  PKBLCPL1
     C                   KFLD                    CO
     C                   KFLD                    BKLWNB                         BATCH #
     C                   KFLD                    BKG9NB                         HEADER #
     C*
     C* KEY USED FOR TATOO DETAIL
     C*
     C     KEYTA         KLIST                                                  PKCDCPL1
     C                   KFLD                    CO
     C                   KFLD                    BLBNNB                         BUYORDER
     C                   KFLD                    BLBONB                         LOAD
     C                   KFLD                    BLCVNB                         TATOO
     C*
     C* KEY USED FOR TATOO Header
     C*
     C     KEYTH         KLIST                                                  PKA1CPL0
     C                   KFLD                    CO
     C                   KFLD                    BLBNNB                         BUYORDER
     C                   KFLD                    BLBONB                         LOAD
     C                   KFLD                    BLCVNB                         TATOO
     C                   KFLD                    BLB0DT                         Kill Date
     C*
     C* KEY USED FOR Producer/Location
     C*
     C     KEYPL         KLIST                                                  PKAFREL0
     C                   KFLD                    A1ABCD                         Producer Code
     C                   KFLD                    A1AECD                         Producer Location CD
     C*
     C* KEY USED FOR BATCH HEADER IN JDE
     C*
     C     KEY11         KLIST                                                    F0011
     C                   KFLD                    WKICUT            2
     C                   KFLD                    WKICU             8 0
     C*
     C* KEY USED FOR Company Values file
     C*
     C     KEYVAL        KLIST                                                  PDKMREL1
     C                   KFLD                    CO
     C                   KFLD                    WKVAL            10
      *
      *
     C     *ENTRY        PLIST
     C                   PARM                    RETRN             7
     C                   PARM                    ACO               3
     C                   PARM                    ABAT              5
     C                   PARM                    ERR               1
     C                   PARM                    INTCO             1                   T8163
     C*
     C*   RETRIEVE JULIAN DATE FOR UDATE BY USING JDE'S ROUTINE...
     C*
     C                   TIME                    $TIME            12 0
     C                   MOVE      $TIME         $DATE             6 0
     C                   MOVE      $DATE         #SIDAT            6
     C                   MOVE      *BLANK        #EDAT             8
     C                   MOVEL     '*SYSVAL'     #FFMT             7
     C                   MOVEL     '*JUL   '     #TFMT             7
     C                   MOVEL     '*NONE'       #SEP              7
     C                   MOVE      *BLANK        $ERTST            1
     C                   CALL      'X0028   '
     C                   PARM                    #SIDAT
     C                   PARM                    #EDAT
     C                   PARM                    #FFMT
     C                   PARM                    #TFMT
     C                   PARM                    #SEP
     C                   PARM                    $ERTST
     C                   PARM      *BLANKS       $CTRY             2
     C                   MOVE      #SIDAT        GLUPMJ                         UPDATE DATE
     C                   MOVE      #SIDAT        RPUPMJ                         UPDATE DATE
     C                   MOVE      #SIDAT        RMUPMJ                         UPDATE DATE
     C                   MOVE      #SIDAT        GLDSYJ                         SYSTEM DATE
     C                   MOVE      #SIDAT        GLDICJ                         BATCH DATE
     C                   MOVE      #SIDAT        RPDICJ                         BATCH DATE
     C                   MOVE      #SIDAT        RMDICJ                         BATCH DATE
     C*
     C                   TIME                    GLTICU                         TIME
     C                   TIME                    GLUPMT                         TIME UPDATED
     C                   TIME                    RPUPMT                         TIME UPDATED
     C                   TIME                    RMUPMT                         TIME UPDATED
     C                   TIME                    RNUPMT                         TIME UPDATED
     C*
     C                   MOVE      ACO           CO                3 0
     C                   MOVE      ABAT          BATCH             5 0
     C*
     C                   MOVE      *ZEROS        WKCO              5
     C                   MOVE      ACO           WKCO
     C                   MOVE      WKCO          RPCO
     C                   MOVE      WKCO          RPKCO
     C                   MOVE      WKCO          GLCO
     C                   MOVE      WKCO          GLKCO
     C                   MOVEL     'AA'          GLLT
     C                   MOVEL     'HGBUYUSR'    WKVAL
     C*
     C                   MOVEL     WRKSTN        GLJOBN                         JOB
     C                   MOVEL     WRKSTN        RPJOBN                         JOB
     C*
     C*   MOVE ZEROS INTO LDA BATCH NUMBERS
     C*
     C                   MOVE      *ZEROS        BATCH1
     C                   MOVE      *ZEROS        BATCH2
     C                   MOVE      *ZEROS        BATCH3
     C                   MOVE      'N'           BALSHT            1                          002
     C*
     C*  DETERMINE WHETHER TO WRITE AS POSTED OR UNPOSTED....
     C*
     C     ERR           IFEQ      'N'
     C                   MOVEL     ' '           GLPOST
     C                   MOVEL     ' '           RPPOST
     C                   MOVEL     'A'           ICIST
     C                   MOVEL     ' '           RMISTP
     C                   MOVEL     ' '           RNPOST
     C                   ELSE
     C                   MOVEL     ' '           GLPOST
     C                   MOVEL     ' '           RPPOST
     C                   MOVEL     ' '           ICIST
     C                   MOVEL     ' '           RMISTP
     C                   MOVEL     ' '           RNPOST
     C                   ENDIF
     C*
     C*   Retrieve user id from the company values file to update the
     C*   user id in all the files.
     C*
     C     KEYVAL        CHAIN     PDKMREL1                           90
     C     *IN90         IFEQ      *OFF                                         90 = OFF
     C                   MOVEL     KMBXTX        GLUSER                         F0911
     C                   MOVEL     KMBXTX        GLTORG                         F0911
     C                   MOVEL     KMBXTX        RPTORG                         F0411
     C                   MOVEL     KMBXTX        RPUSER                         F0411
     C                   MOVEL     KMBXTX        ICUSER                         F0011
     C                   MOVEL     KMBXTX        RMUSER                         F0413
     C                   MOVEL     KMBXTX        RNUSER                         F0414
     C                   MOVEL     KMBXTX        BKAAVN                         PKBKCPL0
     C                   ENDIF                                                  90 = OFF
     C*
     C                   ENDSR
      *---------------------------------------------------------------
     C/EJECT
     C*****I/COPY JDECPY,C04141
     C**************************************************************
     C*  This is part of a composite common subroutine. In
     C*  order for the subroutine to work correctly, the
     C*  RPG program must /COPY in the following members:
     C*   C04141
     C**************************************************************************
     C*    MAINLINE PROGRAM
     C*    ----------------
     C*
     C*    SUBROUTINE C00701 - Check for warning message
     C*    ---------------------------------------------
     C*
     C*
     C*  PURPOSE
     C*  -------
     C*       To provide a subroutine common to all programs which
     C*       will calculate the next available File Line Identifier
     C*       within a specified payment ID.
     C*
     C*  REMARKS
     C*  -------
     C*
     C*      Input:
     C*              #414ID  - Payment ID
     C*      Output:
     C*              #414C5  - File Line Identifier
     C*
     CSR   C04141        BEGSR
     C*          ------    -----
     C*
     C*    If payment ID has NOT changed the increment File Line
     C*    Identifier.
     C*
B1   CSR   #414ID        IFEQ      #414SD
B1   CSR   #414S5        ANDNE     *HIVAL
     C*
     CSR                 ADD       1             #414S5
     CSR                 Z-ADD     #414S5        #414C5
     C*
     C*    If payment ID has changed then retrieve next identifier
     C*    from the F0414 File.
     C*
     CSR                 ELSE
     C*
     CSR                 CALL      'X04141'
     C*                    ---- --------
     CSR                 PARM      #414ID        #414PD
     CSR   #414C5        PARM      *ZERO         #414P5
     C*
     C*     - save payment values for comparison on next call
     C*
     CSR                 Z-ADD     #414ID        #414SD
     CSR                 Z-ADD     #414C5        #414S5
     CSR                 END
     C*
     CSR   *LIKE         DEFINE    RNPYID        #414ID
     CSR   *LIKE         DEFINE    RNPYID        #414PD
     CSR   *LIKE         DEFINE    RNPYID        #414SD
     CSR   *LIKE         DEFINE    RNRC5         #414C5
     CSR   *LIKE         DEFINE    RNRC5         #414P5
     CSR   *LIKE         DEFINE    RNRC5         #414S5
     C*
     CSR   E04141        ENDSR
     C****************************************************************
     C*
