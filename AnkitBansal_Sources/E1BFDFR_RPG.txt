     H/TITLE WW Run Log            DF  Display file
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Display file
     H* Object type   : *PGM
      *
     H* Company       : E1IDEVMDL
     H* System        : E1IDEVMDL
     H* User name     : ISRCENT
     H* Date          : 03/16/20  Time  : 16:00:18
     H* Copyright     : E1IDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FE1BFDFR#  CF   E             WORKSTN
     F                                     SFILE(#SFLRCD:##RR)
     F                                     INFDS(INFDS#)
      * DSP: WW Run Log            DF  Display file
      *
     FE1B9CPL1  IF   E           K DISK
     F                                     INFDS(INFDS1)
      * RTV : Run Log Header      PKB9  Retrieval index
      *
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
     D INFDS1        E DS                  EXTNAME(Y2I1DSP)
      * File information data structure
      *
      * Outward parameters
     D PARC            DS            21
      * KEY : Run Log J/E Detail F0911  Co/IBMi Batch/IBMiDoc
      * I : RST Document Company
     D  PAKCO                  1      5
      * I : RST IBMi Batch Number
     D  PADTNB                 6     13  0
      *
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  ##RRMX         S              5  0
     D  WZKSTX         S                   LIKE(#2KSTX)
     D  WZCO           S                   LIKE(#2CO)
     D  WZCICD         S                   LIKE(#2CICD)
     D  WZDTNB         S                   LIKE(#2DTNB)
     D  WZHDNB         S                   LIKE(#2HDNB)
     D  WZADDT         S                   LIKE(#2ADDT)
     D  WZADTM         S                   LIKE(#2ADTM)
     D  WZIEST         S                   LIKE(#2IEST)
     D  WZKUTX         S                   LIKE(#2KUTX)
     D  WQB10X         S             10
     D  WQKSTX         S                   LIKE(#2KSTX)
     D  WQA5N          S              5  0
     D  WQC10X         S             10
     D  WQKUTX         S                   LIKE(#2KUTX)
     D  ##RROK         S              5  0
     D  WKIND0         S              1
     D  ##RR           S              5  0
     D  ##RRRD         S              9  0
     D  ##SPG          S              3  0
     D  ##SLIN         S              3  0
     D  ##SFLN         S              9  0
     D  WQA3N          S              3  0
     D  WQB3N          S              3  0
     D  WQC3N          S              3  0
     D  WQD1           S              1
     D  WQE1           S              1
     D  WQF1           S              1
     D  WQG3N          S              3  0
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  CAIN81         S              1
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  W0CLPG         S             10
     D  XDDTFM         S              3
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  Y#SFRC         S              4  0
     D  ZHSTRW         S              4  0
     D  ZHNDRW         S              4  0
     D  ZHRLEN         S              4  0
     D  ZHF4RW         S              4  0
     D  ZHWK1#         S              4  0
     D  YZSFDL         S              4  0
     D  ##SFPG         S              3  0
     D  W0SLM          S              9  0
     D  W0SPG          S              3  0
     D  W0RR0          S              4  0
     D  W0GRP          S              1
     D  WQ0001         S              3
     D  WQ0002         S              3  0
     D  WQ0003         S              6
     D  WQ0004         S              3
     D  WQ0005         S              1
     D  WQ0006         S             10
     D  WQ0007         S             30
     D  WQ0008         S             40
     D  WQ0009         S              1
     D  ZADFMF         S             10
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: *Arrays
      * N :  OMS Warehouse Code
     D  P1LCTX                 1      3
      * N :  OMS Company Number
     D  P1GUNB                 4      5P 0
      * N :  OMS Application code
     D  P1CQCD                 6     11
      * N :  OMS Salesperson Code
     D  P1CSCD                12     14
      * N :  OMS Allow Multi-Company
     D  P1I2ST                15     15
      * N :  OMS Default Printer
     D  P1LDTX                16     25
      * N :  OMS NAME
     D  P1LETX                26     55
      * N :  OMS System Value Alpha
     D  P1KRTX                56     95
      * N :  OMS Access Denied (Y/N)
     D  P1I1ST                96     96
     D                 DS
     D  ZAMSDA                 1    132
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
     C                   DO        *HIVAL
      * Initialise & load subfile page
     C                   EXSR      BAIZSF
     C                   MOVEL     'N'           W0RSF
      * Display screen until reload requested
      * Display screen
     C                   DOW       W0RSF = 'N'
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Request subfile reload
     C   05              CAS                     FBRQRL
      * Display next SFL page
     C   27
     COR 08              CAS                     BBLDSF
      * Process screen input
     C                   CAS                     DAPR##
     C                   END
      *
     C                   END                                                    OD W0RSF
     C                   END                                                    OD *HIVAL
      *****************************************************************
      /EJECT
     CSR   BAIZSF        BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                   SETON                                        80
     C                   WRITE     #SFLCTL
     C                   SETOFF                                       80
      * Reset no of records in subfile
     C                   Z-ADD     *ZERO         ##RRMX               81         SETOF 81
      * Position DBF file
     C     KPOS          KLIST
     C                   KFLD                    B9CO                           Company
     C                   KFLD                    B9CICD                         OMS Division
     C                   KFLD                    B9KSTX                         OMS Key Value
      * Setup key
     C                   MOVEL     #2CO          B9CO
     C                   MOVEL     #2CICD        B9CICD
     C                   MOVEL     #2KSTX        B9KSTX
     C     KPOS          SETLL     @B9CPCA
     C                   READ      @B9CPCA                              8782    *82=EOF
      * Save previous selector values
     C                   MOVEL     #2KSTX        WZKSTX                         OMS Key Value
     C                   MOVEL     #2CO          WZCO                           Company
     C                   MOVEL     #2CICD        WZCICD                         OMS Division
     C                   MOVEL     #2DTNB        WZDTNB                         IBMi Batch Numb
     C                   MOVEL     #2HDNB        WZHDNB                         E1 Batch Number
     C                   MOVEL     #2ADDT        WZADDT                         OMS ERP Process
     C                   MOVEL     #2ADTM        WZADTM                         OMS ERP Process
     C                   MOVEL     #2IEST        WZIEST                         OMS ERP Process
     C                   MOVEL     #2KUTX        WZKUTX                         OMS Description
      * Translate search mask for text field
     C                   MOVEL     'QSYST'       WQB10X
     C                   MOVE      'RNTBL'       WQB10X
     C                   CALL      'QDCXLATE'
      * Length
     C                   PARM      25            WQA5N
     C                   PARM      #2KSTX        WQKSTX                         OMS Key Value
     C                   PARM                    WQB10X                         QSYSTRNTBL
     C                   PARM      'QSYS'        WQC10X
     C                   CALL      'QDCXLATE'
      * Length
     C                   PARM      25            WQA5N
     C                   PARM      #2KUTX        WQKUTX                         OMS Description
     C                   PARM                    WQB10X                         QSYSTRNTBL
     C                   PARM      'QSYS'        WQC10X
      * Load subfile page
     C                   Z-ADD     0             ##RROK
     C                   EXSR      BBLDSF
      *================================================================
     CSR   BAEXIT        ENDSR
      /EJECT
     CSR   BBLDSF        BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27
     COR 08              DO
     C  N82              READP     @B9CPCA                                90    *
     C  N82              READ      @B9CPCA                                90    *
     C                   END
      *
      * Setof record error indicators
     C                   MOVEL     *ALL'0'       WKIND0
     C                   MOVEA     WKIND0        *IN(35)
      * Start at previous highest record in SFL
     C                   Z-ADD     ##RRMX        ##RR
      * Reset count of DBF records read
     C                   Z-ADD     0             ##RRRD
      * Set required pages based on *Set Cursor or *Subfile Pages
     C                   IF        W0RR0 > 0
     C     W0RR0         DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C                   ADD       1             ##SPG
     C                   END
     C                   IF        W0SPG > ##SPG
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
     C                   ELSE
     C                   Z-ADD     W0SPG         ##SPG
     C                   END
      * Compute lines required based on pages
     C     ##SPG         MULT      ##SFPG        ##SFLN
     C                   IF        ##SFLN > 999
     C                   Z-ADD     999           ##SFLN
     C                   END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
      * Check selection fields - if fail, read next record
     C                   DOW       NOT *IN82 AND
     C                             ##RROK < ##SFLN AND
     C                             ##RRRD < W0SLM
     C                   IF        #2CO = ' ' OR
     C                             #2CICD = ' '
      * Scan for search string
     C                   IF        #2KSTX <> ' '
     C                   CALL      'QCLSCAN'
     C                   PARM                    B9KSTX                         OMS Key Value
      * Length
     C                   PARM      25            WQA3N
      * Start
     C                   PARM      1             WQB3N
      * Mask
     C                   PARM                    WQKSTX
      * Length
     C                   PARM      25            WQC3N
      * Translate
     C                   PARM      '1'           WQD1
      * Trim
     C                   PARM      '1'           WQE1
      * Wild
     C                   PARM      '?'           WQF1
      * Result
     C                   PARM                    WQG3N
     C     WQG3N         CABLT     1             BB020
     C                   END
     C                   END
     C                   IF        #2CO = ' '
     C                   IF        #2CICD <> ' '
     C     B9CICD        CABNE     #2CICD        BB020                          OMS Division
     C                   END
     C                   END
     C                   IF        #2DTNB <> *ZERO
     C     B9DTNB        CABNE     #2DTNB        BB020                          IBMi Batch Numb
     C                   END
     C                   IF        #2HDNB <> *ZERO
     C     B9HDNB        CABNE     #2HDNB        BB020                          E1 Batch Number
     C                   END
     C                   IF        #2ADDT <> *ZERO
     C     B9ADDT        CABNE     #2ADDT        BB020                          OMS ERP Process
     C                   END
     C                   IF        #2ADTM <> *ZERO
     C     B9ADTM        CABNE     #2ADTM        BB020                          OMS ERP Process
     C                   END
     C                   IF        #2IEST <> ' '
     C     B9IEST        CABNE     #2IEST        BB020                          OMS ERP Process
     C                   END
      * Scan for search string
     C                   IF        #2KUTX <> ' '
     C                   CALL      'QCLSCAN'
     C                   PARM                    B9KUTX                         OMS Description
      * Length
     C                   PARM      25            WQA3N
      * Start
     C                   PARM      1             WQB3N
      * Mask
     C                   PARM                    WQKUTX
      * Length
     C                   PARM      25            WQC3N
      * Translate
     C                   PARM      '1'           WQD1
      * Trim
     C                   PARM      '1'           WQE1
      * Wild
     C                   PARM      '?'           WQF1
      * Result
     C                   PARM                    WQG3N
     C     WQG3N         CABLT     1             BB020
     C                   END
      * Load SFL fields
     C                   EXSR      MBFL#1
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Output to subfile
     C                   ADD       1             ##RR
     C                   ADD       1             ##RROK               81        *
      * If SFLRCD invalid, note that errors present
     C   98
     CANN99              SETON                                        99        *
     C                   WRITE     #SFLRCD
     C     BB020         TAG
      * Increment scan check count
     C                   ADD       1             ##RRRD
     C                   READ      @B9CPCA                                82    *82=EOF
     C                   END                                                    OD 1 - ##SFPG
      *................................................................
     C     BB900         TAG
      *................................................................
      * If no DBF records found, display error message
      * Send message '*No data to display'
     C                   IF        ##RR = *ZERO AND
     C                             *IN82
     C                   MOVEL     'Y2U0008'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
      * Calculate top line
     C                   IF        ##RR > ##RRMX
     C     ##RROK        DIV       ##SFPG        ##SPG
     C                   MVR                     ##SLIN
     C                   IF        ##SLIN > 0
     C     ##RR          SUB       ##SLIN        ##SFRC
     C                   ELSE
     C     ##RR          SUB       ##SFPG        ##SFRC
     C                   END
     C                   ADD       1             ##SFRC
     C                   Z-ADD     ##RR          ##RRMX
     C                   END
      * If scan limit reached, display error message
      * Send message '*Scan limit reached'
     C                   IF        ##RRRD >= W0SLM
     C                   MOVEL     'Y2U0017'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   ELSE
     C                   Z-ADD     0             ##RROK
     C                   END
      *================================================================
     CSR   BBEXIT        ENDSR
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N05
     CANN27              EXSR      MOCV#2
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Update screen time
     C                   TIME                    ##TME
      * PUTOVR unless conditioned fields change
     C                   SETON                                        86
     C                   IF        *IN81 <> CAIN81
     C                   SETOFF                                       86
     C                   END
     C                   MOVE      *IN81         CAIN81
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #SFLCTL
      * Maintain subfile position where possible
     C                   IF        @#SFRC > *ZERO
     C                   Z-ADD     @#SFRC        ##SFRC
     C                   END
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   SETOFF                                         8392    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPR##        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
     C                   IF        YPMTFD <> ' ' AND
     C                             YPMRRN = *ZERO
     C                   GOTO      DAEXIT
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DATAG1
      * Change of position specified
     C     WZCO          CASNE     #2CO          FBRQRL
     C     WZCICD        CASNE     #2CICD        FBRQRL
     C     WZDTNB        CASNE     #2DTNB        FBRQRL
     C     WZHDNB        CASNE     #2HDNB        FBRQRL
     C                   END
     C     DATAG1        TAG
      * Reload subfile requested
     C                   IF        YPMTFD = ' '
     C     W0RSF         CABEQ     'Y'           DAEXIT
     C                   END
      * Process subfile records
     C                   IF        *IN81
     C                   EXSR      DBPRSF
     C                   END
     C     YPMTFD        CABNE     *BLANKS       DAEXIT
      * If error, quit processing
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBPRSF        BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C                   IF        YAFSCH <> *ZERO
     C     YAFSCH        CHAIN     #SFLRCD                            92        *
     C                   ELSE
     C                   READC     #SFLRCD                                92    *
     C                   END
      * Process subfile record
     C                   DOW       NOT *IN92
     C                   EXSR      DCPRSR
      * Convert fields to external form
     C                   EXSR      MNCV#1
     C                   UPDATE    #SFLRCD
     C                   READC     #SFLRCD                                92    *
     C                   END
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DCPRSR        BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                   MOVEA     WKIND0        *IN(35)
     C                   SETOFF                                       98        *
     C     YPMTFD        CABNE     *BLANKS       DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * CASE: RCD.*SFLSEL is *Display
      * Dsp Run Log JE Dtl    DF - Run Log J/E Detail F0911  * 
     C                   IF        #1SEL = '5' OR
     C                             #1SEL = ' 5'
     C                   CLEAR                   PARC
     C                   MOVEL(P)  #1CO          PAKCO                          Document Compan
     C                   Z-ADD     #1DTNB        PADTNB                         IBMi Batch Numb
      *
     C                   CALL      'E1BIDFR'                            90      Dsp Run Log JE
     C                   PARM      *BLANK        W0RTN
     C                   PARM                    PARC                           KEY: Run Log J/
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'E1BIDFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        98        *
     C                   END
     C                   END                                                    *FI
      * SFLRCD invalid
     C                   IF        *IN98
     C  N99              Z-ADD     ##RR          ##SFRC               99        *
      * SFLNXTCHG
     C                   SETON                                        84
     C                   ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                   SETOFF                                       84
     C                   EVAL      #1SEL = ' '
     C                   END                                                    FI *IN98
      *================================================================
     CSR   DCEXIT        ENDSR
      /EJECT
     CSR   FBRQRL        BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                   MOVEL     'Y'           W0RSF
      *================================================================
     CSR   FBEXIT        ENDSR
      /EJECT
     CSR   MBFL#1        BEGSR
      *================================================================
      * Move @B9CPCA fields to subfile
      *================================================================
     C                   EVAL      #1SEL = ' '
     C                   MOVEL     B9KSTX        #1KSTX                         OMS Key Value
     C                   MOVEL     B9KTTX        #1KTTX                         OMS Interface
     C                   Z-ADD     B9GVNB        #1GVNB                         OMS Status
     C                   Z-ADD     B9GWNB        #1GWNB                         OMS Change Numb
     C                   Z-ADD     B9GXNB        #1GXNB                         OMS Text Identi
     C                   Z-ADD     B9GYNB        #1GYNB                         OMS Change Date
     C                   Z-ADD     B9GZNB        #1GZNB                         OMS Entry Date
     C                   MOVEL     B9IHST        #1IHST                         Process Status
     C                   MOVEL     B9DWST        #1DWST                         Record Status
     C                   Z-ADD     B9ABDT        #1ABDT                         Create Date
     C                   Z-ADD     B9ABTM        #1ABTM                         Create Time
     C                   MOVEL     B9AJVN        #1AJVN                         Create User
     C                   MOVEL     B9AKVN        #1AKVN                         Create Program
     C                   Z-ADD     B9ACDT        #1ACDT                         Change Date
     C                   Z-ADD     B9ACTM        #1ACTM                         Change Time
     C                   MOVEL     B9ALVN        #1ALVN                         Change User
     C                   MOVEL     B9AMVN        #1AMVN                         Change Program
     C                   MOVEL     B9CO          #1CO                           Company
     C                   MOVEL     B9CICD        #1CICD                         OMS Division
     C                   Z-ADD     B9DTNB        #1DTNB                         IBMi Batch Numb
     C                   Z-ADD     B9HDNB        #1HDNB                         E1 Batch Number
     C                   Z-ADD     B9ADDT        #1ADDT                         OMS ERP Process
      * Clear external version also
     C                   Z-ADD     *ZERO         V1ADDT
     C                   Z-ADD     B9ADTM        #1ADTM                         OMS ERP Process
     C                   MOVEL     B9IEST        #1IEST                         OMS ERP Process
     C                   MOVEL     B9KUTX        #1KUTX                         OMS Description
     C                   EVAL      #1SEL = ' '                                  *SFLSEL
      *================================================================
     CSR   MBEXIT        ENDSR
      /EJECT
     CSR   MEIZ#2        BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                   EVAL      #2KSTX = ' '                                 OMS Key Value
     C                   EVAL      #2CO = ' '                                   Company
     C                   EVAL      #2CICD = ' '                                 OMS Division
     C                   Z-ADD     *ZERO         #2DTNB                         IBMi Batch Numb
     C                   Z-ADD     *ZERO         #2HDNB                         E1 Batch Number
     C                   Z-ADD     *ZERO         #2ADDT                         OMS ERP Process
      * Clear external version also
     C                   Z-ADD     *ZERO         V2ADDT
     C                   Z-ADD     *ZERO         #2ADTM                         OMS ERP Process
     C                   EVAL      #2IEST = ' '                                 OMS ERP Process
     C                   EVAL      #2KUTX = ' '                                 OMS Description
      *================================================================
     CSR   MEEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert OMS ERP Process Date to display format
      * Convert date
     C     1000000       ADD       #1ADDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1ADDT
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   MOCV#2        BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert OMS ERP Process Date to display format
      * Convert date
     C     1000000       ADD       #2ADDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V2ADDT
      *================================================================
     CSR   MOEXIT        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      * Save sfl rrn at top of page
     C                   Z-ADD     @#SFRC        Y#SFRC
      *
      * Initialise sfl workfields
     C                   Z-ADD     9             ZHSTRW
     C                   Z-ADD     23            ZHNDRW
     C                   Z-ADD     1             ZHRLEN
     C                   Z-ADD     *ZERO         ZHF4RW
     C                   Z-ADD     *ZERO         ZHWK1#
      *
      * Resolve prompt row number on sfl
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C                   Z-ADD     ZHWK1#        YZSFDL
     C     ZHWK1#        MULT      ZHRLEN        ZHWK1#
     C     ZHCSRW        SUB       ZHWK1#        ZHF4RW
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
      * Save first changed  rrn
      *
     C                   IF        ZHCSRW >= ZHSTRW AND
     C                             ZHCSRW <= ZHNDRW AND
     C                             YPMTFD <> '*NONE'
     C                   IF        ##RR <> *ZERO
     C                   READC     #SFLRCD                                92    *
     C                   IF        NOT *IN92
     C                   Z-ADD     ##RR          YAFSCH
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   END
     C                   END
      *
      * Calculate rrn for prompt slf record
     C     ZHCSRW        SUB       ZHSTRW        ZHWK1#
     C     ZHWK1#        DIV       ZHRLEN        ZHWK1#
     C     ZHWK1#        ADD       Y#SFRC        YPMRRN
      *
      * Chain to sfl record
     C     YPMRRN        CHAIN     #SFLRCD                            9292      *
     C                   IF        NOT *IN92
     C                   SETON                                        84        *
     C                   UPDATE    #SFLRCD
     C                   ELSE
     C                   Z-ADD     *ZERO         YPMRRN
     C                   END
      *
      * Test first changed rrn/prompt rrn
     C                   IF        YAFSCH = *ZERO
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
      * If prompt rrn < first changed rrn
     C                   IF        YPMRRN <> *ZERO AND
     C                             YPMRRN < YAFSCH
     C                   Z-ADD     YPMRRN        YAFSCH
     C                   END
      *
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*START'      YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Clear all neither parameters
     C                   EVAL      P1LCTX = ' '                                 OMS Warehouse C
     C                   Z-ADD     *ZERO         P1GUNB                         OMS Company Num
     C                   EVAL      P1CQCD = ' '                                 OMS Application
     C                   EVAL      P1CSCD = ' '                                 OMS Salesperson
     C                   EVAL      P1I2ST = ' '                                 OMS Allow Multi
     C                   EVAL      P1LDTX = ' '                                 OMS Default Pri
     C                   EVAL      P1LETX = ' '                                 OMS NAME
     C                   EVAL      P1KRTX = ' '                                 OMS System Valu
     C                   EVAL      P1I1ST = ' '                                 OMS Access Deni
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Obtain default message file
     C     *DTAARA       DEFINE    E1MGFLA       ZADFMF
     C                   IN        ZADFMF
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   Z-ADD     15            ##SFPG                         SFLPAG
     C                   Z-ADD     1             ##SFRC
      * Maximum record number
     C                   Z-ADD     *ZERO         ##RRMX
      * Scan limit
     C                   Z-ADD     000000500     W0SLM
      * Subfile pages
     C                   Z-ADD     1             W0SPG
      * Processed Subfile record
     C                   Z-ADD     0             W0RR0
      *................................................................
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * Val Application/UserRP4IF
      * Val Application/User  XF - STR Order Management Sys  * 
     C                   CALL      'PDGXXFR'                            90      Val Application
     C                   PARM      *BLANK        W0RTN
     C     P1LCTX        PARM      *BLANK        WQ0001                         OMS Warehouse C
     C     P1GUNB        PARM      *ZERO         WQ0002                         OMS Company Num
     C                   PARM      'GEN'         WQ0003                         OMS Application
     C     P1CSCD        PARM      *BLANK        WQ0004                         OMS Salesperson
     C     P1I2ST        PARM      *BLANK        WQ0005                         OMS Allow Multi
     C     P1LDTX        PARM      *BLANK        WQ0006                         OMS Default Pri
     C     P1LETX        PARM      *BLANK        WQ0007                         OMS NAME
     C     P1KRTX        PARM      *BLANK        WQ0008                         OMS System Valu
     C     P1I1ST        PARM      *BLANK        WQ0009                         OMS Access Deni
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDGXXFR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * CASE: PAR.OMS Access Denied (Y/N) is Yes
      * Send message 'Access Denied for User'
     C                   IF        P1I1ST = 'Y'
     C                   MOVEL     'E1I0112'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        99        *
      *
     C                   ELSE
      * CASE: *OTHERWISE
      * Mov ApplN to CompanyRP4US - STR Order Management Sys  * 
     C***   MOVE USER SOURCE                      ***
     C                   movel     P1KRTX        ##CMP
     C                   END                                                    *FI
      * Initialise subfile control
     C                   EXSR      MEIZ#2
      *================================================================
     CSR   ZZEXIT        ENDSR
