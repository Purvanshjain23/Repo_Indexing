     h option(*SRCSTMT:*NODEBUGIO)
      *
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO801
      * TITLE:       Derive Summary Level
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     06/16/08
      *
      * FUNCTION:  This function comes up with a concatenated value for the
      *            "summary level" that is required for the TF Byproduct Mix Summary
      *            logic.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     fpmaprel1  if   e           k disk
      *  TF Meat cost group
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     d wksumcd         s                   like(apeetx)
     d wkistycd        s              3
     d wkisgrcd        s              3
     d wkisclcd        s              3
      *
      *
      * Parms
      *
     D xxcgcd          s              4
     D xxtfclcd        s              3
     D xxmixgrp        s              1
     D xxistycd        s              3  0
     D xxisgrcd        s              3  0
     D xxisclcd        s              3  0
     D xxsumlev        s             22
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *************************************************************************************
      * Mainline
      *************************************************************************************
      *
      * Setup alpha work fields for the incoming Item Structure values.
      *
     C                   move      xxistycd      wkistycd
     C                   move      xxisgrcd      wkisgrcd
     C                   move      xxisclcd      wkisclcd
      *
      * Retrieve the Meat Cost Group record to get the Summary Level code.
      *
     C     xxcgcd        chain     pmaprel1                           92
     C                   if        *in92 = *off
     C                   move      apeetx        wksumcd
     C                   else
     C                   move      *blank        wksumcd
     C                   endif
      *
      * Meat cost code
     C                   select
     C                   when      wksumcd = 'MC'
     C                   eval      xxsumlev = xxtfclcd + '.' + xxcgcd
      * Mix Group code
     C                   when      wksumcd = 'MX'
     C                   eval      xxsumlev = xxtfclcd + '.' + xxcgcd
     C                             + '.' + xxmixgrp
      * IS Type Code
     C                   when      wksumcd = 'TY'
     C                   eval      xxsumlev = xxtfclcd + '.' + xxcgcd
     C                             + '.' + xxmixgrp + '.' + wkistycd
      * IS Group Code
     C                   when      wksumcd = 'GR'
     C                   eval      xxsumlev = xxtfclcd + '.' + xxcgcd
     C                             + '.' + xxmixgrp + '.' + wkistycd
     C                             + '.' + wkisgrcd
      * IS Class Code
     C                   when      wksumcd = 'CL'
     C                   eval      xxsumlev = xxtfclcd + '.' + xxcgcd
     C                             + '.' + xxmixgrp + '.' + wkistycd
     C                             + '.' + wkisgrcd + '.' + wkisclcd
     C                   other
      * Catch-all
     C                   eval      xxsumlev = xxtfclcd + '.' + xxcgcd
     C                   endsl
      *
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxcgcd
     C                   parm                    xxtfclcd
     C                   parm                    xxistycd
     C                   parm                    xxisgrcd
     C                   parm                    xxisclcd
     C                   parm                    xxmixgrp
     C                   parm                    xxsumlev
      *
     C                   endsr
      /EJECT
