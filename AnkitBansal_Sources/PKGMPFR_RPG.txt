     H/TITLE Prt Bal to Kill Rpt   PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 00:33:03
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKA1CPN5IF  E           K        DISK
      * RSQ : Tattoo Header             Co/Kll/Shft/SrcTy/Ttt
      *
     FPKBVCPL3IF  E           K        DISK
      * RSQ : Eval Trans                Tattoo Evaluation
      *
     FPKB6CPL4IF  E           K        DISK
      * RSQ : Eval/Loss Error           Tattoo Header Erros Only
      *
     FPKGMPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Bal to Kill Rpt   PF  Print file
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * I : RST TH Kill Date
     I                                    P   3   60P1B0DT
      * I : MAP TH Schedule Kill Shift
     I                                        7   7 P1LIST
     IP2PARM      DS
      * I :  Oms System Value Alpha
     I                                        1  40 P2EVTX
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Invalid Company Number'
      * CC Company Number
     I                                    P   1   20ZA0001
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1B0DT    PARM           WP0002  70       TH Kill Date
     C           P1LIST    PARM           WP0003  1        TH Schedule Kil
     C           P2EVTX    PARM           WP0004 40        Oms System Valu
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Bal to Kill Rpt   PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$LENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Bal to Kill Rpt   PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
     C           *LIKE     DEFN A1B0DT    WQKA02           TH Kill Date
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
     C                     KFLD           WQKA02           TH Kill Date
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
     C                     Z-ADDP1B0DT    WQKA02           TH Kill Date
      * Establish starting position
     C           KRSA      SETLL@A1CPWF                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Kill Date
     C                     MOVEL'Y'       W0AL02  1        TH Schedule Kil
     C                     MOVEL'Y'       W0AL03  1        TH Source Type
     C                     MOVEL'Y'       W0AL04  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $KQLNB           Live Weight 2 S
     C                     Z-ADD*ZERO     $KC6VA           Lean % * Wgt SU
     C                     Z-ADD*ZERO     $KQKNB           Hot Weight 2 SU
     C                     Z-ADD*ZERO     $KAYA1           Tattoo Count EX
     C                     Z-ADD*ZERO     $KMLA1           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $KMMA1           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $KH8PC           Lean Percent EX
     C                     Z-ADD*ZERO     $KIAPC           Actual Yield EX
     C                     Z-ADD*ZERO     $KICPC           Adjusted Yield
     C                     Z-ADD*ZERO     $KA0A1           Head Received E
     C                     Z-ADD*ZERO     $KA2A1           Yard Dead EXT U
     C                     Z-ADD*ZERO     $KA4A1           Head Condemned
     C                     Z-ADD*ZERO     $KBONZ           Head Total Exte
     C                     Z-ADD*ZERO     $KA6A1           Net Head EXT US
     C                     Z-ADD*ZERO     $KBPNZ           Head Identified
     C                     Z-ADD*ZERO     $KBQNZ           Percent ID'd Ex
     C                     Z-ADD*ZERO     $KBAA1           Head Exception
     C                     Z-ADD*ZERO     $KBRNZ           Head Accepted E
     C                     Z-ADD*ZERO     $KBSNZ           Percent Accepte
     C                     Z-ADD*ZERO     $KBEA1           Head Adds EXT U
     C                     Z-ADD*ZERO     $KA8A1           Head ID EXT USR
     C                     Z-ADD*ZERO     $KBMA1           Percent ID EXT
     C                     Z-ADD*ZERO     $KBCA1           Head Accepted E
     C                     Z-ADD*ZERO     $KBOA1           Percent Accepte
     C                     Z-ADD*ZERO     $KBGA1           Head Deducted E
     C                     Z-ADD*ZERO     $KBIA1           Head Adjusted E
     C                     Z-ADD*ZERO     $KBKA1           Head PHA Adds E
     C                     Z-ADD*ZERO     $KMOA1           Live Weight Ext
     C                     Z-ADD*ZERO     $KMQA1           Hot Weight Ext
     C                     Z-ADD*ZERO     $KBYNZ           Hot Wgt - Total
     C                     Z-ADD*ZERO     $KAZA1           Tattoo Count IN
     C                     Z-ADD*ZERO     $KMJA1           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $KMKA1           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $KH9PC           Lean Percent IN
     C                     Z-ADD*ZERO     $KIBPC           Actual Yield IN
     C                     Z-ADD*ZERO     $KIDPC           Adjusted Yield
     C                     Z-ADD*ZERO     $KA1A1           Head Received I
     C                     Z-ADD*ZERO     $KA3A1           Yard Dead INT U
     C                     Z-ADD*ZERO     $KA5A1           Head Condemned
     C                     Z-ADD*ZERO     $KBTNZ           Head Total Inte
     C                     Z-ADD*ZERO     $KBUNZ           Head Identified
     C                     Z-ADD*ZERO     $KBVNZ           Percent ID'd IN
     C                     Z-ADD*ZERO     $KA7A1           Net Head INT US
     C                     Z-ADD*ZERO     $KA9A1           Head ID INT USR
     C                     Z-ADD*ZERO     $KBNA1           Percent ID INT
     C                     Z-ADD*ZERO     $KBBA1           Head Exception
     C                     Z-ADD*ZERO     $KBWNZ           Head Accepted I
     C                     Z-ADD*ZERO     $KBXNZ           Percent Accepte
     C                     Z-ADD*ZERO     $KBDA1           Head Accepted I
     C                     Z-ADD*ZERO     $KBPA1           Percent Accepte
     C                     Z-ADD*ZERO     $KBFA1           Head Adds INT U
     C                     Z-ADD*ZERO     $KBHA1           Head Deducted I
     C                     Z-ADD*ZERO     $KBJA1           Head Adjusted I
     C                     Z-ADD*ZERO     $KBLA1           Head PHA Adds I
     C                     Z-ADD*ZERO     $KMNA1           Live Weight Int
     C                     Z-ADD*ZERO     $KMPA1           Hot Weight Int
     C                     Z-ADD*ZERO     $KBZNZ           Hot Wgt - Total
     C                     Z-ADD*ZERO     $KJ1NB           Tattoo Cnt tota
     C                     Z-ADD*ZERO     $KPOUW           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $KKJQW           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $KF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $KAWPC           TH Actual Yield
     C                     Z-ADD*ZERO     $KCWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     $KQENB           Head Received
     C                     Z-ADD*ZERO     $KYDSM           Yard Dead SUM
     C                     Z-ADD*ZERO     $KVCVW           TH Head Condemn
     C                     Z-ADD*ZERO     $KBJNZ           Head Total SUM
     C                     Z-ADD*ZERO     $KBKNZ           Head Identified
     C                     Z-ADD*ZERO     $KBMNZ           Percent ID'd SU
     C                     Z-ADD*ZERO     $KB4NB           Head Total SUM
     C                     Z-ADD*ZERO     $KXRNB           Head Total Sum2
     C                     Z-ADD*ZERO     $KOPIR           TH Percent Iden
     C                     Z-ADD*ZERO     $KADA1           Head Exception
     C                     Z-ADD*ZERO     $KBLNZ           Head Accepted S
     C                     Z-ADD*ZERO     $KBNNZ           Percent Accepte
     C                     Z-ADD*ZERO     $KHTS3           Head Total Sum3
     C                     Z-ADD*ZERO     $KOPEM           TH Percent Acce
     C                     Z-ADD*ZERO     $KLAA1           Head Total Sum4
     C                     Z-ADD*ZERO     $KLBA1           Head Total Sum5
     C                     Z-ADD*ZERO     $KLCA1           Head Count Sum
     C                     Z-ADD*ZERO     $KLDA1           Head Adds Sum R
     C                     Z-ADD*ZERO     $KWSNB           Live Weight 1 S
     C                     Z-ADD*ZERO     $KWTNB           Hot Weight 1 SU
     C                     Z-ADD*ZERO     $KJ0NB           Tattoo Cnt not
     C                     Z-ADD*ZERO     $KI4NB           Tattoo Cnt grad
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     MOVEL*BLANK    $DFSTX           Shift Descripti
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
     C                     Z-ADDA1B0DT    $DB0DT           TH Kill Date
     C                     MOVELA1LIST    $DLIST           TH Schedule Kil
      * Load related totals format
     C                     Z-ADDA1HMNB    $JHMNB           BOH Company Num
     C                     Z-ADDA1B0DT    $JB0DT           TH Kill Date
     C                     Z-ADDA1CYNB    $JCYNB           TH Live Wgt
     C                     Z-ADDA1E0NB    $JE0NB           TH Hot Wgt
     C                     MOVELA1LIST    $JLIST           TH Schedule Kil
     C                     MOVEL*BLANK    $JFSTX           Shift Descripti
     C                     Z-ADD*ZERO     $JEANB           Tattoo Cnt tota
     C                     Z-ADDA1F7NB    $JF7NB           TH Avg Live Wgt
     C                     Z-ADDA1HDNB    $JHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $JBZNZ           Hot Wgt - Total
     C                     Z-ADD*ZERO     $JBYNZ           Hot Wgt - Total
     C                     Z-ADD*ZERO     $JQLNB           Live Weight 2 S
     C                     Z-ADD*ZERO     $JC6VA           Lean % * Wgt SU
     C                     Z-ADDA1F4NB    $JF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $JQKNB           Hot Weight 2 SU
     C                     Z-ADDA1AWPC    $JAWPC           TH Actual Yield
     C                     Z-ADDA1CWPC    $JCWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     $JQENB           Head Received
     C                     Z-ADD*ZERO     $JYDSM           Yard Dead SUM
     C                     Z-ADD*ZERO     $JVCVW           TH Head Condemn
     C                     Z-ADD*ZERO     $JBJNZ           Head Total SUM
     C                     Z-ADD*ZERO     $JBTNZ           Head Total Inte
     C                     Z-ADD*ZERO     $JBONZ           Head Total Exte
     C                     Z-ADD*ZERO     $JBKNZ           Head Identified
     C                     Z-ADD*ZERO     $JBMNZ           Percent ID'd SU
     C                     Z-ADD*ZERO     $JB4NB           Head Total SUM
     C                     Z-ADD*ZERO     $JXRNB           Head Total Sum2
     C                     Z-ADDA1OPIR    $JOPIR           TH Percent Iden
     C                     Z-ADD*ZERO     $JADA1           Head Exception
     C                     Z-ADD*ZERO     $JBLNZ           Head Accepted S
     C                     Z-ADD*ZERO     $JBBA1           Head Exception
     C                     Z-ADD*ZERO     $JBAA1           Head Exception
     C                     Z-ADD*ZERO     $JBNNZ           Percent Accepte
     C                     Z-ADD*ZERO     $JHTS3           Head Total Sum3
     C                     Z-ADD*ZERO     $JEOPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $JBVPC           Adj Actual Yiel
     C                     Z-ADDA1OPEM    $JOPEM           TH Percent Acce
     C                     Z-ADD*ZERO     $JLAA1           Head Total Sum4
     C                     Z-ADD*ZERO     $JLBA1           Head Total Sum5
     C                     Z-ADD*ZERO     $JHOVA           Tattoo Header S
     C                     Z-ADD*ZERO     $JLCA1           Head Count Sum
     C                     Z-ADD*ZERO     $JLDA1           Head Adds Sum R
     C                     Z-ADD*ZERO     $JWSNB           Live Weight 1 S
     C                     Z-ADD*ZERO     $JWTNB           Hot Weight 1 SU
     C                     Z-ADD*ZERO     $JEENB           Tattoo Cnt not
     C                     Z-ADD*ZERO     $JEFNB           Tattoo Cnt grad
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     Z-ADDA1B0DT    $EB0DT           TH Kill Date
     C                     MOVELA1KAST    $EKAST           TH Source Type
     C                     MOVEL*BLANK    $EISTX           SR Type Desc
     C                     MOVELA1LIST    $ELIST           TH Schedule Kil
      * Load related totals format
     C                     Z-ADDA1HMNB    $IHMNB           BOH Company Num
     C                     Z-ADDA1B0DT    $IB0DT           TH Kill Date
     C                     MOVELA1KAST    $IKAST           TH Source Type
     C                     MOVEL*BLANK    $IISTX           SR Type Desc
     C                     Z-ADD*ZERO     $IEANB           Tattoo Cnt tota
     C                     Z-ADDA1F7NB    $IF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $IBZNZ           Hot Wgt - Total
     C                     Z-ADD*ZERO     $IBYNZ           Hot Wgt - Total
     C                     Z-ADDA1HDNB    $IHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     $IC6VA           Lean % * Wgt SU
     C                     Z-ADD*ZERO     $IQLNB           Live Weight 2 S
     C                     Z-ADDA1F4NB    $IF4NB           TH Avg Lean Per
     C                     Z-ADDA1AWPC    $IAWPC           TH Actual Yield
     C                     Z-ADDA1CWPC    $ICWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     $IQENB           Head Received
     C                     Z-ADD*ZERO     $IYDSM           Yard Dead SUM
     C                     Z-ADD*ZERO     $IVCVW           TH Head Condemn
     C                     Z-ADD*ZERO     $IBJNZ           Head Total SUM
     C                     Z-ADD*ZERO     $IBTNZ           Head Total Inte
     C                     Z-ADD*ZERO     $IBONZ           Head Total Exte
     C                     Z-ADD*ZERO     $IBKNZ           Head Identified
     C                     Z-ADD*ZERO     $IBMNZ           Percent ID'd SU
     C                     Z-ADD*ZERO     $IB4NB           Head Total SUM
     C                     Z-ADD*ZERO     $IXRNB           Head Total Sum2
     C                     Z-ADDA1OPIR    $IOPIR           TH Percent Iden
     C                     Z-ADD*ZERO     $IADA1           Head Exception
     C                     Z-ADD*ZERO     $IBBA1           Head Exception
     C                     Z-ADD*ZERO     $IBAA1           Head Exception
     C                     Z-ADD*ZERO     $IBLNZ           Head Accepted S
     C                     Z-ADD*ZERO     $IBNNZ           Percent Accepte
     C                     Z-ADD*ZERO     $IHTS3           Head Total Sum3
     C                     Z-ADDA1OPEM    $IOPEM           TH Percent Acce
     C                     Z-ADD*ZERO     $ILAA1           Head Total Sum4
     C                     Z-ADD*ZERO     $ILBA1           Head Total Sum5
     C                     Z-ADD*ZERO     $ILCA1           Head Count Sum
     C                     Z-ADD*ZERO     $ILDA1           Head Adds Sum R
     C                     Z-ADD*ZERO     $IWSNB           Live Weight 1 S
     C                     Z-ADD*ZERO     $IWTNB           Hot Weight 1 SU
     C                     Z-ADD*ZERO     $IQKNB           Hot Weight 2 SU
     C                     MOVELA1LIST    $ILIST           TH Schedule Kil
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $FHMNB           BOH Company Num
     C                     Z-ADDA1BNNB    $FBNNB           BOH Buy Order N
     C                     Z-ADDA1BONB    $FBONB           BOL Load Number
     C                     MOVEL*BLANK    $FZ1ST           Err/Recalc/AvgL
     C                     Z-ADDA1CVNB    $FCVNB           TH Tattoo Numbe
     C                     MOVELA1CWST    $FCWST           TH Payment Sts
     C                     MOVELA1ABCD    $FABCD           PD Producer Cod
     C                     MOVEL*BLANK    $FNGST           @Status (Held o
     C                     Z-ADDA1F7NB    $FF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     $FBZNZ           Hot Wgt - Total
     C                     Z-ADD*ZERO     $FBYNZ           Hot Wgt - Total
     C                     Z-ADDA1HDNB    $FHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1F4NB    $FF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     $FG4VA           Tatto Header Su
     C                     Z-ADDA1CWPC    $FCWPC           TH Adj Actual Y
     C                     Z-ADDA1ORJK    $FORJK           TH Yld Parm Adj
     C                     Z-ADDA1AWPC    $FAWPC           TH Actual Yield
     C                     Z-ADDA1CWNB    $FCWNB           TH Head Receive
     C                     Z-ADDA1FCNB    $FFCNB           TH Yard Deads
     C                     Z-ADDA1FDNB    $FFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     $FF6NB           Net Head Usr
     C                     Z-ADDA1KOER    $FKOER           TH Head Identif
     C                     Z-ADD*ZERO     $FIWPC           Percent Identif
     C                     Z-ADDA1OPIR    $FOPIR           TH Percent Iden
     C                     Z-ADD*ZERO     $FACA1           Head Exception
     C                     Z-ADDA1B0DT    $FB0DT           TH Kill Date
     C                     Z-ADDA1AWDT    $FAWDT           TH Purchase Dat
     C                     MOVELA1BICD    $FBICD           TH Group Refere
     C                     MOVELA1CPST    $FCPST           TH Live Purchas
     C                     Z-ADDA1ACPR    $FACPR           TH Live Purchas
     C                     Z-ADDA1B9PR    $FB9PR           TH Live Gross A
     C                     Z-ADDA1CAPR    $FCAPR           TH LIve Net Amt
     C                     MOVELA1C4ST    $FC4ST           TH Resale UOM
     C                     Z-ADDA1AIPR    $FAIPR           TH Recalc Live
     C                     Z-ADDA1A6DT    $FA6DT           TH Pricing Date
     C                     MOVELA1C2ST    $FC2ST           TH Resale Sprea
     C                     Z-ADDA1CXNB    $FCXNB           TH Dead On Arri
     C                     Z-ADDA1H9NB    $FH9NB           TH Held Over
     C                     Z-ADDA1FENB    $FFENB           TH Head Killed
     C                     Z-ADDA1HFNB    $FHFNB           TH Head Accepte
     C                     Z-ADD*ZERO     $FIXPC           Percent Accepte
     C                     Z-ADDA1OPEM    $FOPEM           TH Percent Acce
     C                     Z-ADDA1HENB    $FHENB           TH Head Adds
     C                     Z-ADDA1J9NB    $FJ9NB           TH Head Exclude
     C                     Z-ADDA1IORP    $FIORP           TH Head Adjuste
     C                     MOVEL*BLANK    $FY8ST           @Adjust/Add Sou
     C                     Z-ADDA1OWEO    $FOWEO           TH PHA Head Add
     C                     MOVELA1OQET    $FOQET           TH PHA Add Type
     C                     MOVELA1URST    $FURST           TH PHA Average
     C                     Z-ADDA1HHPC    $FHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $FS9PR           TH PHA Lean Prm
     C                     Z-ADDA1OMVJ    $FOMVJ           TH PHA Sort Dis
     C                     MOVELA1USST    $FUSST           TH PHA Add Reas
     C                     MOVEL*BLANK    $FC4TX           Condition Name
     C                     Z-ADD*ZERO     $FGBPC           Percent Tested
     C                     Z-ADDA1CYNB    $FCYNB           TH Live Wgt
     C                     Z-ADDA1LRNB    $FLRNB           TH Adj Live Wgt
     C                     Z-ADDA1E0NB    $FE0NB           TH Hot Wgt
     C                     Z-ADDA1A5PC    $FA5PC           TH Tot Loin Eye
     C                     Z-ADDA1FBNB    $FFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $FA4PC           TH Tot Light Re
     C                     Z-ADDA1F5NB    $FF5NB           TH Avg Light Re
     C                     Z-ADDA1F3NB    $FF3NB           TH Avg Loin Eye
     C                     Z-ADDA1F2NB    $FF2NB           TH Avg Backfat
     C                     Z-ADDA1AVPC    $FAVPC           TH Std Yield Pe
     C                     Z-ADDA1A8PC    $FA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $FA7PC           TH Recalc Live
     C                     Z-ADDA1B8PR    $FB8PR           TH CM Market Pr
     C                     Z-ADDA1AMPR    $FAMPR           TH CM Base Mkt
     C                     Z-ADDA1ANPR    $FANPR           TH CM Base Mkt
     C                     Z-ADDA1AYVA    $FAYVA           TH CM Sort Disc
     C                     Z-ADDA1AWVA    $FAWVA           TH CM Yield Gai
     C                     Z-ADDA1AOPR    $FAOPR           TH CM Base Carc
     C                     Z-ADDA1AXVA    $FAXVA           TH CM LN AddOn/
     C                     Z-ADDA1APPR    $FAPPR           TH CM Carcass G
     C                     Z-ADDA1ASPR    $FASPR           TH Deduction Am
     C                     Z-ADDA1A4VA    $FA4VA           TH Total Net WO
     C                     Z-ADDA1ATPR    $FATPR           TH Carcass Net
     C                     Z-ADDA1A5VA    $FA5VA           TH Additions Am
     C                     Z-ADDA1CBPR    $FCBPR           TH Payment Gros
     C                     Z-ADDA1CCPR    $FCCPR           Th Payment Net
     C                     Z-ADDA1LPNB    $FLPNB           TH AP Voucher/D
     C                     Z-ADDA1CDPR    $FCDPR           TH Freight Amou
     C                     Z-ADDA1A7VA    $FA7VA           TH Accrual Amou
     C                     Z-ADDA1A2PR    $FA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $FJWST           TH Calc Net Sts
     C                     MOVELA1D7ST    $FD7ST           TH Header Error
     C                     MOVELA1D8ST    $FD8ST           TH Detail Error
     C                     MOVELA1DWST    $FDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $FD6ST           TH Bal to Kill
     C                     Z-ADDA1GHNB    $FGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $FBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $FE0ST           TH User Error O
     C                     MOVELA1E1ST    $FE1ST           TH Held Over Re
     C                     Z-ADD*ZERO     $FNNNB           Lean % * Wgt US
     C                     MOVELA1E2ST    $FE2ST           TH Sex
     C                     Z-ADDA1BSDT    $FBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $FBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $FBUDT           TH Actual Check
     C                     Z-ADDA1HGNB    $FHGNB           TH Shipped Weig
     C                     Z-ADDA1HHNB    $FHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1HINB    $FHINB           TH FFLI
     C                     Z-ADDA1A3PR    $FA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $FA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $FA6PR           TH Render Produ
     C                     Z-ADDA1D6PR    $FD6PR           TH CM Bse Mkt L
     C                     Z-ADDA1D7PR    $FD7PR           TH CM Bse Mkt C
     C                     Z-ADDA1D8PR    $FD8PR           TH CM Srt Dsc L
     C                     Z-ADDA1D9PR    $FD9PR           TH CM Srt Dsc C
     C                     Z-ADDA1EAPR    $FEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $FEBPR           TH CM Yld G/L C
     C                     Z-ADDA1ECPR    $FECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $FEDPR           TH CM Crc Val C
     C                     Z-ADDA1EEPR    $FEEPR           TH CM Lean Prem
     C                     Z-ADDA1EFPR    $FEFPR           TH CM Lean Prem
     C                     Z-ADDA1EGPR    $FEGPR           TH CM Gross Liv
     C                     Z-ADDA1EHPR    $FEHPR           TH CM Gross Car
     C                     MOVELA1KAST    $FKAST           TH Source Type
     C                     MOVELA1J7ST    $FJ7ST           TH Scale Ticket
     C                     MOVELA1J9ST    $FJ9ST           TH Payment Type
     C                     Z-ADDA1OXNB    $FOXNB           TH HPS Movement
     C                     MOVELA1LKST    $FLKST           TH Source Code
     C                     MOVELA1LLST    $FLLST           TH Hog Class Ty
     C                     MOVELA1J8ST    $FJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $FLIST           TH Schedule Kil
     C                     MOVELA1LJST    $FLJST           TH Shift Held O
     C                     MOVELA1NZTX    $FNZTX           TH State
     C                     MOVELA1HJCD    $FHJCD           TH Unused Code
     C                     MOVELA1R4ST    $FR4ST           TH Unused Sts 2
     C                     MOVELA1R5ST    $FR5ST           TH Commission S
     C                     MOVELA1R6ST    $FR6ST           TH Paid 2 Week
     C                     MOVELA1R7ST    $FR7ST           TH Unused Sts 1
     C                     Z-ADDA1THWT    $FTHWT           TH DOA Weight
     C                     Z-ADDA1T2WT    $FT2WT           TH Avg Lean % E
     C                     Z-ADDA1THHD    $FTHHD           TH HPS Farm Sit
     C                     Z-ADDA1T2HD    $FT2HD           TH Shift Held O
     C                     Z-ADDA1OBPR    $FOBPR           TH Sorting Amou
     C                     Z-ADDA1TAPR    $FTAPR           TH VC Gross Val
     C                     Z-ADDA1TBPR    $FTBPR           TH Excluded Gro
     C                     Z-ADDA1JFUR    $FJFUR           TH Avg Lean %
     C                     Z-ADDA1KRIF    $FKRIF           TH Broken Back
     C                     Z-ADDA1KORF    $FKORF           TH Hot Scl Uplo
     C                     Z-ADDA1KAPR    $FKAPR           TH Unused Nbr 4
     C                     Z-ADDA1KROT    $FKROT           TH Excluded Car
     C                     Z-ADDA1OTJG    $FOTJG           TH Excluded Pre
     C                     Z-ADDA1IRJG    $FIRJG           TH Unused Nbr 7
     C                     Z-ADDA1IMJF    $FIMJF           TH Unused Nbr 8
     C                     Z-ADDA1IRGF    $FIRGF           TH Unused Nbr 9
     C                     Z-ADDA1KRJF    $FKRJF           TH Unused Nbr 1
     C                     Z-ADDA1OJRF    $FOJRF           TH Break Even P
     C                     Z-ADDA1KFOR    $FKFOR           TH Meat Value F
     C                     Z-ADDA1MVNF    $FMVNF           TH Avg Loin Eye
     C                     Z-ADDA1MCNF    $FMCNF           TH Avg Backfat
     C                     Z-ADDA1NCNF    $FNCNF           TH HITCH Old Pa
     C                     Z-ADDA1NCHF    $FNCHF           TH MPR Sort Los
     C                     Z-ADDA1IGIR    $FIGIR           TH Unused Nbr 1
     C                     Z-ADDA1KFJR    $FKFJR           TH Unused Nbr 2
     C                     Z-ADDA1EADT    $FEADT           TH Cold Scl Upl
     C                     Z-ADDA1EBDT    $FEBDT           TH Cold Scl Upl
     C                     Z-ADDA1ECDT    $FECDT           TH Head LFT
     C                     Z-ADDA1EDDT    $FEDDT           TH Head EUT/KOA
     C                     Z-ADDA1EEDT    $FEEDT           TH Unused Date
     C                     MOVELA1U4ST    $FU4ST           TH Unused Sts 1
     C                     MOVELA1U5ST    $FU5ST           TH Unused Sts 2
     C                     MOVELA1U6ST    $FU6ST           TH Unused Sts 3
     C                     MOVELA1U7ST    $FU7ST           TH Unused Sts 4
     C                     MOVELA1U8ST    $FU8ST           TH Unused Sts 5
     C                     MOVELA1U9ST    $FU9ST           TH Unused Sts 6
     C                     MOVELA1VAST    $FVAST           TH Unused Sts 7
     C                     MOVELA1VBST    $FVBST           TH Unused Sts 8
     C                     MOVELA1AGCD    $FAGCD           GN Genetic Code
     C                     MOVELA1BECD    $FBECD           HC Class Code
     C                     MOVELA1BDCD    $FBDCD           DF Defect Code
     C                     MOVELA1CSCD    $FCSCD           THP Process Cod
     C                     MOVELA1AECD    $FAECD           PL Location Cod
     C                     MOVELA1ACCD    $FACCD           HB Buyer Code
     C                     MOVELA1AAVN    $FAAVN           RS User Changed
     C                     Z-ADDA1AADT    $FAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $FAMTM           RS Time Changed
     C                     MOVELA1AJST    $FAJST           RS Record Statu
     C                     MOVELA1AHVN    $FAHVN           RS Job
     C                     MOVELA1AGVN    $FAGVN           RS Program
     C                     MOVELA1ABVN    $FABVN           RS User Added
     C                     Z-ADDA1ABDT    $FABDT           RS Date Added
     C                     Z-ADDA1ABTM    $FABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * PRTOBJ calls after print of detail format
      * Embedded PRTOBJ : Prt Header Errors     PO
     C                     EXSR UBSUBR                     Embedded PRTOBJ
      * USER: Process after print of detail format
     C                     ADD  $FNNNB    $IC6VA           Lean % * Wgt SU
      * TH Hot Wgt
     C                     ADD  $FE0NB    $IWTNB           Hot Weight 1 SU
      * TH Live Wgt
     C                     ADD  $FCYNB    $IWSNB           Live Weight 1 S
      * TH Adj Live Wgt
     C                     ADD  $FLRNB    $IQLNB           Live Weight 2 S
     C                     ADD  1         $IEANB           Tattoo Cnt tota
      * Held over are accumulated in "less not tested" because they are p
      * Net Head Usr
     C                     ADD  $FF6NB    $IBJNZ           Head Total SUM
      * TH Head Identified
     C                     ADD  $FKOER    $IBKNZ           Head Identified
      * TH Head Accepted
     C                     ADD  $FHFNB    $IBLNZ           Head Accepted S
      * 04/07/04 Slm Replace Sum4, Sum5, Head Count Sum, Head Adds Sum
      *              with Sum4 Rpt, Sum5 Rpt, Head Count Sum Rpt,
      *              and Head Adds Sum
     C                     ADD  $FHENB    $ILAA1           Head Total Sum4
     C                     ADD  $FJ9NB    $ILBA1           Head Total Sum5
     C                     ADD  $FIORP    $ILCA1           Head Count Sum
     C                     ADD  $FOWEO    $ILDA1           Head Adds Sum R
     C                     ADD  $FFCNB    $IYDSM           Yard Dead SUM
     C                     ADD  $FFDNB    $IVCVW           TH Head Condemn
     C                     ADD  $FCWNB    $IQENB           Head Received
     C                     ADD  $FACA1    $IADA1           Head Exception
      * CASE: CUR.TH Actual Yield % is ne 0
     C           $FAWPC    IFNE *ZERO                      *IF
     C                     ADD  $FE0NB    $IQKNB           Hot Weight 2 SU
     C                     END                             *FI
      * External/Internal Totals
      * CASE: CUR.TH Source Type is External
     C           $FKAST    IFEQ 'E'                        *IF
     C                     ADD  A1CYNB    YL0003           Live Weight Ext
     C                     ADD  A1E0NB    YL0004           Hot Weight Ext
     C                     ADD  A1CWNB    YL0005           Head Received E
     C                     ADD  $FE0NB    $IBYNZ           Hot Wgt - Total
     C                     ADD  $FF6NB    $IBONZ           Head Total Exte
     C                     ADD  $FACA1    $IBAA1           Head Exception
     C                     ELSE
      * CASE: CUR.TH Source Type is Internal
     C           $FKAST    IFEQ 'I'                        *IF
     C                     ADD  A1CYNB    YL0006           Live Weight Int
     C                     ADD  A1E0NB    YL0007           Hot Weight Int
     C                     ADD  A1CWNB    YL0008           Head Received I
     C                     ADD  $FF6NB    YL0009           Head Total Inte
     C                     ADD  $FE0NB    $IBZNZ           Hot Wgt - Total
     C                     ADD  $FF6NB    $IBTNZ           Head Total Inte
     C                     ADD  $FACA1    $IBBA1           Head Exception
     C                     END                             *FI
     C                     END                             *FI
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1B0DT    WZA002           TH Kill Date
     C                     Z-ADDA1B0DT    WZA002
     C           *LIKE     DEFN A1LIST    WZA003           TH Schedule Kil
     C                     MOVELA1LIST    WZA003
     C           *LIKE     DEFN A1KAST    WZA004           TH Source Type
     C                     MOVELA1KAST    WZA004
     C           *LIKE     DEFN A1CVNB    WZA005           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPWF                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     MOVEL'Y'       W0RSL            *Record selecte
      * Omit Resales
      * CASE: DB1.TH Hog Class Type is Resale
     C           A1LLST    IFEQ 'R'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.TH Schedule Kill Shift EQ WRK.Blank USR
      *   |- c2    : PAR.TH Schedule Kill Shift EQ DB1.TH Schedule Kill S
      *   '-
     C           P1LIST    IFEQ WUCRTX                     *IF
     C           P1LIST    OREQ A1LIST                     *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        TH Kill Date
     C                     MOVEL*BLANK    W0AL02  1        TH Schedule Kil
     C                     MOVEL*BLANK    W0AL03  1        TH Source Type
     C                     MOVEL*BLANK    W0AL04  1        TH Tattoo Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        TH Kill Date
     C                     MOVEL'Y'       W0AL02  1        TH Schedule Kil
     C                     MOVEL'Y'       W0AL03  1        TH Source Type
     C                     MOVEL'Y'       W0AL04  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1B0DT    IFNE WZA002                     TH Kill Date
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1LIST    IFNE WZA003                     TH Schedule Kil
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1KAST    IFNE WZA004                     TH Source Type
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           A1CVNB    IFNE WZA005                     TH Tattoo Numbe
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Source Type format
      * CUR.SR Type Desc = Condition name of CUR.TH Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM $IKAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $IISTX    PARM           W0CNNM 25        SR Type Desc
      *
      * Actual Yield
      * CASE: CUR.Live Weight 1 SUM is Not zero
     C           $IWSNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.TH Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 1 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $IQKNB    DIV  $IWSNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $IAWPC           TH Actual Yield
     C                     END                             *FI
      * Adjusted Yield
      * CASE: CUR.Live Weight 2 SUM is Not zero
     C           $IQLNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.TH Adj Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 2 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $IQKNB    DIV  $IQLNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $ICWPC           TH Adj Actual Y
     C                     END                             *FI
      * Average Lean Percent
      * CASE: CUR.Hot Weight 1 SUM is Not zero
     C           $IWTNB    IFNE *ZERO                      *IF
      * Compute: Lean %
      * CUR.TH Avg Lean Percent =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Lean % * Wgt SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 1 SUM
     C           $IC6VA    DIV  $IWTNB    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $IF4NB           TH Avg Lean Per
     C                     END                             *FI
      * Percent Identified & Percent Accepted
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $IBJNZ    IFNE *ZERO                      *IF
      * Percent Identified 6.2
      * CUR.Percent ID'd SUM 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Identified SUM 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total SUM 6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $IBKNZ    DIV  $IBJNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $IBMNZ           Percent ID'd SU
      * Percent Accepted 6.2
      * CUR.Percent Accepted SUM 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Accepted SUM 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total SUM 6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $IBLNZ    DIV  $IBJNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $IBNNZ           Percent Accepte
     C                     END                             *FI
      * External/Internal Totals
      * CASE: CUR.TH Source Type is External
     C           $IKAST    IFEQ 'E'                        *IF
     C                     ADD  $IEANB    WUEANB           Tattoo Cnt tota
     C                     ADD  $IC6VA    WUC6VA           Lean % * Wgt SU
     C                     ADD  $IWTNB    WUWTNB           Hot Weight 1 SU
      *  6/1/2020 JBB - Fix Divide by Zero
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $IBJNZ    IFNE *ZERO                      *IF
      * Average Hot Weight EXT
      * CUR.TH Avg Hot Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Hot Wgt - Total External
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Total SUM 6.0
     C           $IBYNZ    DIV  $IBJNZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $IHDNB           TH Avg Hot Wgt
     C                     END                             *FI
     C                     ADD  $IWSNB    WUWSNB           Live Weight 1 S
     C                     ADD  $IQLNB    WUQLNB           Live Weight 2 S
     C                     ADD  $IQENB    WUQENB           Head Received
     C                     ADD  $IYDSM    WUYDSM           Yard Dead SUM
     C                     ADD  $IVCVW    WUVCVW           TH Head Condemn
      * 06/07/04 SLM Create new total fields replacing 7/0 with 5/0
      *              for Head Total Sum4,Sum5, Head Count Sum, Head Add S
     C                     ADD  $ILAA1    WULAA1           Head Total Sum4
     C                     ADD  $ILBA1    WULBA1           Head Total Sum5
     C                     ADD  $ILCA1    WULCA1           Head Count Sum
     C                     ADD  $ILDA1    WULDA1           Head Adds Sum R
     C                     ADD  $IQKNB    WUQKNB           Hot Weight 2 SU
     C                     ADD  $IBJNZ    YL0010           Head Total Exte
     C                     ADD  $IBKNZ    YL0011           Head Identified
     C                     ADD  $IBLNZ    YL0012           Head Accepted E
     C                     Z-ADD$IBAA1    $IADA1           Head Exception
     C                     ELSE
      * CASE: CUR.TH Source Type is Internal
     C           $IKAST    IFEQ 'I'                        *IF
     C                     ADD  $IEANB    YL0013           Tattoo Cnt tota
     C                     ADD  $IC6VA    YL0014           Lean % * Wgt SU
     C                     ADD  $IWTNB    YL0015           Hot Weight 1 SU
      *  6/1/2020 JBB - Fix Divide by Zero
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $IBJNZ    IFNE *ZERO                      *IF
      * Average Hot Weight INT
      * CUR.TH Avg Hot Wgt =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Hot Wgt - Total Internal
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Total SUM 6.0
     C           $IBZNZ    DIV  $IBJNZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $IHDNB           TH Avg Hot Wgt
     C                     END                             *FI
     C                     ADD  $IWSNB    YL0016           Live Weight 1 S
     C                     ADD  $IQLNB    YL0017           Live Weight 2 S
     C                     ADD  $IQENB    YL0018           Head Received
     C                     ADD  $IYDSM    YL0019           Yard Dead SUM
     C                     ADD  $IVCVW    YL0020           TH Head Condemn
     C                     ADD  $IB4NB    YL0021           Head Total SUM
     C                     ADD  $IXRNB    YL0022           Head Total Sum2
     C                     ADD  $IADA1    YL0023           Head Exception
     C                     ADD  $IHTS3    YL0024           Head Total Sum3
      * 06/07/04 SLM Create new total fields replacing 7/0 with 5/0
      *              for Head Total Sum4,Sum5, Head Count Sum, Head Add S
     C                     ADD  $ILAA1    YL0025           Head Total Sum4
     C                     ADD  $ILBA1    YL0026           Head Total Sum5
     C                     ADD  $ILCA1    YL0027           Head Count Sum
     C                     ADD  $ILDA1    YL0028           Head Adds Sum R
     C                     ADD  $IQKNB    YL0029           Hot Weight 2 SU
     C                     ADD  $IBJNZ    YL0009           Head Total Inte
     C                     ADD  $IBKNZ    YL0030           Head Identified
     C                     ADD  $IBLNZ    YL0031           Head Accepted I
     C                     Z-ADD$IBBA1    $IADA1           Head Exception
     C                     END                             *FI
     C                     END                             *FI
      * Avg Live weight
      * CASE: CUR.Head Received  SUM is Not Zero
     C           $IQENB    IFNE *ZERO                      *IF
      * Avg Live Weight
      * CUR.TH Avg Live Wgt =
      *    *COMPUTE ((x1 / x2))
      * x1    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Received  SUM
     C           $IWSNB    DIV  $IQENB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $IF7NB           TH Avg Live Wgt
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 5
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Print format
     C                     WRITE$IKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of TH Source Type format
     C                     ADD  $IEANB    $JEANB           Tattoo Cnt tota
     C                     ADD  $IC6VA    $JC6VA           Lean % * Wgt SU
     C                     ADD  $IWTNB    $JWTNB           Hot Weight 1 SU
     C                     ADD  $IWSNB    $JWSNB           Live Weight 1 S
     C                     ADD  $IQLNB    $JQLNB           Live Weight 2 S
     C                     ADD  $IB4NB    $JB4NB           Head Total SUM
     C                     ADD  $IXRNB    $JXRNB           Head Total Sum2
     C                     ADD  $IHTS3    $JHTS3           Head Total Sum3
     C                     ADD  $IYDSM    $JYDSM           Yard Dead SUM
     C                     ADD  $IVCVW    $JVCVW           TH Head Condemn
     C                     ADD  $IQENB    $JQENB           Head Received
     C                     ADD  $IADA1    $JADA1           Head Exception
     C                     ADD  $IQKNB    $JQKNB           Hot Weight 2 SU
     C                     ADD  $ILAA1    $JLAA1           Head Total Sum4
     C                     ADD  $ILBA1    $JLBA1           Head Total Sum5
     C                     ADD  $ILCA1    $JLCA1           Head Count Sum
     C                     ADD  $ILDA1    $JLDA1           Head Adds Sum R
     C                     ADD  $IBJNZ    $JBJNZ           Head Total SUM
     C                     ADD  $IBKNZ    $JBKNZ           Head Identified
     C                     ADD  $IBLNZ    $JBLNZ           Head Accepted S
     C                     ADD  $IBYNZ    $JBYNZ           Hot Wgt - Total
     C                     ADD  $IBZNZ    $JBZNZ           Hot Wgt - Total
     C                     ADD  $IBONZ    $JBONZ           Head Total Exte
     C                     ADD  $IBTNZ    $JBTNZ           Head Total Inte
     C                     ADD  $IBAA1    $JBAA1           Head Exception
     C                     ADD  $IBBA1    $JBBA1           Head Exception
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Schedule Kill Shift format
     C                     MOVELWUFSTX    $JFSTX           Shift Descripti
     C           $JEANB    SUB  $JEENB    $JEFNB           Tattoo Cnt grad
      * Actual Yield
      * CASE: CUR.Live Weight 1 SUM is Not zero
     C           $JWSNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.TH Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 1 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $JQKNB    DIV  $JWSNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $JAWPC           TH Actual Yield
     C                     END                             *FI
      * Adjusted Yield
      * CASE: CUR.Live Weight 2 SUM is Not zero
     C           $JQLNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.TH Adj Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 2 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $JQKNB    DIV  $JQLNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $JCWPC           TH Adj Actual Y
     C                     END                             *FI
      * Average Lean Percent
      * CASE: CUR.Hot Weight 1 SUM is Not zero
     C           $JWTNB    IFNE *ZERO                      *IF
      * Compute: Lean %
      * CUR.TH Avg Lean Percent =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Lean % * Wgt SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 1 SUM
     C           $JC6VA    DIV  $JWTNB    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $JF4NB           TH Avg Lean Per
     C                     END                             *FI
      * Percent Identified & Percent Accepted
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $JBJNZ    IFNE *ZERO                      *IF
      * Percent Identified
      * CUR.Percent ID'd SUM 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Identified SUM 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total SUM 6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $JBKNZ    DIV  $JBJNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $JBMNZ           Percent ID'd SU
      * Percent Accepted
      * CUR.Percent Accepted SUM 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Accepted SUM 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total SUM 6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $JBLNZ    DIV  $JBJNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $JBNNZ           Percent Accepte
     C                     END                             *FI
      * Avg Live weight
      * CASE: CUR.Head Received  SUM is Not Zero
     C           $JQENB    IFNE *ZERO                      *IF
      * Avg Live Weight
      * CUR.TH Avg Live Wgt =
      *    *COMPUTE ((x1 / x2))
      * x1    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Received  SUM
     C           $JWSNB    DIV  $JQENB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $JF7NB           TH Avg Live Wgt
     C                     END                             *FI
      * Avg Hot Weight
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $JBJNZ    IFNE *ZERO                      *IF
      * Avg Hot Weight
      * CUR.TH Avg Hot Wgt =
      *    *COMPUTE ((x1 + x2) / x3)
      * x1    : CUR.Hot Wgt - Total Internal
      * +     : PGM.*Synon (17,7) work field
      * x2    : CUR.Hot Wgt - Total External
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Total SUM 6.0
     C           $JBZNZ    ADD  $JBYNZ    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $JBJNZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $JHDNB           TH Avg Hot Wgt
     C                     END                             *FI
     C           $JBBA1    ADD  $JBAA1    $JADA1           Head Exception
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 5
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$JKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
      * USER: Process after print of TH Schedule Kill Shift format
     C                     ADD  $JEFNB    $KI4NB           Tattoo Cnt grad
     C                     ADD  $JEENB    $KJ0NB           Tattoo Cnt not
     C                     ADD  $JEANB    $KJ1NB           Tattoo Cnt tota
     C                     ADD  $JC6VA    $KC6VA           Lean % * Wgt SU
     C                     ADD  $JWTNB    $KWTNB           Hot Weight 1 SU
     C                     ADD  $JWSNB    $KWSNB           Live Weight 1 S
     C                     ADD  $JQLNB    $KQLNB           Live Weight 2 S
     C                     ADD  $JB4NB    $KB4NB           Head Total SUM
     C                     ADD  $JXRNB    $KXRNB           Head Total Sum2
     C                     ADD  $JHTS3    $KHTS3           Head Total Sum3
     C                     ADD  $JYDSM    $KYDSM           Yard Dead SUM
     C                     ADD  $JVCVW    $KVCVW           TH Head Condemn
     C                     ADD  $JQENB    $KQENB           Head Received
     C                     ADD  $JADA1    $KADA1           Head Exception
     C                     ADD  $JQKNB    $KQKNB           Hot Weight 2 SU
     C                     ADD  $JLAA1    $KLAA1           Head Total Sum4
     C                     ADD  $JLBA1    $KLBA1           Head Total Sum5
     C                     ADD  $JLCA1    $KLCA1           Head Count Sum
     C                     ADD  $JLDA1    $KLDA1           Head Adds Sum R
     C                     ADD  $JE0NB    $KMQA1           Hot Weight Ext
     C                     ADD  $JE0NB    $KMPA1           Hot Weight Int
     C                     ADD  $JBJNZ    $KBJNZ           Head Total SUM
     C                     ADD  $JBKNZ    $KBKNZ           Head Identified
     C                     ADD  $JBLNZ    $KBLNZ           Head Accepted S
     C                     ADD  $JBONZ    $KBONZ           Head Total Exte
     C                     ADD  $JBTNZ    $KBTNZ           Head Total Inte
     C                     ADD  $JBYNZ    $KBYNZ           Hot Wgt - Total
     C                     ADD  $JBZNZ    $KBZNZ           Hot Wgt - Total
     C                     ADD  $JBAA1    $KBAA1           Head Exception
     C                     ADD  $JBBA1    $KBBA1           Head Exception
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
      * Actual Yield
      * CASE: CUR.Live Weight 1 SUM is Not zero
     C           $KWSNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.TH Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 1 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $KQKNB    DIV  $KWSNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KAWPC           TH Actual Yield
     C                     END                             *FI
      * Adjusted Yield
      * CASE: CUR.Live Weight 2 SUM is Not zero
     C           $KQLNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.TH Adj Actual Yield % =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 2 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $KQKNB    DIV  $KQLNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KCWPC           TH Adj Actual Y
     C                     END                             *FI
      * Average Lean Percent
      * CASE: CUR.Hot Weight 1 SUM is Not zero
     C           $KWTNB    IFNE *ZERO                      *IF
      * Compute: Lean %
      * CUR.TH Avg Lean Percent =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Lean % * Wgt SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 1 SUM
     C           $KC6VA    DIV  $KWTNB    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KF4NB           TH Avg Lean Per
     C                     END                             *FI
      * Percent Identified and Percent Accepted
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $KBJNZ    IFNE *ZERO                      *IF
      * Percent Identified 6.2
      * CUR.Percent ID'd SUM 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Identified SUM 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total SUM 6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $KBKNZ    DIV  $KBJNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KBMNZ           Percent ID'd SU
      * Percent Accepted 6.2
      * CUR.Percent Accepted SUM 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Accepted SUM 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total SUM 6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $KBLNZ    DIV  $KBJNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KBNNZ           Percent Accepte
     C                     END                             *FI
      * External
     C                     EXSR UCSUBR                     External
      * internal
     C                     EXSR UDSUBR                     internal
      * Avg Live weight
      * CASE: CUR.Head Received  SUM is Not Zero
     C           $KQENB    IFNE *ZERO                      *IF
      * Avg Live Weight
      * CUR.TH Avg Live Wgt       USR =
      *    *COMPUTE ((x1 / x2))
      * x1    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Received  SUM
     C           $KWSNB    DIV  $KQENB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KPOUW           TH Avg Live Wgt
     C                     END                             *FI
      * Avg Hot Weight
      * CASE: CUR.Head Total SUM 6.0 is Entered
     C           $KBJNZ    IFNE *ZERO                      *IF
      * Avg Hot Weight
      * CUR.TH Avg Hot Wgt        USR =
      *    *COMPUTE ((x1 / x2))
      * x1    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Total SUM 6.0
     C           $KWTNB    DIV  $KBJNZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KKJQW           TH Avg Hot Wgt
     C                     END                             *FI
      * Avg Hot Weight    External
      * CASE: CUR.Head Total External  6.0 is Entered
     C           $KBONZ    IFNE *ZERO                      *IF
      * Avg Hot Weight
      * CUR.TH Avg Hot Wgt Ext User =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Hot Wgt - Total External
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Total External  6.0
     C           $KBYNZ    DIV  $KBONZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KMMA1           TH Avg Hot Wgt
     C                     END                             *FI
      * Avg Hot Weight    Internal
      * CASE: CUR.Head Total Internal  6.0 is Entered
     C           $KBTNZ    IFNE *ZERO                      *IF
      * Avg Hot Weight
      * CUR.TH Avg Hot Wgt Int User =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Hot Wgt - Total Internal
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Total Internal  6.0
     C           $KBZNZ    DIV  $KBTNZ    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KMKA1           TH Avg Hot Wgt
     C                     END                             *FI
      * Avg Live weight   External
      * CASE: LCL.Head Received EXT USR is Not Zero
     C           YL0005    IFNE *ZERO                      *IF
      * Avg Live Weight
      * CUR.TH Avg Live Wgt Ext Usr =
      *    *COMPUTE ((x1 / x2))
      * x1    : LCL.Live Weight Ext Sum
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Head Received EXT USR
     C           YL0003    DIV  YL0005    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KMLA1           TH Avg Live Wgt
     C                     END                             *FI
      * Avg Live weight   Internal
      * CASE: LCL.Head Received INT USR is Not Zero
     C           YL0008    IFNE *ZERO                      *IF
      * Avg Live Weight
      * CUR.TH Avg Live Wgt Int Usr =
      *    *COMPUTE ((x1 / x2))
      * x1    : LCL.Live Weight Int Sum
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Head Received INT USR
     C           YL0006    DIV  YL0008    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KMJA1           TH Avg Live Wgt
     C                     END                             *FI
     C           $KBAA1    ADD  $KBBA1    $KADA1           Head Exception
     C           W0PFM     IFEQ 'Y'
      * This format always starts a new page
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
      * Print format
     C                     WRITE$KFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         B0MAIN    BEGSR
      *================================================================
      * Prt Header Errors     PO: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN B6HRNB    WQKB01           KV Company Numb
     C           *LIKE     DEFN B6BPDT    WQKB02           KV Kill Date
     C           *LIKE     DEFN B6IRNB    WQKB03           KV TATTOO NUMBE
     C           *LIKE     DEFN B6BONM    WQKB04           KV Buy Order Nu
     C           *LIKE     DEFN B6LDNM    WQKB05           KV Load Number
      * Define keylist
     C           KRSB      KLIST
     C                     KFLD           WQKB01           KV Company Numb
     C                     KFLD           WQKB02           KV Kill Date
     C                     KFLD           WQKB03           KV TATTOO NUMBE
     C                     KFLD           WQKB04           KV Buy Order Nu
     C                     KFLD           WQKB05           KV Load Number
      * Setup key
     C                     Z-ADDA1HMNB    WQKB01           KV Company Numb
     C                     Z-ADDA1B0DT    WQKB02           KV Kill Date
     C                     Z-ADDA1CVNB    WQKB03           KV TATTOO NUMBE
     C                     Z-ADDA1BNNB    WQKB04           KV Buy Order Nu
     C                     Z-ADDA1BONB    WQKB05           KV Load Number
      * Establish starting position
     C           KRSB      SETLL@B6CPLX                    *
      * Read first record with user selection
     C                     EXSR B3READ
     C           W0EOFB    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0BL1P  1        First page
     C                     MOVEL'Y'       W0BL00  1        KV Company Numb
     C                     MOVEL'Y'       W0BL01  1        KV Kill Date
     C                     MOVEL'Y'       W0BL02  1        KV TATTOO NUMBE
     C                     MOVEL'Y'       W0BL03  1        KV Buy Order Nu
     C                     MOVEL'Y'       W0BL04  1        KV Load Number
     C                     MOVEL'Y'       W0BL05  1        KV Record Numbe
     C                     MOVEL'Y'       W0BL06  1        KV Record Type
     C                     MOVEL'Y'       W0BL07  1        KV Error Code
      * Set column headings flag
     C                     MOVE 'Y'       W0BCDT
      * Print report body
     C           W0EOFB    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR B1PHDR
      * Print report detail line
     C                     EXSR B2PDTL
      * Read next record with user selection
     C                     EXSR B3READ
      * Print totals
     C                     EXSR B4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         B0EXIT    ENDSR
      /EJECT
     CSR         B1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0BL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP1P  1
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP00  1
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP01  1
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP02  1
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP03  1
     C                     END
      *
     C           W0BL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP04  1
     C                     END
      *
     C           W0BL05    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP05  1
     C                     END
      *
     C           W0BL06    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP06  1
     C                     END
      *
     C           W0BL07    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BP07  1
     C                     END
      *
      *================================================================
     CSR         B1EXIT    ENDSR
      /EJECT
     CSR         B2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDB6HRNB    $GHRNB           KV Company Numb
     C                     Z-ADDB6BPDT    $GBPDT           KV Kill Date
     C                     Z-ADDB6IRNB    $GIRNB           KV TATTOO NUMBE
     C                     Z-ADDB6BONM    $GBONM           KV Buy Order Nu
     C                     Z-ADDB6LDNM    $GLDNM           KV Load Number
     C                     Z-ADDB6FPNB    $GFPNB           KV Record Numbe
     C                     MOVELB6DXST    $GDXST           KV Error Code
     C                     MOVELB6DYST    $GDYST           KV Record Type
     C                     MOVELB6B7TX    $GB7TX           KV Error Descri
     C                     MOVELB6AAVN    $GAAVN           RS User Changed
     C                     Z-ADDB6AADT    $GAADT           RS Date Changed
     C                     Z-ADDB6AMTM    $GAMTM           RS Time Changed
     C                     MOVELB6AJST    $GAJST           RS Record Statu
     C                     MOVELB6AHVN    $GAHVN           RS Job
     C                     MOVELB6AGVN    $GAGVN           RS Program
     C                     MOVELB6ABVN    $GABVN           RS User Added
     C                     Z-ADDB6ABDT    $GABDT           RS Date Added
     C                     Z-ADDB6ABTM    $GABTM           RS Time Added
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0BPDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         B2EXIT    ENDSR
      /EJECT
     CSR         B3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B6HRNB    WZB001           KV Company Numb
     C                     Z-ADDB6HRNB    WZB001
     C           *LIKE     DEFN B6BPDT    WZB002           KV Kill Date
     C                     Z-ADDB6BPDT    WZB002
     C           *LIKE     DEFN B6IRNB    WZB003           KV TATTOO NUMBE
     C                     Z-ADDB6IRNB    WZB003
     C           *LIKE     DEFN B6BONM    WZB004           KV Buy Order Nu
     C                     Z-ADDB6BONM    WZB004
     C           *LIKE     DEFN B6LDNM    WZB005           KV Load Number
     C                     Z-ADDB6LDNM    WZB005
     C           *LIKE     DEFN B6FPNB    WZB006           KV Record Numbe
     C                     Z-ADDB6FPNB    WZB006
     C           *LIKE     DEFN B6DYST    WZB007           KV Record Type
     C                     MOVELB6DYST    WZB007
     C           *LIKE     DEFN B6DXST    WZB008           KV Error Code
     C                     MOVELB6DXST    WZB008
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFB    OREQ '1'
     C           KRSB      READE@B6CPLX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFB  1
      * Quit if no record read
     C           W0EOFB    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0BL00  1        KV Company Numb
     C                     MOVEL*BLANK    W0BL01  1        KV Kill Date
     C                     MOVEL*BLANK    W0BL02  1        KV TATTOO NUMBE
     C                     MOVEL*BLANK    W0BL03  1        KV Buy Order Nu
     C                     MOVEL*BLANK    W0BL04  1        KV Load Number
     C                     MOVEL*BLANK    W0BL05  1        KV Record Numbe
     C                     MOVEL*BLANK    W0BL06  1        KV Record Type
     C                     MOVEL*BLANK    W0BL07  1        KV Error Code
     C           W0EOFB    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0BL00  1        KV Company Numb
     C                     MOVEL'Y'       W0BL01  1        KV Kill Date
     C                     MOVEL'Y'       W0BL02  1        KV TATTOO NUMBE
     C                     MOVEL'Y'       W0BL03  1        KV Buy Order Nu
     C                     MOVEL'Y'       W0BL04  1        KV Load Number
     C                     MOVEL'Y'       W0BL05  1        KV Record Numbe
     C                     MOVEL'Y'       W0BL06  1        KV Record Type
     C                     MOVEL'Y'       W0BL07  1        KV Error Code
     C                     ELSE
      * Next record - Detect level breaks
     C           B6HRNB    IFNE WZB001                     KV Company Numb
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL00
     C                     END
     C           B6BPDT    IFNE WZB002                     KV Kill Date
     C           W0BL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL01
     C                     END
     C           B6IRNB    IFNE WZB003                     KV TATTOO NUMBE
     C           W0BL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL02
     C                     END
     C           B6BONM    IFNE WZB004                     KV Buy Order Nu
     C           W0BL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL03
     C                     END
     C           B6LDNM    IFNE WZB005                     KV Load Number
     C           W0BL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL04
     C                     END
     C           B6FPNB    IFNE WZB006                     KV Record Numbe
     C           W0BL04    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL05
     C                     END
     C           B6DYST    IFNE WZB007                     KV Record Type
     C           W0BL05    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL06
     C                     END
     C           B6DXST    IFNE WZB008                     KV Error Code
     C           W0BL06    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0BL07
     C                     END
     C                     END
      *================================================================
     CSR         B3EXIT    ENDSR
      /EJECT
     CSR         B4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0BL07    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP07
     C                     END
      *
     C           W0BL06    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP06
     C                     END
      *
     C           W0BL05    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP05
     C                     END
      *
     C           W0BL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP04
     C                     END
      *
     C           W0BL03    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP03
     C                     END
      *
     C           W0BL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP02
     C                     END
      *
     C           W0BL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP01
     C                     END
      *
     C           W0BL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0BP00
     C                     END
      *
     C           W0EOFB    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$HFINTTL
     C                     END
      *
      *================================================================
     CSR         B4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$C1STPAG
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print TH Kill Date of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print TH Schedule Kill Shift of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Schedule Kill Shift format
      * CUR.Shift Description USR = Condition name of DB1.TH Schedule Kil
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100059   Y2LSNO  70       List number
     C                     PARM A1LIST    W0INVL 25        TH Schedule Kil
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $DFSTX    PARM           W0CNNM 25        Shift Descripti
      *
     C                     MOVEL$DFSTX    WUFSTX           Shift Descripti
     C           W0PFM     IFEQ 'Y'
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print TH Source Type of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Source Type format
      * CUR.SR Type Desc = Condition name of CUR.TH Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM $EKAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $EISTX    PARM           W0CNNM 25        SR Type Desc
      *
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print TH Tattoo Number of Prt Bal to Kill Rpt   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of Prt Bal to Kill Rpt   PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * 11/09/04 SLM Added a Flag to the report to allow the user to know
      *              The following condition is a error
      *              that this tattoo is in Error because of balanceing
      *              The following is information only on the report
      *              If not error from balance, then this tattoo
      *              should recalc live weight
      *              This should allow the user to look at the avg live w
      *              If not error from balance, and not recalc live wgt
      *              is the avg live weight < 200,
     C                     Z-ADD200       YL0001           TH Avg Live Wgt
     C                     Z-ADD330       YL0002           TH Avg live wei
     C                     MOVEL*BLANK    $FZ1ST           Err/Recalc/AvgL
      * CASE: DB1.TH Kill Balancing Sts is Error
     C           A1DWST    IFEQ 'E'                        *IF
     C                     MOVEL'E'       $FZ1ST           Err/Recalc/AvgL
     C                     ELSE
      * CASE: DB1.TH Recalc Live Wgt GT WRK.Zero USR
     C           A1A7PC    IFGT WUE9NB                     *IF
     C                     MOVEL'R'       $FZ1ST           Err/Recalc/AvgL
     C                     ELSE
      * CASE: DB1.TH Avg Live Wgt LT LCL.TH Avg Live Wgt       USR
     C           A1F7NB    IFLT YL0001                     *IF
     C                     MOVEL'W'       $FZ1ST           Err/Recalc/AvgL
     C                     ELSE
      * CASE: DB1.TH Avg Live Wgt GT LCL.TH Avg live weight   USR
     C           A1F7NB    IFGT YL0002                     *IF
     C                     MOVEL'W'       $FZ1ST           Err/Recalc/AvgL
     C                     ELSE
      * CASE: *OTHERWISE
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Compute: Net Head Usr
      * CUR.Net Head Usr =
      *    *COMPUTE (x1 - x2 - x3)
      * x1    : CUR.TH Head Received
      * -     : PGM.*Synon (17,7) work field
      * x2    : CUR.TH Yard Deads
      * -     : PGM.*Synon (17,7) work field
      * x3    : CUR.TH Head Condemned
     C           $FCWNB    SUB  $FFCNB    W0WD01           *Synon (17,7) w
     C           W0WD01    SUB  $FFDNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FF6NB           Net Head Usr
     C           $FE0NB    MULT $FF4NB    $FNNNB           Lean % * Wgt US
     C           $FKOER    SUB  $FHFNB    $FACA1           Head Exception
      * If Held over from a day, to the next day , or to another shift
      * CASE: CUR.TH Held Over Record is Yes
     C           $FE1ST    IFEQ 'Y'                        *IF
     C                     MOVEL'H+'      $FNGST           @Status (Held o
     C                     ELSE
      * CASE: CUR.TH Held Over is greater than 0
     C           $FH9NB    IFGT *ZERO                      *IF
     C                     MOVEL'H-'      $FNGST           @Status (Held o
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CUR.TH PHA Add Reason is *None
     C           $FUSST    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $FC4TX           Condition Name
     C                     ELSE
      * CASE: *OTHERWISE
      * CUR.Condition Name USR = Condition name of CUR.TH PHA Add Reason
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1225368   Y2LSNO  70       List number
     C                     PARM $FUSST    W0INVL 25        TH PHA Add Reas
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FC4TX    PARM           W0CNNM 25        Condition Name
      *
     C                     END                             *FI
      * RTV 1 Eval for Ln/Hst RT - Eval Trans  * 
     C                     EXSR SARVGN
      *  1/16/2020 JBB E16055 - [ME] HPE Balance to Kill: Expand Percents
      * CASE: CUR.Net Head Usr is Not Zero
     C           $FF6NB    IFNE *ZERO                      *IF
      * BADEN
      * Calculate percentages into bigger fields.  Size 6.2
      * Percent Identified 6.2
      * CUR.Percent Identified 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.TH Head Identified
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Net Head Usr
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $FKOER    DIV  $FF6NB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FIWPC           Percent Identif
      * Percent Accepted 6.2
      * CUR.Percent Accepted 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.TH Head Accepted
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Net Head Usr
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           $FHFNB    DIV  $FF6NB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FIXPC           Percent Accepte
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Print First Page Format of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0BL1P
     C                     END                             FI
      * Print KV Company Number of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP00
     C                     END                             FI
      * Print KV Kill Date of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP01
     C                     END                             FI
      * Print KV TATTOO NUMBER of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP02
     C                     END                             FI
      * Print KV Buy Order Number of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP03
     C                     END                             FI
      * Print KV Load Number of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP04
     C                     END                             FI
      * Print KV Record Number of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP05    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP05    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP05
     C                     END                             FI
      * Print KV Record Type of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP06    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP06    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP06
     C                     END                             FI
      * Print KV Error Code of Prt Header Errors     PO
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BP07    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BP07    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0BP07
     C                     END                             FI
      * Print Detail line. of Prt Header Errors     PO
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0BCDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0BPDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0BPDT    ANDEQ'P'
      * Print column headings if required
     C           W0BCDT    IFEQ 'Y'
     C                     WRITE$GCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0BCDT
     C                     END                             FI
      * Print format
     C                     WRITE$GDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0BPDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP02    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Bal to Kill Rpt   PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Bal to Kill Rpt   PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Kill Date of Prt Bal to Kill Rpt   PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Schedule Kill Shift of Prt Bal to Kill Rpt   PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * TH Source Type of Prt Bal to Kill Rpt   PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Bal to Kill Rpt   PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Bal to Kill Rpt   PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD5         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      * * First Page Format of Prt Header Errors     PO
     C           W0BP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Company Number of Prt Header Errors     PO
     C           W0BP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Kill Date of Prt Header Errors     PO
     C           W0BP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV TATTOO NUMBER of Prt Header Errors     PO
     C           W0BP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Buy Order Number of Prt Header Errors     PO
     C           W0BP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Load Number of Prt Header Errors     PO
     C           W0BP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Record Number of Prt Header Errors     PO
     C           W0BP05    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Record Type of Prt Header Errors     PO
     C           W0BP06    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * KV Error Code of Prt Header Errors     PO
     C           W0BP07    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Header Errors     PO
     C           W0BPDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0BCDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * TOP = PAR By name
     C                     Z-ADDP1HMNB    $BHMNB           BOH Company Num
     C                     Z-ADDP1B0DT    $BB0DT           TH Kill Date
     C                     MOVELP1LIST    $BLIST           TH Schedule Kil
      * Val Company Number    IF
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $BHMNB    WQ0001  30       CC Company Numb
     C           $BBSTX    PARM *BLANK    WQ0002 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0003  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.Invalid Y/N USR is Yes
     C           WUG3ST    IFEQ 'Y'                        *IF
      * Setup message data for message
     C                     Z-ADD$BHMNB    ZA0001           CC Company Numb
      * Send message 'Invalid Company Number'
     C                     MOVEL'PRK0299' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     MOVELWUG3ST    WUG3ST           Invalid Y/N USR
      * CASE: PAR.TH Schedule Kill Shift NE WRK.Blank USR
     C           P1LIST    IFNE WUCRTX                     *IF
      * TOP.Shift Description USR = Condition name of PAR.TH Schedule Kil
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100059   Y2LSNO  70       List number
     C                     PARM P1LIST    W0INVL 25        TH Schedule Kil
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $BFSTX    PARM           W0CNNM 25        Shift Descripti
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    $BFSTX           Shift Descripti
     C                     MOVEL'ALL'     $BFSTX           Shift Descripti
     C                     END                             *FI
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $BB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBB0DT
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV 1 Eval for Ln/Hst RT - Eval Trans  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * 06/04/04 SLM HPEBAL -- Create routine to get 1st L(Lot) or H(hist
      * for this Adjust/Add Type
     C                     MOVEL*BLANK    $FY8ST           @Adjust/Add Sou
      * Declare restrictor key work fields
     C           *LIKE     DEFN BVHMNB    WQSA01           BOH Company Num
     C           *LIKE     DEFN BVBNNB    WQSA02           BOH Buy Order N
     C           *LIKE     DEFN BVBONB    WQSA03           BOL Load Number
     C           *LIKE     DEFN BVCVNB    WQSA04           TH Tattoo Numbe
     C           *LIKE     DEFN BVB0DT    WQSA05           TH Kill Date
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           BOH Company Num
     C                     KFLD           WQSA02           BOH Buy Order N
     C                     KFLD           WQSA03           BOL Load Number
     C                     KFLD           WQSA04           TH Tattoo Numbe
     C                     KFLD           WQSA05           TH Kill Date
      * Setup key
     C                     Z-ADD$FHMNB    WQSA01           BOH Company Num
     C                     Z-ADD$FBNNB    WQSA02           BOH Buy Order N
     C                     Z-ADD$FBONB    WQSA03           BOL Load Number
     C                     Z-ADD$FCVNB    WQSA04           TH Tattoo Numbe
     C                     Z-ADD$FB0DT    WQSA05           TH Kill Date
      * Establish starting position
     C           KRSSA     SETLL@BVCPG8                    *
     C           KRSSA     READE@BVCPG8                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0121' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL*BLANK    $FY8ST           @Adjust/Add Sou
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.ET Adjust/Add Source is Lot Avg or History Avg
     C           BVVJST    IFEQ 'H'                        *IF
     C           BVVJST    OREQ 'L'
     C                     MOVELBVVJST    $FY8ST           @Adjust/Add Sou
     C                     GOTO SAEXIT                     *QUIT
     C                     END                             *FI
     C           KRSSA     READE@BVCPG8                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      * 06/04/04 SLM HPEBAL - Change Report to print the Adjust/Add Sourc
      *                       Created new RTV, to read the first LN%
      *                       and bring back the first L(Lot) or H(histor
      *  1/16/2020 JBB E16055 - Expand Percentage fields
      *                       Currently the percentages on the report are
      *                       the database value, length 5.2.  Sometimes
      *                       the percentage can be greater than 100%.
      *                       An example is when Net Head = 16 and Head
      *                       ID'd is 162.  The calculated percent is
      *                       162 / 15 = 1080%.  The database value is 80
      *                       Expanding the percent fields from 5.2 to 6.
      *                       Also lining up the columns by changing some
      *                       of the total fields from length 7.0 to 6.0.
      * H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Num
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Embedded PRTOBJ : Prt Header Errors     PO
      *================================================================
      * CASE: DB1.TH Header Error Sts is No Header Error
     C           A1D7ST    IFEQ *BLANK                     *IF
     C                     GOTO UBEXIT                     *QUIT
     C                     END                             *FI
      * Prt Header Errors     PO: Mainline
     C                     EXSR B0MAIN
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * External
      *================================================================
     C                     Z-ADDWUEANB    $KAYA1           Tattoo Count EX
      * Average Lean Percent
      * CASE: WRK.Hot Weight 1 SUM is Not zero
     C           WUWTNB    IFNE *ZERO                      *IF
      * Compute: Lean %
      * CUR.Lean Percent EXT USR =
      *    *COMPUTE (x1 / x2)
      * x1    : WRK.Lean % * Wgt SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : WRK.Hot Weight 1 SUM
     C           WUC6VA    DIV  WUWTNB    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KH8PC           Lean Percent EX
     C                     END                             *FI
      * Actual Yield
      * CASE: WRK.Live Weight 1 SUM is Not zero
     C           WUWSNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.Actual Yield EXT USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : WRK.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : WRK.Live Weight 1 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUQKNB    DIV  WUWSNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KIAPC           Actual Yield EX
     C                     END                             *FI
      * Adjusted Yield
      * CASE: WRK.Live Weight 2 SUM is Not zero
     C           WUQLNB    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.Adjusted Yield EXT USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : WRK.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : WRK.Live Weight 2 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUQKNB    DIV  WUQLNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KICPC           Adjusted Yield
     C                     END                             *FI
     C                     Z-ADDWUQENB    $KA0A1           Head Received E
     C                     Z-ADDWUYDSM    $KA2A1           Yard Dead EXT U
     C                     Z-ADDWUVCVW    $KA4A1           Head Condemned
     C                     Z-ADDYL0011    $KBPNZ           Head Identified
     C                     Z-ADDYL0012    $KBRNZ           Head Accepted E
      * Calculate External Percent ID's and Percent Accepted
      * CASE: CUR.Head Total External  6.0 is Entered
     C           $KBONZ    IFNE *ZERO                      *IF
      * Percent Identified 6.2
      * CUR.Percent ID'd Ext 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Identified EXT 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total External  6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $KBPNZ    DIV  $KBONZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KBQNZ           Percent ID'd Ex
      * Percent Accepted 6.2
      * CUR.Percent Accepted EXT 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Accepted EXT 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total External  6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $KBRNZ    DIV  $KBONZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KBSNZ           Percent Accepte
     C                     END                             *FI
     C                     Z-ADDWUHTS3    $KBCA1           Head Accepted E
      * 06/07/04 SLM Replace Sum4,Sum5, Head Count Sum, Head Adds sum
      *              with Sum 4 RPT, Sum 5 RPT, Head Count Sum Rpt,
      *              and Head Adds Sum Rpt.
     C                     Z-ADDWULAA1    $KBEA1           Head Adds EXT U
     C                     Z-ADDWULBA1    $KBGA1           Head Deducted E
     C                     Z-ADDWULCA1    $KBIA1           Head Adjusted E
     C                     Z-ADDWULDA1    $KBKA1           Head PHA Adds E
     C                     Z-ADDYL0004    $KMQA1           Hot Weight Ext
     C                     Z-ADDYL0003    $KMOA1           Live Weight Ext
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * internal
      *================================================================
     C                     Z-ADDYL0013    $KAZA1           Tattoo Count IN
      * Average Lean Percent
      * CASE: LCL.Hot Weight 1 SUM is Not zero
     C           YL0015    IFNE *ZERO                      *IF
      * Compute: Lean %
      * CUR.Lean Percent INT USR =
      *    *COMPUTE (x1 / x2)
      * x1    : LCL.Lean % * Wgt SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : LCL.Hot Weight 1 SUM
     C           YL0014    DIV  YL0015    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KH9PC           Lean Percent IN
     C                     END                             *FI
      * Actual Yield
      * CASE: LCL.Live Weight 1 SUM is Not zero
     C           YL0016    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.Actual Yield INT USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : LCL.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Live Weight 1 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           YL0029    DIV  YL0016    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KIBPC           Actual Yield IN
     C                     END                             *FI
      * Adjusted Yield
      * CASE: LCL.Live Weight 2 SUM is Not zero
     C           YL0017    IFNE *ZERO                      *IF
      * Compute: Yield %
      * CUR.Adjusted Yield INT USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : LCL.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Live Weight 2 SUM
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           YL0029    DIV  YL0017    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $KIDPC           Adjusted Yield
     C                     END                             *FI
     C                     Z-ADDYL0018    $KA1A1           Head Received I
     C                     Z-ADDYL0019    $KA3A1           Yard Dead INT U
     C                     Z-ADDYL0020    $KA5A1           Head Condemned
     C                     Z-ADDYL0030    $KBUNZ           Head Identified
     C                     Z-ADDYL0031    $KBWNZ           Head Accepted I
     C                     Z-ADDYL0024    $KBDA1           Head Accepted I
      * Calculate Percent Accepted INT
      * CASE: CUR.Head Total Internal  6.0 is Entered
     C           $KBTNZ    IFNE *ZERO                      *IF
      * Percent Accepted INT 6.2
      * CUR.Percent Accepted INT 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Accepted INT 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total Internal  6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $KBWNZ    DIV  $KBTNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KBXNZ           Percent Accepte
      * Percent Identified INT
      * CUR.Percent ID'd INT 6.2 =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Head Accepted INT 6.0
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : CUR.Head Total Internal  6.0
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : CON.100
     C           $KBWNZ    DIV  $KBTNZ    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $KBVNZ           Percent ID'd IN
     C                     END                             *FI
      * 06/07/04 SLM Replace Sum4,Sum5, Head Count Sum, Head Adds sum
      *              with Sum 4 RPT, Sum 5 RPT, Head Count Sum Rpt,
      *              and Head Adds Sum Rpt.
     C                     Z-ADDYL0025    $KBFA1           Head Adds INT U
     C                     Z-ADDYL0026    $KBHA1           Head Deducted I
     C                     Z-ADDYL0027    $KBJA1           Head Adjusted I
     C                     Z-ADDYL0028    $KBLA1           Head PHA Adds I
     C                     Z-ADDYL0006    $KMNA1           Live Weight Int
     C                     Z-ADDYL0007    $KMPA1           Hot Weight Int
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1B0DT           TH Kill Date
     C                     MOVEL*LOVAL    A1LIST           TH Schedule Kil
     C                     MOVEL*LOVAL    A1KAST           TH Source Type
     C                     MOVEL*LOVAL    A1CVNB           TH Tattoo Numbe
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Obtain default message file
     C           *NAMVAR   DEFN PKMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field Shift Description USR
     C                     MOVEL*BLANK    WUFSTX 30
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B6HRNB           KV Company Numb
     C                     MOVEL*LOVAL    B6BPDT           KV Kill Date
     C                     MOVEL*LOVAL    B6IRNB           KV TATTOO NUMBE
     C                     MOVEL*LOVAL    B6BONM           KV Buy Order Nu
     C                     MOVEL*LOVAL    B6LDNM           KV Load Number
     C                     MOVEL*LOVAL    B6FPNB           KV Record Numbe
     C                     MOVEL*LOVAL    B6DYST           KV Record Type
     C                     MOVEL*LOVAL    B6DXST           KV Error Code
      * Define work field Tattoo Cnt total      USR
     C                     Z-ADD*ZERO     WUEANB  50
      * Define work field Lean % * Wgt SUM
     C                     Z-ADD*ZERO     WUC6VA 152
      * Define work field Hot Weight 1 SUM
     C                     Z-ADD*ZERO     WUWTNB 111
      * Define work field Live Weight 1 SUM
     C                     Z-ADD*ZERO     WUWSNB 111
      * Define work field Live Weight 2 SUM
     C                     Z-ADD*ZERO     WUQLNB 111
      * Define work field Head Received  SUM
     C                     Z-ADD*ZERO     WUQENB  50
      * Define work field Yard Dead SUM
     C                     Z-ADD*ZERO     WUYDSM  50
      * Define work field TH Head Condemned     SUM
     C                     Z-ADD*ZERO     WUVCVW  50
      * Define work field Head Total Sum4 Rpt
     C                     Z-ADD*ZERO     WULAA1  50
      * Define work field Head Total Sum5 Rpt
     C                     Z-ADD*ZERO     WULBA1  50
      * Define work field Head Count Sum Rpt
     C                     Z-ADD*ZERO     WULCA1  50
      * Define work field Head Adds Sum Rpt
     C                     Z-ADD*ZERO     WULDA1  50
      * Define work field Hot Weight 2 SUM
     C                     Z-ADD*ZERO     WUQKNB 111
      * Define work field Head Total Sum3
     C                     Z-ADD*ZERO     WUHTS3  70
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WB01 155       *Synon (15,5) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local work field TH Avg Live Wgt       USR
     C                     Z-ADD*ZERO     YL0001  51
      * Define local work field TH Avg live weight   USR
     C                     Z-ADD*ZERO     YL0002  51
      * Define local work field Live Weight Ext Sum
     C                     Z-ADD*ZERO     YL0003 111
      * Define local work field Hot Weight Ext Sum
     C                     Z-ADD*ZERO     YL0004 111
      * Define local work field Head Received EXT USR
     C                     Z-ADD*ZERO     YL0005  50
      * Define local work field Live Weight Int Sum
     C                     Z-ADD*ZERO     YL0006 111
      * Define local work field Hot Weight Int Sum
     C                     Z-ADD*ZERO     YL0007 111
      * Define local work field Head Received INT USR
     C                     Z-ADD*ZERO     YL0008  50
      * Define local work field Head Total Internal  6.0
     C                     Z-ADD*ZERO     YL0009  60
      * Define local work field Head Total External  6.0
     C                     Z-ADD*ZERO     YL0010  60
      * Define local work field Head Identified EXT 6.0
     C                     Z-ADD*ZERO     YL0011  60
      * Define local work field Head Accepted EXT 6.0
     C                     Z-ADD*ZERO     YL0012  60
      * Define local work field Tattoo Cnt total      USR
     C                     Z-ADD*ZERO     YL0013  50
      * Define local work field Lean % * Wgt SUM
     C                     Z-ADD*ZERO     YL0014 152
      * Define local work field Hot Weight 1 SUM
     C                     Z-ADD*ZERO     YL0015 111
      * Define local work field Live Weight 1 SUM
     C                     Z-ADD*ZERO     YL0016 111
      * Define local work field Live Weight 2 SUM
     C                     Z-ADD*ZERO     YL0017 111
      * Define local work field Head Received  SUM
     C                     Z-ADD*ZERO     YL0018  50
      * Define local work field Yard Dead SUM
     C                     Z-ADD*ZERO     YL0019  50
      * Define local work field TH Head Condemned     SUM
     C                     Z-ADD*ZERO     YL0020  50
      * Define local work field Head Total SUM
     C                     Z-ADD*ZERO     YL0021  70
      * Define local work field Head Total Sum2
     C                     Z-ADD*ZERO     YL0022  70
      * Define local work field Head Exception SUM
     C                     Z-ADD*ZERO     YL0023  50
      * Define local work field Head Total Sum3
     C                     Z-ADD*ZERO     YL0024  70
      * Define local work field Head Total Sum4 Rpt
     C                     Z-ADD*ZERO     YL0025  50
      * Define local work field Head Total Sum5 Rpt
     C                     Z-ADD*ZERO     YL0026  50
      * Define local work field Head Count Sum Rpt
     C                     Z-ADD*ZERO     YL0027  50
      * Define local work field Head Adds Sum Rpt
     C                     Z-ADD*ZERO     YL0028  50
      * Define local work field Hot Weight 2 SUM
     C                     Z-ADD*ZERO     YL0029 111
      * Define local work field Head Identified INT 6.0
     C                     Z-ADD*ZERO     YL0030  60
      * Define local work field Head Accepted INT 6.0
     C                     Z-ADD*ZERO     YL0031  60
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modification history
     C                     EXSR UASUBR                     Modification hi
      * HPE073
      * NEW Balance to Kill Report
      *   PKDUDTR -- WW Bal to kill
      *   PKGMPFR -- Prt Report
      * HPE034
      * Create a Trucker edit. - Dwight Shepard
      * Purpose:
      * Clone the Trucker report that post and remove
      * all update of vouchers.  Producer the report
      * for the user to sight review before continue on.
      * Modification History
      * Date        Person   Description
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP2EVTX    $ACMP
      * WRK = CON By name
      * LCL = CON By name
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
