     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *****************  RPG PROGRAM HEADING  ************************
      *                                                              *
      * PROGRAM NUMBER..... - VNDACCSW                               *
      *          DATE....... -  3/20/2020                            *
      *          AUTHOR..... - Brad Baden  SDN465   TFS# 16169       *
      *          DESCRIPTION - THIS PROGRAM IS CALLED FROM THE OMS   *
      *                        ACCRUAL SYSTEM             IT IS      *
      *                        USED TO SELECT A VENDOR FROM A        *
      *                        SUBFILE WITHIN A WINDOW.              *
      ****************************************************************
      *  REVISIONS                                                   *
      ****************************************************************
      *                                                              *
      *  3/20/2020 JBB SDN465 - JDE World to JDE Enterprise 1        *
      *                P16169   Copied source VNDACCS from library   *
      *                         JFOODCUST to library E1IDEVGEN and   *
      *                         renamed it to VNDACCSW.              *
      *                                                              *
      ****************************************************************
      /EJECT
      ****************************************************************
      *   F :             FILE SPECIFICATIONS                        *
      ****************************************************************
      /SPACE 2
     FF0101CA   IF   E           K DISK
      * JDE ADDRESS BOOK  (KEY: ABMCU, ABATI, ABALPH)
     FF0116     IF   E           K DISK
      * JDE ADDRESS BOOK - ADDRESSES (KEY: ALAN8 ALEFTB)
     FF0115     IF   E           K DISK
      * JDE ADDRESS BOOK - PHONE #'S (KEY: WPAN8 WPIDLN WPRCK7)
     FVNDDACCS  CF   E             WORKSTN INFDS(WSDS)
     F                                     SFILE(VENDS1:SFLRN)
      * VENDOR SELECTION DISPLAY FILE
      *
      ****************************************************************
      *   I :             INPUT SPECIFICATIONS                        *
      ****************************************************************
      * NAMED HEXADECIMAL CONSTANTS FOR FUNCTION KEYS
      *
     D @F03            C                   CONST(X'33')
     D @F14            C                   CONST(X'B2')
     D @PAGDN          C                   CONST(X'F5')
      *
      * STANDARD CONSTANTS
      *
     D NO              C                   CONST('0')
     D YES             C                   CONST('1')
     D @FOLD           C                   CONST('0')
     D @DROP           C                   CONST('1')
      *
     D WSDS            DS
      *                Identifies the key pressed
     D  KEY                  369    369
      *                Identifies the subfile page rrn
     D  PAGRRN               378    379B 0
      *
      ****************************************************************
      *   C :             CALC SPECIFICATIONS                        *
      ****************************************************************
      *
      *==============================================================*
      * Input/Output Parameter List                                  *
      *==============================================================*
      *
     C     *ENTRY        PLIST
     C                   PARM                    RETRN             7
     C                   PARM                    NUM               8 0
     C                   PARM                    NAME             40
     C                   PARM                    ADDR1            40
     C                   PARM                    ADDR2            40
     C                   PARM                    ADDR3            40
     C                   PARM                    CITY             40
     C                   PARM                    STATE             3
     C                   PARM                    ZIP              12
     C                   PARM                    AREA              6
     C                   PARM                    PHONE            20
     C                   PARM                    FAREA             6
     C                   PARM                    FPHON            20
     C                   PARM                    FAREA2            6
     C                   PARM                    FPHON2           20
     C                   PARM                    TEN99             1
     C                   PARM                    TAXID            16
     C                   PARM                    CNTRY             3
     C                   PARM                    TPSTS             1
      *
      *==============================================================*
      * Reset variables and clear subfile                            *
      *  in case program called again after *INLR = *OFF             *
      *  ensures that program starts again properly                  *
      *==============================================================*
      *
     C                   RESET                   @EXIT
     C                   RESET                   SFMODE
      *
     C                   EXSR      @RESET
      *
      *==============================================================*
      *  PROGRAM MAINLINE                                            *
      *==============================================================*
      *
     C                   EXSR      @LOAD
      *
      * Perform until exit requested using F03
     C     @EXIT         DOUEQ     YES
      *
     C                   WRITE     VENDR1
     C                   WRITE     VENDK1
     C                   EXFMT     VENDC1
      *
     C                   Z-ADD     PAGRRN        SFLPS
      *
      * Determine which subfile mode (drop or fold)
      *   is current, and set DROP or FOLD controlling indicator
      *   so that a new page will display in same mode.
     C     SFMODE        IFEQ      @DROP
     C                   MOVE      *OFF          *IN14
     C                   ELSE
     C                   MOVE      *ON           *IN14
     C                   ENDIF
      *
      * Process response
     C     KEY           CASEQ     @F03          @F03SR                         F03 EXIT
     C     KEY           CASEQ     @PAGDN        @PGDN                          PAGE DOWN
     C                   CAS                     @ENTKY                         ENTER
     C                   ENDCS
      *
     C                   ENDDO
      *
      * End of program
     C                   MOVE      *ON           *INLR
     C                   RETURN
      *
      *==============================================================*
      *  SUBROUTINE SECTION                                          *
      *==============================================================*
      *
      *==============================================================*
      * Load Subfile                                                 *
      *==============================================================*
      *
     C     @LOAD         BEGSR
      *
      * Read a page of records or until EOF
     C     K101R         SETLL     F0101CA
     C                   DO        10
     C     K101L         READE     F0101CA                                99
      *
     C     *IN99         IFEQ      *ON
     C                   LEAVE
     C                   ELSE
      *
      * Move data fields to display fields
     C                   EXSR      @DATA
      *
     C                   ADD       1             SFLRN
     C                   WRITE     VENDS1
     C                   ENDIF
      *
     C                   ENDDO
      *
      * Set endkey values
     C                   EXSR      @ENDKY
      *
      * If not EOF, read one more record to make sure
     C     *IN99         IFEQ      *OFF
     C                   READ      F0101CA                                99
     C                   ENDIF
      *
      * If no records were added to subfile, set error indicators
     C     SFLRN         IFEQ      *ZEROS
     C                   MOVE      *OFF          *IN42
     C                   ELSE
      *
      * Else, set indicators to display subfile
     C                   MOVE      *ON           *IN42
      * Set subfile position to page just added
     C                   Z-ADD     SFLRN         SFLPS
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Move data fields to display fields                           *
      *==============================================================*
      *
     C     @DATA         BEGSR
      *
      * Set up name, tax id, and 1099 code
      *
     C                   MOVEL(P)  ABALPH        DFNAME
     C                   Z-ADD     ABAN8         DFVNDR
     C                   MOVEL     ABTAX         DFTAX
     C                   MOVE      ABTAXC        DF1099
      *
      * Get Address information from Address File
      *
     C     ABAN8         CHAIN     F0116                              50
     C     *IN50         IFEQ      *OFF
      *
      * Set up address and city
      *
     C                   MOVEL(P)  ALCTY1        DFCITY
     C                   MOVEL(P)  ALADD1        DFADR1
     C                   MOVEL(P)  ALADD2        DFADR2
     C                   MOVEL(P)  *BLANKS       DFADR3
      *
      * Set up State, Zip and Country
      *
     C                   MOVE(P)   ALADDS        DFSTCD
     C                   MOVE      ALADDZ        DFADDZ
     C                   MOVE      ALCTR         DFCTR
      *
     C                   ENDIF                                                  50 = OFF
      *
      * Get Phone information from Phone File
      *
     C     ABAN8         SETLL     I0115
     C     *IN51         DOUEQ     *ON
     C     ABAN8         READE     I0115                                  51
     C     *IN51         IFEQ      *OFF
     C     WPPHTP        IFEQ      'F'
      *
      * Set up area code and phone number for fax numbers
      *
     C     WPRCK7        IFEQ      2
     C                   MOVE      WPAR1         DFFAR1
     C                   MOVE      WPPH1         DFFPH1
     C                   ENDIF
     C     WPRCK7        IFEQ      3
     C                   MOVE      WPAR1         DFFAR2
     C                   MOVE      WPPH1         DFFPH2
     C                   ENDIF
      *
      * Set up area code and phone number for regular number
      *
     C                   ELSE
     C                   MOVE      WPAR1         DFAR1
     C                   MOVE      WPPH1         DFPH1
     C                   ENDIF
      *
     C                   ENDIF                                                  51 = OFF
     C                   ENDDO                                                  51 DOUEQ ON
      *
     C                   ENDSR
      *
      *==============================================================*
      * Update end keys and variables for file/subfile               *
      *==============================================================*
      *
     C     @ENDKY        BEGSR
      *
     C                   MOVE      ABALPH        ENDNAM
     C                   MOVE      DFVNDR        ENDVDR
     C                   Z-ADD     SFLRN         ENDRN
      *
     C                   ENDSR
      *
      *==============================================================*
      * Clear/Reset Subfile                                          *
      *==============================================================*
      *
     C     @RESET        BEGSR
      *
      * Clear subfile and reset subfile display indicator
      *
     C                   MOVE      *ON           *IN40
     C                   WRITE     VENDC1
     C                   MOVE      *OFF          *IN40
     C                   MOVE      *OFF          *IN42
      *
      * Reset subfile record number and subfile position fields
     C                   RESET                   SFLRN
     C                   RESET                   ENDRN
     C                   RESET                   SFLPS
      *
     C                   ENDSR
      *
      *==============================================================*
      * Reposition File                                              *
      *==============================================================*
      *
     C     @REPOS        BEGSR
      *
      * Clear subfile
     C                   EXSR      @RESET
      *
      * Reposition file by search value
      *
     C     K101R         SETLL     F0101CA
     C     SFLRN         DOUEQ     10
     C     K101L         READE     F0101CA                                99
      *
     C     *IN99         IFEQ      *ON
     C                   LEAVE
     C                   ELSE
      *
      * Translate search pattern for text field
     C                   MOVEL     'QSYST'       TRNTBL           10
     C                   MOVE      'RNTBL'       TRNTBL
     C                   CALL      'QDCXLATE'
     C                   PARM      40            BUFLEN            5 0          &BUFLEN
     C                   PARM      DFSRCH        BUFFER           20            &BUFFER
     C                   PARM      TRNTBL        TABLE            10            &SBCSTBLN
     C                   PARM      'QSYS'        TLIBR            10            &SBCSTBLL
      *
      * Scan Name field to determine if it contains search value
     C                   CALL      'QCLSCAN'
     C                   PARM                    ABALPH                         &STRING
     C                   PARM      40            STRLEN            3 0          &STRLEN
     C                   PARM      1             STRPOS            3 0          &STRPOS
     C                   PARM                    BUFFER                         &PATTERN
     C                   PARM      20            PATLEN            3 0          &PATLEN
     C                   PARM      '1'           TRNSLT            1            &TRANSLATE
     C                   PARM      '1'           TRIM              1            &TRIM
     C                   PARM      '?'           WILD              1            &WILD
     C                   PARM                    RESULT            3 0          &RESULT
      *
      * If search value is found anywhere within name field, load
      *   record into subfile
     C     RESULT        IFGE      1
      *
      * Move data fields to display fields
     C                   EXSR      @DATA
      *
     C                   ADD       1             SFLRN
     C                   WRITE     VENDS1
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDDO
      *
      * Set endkey values
     C***                  EXSR @ENDKY
      *
      * If not EOF, read one more record to make sure
     C     *IN99         IFEQ      *OFF
     C                   READ      F0101CA                                99
     C                   ENDIF
      *
      * If no records were added to subfile, set error indicators
     C     SFLRN         IFEQ      *ZEROS
     C                   MOVE      *OFF          *IN42
     C                   ELSE
      *
      * Else, set indicators to display subfile
     C                   MOVE      *ON           *IN42
      * Set subfile position to page just added
     C                   Z-ADD     SFLRN         SFLPS
     C                   Z-ADD     SFLRN         ENDRN
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Subfile page down                                            *
      *==============================================================*
      *
     C     @PGDN         BEGSR
      *
     C     *IN99         IFEQ      *OFF
      *
      * Continue with record after the last one read
     C     K101R         SETGT     F0101CA
     C                   Z-ADD     ENDRN         SFLRN
     C                   EXSR      @LOAD
      * Page down beyond end of subfile
     C                   ELSE
     C                   MOVE      *ON           *IN60
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Process enter key after subfile display                      *
      *==============================================================*
      *
     C     @ENTKY        BEGSR
      *
      * User request position to new name
     C     DFSRCH        IFNE      *BLANKS
     C                   MOVE      *BLANKS       ENDNAM
     C                   EXSR      @REPOS
      *
      * or process subfile changed records
     C                   ELSE
     C                   EXSR      @SFLRD
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Read changed records in subfile to check for selection       *
      *==============================================================*
      *
     C     @SFLRD        BEGSR
      *
      * Did user make a selection?
     C                   READC     VENDS1                                 98
      *
      * If user made no selection,
     C     *IN98         IFEQ      *ON
      * reset name to blanks and reload subfile
     C                   MOVE      *BLANKS       ENDNAM
     C                   EXSR      @RESET
     C                   EXSR      @LOAD
     C                   ENDIF
      *
     C     *IN98         DOWEQ     *OFF
      *
      * If user made selection,
      *   initialize output variable with user selection
      *   and force end of program.
     C     DFSEL         IFEQ      '1'
     C                   MOVE      *BLANKS       RETRN             7
     C                   Z-ADD     DFVNDR        NUM               8 0
     C                   MOVEL(P)  DFNAME        NAME             40
     C                   MOVEL(P)  DFADR1        ADDR1            40
     C                   MOVEL(P)  DFADR2        ADDR2            40
     C                   MOVEL(P)  DFADR3        ADDR3            40
     C                   MOVEL(P)  DFCITY        CITY             40
     C                   MOVEL(P)  DFSTCD        STATE             3
     C                   MOVEL(P)  DFADDZ        ZIP              12
     C                   MOVEL(P)  DFAR1         AREA              6
     C                   MOVEL(P)  DFPH1         PHONE            20
     C                   MOVEL(P)  DFFAR1        FAREA             6
     C                   MOVEL(P)  DFFPH1        FPHON            20
     C                   MOVEL(P)  DFFAR2        FAREA2            6
     C                   MOVEL(P)  DFFPH2        FPHON2           20
     C                   MOVEL(P)  DFCTR         CNTRY
      *
     C     DF1099        IFEQ      'P'
     C                   MOVE      'Y'           TEN99
     C                   ELSE                                                   50 = ON
     C                   MOVE      'N'           TEN99
     C                   ENDIF
      *
     C                   MOVEL(P)  DFTAX         TAXID            16
     C                   MOVE      YES           @EXIT
     C                   LEAVE
     C                   ENDIF
      *
     C                   READC     VENDS1                                 98
     C                   ENDDO
      *
     C                   ENDSR
      *
      *==============================================================*
      * F03 key subroutine                                           *
      *==============================================================*
      *
     C     @F03SR        BEGSR
      *
      * set exit program flag
     C                   MOVE      YES           @EXIT
     C                   MOVEL     'ERR'         RETRN
      *
     C                   ENDSR
      *
      *==============================================================*
      * Initialization Subroutine                                    *
      *==============================================================*
      *
     C     *INZSR        BEGSR
      *
     C     *LIKE         DEFINE    ABALPH        ENDNAM
     C     *LIKE         DEFINE    DFVNDR        ENDVDR
      *
      * Create program exit flag and set value to NO
     C                   MOVE      NO            @EXIT             1
      *
      * Miscellaneous subfile program variables
     C                   Z-ADD     0             SFLRN             4 0
     C                   Z-ADD     0             ENDRN             4 0
     C                   Z-ADD     1             SFLPS
      *
      * Set MODE to @DROP (Truncated) for first load of subfile
      *   SFLMODE(&SFMODE) in DDS
     C                   MOVE      @DROP         SFMODE
      *
      * Retrieve security cost center
      *
     C                   MOVE      '301'         CSTCTR           12            SEC COST CENTER
      *
      * Set up search type
     C                   MOVE      'V  '         STYPE             3
      *
      * Complete file key
     C     FILKEY        KLIST
     C                   KFLD                    NAME
     C                   KFLD                    DFVNDR
      *
      * End key for repositioning subfile
     C     K101R         KLIST
     C                   KFLD                    CSTCTR
     C                   KFLD                    STYPE
     C                   KFLD                    ENDNAM
      *
      * Key for loading subfile
     C     K101L         KLIST
     C                   KFLD                    CSTCTR
     C                   KFLD                    STYPE
      *
     C                   ENDSR
