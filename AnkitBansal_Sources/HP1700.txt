      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1700
      * TITLE:       Revise Budget Template
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/30/04
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete Budget Template Header
      *           records.
      *
      *           This program is called from HP4700 - Work with Budget Templates.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/17/04  LeAnne Fedor
      *           We now wish to use the alphanumeric 'size' field as a numeric field so
      *           we can calculate 'per head' stuff---the users are apparently keying
      *           a value representing 'head' into this 'size' field.
      *
      *           In an attempt to facilitate this 'numeric' logic, I am adding
      *           left-justify logic to the entry of the 'size' value. That way, all/any
      *           blanks will be at the end of the value.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1700   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp101    if   e           k disk
      *    Type of farm
      *
      *
     Fhsp183    if   e           k disk
      *    Creation schedule
      *
      *
     Fhsp184    if   e           k disk
      *    Budget availability
      *
      *
     Fhsp185    uf a e           k disk
      *    Budget template header
      *
      *
     Fhsp186    if   e           k disk
      *    Budget template detail
      *
      *
     Fhsp187    if   e           k disk
      *    Farm/budget templates
      *
      *
     Fhsl188b   if   e           k disk
      *    Farm budget header
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Control fileds
      *
     D farmbgfl        s              1     inz('N')
      *
      *
      * Parm fields
      *
     D xxonly0         s              1
     D xxaist          s                   like(d1aist)
     D xxbacd          s                   like(d1bacd)
     D xxbads          s                   like(d1bads)
     D xxcscd          s                   like(d1cscd)
     D xxcsds          s                   like(d1csds)
     D xxppcd          s                   like(d1ppcd)
     D xxppds          s                   like(d1ppds)
     D xxtfcd          s                   like(d1tfcd)
     D xxtfds          s                   like(d1tfds)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear fields on display panel if creating
      *
     C                   select
     C                   when      mode = create
     C                   move      *blank        d1btcd
     C                   move      *blank        d1btds
     C                   move      *blank        d1bacd
     C                   move      *blank        d1bads
     C                   move      *blank        d1cscd
     C                   move      *blank        d1csds
     C                   z-add     0             d1btwk
     C                   move      *blank        d1ppcd
     C                   move      *blank        d1ppds
     C                   move      *blank        d1tfcd
     C                   move      *blank        d1tfds
     C                   z-add     0             d1cell
     C                   move      *blank        d1size
     C                   move      *blank        d1aist
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   when      mode = revise or mode = delete
     C     d1btcd        chain(n)  hsp185                             92
     C                   if        *in92 = *off                                 If found
     C                   move      thbtds        d1btds
     C                   move      thbacd        d1bacd
     C                   move      thcscd        d1cscd
     C                   z-add     thbtwk        d1btwk
     C                   move      thppcd        d1ppcd
     C                   move      thtfcd        d1tfcd
     C                   z-add     thcell        d1cell
     C                   movel     thsize        d1size
     C                   move      thaist        d1aist
      * Get descriptions
     C                   exsr      $desc
     C                   else
      *
      * Budget Template record was not found
      *
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
     C                   if        farmbgfl = yes
     C                   seton                                        64
     C                   endif
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1700k1
     C                   write     hp1700ec
     C                   exfmt     hp1700r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
      *
     C                   when      *in13 = *on                                  F13-remove
     C                   call      'HP3703'
     C                   parm                    d1btcd
     C                   parm      'N'           xxonly0
     C                   parm      *blank        rtncd
     C                   eval      routne = scrn1
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * If creating a new record, validate:
      *   1) budget template code
      *
     C                   if        action = create
     C                   exsr      $btcd
     C                   endif
      *
      * Always validate:
      *   1) budget template description
      *   2) creation schedule code
      *   3) budget template weeks
      *   4) budget availability code
      *   5) production phase code
      *   6) type of farm
      *   7) cell
      *   8) size
      *   9) active/inactive status
      *
     C                   exsr      $btds
     C                   exsr      $cscd
     C                   exsr      $btwk
     C                   exsr      $bacd
     C                   exsr      $ppcd
     C                   exsr      $tfcd
     C                   exsr      $cell
     C                   exsr      $size
     C                   exsr      $aist
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the write/update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve various descriptions to display
      *----------------------------------------------------------------
      *
     C     $desc         begsr
      *
      * Budget Availablity
      *
     C                   if        d1bacd <> *blank
     C     d1bacd        chain     hsp184                             92
     C                   if        *in92 = *off
     C                   move      babads        d1bads
     C                   endif
     C                   endif
      *
      * Creation Schedule
      *
     C                   if        d1cscd <> *blank
     C     d1cscd        chain     hsp183                             92
     C                   if        *in92 = *off
     C                   move      cscsds        d1csds
     C                   endif
     C                   endif
      *
      * Production Phase
      *
     C                   if        d1ppcd <> *blank
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off
     C                   move      ppppds        d1ppds
     C                   endif
     C                   endif
      *
      * Type of Farm
      *
     C                   if        d1tfcd <> *blank
     C     d1tfcd        chain     hsp101                             92
     C                   if        *in92 = *off
     C                   move      tftfds        d1tfds
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Budget Template Code
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) cannot already exist in the master file
      *
      *
     C     $btcd         begsr
      *
      * Eliminate leading spaces
      *
     C                   eval      d1btcd = %triml(d1btcd)
      *
     C                   select
     C                   when      d1btcd = *blank
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1btcd        chain(n)  hsp185                             92
     C                   if        *in92 = *off                                 If found
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04700'
     C                   clear                   mgw
     C                   movea     d1btcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Budget Template Weeks
      *---------------------------------------------------------------
      *
     C     $btwk         begsr
      *
     C                   select
     C                   when      d1btwk  < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
      *
     C                   when      d1btwk = 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Production Phase
      *----------------------------------------------------------------
      *
     C     $ppcd         begsr
      *
     C                   move      *blank        d1ppds
      *
     C                   select
     C                   when      d1ppcd <> *blank
     C     d1ppcd        chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1ppds
      *
     C                   if        d1cscd = 'R' and d1ppcd = 'BGF  '
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04737'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif
      *
     C                   else
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ppcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Type of Farm
      *----------------------------------------------------------------
      *
     C     $tfcd         begsr
      *
     C                   move      *blank        d1tfds
      *
     C                   if        d1tfcd <> *blank                             If type of farm
     C     d1tfcd        chain     hsp101                             92
     C                   if        *in92 = *off                                 If hit
     C                   movel     tftfds        d1tfds
     C                   else
      *
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01167'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1tfcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endif                                                  If type of farm
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate cell
      *---------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   if        d1cell  < 0
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Size
      *---------------------------------------------------------------
      *
     C     $size         begsr
      *
      * As far as I know, there are no validations for 'Size'. If we come
      * up with any validations, the error indicator defined in the DDS for this
      * field is Indicator 39.
      *
      * As of November, 2004, we are now going to use this alphanumeric field as a
      * numeric field so we can calculate 'per head' stuff---the users are apparently keying
      * a value representing 'head' into this 'size' field.
      *
      * In an attempt to facilitate this 'numeric' logic, I am adding
      * left-justify logic to the entry of the 'size' value. That way, all/any
      * blanks will be at the end of the value.
      *
     C                   eval      d1size = %triml(d1size)
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate status
      *---------------------------------------------------------------
      *
     C     $aist         begsr
      *
     C                   select
     C                   when      d1aist = *blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C
     C                   when      d1aist <> 'A' and d1aist <> 'I'
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09105'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Budget Template description
      *---------------------------------------------------------------
      *
     C     $btds         begsr
      *
     C                   if        d1btds = *blank
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   endif
     C
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Budget Availability code
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be a valid code
      *  3) must be Standard when the Creation Schedule is Rotational
      *
     C     $bacd         begsr
      *
     C                   move      *blank        d1bads
      *
      *
     C                   select
     C                   when      d1cscd = 'R' and d1bacd <> 'S'
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04734'
     C                   endif
      *
     C                   when      d1bacd = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1bacd        chain     hsp184                             92
     C                   if        *in92 = *off                                 If hit
     C                   move      babads        d1bads
     C                   else
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04705'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1bacd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Creation Schedule code
      *---------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be a valid code
      *
     C     $cscd         begsr
      *
     C                   move      *blank        d1csds
      *
     C                   select
     C                   when      d1cscd = *blank
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1cscd        chain     hsp183                             92
     C                   if        *in92 = *off                                 If hit
     C                   move      cscsds        d1csds
     C                   else
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS04706'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1cscd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      *  F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Budget Availability code
      *
     C                   select
     C                   when      fld = 'D1BACD'
     C                   call      'HP5035'
     C                   parm      *blank        xxbacd
     C                   parm      *blank        xxbads
     C                   seton                                        51
     C                   if        xxbacd <> *blank
     C                   movel     xxbacd        d1bacd
     C                   movel     xxbads        d1bads
     C                   endif
      *
      * Creation Schedule Code
      *
     C                   when      fld = 'D1CSCD'
     C                   call      'HP5034'
     C                   parm      *blank        xxcscd
     C                   parm      *blank        xxcsds
     C                   seton                                        52
     C                   if        xxcscd <> *blank
     C                   movel     xxcscd        d1cscd
     C                   movel     xxcsds        d1csds
     C                   endif
      *
      * Production phase
      *
     C                   when      fld = 'D1PPCD'
     C                   if        d1cscd = 'R'                                 If Rotational
     C                   call      'HP596'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   else
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   endif                                                  If Rotational
     C                   seton                                        53
     C                   if        xxppcd <> *blank
     C                   movel     xxppcd        d1ppcd
     C                   movel     xxppds        d1ppds
     C                   endif
      *
      * Type of farm
     C                   when      fld = 'D1TFCD'
     C                   call      'HP5018'
     C                   parm      *blank        xxtfcd
     C                   parm      *blank        xxtfds
     C                   seton                                        56
     C                   if        xxtfcd <> *blank
     C                   movel     xxtfcd        d1tfcd
     C                   movel     xxtfds        d1tfds
     C                   endif
      *
      *
      * Active/inactive status
      *
     C                   when      fld = 'D1AIST'
     C                   call      'HP512'
     C                   parm      *blank        xxaist
     C                   seton                                        50
     C                   if        xxaist <> *blank
     C                   move      xxaist        d1aist
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting,
      *   perform deletion integrity checks
      *
     C                   if        action = delete                              If delete
     C                   exsr      $dltck
     C                   endif                                                  If delete
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
      *
     C     d1btcd        chain     hsp185                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   delete    threc
     C                   other
      *
      * Move DSPF fields to database file fields
      *
     C                   move      d1btcd        thbtcd
     C                   move      d1btds        thbtds
     C                   move      d1bacd        thbacd
     C                   move      d1cscd        thcscd
     C                   z-add     d1btwk        thbtwk
     C                   move      d1ppcd        thppcd
     C                   move      d1tfcd        thtfcd
     C                   z-add     d1cell        thcell
     C                   movel     d1size        thsize
     C                   move      d1aist        thaist
      *
     C                   if        action = create                              If create
     C                   write     threc
     C                   else
     C                   update    threc
     C                   endif                                                  If create
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   select
     C                   when      mode = create                                Wh creating
     C                   if        error = 0
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09040'
     C                   eval      routne = set1
     c                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Deletion integrity checks
      *----------------------------------------------------------------
      *
     C     $dltck        begsr
      *
      * Template cannot exist in the Farm Budget Header file
      *
     C     d1btcd        chain     hsl188b                            92
     C                   if        *in92 = *off                                 If budgets
     C                   if        error < maxmsg
     C                   add       1             error
      *
     C                   select
     C                   when      d1aist = 'A'
     C                   eval      mgid(e) = 'HS04701'
     C                   when      d1aist = 'I'
     C                   eval      mgid(e) = 'HS04739'
     C                   endsl
      *
     C                   endif
     C                   endif                                                  If budgets
      *
      * Template cannot exist in the Template/Farm Links file.
      *
     C     d1btcd        chain     hsp187                             92
     C                   if        *in92 = *off                                 If farm links
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04702'
     C                   endif
     C                   endif                                                  If farm links
      *
      * No Budget Template Detail records can exist for this template.
      *
     C     d1btcd        chain     hsp186                             92
     C                   if        *in92 = *off                                 If detail recs
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04715'
     C                   endif
     C                   endif                                                  If detail recs
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    d1btcd
     C                   parm                    rtncd
      *
     C                   eval      action = mode
      *
      * Determine if this Budget Template has any Farm Budgets. If so,
      * set a flag to protect certain fields.
      *
     C     d1btcd        chain     hsl188b                            92
     C                   if        *in92 = *off
     C                   move      yes           farmbgfl
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
