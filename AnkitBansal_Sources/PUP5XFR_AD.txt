// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUP5XFR
// ?Date: 14.08.2025 Time: 03:51:05
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Bypass Sat/Sun & Holidays. Does NOT Check Production Day Sts.
// Call program Rtv Prev Business Day2 XF.
CALL PROGRAM(Rtv Prev Business Day2 XF) ('PUP4XFR');
PARAMETER(LCL.Production_Date_Prev_USR);

// Call program RTV System Value Num   XF.
CALL PROGRAM(RTV System Value Num   XF) ('PBE0XFR');
PARAMETER('CMDMKTDAY');
PARAMETER(LCL.Number_of_Days);

CASE;

// IF LCL.Number of Days is EQ 2
IF LCL.Number_of_Days = 2;

// LCL.Company Number = CND.Guymon
LCL.Company_Number = 360;

EXECUTE FUNCTION(Rtv Prev Business Day  RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC2068592;
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Production_Date_Prev_USR);
PARAMETER(LCL.Production_Date_Prev_USR);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Post to G/L Date EQ PAR.Post to G/L Date
 IF DB1.Post_to_G_L_Date = PAR.Post_to_G_L_Date;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Production Day Status is yes
 IF DB1.Production_Day_Status = 'Y';

 CASE;

 // IF DB1.Day of Week is Sat/Sun
 IF DB1.Day_of_Week = '7'/'1';

 //?skip sat/sun
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Production Date Prev USR = DB1.Post to G/L Date
 PAR.Production_Date_Prev_USR = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

 ENDIF;

 ENDIF;

}


ENDIF;

//?Access Path Selects Unprocessed Records Only.
EXECUTE FUNCTION(UPD Comdty Mkt Prc IntfRT) TYPE(RTVOBJ) FILE(PUBZCPP)          AC2183049;
PARAMETER(LCL.Production_Date_Prev_USR);
{
 //?USER: Initialize routine

 // PAR.Send Email USR = CND.No
 PAR.Send_Email_USR = 'N';

 // LCL.First Time Through USR = CND.Yes
 LCL.First_Time_Through_USR = 'Y';

 // Call program RTV System Date/Time   UP.
 CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
 PARAMETER(LCL.System_Date_Nbr_USR);
 PARAMETER(NLL.Current_System_Time);

 // LCL.System Date USR = LCL.System Date Nbr USR
 LCL.System_Date_USR = LCL.System_Date_Nbr_USR;

 // PAR.Commodity Market Save USR = CON.*BLANK
 PAR.Commodity_Market_Save_USR = *BLANK;

 EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
 PARAMETER('CMDMKTDTE');
 PARAMETER(LCL.Bypass_Market_Date_Chk_U);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?USER: Process Data record

 //?First Time Thru, Save Commodity Market Code.
 CASE;

 // IF LCL.First Time Through USR is Yes
 IF LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // LCL.Commodity Market Code = DB1.Commodity Market Code
 LCL.Commodity_Market_Code = DB1.Commodity_Market_Code;

 // PAR.Commodity Market Save USR = DB1.Commodity Market Code
 PAR.Commodity_Market_Save_USR = DB1.Commodity_Market_Code;

 ENDIF;

 //?Break on Commodity Market - send email
 CASE;

 // IF DB1.Commodity Market Code NE PAR.Commodity Market Save USR
 IF DB1.Commodity_Market_Code <> PAR.Commodity_Market_Save_USR;

 CASE;

 // IF PAR.Send Email USR is Yes
 IF PAR.Send_Email_USR = 'Y';

 //?Format Email Subject & Message.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Commodity Mrkt Cde=Blank Means None Processed but has Error.
 CASE;

 // IF LCL.Commodity Market Code is Not Entered
 IF LCL.Commodity_Market_Code = *BLANK;

 //?Use Last Commodity Market Code in Error.
 // LCL.Commodity Market Code = LCL.Commodity Market Code USR
 LCL.Commodity_Market_Code = LCL.Commodity_Market_Code_USR;

 ENDIF;

 // LCL.Email Subject USR = CONCAT(CON.OMS Commodity Market Pric,CON.es Updated,CON.*ZERO)
 LCL.Email_Subject_USR = 'OMS Commodity Market Pric' + 'es Updated' (*ZERO);

 // LCL.Email Message USR = CONCAT(CON.OMS Commodity Market,CON.Prices Updated For Market,CON.1)
 LCL.Email_Message_USR = 'OMS Commodity Market' + 'Prices Updated For Market' (1);

 // LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.Code:,CON.1)
 LCL.Email_Message_USR = LCL.Email_Message_USR + 'Code:' (1);

 // LCL.Email Message USR = CONCAT(LCL.Email Message USR,PAR.Commodity Market Save USR,CON.1)
 LCL.Email_Message_USR = LCL.Email_Message_USR + PAR.Commodity_Market_Save_USR (1);

 // Call program RTV Data Libraries     XF.
 CALL PROGRAM(RTV Data Libraries     XF) ('CAQXXFR');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(LCL.@Library_List_Code);

 //?If Not PROD Library Append 'TEST' to Email Subject.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.- TEST,CON.2)
 LCL.Email_Message_USR = LCL.Email_Message_USR + '- TEST' (2);

 ENDIF;

 ENDIF;

 // Call program RTV System Value Alpha XF.
 CALL PROGRAM(RTV System Value Alpha XF) ('PPJXXFR');
 PARAMETER('CMDMKTPRC');
 PARAMETER(LCL.ESEND_Distribution_List_U);

 // Call program Exc ESNDMAIL Generic  CL.
 CALL PROGRAM(Exc ESNDMAIL Generic  CL) ('PUE8UPC');
 PARAMETER(LCL.ESEND_Distribution_List_U);
 PARAMETER(LCL.Email_Subject_USR);
 PARAMETER(LCL.Email_Message_USR);

 ENDIF;

 // PAR.Send Email USR = CND.No
 PAR.Send_Email_USR = 'N';

 // PAR.Commodity Market Save USR = DB1.Commodity Market Code
 PAR.Commodity_Market_Save_USR = DB1.Commodity_Market_Code;

 ENDIF;

 //?Mark as Error If Market Dte>Current Dte or Market Dte<Prev Bus Date.
 CASE;

 // IF DB1.Market Price Date GT LCL.System Date USR
 IF ( DB1.Market_Price_Date > LCL.System_Date_USR;

 // OR DB1.Market Price Date LT PAR.Production Date Prev USR
 OR DB1.Market_Price_Date < PAR.Production_Date_Prev_USR );

 // AND LCL.Bypass Market Date Chk U is No
 AND LCL.Bypass_Market_Date_Chk_U = 'N';

 EXECUTE FUNCTION(Chg Comdty Mkt Prc IntfCH) TYPE(CHGOBJ) FILE(PUBZCPP)          AC2182841;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
 PARAMETER(DB1.Commodity_Market_Price);
 PARAMETER(DB1.Projected_Market_Price);
 PARAMETER(DB1.ETL_Record_Status);
 PARAMETER(2);
 PARAMETER('CMDDTE');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Change Stamp      IF) TYPE(EXCINTFUN)                      AC2182822;
  PARAMETER(DB1.ETL_Change_Date);
  PARAMETER(DB1.ETL_Change_time);
  {
   //?Execute internal function

   // Call program RTV System Date/Time   UP.
   CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
   PARAMETER(LCL.System_Date_Nbr_USR);
   PARAMETER(LCL.System_Time_USR);

   // LCL.USR Internal D8# YYYYMMDD = LCL.System Date Nbr USR
   LCL.USR_Internal_D8#_YYYYMMDD = LCL.System_Date_Nbr_USR;

   // PAR.ETL Change Date = LCL.USR Internal D8# YYYYMMDD
   PAR.ETL_Change_Date = LCL.USR_Internal_D8#_YYYYMMDD;

   // PAR.ETL Change time = LCL.System Time USR
   PAR.ETL_Change_time = LCL.System_Time_USR;

  }

 }

 // LCL.Commodity Market Code USR = DB1.Commodity Market Code
 LCL.Commodity_Market_Code_USR = DB1.Commodity_Market_Code;

 // PAR.Send Email USR = CND.Yes
 PAR.Send_Email_USR = 'Y';

 ENDIF;

 //?Select Market Date=Current Date or Prev Business Work Date.
 CASE;

 // IF DB1.Market Price Date EQ PAR.Production Date Prev USR
 IF ( DB1.Market_Price_Date = PAR.Production_Date_Prev_USR;

 // OR DB1.Market Price Date EQ LCL.System Date USR
 OR DB1.Market_Price_Date = LCL.System_Date_USR );

 // OR LCL.Bypass Market Date Chk U is Yes
 OR LCL.Bypass_Market_Date_Chk_U = 'Y';

 EXECUTE FUNCTION(UPD Comdty Mkt Prc IntfRT) TYPE(RTVOBJ) FILE(OMF0CPP)          AC2183136;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
 PARAMETER(DB1.Commodity_Market_Price);
 PARAMETER(DB1.Projected_Market_Price);
 PARAMETER(LCL.ETL_Process_Status);
 PARAMETER(LCL.ETL_Error_Reason);
 PARAMETER(PAR.Record_Processed_Usr);
 PARAMETER(LCL.Same_Price_Update_Sts_USR);
 {
  //?USER: Initialize routine

  // LCL.Update Record USR = CND.No
  LCL.Update_Record_USR = 'N';

  // PAR.ETL Process Status = CND.Not Processed
  PAR.ETL_Process_Status = *ZERO;

  // PAR.ETL Error Reason = CND.No Error
  PAR.ETL_Error_Reason = *BLANK;

  // PAR.Record Processed Usr = CND.No
  PAR.Record_Processed_Usr = 'N';

  // PAR.Same Price-Update Sts USR = CND.No
  PAR.Same_Price_Update_Sts_USR = 'N';

  //?USER: Processing if Data record not found

  //?Create Commodity Mrkt Price (OMF0CPP) Record If Pass Validations.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Val for Existence      RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC2183153;
  PARAMETER(PAR.Commodity_Market_Code);
  //?Record Exist?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  EXECUTE FUNCTION(Val for Existence      RT) TYPE(RTVOBJ) FILE(OMFZREP)          AC2183154;
  PARAMETER(PAR.Commodity_Price_Group);
  //?Record Exist?
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // PAR.Record Processed Usr = CND.Yes
  PAR.Record_Processed_Usr = 'Y';

  EXECUTE FUNCTION(CRT Commodity Mrkt Prc CR) TYPE(CRTOBJ) FILE(OMF0CPP)          AC2183155;
  PARAMETER(PAR.Commodity_Market_Code);
  PARAMETER(PAR.Commodity_Price_Group);
  PARAMETER(PAR.Market_Price_Date);
  PARAMETER(PAR.Commodity_Market_Price);
  PARAMETER(PAR.Projected_Market_Price);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER('A');
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time StampETL IF) TYPE(EXCINTFUN)                     AC2185747;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // Execute function Get System Date/Time  US.
    EXECUTE FUNCTION(Get System Date/Time  US) TYPE(EXCUSRSRC) ('PUPFUFR');
    PARAMETER(LCL.System_Date_Nbr_USR);
    PARAMETER(LCL.System_Time_USR);
    {
     * Get System Date & Time
     C                     MOVE *DATE     #OC0NZ           CCYYMMDD
     C                     TIME           #OENTM           HHMMSS
    }

    // LCL.USR Internal D8# YYYYMMDD = LCL.System Date Nbr USR
    LCL.USR_Internal_D8#_YYYYMMDD = LCL.System_Date_Nbr_USR;

    // PAR.Job Date = LCL.USR Internal D8# YYYYMMDD
    PAR.Job_Date = LCL.USR_Internal_D8#_YYYYMMDD;

    // PAR.Job Time = LCL.System Time USR
    PAR.Job_Time = LCL.System_Time_USR;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

   }

  }

  //?Record Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.ETL Process Status = CND.Error/Void
  PAR.ETL_Process_Status = 2;

  // PAR.ETL Error Reason = CND.Commodity Group
  PAR.ETL_Error_Reason = 'CMDGRP';

  ENDIF;

  //?Record Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.ETL Process Status = CND.Error/Void
  PAR.ETL_Process_Status = 2;

  // PAR.ETL Error Reason = CND.Commodity Markets
  PAR.ETL_Error_Reason = 'CMDMKT';

  ENDIF;

  ENDIF;

  //?USER: Process Data record

  //?Save Original Prices.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Commodity Market Price = DB1.Commodity Market Price
  LCL.Commodity_Market_Price = DB1.Commodity_Market_Price;

  // LCL.Projected Market Price = DB1.Projected Market Price
  LCL.Projected_Market_Price = DB1.Projected_Market_Price;

  ENDIF;

  //?Compare Prices for Update.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF DB1.Commodity Market Price NE PAR.Commodity Market Price
  IF DB1.Commodity_Market_Price <> PAR.Commodity_Market_Price;

  // LCL.Commodity Market Price = PAR.Commodity Market Price
  LCL.Commodity_Market_Price = PAR.Commodity_Market_Price;

  // LCL.Update Record USR = CND.Yes
  LCL.Update_Record_USR = 'Y';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Same Price-Update Sts USR = CND.Yes
  PAR.Same_Price_Update_Sts_USR = 'Y';

  ENDIF;

  CASE;

  // IF DB1.Projected Market Price NE PAR.Projected Market Price
  IF DB1.Projected_Market_Price <> PAR.Projected_Market_Price;

  // LCL.Projected Market Price = PAR.Projected Market Price
  LCL.Projected_Market_Price = PAR.Projected_Market_Price;

  // LCL.Update Record USR = CND.Yes
  LCL.Update_Record_USR = 'Y';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Same Price-Update Sts USR = CND.Yes
  PAR.Same_Price_Update_Sts_USR = 'Y';

  ENDIF;

  //?Prices are Different, Reset Same Price-Update Sts=N.
  CASE;

  // IF LCL.Update Record USR is Yes
  IF LCL.Update_Record_USR = 'Y';

  // PAR.Same Price-Update Sts USR = CND.No
  PAR.Same_Price_Update_Sts_USR = 'N';

  ENDIF;

  ENDIF;

  //?Update Price.
  CASE;

  // IF LCL.Update Record USR is Yes
  IF LCL.Update_Record_USR = 'Y';

  // PAR.Record Processed Usr = CND.Yes
  PAR.Record_Processed_Usr = 'Y';

  EXECUTE FUNCTION(CHG Commodity Mrkt Prc CH) TYPE(CHGOBJ) FILE(OMF0CPP)          AC2183137;
  PARAMETER(DB1.Commodity_Market_Code);
  PARAMETER(DB1.Commodity_Price_Group);
  PARAMETER(DB1.Market_Price_Date);
  PARAMETER(LCL.Commodity_Market_Price);
  PARAMETER(LCL.Projected_Market_Price);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Date/Time StampETL IF) TYPE(EXCINTFUN)                     AC2185747;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // Execute function Get System Date/Time  US.
    EXECUTE FUNCTION(Get System Date/Time  US) TYPE(EXCUSRSRC) ('PUPFUFR');
    PARAMETER(LCL.System_Date_Nbr_USR);
    PARAMETER(LCL.System_Time_USR);
    {
     * Get System Date & Time
     C                     MOVE *DATE     #OC0NZ           CCYYMMDD
     C                     TIME           #OENTM           HHMMSS
    }

    // LCL.USR Internal D8# YYYYMMDD = LCL.System Date Nbr USR
    LCL.USR_Internal_D8#_YYYYMMDD = LCL.System_Date_Nbr_USR;

    // PAR.Job Date = LCL.USR Internal D8# YYYYMMDD
    PAR.Job_Date = LCL.USR_Internal_D8#_YYYYMMDD;

    // PAR.Job Time = LCL.System Time USR
    PAR.Job_Time = LCL.System_Time_USR;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

   }

  }

  ENDIF;

 }

 //?PROCESS: Call PDP3XFR for Price Audit & Update Interface as Processed.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Call PDP3XFR for Price Audit & Update Interface as Processed.
 CASE;

 // IF PAR.Record Processed Usr is Yes
 IF PAR.Record_Processed_Usr = 'Y';

 // Call program UPD Prc Ad Mkt Prc ADD XF.
 CALL PROGRAM(UPD Prc Ad Mkt Prc ADD XF) ('PDP3XFR');
 PARAMETER('OMF0CPP');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
 PARAMETER('N');
 PARAMETER('Y');
 PARAMETER('N');
 PARAMETER('N');

 EXECUTE FUNCTION(Chg Comdty Mkt Prc IntfCH) TYPE(CHGOBJ) FILE(PUBZCPP)          AC2182841;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
 PARAMETER(DB1.Commodity_Market_Price);
 PARAMETER(DB1.Projected_Market_Price);
 PARAMETER(DB1.ETL_Record_Status);
 PARAMETER(1);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Change Stamp      IF) TYPE(EXCINTFUN)                      AC2182822;
  PARAMETER(DB1.ETL_Change_Date);
  PARAMETER(DB1.ETL_Change_time);
  {
   //?Execute internal function

   // Call program RTV System Date/Time   UP.
   CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
   PARAMETER(LCL.System_Date_Nbr_USR);
   PARAMETER(LCL.System_Time_USR);

   // LCL.USR Internal D8# YYYYMMDD = LCL.System Date Nbr USR
   LCL.USR_Internal_D8#_YYYYMMDD = LCL.System_Date_Nbr_USR;

   // PAR.ETL Change Date = LCL.USR Internal D8# YYYYMMDD
   PAR.ETL_Change_Date = LCL.USR_Internal_D8#_YYYYMMDD;

   // PAR.ETL Change time = LCL.System Time USR
   PAR.ETL_Change_time = LCL.System_Time_USR;

  }

 }

 // PAR.Send Email USR = CND.Yes
 PAR.Send_Email_USR = 'Y';

 ENDIF;

 //?Update Interface Process Status if Same Price.
 CASE;

 // IF LCL.Same Price-Update Sts USR is Yes
 IF LCL.Same_Price_Update_Sts_USR = 'Y';

 EXECUTE FUNCTION(Chg Comdty Mkt Prc IntfCH) TYPE(CHGOBJ) FILE(PUBZCPP)          AC2182841;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
 PARAMETER(DB1.Commodity_Market_Price);
 PARAMETER(DB1.Projected_Market_Price);
 PARAMETER(DB1.ETL_Record_Status);
 PARAMETER(1);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Change Stamp      IF) TYPE(EXCINTFUN)                      AC2182822;
  PARAMETER(DB1.ETL_Change_Date);
  PARAMETER(DB1.ETL_Change_time);
  {
   //?Execute internal function

   // Call program RTV System Date/Time   UP.
   CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
   PARAMETER(LCL.System_Date_Nbr_USR);
   PARAMETER(LCL.System_Time_USR);

   // LCL.USR Internal D8# YYYYMMDD = LCL.System Date Nbr USR
   LCL.USR_Internal_D8#_YYYYMMDD = LCL.System_Date_Nbr_USR;

   // PAR.ETL Change Date = LCL.USR Internal D8# YYYYMMDD
   PAR.ETL_Change_Date = LCL.USR_Internal_D8#_YYYYMMDD;

   // PAR.ETL Change time = LCL.System Time USR
   PAR.ETL_Change_time = LCL.System_Time_USR;

  }

 }

 ENDIF;

 ENDIF;

 //?ERROR: Update Interface Record.
 CASE;

 // IF NOT LCL.ETL Error Reason is No Error
 IF ! LCL.ETL_Error_Reason = *BLANK;

 EXECUTE FUNCTION(Chg Comdty Mkt Prc IntfCH) TYPE(CHGOBJ) FILE(PUBZCPP)          AC2182841;
 PARAMETER(DB1.Commodity_Market_Code);
 PARAMETER(DB1.Commodity_Price_Group);
 PARAMETER(DB1.Market_Price_Date);
 PARAMETER(DB1.Commodity_Market_Price);
 PARAMETER(DB1.Projected_Market_Price);
 PARAMETER(DB1.ETL_Record_Status);
 PARAMETER(LCL.ETL_Process_Status);
 PARAMETER(LCL.ETL_Error_Reason);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Change Stamp      IF) TYPE(EXCINTFUN)                      AC2182822;
  PARAMETER(DB1.ETL_Change_Date);
  PARAMETER(DB1.ETL_Change_time);
  {
   //?Execute internal function

   // Call program RTV System Date/Time   UP.
   CALL PROGRAM(RTV System Date/Time   UP) ('PDGFUPC');
   PARAMETER(LCL.System_Date_Nbr_USR);
   PARAMETER(LCL.System_Time_USR);

   // LCL.USR Internal D8# YYYYMMDD = LCL.System Date Nbr USR
   LCL.USR_Internal_D8#_YYYYMMDD = LCL.System_Date_Nbr_USR;

   // PAR.ETL Change Date = LCL.USR Internal D8# YYYYMMDD
   PAR.ETL_Change_Date = LCL.USR_Internal_D8#_YYYYMMDD;

   // PAR.ETL Change time = LCL.System Time USR
   PAR.ETL_Change_time = LCL.System_Time_USR;

  }

 }

 // LCL.Commodity Market Code USR = DB1.Commodity Market Code
 LCL.Commodity_Market_Code_USR = DB1.Commodity_Market_Code;

 // PAR.Send Email USR = CND.Yes
 PAR.Send_Email_USR = 'Y';

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?Last Comm Market --> Send Email to Notify of Update.
 CASE;

 // IF PAR.Send Email USR is Yes
 IF PAR.Send_Email_USR = 'Y';

 //?Format Email Subject & Message.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Commodity Mrkt Cde=Blank Means None Processed but has Error.
 CASE;

 // IF LCL.Commodity Market Code is Not Entered
 IF LCL.Commodity_Market_Code = *BLANK;

 //?Use Last Commodity Market Code in Error.
 // LCL.Commodity Market Code = LCL.Commodity Market Code USR
 LCL.Commodity_Market_Code = LCL.Commodity_Market_Code_USR;

 ENDIF;

 // LCL.Email Subject USR = CONCAT(CON.OMS Commodity Market Pric,CON.es Updated,CON.*ZERO)
 LCL.Email_Subject_USR = 'OMS Commodity Market Pric' + 'es Updated' (*ZERO);

 // LCL.Email Message USR = CONCAT(CON.OMS Commodity Market,CON.Prices Updated For Market,CON.1)
 LCL.Email_Message_USR = 'OMS Commodity Market' + 'Prices Updated For Market' (1);

 // LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.Code:,CON.1)
 LCL.Email_Message_USR = LCL.Email_Message_USR + 'Code:' (1);

 // LCL.Email Message USR = CONCAT(LCL.Email Message USR,PAR.Commodity Market Save USR,CON.1)
 LCL.Email_Message_USR = LCL.Email_Message_USR + PAR.Commodity_Market_Save_USR (1);

 // Call program RTV Data Libraries     XF.
 CALL PROGRAM(RTV Data Libraries     XF) ('CAQXXFR');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(LCL.@Library_List_Code);

 //?If Not PROD Library Append 'TEST' to Email Subject.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Email Message USR = CONCAT(LCL.Email Message USR,CON.- TEST,CON.2)
 LCL.Email_Message_USR = LCL.Email_Message_USR + '- TEST' (2);

 ENDIF;

 ENDIF;

 // Call program RTV System Value Alpha XF.
 CALL PROGRAM(RTV System Value Alpha XF) ('PPJXXFR');
 PARAMETER('CMDMKTPRC');
 PARAMETER(LCL.ESEND_Distribution_List_U);

 // Call program Exc ESNDMAIL Generic  CL.
 CALL PROGRAM(Exc ESNDMAIL Generic  CL) ('PUE8UPC');
 PARAMETER(LCL.ESEND_Distribution_List_U);
 PARAMETER(LCL.Email_Subject_USR);
 PARAMETER(LCL.Email_Message_USR);

 ENDIF;

}


