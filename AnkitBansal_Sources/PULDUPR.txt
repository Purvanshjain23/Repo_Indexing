     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) DBGVIEW(*SOURCE) CVTOPT(*DATETIME)
     Z* ACTGRP(*CALLER) OPTIMIZE(*BASIC)
     H****************** ILE RPG PROGRAM ***********************************************************
     H* SYSTEM:      Seaboard Foods
     H* PROGRAM:     PULDUPR
     H* PROGRAM DSC: Exc TRG POARREP WrapperUP Execute user program
     H* PROGRAMMER:  Danny Nguyen
     H* CREATED:     01/23/2019
     H* PROJECT:     R14394 - MRP Report
     H* PURPOSE:     This is a trigger wrapper program which accepts IBM defined parameters for
     H*              the trigger buffer.
     H*
     H* COMPILING NOTES:
     H*    ˆCRTBNDRPG
     H*    ˆDFTACTGRP(*NO) DBGVIEW(*SOURCE) CVTOPT(*DATETIME)
     H*    ˆACTGRP(*CALLER) OPTIMIZE(*BASIC)
     H*
     H* DB2 TRIGGER NOTES:
     H*     1. Files with trigger MUST be journal to save Before & After images.
     H*     2. Create CL program to add the physical file trigger. Reference the trigger wrapper
     H*        program in the ADDPFTRG command. See PUABUPC program for example.
     H*     3. If a file is regenerated and recompiled the RMVPFTRG & ADDPFTRG commands need to be
     H*        reapplied.
     H*     4. Be caution when manually updating files with triggers via SQL/DBU/YWRK, etc or
     H*        fix/conversion program since these events will call the triggering program.
     H*     5. IBM command:
     H*        PRTTRGPGM will create a report to list all files with triggers.
     H*        RMVPFTRG will remove physical file trigger.
     H*     6. You can clone PTPTUPR program and apply this to any DB2 file.
     H**********************************************************************************************
     H* MODIFICATIONS:
     H**********************************************************************************************
     H* DATE      INT  PROJECT  DESCRIPTION
     H* --------  ---  -------  -------------------------------------------------------------------
     H* MM/DD/YY
     H**********************************************************************************************
      *
      * Data Structure Passed in by the IBM Defined Database
     D TrgBuffer       DS
     D  TFileName                    10
     D  TLibraryName                 10
     D  TMemberName                  10
     D  TEvent                        1
     D  TTime                         1
     D  TCommitLock                   1
     D  TFill01                       3
     D  TCCSID                       10I 0
     D  TRRN                         10I 0
     D  TFill02                      10I 0
     D  TOldOffset                   10I 0
     D  TOldLength                   10I 0
     D  TOldNullOff                  10I 0
     D  TOldNullLen                  10I 0
     D  TNewOffset                   10I 0
     D  TNewLength                   10I 0
     D  TNewNullOff                  10I 0
     D  TNewNullLen                  10I 0
      *
     D TrgBufferLen    S             10I 0
      * Before and After Record Images: Packaging Item
     D OldRecord     E DS                  Extname(POARREP) Prefix(O_)
     D                                     Based(OldRecPtr)
      *
     D NewRecord     E DS                  Extname(POARREP)
     D                                     Based(NewRecPtr)
      *
      *
      **********************************************************************************************
      * Entry Parameter List
      **********************************************************************************************
     C     *entry        plist
     C                   parm                    TrgBuffer
     C                   parm                    TrgBufferLen
      *
      *
      * Map External DS to Trigger Buffer Using Pointers.
     C                   eval      OldRecPtr = %addr(TrgBuffer) + TOldOffSet
     C                   eval      NewRecPtr = %addr(TrgBuffer) + TNewOffSet
      *
      * Clear Old Buffer for Insert and New Buffer for Delete To Prevent Previous Record Data.
     C                   If        TEvent = '1'                                 Insert
     C                   Clear                   OldRecord
     C                   ElseIf    TEvent = '2'                                 Delete
     C                   Clear                   NewRecord
     C                   EndIf
      *
      * Call 2E Program for Processing.
     C                   Call      'PULCXFR'
     C                   Parm      *Blank        W0RTN             7
     C                   Parm                    OldRecord
     C                   Parm                    NewRecord
     C                   Parm                    TEvent
      *
      * Add Additional Processing Here if Needed.
      *
     C                   return
      *
