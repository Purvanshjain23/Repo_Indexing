// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKTRXFR
// ?Date: 14.08.2025 Time: 02:50:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
ENDDO;

EXECUTE FUNCTION(Chg Cal Src/Pay Typ   RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1149631;
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Prdcr Vendor#,Src RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1143363;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(WRK.PD_VND_Address_Number);
 PARAMETER(WRK.SR_Source_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  CASE;

  // IF DB1.PD VND Address Number is Zero
  IF DB1.PD_VND_Address_Number = *ZERO;

  EXECUTE FUNCTION(Rtv Producer EXT2     RT) TYPE(RTVOBJ) FILE(PLB4REP)           AB1322079;
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(WRK.M3_Supplier_ID);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // LCL.Text 7 USR = SUBSTRING(WRK.M3 Supplier ID,CON.4,CON.7)
  LCL.Text_7_USR = SUBSTRING(WRK.M3_Supplier_ID:4:7);

  // LCL.Amount USR = CVTVAR(LCL.Text 7 USR)
  LCL.Amount_USR = CVTVAR(LCL.Text_7_USR);

  // PAR.PD VND Address Number = LCL.Amount USR
  PAR.PD_VND_Address_Number = LCL.Amount_USR;

  ENDIF;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Source Type       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1141829;
 PARAMETER(WRK.SR_Source_Code);
 PARAMETER(WRK.TH_Source_Type);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Calculate Payment Gross
 CASE;

 // IF DB1.TH Payment Sts is Live anything
 IF DB1.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

 // WRK.TH Payment Type = CND.Live
 WRK.TH_Payment_Type = 'L';

 //?Calculate Payment Gross
 // IF DB1.TH Payment Sts is Carcass anything
 IF DB1.TH_Payment_Sts = 'PC'/'NC'/'SC'/'IC';

 // WRK.TH Payment Type = CND.Carcass Merit
 WRK.TH_Payment_Type = 'C';

 ENDIF;

 EXECUTE FUNCTION(Rtv Hog Class Type    RT) TYPE(RTVOBJ) FILE(PKA8REP)           AB1144394;
 PARAMETER(DB1.HC_Class_Code);
 PARAMETER(WRK.HC_Description);
 PARAMETER(WRK.HC_Class_Type);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Chg SR                CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1149632;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_Payment_Type);
 PARAMETER(WRK.SR_Source_Code);
 PARAMETER(WRK.HC_Class_Type);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(DB1.TH_Shift_Held_Over);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

  EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
  PARAMETER(DB1.TH_Payment_Sts);
  PARAMETER(DB1.TH_Payment_Type);
  {
   //?Execute internal function

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?Function Description:  If there are any fields that need to be
   //?Changed/Created during the Change functions or Create function
   //?Presently: Payment Type
   //?Add this routine to all of the change objects and create object
   //?that update the Payment Type
   CASE;

   // IF PAR.TH Payment Sts is Live anything
   IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

   // PAR.TH Payment Type = CND.Live
   PAR.TH_Payment_Type = 'L';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.TH Payment Type = CND.Carcass Merit
   PAR.TH_Payment_Type = 'C';

   ENDIF;

  }

 }

}


