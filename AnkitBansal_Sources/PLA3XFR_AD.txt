// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLA3XFR
// ?Date: 14.08.2025 Time: 03:42:31
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Print Claim Expense Pending report
DO;

//?At this time, we will go with this information until
//?the request is stated to do something different for the
//?report that is being sent via email.   Per Alice
// PAR.PRT Printer Device = CON.ISPRT02
PAR.PRT_Printer_Device = 'ISPRT02';

// PAR.PRT Hold Output Sts = CND.*YES
PAR.PRT_Hold_Output_Sts = *YES;

// PAR.PRT Save Output Sts = CND.*YES
PAR.PRT_Save_Output_Sts = *YES;

// PAR.PRT Number of Copies = CON.01
PAR.PRT_Number_of_Copies = 01;

// PAR.Nbr of Copies-Alpha   USR = CON.01
PAR.Nbr_of_Copies_Alpha_USR = 01;

EXECUTE FUNCTION(Prt Claim Exp Pnd Prd IF) TYPE(EXCINTFUN)                      AC1792843;
PARAMETER(PAR.Email_Selection_usr);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Nbr_of_Copies_Alpha_USR);
{
 //?Execute internal function

 // LCL.PRT Night Queue Run Sts = CND.no
 LCL.PRT_Night_Queue_Run_Sts = 'N';

 CASE;

 // IF PAR.Email Selection usr is Email Selected
 IF PAR.Email_Selection_usr = 'E';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program PMT Print Option  SHR  PV.
 CALL PROGRAM(PMT Print Option  SHR  PV) ('PDG0PVR');
 PARAMETER('Claim Expense Pending Rpt');
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Number_of_Copies);
 PARAMETER(LCL.PRT_Night_Queue_Run_Sts);
 PARAMETER(PAR.PRT_Night_Queue);
 PARAMETER('OMS');

 ENDIF;

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 //?Select the Report.
 DO;

 //?Dynamically override the SBMJOB command
 //?with the job queue from the Print Options screen.
 // PGM.*Sbmjob override string = CONCAT(CON.JOBQ(,PAR.PRT Night Queue,CND.*None)
 PGM.*Sbmjob_override_string = 'JOBQ(' + PAR.PRT_Night_Queue (*ZERO);

 // PGM.*Sbmjob override string = CONCAT(PGM.*Sbmjob override string,CON.),CND.*None)
 PGM.*Sbmjob_override_string = PGM.*Sbmjob_override_string + ')' (*ZERO);

 //?Submit the Report.
 //?Prt Claim Expense Pending report
 CASE;

 // IF PAR.Email Selection usr is Email Selected
 IF PAR.Email_Selection_usr = 'E';

 //?PRINT OPTIONS WILL BE PLUG DUE TO THE FACT THIS IS EMAIL
 // Call program Prt Claim Exp Pnd SbmJXF.
 SBMJOB;
 CALL PROGRAM(Prt Claim Exp Pnd SbmJXF) ('PLA1XFR');
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Number_of_Copies);
 PARAMETER(PAR.Email_Selection_usr);
 SBMJOBOVR JOB(CLMEXPPND);
 SBMJOBOVR JOBD(*USRPRF);
 SBMJOBEND;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Call program Prt Claim Exp Pnd SbmJXF.
 SBMJOB;
 CALL PROGRAM(Prt Claim Exp Pnd SbmJXF) ('PLA1XFR');
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(PAR.PRT_Hold_Output_Sts);
 PARAMETER(PAR.PRT_Save_Output_Sts);
 PARAMETER(PAR.PRT_Number_of_Copies);
 PARAMETER(PAR.Email_Selection_usr);
 SBMJOBOVR JOB(CLMEXPPND);
 SBMJOBOVR JOBD(*USRPRF);
 SBMJOBEND;

 ENDIF;

 //?Send submit message to user.
 // Send information message - 'The report has been submitted.'
 MESSAGE(USR2720 *INFO);

 ENDDO;

 ENDIF;

}


ENDDO;

