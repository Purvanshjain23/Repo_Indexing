// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMPHPFR
// ?Date: 14.08.2025 Time: 12:05:40
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('TRF');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?***** Change Log and Comments
//?** 05/19/2008 LJB FP1225
//?** Sort and subtotal by Parent Customer. Print report total.
//?USER: Record selection processing

//?** Note: This report is run over a file built in QTEMP so all
//?**       records are selected and printed
//?USER: On print of first page format

// 1PG.From Date             USR = PAR.Invoice Date
X1PG_From_Date_USR = PAR.Invoice_Date;

// 1PG.Thru Date             USR = PAR.Thru Date             USR
X1PG_Thru_Date_USR = PAR.Thru_Date_USR;

// 1PG.Ship To Customer = PAR.Ship To Customer
X1PG_Ship_To_Customer = PAR.Ship_To_Customer;

// 1PG.FC Code = PAR.FC Code
X1PG_FC_Code = PAR.FC_Code;

// 1PG.Company = PAR.Company Number
X1PG_Company = PAR.Company_Number;

// 1PG.USR Warehouse Code = PAR.USR Warehouse Code
X1PG_USR_Warehouse_Code = PAR.USR_Warehouse_Code;

// 1PG.USR CDE Parm 1 = PAR.USR CDE Parm 1
X1PG_USR_CDE_Parm_1 = PAR.USR_CDE_Parm_1;

// 1PG.USR CDE Parm 2 = PAR.USR CDE Parm 2
X1PG_USR_CDE_Parm_2 = PAR.USR_CDE_Parm_2;

// 1PG.USR CDE Parm 3 = PAR.USR CDE Parm 3
X1PG_USR_CDE_Parm_3 = PAR.USR_CDE_Parm_3;

// 1PG.USR CDE Parm 4 = PAR.USR CDE Parm 4
X1PG_USR_CDE_Parm_4 = PAR.USR_CDE_Parm_4;

// 1PG.USR CDE Parm 5 = PAR.USR CDE Parm 5
X1PG_USR_CDE_Parm_5 = PAR.USR_CDE_Parm_5;

// 1PG.USR CDE Parm 6 = PAR.USR CDE Parm 6
X1PG_USR_CDE_Parm_6 = PAR.USR_CDE_Parm_6;

// 1PG.USR CDE Parm 7 = PAR.USR CDE Parm 7
X1PG_USR_CDE_Parm_7 = PAR.USR_CDE_Parm_7;

// 1PG.USR CDE Parm 8 = PAR.USR CDE Parm 8
X1PG_USR_CDE_Parm_8 = PAR.USR_CDE_Parm_8;

// 1PG.USR CDE Parm 9 = PAR.USR CDE Parm 9
X1PG_USR_CDE_Parm_9 = PAR.USR_CDE_Parm_9;

// 1PG.FCG Group Code = PAR.FCG Group Code
X1PG_FCG_Group_Code = PAR.FCG_Group_Code;

EXECUTE FUNCTION(Rtv Frt Grp Charges   RT) TYPE(RTVOBJ) FILE(PMEAREP)           AC1897966;
PARAMETER(X1PG_FCG_Group_Code);
PARAMETER(X1PG_Comment);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF PAR.Comment is Not Entered
 IF PAR.Comment = *BLANK;

 // PAR.Comment = CONCAT(PAR.Comment,DB1.FC Code,CON.1)
 PAR.Comment = PAR.Comment + DB1.FC_Code (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Comment = CONCAT(PAR.Comment,CON.,,CON.*ZERO)
 PAR.Comment = PAR.Comment + ',' (*ZERO);

 // PAR.Comment = CONCAT(PAR.Comment,DB1.FC Code,CON.1)
 PAR.Comment = PAR.Comment + DB1.FC_Code (1);

 ENDIF;

}


//?** Move in Warehouses or "ALL" with no asterisk
CASE;

// IF PAR.USR Select/Omit Flag is Blanks
IF PAR.USR_Select_Omit_Flag = *BLANK;

// 1PG.USR Warehouse Code = CON.ALL
X1PG_USR_Warehouse_Code = 'ALL';

ENDIF;

//?** Move in Customer name or *ALL
CASE;

// IF PAR.Ship To Customer is equal to zero
IF PAR.Ship_To_Customer = *ZERO;

// 1PG.Ship To Name          DRV = CON.*ALL
X1PG_Ship_To_Name_DRV = *ALL;

//?** Move in Customer name or *ALL
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(X1PG_Ship_To_Name_DRV);
PARAMETER(X1PG_Ship_To_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

//?** Move in Company name or *ALL
CASE;

// IF PAR.Company Number is Equal to zero
IF PAR.Company_Number = *ZERO;

// 1PG.Company Name DRV = CON.*ALL
X1PG_Company_Name_DRV = *ALL;

//?** Move in Company name or *ALL
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

//?** Condition name of freight code or "detent, layove, payadj"
CASE;

// IF PAR.FC Code is Not Entered
IF PAR.FC_Code = *BLANK;

// 1PG.FC Description DRV = CON.*BLANK
X1PG_FC_Description_DRV = *BLANK;

//?** Condition name of freight code or "detent, layove, payadj"
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(FC Description DRV) TYPE(DRVFLD)                               AC1866911;
PARAMETER(X1PG_FC_Description_DRV);
PARAMETER(X1PG_FC_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Frt Charge Info   RT) TYPE(RTVOBJ) FILE(POA9REP)           AC1627128;
 PARAMETER(PAR.FC_Code);
 PARAMETER(PAR.FC_Description_DRV);
 PARAMETER(NLL.FC_Rate_Amount);
 PARAMETER(NLL.FC_Unit_of_Measure);
 PARAMETER(NLL.FC_Act_Frt_Include_Sts);
 PARAMETER(NLL.FC_Frt_Add_Deduct);
 PARAMETER(NLL.FC_Load_Type_Select);
 PARAMETER(NLL.FC_State_Select);
 PARAMETER(NLL.FC_Export_Select);
 PARAMETER(NLL.FC_Shag_Wash_Select);
 PARAMETER(NLL.FC_Auto_Calc_Sts);
 PARAMETER(NLL.FC_Charge_Category);
 PARAMETER(NLL.FC_Shag_Wash_Comp);
 PARAMETER(NLL.FC_Edit_Sequence);
 PARAMETER(NLL.FC_Tot_Freight_Inc_Sts);
 PARAMETER(NLL.FC_Special_Type);
 PARAMETER(NLL.FC_ExpInt_FR_FZ_Select);
 PARAMETER(NLL.FC_Reference_Required);
 PARAMETER(NLL.FC_Trans_Mode_Select);
 PARAMETER(NLL.FC_Freight_Rate_Type_Sel);
 PARAMETER(NLL.FC_Company_Select);
 PARAMETER(NLL.FC_Company_Carrier_Select);
 PARAMETER(NLL.FC_Shared_Responsibility);
 PARAMETER(NLL.FC_Unused_Sts_10);
 PARAMETER(NLL.FC_Auto_Calc_Effective);
 PARAMETER(NLL.Record_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

// 1PG.FCG Group Code = PAR.FCG Group Code
X1PG_FCG_Group_Code = PAR.FCG_Group_Code;

EXECUTE FUNCTION(Rtv Frt Grp Charges   RT) TYPE(RTVOBJ) FILE(PMEAREP)           AC1897966;
PARAMETER(X1PG_FCG_Group_Code);
PARAMETER(X1PG_Comment);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF PAR.Comment is Not Entered
 IF PAR.Comment = *BLANK;

 // PAR.Comment = CONCAT(PAR.Comment,DB1.FC Code,CON.1)
 PAR.Comment = PAR.Comment + DB1.FC_Code (1);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Comment = CONCAT(PAR.Comment,CON.,,CON.*ZERO)
 PAR.Comment = PAR.Comment + ',' (*ZERO);

 // PAR.Comment = CONCAT(PAR.Comment,DB1.FC Code,CON.1)
 PAR.Comment = PAR.Comment + DB1.FC_Code (1);

 ENDIF;

}


//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Parent Customer header format

// SUPPRESSED PRINT Ship To Customer header format

// SUPPRESSED PRINT FC Code header format

// SUPPRESSED PRINT Invoice Number header format

//?USER: On print of detail format

MOVE *ALL (To: CUR From: DB1);

EXECUTE FUNCTION(Ship To Name          DRV) TYPE(DRVFLD)                        AC1573561;
PARAMETER(CUR.Ship_To_Name_DRV);
PARAMETER(CUR.Ship_To_Customer);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Process after print of detail format

// NXT.Freight Misc. Charge = NXT.Freight Misc. Charge + CUR.LFC Amount
NXT.Freight_Misc_Charge = NXT.Freight_Misc_Charge + CUR.LFC_Amount;

//?USER: Print required level totals

// SUPPRESSED PRINT Invoice Number totals format

CASE;

IF NEW FC_Code;
// Print FC Code totals format
PRINT FC Code totals format;

// NXT.Freight Misc. Charge = NXT.Freight Misc. Charge + CUR.Freight Misc. Charge
NXT.Freight_Misc_Charge = NXT.Freight_Misc_Charge + CUR.Freight_Misc_Charge;

ENDIF;

CASE;

IF NEW Ship_To_Customer;
// Print Ship To Customer totals format
PRINT Ship To Customer totals format;

// NXT.Freight Misc. Charge = NXT.Freight Misc. Charge + CUR.Freight Misc. Charge
NXT.Freight_Misc_Charge = NXT.Freight_Misc_Charge + CUR.Freight_Misc_Charge;

ENDIF;

CASE;

IF NEW Parent_Customer;
EXECUTE FUNCTION(RTV Name Only          RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1493704;
PARAMETER(CUR.Parent_Customer);
PARAMETER(CUR.Parent_Customer_Name_DRV);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 QUIT;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


// Print Parent Customer totals format
PRINT Parent Customer totals format;

// NXT.Freight Misc. Charge = NXT.Freight Misc. Charge + CUR.Freight Misc. Charge
NXT.Freight_Misc_Charge = NXT.Freight_Misc_Charge + CUR.Freight_Misc_Charge;

ENDIF;

