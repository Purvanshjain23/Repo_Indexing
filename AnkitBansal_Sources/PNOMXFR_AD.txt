// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNOMXFR
// ?Date: 14.08.2025 Time: 03:45:53
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?S16475 RMC 5/26/2020
//?             ALSO CHECK FOR 'TRB' IN Rtv Last Bt/Seq f/spl RT
//?P00579 RMC 5/13/2010 EMTS:Output rin qty and batch volume
//?                     EMTS:input equiv value
//?FP1322 Calc New RINs ssss and eeee and volume from the BUY RIN being sold
//?RIN Multiplier = Nbr of RINS left on BUY RIN/net gals left on the BUY RIN
//?RIN Volume being Sold = RIN Multiplier * net gallons to be sold
//?SEL RIN SSSSSSS= last SEL RINs EEEEEEEE+1 or if none, orig RINs SSSSSSSS
//?SEL RIN EEEEEEE= SEL RINs SSSSSSSS + RINS sold
//?For each SEL, use whats left to be sold when deriving the multiplier
//?Rins left to be sold = RIN Volume - RIN Gallons sold - sold unassgnd
//?Net gallons to be sold  -> in BUY batch rin rcd, reduce w/each sale
//?Calc RIN Multiplier  and * quantity being sold
// LCL.COA RIN Volume in Gallons = PAR.COA RIN Volume in Gallons - PAR.COA RIN Gallons Sold
LCL.COA_RIN_Volume_in_Gallons = PAR.COA_RIN_Volume_in_Gallons - PAR.COA_RIN_Gallons_Sold;

// LCL.COA RIN Volume in Gallons = LCL.COA RIN Volume in Gallons - PAR.COA BHR RINs to Sell Sep
LCL.COA_RIN_Volume_in_Gallons = LCL.COA_RIN_Volume_in_Gallons                                      +
- PAR.COA_BHR_RINs_to_Sell_Sep;

//?added this chk for 0 before divide           7-10-15 RMC
CASE;

// IF PAR.COA BHR Net Galls to Sell is Greater than zero
IF PAR.COA_BHR_Net_Galls_to_Sell > *ZERO;

// Compute: new rin vol
PAR.COA_RIN_Volume_New_usr = ( LCL.COA_RIN_Volume_in_Gallons                                       +
/ PAR.COA_BHR_Net_Galls_to_Sell ) * PAR.Quantity_7_0_USR 'H';

//?added this chk for 0 before divide           7-10-15 RMC
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.COA RIN Volume New usr = CON.*ZERO
PAR.COA_RIN_Volume_New_usr = *ZERO;

ENDIF;

//?Get new SEL Rins SSSSSSSS
EXECUTE FUNCTION(Rtv Last Bt/Seq f/spl RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC1971134;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(LCL.COA_RIN_SSSSSSSS_New_usr);
{
 //?USER: Process Data record

 //?If the last RIN for the batch/seq is a SEL rec, then the next
 //?SEL will start with this rcds EEEEEEEE+1
 //?If the last RIN for the batch/seq is the BUY rec, then the 1st
 //?SEL will start with this rcds SSSSSSSS
 CASE;

 // IF DB1.COA RIN SSSSSSSS is GT 00000000
 IF DB1.COA_RIN_SSSSSSSS > 0;

 CASE;

 // IF DB1.RFS Transaction Type is Sold or Delivered
 IF DB1.RFS_Transaction_Type = 'SEL';

 // OR DB1.RFS Transaction Type is Transfer BUY
 OR DB1.RFS_Transaction_Type = 'TRB';

 //?RMC Added TRB type too
 // PAR.COA RIN SSSSSSSS  New usr = DB1.COA RIN EEEEEEEE + CON.1
 PAR.COA_RIN_SSSSSSSS_New_usr = DB1.COA_RIN_EEEEEEEE + 1;

 QUIT;

 // IF DB1.RFS Transaction Type is Buy
 IF DB1.RFS_Transaction_Type = 'BUY';

 // PAR.COA RIN SSSSSSSS  New usr = DB1.COA RIN SSSSSSSS
 PAR.COA_RIN_SSSSSSSS_New_usr = DB1.COA_RIN_SSSSSSSS;

 QUIT;

 ENDIF;

 ENDIF;

}


//?Add new SEL rins volume to get its EEEEEEEE
// LCL.COA RIN EEEEEEEE  New usr = LCL.COA RIN SSSSSSSS  New usr + PAR.COA RIN Volume New usr
LCL.COA_RIN_EEEEEEEE_New_usr = LCL.COA_RIN_SSSSSSSS_New_usr + PAR.COA_RIN_Volume_New_usr;

//?Sub 1 for inclusive   -- 7-10-15 RMC if EEEE > SSSSS ...maybe the same
CASE;

// IF LCL.COA RIN EEEEEEEE  New usr GT LCL.COA RIN SSSSSSSS  New usr
IF LCL.COA_RIN_EEEEEEEE_New_usr > LCL.COA_RIN_SSSSSSSS_New_usr;

// LCL.COA RIN EEEEEEEE  New usr = LCL.COA RIN EEEEEEEE  New usr - CON.1
LCL.COA_RIN_EEEEEEEE_New_usr = LCL.COA_RIN_EEEEEEEE_New_usr - 1;

ENDIF;

//?Format new rin with SSSSSSSS and EEEEEEEE
// PAR.COA Batch RIN = PAR.COA Batch Header RIN
PAR.COA_Batch_RIN = PAR.COA_Batch_Header_RIN;

// LCL.Generic Heading 1 = CVTVAR(LCL.COA RIN SSSSSSSS  New usr)
LCL.Generic_Heading_1 = CVTVAR(LCL.COA_RIN_SSSSSSSS_New_usr);

// LCL.Generic Heading 2 = CVTVAR(LCL.COA RIN EEEEEEEE  New usr)
LCL.Generic_Heading_2 = CVTVAR(LCL.COA_RIN_EEEEEEEE_New_usr);

// PAR.USR Description 16 = CONCAT(LCL.Generic Heading 1,LCL.Generic Heading 2,CON.*ZERO)
PAR.USR_Description_16 = LCL.Generic_Heading_1 + LCL.Generic_Heading_2 (*ZERO);

// Execute function *Move-Right.
EXECUTE FUNCTION(*Move-Right) TYPE(EXCUSRSRC) ('PDUIUFR');
PARAMETER(PAR.COA_Batch_RIN);
PARAMETER(PAR.USR_Description_16);
{
 C                     MOVE #IPANA    #OO9NA
}


// PAR.COA RIN SSSSSSSS  New usr = LCL.COA RIN SSSSSSSS  New usr
PAR.COA_RIN_SSSSSSSS_New_usr = LCL.COA_RIN_SSSSSSSS_New_usr;

// PAR.COA RIN EEEEEEEE  New usr = LCL.COA RIN EEEEEEEE  New usr
PAR.COA_RIN_EEEEEEEE_New_usr = LCL.COA_RIN_EEEEEEEE_New_usr;

// PAR.COA RIN Gallons Sold = PAR.COA RIN Gallons Sold + PAR.COA RIN Volume New usr
PAR.COA_RIN_Gallons_Sold = PAR.COA_RIN_Gallons_Sold + PAR.COA_RIN_Volume_New_usr;

// PAR.COA BHR Net Galls to Sell = PAR.COA BHR Net Galls to Sell - PAR.Quantity 7.0 USR
PAR.COA_BHR_Net_Galls_to_Sell = PAR.COA_BHR_Net_Galls_to_Sell - PAR.Quantity_7_0_USR;

// PAR.COA RIN Quantity = PAR.COA RIN Volume New usr
PAR.COA_RIN_Quantity = PAR.COA_RIN_Volume_New_usr;

CASE;

// IF PAR.COA RIN Equivalence Valu# is Zero
IF PAR.COA_RIN_Equivalence_Valu# = *ZERO;

// LCL.COA RIN Equivalence Valu# = CON.1.5
LCL.COA_RIN_Equivalence_Valu# = 1.5;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.COA RIN Equivalence Valu# = PAR.COA RIN Equivalence Valu#
LCL.COA_RIN_Equivalence_Valu# = PAR.COA_RIN_Equivalence_Valu#;

ENDIF;

// PAR.COA Batch RIN Volume new = PAR.COA RIN Quantity / LCL.COA RIN Equivalence Valu# *Rounded
PAR.COA_Batch_RIN_Volume_new = PAR.COA_RIN_Quantity / LCL.COA_RIN_Equivalence_Valu# 'H';

