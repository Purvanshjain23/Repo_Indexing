// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMEDXFR
// ?Date: 14.08.2025 Time: 03:44:51
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Build Order Detail Build Sched workfile : Start with 3 days prior
//?     Stop with Production Date RGT (Last date in pdi8cpp)
EXECUTE FUNCTION(Rtv Prd Day Sts       RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1393177;
PARAMETER(360);
PARAMETER(JOB.*Job_date);
PARAMETER(LCL.Production_Day_Sts_360);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Prd Day Sts       RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1393177;
PARAMETER(440);
PARAMETER(JOB.*Job_date);
PARAMETER(LCL.Production_Day_Sts_440);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Prd Day Sts       RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1393177;
PARAMETER(960);
PARAMETER(JOB.*Job_date);
PARAMETER(LCL.Production_Day_Sts_960);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?S0538 RMC Always alloc orders when this pgm runs
// LCL.Production Day Sts 360 = CND.yes
LCL.Production_Day_Sts_360 = 'Y';

// LCL.Production Day Sts 440 = CND.yes
LCL.Production_Day_Sts_440 = 'Y';

// LCL.Production Day Sts 960 = CND.yes
LCL.Production_Day_Sts_960 = 'Y';

//?E3031 RMC 2/27/14 Include RAIL up to 30 days old
// LCL.Scheduled Ship Date = PAR.Scheduled Ship Date USR + CON.-30 *DAYS
LCL.Scheduled_Ship_Date = DATEINCR(PAR.Scheduled_Ship_Date_USR '-30' 'DY' 1111111 'NONE'           +
'N' 1);

//?03/22/24 DN OMS001-Commented Out & Call Cloned RTVOBJ function
//?  'UPS Crt Ord Dt Bld Sch2RT'.
EXECUTE FUNCTION(UPS Crt Ord Dt Bld Sch2RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2224113;
PARAMETER(360);
PARAMETER(LCL.Scheduled_Ship_Date);
PARAMETER(PAR.Production_Date_RGT);
PARAMETER(LCL.Production_Day_Sts_360);
PARAMETER(LCL.Production_Day_Sts_960);
PARAMETER(PAR.Scheduled_Ship_Date_USR);
PARAMETER(LCL.Production_Day_Sts_440);
{
 //?USER: Initialize routine

 //?***NOTE: This function was cloned from 'UPS Crt Ord Dt Bld SchRT -
 //?         Order Detail' but commented out work from W85204 RMC 9/29/21
 //?         for first run, first time =Y, include orders shipping
 //?         <= 21 days out, and include all Sched override orders
 //?         for 2nd run, first time=N, include orders shipping
 //?         >21 days out.
 // LCL.Company Number = CON.*ZERO
 LCL.Company_Number = *ZERO;

 // LCL.Order Number = CON.*ZERO
 LCL.Order_Number = *ZERO;

 // LCL.Ship To Customer = CON.*ZERO
 LCL.Ship_To_Customer = *ZERO;

 //?USER: Process Data record

 //?03/22/24 DN OMS001-Reinstated Existing Logic which Matches PROD Source.
 //?CHG:  Order Number
 CASE;

 // IF LCL.Order Number NE DB1.Order Number
 IF LCL.Order_Number <> DB1.Order_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Guymon -  is it a production day?
 CASE;

 // IF LCL.Accounting Company is Guymon
 IF LCL.Accounting_Company = 360;

 CASE;

 // IF PAR.Production Day Sts 360 is yes
 IF PAR.Production_Day_Sts_360 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Seaboard Triumph -  is it a production day?
 CASE;

 // IF LCL.Accounting Company is Seaboard Triumph Foods
 IF LCL.Accounting_Company = 440;

 CASE;

 // IF PAR.Production Day Sts 440 is yes
 IF PAR.Production_Day_Sts_440 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Triumph - is it a production day?
 CASE;

 // IF LCL.Accounting Company is St. Joseph
 IF LCL.Accounting_Company = 960;

 CASE;

 // IF PAR.Production Day Sts 960 is yes
 IF PAR.Production_Day_Sts_960 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Rtv Shipping Method   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1848045;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Shipping_Method);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?If not Rail , must ship within 3 days prior or later
 CASE;

 // IF LCL.Shipping Method is Not Rail
 IF LCL.Shipping_Method = 'CT'/'PT';

 CASE;

 // IF DB1.Scheduled Ship Date LT PAR.Scheduled Ship Date USR
 IF DB1.Scheduled_Ship_Date < PAR.Scheduled_Ship_Date_USR;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Include rail orders up to 30 days past
 ENDIF;

 //?Set Save fields for selected order dtl
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // LCL.Company Number = DB1.Company Number
 LCL.Company_Number = DB1.Company_Number;

 // LCL.Order Number = DB1.Order Number
 LCL.Order_Number = DB1.Order_Number;

 // LCL.Ship To Customer = DB1.Ship To Customer
 LCL.Ship_To_Customer = DB1.Ship_To_Customer;

 EXECUTE FUNCTION(RTV Typ,Sts,Event,Ld  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1918044;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Date_of_Original_Entry);
 PARAMETER(LCL.Credit_Hold);
 PARAMETER(LCL.Production_Hold);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(LCL.Requested_Delivery_Time);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Export_Status);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Block_Order_Flag);
 PARAMETER(LCL.Time_of_Original_Entry);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Partial picked Y/N ?
 CASE;

 // IF LCL.Event Code is 03 Picked
 IF LCL.Event_Code = '03';

 // LCL.ODBS Partial Pick Sts = CND.Yes
 LCL.ODBS_Partial_Pick_Sts = 1;

 //?Partial picked Y/N ?
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ODBS Partial Pick Sts = CND.No
 LCL.ODBS_Partial_Pick_Sts = 2;

 ENDIF;

 //?Get Deadline from Load if assigned
 CASE;

 // IF LCL.Load ID is GT Zero
 IF LCL.Load_ID > *ZERO;

 EXECUTE FUNCTION(RTV for Build Sched   RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1919219;
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Load_Status);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?Get Deadline from Load if assigned
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Deadline Depart Date LH = DB1.Deadline Depart Date LH
 LCL.Deadline_Depart_Date_LH = DB1.Deadline_Depart_Date_LH;

 // LCL.Deadline Depart Time LH = DB1.Deadline Depart Time LH
 LCL.Deadline_Depart_Time_LH = DB1.Deadline_Depart_Time_LH;

 // LCL.Load Status = CND.*Blank
 LCL.Load_Status = *BLANK;

 ENDIF;

 //?Calc Deadline Depart DD/Tm if not on load or order
 CASE;

 // IF LCL.Deadline Depart Date LH is not entered
 IF LCL.Deadline_Depart_Date_LH = *ZERO;

 // OR LCL.Deadline Depart Time LH is not entered
 OR LCL.Deadline_Depart_Time_LH = *ZERO;

 //?E01523 RMC 5.02.2011 use req delv dt tm for ddt calc always
 // Call program CLC Deadln Depart Dt  XF.
 CALL PROGRAM(CLC Deadln Depart Dt  XF) ('POSCXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(LCL.Requested_Delivery_Time);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);

 //?Force req deliv date if it cant be calculated
 CASE;

 // IF LCL.Deadline Depart Date LH is not entered
 IF LCL.Deadline_Depart_Date_LH = *ZERO;

 // LCL.Deadline Depart Date LH = LCL.Requested Delivery Date
 LCL.Deadline_Depart_Date_LH = LCL.Requested_Delivery_Date;

 // LCL.Deadline Depart Time LH = LCL.Requested Delivery Time * CON.100 *
 LCL.Deadline_Depart_Time_LH = LCL.Requested_Delivery_Time * 100;

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(RTV Territory using St RT) TYPE(RTVOBJ) FILE(PDLWREP)          AC1494008;
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Territory_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 ENDIF;

 //?Reset Future orders to a HOLD sts and del all sched rcds 9/6/12
 CASE;

 // IF DB1.Scheduled Ship Date GT PAR.Production Date RGT
 IF DB1.Scheduled_Ship_Date > PAR.Production_Date_RGT;

 //?if order was alloc during the day .. then delete all rcds pertaining to
 //? it and reset as -0- sched and put on hold
 EXECUTE FUNCTION(Rtv & Dlt future ords RT) TYPE(RTVOBJ) FILE(PDKNCPP)           AC2050639;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Ord Detail Sched   DL) TYPE(DLTOBJ) FILE(PDKNCPP)          AC1385631;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 EXECUTE FUNCTION(Del OrdDtl Sch-Consmd RT) TYPE(RTVOBJ) FILE(POB6CPP)           AC1647987;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del OrdDtl Sch-Consmd DL) TYPE(DLTOBJ) FILE(POB6CPP)           AC1647985;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
  PARAMETER(DB1.ODS_Sequence_Number);
 }

 EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1647181;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   DL) TYPE(DLTOBJ) FILE(POB5CPP)           AC1647003;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Hdr/Prd Hld Sts    CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1410178;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('H');
 PARAMETER('Y');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?***03/22/24 DN OMS001-BEGIN Commented Out RC Changes for W85204.
 //?***03/22/24 DN OMS001-END Commented Out RC Changes for W85204.
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Process Record
 CASE;

 // IF LCL.Order Type - Sales is Regular Order
 IF LCL.Order_Type_Sales = 'OR';

 // OR LCL.Order Type - Sales is Transfer Order
 OR LCL.Order_Type_Sales = 'TR';

 CASE;

 // IF DB1.Detail Line Status is Conf/Comp/Canc
 IF DB1.Detail_Line_Status = 'X'/'C'/'R';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.OD Adj Type = CND.Order Allocate
 LCL.OD_Adj_Type = 'OA';

 CASE;

 // IF DB1.OD Adj Type Override is Alloc Inventory First
 IF DB1.OD_Adj_Type_Override = 'F';

 // LCL.OD Adj Type = CND.Order Allocate-Inv First
 LCL.OD_Adj_Type = 'OI';

 // IF DB1.OD Adj Type Override is Alloc Inventory Last
 IF DB1.OD_Adj_Type_Override = 'L';

 // LCL.OD Adj Type = CND.Order Allocate-Inv Last
 LCL.OD_Adj_Type = 'OL';

 // IF DB1.OD Adj Type Override is Freeze Time Override
 IF DB1.OD_Adj_Type_Override = 'Z';

 // LCL.OD Adj Type = CND.Order Alloc-Frz time over
 LCL.OD_Adj_Type = 'OF';

 // IF DB1.OD Adj Type Override is Freeze Time-Allow Old prd
 IF DB1.OD_Adj_Type_Override = 'O';

 // LCL.OD Adj Type = CND.Order Alloc-Frz old prod
 LCL.OD_Adj_Type = 'FO';

 ENDIF;

 // LCL.Chill Time USR = CON.*ZERO
 LCL.Chill_Time_USR = *ZERO;

 //?get chill time
 DO;

 EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(NLL.Description_Line_One);
 PARAMETER(NLL.UOM_Primary);
 PARAMETER(NLL.Unit_Weight);
 PARAMETER(NLL.Item_Structure_Class_Code);
 PARAMETER(NLL.Item_Structure_Group_Code);
 PARAMETER(NLL.Item_Structure_Type_Code);
 PARAMETER(NLL.Item_Type_Code);
 PARAMETER(NLL.Default_Warehouse);
 PARAMETER(LCL.Fresh_Chilling_Time);
 PARAMETER(NLL.Base_Conv_Loss_Item);
 PARAMETER(NLL.Variety_Rendered_Cut);
 PARAMETER(NLL.Credit_Item_Status);
 PARAMETER(NLL.Std_Weight_Head_Var_Ren);
 PARAMETER(NLL.Pieces_Per_Head);
 PARAMETER(NLL.Department_Code);
 PARAMETER(NLL.Group_for_Packaging);
 PARAMETER(NLL.Seconds_Item);
 PARAMETER(NLL.Piece_Count_Item);
 PARAMETER(NLL.Pieces_Per_Bag);
 PARAMETER(NLL.Bags_Per_Unit);
 PARAMETER(NLL.Export_Domestic);
 PARAMETER(NLL.Print_On_Schedule);
 PARAMETER(NLL.Fresh_Inv_Allocation_Seq);
 PARAMETER(NLL.Fresh_Sched_As_Ordered);
 PARAMETER(NLL.Frozen_Inv_Allocation_Seq);
 PARAMETER(NLL.Primal_Group_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Type);
 PARAMETER(NLL.Trans_Contol_AS400_Plant);
 PARAMETER(NLL.Warehouse_Location);
 PARAMETER(LCL.Warehouse_Std_Chill_Time);
 PARAMETER(LCL.Warehouse_Chill_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Line_One);
  PARAMETER(PAR.UOM_Primary);
  PARAMETER(PAR.Unit_Weight);
  PARAMETER(PAR.Item_Structure_Class_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Type_Code);
  PARAMETER(PAR.Default_Warehouse);
  PARAMETER(PAR.Fresh_Chilling_Time);
  PARAMETER(PAR.Base_Conv_Loss_Item);
  PARAMETER(PAR.Variety_Rendered_Cut);
  PARAMETER(PAR.Credit_Item_Status);
  PARAMETER(PAR.Std_Weight_Head_Var_Ren);
  PARAMETER(PAR.Pieces_Per_Head);
  PARAMETER(PAR.Department_Code);
  PARAMETER(PAR.Group_for_Packaging);
  PARAMETER(PAR.Seconds_Item);
  PARAMETER(PAR.Piece_Count_Item);
  PARAMETER(PAR.Pieces_Per_Bag);
  PARAMETER(PAR.Bags_Per_Unit);
  PARAMETER(PAR.Export_Domestic);
  PARAMETER(PAR.Print_On_Schedule);
  PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
  PARAMETER(PAR.Fresh_Sched_As_Ordered);
  PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
  PARAMETER(PAR.Primal_Group_Code);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.Warehouse_Type);
  PARAMETER(PAR.Trans_Contol_AS400_Plant);
  PARAMETER(PAR.Warehouse_Location);
  PARAMETER(PAR.Warehouse_Std_Chill_Time);
  PARAMETER(PAR.Warehouse_Chill_Time);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 CASE;

 // IF LCL.Warehouse Std Chill Time is yes
 IF LCL.Warehouse_Std_Chill_Time = 'Y';

 // LCL.Chill Time USR = LCL.Warehouse Chill Time
 LCL.Chill_Time_USR = LCL.Warehouse_Chill_Time;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Chill Time USR = LCL.Fresh Chilling Time
 LCL.Chill_Time_USR = LCL.Fresh_Chilling_Time;

 ENDIF;

 ENDDO;

 // Call program CLC PA Age FrmToDates XF.
 CALL PROGRAM(CLC PA Age FrmToDates XF) ('PNO7XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Chilling_Time_USR);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(LCL.Production_AgeDte_Fr);
 PARAMETER(LCL.Production_AgeDte_To);

 // LCL.OD Schedule Override Sts = DB1.OD Schedule Override Sts
 LCL.OD_Schedule_Override_Sts = DB1.OD_Schedule_Override_Sts;

 EXECUTE FUNCTION(Crt Order Det Bld Sch CR) TYPE(CRTOBJ) FILE(PME6CPP)           AC1918004;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(LCL.ODBS_Partial_Pick_Sts);
 PARAMETER(DB1.Detail_Line_Status);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Consumed_Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(DB1.Quantity_Scheduled);
 PARAMETER(DB1.Weight_Scheduled);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);
 PARAMETER(LCL.Warehouse_Type);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Export_Status);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Production_Hold);
 PARAMETER(LCL.Credit_Hold);
 PARAMETER(LCL.Load_Status);
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(LCL.Time_of_Original_Entry);
 PARAMETER(LCL.OD_Schedule_Override_Sts);
 PARAMETER(LCL.OD_Adj_Type);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(LCL.Production_AgeDte_Fr);
 PARAMETER(LCL.Production_AgeDte_To);
 PARAMETER(LCL.Block_Order_Flag);
 PARAMETER(LCL.ODBS_Status_2_2_size);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Territory_Code);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(WRK.BLANK);
 PARAMETER(WRK.BLANK);
 PARAMETER(WRK.BLANK);
 //?Delete if they exist per order that will be reallocated
 EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1647181;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   DL) TYPE(DLTOBJ) FILE(POB5CPP)           AC1647003;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 ENDIF;

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(UPS Crt Ord Dt Bld Sch2RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2224113;
PARAMETER(440);
PARAMETER(LCL.Scheduled_Ship_Date);
PARAMETER(PAR.Production_Date_RGT);
PARAMETER(LCL.Production_Day_Sts_360);
PARAMETER(LCL.Production_Day_Sts_960);
PARAMETER(PAR.Scheduled_Ship_Date_USR);
PARAMETER(LCL.Production_Day_Sts_440);
{
 //?USER: Initialize routine

 //?***NOTE: This function was cloned from 'UPS Crt Ord Dt Bld SchRT -
 //?         Order Detail' but commented out work from W85204 RMC 9/29/21
 //?         for first run, first time =Y, include orders shipping
 //?         <= 21 days out, and include all Sched override orders
 //?         for 2nd run, first time=N, include orders shipping
 //?         >21 days out.
 // LCL.Company Number = CON.*ZERO
 LCL.Company_Number = *ZERO;

 // LCL.Order Number = CON.*ZERO
 LCL.Order_Number = *ZERO;

 // LCL.Ship To Customer = CON.*ZERO
 LCL.Ship_To_Customer = *ZERO;

 //?USER: Process Data record

 //?03/22/24 DN OMS001-Reinstated Existing Logic which Matches PROD Source.
 //?CHG:  Order Number
 CASE;

 // IF LCL.Order Number NE DB1.Order Number
 IF LCL.Order_Number <> DB1.Order_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Guymon -  is it a production day?
 CASE;

 // IF LCL.Accounting Company is Guymon
 IF LCL.Accounting_Company = 360;

 CASE;

 // IF PAR.Production Day Sts 360 is yes
 IF PAR.Production_Day_Sts_360 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Seaboard Triumph -  is it a production day?
 CASE;

 // IF LCL.Accounting Company is Seaboard Triumph Foods
 IF LCL.Accounting_Company = 440;

 CASE;

 // IF PAR.Production Day Sts 440 is yes
 IF PAR.Production_Day_Sts_440 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Triumph - is it a production day?
 CASE;

 // IF LCL.Accounting Company is St. Joseph
 IF LCL.Accounting_Company = 960;

 CASE;

 // IF PAR.Production Day Sts 960 is yes
 IF PAR.Production_Day_Sts_960 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Rtv Shipping Method   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1848045;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Shipping_Method);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?If not Rail , must ship within 3 days prior or later
 CASE;

 // IF LCL.Shipping Method is Not Rail
 IF LCL.Shipping_Method = 'CT'/'PT';

 CASE;

 // IF DB1.Scheduled Ship Date LT PAR.Scheduled Ship Date USR
 IF DB1.Scheduled_Ship_Date < PAR.Scheduled_Ship_Date_USR;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Include rail orders up to 30 days past
 ENDIF;

 //?Set Save fields for selected order dtl
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // LCL.Company Number = DB1.Company Number
 LCL.Company_Number = DB1.Company_Number;

 // LCL.Order Number = DB1.Order Number
 LCL.Order_Number = DB1.Order_Number;

 // LCL.Ship To Customer = DB1.Ship To Customer
 LCL.Ship_To_Customer = DB1.Ship_To_Customer;

 EXECUTE FUNCTION(RTV Typ,Sts,Event,Ld  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1918044;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Date_of_Original_Entry);
 PARAMETER(LCL.Credit_Hold);
 PARAMETER(LCL.Production_Hold);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(LCL.Requested_Delivery_Time);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Export_Status);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Block_Order_Flag);
 PARAMETER(LCL.Time_of_Original_Entry);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Partial picked Y/N ?
 CASE;

 // IF LCL.Event Code is 03 Picked
 IF LCL.Event_Code = '03';

 // LCL.ODBS Partial Pick Sts = CND.Yes
 LCL.ODBS_Partial_Pick_Sts = 1;

 //?Partial picked Y/N ?
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ODBS Partial Pick Sts = CND.No
 LCL.ODBS_Partial_Pick_Sts = 2;

 ENDIF;

 //?Get Deadline from Load if assigned
 CASE;

 // IF LCL.Load ID is GT Zero
 IF LCL.Load_ID > *ZERO;

 EXECUTE FUNCTION(RTV for Build Sched   RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1919219;
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Load_Status);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?Get Deadline from Load if assigned
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Deadline Depart Date LH = DB1.Deadline Depart Date LH
 LCL.Deadline_Depart_Date_LH = DB1.Deadline_Depart_Date_LH;

 // LCL.Deadline Depart Time LH = DB1.Deadline Depart Time LH
 LCL.Deadline_Depart_Time_LH = DB1.Deadline_Depart_Time_LH;

 // LCL.Load Status = CND.*Blank
 LCL.Load_Status = *BLANK;

 ENDIF;

 //?Calc Deadline Depart DD/Tm if not on load or order
 CASE;

 // IF LCL.Deadline Depart Date LH is not entered
 IF LCL.Deadline_Depart_Date_LH = *ZERO;

 // OR LCL.Deadline Depart Time LH is not entered
 OR LCL.Deadline_Depart_Time_LH = *ZERO;

 //?E01523 RMC 5.02.2011 use req delv dt tm for ddt calc always
 // Call program CLC Deadln Depart Dt  XF.
 CALL PROGRAM(CLC Deadln Depart Dt  XF) ('POSCXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(LCL.Requested_Delivery_Time);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);

 //?Force req deliv date if it cant be calculated
 CASE;

 // IF LCL.Deadline Depart Date LH is not entered
 IF LCL.Deadline_Depart_Date_LH = *ZERO;

 // LCL.Deadline Depart Date LH = LCL.Requested Delivery Date
 LCL.Deadline_Depart_Date_LH = LCL.Requested_Delivery_Date;

 // LCL.Deadline Depart Time LH = LCL.Requested Delivery Time * CON.100 *
 LCL.Deadline_Depart_Time_LH = LCL.Requested_Delivery_Time * 100;

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(RTV Territory using St RT) TYPE(RTVOBJ) FILE(PDLWREP)          AC1494008;
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Territory_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 ENDIF;

 //?Reset Future orders to a HOLD sts and del all sched rcds 9/6/12
 CASE;

 // IF DB1.Scheduled Ship Date GT PAR.Production Date RGT
 IF DB1.Scheduled_Ship_Date > PAR.Production_Date_RGT;

 //?if order was alloc during the day .. then delete all rcds pertaining to
 //? it and reset as -0- sched and put on hold
 EXECUTE FUNCTION(Rtv & Dlt future ords RT) TYPE(RTVOBJ) FILE(PDKNCPP)           AC2050639;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Ord Detail Sched   DL) TYPE(DLTOBJ) FILE(PDKNCPP)          AC1385631;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 EXECUTE FUNCTION(Del OrdDtl Sch-Consmd RT) TYPE(RTVOBJ) FILE(POB6CPP)           AC1647987;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del OrdDtl Sch-Consmd DL) TYPE(DLTOBJ) FILE(POB6CPP)           AC1647985;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
  PARAMETER(DB1.ODS_Sequence_Number);
 }

 EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1647181;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   DL) TYPE(DLTOBJ) FILE(POB5CPP)           AC1647003;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Hdr/Prd Hld Sts    CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1410178;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('H');
 PARAMETER('Y');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?***03/22/24 DN OMS001-BEGIN Commented Out RC Changes for W85204.
 //?***03/22/24 DN OMS001-END Commented Out RC Changes for W85204.
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Process Record
 CASE;

 // IF LCL.Order Type - Sales is Regular Order
 IF LCL.Order_Type_Sales = 'OR';

 // OR LCL.Order Type - Sales is Transfer Order
 OR LCL.Order_Type_Sales = 'TR';

 CASE;

 // IF DB1.Detail Line Status is Conf/Comp/Canc
 IF DB1.Detail_Line_Status = 'X'/'C'/'R';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.OD Adj Type = CND.Order Allocate
 LCL.OD_Adj_Type = 'OA';

 CASE;

 // IF DB1.OD Adj Type Override is Alloc Inventory First
 IF DB1.OD_Adj_Type_Override = 'F';

 // LCL.OD Adj Type = CND.Order Allocate-Inv First
 LCL.OD_Adj_Type = 'OI';

 // IF DB1.OD Adj Type Override is Alloc Inventory Last
 IF DB1.OD_Adj_Type_Override = 'L';

 // LCL.OD Adj Type = CND.Order Allocate-Inv Last
 LCL.OD_Adj_Type = 'OL';

 // IF DB1.OD Adj Type Override is Freeze Time Override
 IF DB1.OD_Adj_Type_Override = 'Z';

 // LCL.OD Adj Type = CND.Order Alloc-Frz time over
 LCL.OD_Adj_Type = 'OF';

 // IF DB1.OD Adj Type Override is Freeze Time-Allow Old prd
 IF DB1.OD_Adj_Type_Override = 'O';

 // LCL.OD Adj Type = CND.Order Alloc-Frz old prod
 LCL.OD_Adj_Type = 'FO';

 ENDIF;

 // LCL.Chill Time USR = CON.*ZERO
 LCL.Chill_Time_USR = *ZERO;

 //?get chill time
 DO;

 EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(NLL.Description_Line_One);
 PARAMETER(NLL.UOM_Primary);
 PARAMETER(NLL.Unit_Weight);
 PARAMETER(NLL.Item_Structure_Class_Code);
 PARAMETER(NLL.Item_Structure_Group_Code);
 PARAMETER(NLL.Item_Structure_Type_Code);
 PARAMETER(NLL.Item_Type_Code);
 PARAMETER(NLL.Default_Warehouse);
 PARAMETER(LCL.Fresh_Chilling_Time);
 PARAMETER(NLL.Base_Conv_Loss_Item);
 PARAMETER(NLL.Variety_Rendered_Cut);
 PARAMETER(NLL.Credit_Item_Status);
 PARAMETER(NLL.Std_Weight_Head_Var_Ren);
 PARAMETER(NLL.Pieces_Per_Head);
 PARAMETER(NLL.Department_Code);
 PARAMETER(NLL.Group_for_Packaging);
 PARAMETER(NLL.Seconds_Item);
 PARAMETER(NLL.Piece_Count_Item);
 PARAMETER(NLL.Pieces_Per_Bag);
 PARAMETER(NLL.Bags_Per_Unit);
 PARAMETER(NLL.Export_Domestic);
 PARAMETER(NLL.Print_On_Schedule);
 PARAMETER(NLL.Fresh_Inv_Allocation_Seq);
 PARAMETER(NLL.Fresh_Sched_As_Ordered);
 PARAMETER(NLL.Frozen_Inv_Allocation_Seq);
 PARAMETER(NLL.Primal_Group_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Type);
 PARAMETER(NLL.Trans_Contol_AS400_Plant);
 PARAMETER(NLL.Warehouse_Location);
 PARAMETER(LCL.Warehouse_Std_Chill_Time);
 PARAMETER(LCL.Warehouse_Chill_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Line_One);
  PARAMETER(PAR.UOM_Primary);
  PARAMETER(PAR.Unit_Weight);
  PARAMETER(PAR.Item_Structure_Class_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Type_Code);
  PARAMETER(PAR.Default_Warehouse);
  PARAMETER(PAR.Fresh_Chilling_Time);
  PARAMETER(PAR.Base_Conv_Loss_Item);
  PARAMETER(PAR.Variety_Rendered_Cut);
  PARAMETER(PAR.Credit_Item_Status);
  PARAMETER(PAR.Std_Weight_Head_Var_Ren);
  PARAMETER(PAR.Pieces_Per_Head);
  PARAMETER(PAR.Department_Code);
  PARAMETER(PAR.Group_for_Packaging);
  PARAMETER(PAR.Seconds_Item);
  PARAMETER(PAR.Piece_Count_Item);
  PARAMETER(PAR.Pieces_Per_Bag);
  PARAMETER(PAR.Bags_Per_Unit);
  PARAMETER(PAR.Export_Domestic);
  PARAMETER(PAR.Print_On_Schedule);
  PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
  PARAMETER(PAR.Fresh_Sched_As_Ordered);
  PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
  PARAMETER(PAR.Primal_Group_Code);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.Warehouse_Type);
  PARAMETER(PAR.Trans_Contol_AS400_Plant);
  PARAMETER(PAR.Warehouse_Location);
  PARAMETER(PAR.Warehouse_Std_Chill_Time);
  PARAMETER(PAR.Warehouse_Chill_Time);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 CASE;

 // IF LCL.Warehouse Std Chill Time is yes
 IF LCL.Warehouse_Std_Chill_Time = 'Y';

 // LCL.Chill Time USR = LCL.Warehouse Chill Time
 LCL.Chill_Time_USR = LCL.Warehouse_Chill_Time;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Chill Time USR = LCL.Fresh Chilling Time
 LCL.Chill_Time_USR = LCL.Fresh_Chilling_Time;

 ENDIF;

 ENDDO;

 // Call program CLC PA Age FrmToDates XF.
 CALL PROGRAM(CLC PA Age FrmToDates XF) ('PNO7XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Chilling_Time_USR);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(LCL.Production_AgeDte_Fr);
 PARAMETER(LCL.Production_AgeDte_To);

 // LCL.OD Schedule Override Sts = DB1.OD Schedule Override Sts
 LCL.OD_Schedule_Override_Sts = DB1.OD_Schedule_Override_Sts;

 EXECUTE FUNCTION(Crt Order Det Bld Sch CR) TYPE(CRTOBJ) FILE(PME6CPP)           AC1918004;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(LCL.ODBS_Partial_Pick_Sts);
 PARAMETER(DB1.Detail_Line_Status);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Consumed_Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(DB1.Quantity_Scheduled);
 PARAMETER(DB1.Weight_Scheduled);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);
 PARAMETER(LCL.Warehouse_Type);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Export_Status);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Production_Hold);
 PARAMETER(LCL.Credit_Hold);
 PARAMETER(LCL.Load_Status);
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(LCL.Time_of_Original_Entry);
 PARAMETER(LCL.OD_Schedule_Override_Sts);
 PARAMETER(LCL.OD_Adj_Type);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(LCL.Production_AgeDte_Fr);
 PARAMETER(LCL.Production_AgeDte_To);
 PARAMETER(LCL.Block_Order_Flag);
 PARAMETER(LCL.ODBS_Status_2_2_size);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Territory_Code);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(WRK.BLANK);
 PARAMETER(WRK.BLANK);
 PARAMETER(WRK.BLANK);
 //?Delete if they exist per order that will be reallocated
 EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1647181;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   DL) TYPE(DLTOBJ) FILE(POB5CPP)           AC1647003;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 ENDIF;

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(UPS Crt Ord Dt Bld Sch2RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC2224113;
PARAMETER(960);
PARAMETER(LCL.Scheduled_Ship_Date);
PARAMETER(PAR.Production_Date_RGT);
PARAMETER(LCL.Production_Day_Sts_360);
PARAMETER(LCL.Production_Day_Sts_960);
PARAMETER(PAR.Scheduled_Ship_Date_USR);
PARAMETER(LCL.Production_Day_Sts_440);
{
 //?USER: Initialize routine

 //?***NOTE: This function was cloned from 'UPS Crt Ord Dt Bld SchRT -
 //?         Order Detail' but commented out work from W85204 RMC 9/29/21
 //?         for first run, first time =Y, include orders shipping
 //?         <= 21 days out, and include all Sched override orders
 //?         for 2nd run, first time=N, include orders shipping
 //?         >21 days out.
 // LCL.Company Number = CON.*ZERO
 LCL.Company_Number = *ZERO;

 // LCL.Order Number = CON.*ZERO
 LCL.Order_Number = *ZERO;

 // LCL.Ship To Customer = CON.*ZERO
 LCL.Ship_To_Customer = *ZERO;

 //?USER: Process Data record

 //?03/22/24 DN OMS001-Reinstated Existing Logic which Matches PROD Source.
 //?CHG:  Order Number
 CASE;

 // IF LCL.Order Number NE DB1.Order Number
 IF LCL.Order_Number <> DB1.Order_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(Rtv Acct Co          RT) TYPE(RTVOBJ) FILE(CAADREP)            AC1802492;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Guymon -  is it a production day?
 CASE;

 // IF LCL.Accounting Company is Guymon
 IF LCL.Accounting_Company = 360;

 CASE;

 // IF PAR.Production Day Sts 360 is yes
 IF PAR.Production_Day_Sts_360 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Seaboard Triumph -  is it a production day?
 CASE;

 // IF LCL.Accounting Company is Seaboard Triumph Foods
 IF LCL.Accounting_Company = 440;

 CASE;

 // IF PAR.Production Day Sts 440 is yes
 IF PAR.Production_Day_Sts_440 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Triumph - is it a production day?
 CASE;

 // IF LCL.Accounting Company is St. Joseph
 IF LCL.Accounting_Company = 960;

 CASE;

 // IF PAR.Production Day Sts 960 is yes
 IF PAR.Production_Day_Sts_960 = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Rtv Shipping Method   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1848045;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Shipping_Method);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?If not Rail , must ship within 3 days prior or later
 CASE;

 // IF LCL.Shipping Method is Not Rail
 IF LCL.Shipping_Method = 'CT'/'PT';

 CASE;

 // IF DB1.Scheduled Ship Date LT PAR.Scheduled Ship Date USR
 IF DB1.Scheduled_Ship_Date < PAR.Scheduled_Ship_Date_USR;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Include rail orders up to 30 days past
 ENDIF;

 //?Set Save fields for selected order dtl
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // LCL.Company Number = DB1.Company Number
 LCL.Company_Number = DB1.Company_Number;

 // LCL.Order Number = DB1.Order Number
 LCL.Order_Number = DB1.Order_Number;

 // LCL.Ship To Customer = DB1.Ship To Customer
 LCL.Ship_To_Customer = DB1.Ship_To_Customer;

 EXECUTE FUNCTION(RTV Typ,Sts,Event,Ld  RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1918044;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Date_of_Original_Entry);
 PARAMETER(LCL.Credit_Hold);
 PARAMETER(LCL.Production_Hold);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(LCL.Requested_Delivery_Time);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Export_Status);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Block_Order_Flag);
 PARAMETER(LCL.Time_of_Original_Entry);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Partial picked Y/N ?
 CASE;

 // IF LCL.Event Code is 03 Picked
 IF LCL.Event_Code = '03';

 // LCL.ODBS Partial Pick Sts = CND.Yes
 LCL.ODBS_Partial_Pick_Sts = 1;

 //?Partial picked Y/N ?
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.ODBS Partial Pick Sts = CND.No
 LCL.ODBS_Partial_Pick_Sts = 2;

 ENDIF;

 //?Get Deadline from Load if assigned
 CASE;

 // IF LCL.Load ID is GT Zero
 IF LCL.Load_ID > *ZERO;

 EXECUTE FUNCTION(RTV for Build Sched   RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1919219;
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Load_Status);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?Get Deadline from Load if assigned
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Deadline Depart Date LH = DB1.Deadline Depart Date LH
 LCL.Deadline_Depart_Date_LH = DB1.Deadline_Depart_Date_LH;

 // LCL.Deadline Depart Time LH = DB1.Deadline Depart Time LH
 LCL.Deadline_Depart_Time_LH = DB1.Deadline_Depart_Time_LH;

 // LCL.Load Status = CND.*Blank
 LCL.Load_Status = *BLANK;

 ENDIF;

 //?Calc Deadline Depart DD/Tm if not on load or order
 CASE;

 // IF LCL.Deadline Depart Date LH is not entered
 IF LCL.Deadline_Depart_Date_LH = *ZERO;

 // OR LCL.Deadline Depart Time LH is not entered
 OR LCL.Deadline_Depart_Time_LH = *ZERO;

 //?E01523 RMC 5.02.2011 use req delv dt tm for ddt calc always
 // Call program CLC Deadln Depart Dt  XF.
 CALL PROGRAM(CLC Deadln Depart Dt  XF) ('POSCXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Ship_To_City);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(LCL.Requested_Delivery_Time);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);

 //?Force req deliv date if it cant be calculated
 CASE;

 // IF LCL.Deadline Depart Date LH is not entered
 IF LCL.Deadline_Depart_Date_LH = *ZERO;

 // LCL.Deadline Depart Date LH = LCL.Requested Delivery Date
 LCL.Deadline_Depart_Date_LH = LCL.Requested_Delivery_Date;

 // LCL.Deadline Depart Time LH = LCL.Requested Delivery Time * CON.100 *
 LCL.Deadline_Depart_Time_LH = LCL.Requested_Delivery_Time * 100;

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(RTV Territory using St RT) TYPE(RTVOBJ) FILE(PDLWREP)          AC1494008;
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Territory_Code);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 ENDIF;

 //?Reset Future orders to a HOLD sts and del all sched rcds 9/6/12
 CASE;

 // IF DB1.Scheduled Ship Date GT PAR.Production Date RGT
 IF DB1.Scheduled_Ship_Date > PAR.Production_Date_RGT;

 //?if order was alloc during the day .. then delete all rcds pertaining to
 //? it and reset as -0- sched and put on hold
 EXECUTE FUNCTION(Rtv & Dlt future ords RT) TYPE(RTVOBJ) FILE(PDKNCPP)           AC2050639;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(DLT Ord Detail Sched   DL) TYPE(DLTOBJ) FILE(PDKNCPP)          AC1385631;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 EXECUTE FUNCTION(Del OrdDtl Sch-Consmd RT) TYPE(RTVOBJ) FILE(POB6CPP)           AC1647987;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del OrdDtl Sch-Consmd DL) TYPE(DLTOBJ) FILE(POB6CPP)           AC1647985;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
  PARAMETER(DB1.ODS_Sequence_Number);
 }

 EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1647181;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   DL) TYPE(DLTOBJ) FILE(POB5CPP)           AC1647003;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 EXECUTE FUNCTION(Chg Qty/Wgt Scheduled CH) TYPE(CHGOBJ) FILE(OPBGWKP)           AC1425232;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 EXECUTE FUNCTION(CHG Hdr/Prd Hld Sts    CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1410178;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER('H');
 PARAMETER('Y');
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // Call program TRG Order Hdr CHG Trig XT.
  CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Type_Sales);
  PARAMETER(DB1.AR_Customer_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Ship_To_Name);
  PARAMETER(DB1.Ship_To_Address_Line_1);
  PARAMETER(DB1.Ship_To_Address_Line_2);
  PARAMETER(DB1.Ship_To_Address_Line_3);
  PARAMETER(DB1.Ship_To_City);
  PARAMETER(DB1.Ship_To_State_Code);
  PARAMETER(DB1.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Bill_to_Customer);
  PARAMETER(DB1.Bill_to_Name);
  PARAMETER(DB1.Bill_to_Address_Line_1);
  PARAMETER(DB1.Bill_to_Address_Line_2);
  PARAMETER(DB1.Bill_to_Address_Line_3);
  PARAMETER(DB1.Bill_to_City);
  PARAMETER(DB1.Bill_to_State_Code);
  PARAMETER(DB1.Bill_to_Zip_Postal_Code);
  PARAMETER(DB1.Customer_Purchase_Order_#);
  PARAMETER(DB1.Order_Date);
  PARAMETER(DB1.Requested_Ship_Date);
  PARAMETER(DB1.Actual_Shipped_Date);
  PARAMETER(DB1.Cancel_Date);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Comment_Print_Acknowledge);
  PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
  PARAMETER(DB1.Comment_Print_Pick_Slip);
  PARAMETER(DB1.Comment_Print_Ship_Doc);
  PARAMETER(DB1.Reason_Code);
  PARAMETER(DB1.Order_in_Use);
  PARAMETER(DB1.Header_Status);
  PARAMETER(DB1.Header_Status_Last);
  PARAMETER(DB1.Order_Type_Print_Status);
  PARAMETER(DB1.Scheduled_Ship_Date);
  PARAMETER(DB1.User_Original_Entry);
  PARAMETER(DB1.Date_of_Original_Entry);
  PARAMETER(DB1.Order_Value_Total);
  PARAMETER(DB1.Order_Weight_Total);
  PARAMETER(DB1.Credit_Hold);
  PARAMETER(DB1.Production_Hold);
  PARAMETER(DB1.New_Customer_Hold);
  PARAMETER(DB1.Requested_Delivery_Date);
  PARAMETER(DB1.Requested_Delivery_Time);
  PARAMETER(DB1.Accounts_Receiv_Ent_1);
  PARAMETER(DB1.Accounts_Receiv_Ent_2);
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(DB1.LTL_Flag);
  PARAMETER(DB1.Price_Audit);
  PARAMETER(DB1.Price_Status);
  PARAMETER(DB1.Shipping_Method);
  PARAMETER(DB1.Export_Status);
  PARAMETER(DB1.Palletize);
  PARAMETER(DB1.Shrink_Wrap);
  PARAMETER(DB1.Slip_Sheet);
  PARAMETER(DB1.Age_Code);
  PARAMETER(DB1.Reefer_Temperature);
  PARAMETER(DB1.Load_Type);
  PARAMETER(DB1.Attach_to_Invoice_Number);
  PARAMETER(DB1.Load_Plan_Order);
  PARAMETER(DB1.Print_Pick_Slip);
  PARAMETER(DB1.Resell_Reference_Number);
  PARAMETER(DB1.Special_Comment_1);
  PARAMETER(DB1.Special_Comment_2);
  PARAMETER(DB1.Affect_Auto_Accruals);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Manager_Level_Code);
  PARAMETER(DB1.VP_Level_Code);
  PARAMETER(DB1.Attach_to_Order_Number);
  PARAMETER(DB1.Reason_for_Price_Audit);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(DB1.Invoice_Date);
  PARAMETER(DB1.Event_Code);
  PARAMETER(DB1.Trans_Contol_AS400_Plant);
  PARAMETER(DB1.Modified_Flag);
  PARAMETER(DB1.A_R_order_Value_Total);
  PARAMETER(DB1.Billing_Activity_Type);
  PARAMETER(DB1.Block_Order_Flag);
  PARAMETER(DB1.Order_Certification_Flag);
  PARAMETER(DB1.Invoice_Order_Value_Tot);
  PARAMETER(DB1.Process_Sts_for_3C);
  PARAMETER(DB1.Order_Conf_Fax_Sts);
  PARAMETER(DB1.Manifest_Fax_Sts);
  PARAMETER(DB1.Invoice_Fax_Sts);
  PARAMETER(DB1.Transfer_in_Storage_Ind);
  PARAMETER(DB1.Email_Cust_On_Order_Ship);
  PARAMETER(DB1.Order_Emailed);
  PARAMETER(DB1.Export_Docs_Go_w_Driver);
  PARAMETER(DB1.Shipping_Temp_Code_C_F);
  PARAMETER(DB1.Broker_Order_Status);
  PARAMETER(DB1.Air_Freight_Order);
  PARAMETER(DB1.Order_Requires_Review);
  PARAMETER(DB1.OH_Load_Plan_Ready);
  PARAMETER(DB1.Export_USDA_Approved);
  PARAMETER(DB1.HPB_Ship_to_Warehouse);
  PARAMETER(DB1.OH_TF_Exempt_Code);
  PARAMETER(DB1.OH_Appt_Confirmation_Dt);
  PARAMETER(DB1.JPN_Invoice_Issuance_Date);
  PARAMETER(DB1.Load_Actual_Shipped_Date);
  PARAMETER(DB1.Load_BOL_Complete_Date);
  PARAMETER(DB1.Load_Truck_Departure_Date);
  PARAMETER(DB1.Maximum_Gross_Weight);
  PARAMETER(DB1.Time_of_Original_Entry);
  PARAMETER(DB1.OH_Appt_Confirmation_Tm);
  PARAMETER(DB1.Load_BOL_Complete_Time);
  PARAMETER(DB1.Load_Truck_Departure_Time);
  PARAMETER(DB1.Act_Frt_Reference_Amount);
  PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
  PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
  PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
  PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
  PARAMETER(DB1.Claim_Number);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);

 }

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?***03/22/24 DN OMS001-BEGIN Commented Out RC Changes for W85204.
 //?***03/22/24 DN OMS001-END Commented Out RC Changes for W85204.
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Process Record
 CASE;

 // IF LCL.Order Type - Sales is Regular Order
 IF LCL.Order_Type_Sales = 'OR';

 // OR LCL.Order Type - Sales is Transfer Order
 OR LCL.Order_Type_Sales = 'TR';

 CASE;

 // IF DB1.Detail Line Status is Conf/Comp/Canc
 IF DB1.Detail_Line_Status = 'X'/'C'/'R';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.OD Adj Type = CND.Order Allocate
 LCL.OD_Adj_Type = 'OA';

 CASE;

 // IF DB1.OD Adj Type Override is Alloc Inventory First
 IF DB1.OD_Adj_Type_Override = 'F';

 // LCL.OD Adj Type = CND.Order Allocate-Inv First
 LCL.OD_Adj_Type = 'OI';

 // IF DB1.OD Adj Type Override is Alloc Inventory Last
 IF DB1.OD_Adj_Type_Override = 'L';

 // LCL.OD Adj Type = CND.Order Allocate-Inv Last
 LCL.OD_Adj_Type = 'OL';

 // IF DB1.OD Adj Type Override is Freeze Time Override
 IF DB1.OD_Adj_Type_Override = 'Z';

 // LCL.OD Adj Type = CND.Order Alloc-Frz time over
 LCL.OD_Adj_Type = 'OF';

 // IF DB1.OD Adj Type Override is Freeze Time-Allow Old prd
 IF DB1.OD_Adj_Type_Override = 'O';

 // LCL.OD Adj Type = CND.Order Alloc-Frz old prod
 LCL.OD_Adj_Type = 'FO';

 ENDIF;

 // LCL.Chill Time USR = CON.*ZERO
 LCL.Chill_Time_USR = *ZERO;

 //?get chill time
 DO;

 EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(NLL.Description_Line_One);
 PARAMETER(NLL.UOM_Primary);
 PARAMETER(NLL.Unit_Weight);
 PARAMETER(NLL.Item_Structure_Class_Code);
 PARAMETER(NLL.Item_Structure_Group_Code);
 PARAMETER(NLL.Item_Structure_Type_Code);
 PARAMETER(NLL.Item_Type_Code);
 PARAMETER(NLL.Default_Warehouse);
 PARAMETER(LCL.Fresh_Chilling_Time);
 PARAMETER(NLL.Base_Conv_Loss_Item);
 PARAMETER(NLL.Variety_Rendered_Cut);
 PARAMETER(NLL.Credit_Item_Status);
 PARAMETER(NLL.Std_Weight_Head_Var_Ren);
 PARAMETER(NLL.Pieces_Per_Head);
 PARAMETER(NLL.Department_Code);
 PARAMETER(NLL.Group_for_Packaging);
 PARAMETER(NLL.Seconds_Item);
 PARAMETER(NLL.Piece_Count_Item);
 PARAMETER(NLL.Pieces_Per_Bag);
 PARAMETER(NLL.Bags_Per_Unit);
 PARAMETER(NLL.Export_Domestic);
 PARAMETER(NLL.Print_On_Schedule);
 PARAMETER(NLL.Fresh_Inv_Allocation_Seq);
 PARAMETER(NLL.Fresh_Sched_As_Ordered);
 PARAMETER(NLL.Frozen_Inv_Allocation_Seq);
 PARAMETER(NLL.Primal_Group_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Type);
 PARAMETER(NLL.Trans_Contol_AS400_Plant);
 PARAMETER(NLL.Warehouse_Location);
 PARAMETER(LCL.Warehouse_Std_Chill_Time);
 PARAMETER(LCL.Warehouse_Chill_Time);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Description_Line_One);
  PARAMETER(PAR.UOM_Primary);
  PARAMETER(PAR.Unit_Weight);
  PARAMETER(PAR.Item_Structure_Class_Code);
  PARAMETER(PAR.Item_Structure_Group_Code);
  PARAMETER(PAR.Item_Structure_Type_Code);
  PARAMETER(PAR.Item_Type_Code);
  PARAMETER(PAR.Default_Warehouse);
  PARAMETER(PAR.Fresh_Chilling_Time);
  PARAMETER(PAR.Base_Conv_Loss_Item);
  PARAMETER(PAR.Variety_Rendered_Cut);
  PARAMETER(PAR.Credit_Item_Status);
  PARAMETER(PAR.Std_Weight_Head_Var_Ren);
  PARAMETER(PAR.Pieces_Per_Head);
  PARAMETER(PAR.Department_Code);
  PARAMETER(PAR.Group_for_Packaging);
  PARAMETER(PAR.Seconds_Item);
  PARAMETER(PAR.Piece_Count_Item);
  PARAMETER(PAR.Pieces_Per_Bag);
  PARAMETER(PAR.Bags_Per_Unit);
  PARAMETER(PAR.Export_Domestic);
  PARAMETER(PAR.Print_On_Schedule);
  PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
  PARAMETER(PAR.Fresh_Sched_As_Ordered);
  PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
  PARAMETER(PAR.Primal_Group_Code);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(PAR.Warehouse_Type);
  PARAMETER(PAR.Trans_Contol_AS400_Plant);
  PARAMETER(PAR.Warehouse_Location);
  PARAMETER(PAR.Warehouse_Std_Chill_Time);
  PARAMETER(PAR.Warehouse_Chill_Time);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

 }

 CASE;

 // IF LCL.Warehouse Std Chill Time is yes
 IF LCL.Warehouse_Std_Chill_Time = 'Y';

 // LCL.Chill Time USR = LCL.Warehouse Chill Time
 LCL.Chill_Time_USR = LCL.Warehouse_Chill_Time;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Chill Time USR = LCL.Fresh Chilling Time
 LCL.Chill_Time_USR = LCL.Fresh_Chilling_Time;

 ENDIF;

 ENDDO;

 // Call program CLC PA Age FrmToDates XF.
 CALL PROGRAM(CLC PA Age FrmToDates XF) ('PNO7XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.Chilling_Time_USR);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(LCL.Production_AgeDte_Fr);
 PARAMETER(LCL.Production_AgeDte_To);

 // LCL.OD Schedule Override Sts = DB1.OD Schedule Override Sts
 LCL.OD_Schedule_Override_Sts = DB1.OD_Schedule_Override_Sts;

 EXECUTE FUNCTION(Crt Order Det Bld Sch CR) TYPE(CRTOBJ) FILE(PME6CPP)           AC1918004;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(LCL.ODBS_Partial_Pick_Sts);
 PARAMETER(DB1.Detail_Line_Status);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Order_Type_Sales);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Consumed_Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Quantity_Ordered);
 PARAMETER(DB1.Weight_Ordered);
 PARAMETER(DB1.Quantity_Scheduled);
 PARAMETER(DB1.Weight_Scheduled);
 PARAMETER(LCL.Event_Code);
 PARAMETER(LCL.Deadline_Depart_Date_LH);
 PARAMETER(LCL.Deadline_Depart_Time_LH);
 PARAMETER(LCL.Warehouse_Type);
 PARAMETER(LCL.Load_ID);
 PARAMETER(LCL.Export_Status);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Production_Hold);
 PARAMETER(LCL.Credit_Hold);
 PARAMETER(LCL.Load_Status);
 PARAMETER(LCL.Carrier_Code);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(LCL.Time_of_Original_Entry);
 PARAMETER(LCL.OD_Schedule_Override_Sts);
 PARAMETER(LCL.OD_Adj_Type);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Requested_Delivery_Date);
 PARAMETER(DB1.Item_Age_Days);
 PARAMETER(DB1.Production_Ovr_AgeDte_Fr);
 PARAMETER(DB1.Production_Ovr_AgeDte_To);
 PARAMETER(LCL.Production_AgeDte_Fr);
 PARAMETER(LCL.Production_AgeDte_To);
 PARAMETER(LCL.Block_Order_Flag);
 PARAMETER(LCL.ODBS_Status_2_2_size);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(LCL.Ship_To_State_Code);
 PARAMETER(LCL.Territory_Code);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(WRK.BLANK);
 PARAMETER(WRK.BLANK);
 PARAMETER(WRK.BLANK);
 //?Delete if they exist per order that will be reallocated
 EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   RT) TYPE(RTVOBJ) FILE(POB5CPP)           AC1647181;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Del Ord Dtl Sch-Inv   DL) TYPE(DLTOBJ) FILE(POB5CPP)           AC1647003;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(DB1.OD_Production_Date);
 }

 ENDIF;

 ENDIF;

 ENDIF;

}


