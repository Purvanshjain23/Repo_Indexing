     H/TITLE Exc Calc Inv/Prd Vals XF  Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 12/20/17  Time  : 09:56:39
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPPBSCPLAIF  E           K        DISK
      * RSQ : Inventory Stock Closing   Group/WeekEnd/Item
      *
     FPMDNREL2IF  E           K        DISK
      * RSQ : Item Groups for TP Sales  Active Items Only
      *
     FPPBSCPL8IF  E           K        DISK
      * RSQ : Inventory Stock Closing   Group/WeekEnd/Item 2
      *
     FPPBSCPL4IF  E           K        DISK
      * RSQ : Inventory Stock Closing  Grp/WEDt/It-SEL Whs Prc>0
      *
     FPPBTCPL1IF  E           K        DISK
      * RTV : Inventory Value File      Retrieval index
      *
     FOMBYRELBIF  E           K        DISK
      * RSQ : Item Default              WIP Item/Item Code
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FPPBTCPL0IF  E           K        DISK                      A
      * UPD : Inventory Value File      Update index
      *
     E                    YDOW        7  1               *Days of week
     I@BSCPZC
      * Inventory Stock Closing   Group/WeekEnd/Item
      * Renamed input format fields
     I              BSAIDX                          WAAIDX
     I              BSB2C3                          WAB2C3
     I              BSGRAA                          WAGRAA
     I              BSEJC7                          WAEJC7
     I              BSV8SX                          WAV8SX
     I              BSGPAA                          WAGPAA
     I              BSGQAA                          WAGQAA
     I              BSW1SX                          WAW1SX
     I              BSF3PR                          WAF3PR
     I              BSBSNY                          WABSNY
     I              BSBTNY                          WABTNY
     I              BSBUNY                          WABUNY
     I              BSGSAA                          WAGSAA
     I              BSGTAA                          WAGTAA
     I              BSOEQT                          WAOEQT
     I              BSMQWG                          WAMQWG
     I              BSOFQT                          WAOFQT
     I              BSMRWG                          WAMRWG
     I              BSOGQT                          WAOGQT
     I              BSMXWG                          WAMXWG
     I              BSOHQT                          WAOHQT
     I              BSMSWG                          WAMSWG
     I              BSOWQT                          WAOWQT
     I              BSNAWG                          WANAWG
     I              BSOIQT                          WAOIQT
     I              BSMTWG                          WAMTWG
     I              BSOJQT                          WAOJQT
     I              BSMUWG                          WAMUWG
     I              BSOKQT                          WAOKQT
     I              BSMVWG                          WAMVWG
     I              BSOLQT                          WAOLQT
     I              BSMWWG                          WAMWWG
     I              BSFQVL                          WAFQVL
     I              BSOMQT                          WAOMQT
     I              BSMYWG                          WAMYWG
     I              BSONQT                          WAONQT
     I              BSMZWG                          WAMZWG
     I              BSOOQT                          WAOOQT
     I              BSM0WG                          WAM0WG
     I              BSDGVN                          WADGVN
     I              BSP9DT                          WAP9DT
     I              BSCTTM                          WACTTM
     I              BSOPQT                          WAOPQT
     I              BSM1WG                          WAM1WG
     I              BSOQQT                          WAOQQT
     I              BSM2WG                          WAM2WG
     I              BSORQT                          WAORQT
     I              BSM3WG                          WAM3WG
     I              BSOSQT                          WAOSQT
     I              BSM4WG                          WAM4WG
     I              BSRCNA                          WARCNA
     I              BSDFVN                          WADFVN
     I              BSP8DT                          WAP8DT
     I              BSCSTM                          WACSTM
     I              BSOTQT                          WAOTQT
     I              BSM5WG                          WAM5WG
     I              BSF4PR                          WAF4PR
     I              BSWBSX                          WAWBSX
     I              BSWNSX                          WAWNSX
     I              BSWOSX                          WAWOSX
     I              BSOUQT                          WAOUQT
     I              BSM6WG                          WAM6WG
     I              BSOVQT                          WAOVQT
     I              BSM7WG                          WAM7WG
     I              BSWCSX                          WAWCSX
     I              BSQADT                          WAQADT
     I              BSWDSX                          WAWDSX
     I              BSVSST                          WAVSST
     I              BSMJDT                          WAMJDT
     I              BSBETM                          WABETM
     I              BSCCVN                          WACCVN
     I              BSCDVN                          WACDVN
     I              BSMKDT                          WAMKDT
     I              BSBFTM                          WABFTM
     I              BSCEVN                          WACEVN
     I              BSCFVN                          WACFVN
      *
     I@DNRERW
      * Item Groups for TP Sales  Active Items Only
      * Renamed input format fields
     I              DNHGCD                          WBHGCD
     I              DNERC7                          WBERC7
     I              DNGQPC                          WBGQPC
     I              DNAVGA                          WBAVGA
     I              DNSLSA                          WBSLSA
     I              DNKFNY                          WBKFNY
     I              DNKGNY                          WBKGNY
     I              DNRNDT                          WBRNDT
     I              DNJUAA                          WBJUAA
     I              DNJVAA                          WBJVAA
     I              DNUVST                          WBUVST
     I              DNUWST                          WBUWST
     I              DNUXST                          WBUXST
     I              DNVSST                          WBVSST
     I              DNAATM                          WBAATM
     I              DNAYNA                          WBAYNA
     I              DNA0NA                          WBA0NA
     I              DNAXDT                          WBAXDT
      *
     I@BSCPI4
      * Inventory Stock Closing   Group/WeekEnd/Item 2
      * Renamed input format fields
     I              BSAIDX                          WCAIDX
     I              BSB2C3                          WCB2C3
     I              BSGRAA                          WCGRAA
     I              BSEJC7                          WCEJC7
     I              BSV8SX                          WCV8SX
     I              BSGPAA                          WCGPAA
     I              BSGQAA                          WCGQAA
     I              BSW1SX                          WCW1SX
     I              BSF3PR                          WCF3PR
     I              BSBSNY                          WCBSNY
     I              BSBTNY                          WCBTNY
     I              BSBUNY                          WCBUNY
     I              BSGSAA                          WCGSAA
     I              BSGTAA                          WCGTAA
     I              BSOEQT                          WCOEQT
     I              BSMQWG                          WCMQWG
     I              BSOFQT                          WCOFQT
     I              BSMRWG                          WCMRWG
     I              BSOGQT                          WCOGQT
     I              BSMXWG                          WCMXWG
     I              BSOHQT                          WCOHQT
     I              BSMSWG                          WCMSWG
     I              BSOWQT                          WCOWQT
     I              BSNAWG                          WCNAWG
     I              BSOIQT                          WCOIQT
     I              BSMTWG                          WCMTWG
     I              BSOJQT                          WCOJQT
     I              BSMUWG                          WCMUWG
     I              BSOKQT                          WCOKQT
     I              BSMVWG                          WCMVWG
     I              BSOLQT                          WCOLQT
     I              BSMWWG                          WCMWWG
     I              BSFQVL                          WCFQVL
     I              BSOMQT                          WCOMQT
     I              BSMYWG                          WCMYWG
     I              BSONQT                          WCONQT
     I              BSMZWG                          WCMZWG
     I              BSOOQT                          WCOOQT
     I              BSM0WG                          WCM0WG
     I              BSDGVN                          WCDGVN
     I              BSP9DT                          WCP9DT
     I              BSCTTM                          WCCTTM
     I              BSOPQT                          WCOPQT
     I              BSM1WG                          WCM1WG
     I              BSOQQT                          WCOQQT
     I              BSM2WG                          WCM2WG
     I              BSORQT                          WCORQT
     I              BSM3WG                          WCM3WG
     I              BSOSQT                          WCOSQT
     I              BSM4WG                          WCM4WG
     I              BSRCNA                          WCRCNA
     I              BSDFVN                          WCDFVN
     I              BSP8DT                          WCP8DT
     I              BSCSTM                          WCCSTM
     I              BSOTQT                          WCOTQT
     I              BSM5WG                          WCM5WG
     I              BSF4PR                          WCF4PR
     I              BSWBSX                          WCWBSX
     I              BSWNSX                          WCWNSX
     I              BSWOSX                          WCWOSX
     I              BSOUQT                          WCOUQT
     I              BSM6WG                          WCM6WG
     I              BSOVQT                          WCOVQT
     I              BSM7WG                          WCM7WG
     I              BSWCSX                          WCWCSX
     I              BSQADT                          WCQADT
     I              BSWDSX                          WCWDSX
     I              BSVSST                          WCVSST
     I              BSMJDT                          WCMJDT
     I              BSBETM                          WCBETM
     I              BSCCVN                          WCCCVN
     I              BSCDVN                          WCCDVN
     I              BSMKDT                          WCMKDT
     I              BSBFTM                          WCBFTM
     I              BSCEVN                          WCCEVN
     I              BSCFVN                          WCCFVN
      *
     I@BSCPB9
      * Inventory Stock Closing  Grp/WEDt/It-SEL Whs Prc>0
      * Renamed input format fields
     I              BSAIDX                          WDAIDX
     I              BSB2C3                          WDB2C3
     I              BSGRAA                          WDGRAA
     I              BSEJC7                          WDEJC7
     I              BSV8SX                          WDV8SX
     I              BSGPAA                          WDGPAA
     I              BSGQAA                          WDGQAA
     I              BSW1SX                          WDW1SX
     I              BSF3PR                          WDF3PR
     I              BSBSNY                          WDBSNY
     I              BSBTNY                          WDBTNY
     I              BSBUNY                          WDBUNY
     I              BSGSAA                          WDGSAA
     I              BSGTAA                          WDGTAA
     I              BSOEQT                          WDOEQT
     I              BSMQWG                          WDMQWG
     I              BSOFQT                          WDOFQT
     I              BSMRWG                          WDMRWG
     I              BSOGQT                          WDOGQT
     I              BSMXWG                          WDMXWG
     I              BSOHQT                          WDOHQT
     I              BSMSWG                          WDMSWG
     I              BSOWQT                          WDOWQT
     I              BSNAWG                          WDNAWG
     I              BSOIQT                          WDOIQT
     I              BSMTWG                          WDMTWG
     I              BSOJQT                          WDOJQT
     I              BSMUWG                          WDMUWG
     I              BSOKQT                          WDOKQT
     I              BSMVWG                          WDMVWG
     I              BSOLQT                          WDOLQT
     I              BSMWWG                          WDMWWG
     I              BSFQVL                          WDFQVL
     I              BSOMQT                          WDOMQT
     I              BSMYWG                          WDMYWG
     I              BSONQT                          WDONQT
     I              BSMZWG                          WDMZWG
     I              BSOOQT                          WDOOQT
     I              BSM0WG                          WDM0WG
     I              BSDGVN                          WDDGVN
     I              BSP9DT                          WDP9DT
     I              BSCTTM                          WDCTTM
     I              BSOPQT                          WDOPQT
     I              BSM1WG                          WDM1WG
     I              BSOQQT                          WDOQQT
     I              BSM2WG                          WDM2WG
     I              BSORQT                          WDORQT
     I              BSM3WG                          WDM3WG
     I              BSOSQT                          WDOSQT
     I              BSM4WG                          WDM4WG
     I              BSRCNA                          WDRCNA
     I              BSDFVN                          WDDFVN
     I              BSP8DT                          WDP8DT
     I              BSCSTM                          WDCSTM
     I              BSOTQT                          WDOTQT
     I              BSM5WG                          WDM5WG
     I              BSF4PR                          WDF4PR
     I              BSWBSX                          WDWBSX
     I              BSWNSX                          WDWNSX
     I              BSWOSX                          WDWOSX
     I              BSOUQT                          WDOUQT
     I              BSM6WG                          WDM6WG
     I              BSOVQT                          WDOVQT
     I              BSM7WG                          WDM7WG
     I              BSWCSX                          WDWCSX
     I              BSQADT                          WDQADT
     I              BSWDSX                          WDWDSX
     I              BSVSST                          WDVSST
     I              BSMJDT                          WDMJDT
     I              BSBETM                          WDBETM
     I              BSCCVN                          WDCCVN
     I              BSCDVN                          WDCDVN
     I              BSMKDT                          WDMKDT
     I              BSBFTM                          WDBFTM
     I              BSCEVN                          WDCEVN
     I              BSCFVN                          WDCFVN
      *
     I@BTCPA8
      * Inventory Value File      Update index
      * Renamed input format fields
     I              BTWQSX                          WEWQSX
     I              BTAJDX                          WEAJDX
     I              BTEKC7                          WEEKC7
     I              BTELC7                          WEELC7
     I              BTWHSX                          WEWHSX
     I              BTWFSX                          WEWFSX
     I              BTGUAA                          WEGUAA
     I              BTGVAA                          WEGVAA
     I              BTBVNY                          WEBVNY
     I              BTBWNY                          WEBWNY
     I              BTBXNY                          WEBXNY
     I              BTF5PR                          WEF5PR
     I              BTGWAA                          WEGWAA
     I              BTGXAA                          WEGXAA
     I              BTWISX                          WEWISX
     I              BTWJSX                          WEWJSX
     I              BTFSVL                          WEFSVL
     I              BTFTVL                          WEFTVL
     I              BTAKDX                          WEAKDX
     I              BTFUVL                          WEFUVL
     I              BTM8WG                          WEM8WG
     I              BTFVVL                          WEFVVL
     I              BTFWVL                          WEFWVL
     I              BTRGNA                          WERGNA
     I              BTFXVL                          WEFXVL
     I              BTWKSX                          WEWKSX
     I              BTFYVL                          WEFYVL
     I              BTRFNA                          WERFNA
     I              BTFZVL                          WEFZVL
     I              BTWLSX                          WEWLSX
     I              BTM9WG                          WEM9WG
     I              BTWPSX                          WEWPSX
     I              BTQDDT                          WEQDDT
     I              BTVSST                          WEVSST
     I              BTMJDT                          WEMJDT
     I              BTBETM                          WEBETM
     I              BTCCVN                          WECCVN
     I              BTCDVN                          WECDVN
     I              BTMKDT                          WEMKDT
     I              BTBFTM                          WEBFTM
     I              BTCEVN                          WECEVN
     I              BTCFVN                          WECFVN
      *
     I@BTCPA9
      * Inventory Value File      Retrieval index
      * Renamed input format fields
     I              BTWQSX                          WFWQSX
     I              BTAJDX                          WFAJDX
     I              BTEKC7                          WFEKC7
     I              BTELC7                          WFELC7
     I              BTWHSX                          WFWHSX
     I              BTWFSX                          WFWFSX
     I              BTGUAA                          WFGUAA
     I              BTGVAA                          WFGVAA
     I              BTBVNY                          WFBVNY
     I              BTBWNY                          WFBWNY
     I              BTBXNY                          WFBXNY
     I              BTF5PR                          WFF5PR
     I              BTGWAA                          WFGWAA
     I              BTGXAA                          WFGXAA
     I              BTWISX                          WFWISX
     I              BTWJSX                          WFWJSX
     I              BTFSVL                          WFFSVL
     I              BTFTVL                          WFFTVL
     I              BTAKDX                          WFAKDX
     I              BTFUVL                          WFFUVL
     I              BTM8WG                          WFM8WG
     I              BTFVVL                          WFFVVL
     I              BTFWVL                          WFFWVL
     I              BTRGNA                          WFRGNA
     I              BTFXVL                          WFFXVL
     I              BTWKSX                          WFWKSX
     I              BTFYVL                          WFFYVL
     I              BTRFNA                          WFRFNA
     I              BTFZVL                          WFFZVL
     I              BTWLSX                          WFWLSX
     I              BTM9WG                          WFM9WG
     I              BTWPSX                          WFWPSX
     I              BTQDDT                          WFQDDT
     I              BTVSST                          WFVSST
     I              BTMJDT                          WFMJDT
     I              BTBETM                          WFBETM
     I              BTCCVN                          WFCCVN
     I              BTCDVN                          WFCDVN
     I              BTMKDT                          WFMKDT
     I              BTBFTM                          WFBFTM
     I              BTCEVN                          WFCEVN
     I              BTCFVN                          WFCFVN
      *
     I@BYREBD
      * Item Default              WIP Item/Item Code
      * Renamed input format fields
     I              BYHGCD                          WGHGCD
     I              BYAVNA                          WGAVNA
     I              BYAWNA                          WGAWNA
     I              BYL7NA                          WGL7NA
     I              BYL8NA                          WGL8NA
     I              BYL6NA                          WGL6NA
     I              BYMFNA                          WGMFNA
     I              BYHHCD                          WGHHCD
     I              BYAWPC                          WGAWPC
     I              BYLXST                          WGLXST
     I              BYLGCD                          WGLGCD
     I              BYAXPC                          WGAXPC
     I              BYLYST                          WGLYST
     I              BYLHCD                          WGLHCD
     I              BYLICD                          WGLICD
     I              BYAIWG                          WGAIWG
     I              BYHICD                          WGHICD
     I              BYRBCD                          WGRBCD
     I              BYFZST                          WGFZST
     I              BYAVST                          WGAVST
     I              BYCZWG                          WGCZWG
     I              BYC0WG                          WGC0WG
     I              BYURTN                          WGURTN
     I              BYACC8                          WGACC8
     I              BYRINB                          WGRINB
     I              BYRHNB                          WGRHNB
     I              BYRGNB                          WGRGNB
     I              BYLNCD                          WGLNCD
     I              BYTFNB                          WGTFNB
     I              BYN0CD                          WGN0CD
     I              BYX4ST                          WGX4ST
     I              BYCHTM                          WGCHTM
     I              BYQZCD                          WGQZCD
     I              BYXWST                          WGXWST
     I              BYXXST                          WGXXST
     I              BYVMST                          WGVMST
     I              BYSWGH                          WGSWGH
     I              BYPPHE                          WGPPHE
     I              BYLRCD                          WGLRCD
     I              BYSFNB                          WGSFNB
     I              BYA3WG                          WGA3WG
     I              BYSJNB                          WGSJNB
     I              BYLLCD                          WGLLCD
     I              BYLMCD                          WGLMCD
     I              BYP3ST                          WGP3ST
     I              BYSKNB                          WGSKNB
     I              BYSLNB                          WGSLNB
     I              BYSMNB                          WGSMNB
     I              BYP4ST                          WGP4ST
     I              BYCFNB                          WGCFNB
     I              BYCGNB                          WGCGNB
     I              BYILNB                          WGILNB
     I              BYCHNB                          WGCHNB
     I              BYCINB                          WGCINB
     I              BYCJNB                          WGCJNB
     I              BYCMNB                          WGCMNB
     I              BYCNNB                          WGCNNB
     I              BYCRNB                          WGCRNB
     I              BYCSNB                          WGCSNB
     I              BYCVNB                          WGCVNB
     I              BYCWNB                          WGCWNB
     I              BYCXNB                          WGCXNB
     I              BYCZNB                          WGCZNB
     I              BYC0NB                          WGC0NB
     I              BYN1CD                          WGN1CD
     I              BYB4NB                          WGB4NB
     I              BYX5ST                          WGX5ST
     I              BYX6ST                          WGX6ST
     I              BYX7ST                          WGX7ST
     I              BYTMVA                          WGTMVA
     I              BYTNVA                          WGTNVA
     I              BYBLPR                          WGBLPR
     I              BYBMPR                          WGBMPR
     I              BYU9ST                          WGU9ST
     I              BYCMCO                          WGCMCO
     I              BYQ1CD                          WGQ1CD
     I              BYAIC3                          WGAIC3
     I              BYQ8CD                          WGQ8CD
     I              BYR3CD                          WGR3CD
     I              BYSDCD                          WGSDCD
     I              BYICN1                          WGICN1
     I              BYSVCD                          WGSVCD
     I              BYICN2                          WGICN2
     I              BYSWCD                          WGSWCD
     I              BYV2NB                          WGV2NB
     I              BYSXCD                          WGSXCD
     I              BYITCN                          WGITCN
     I              BYSYCD                          WGSYCD
     I              BYITC5                          WGITC5
     I              BYSZCD                          WGSZCD
     I              BYICN6                          WGICN6
     I              BYS0CD                          WGS0CD
     I              BYICN7                          WGICN7
     I              BYS1CD                          WGS1CD
     I              BYICN8                          WGICN8
     I              BYS2CD                          WGS2CD
     I              BYICN9                          WGICN9
     I              BYS3CD                          WGS3CD
     I              BYICN0                          WGICN0
     I              BYS4CD                          WGS4CD
     I              BYB5NB                          WGB5NB
     I              BYXRCD                          WGXRCD
     I              BYPCCT                          WGPCCT
     I              BYBDNB                          WGBDNB
     I              BYBJNB                          WGBJNB
     I              BYSUST                          WGSUST
     I              BYSVST                          WGSVST
     I              BYSYST                          WGSYST
     I              BYSZST                          WGSZST
     I              BYS1ST                          WGS1ST
     I              BYXTCD                          WGXTCD
     I              BYXUCD                          WGXUCD
     I              BYF5WG                          WGF5WG
     I              BYF6WG                          WGF6WG
     I              BYF7WG                          WGF7WG
     I              BYBLNB                          WGBLNB
     I              BYBNNB                          WGBNNB
     I              BYS2ST                          WGS2ST
     I              BYS4ST                          WGS4ST
     I              BYS5ST                          WGS5ST
     I              BYS6ST                          WGS6ST
     I              BYS8ST                          WGS8ST
     I              BYS9ST                          WGS9ST
     I              BYTCST                          WGTCST
     I              BYTDST                          WGTDST
     I              BYUVST                          WGUVST
     I              BYUWST                          WGUWST
     I              BYUXST                          WGUXST
     I              BYVSST                          WGVSST
     I              BYAHTM                          WGAHTM
     I              BYBEVN                          WGBEVN
     I              BYBFVN                          WGBFVN
     I              BYEKDT                          WGEKDT
      *
     I@ADRET1
      * Warehouse                 Active records only
      * Renamed input format fields
     I              ADAJCD                          WHAJCD
     I              ADF8NA                          WHF8NA
     I              ADACNA                          WHACNA
     I              ADADNA                          WHADNA
     I              ADAENA                          WHAENA
     I              ADAJNA                          WHAJNA
     I              ADBTTX                          WHBTTX
     I              ADAOCD                          WHAOCD
     I              ADBGCD                          WHBGCD
     I              ADVHST                          WHVHST
     I              ADMPNA                          WHMPNA
     I              ADWPST                          WHWPST
     I              ADXUST                          WHXUST
     I              ADT0ST                          WHT0ST
     I              ADT1ST                          WHT1ST
     I              ADDBNB                          WHDBNB
     I              ADT2ST                          WHT2ST
     I              ADT3ST                          WHT3ST
     I              ADT4ST                          WHT4ST
     I              ADT6ST                          WHT6ST
     I              ADBWC3                          WHBWC3
     I              ADBTC3                          WHBTC3
     I              ADBUC3                          WHBUC3
     I              ADBVC3                          WHBVC3
     I              ADFCAA                          WHFCAA
     I              ADRQSX                          WHRQSX
     I              ADRRSX                          WHRRSX
     I              ADRSSX                          WHRSSX
     I              ADRTSX                          WHRTSX
     I              ADT7ST                          WHT7ST
     I              ADT8ST                          WHT8ST
     I              ADRNSX                          WHRNSX
     I              ADROSX                          WHROSX
     I              ADRPSX                          WHRPSX
     I              ADUVST                          WHUVST
     I              ADUWST                          WHUWST
     I              ADUXST                          WHUXST
     I              ADVSST                          WHVSST
     I              ADAATM                          WHAATM
     I              ADAYNA                          WHAYNA
     I              ADA0NA                          WHA0NA
     I              ADAXDT                          WHAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
     IQPPBT1    E DSPPBTCPL0
      * UPD : Inventory Value File      Update index
      * Renamed input format fields
     I              BTWQSX                          WEWQSX
     I              BTAJDX                          WEAJDX
     I              BTEKC7                          WEEKC7
     I              BTELC7                          WEELC7
     I              BTWHSX                          WEWHSX
     I              BTWFSX                          WEWFSX
     I              BTGUAA                          WEGUAA
     I              BTGVAA                          WEGVAA
     I              BTBVNY                          WEBVNY
     I              BTBWNY                          WEBWNY
     I              BTBXNY                          WEBXNY
     I              BTF5PR                          WEF5PR
     I              BTGWAA                          WEGWAA
     I              BTGXAA                          WEGXAA
     I              BTWISX                          WEWISX
     I              BTWJSX                          WEWJSX
     I              BTFSVL                          WEFSVL
     I              BTFTVL                          WEFTVL
     I              BTAKDX                          WEAKDX
     I              BTFUVL                          WEFUVL
     I              BTM8WG                          WEM8WG
     I              BTFVVL                          WEFVVL
     I              BTFWVL                          WEFWVL
     I              BTRGNA                          WERGNA
     I              BTFXVL                          WEFXVL
     I              BTWKSX                          WEWKSX
     I              BTFYVL                          WEFYVL
     I              BTRFNA                          WERFNA
     I              BTFZVL                          WEFZVL
     I              BTWLSX                          WEWLSX
     I              BTM9WG                          WEM9WG
     I              BTWPSX                          WEWPSX
     I              BTQDDT                          WEQDDT
     I              BTVSST                          WEVSST
     I              BTMJDT                          WEMJDT
     I              BTBETM                          WEBETM
     I              BTCCVN                          WECCVN
     I              BTCDVN                          WECDVN
     I              BTMKDT                          WEMKDT
     I              BTBFTM                          WEBFTM
     I              BTCEVN                          WECEVN
     I              BTCFVN                          WECFVN
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Inventory Value File
      * I :  IVF Valuation Grouping
     I                                        1   1 P1WQSX
      * I :  IVF Week Ending Date
     I                                    P   2   60P1AJDX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1WQSX    PARM           WP0001  1        IVF Valuation G
     C           P1AJDX    PARM           WP0002  80       IVF Week Ending
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Exc Calc Inv/Prd Vals XF
      * INV100
      * 1. Create Inventory Value records from previous week with a
      *    new Curr Week price based on the overrides, whse price,or meth
      * A. Use the Price Overrides if > 0 for Prod and Inv Curr Wk prices
      *     If override is pulled forward, set the sts to Unapproved
      * B. Inv and Prod Value Methods are what they were the previous wee
      * C. A Warehouse price for an item overrides the Inv Value method p
      * D. The Market Price/LB is a weighted avg calculated by:
      *         SUM (End inv * avg market price for the week)
      *                / tot end inv all whses
      * E. Production Value Calcs to get Curr Wk Prod Value
      * F. Inventory Value Calcs to get Curr Wk Inv Value
      * R9083 02/14/17 DN-Added RST by IVF Valuation Grouping.
      * Rtv Crt Inv Valu Rcds RT - Inventory Stock Closing  * 
     C                     EXSR SARVGN
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Crt Inv Valu Rcds RT - Inventory Stock Closing  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  30       ISC Warehouse C
     C                     Z-ADD*ZERO     WN0002 112       ISC Shipment Fi
     C                     Z-ADD*ZERO     WN0003 112       ISC Shipment Fi
     C                     Z-ADD*ZERO     WN0004 112       ISC FOB Gross A
     C                     Z-ADD*ZERO     WN0005 112       ISC Ending Inve
     C                     Z-ADD*ZERO     WN0006 112       ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0007  80       IVF Week Ending
     C                     Z-ADD*ZERO     WN0008  70       IVF Item Code
     C                     Z-ADD*ZERO     WN0009  70       IVF WIP - FG It
     C                     MOVEL*BLANK    WN0010  3        IVF Item Type
     C                     MOVEL*BLANK    WN0011  2        IVF Unused Sts
     C                     MOVEL*BLANK    WN0012  7        IVF Item Cmdty
     C                     MOVEL*BLANK    WN0013  3        IVF Item Dft Cm
     C                     Z-ADD*ZERO     WN0014  30       IVF Item Struct
     C                     Z-ADD*ZERO     WN0015  30       IVF Item Struct
     C                     Z-ADD*ZERO     WN0016  30       IVF Item Struct
     C                     Z-ADD*ZERO     WN0017 114       IVF Item Market
     C                     MOVEL*BLANK    WN0018  3        IVF Item G/L Su
     C                     MOVEL*BLANK    WN0019  2        IVF Item U/M -
     C                     MOVEL*BLANK    WN0020  1        IVF Inventory V
     C                     MOVEL*BLANK    WN0021  1        IVF Production
     C                     Z-ADD*ZERO     WN0022  94       IVF Sales Price
     C                     Z-ADD*ZERO     WN0023  80       IVF Sales Price
     C                     Z-ADD*ZERO     WN0024  94       IVF Market Pric
     C                     Z-ADD*ZERO     WN0025 112       IVF Warehouse P
     C                     Z-ADD*ZERO     WN0026  94       IVF Warehouse P
     C                     Z-ADD*ZERO     WN0027  94       IVF Ovrrde Prod
     C                     MOVEL*BLANK    WN0028 60        IVF Ovrrde Prod
     C                     Z-ADD*ZERO     WN0029  94       IVF Curr Wk Pro
     C                     MOVEL*BLANK    WN0030  1        IVF Curr Wk Pro
     C                     Z-ADD*ZERO     WN0031  94       IVF Ovrrde Inv
     C                     MOVEL*BLANK    WN0032 60        IVF Ovrrde Inv
     C                     Z-ADD*ZERO     WN0033  94       IVF Cur Wk Inv
     C                     MOVEL*BLANK    WN0034  1        IVF Cur Wk Inv
     C                     Z-ADD*ZERO     WN0035 156       Calc Work Field
     C                     Z-ADD*ZERO     WN0036 154       Price * Weight
     C                     Z-ADD*ZERO     WN0037  70       Market Price Da
     C                     Z-ADD*ZERO     WN0038 112       Pounds
     C                     MOVEL*BLANK    WN0039  1        Trans Contol AS
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       WUTAST           First Time Flag
      * Last week's week ending date
      * LCL.IVF Week Ending Date = PAR.ISC Week Ending Date + CON.-7 *DAY
     C           P1AJDX    SUB  18000000  XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-7        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0001
     C                     ELSE
     C           XDINDT    ADD  18000000  YL0001
     C                     END
      * YYYYMMDD to CYYMMDD
      * PAR.Market Price Date = PAR.ISC Week Ending Date
     C           P1AJDX    IFEQ *ZERO
     C                     Z-ADD*ZERO     WN0037
     C                     ELSE
     C           P1AJDX    SUB  19000000  WN0037           Market Price Da
     C                     END
      * R9083 02/15/17 DN-JRD Inv Price Master is Now Commented Out. Inz
      * CASE: *OTHERWISE
     C                     Z-ADD0         WUF6VL           Aggregt Net Pro
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAWCSX    WQSA01           ISC Valuation G
     C           *LIKE     DEFN WAAIDX    WQSA02           ISC Week Ending
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           ISC Valuation G
     C                     KFLD           WQSA02           ISC Week Ending
      * Setup key
     C                     MOVELP1WQSX    WQSA01           ISC Valuation G
     C                     Z-ADDP1AJDX    WQSA02           ISC Week Ending
      * Establish starting position
     C           KRSSA     SETLL@BSCPZC                    *
     C           KRSSA     READE@BSCPZC                  90*
      * Data record not found
     C   90                MOVEL'USR3529' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * ***************************************************
      * Create Inventory Value Record on Item Code Break
      * CASE: DB1.ISC Item Code NE PAR.IVF Item Code
     C           WAEJC7    IFNE WN0008                     *IF
      * Create Record if not 1st time
      * CASE: WRK.First Time Flag is NO
     C           WUTAST    IFEQ 'N'                        *IF
      * If Warehouse Lbs > 0, then Calc Wghted Avg for Whse price/lb
      * CASE: PAR.IVF Warehouse Pounds is Not equal zero
     C           WN0025    IFNE 0                          *IF
      * Compute: Whse price/cwt
      * PAR.IVF Warehouse Price/CWT =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : PAR.Calc Work Field 15,6 USR
      * /     : PGM.*Synon (15,5) work field *
      * x2    : PAR.IVF Warehouse Pounds
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WN0035    DIV  WN0025    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0026           IVF Warehouse P
     C                     END                             *FI
      * If End Inv Lbs > 0, then Calc Wghted Avg for Market Price
      * CASE: PAR.Pounds is Not Zeros
     C           WN0038    IFNE 0                          *IF
      * Compute:Ivg mkt price cwt
      * PAR.IVF Market Price/CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : PAR.Price * Weight USR
      * /     : PGM.*Synon (17,7) work field *
      * x2    : PAR.Pounds
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WN0036    DIV  WN0038    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0024           IVF Market Pric
     C                     END                             *FI
      * **************************************************
      * Sales Price:  Temp from Sales History  or  last week's price
      *               After TF Installs, from TFP010 or last week's price
      * Temp: until TF installed
      * CASE: PAR.ISC Shipment Final Lbs is Not equal zero
     C           WN0003    IFNE 0                          *IF
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Item U/M - Pricing is NE Each
      *   |- c2    : PAR.IVF Item U/M - Pricing is NE Headset
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0019    IFNE 'EA'                       *IF
     C           WN0019    IFNE 'HS'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Compute Aggr Net Prod rev
      * WRK.Aggregt Net Prod Rev Prc =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : PAR.ISC FOB Gross Amount
      * /     : PGM.*Synon (17,7) work field *
      * x2    : PAR.ISC Shipment Final Lbs
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WN0004    DIV  WN0003    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUF6VL           Aggregt Net Pro
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.ISC Shipment Final Qty is not equal zero
     C           WN0002    IFNE 0                          *IF
      * Compute Aggr Net Prod rev
      * WRK.Aggregt Net Prod Rev Prc =
      *    *COMPUTE ((x1 / x2)*x3)
      * x1    : PAR.ISC FOB Gross Amount
      * /     : PGM.*Synon (17,7) work field *
      * x2    : PAR.ISC Shipment Final Qty
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WN0004    DIV  WN0002    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUF6VL           Aggregt Net Pro
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WUF6VL           Aggregt Net Pro
     C                     END                             *FI
      * For Dailys -- get cost from JRINPRI file, which will be empty in
     C                     Z-ADDWN0008    WUGTNY           ITEM NUMBER
      * R9083 02/15/17 DN-Commented out reference to JRD Inv Price Master
      * Temp:  If Sales Hist is zero,  use prev wk sales price,Dt
      * CASE: WRK.Aggregt Net Prod Rev Prc is eq 0
     C           WUF6VL    IFEQ 0                          *IF
     C                     Z-ADDYL0002    WN0022           IVF Sales Price
     C                     Z-ADDYL0003    WN0023           IVF Sales Price
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDWUF6VL    WN0022           IVF Sales Price
     C                     Z-ADDWN0007    WN0023           IVF Sales Price
     C                     END                             *FI
      * **************************************************
      * Production Value: Use Prod Override if >0 and Approved
      *    else Use price assoc. with the Prod Value Method
      * Curr Week Prod Value = override or price asso with prod value met
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Ovrrde Prod Price/CWT is Entered
      *   |- c2    : PAR.IVF Curr Wk Prod Status is Approved
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0027    IFNE 0                          *IF
     C           WN0030    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADDWN0027    WN0029           IVF Curr Wk Pro
     C                     MOVEL'U'       WN0030           IVF Curr Wk Pro
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.IVF Production Value Mthd is Sales
     C           WN0021    IFEQ 'S'                        *IF
     C                     Z-ADDWN0022    WN0029           IVF Curr Wk Pro
      * If Sales Date older than 90 days, set sts to Unapproved
     C                     MOVEL*BLANK    WUULTX           Day of the Week
     C                     MOVELWN0023    WUULTX           Day of the Week
     C                     Z-ADD6         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00009
     C           ZQ        ORGT 00009
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUULTX:ZQ WUT7TX    P  90  Date (Char-6) U
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD*ZEROS    ZQ      50
     C           '1'       CAT  WUT7TX:ZQ WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    WUMBDT           Date
      * WRK.Days = JOB.*Job date - WRK.Date                  USR *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WUMBDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
      * CASE: WRK.Days is GT 90
     C           WUNPNX    IFGT 90                         *IF
     C                     MOVEL'U'       WN0030           IVF Curr Wk Pro
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.IVF Production Value Mthd is Market
     C           WN0021    IFEQ 'M'                        *IF
     C                     Z-ADDWN0024    WN0029           IVF Curr Wk Pro
     C                     ELSE
      * CASE: PAR.IVF Production Value Mthd is Formula
     C           WN0021    IFEQ 'F'                        *IF
      * E01452 RMC - added
      * R9083 02/14/17 DN-Modified to add IVF Valuation Grouping as input
      * Rtv to CLC TP Sale IVFRT - Item Groups for TP Sales  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0008    WL0001           Item Code
     C                     Z-ADDWN0007    WL0002           IVF Week Ending
     C                     Z-ADDWN0008    WL0003           IVF Item Code
     C                     MOVELP1WQSX    WL0004    P      IVF Valuation G
     C                     Z-ADDYL0004    WL0005           Weight Billed
     C                     Z-ADDYL0005    WL0006           FOB Gross Amoun
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    YL0004           Weight Billed
     C                     Z-ADDWL0006    YL0005           FOB Gross Amoun
      * Calc IVF Curr Wk Prod Price/CW
      * CASE: LCL.Weight Billed is Greater than zero
     C           YL0004    IFGT 0                          *IF
      * Compute:Curr Wk Prod Pric
      * PAR.IVF Curr Wk Prod Price/CW =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : LCL.FOB Gross Amount
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Weight Billed
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           YL0005    DIV  YL0004    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0029           IVF Curr Wk Pro
     C                     ELSE
      * CASE: *OTHERWISE
      * use the sales price
     C                     Z-ADDWN0022    WN0029           IVF Curr Wk Pro
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Set: Curr Wk Prod Status to Unapproved... If ...
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Warehouse Price/CWT is Entered
      *   |- c2    : PAR.Trans Contol AS400/Plant is Plant
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0026    IFNE 0                          *IF
     C           WN0039    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Warehouse price exists and plant controlled (affect prod is Yes)
     C                     MOVEL'U'       WN0030           IVF Curr Wk Pro
     C                     END                             *FI
      * **************************************************
      * Inventory Value: Use Inv Override if >0 and Approved
      *    else If Warehouse prices exist, calc the price per those lbs
      *    and sub the Warehouse lbs from the Ending Inv lbs.(Can be mult
      *    Then multiply the remaining Ending Inv Lbs by the Default valu
      *    method's price to get the $$ asso with the value method.
      *    Add the (Whse price * warehouse lbs) to the above $$ Total
      *    Divide the $$ Total by the End Inv lbs to get the value per lb
      * Curr Week Inv Value = override or price asso with inv value metho
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Ovrrde Inv Val Prc/CW is Entered
      *   |- c2    : PAR.IVF Cur Wk Inv Val Status is Approved
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0031    IFNE 0                          *IF
     C           WN0034    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADDWN0031    WN0033           IVF Cur Wk Inv
     C                     MOVEL'U'       WN0034           IVF Cur Wk Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * Calc: IVF Cur Wk Inv Val Prc/CW per Inv Value Method
      * CASE: PAR.IVF Inventory Value Mthd is Sales
     C           WN0020    IFEQ 'S'                        *IF
     C                     Z-ADDWN0022    WN0033           IVF Cur Wk Inv
      * If Sales Date older than 90 days, set sts to Unapproved
     C                     MOVEL*BLANK    WUULTX           Day of the Week
     C                     MOVELWN0023    WUULTX           Day of the Week
     C                     Z-ADD6         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00009
     C           ZQ        ORGT 00009
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUULTX:ZQ WUT7TX    P  90  Date (Char-6) U
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD*ZEROS    ZQ      50
     C           '1'       CAT  WUT7TX:ZQ WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    WUMBDT           Date
      * WRK.Days = JOB.*Job date - WRK.Date                  USR *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WUMBDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
      * CASE: WRK.Days is GT 90
     C           WUNPNX    IFGT 90                         *IF
     C                     MOVEL'U'       WN0034           IVF Cur Wk Inv
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.IVF Inventory Value Mthd is Market
     C           WN0020    IFEQ 'M'                        *IF
     C                     Z-ADDWN0024    WN0033           IVF Cur Wk Inv
     C                     ELSE
      * CASE: PAR.IVF Inventory Value Mthd is Formula
     C           WN0020    IFEQ 'F'                        *IF
      * E01452 RMC - added
      * R9083 02/14/17 DN-Modified to add IVF Valuation Grouping as input
      * Rtv to CLC TP Sale IVFRT - Item Groups for TP Sales  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0008    WL0001           Item Code
     C                     Z-ADDWN0007    WL0002           IVF Week Ending
     C                     Z-ADDWN0008    WL0003           IVF Item Code
     C                     MOVELP1WQSX    WL0004    P      IVF Valuation G
     C                     Z-ADDYL0004    WL0005           Weight Billed
     C                     Z-ADDYL0005    WL0006           FOB Gross Amoun
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    YL0004           Weight Billed
     C                     Z-ADDWL0006    YL0005           FOB Gross Amoun
      * Calc IVF Cur Wk Inv Val Prc/CW
      * CASE: LCL.Weight Billed is Greater than zero
     C           YL0004    IFGT 0                          *IF
      * Compute:Curr Wk Inv Pric
      * PAR.IVF Cur Wk Inv Val Prc/CW =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : LCL.FOB Gross Amount
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Weight Billed
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           YL0005    DIV  YL0004    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0033           IVF Cur Wk Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * use the sales price
     C                     Z-ADDWN0022    WN0033           IVF Cur Wk Inv
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If Warehouse lbs > 0, calc those lbs at the whse prices, and accu
      * CASE: PAR.IVF Warehouse Pounds is Greater than zero
     C           WN0025    IFGT 0                          *IF
     C                     Z-ADDWN0006    WUM0WG           ISC Ending Inve
      * R9083 02/15/17 DN-Modified to also RST by Inv Valuation Grouping.
      * Rtv Calc Whse Prc-IVF RT - Inventory Stock Closing  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1WQSX    WL0007    P      ISC Valuation G
     C                     Z-ADDWN0007    WL0008           ISC Week Ending
     C                     Z-ADDWN0008    WL0009           ISC Item Code
     C                     Z-ADDWUF3VL    WL0010           Warehouse Value
     C                     Z-ADDWUM0WG    WL0011           ISC Ending Inve
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0010    WUF3VL           Warehouse Value
     C                     Z-ADDWL0011    WUM0WG           ISC Ending Inve
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WUF3VL           Warehouse Value
     C                     Z-ADDWN0006    WUM0WG           ISC Ending Inve
     C                     END                             *FI
      * Compute:Inv val mthd $$
      * WRK.Inventory Value Method $$ =
      *    *COMPUTE (x1 * (x2/x3))
      * x1    : WRK.ISC Ending Inventory Lbs
      * *     : WRK.Inventory Value Method $$ = WRK.ISC Ending Inventory
      * x2    : PAR.IVF Cur Wk Inv Val Prc/CW
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WN0033    DIV  100       W0WD00           *Synon (17,7) w
     C           WUM0WG    MULT W0WD00    WUF4VL           Inventory Value
     C                     Z-ADDWUF4VL    WUF4VL           Inventory Value
     C                     ADD  WUF3VL    WUF4VL           Inventory Value
      * New since 4/2/08  S00184
      * CASE: PAR.ISC End Inv Final Lbs is Not equal zero
     C           WN0006    IFNE 0                          *IF
      * Compute: Cur Wk Inv Val P
      * PAR.IVF Cur Wk Inv Val Prc/CW =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Inventory Value Method $$
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : PAR.ISC End Inv Final Lbs
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUF4VL    DIV  WN0006    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0033           IVF Cur Wk Inv
     C                     END                             *FI
     C                     END                             *FI
      * Set: Curr Wk Inv Valu Status to Unapproved.. if ...
      * CASE: PAR.IVF Warehouse Price/CWT is Entered
     C           WN0026    IFNE 0                          *IF
     C                     MOVEL'U'       WN0034           IVF Cur Wk Inv
     C                     END                             *FI
      * **************************************************
      * **************************************************
      * R9083 02/14/17 DN-Modified to Set IVF Valuation Grouping.
      * Crt Inventory Value   CR - Inventory Value File  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1WQSX    WL0012    P      IVF Valuation G
     C                     Z-ADDWN0007    WL0013           IVF Week Ending
     C                     Z-ADDWN0008    WL0014           IVF Item Code
     C                     Z-ADDWN0009    WL0015           IVF WIP - FG It
     C                     MOVELWN0010    WL0016    P      IVF Item Type
     C                     MOVELWN0011    WL0017    P      IVF Unused Sts
     C                     MOVELWN0012    WL0018    P      IVF Item Cmdty
     C                     MOVELWN0013    WL0019    P      IVF Item Dft Cm
     C                     Z-ADDWN0014    WL0020           IVF Item Struct
     C                     Z-ADDWN0015    WL0021           IVF Item Struct
     C                     Z-ADDWN0016    WL0022           IVF Item Struct
     C                     Z-ADDWN0017    WL0023           IVF Item Market
     C                     MOVELWN0018    WL0024    P      IVF Item G/L Su
     C                     MOVELWN0019    WL0025    P      IVF Item U/M -
     C                     MOVELWN0020    WL0026    P      IVF Inventory V
     C                     MOVELWN0021    WL0027    P      IVF Production
     C                     Z-ADDYL0006    WL0028           IVF Beg Inv Pri
     C                     Z-ADDWN0022    WL0029           IVF Sales Price
     C                     Z-ADDWN0023    WL0030           IVF Sales Price
     C                     Z-ADDWN0024    WL0031           IVF Market Pric
     C                     Z-ADDWN0025    WL0032           IVF Warehouse P
     C                     Z-ADDWN0026    WL0033           IVF Warehouse P
     C                     Z-ADDWN0027    WL0034           IVF Ovrrde Prod
     C                     MOVELWN0028    WL0035    P      IVF Ovrrde Prod
     C                     Z-ADDWN0029    WL0036           IVF Curr Wk Pro
     C                     MOVELWN0030    WL0037    P      IVF Curr Wk Pro
     C                     Z-ADDWN0031    WL0038           IVF Ovrrde Inv
     C                     MOVELWN0032    WL0039    P      IVF Ovrrde Inv
     C                     Z-ADDWN0033    WL0040           IVF Cur Wk Inv
     C                     MOVELWN0034    WL0041    P      IVF Cur Wk Inv
     C                     Z-ADD0         WL0042           IVF Unused Weig
     C                     MOVEL'O'       WL0043    P      IVF Post Invent
     C                     Z-ADD0         WL0044           IVF Unused Date
     C                     MOVEL'A'       WL0045    P      Record Status
     C                     Z-ADD0         WL0046           Create Date
     C                     Z-ADD0         WL0047           Create Time
     C                     MOVEL*BLANK    WL0048           Create User
     C                     MOVEL*BLANK    WL0049           Create Program
     C                     Z-ADD0         WL0050           Change Date
     C                     Z-ADD0         WL0051           Change Time
     C                     MOVEL*BLANK    WL0052           Change User
     C                     MOVEL*BLANK    WL0053           Change Program
     C                     EXSR SECRRC
      * **************************************************
     C                     END                             *FI
     C                     MOVEL'N'       WUTAST           First Time Flag
     C                     Z-ADDWAAIDX    WN0007           IVF Week Ending
     C                     Z-ADDWAEJC7    WN0008           IVF Item Code
     C                     Z-ADD0         WN0025           IVF Warehouse P
     C                     Z-ADD0         WN0026           IVF Warehouse P
     C                     Z-ADD0         WN0035           Calc Work Field
     C                     Z-ADD0         WN0036           Price * Weight
     C                     Z-ADD0         WN0038           Pounds
     C                     Z-ADD0         WN0006           ISC End Inv Fin
     C                     Z-ADD0         WN0024           IVF Market Pric
     C                     MOVEL'A'       WN0039           Trans Contol AS
     C                     MOVEL'A'       WN0030           IVF Curr Wk Pro
     C                     MOVEL'A'       WN0034           IVF Cur Wk Inv
     C                     Z-ADD0         WN0029           IVF Curr Wk Pro
     C                     Z-ADD0         WN0033           IVF Cur Wk Inv
     C                     Z-ADD0         WN0003           ISC Shipment Fi
     C                     Z-ADD0         WN0002           ISC Shipment Fi
     C                     Z-ADD0         WN0004           ISC FOB Gross A
      * *** Save fields from 1st record for an item ***
     C                     Z-ADDWAM5WG    WN0005           ISC Ending Inve
     C                     MOVELWAGPAA    WN0012           IVF Item Cmdty
     C                     MOVELWAW1SX    WN0010           IVF Item Type
     C                     MOVELWAGQAA    WN0013           IVF Item Dft Cm
     C                     Z-ADDWABSNY    WN0014           IVF Item Struct
     C                     Z-ADDWABTNY    WN0015           IVF Item Struct
     C                     Z-ADDWABUNY    WN0016           IVF Item Struct
     C                     Z-ADDWAF3PR    WN0017           IVF Item Market
     C                     MOVELWAGSAA    WN0018           IVF Item G/L Su
     C                     MOVELWAGTAA    WN0019           IVF Item U/M -
      * ************
      * (Note: LCL context has Last week's values that may be rolled forw
      * R9083 02/14/17 DN-Modified to Also RST by Inv Valuation Grouping.
      * Rtv Inv Value Last Wk RT - Inventory Value File  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1WQSX    WL0054    P      IVF Valuation G
     C                     Z-ADDYL0001    WL0055           IVF Week Ending
     C                     Z-ADDWN0008    WL0056           IVF Item Code
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0057    WN0009           IVF WIP - FG It
     C                     MOVELWL0058    YL0007    P      IVF Item Type
     C                     MOVELWL0059    WN0011    P      IVF Unused Sts
     C                     MOVELWL0060    WN0020    P      IVF Inventory V
     C                     MOVELWL0061    WN0021    P      IVF Production
     C                     Z-ADDWL0062    YL0002           IVF Sales Price
     C                     Z-ADDWL0063    YL0003           IVF Sales Price
     C                     Z-ADDWL0064    WN0027           IVF Ovrrde Prod
     C                     MOVELWL0065    WN0028    P      IVF Ovrrde Prod
     C                     Z-ADDWL0066    WN0031           IVF Ovrrde Inv
     C                     MOVELWL0067    WN0032    P      IVF Ovrrde Inv
     C                     Z-ADDWL0068    YL0006           IVF Cur Wk Inv
      * Default Inventory Value Method to Sales
      * CASE: PAR.IVF Inventory Value Mthd EQ WRK.Blank for 4           U
     C           WN0020    IFEQ WUOTTX                     *IF
     C                     MOVEL'S'       WN0020           IVF Inventory V
     C                     END                             *FI
      * Default Production Value Method to Sales
      * CASE: PAR.IVF Production Value Mthd EQ WRK.Blank for 4
     C           WN0021    IFEQ WUOTTX                     *IF
     C                     MOVEL'S'       WN0021           IVF Production
     C                     END                             *FI
      * Get WIP FG Item if blank from previous week
      * CASE:
      *  - c1ORc2
      *   |- c1    : PAR.IVF Item Type is Work in Process
      *   |- c2    : PAR.IVF WIP - FG Item Code is Not Entered
      *   '-
     C           WN0010    IFEQ 'WP'                       *IF
     C           WN0009    OREQ 0                          *OR
      * Rtv WIP FG Item       RT - Item Default  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
     C                     END                             *FI
      * ***************************************************
      * If Whse price is entered, accum for Whse Lbs sum, and wgted avg c
      * CASE: DB1.ISC Warehouse Price /UOM is Entered
     C           WAF4PR    IFNE 0                          *IF
     C                     ADD  WAM5WG    WN0025           IVF Warehouse P
      * Compute: sum for whs pric
      * PAR.Calc Work Field 15,6 USR =
      *    *COMPUTE ((x1 * (x2/x4))+x3)
      * x1    : DB1.ISC End Inv Final Lbs
      * *     : PGM.*Synon (17,7) work field *
      * x2    : DB1.ISC Warehouse Price /UOM
      * /     : PGM.*Synon (17,7) work field *
      * x4    : CON.100
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Calc Work Field 15,6 USR
     C           WAF4PR    DIV  100       W0WD02           *Synon (17,7) w
     C           WAM5WG    MULT W0WD02    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WN0035    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0035           Calc Work Field
      * RTV Whse Type,Control  RT - Warehouse  * 
     C                     EXSR SHRVGN
      * If any whse with this item is plant controlled, change sts
      * CASE: WRK.Trans Contol AS400/Plant is Plant
     C           WUXUST    IFEQ 'P'                        *IF
     C                     MOVEL'P'       WN0039           Trans Contol AS
     C                     END                             *FI
     C                     END                             *FI
      * Accum (End Inv * avg market price for the week)
      * Exc Itm MktPr for IVF XF - Company Item  * 
     C                     CALL 'PPPRXFR'              90  Exc Itm MktPr f
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WAB2C3    WQ0001  30       Company Number
     C                     PARM WAEJC7    WQ0002  70       Item Code
     C                     PARM WN0037    WQ0003  70       Market Price Da
     C                     PARM WAM5WG    WQ0004 112       ISC Ending Inve
     C           WN0036    PARM WN0036    WQ0005 154       Price * Weight
     C           WN0038    PARM WN0038    WQ0006 112       Pounds
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PPPRXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * S00184 - new accum for div calc
     C                     ADD  WAM5WG    WN0006           ISC End Inv Fin
     C                     ADD  WAMWWG    WN0003           ISC Shipment Fi
     C                     ADD  WAOLQT    WN0002           ISC Shipment Fi
     C                     ADD  WAFQVL    WN0004           ISC FOB Gross A
     C           KRSSA     READE@BSCPZC                  90*
     C                     ENDDO
      * USER: Exit processing
      * Write last record
      * If Warehouse Lbs > 0, then Calc Wghted Avg for Whse price/lb
      * CASE: PAR.IVF Warehouse Pounds is Not equal zero
     C           WN0025    IFNE 0                          *IF
      * Compute: Whse price/cwt
      * PAR.IVF Warehouse Price/CWT =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : PAR.Calc Work Field 15,6 USR
      * /     : PGM.*Synon (15,5) work field *
      * x2    : PAR.IVF Warehouse Pounds
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WN0035    DIV  WN0025    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0026           IVF Warehouse P
     C                     END                             *FI
      * If End Inv Lbs > 0, then Calc Wghted Avg for Market Price
      * CASE: PAR.Pounds is Not Zeros
     C           WN0038    IFNE 0                          *IF
      * Compute:Ivg mkt price cwt
      * PAR.IVF Market Price/CWT =
      *    *COMPUTE (x1 / x2 *x3)
      * x1    : PAR.Price * Weight USR
      * /     : PGM.*Synon (15,5) work field *
      * x2    : PAR.Pounds
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CON.100
     C           WN0036    DIV  WN0038    W0WB01           *Synon (15,5) w
     C           W0WB01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0024           IVF Market Pric
     C                     END                             *FI
      * **************************************************
      * Sales Price:  Temp from Sales History  or  last week's price
      *               After TF Installs, from TFP010 or last week's price
     C                     Z-ADD0         WUF6VL           Aggregt Net Pro
      * Temp: until TF installed
      * CASE: PAR.ISC Shipment Final Lbs is Not equal zero
     C           WN0003    IFNE 0                          *IF
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Item U/M - Pricing is NE Headset
      *   |- c2    : PAR.IVF Item U/M - Pricing is NE Each
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0019    IFNE 'HS'                       *IF
     C           WN0019    IFNE 'EA'                       *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * this is backwards!  fix 12.13.17
     C           WN0004    DIV  WN0003    WUF6VL           Aggregt Net Pro
     C                     ELSE
      * CASE: *OTHERWISE
      * this is backwards!  fix 12.13.17
      * CASE: PAR.ISC Shipment Final Qty is not equal zero
     C           WN0002    IFNE 0                          *IF
     C           WN0004    DIV  WN0002    WUF6VL           Aggregt Net Pro
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * For Dailys -- get cost from JRINPRI file, which will be empty in
     C                     Z-ADDWN0008    WUGTNY           ITEM NUMBER
      * R9083 02/15/17 DN-Commented out reference to JRD Inv Price Master
      * Temp:  If Sales Hist is zero,  use prev wk sales price,Dt
      * CASE: WRK.Aggregt Net Prod Rev Prc is eq 0
     C           WUF6VL    IFEQ 0                          *IF
     C                     Z-ADDYL0002    WN0022           IVF Sales Price
     C                     Z-ADDYL0003    WN0023           IVF Sales Price
     C                     ELSE
      * CASE: *OTHERWISE
     C           100       MULT WUF6VL    WN0022           IVF Sales Price
     C                     Z-ADDWN0007    WN0023           IVF Sales Price
     C                     END                             *FI
      * **************************************************
      * Production Value: Use Prod Override if >0 and Approved
      *    else Use price assoc. with the Prod Value Method
      * Curr Week Prod Value = override or price asso with prod value met
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Ovrrde Prod Price/CWT is Entered
      *   |- c2    : PAR.IVF Curr Wk Prod Status is Approved
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0027    IFNE 0                          *IF
     C           WN0030    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADDWN0027    WN0029           IVF Curr Wk Pro
     C                     MOVEL'U'       WN0030           IVF Curr Wk Pro
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.IVF Production Value Mthd is Sales
     C           WN0021    IFEQ 'S'                        *IF
     C                     Z-ADDWN0022    WN0029           IVF Curr Wk Pro
      * If Sales Date older than 90 days, set sts to Unapproved
     C                     MOVEL*BLANK    WUULTX           Day of the Week
     C                     MOVELWN0023    WUULTX           Day of the Week
     C                     Z-ADD6         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00009
     C           ZQ        ORGT 00009
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUULTX:ZQ WUT7TX    P  90  Date (Char-6) U
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD*ZEROS    ZQ      50
     C           '1'       CAT  WUT7TX:ZQ WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    WUMBDT           Date
      * WRK.Days = JOB.*Job date - WRK.Date                  USR *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WUMBDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
      * CASE: WRK.Days is GT 90
     C           WUNPNX    IFGT 90                         *IF
     C                     MOVEL'U'       WN0030           IVF Curr Wk Pro
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.IVF Production Value Mthd is Market
     C           WN0021    IFEQ 'M'                        *IF
     C                     Z-ADDWN0024    WN0029           IVF Curr Wk Pro
     C                     ELSE
      * CASE: PAR.IVF Production Value Mthd is Formula
     C           WN0021    IFEQ 'F'                        *IF
      * E01452 RMC added
      * R9083 02/14/17 DN-Modified to add IVF Valuation Grouping as input
      * Rtv to CLC TP Sale IVFRT - Item Groups for TP Sales  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0008    WL0001           Item Code
     C                     Z-ADDWN0007    WL0002           IVF Week Ending
     C                     Z-ADDWN0008    WL0003           IVF Item Code
     C                     MOVELP1WQSX    WL0004    P      IVF Valuation G
     C                     Z-ADDYL0004    WL0005           Weight Billed
     C                     Z-ADDYL0005    WL0006           FOB Gross Amoun
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    YL0004           Weight Billed
     C                     Z-ADDWL0006    YL0005           FOB Gross Amoun
      * Calc IVF Curr Wk Prod Price/CW
      * CASE: LCL.Weight Billed is Greater than zero
     C           YL0004    IFGT 0                          *IF
      * Compute:Curr Wk Prod Pric
      * PAR.IVF Curr Wk Prod Price/CW =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : LCL.FOB Gross Amount
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Weight Billed
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           YL0005    DIV  YL0004    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0029           IVF Curr Wk Pro
     C                     ELSE
      * CASE: *OTHERWISE
      * use sales price
     C                     Z-ADDWN0022    WN0029           IVF Curr Wk Pro
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Set: Curr Wk Prod Status to Unapproved... If ...
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Warehouse Price/CWT is Entered
      *   |- c2    : PAR.Trans Contol AS400/Plant is Plant
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0026    IFNE 0                          *IF
     C           WN0039    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Warehouse price exists and plant controlled (affect prod is Yes)
     C                     MOVEL'U'       WN0030           IVF Curr Wk Pro
     C                     END                             *FI
      * **************************************************
      * Inventory Value: Use Inv Override if >0 and Approved
      *    else If Warehouse prices exist, calc the price per those lbs
      *    and sub the Warehouse lbs from the Ending Inv lbs.(Can be mult
      *    Then multiply the remaining Ending Inv Lbs by the Default valu
      *    method's price to get the $$ asso with the value method.
      *    Add the (Whse price * warehouse lbs) to the above $$ Total
      *    Divide the $$ Total by the End Inv lbs to get the value per lb
      * Curr Week Inv Value = override or price asso with inv value metho
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.IVF Ovrrde Inv Val Prc/CW is Entered
      *   |- c2    : PAR.IVF Cur Wk Inv Val Status is Approved
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0031    IFNE 0                          *IF
     C           WN0034    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     Z-ADDWN0031    WN0033           IVF Cur Wk Inv
     C                     MOVEL'U'       WN0034           IVF Cur Wk Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: PAR.IVF Inventory Value Mthd is Sales
     C           WN0020    IFEQ 'S'                        *IF
     C                     Z-ADDWN0022    WN0033           IVF Cur Wk Inv
      * If Sales Date older than 90 days, set sts to Unapproved
     C                     MOVEL*BLANK    WUULTX           Day of the Week
     C                     MOVELWN0023    WUULTX           Day of the Week
     C                     Z-ADD6         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00009
     C           ZQ        ORGT 00009
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUULTX:ZQ WUT7TX    P  90  Date (Char-6) U
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD*ZEROS    ZQ      50
     C           '1'       CAT  WUT7TX:ZQ WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    WUMBDT           Date
      * WRK.Days = JOB.*Job date - WRK.Date                  USR *DAYS
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C           WUMBDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
      * Negative duration, when date1<date2
     C           XDAY1     IFGE XDAY2
     C                     Z-ADDXDURR     WUNPNX
     C                     ELSE
     C           XDURR     MULT -1        WUNPNX
     C                     END
      * CASE: WRK.Days is GT 90
     C           WUNPNX    IFGT 90                         *IF
     C                     MOVEL'U'       WN0034           IVF Cur Wk Inv
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.IVF Inventory Value Mthd is Market
     C           WN0020    IFEQ 'M'                        *IF
     C                     Z-ADDWN0024    WN0033           IVF Cur Wk Inv
     C                     ELSE
      * CASE: PAR.IVF Inventory Value Mthd is Formula
     C           WN0020    IFEQ 'F'                        *IF
      * E01452 RMC - added
      * R9083 02/14/17 DN-Modified to add IVF Valuation Grouping as input
      * Rtv to CLC TP Sale IVFRT - Item Groups for TP Sales  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWN0008    WL0001           Item Code
     C                     Z-ADDWN0007    WL0002           IVF Week Ending
     C                     Z-ADDWN0008    WL0003           IVF Item Code
     C                     MOVELP1WQSX    WL0004    P      IVF Valuation G
     C                     Z-ADDYL0004    WL0005           Weight Billed
     C                     Z-ADDYL0005    WL0006           FOB Gross Amoun
     C                     EXSR SBRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0005    YL0004           Weight Billed
     C                     Z-ADDWL0006    YL0005           FOB Gross Amoun
      * Calc IVF Cur Wk Inv Val Prc/CW
      * CASE: LCL.Weight Billed is Greater than zero
     C           YL0004    IFGT 0                          *IF
      * Compute:Curr Wk Inv Pric
      * PAR.IVF Cur Wk Inv Val Prc/CW =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : LCL.FOB Gross Amount
      * /     : PGM.*Synon (17,7) work field *
      * x2    : LCL.Weight Billed
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           YL0005    DIV  YL0004    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0033           IVF Cur Wk Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * use the sales price
     C                     Z-ADDWN0022    WN0033           IVF Cur Wk Inv
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * If Warehouse lbs > 0, calc those lbs at the whse prices, and accu
      * CASE: PAR.IVF Warehouse Pounds is Greater than zero
     C           WN0025    IFGT 0                          *IF
     C                     Z-ADDWN0006    WUM0WG           ISC Ending Inve
      * R9083 02/15/17 DN-Modified to also RST by Inv Valuation Grouping.
      * Rtv Calc Whse Prc-IVF RT - Inventory Stock Closing  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1WQSX    WL0007    P      ISC Valuation G
     C                     Z-ADDWN0007    WL0008           ISC Week Ending
     C                     Z-ADDWN0008    WL0009           ISC Item Code
     C                     Z-ADDWUF3VL    WL0010           Warehouse Value
     C                     Z-ADDWUM0WG    WL0011           ISC Ending Inve
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0010    WUF3VL           Warehouse Value
     C                     Z-ADDWL0011    WUM0WG           ISC Ending Inve
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         WUF3VL           Warehouse Value
     C                     Z-ADDWN0006    WUM0WG           ISC Ending Inve
     C                     END                             *FI
     C           WUM0WG    MULT WN0033    WUF4VL           Inventory Value
     C                     ADD  WUF3VL    WUF4VL           Inventory Value
      * New since 4/02/08 S00184
      * CASE: PAR.ISC End Inv Final Lbs is Not equal zero
     C           WN0006    IFNE 0                          *IF
      * Compute: Cur Wk Inv Val P
      * PAR.IVF Cur Wk Inv Val Prc/CW =
      *    *COMPUTE (x1 / x2 * x3)
      * x1    : WRK.Inventory Value Method $$
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x2    : PAR.ISC End Inv Final Lbs
      * *     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUF4VL    DIV  WN0006    W0WB01    H      *Synon (15,5) w
     C           W0WB01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0033           IVF Cur Wk Inv
     C                     END                             *FI
     C                     END                             *FI
      * Set: Curr Wk Inv Valu Status to Unapproved.. if ...
      * CASE: PAR.IVF Warehouse Price/CWT is Entered
     C           WN0026    IFNE 0                          *IF
     C                     MOVEL'U'       WN0034           IVF Cur Wk Inv
     C                     END                             *FI
      * **************************************************
      * R9083 02/14/17 DN-Modified to Set IVF Valuation Grouping.
      * Crt Inventory Value   CR - Inventory Value File  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELP1WQSX    WL0012    P      IVF Valuation G
     C                     Z-ADDWN0007    WL0013           IVF Week Ending
     C                     Z-ADDWN0008    WL0014           IVF Item Code
     C                     Z-ADDWN0009    WL0015           IVF WIP - FG It
     C                     MOVELWN0010    WL0016    P      IVF Item Type
     C                     MOVELWN0011    WL0017    P      IVF Unused Sts
     C                     MOVELWN0012    WL0018    P      IVF Item Cmdty
     C                     MOVELWN0013    WL0019    P      IVF Item Dft Cm
     C                     Z-ADDWN0014    WL0020           IVF Item Struct
     C                     Z-ADDWN0015    WL0021           IVF Item Struct
     C                     Z-ADDWN0016    WL0022           IVF Item Struct
     C                     Z-ADDWN0017    WL0023           IVF Item Market
     C                     MOVELWN0018    WL0024    P      IVF Item G/L Su
     C                     MOVELWN0019    WL0025    P      IVF Item U/M -
     C                     MOVELWN0020    WL0026    P      IVF Inventory V
     C                     MOVELWN0021    WL0027    P      IVF Production
     C                     Z-ADDYL0006    WL0028           IVF Beg Inv Pri
     C                     Z-ADDWN0022    WL0029           IVF Sales Price
     C                     Z-ADDWN0023    WL0030           IVF Sales Price
     C                     Z-ADDWN0024    WL0031           IVF Market Pric
     C                     Z-ADDWN0025    WL0032           IVF Warehouse P
     C                     Z-ADDWN0026    WL0033           IVF Warehouse P
     C                     Z-ADDWN0027    WL0034           IVF Ovrrde Prod
     C                     MOVELWN0028    WL0035    P      IVF Ovrrde Prod
     C                     Z-ADDWN0029    WL0036           IVF Curr Wk Pro
     C                     MOVELWN0030    WL0037    P      IVF Curr Wk Pro
     C                     Z-ADDWN0031    WL0038           IVF Ovrrde Inv
     C                     MOVELWN0032    WL0039    P      IVF Ovrrde Inv
     C                     Z-ADDWN0033    WL0040           IVF Cur Wk Inv
     C                     MOVELWN0034    WL0041    P      IVF Cur Wk Inv
     C                     Z-ADD0         WL0042           IVF Unused Weig
     C                     MOVEL'O'       WL0043    P      IVF Post Invent
     C                     Z-ADD0         WL0044           IVF Unused Date
     C                     MOVEL'A'       WL0045    P      Record Status
     C                     Z-ADD0         WL0046           Create Date
     C                     Z-ADD0         WL0047           Create Time
     C                     MOVEL*BLANK    WL0048           Create User
     C                     MOVEL*BLANK    WL0049           Create Program
     C                     Z-ADD0         WL0050           Change Date
     C                     Z-ADD0         WL0051           Change Time
     C                     MOVEL*BLANK    WL0052           Change User
     C                     MOVEL*BLANK    WL0053           Change Program
     C                     EXSR SECRRC
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv to CLC TP Sale IVFRT - Item Groups for TP Sales  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0040  52       IGTS Min Sales
     C                     MOVEL*BLANK    WN0041  1        IGTS 3rd Party
     C                     MOVEL*BLANK    WN0042  3        IGTS Commodity
     C                     MOVEL*BLANK    WN0043  7        IGTS Commodity
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * E01452  RMC 3/31/11 use when creating IVF rcds, with "F"ormula pr
      *   method and inv method
     C                     Z-ADD0         WL0005           Weight Billed
     C                     Z-ADD0         WL0006           FOB Gross Amoun
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBHGCD    WQSB01           Item Code
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Item Code
      * Setup key
     C                     Z-ADDWL0001    WQSB01           Item Code
      * Establish starting position
     C           KRSSB     SETLL@DNRERW                    *
     C           KRSSB     READE@DNRERW                  90*
      * Data record not found
     C   90                MOVEL'USR3906' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Accum Sales History records from all items grouped with the input
      * R9083 02/14/17 DN-Modified to also RST by Inv Valuation Grouping.
      * Rtv Sum FOB,shpm finl RT - Inventory Stock Closing  * 
     C                     EXSR SCRVGN
     C           KRSSB     READE@DNRERW                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Sum FOB,shpm finl RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCWCSX    WQSC01           ISC Valuation G
     C           *LIKE     DEFN WCAIDX    WQSC02           ISC Week Ending
     C           *LIKE     DEFN WCEJC7    WQSC03           ISC Item Code
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           ISC Valuation G
     C                     KFLD           WQSC02           ISC Week Ending
     C                     KFLD           WQSC03           ISC Item Code
      * Setup key
     C                     MOVELWL0004    WQSC01           ISC Valuation G
     C                     Z-ADDWL0002    WQSC02           ISC Week Ending
     C                     Z-ADDWBERC7    WQSC03           ISC Item Code
      * Establish starting position
     C           KRSSC     SETLL@BSCPI4                    *
     C           KRSSC     READE@BSCPI4                  90*
      * Data record not found
     C   90                MOVEL'USR3529' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WCMWWG    WL0005           ISC Shipment Fi
     C                     ADD  WCFQVL    WL0006           ISC FOB Gross A
     C           KRSSC     READE@BSCPI4                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Calc Whse Prc-IVF RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADDWL0011    WUM0WG           ISC Ending Inve
     C                     Z-ADD0         WL0010           Warehouse Value
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDWCSX    WQSD01           ISC Valuation G
     C           *LIKE     DEFN WDAIDX    WQSD02           ISC Week Ending
     C           *LIKE     DEFN WDEJC7    WQSD03           ISC Item Code
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           ISC Valuation G
     C                     KFLD           WQSD02           ISC Week Ending
     C                     KFLD           WQSD03           ISC Item Code
      * Setup key
     C                     MOVELWL0007    WQSD01           ISC Valuation G
     C                     Z-ADDWL0008    WQSD02           ISC Week Ending
     C                     Z-ADDWL0009    WQSD03           ISC Item Code
      * Establish starting position
     C           KRSSD     SETLL@BSCPB9                    *
     C           KRSSD     READE@BSCPB9                  90*
      * Data record not found
     C   90                MOVEL'USR3529' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.ISC Ending Inventory Lbs is Greater than zero
     C           WL0011    IFGT 0                          *IF
      * CASE: PAR.ISC Ending Inventory Lbs GE DB1.ISC End Inv Final Lbs
     C           WL0011    IFGE WDM5WG                     *IF
     C                     SUB  WDM5WG    WL0011           ISC Ending Inve
      * Compute: Warehouse Value
      * PAR.Warehouse Value =
      *    *COMPUTE (((x1/x4) * x2) + x3)
      * x1    : DB1.ISC Warehouse Price /UOM
      * /     : PGM.*Synon (17,7) work field *
      * x4    : CON.100
      * *     : PGM.*Synon (15,5) work field *
      * x2    : DB1.ISC End Inv Final Lbs
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Warehouse Value
     C           WDF4PR    DIV  100       W0WD02           *Synon (17,7) w
     C           W0WD02    MULT WDM5WG    W0WB01           *Synon (15,5) w
     C           W0WB01    ADD  WL0010    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0010           Warehouse Value
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute: Warehouse Value
      * PAR.Warehouse Value =
      *    *COMPUTE (((x1/x4) * x2) + x3)
      * x1    : DB1.ISC Warehouse Price /UOM
      * /     : PGM.*Synon (17,7) work field *
      * x4    : CON.100
      * *     : PGM.*Synon (15,5) work field *
      * x2    : PAR.ISC Ending Inventory Lbs
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.Warehouse Value
     C           WDF4PR    DIV  100       W0WD02           *Synon (17,7) w
     C           W0WD02    MULT WL0011    W0WB01           *Synon (15,5) w
     C           W0WB01    ADD  WL0010    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0010           Warehouse Value
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@BSCPB9                  90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SECRRC    BEGSR
      *================================================================
      * Crt Inventory Value   CR - Inventory Value File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @BTCPA8
     C                     MOVELWL0012    WEWQSX           IVF Valuation G
     C                     Z-ADDWL0013    WEAJDX           IVF Week Ending
     C                     Z-ADDWL0014    WEEKC7           IVF Item Code
     C                     Z-ADDWL0015    WEELC7           IVF WIP - FG It
     C                     MOVELWL0016    WEWHSX           IVF Item Type
     C                     MOVELWL0017    WEWFSX           IVF Unused Sts
     C                     MOVELWL0018    WEGUAA           IVF Item Cmdty
     C                     MOVELWL0019    WEGVAA           IVF Item Dft Cm
     C                     Z-ADDWL0020    WEBVNY           IVF Item Struct
     C                     Z-ADDWL0021    WEBWNY           IVF Item Struct
     C                     Z-ADDWL0022    WEBXNY           IVF Item Struct
     C                     Z-ADDWL0023    WEF5PR           IVF Item Market
     C                     MOVELWL0024    WEGWAA           IVF Item G/L Su
     C                     MOVELWL0025    WEGXAA           IVF Item U/M -
     C                     MOVELWL0026    WEWISX           IVF Inventory V
     C                     MOVELWL0027    WEWJSX           IVF Production
     C                     Z-ADDWL0028    WEFSVL           IVF Beg Inv Pri
     C                     Z-ADDWL0029    WEFTVL           IVF Sales Price
     C                     Z-ADDWL0030    WEAKDX           IVF Sales Price
     C                     Z-ADDWL0031    WEFUVL           IVF Market Pric
     C                     Z-ADDWL0032    WEM8WG           IVF Warehouse P
     C                     Z-ADDWL0033    WEFVVL           IVF Warehouse P
     C                     Z-ADDWL0034    WEFWVL           IVF Ovrrde Prod
     C                     MOVELWL0035    WERGNA           IVF Ovrrde Prod
     C                     Z-ADDWL0036    WEFXVL           IVF Curr Wk Pro
     C                     MOVELWL0037    WEWKSX           IVF Curr Wk Pro
     C                     Z-ADDWL0038    WEFYVL           IVF Ovrrde Inv
     C                     MOVELWL0039    WERFNA           IVF Ovrrde Inv
     C                     Z-ADDWL0040    WEFZVL           IVF Cur Wk Inv
     C                     MOVELWL0041    WEWLSX           IVF Cur Wk Inv
     C                     Z-ADDWL0042    WEM9WG           IVF Unused Weig
     C                     MOVELWL0043    WEWPSX           IVF Post Invent
     C                     Z-ADDWL0044    WEQDDT           IVF Unused Date
     C                     MOVELWL0045    WEVSST           Record Status
     C                     Z-ADDWL0046    WEMJDT           Create Date
     C                     Z-ADDWL0047    WEBETM           Create Time
     C                     MOVELWL0048    WECCVN           Create User
     C                     MOVELWL0049    WECDVN           Create Program
     C                     Z-ADDWL0050    WEMKDT           Change Date
     C                     Z-ADDWL0051    WEBFTM           Change Time
     C                     MOVELWL0052    WECEVN           Change User
     C                     MOVELWL0053    WECFVN           Change Program
      *
      * USER: Processing before Data update
      * Set Crt Date/Time      IF
      * *** Set RECORD STATUS field. ***
     C                     MOVEL'A'       WEVSST           Record Status
      * *** Set CREATE fields. ***
     C                     Z-ADD##JDT     WEMJDT           Create Date
     C                     Z-ADD##JTM     WEBETM           Create Time
     C                     MOVEL##USR     WECCVN           Create User
     C                     MOVEL##PGM     WECDVN           Create Program
      * *** Set CHANGE fields. ***
     C                     Z-ADD0         WEMKDT           Change Date
     C                     Z-ADD0         WEBFTM           Change Time
     C                     MOVEL*BLANK    WECEVN           Change User
     C                     MOVEL*BLANK    WECFVN           Change Program
     C           KLCRSE    KLIST
     C                     KFLD           WEWQSX           IVF Valuation G
     C                     KFLD           WEAJDX           IVF Week Ending
     C                     KFLD           WEEKC7           IVF Item Code
      * Check for duplicate primary key
     C           KLCRSE    SETLL@BTCPA8                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3532' W0RTN   7
      * Send message 'Inventory Value File   EX'
     C                     MOVEL'USR3532' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C                     WRITE@BTCPA8                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Inv Value Last Wk RT - Inventory Value File  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WFWQSX           IVF Valuation G
     C                     KFLD           WFAJDX           IVF Week Ending
     C                     KFLD           WFEKC7           IVF Item Code
      * Setup key
     C                     MOVELWL0054    WFWQSX           IVF Valuation G
     C                     Z-ADDWL0055    WFAJDX           IVF Week Ending
     C                     Z-ADDWL0056    WFEKC7           IVF Item Code
      * Establish starting position
     C           KRSSF     CHAIN@BTCPA9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3531' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0057           IVF WIP - FG It
     C                     MOVEL*BLANK    WL0058           IVF Item Type
     C                     MOVEL*BLANK    WL0059           IVF Unused Sts
     C                     MOVEL*BLANK    WL0060           IVF Inventory V
     C                     MOVEL*BLANK    WL0061           IVF Production
     C                     Z-ADD*ZERO     WL0062           IVF Sales Price
     C                     Z-ADD*ZERO     WL0063           IVF Sales Price
     C                     Z-ADD*ZERO     WL0064           IVF Ovrrde Prod
     C                     MOVEL*BLANK    WL0065           IVF Ovrrde Prod
     C                     Z-ADD*ZERO     WL0066           IVF Ovrrde Inv
     C                     MOVEL*BLANK    WL0067           IVF Ovrrde Inv
     C                     Z-ADD*ZERO     WL0068           IVF Cur Wk Inv
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWFELC7    WL0057           IVF WIP - FG It
     C                     MOVELWFWHSX    WL0058           IVF Item Type
     C                     MOVELWFWFSX    WL0059           IVF Unused Sts
     C                     MOVELWFWISX    WL0060           IVF Inventory V
     C                     MOVELWFWJSX    WL0061           IVF Production
     C                     Z-ADDWFFTVL    WL0062           IVF Sales Price
     C                     Z-ADDWFAKDX    WL0063           IVF Sales Price
     C                     Z-ADDWFFWVL    WL0064           IVF Ovrrde Prod
     C                     MOVELWFRGNA    WL0065           IVF Ovrrde Prod
     C                     Z-ADDWFFYVL    WL0066           IVF Ovrrde Inv
     C                     MOVELWFRFNA    WL0067           IVF Ovrrde Inv
     C                     Z-ADDWFFZVL    WL0068           IVF Cur Wk Inv
     C                     GOTO SFEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv WIP FG Item       RT - Item Default  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WGCNNB    WQSG01           WIP Item Code
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           WIP Item Code
      * Setup key
     C                     Z-ADDWN0008    WQSG01           WIP Item Code
      * Establish starting position
     C           KRSSG     SETLL@BYREBD                    *
     C           KRSSG     READE@BYREBD                  90*
      * Data record not found
     C   90                MOVEL'USR1160' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWGHGCD    WN0009           Item Code
     C           KRSSG     READE@BYREBD                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Whse Type,Control  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WHAJCD           Warehouse Code
      * Setup key
     C                     MOVELWAGRAA    WHAJCD           Warehouse Code
      * Establish starting position
     C           KRSSH     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WUXUST           Trans Contol AS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWHXUST    WUXUST           Trans Contol AS
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIDX           ISC Week Ending
     C                     Z-ADD*ZERO     WAB2C3           ISC Warehouse C
     C                     Z-ADD*ZERO     WAEJC7           ISC Item Code
     C                     Z-ADD*ZERO     WAF3PR           ISC Item Market
     C                     Z-ADD*ZERO     WABSNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABTNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABUNY           ISC Item Struct
     C                     Z-ADD*ZERO     WAOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAOFQT           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAMRWG           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAOGQT           ISC Beg Inv Qty
     C                     Z-ADD*ZERO     WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADD*ZERO     WAOHQT           ISC Floor Produ
     C                     Z-ADD*ZERO     WAMSWG           ISC Floor Produ
     C                     Z-ADD*ZERO     WAOWQT           ISC Floor Prod
     C                     Z-ADD*ZERO     WANAWG           ISC Floor Prod
     C                     Z-ADD*ZERO     WAOIQT           ISC Sales Produ
     C                     Z-ADD*ZERO     WAMTWG           ISC Sales Produ
     C                     Z-ADD*ZERO     WAOJQT           ISC Inventory S
     C                     Z-ADD*ZERO     WAMUWG           ISC Inventory S
     C                     Z-ADD*ZERO     WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAOLQT           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAMWWG           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAFQVL           ISC FOB Gross A
     C                     Z-ADD*ZERO     WAOMQT           ISC Inventory T
     C                     Z-ADD*ZERO     WAMYWG           ISC Inventory T
     C                     Z-ADD*ZERO     WAONQT           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAMZWG           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAOOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     WAM0WG           ISC Ending Inve
     C                     Z-ADD*ZERO     WAP9DT           ISC End Inv Dat
     C                     Z-ADD*ZERO     WACTTM           ISC End Inv Tim
     C                     Z-ADD*ZERO     WAOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAM2WG           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAORQT           ISC End Inv Par
     C                     Z-ADD*ZERO     WAM3WG           ISC End Inv Par
     C                     Z-ADD*ZERO     WAOSQT           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAM4WG           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAP8DT           ISC Ending Inv
     C                     Z-ADD*ZERO     WACSTM           ISC Ending Inv
     C                     Z-ADD*ZERO     WAOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAF4PR           ISC Warehouse P
     C                     Z-ADD*ZERO     WAOUQT           ISC Commission
     C                     Z-ADD*ZERO     WAM6WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAOVQT           ISC TF Exempt N
     C                     Z-ADD*ZERO     WAM7WG           ISC TF Exempt L
     C                     Z-ADD*ZERO     WAQADT           ISC Unused Date
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Define work field Aggregt Net Prod Rev Prc
     C                     Z-ADD*ZERO     WUF6VL 116
      * Define work field ITEM NUMBER
     C                     Z-ADD*ZERO     WUGTNY  50
      * Define work field Day of the Week USR
     C                     MOVEL*BLANK    WUULTX  9
      * Define work field Date (Char-6) USR
     C                     MOVEL*BLANK    WUT7TX  6
      * Define work field Date (Alpha) USR
     C                     MOVEL*BLANK    WUR4TX  7
      * Define work field Date                  USR
     C                     Z-ADD*ZERO     WUMBDT  70
      * Define work field Days
     C                     Z-ADD*ZERO     WUNPNX  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBERC7           Group with Item
     C                     Z-ADD*ZERO     WBGQPC           IGTS Min Sales
     C                     Z-ADD*ZERO     WBKFNY           IGTS Unused Nbr
     C                     Z-ADD*ZERO     WBKGNY           IGTS Unused Nbr
     C                     Z-ADD*ZERO     WBRNDT           IGTS Unused Dat
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field ISC Ending Inventory Lbs
     C                     Z-ADD*ZERO     WUM0WG 112
      * Define work field Warehouse Value
     C                     Z-ADD*ZERO     WUF3VL 155
      * Define work field Inventory Value Method $$
     C                     Z-ADD*ZERO     WUF4VL 155
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WEAJDX           IVF Week Ending
     C                     Z-ADD*ZERO     WEEKC7           IVF Item Code
     C                     Z-ADD*ZERO     WEELC7           IVF WIP - FG It
     C                     Z-ADD*ZERO     WEBVNY           IVF Item Struct
     C                     Z-ADD*ZERO     WEBWNY           IVF Item Struct
     C                     Z-ADD*ZERO     WEBXNY           IVF Item Struct
     C                     Z-ADD*ZERO     WEF5PR           IVF Item Market
     C                     Z-ADD*ZERO     WEFSVL           IVF Beg Inv Pri
     C                     Z-ADD*ZERO     WEFTVL           IVF Sales Price
     C                     Z-ADD*ZERO     WEAKDX           IVF Sales Price
     C                     Z-ADD*ZERO     WEFUVL           IVF Market Pric
     C                     Z-ADD*ZERO     WEM8WG           IVF Warehouse P
     C                     Z-ADD*ZERO     WEFVVL           IVF Warehouse P
     C                     Z-ADD*ZERO     WEFWVL           IVF Ovrrde Prod
     C                     Z-ADD*ZERO     WEFXVL           IVF Curr Wk Pro
     C                     Z-ADD*ZERO     WEFYVL           IVF Ovrrde Inv
     C                     Z-ADD*ZERO     WEFZVL           IVF Cur Wk Inv
     C                     Z-ADD*ZERO     WEM9WG           IVF Unused Weig
     C                     Z-ADD*ZERO     WEQDDT           IVF Unused Date
     C                     Z-ADD*ZERO     WEMJDT           Create Date
     C                     Z-ADD*ZERO     WEBETM           Create Time
     C                     Z-ADD*ZERO     WEMKDT           Change Date
     C                     Z-ADD*ZERO     WEBFTM           Change Time
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field Blank for 4           USR
     C                     MOVEL*BLANK    WUOTTX  4
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WGHGCD           Item Code
     C                     Z-ADD*ZERO     WGAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WGAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WGAIWG           Unit Weight
     C                     Z-ADD*ZERO     WGCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WGC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WGURTN           Number Cases On
     C                     Z-ADD*ZERO     WGACC8           Vendor item Def
     C                     Z-ADD*ZERO     WGRINB           Item Structure
     C                     Z-ADD*ZERO     WGRHNB           Item Structure
     C                     Z-ADD*ZERO     WGRGNB           Item Structure
     C                     Z-ADD*ZERO     WGTFNB           Transportation
     C                     Z-ADD*ZERO     WGCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WGSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WGPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WGSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WGA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WGSJNB           Production Lead
     C                     Z-ADD*ZERO     WGSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WGSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WGSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WGCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WGCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WGILNB           Packages per ca
     C                     Z-ADD*ZERO     WGCHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WGCINB           PM Batch Size
     C                     Z-ADD*ZERO     WGCJNB           Package Level s
     C                     Z-ADD*ZERO     WGCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WGCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WGCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WGCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WGCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WGCWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WGCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WGCZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WGC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WGB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WGTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WGTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WGBLPR           Market Overage
     C                     Z-ADD*ZERO     WGBMPR           Standard Overag
     C                     Z-ADD*ZERO     WGCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WGAIC3           Company Number
     C                     Z-ADD*ZERO     WGICN1           Item Category N
     C                     Z-ADD*ZERO     WGICN2           Item Category N
     C                     Z-ADD*ZERO     WGV2NB           Item Category N
     C                     Z-ADD*ZERO     WGITCN           Item Category N
     C                     Z-ADD*ZERO     WGITC5           Item Category N
     C                     Z-ADD*ZERO     WGICN6           Item Category N
     C                     Z-ADD*ZERO     WGICN7           Item Category N
     C                     Z-ADD*ZERO     WGICN8           Item Category N
     C                     Z-ADD*ZERO     WGICN9           Item Category N
     C                     Z-ADD*ZERO     WGICN0           Item Category N
     C                     Z-ADD*ZERO     WGB5NB           PM Line Number
     C                     Z-ADD*ZERO     WGBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WGBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WGF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WGF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WGF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WGBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WGBNNB           Production Qty
     C                     Z-ADD*ZERO     WGAHTM           Job Time
     C                     Z-ADD*ZERO     WGEKDT           Job Date
      * Define work field Trans Contol AS400/Plant
     C                     MOVEL*BLANK    WUXUST  1
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WHDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WHBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WHBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WHBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WHBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WHAATM           Job Time
     C                     Z-ADD*ZERO     WHAXDT           Job Date
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WB01 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SBRVGN.
     C                     Z-ADD*ZERO     WL0001  70
     C                     Z-ADD*ZERO     WL0002  80
     C                     Z-ADD*ZERO     WL0003  70
     C                     MOVEL*BLANK    WL0004  1
     C                     Z-ADD*ZERO     WL0005 112
     C                     Z-ADD*ZERO     WL0006 112
      * Define local variables for subroutine SDRVGN.
     C                     MOVEL*BLANK    WL0007  1
     C                     Z-ADD*ZERO     WL0008  80
     C                     Z-ADD*ZERO     WL0009  70
     C                     Z-ADD*ZERO     WL0010 155
     C                     Z-ADD*ZERO     WL0011 112
      * Define local variables for subroutine SECRRC.
     C                     MOVEL*BLANK    WL0012  1
     C                     Z-ADD*ZERO     WL0013  80
     C                     Z-ADD*ZERO     WL0014  70
     C                     Z-ADD*ZERO     WL0015  70
     C                     MOVEL*BLANK    WL0016  3
     C                     MOVEL*BLANK    WL0017  2
     C                     MOVEL*BLANK    WL0018  7
     C                     MOVEL*BLANK    WL0019  3
     C                     Z-ADD*ZERO     WL0020  30
     C                     Z-ADD*ZERO     WL0021  30
     C                     Z-ADD*ZERO     WL0022  30
     C                     Z-ADD*ZERO     WL0023 114
     C                     MOVEL*BLANK    WL0024  3
     C                     MOVEL*BLANK    WL0025  2
     C                     MOVEL*BLANK    WL0026  1
     C                     MOVEL*BLANK    WL0027  1
     C                     Z-ADD*ZERO     WL0028  94
     C                     Z-ADD*ZERO     WL0029  94
     C                     Z-ADD*ZERO     WL0030  80
     C                     Z-ADD*ZERO     WL0031  94
     C                     Z-ADD*ZERO     WL0032 112
     C                     Z-ADD*ZERO     WL0033  94
     C                     Z-ADD*ZERO     WL0034  94
     C                     MOVEL*BLANK    WL0035 60
     C                     Z-ADD*ZERO     WL0036  94
     C                     MOVEL*BLANK    WL0037  1
     C                     Z-ADD*ZERO     WL0038  94
     C                     MOVEL*BLANK    WL0039 60
     C                     Z-ADD*ZERO     WL0040  94
     C                     MOVEL*BLANK    WL0041  1
     C                     Z-ADD*ZERO     WL0042 112
     C                     MOVEL*BLANK    WL0043  1
     C                     Z-ADD*ZERO     WL0044  70
     C                     MOVEL*BLANK    WL0045  1
     C                     Z-ADD*ZERO     WL0046  70
     C                     Z-ADD*ZERO     WL0047  60
     C                     MOVEL*BLANK    WL0048 10
     C                     MOVEL*BLANK    WL0049 10
     C                     Z-ADD*ZERO     WL0050  70
     C                     Z-ADD*ZERO     WL0051  60
     C                     MOVEL*BLANK    WL0052 10
     C                     MOVEL*BLANK    WL0053 10
      * Define local variables for subroutine SFRVGN.
     C                     MOVEL*BLANK    WL0054  1
     C                     Z-ADD*ZERO     WL0055  80
     C                     Z-ADD*ZERO     WL0056  70
     C                     Z-ADD*ZERO     WL0057  70
     C                     MOVEL*BLANK    WL0058  3
     C                     MOVEL*BLANK    WL0059  2
     C                     MOVEL*BLANK    WL0060  1
     C                     MOVEL*BLANK    WL0061  1
     C                     Z-ADD*ZERO     WL0062  94
     C                     Z-ADD*ZERO     WL0063  80
     C                     Z-ADD*ZERO     WL0064  94
     C                     MOVEL*BLANK    WL0065 60
     C                     Z-ADD*ZERO     WL0066  94
     C                     MOVEL*BLANK    WL0067 60
     C                     Z-ADD*ZERO     WL0068  94
      * Define local work field IVF Week Ending Date
     C                     Z-ADD*ZERO     YL0001  80
      * Define local work field IVF Sales Price/CWT
     C                     Z-ADD*ZERO     YL0002  94
      * Define local work field IVF Sales Price/Pound Dt
     C                     Z-ADD*ZERO     YL0003  80
      * Define local work field Weight Billed
     C                     Z-ADD*ZERO     YL0004 112
      * Define local work field FOB Gross Amount
     C                     Z-ADD*ZERO     YL0005 112
      * Define local work field IVF Cur Wk Inv Val Prc/CW
     C                     Z-ADD*ZERO     YL0006  94
      * Define local work field IVF Item Type
     C                     MOVEL*BLANK    YL0007  3
      * Define null work field Warehouse Type
     C                     MOVEL*BLANK    YN0001  2
      *================================================================
     CSR         ZZEXIT    ENDSR
