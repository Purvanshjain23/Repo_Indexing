     H/TITLE Exc TRG HSP038 Process XF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(QC2LE) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Company       : Seaboard Foods
     H* System        : HPS
     H* Program Name  : TRG038P - Trigger process to be used in data warehouse
     H* User name     : ISDNGUY
     H* Date          : 01/26/22  Time  : 09:10:32
      *
      * FUNCTION:    This process writes data to a trigger file every time a record is changed.
      *              This data is read by the data warehouse team.
      *
      *================================================================
      * MODIFICATIONS:
      * DATE      PROGRAMMER
      * 04/05/22  Barb Gutierrez
      *           Changed field names to be hps standard.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      *================================================================
     FHSL038TR  IF A E           K DISK
      * Feed Ticket Detail TRG
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPUCA1        E DS                  EXTNAME(HSL038TR)
      * UPD : HPS Feed Ticket Dtl TRG   Update index
      * Renamed input format fields
     D  WAFMBO       E                     EXTFLD(FDTFMBO)
     D  WATKNO       E                     EXTFLD(FDTTKNO)
     D  WATRCD       E                     EXTFLD(FDTTRCD)
     D  WALNNO       E                     EXTFLD(FDTLNNO)
     D  WABLCD       E                     EXTFLD(FDTBLCD)
     D  WARMCD       E                     EXTFLD(FDTRMCD)
     D  WAHGSN       E                     EXTFLD(FDTHGSN)
     D  WASTMP       E                     EXTFLD(FDTTSTMP)
     D  WADEST       E                     EXTFLD(FDTEVSTS)
     D  WAPRST       E                     EXTFLD(FDTPRSTS)
     D  WAPRDT       E                     EXTFLD(FDTPRDT)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WLFMBO         S              5
     D  WLTKNO         S              9  0
     D  WLTRCD         S              1
     D  WLLNNO         S              3  0
     D  WLBLCD         S              5
     D  WLRMCD         S              5
     D  WLHGSN         S              7  0
     D  WLEVSTS        S              1
     D  WLPRSTS        S              2
     D  WLPRDT         S              8  0
     D  WNTSTMP        S             26
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  YL0001         S              1
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
     D  W_WASTMP       S               z
      /EJECT
      * Parameter declarations
     D P1PARM          DS           107
      * RCD: Feed Ticket Detail
      * I :  HPS Region Code
     D  P1RGCD                 1      5
      * I :  Feed Mill B/O Code
     D  P1FMBO                 6     10
      * I :  Farm Site Code
     D  P1FSCD                11     13P 0
      * I :  HPS Ticket Number
     D  P1TKNO                14     18P 0
      * I :  Transaction Code
     D  P1TRCD                19     19
      * I :  Line Number
     D  P1LNNO                20     21P 0
      * I :  Ticket Date
     D  P1TKDT                22     26P 0
      * I :  Reference Ticket Nbr
     D  P1RTNO                27     31P 0
      * I :  Reference Ticket Date
     D  P1RTDT                32     36P 0
      * I :  Building Code
     D  P1BLCD                37     41
      * I :  Room Code
     D  P1RMCD                42     46
      * I :  Bin Code
     D  P1BNCD                47     52
      * I :  System Hog Group Nbr
     D  P1HGSN                53     56P 0
      * I :  Allocation Flag
     D  P1ALFL                57     57
      * I :  Allocated Date
     D  P1ALDT                58     62P 0
      * I :  Ration Code
     D  P1RNCD                63     67
      * I :  Additive Code
     D  P1ADCD                68     72
      * I :  Feed Manf Type Code
     D  P1FTCD                73     73
      * I :  Feed Ticket Pounds
     D  P1FDLB                74     77P 0
      * I :  Ingredient Amount
     D  P1INAM                78     82P 2
      * I :  Ration Cost Effective Dte
     D  P1RCDT                83     87P 0
      * I :  Manufacturing Amount
     D  P1MFAM                88     92P 2
      * I :  Mfg Cost Effective Date
     D  P1MCDT                93     97P 0
      * I :  Delivery Amount
     D  P1DLAM                98    102P 2
      * I :  Medication Amount
     D  P1MDAM               103    107P 2
     D P2PARM          DS           107
      * RCD: Feed Ticket Detail
      * I :  HPS Region Code
     D  P2RGCD                 1      5
      * I :  Feed Mill B/O Code
     D  P2FMBO                 6     10
      * I :  Farm Site Code
     D  P2FSCD                11     13P 0
      * I :  HPS Ticket Number
     D  P2TKNO                14     18P 0
      * I :  Transaction Code
     D  P2TRCD                19     19
      * I :  Line Number
     D  P2LNNO                20     21P 0
      * I :  Ticket Date
     D  P2TKDT                22     26P 0
      * I :  Reference Ticket Nbr
     D  P2RTNO                27     31P 0
      * I :  Reference Ticket Date
     D  P2RTDT                32     36P 0
      * I :  Building Code
     D  P2BLCD                37     41
      * I :  Room Code
     D  P2RMCD                42     46
      * I :  Bin Code
     D  P2BNCD                47     52
      * I :  System Hog Group Nbr
     D  P2HGSN                53     56P 0
      * I :  Allocation Flag
     D  P2ALFL                57     57
      * I :  Allocated Date
     D  P2ALDT                58     62P 0
      * I :  Ration Code
     D  P2RNCD                63     67
      * I :  Additive Code
     D  P2ADCD                68     72
      * I :  Feed Manf Type Code
     D  P2FTCD                73     73
      * I :  Feed Ticket Pounds
     D  P2FDLB                74     77P 0
      * I :  Ingredient Amount
     D  P2INAM                78     82P 2
      * I :  Ration Cost Effective Dte
     D  P2RCDT                83     87P 0
      * I :  Manufacturing Amount
     D  P2MFAM                88     92P 2
      * I :  Mfg Cost Effective Date
     D  P2MCDT                93     97P 0
      * I :  Delivery Amount
     D  P2DLAM                98    102P 2
      * I :  Medication Amount
     D  P2MDAM               103    107P 2
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     IFDTREC
      * Feed Ticket Detail TRG
      * Renamed input format fields
     I              FDTFMBO                     WAFMBO
     I              FDTTKNO                     WATKNO
     I              FDTTRCD                     WATRCD
     I              FDTLNNO                     WALNNO
     I              FDTBLCD                     WABLCD
     I              FDTRMCD                     WARMCD
     I              FDTHGSN                     WAHGSN
     I              FDTTSTMP                    WASTMP
     I              FDTEVSTS                    WAEVSTS
     I              FDTPRSTS                    WAPRSTS
     I              FDTPRDT                     WAPRDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: HPS Feed T
     C                   PARM                    P2PARM                         RCD: HPS Feed T
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Create Feed Ticket Detail TRG
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   MOVEL(P)  P2FMBO        WLFMBO                         Feed Mill B/O C
     C                   Z-ADD     P2TKNO        WLTKNO                         HPS Ticket Numb
     C                   MOVEL(P)  P2TRCD        WLTRCD                         Transaction Cod
     C                   Z-ADD     P2LNNO        WLLNNO                         Line Number
     C                   MOVEL(P)  P2BLCD        WLBLCD                         Building Code
     C                   MOVEL(P)  P2RMCD        WLRMCD                         Room Code
     C                   Z-ADD     P2HGSN        WLHGSN                         System Hog Grou
     C                   MOVEL(P)  P3D8SC        WLEVSTS                        FTDT TRG Databa
     C                   MOVEL(P)  '0'           WLPRSTS                        FTDT Process St
     C                   Z-ADD     *ZERO         WLPRDT                         FTDT Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
     C                   IF        P3D8SC = '3'
     C                   MOVEL     'N'           YL0001                         Update Record U
      * Update If Any Non-Key Fields Have Changed.
      * CASE:
      *  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11ORc12ORc13ORc14OR
      *  - c15ORc16ORc17ORc18OR c19ORc20ORc21ORc22
      *   |- c1    : PR1.HPS Region Code NE PR2.HPS Region Code
      *   |- c2    : PR1.Farm Site Code NE PR2.Farm Site Code
      *   |-       BLG  Added line number in case one is added.....
      *   |- c3    : PR1.Line Number NE PR2.Line Number
      *   |- c4    : PR1.Ticket Date NE PR2.Ticket Date
      *   |- c5    : PR1.Reference Ticket Nbr NE PR2.Reference Ticket Nbr
      *   |- c6    : PR1.Reference Ticket Date NE PR2.Reference Ticket Da
      *   |- c7    : PR1.Building Code NE PR2.Building Code
      *   |- c8    : PR1.Room Code NE PR2.Room Code
      *   |- c9    : PR1.Bin Code NE PR2.Bin Code
      *   |- c10   : PR1.System Hog Group Nbr NE PR2.System Hog Group Nbr
      *   |- c11   : PR1.Allocation Flag NE PR2.Allocation Flag
      *   |- c12   : PR1.Allocated Date NE PR2.Allocated Date
      *   |- c13   : PR1.Ration Code NE PR2.Ration Code
      *   |- c14   : PR1.Additive Code NE PR2.Additive Code
      *   |- c15   : PR1.Feed Manf Type Code NE PR2.Feed Manf Type Code
      *   |- c16   : PR1.Feed Ticket Pounds NE PR2.Feed Ticket Pounds
      *   |- c17   : PR1.Ingredient Amount NE PR2.Ingredient Amount
      *   |- c18   : PR1.Ration Cost Effective Dte NE PR2.Ration Cost Eff
      *   |- c19   : PR1.Manufacturing Amount NE PR2.Manufacturing Amount
      *   |- c20   : PR1.Mfg Cost Effective Date NE PR2.Mfg Cost Effectiv
      *   |- c21   : PR1.Delivery Amount NE PR2.Delivery Amount
      *   |- c22   : PR1.Medication Amount NE PR2.Medication Amount
      *   '-
     C                   IF        P1RGCD <> P2RGCD OR
     C                             P1FSCD <> P2FSCD OR
     C                             P1LNNO <> P2LNNO OR
     C                             P1TKDT <> P2TKDT OR
     C                             P1RTNO <> P2RTNO OR
     C                             P1RTDT <> P2RTDT OR
     C                             P1BLCD <> P2BLCD OR
     C                             P1RMCD <> P2RMCD OR
     C                             P1BNCD <> P2BNCD OR
     C                             P1HGSN <> P2HGSN OR
     C                             P1ALFL <> P2ALFL OR
     C                             P1ALDT <> P2ALDT OR
     C                             P1RNCD <> P2RNCD OR
     C                             P1ADCD <> P2ADCD OR
     C                             P1FTCD <> P2FTCD OR
     C                             P1FDLB <> P2FDLB OR
     C                             P1INAM <> P2INAM OR
     C                             P1RCDT <> P2RCDT OR
     C                             P1MFAM <> P2MFAM OR
     C                             P1MCDT <> P2MCDT OR
     C                             P1DLAM <> P2DLAM OR
     C                             P1MDAM <> P2MDAM
     C                   MOVEL     'Y'           YL0001                         Update Record U
     C                   END                                                    *FI
      * Update Record?
      * CASE: LCL.Update Record USR is Yes
      * Create Feed Ticket Detail TRG *
      * Move input parameters to subroutine local variables.
     C                   IF        YL0001 = 'Y'
     C                   MOVEL(P)  P2FMBO        WLFMBO                         Feed Mill B/O C
     C                   Z-ADD     P2TKNO        WLTKNO                         HPS Ticket Numb
     C                   MOVEL(P)  P2TRCD        WLTRCD                         Transaction Cod
     C                   Z-ADD     P2LNNO        WLLNNO                         Line Number
     C                   MOVEL(P)  P2BLCD        WLBLCD                         Building Code
     C                   MOVEL(P)  P2RMCD        WLRMCD                         Room Code
     C                   Z-ADD     P2HGSN        WLHGSN                         System Hog Grou
     C                   MOVEL(P)  P3D8SC        WLEVSTS                        FTDT TRG Databa
     C                   MOVEL(P)  '0'           WLPRSTS                        FTDT Process St
     C                   Z-ADD     *ZERO         WLPRDT                         FTDT Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Create Feed Ticket Detail TRG *
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   MOVEL(P)  P1FMBO        WLFMBO                         Feed Mill B/O C
     C                   Z-ADD     P1TKNO        WLTKNO                         HPS Ticket Numb
     C                   MOVEL(P)  P1TRCD        WLTRCD                         Transaction Cod
     C                   Z-ADD     P1LNNO        WLLNNO                         Line Number
     C                   MOVEL(P)  P1BLCD        WLBLCD                         Building Code
     C                   MOVEL(P)  P1RMCD        WLRMCD                         Room Code
     C                   Z-ADD     P1HGSN        WLHGSN                         System Hog Grou
     C                   MOVEL(P)  P3D8SC        WLEVSTS                        FTDT TRG Databa
     C                   MOVEL(P)  '0'           WLPRSTS                        FTDT Process St
     C                   Z-ADD     *ZERO         WLPRDT                         FTDT Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Create Feed Ticket Detail TRG  *
      *================================================================
      *
     C                   MOVEL     XDTSDL        WNTSTMP                        FTDT Timestamp
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to @CACPJE
     C                   MOVEL     WLFMBO        WAFMBO                         Feed Mill B/O C
     C                   Z-ADD     WLTKNO        WATKNO                         HPS Ticket Numb
     C                   MOVEL     WLTRCD        WATRCD                         Transaction Cod
     C                   Z-ADD     WLLNNO        WALNNO                         Line Number
     C                   MOVEL     WLBLCD        WABLCD                         Building Code
     C                   MOVEL     WLRMCD        WARMCD                         Room Code
     C                   Z-ADD     WLHGSN        WAHGSN                         System Hog Grou
     C                   MOVEL     WLEVSTS       WAEVSTS                        FTDT TRG Databa
     C                   MOVEL     WLPRSTS       WAPRSTS                        FTDT Process St
     C                   Z-ADD     WLPRDT        WAPRDT                         FTDT Process Da
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WASTMP                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAFMBO                         Feed Mill B/O C
     C                   KFLD                    WATKNO                         HPS Ticket Numb
     C                   KFLD                    WATRCD                         Transaction Cod
     C                   KFLD                    WALNNO                         Line Number
     C                   KFLD                    WABLCD                         Building Code
     C                   KFLD                    WARMCD                         Room Code
     C                   KFLD                    WAHGSN                         System Hog Grou
     C                   KFLD                    WASTMP                         FTDT Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     FDTREC                                 90    *
     C                   IF        *IN90                                        Dup Timestamp Exist
     C                   EVAL      W_WASTMP = WASTMP
      * Loop Until System Timestamp Changes.
     C                   DOW       W_WASTMP = WASTMP
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WASTMP                         @Timestamp TS#
     C                   ENDDO
     C                   ENDIF
      *
     C                   WRITE     FDTREC                               91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WATKNO                         HPS Ticket Numb
     C                   Z-ADD     *ZERO         WALNNO                         Line Number
     C                   Z-ADD     *ZERO         WAHGSN                         System Hog Grou
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WASTMP                         FTDT Timestamp
     C                   Z-ADD     *ZERO         WAPRDT                         FTDT Process Da
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   EVAL      WLFMBO = ' '
     C                   Z-ADD     *ZERO         WLTKNO
     C                   EVAL      WLTRCD = ' '
     C                   Z-ADD     *ZERO         WLLNNO
     C                   EVAL      WLBLCD = ' '
     C                   EVAL      WLRMCD = ' '
     C                   Z-ADD     *ZERO         WLHGSN
     C                   EVAL      WLEVSTS = ' '
     C                   EVAL      WLPRSTS = ' '
     C                   Z-ADD     *ZERO         WLPRDT
      * Define local work field Update Record USR
     C                   EVAL      YL0001 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
