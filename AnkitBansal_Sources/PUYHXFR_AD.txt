// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUYHXFR
// ?Date: 14.08.2025 Time: 03:51:40
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?NOTE: JS 'IB824NOTRV' calls this function every 1 hour interval.
//?      ReProcess the EDI 601 transactions where the EDI 824 has not
//?      been received for more/equal than 1 hour ago.
EXECUTE FUNCTION(Rtv System Dt/Tm *YMD IF) TYPE(EXCINTFUN)                      AC2212577;
PARAMETER(LCL.System_Date_D8#_USR);
PARAMETER(LCL.System_Time_USR);
{
 //?Execute internal function

 // LCL.*System timestamp = JOB.*System timestamp
 LCL.*System_timestamp = JOB.*System_timestamp;

 //?Format System Date. (YYYMMDD)
 // LCL.Year USR = SUBSTRING(LCL.*System timestamp,CON.1,CON.4)
 LCL.Year_USR = SUBSTRING(LCL.*System_timestamp:1:4);

 // LCL.Month USR = SUBSTRING(LCL.*System timestamp,CON.6,CON.2)
 LCL.Month_USR = SUBSTRING(LCL.*System_timestamp:6:2);

 // LCL.Day USR = SUBSTRING(LCL.*System timestamp,CON.9,CON.2)
 LCL.Day_USR = SUBSTRING(LCL.*System_timestamp:9:2);

 // LCL.Date (Char-8) USR = CONCAT(LCL.Year USR,LCL.Month USR,CON.*ZERO)
 LCL.Date_Char_8_USR = LCL.Year_USR + LCL.Month_USR (*ZERO);

 // LCL.Date (Char-8) USR = CONCAT(LCL.Date (Char-8) USR,LCL.Day USR,CON.*ZERO)
 LCL.Date_Char_8_USR = LCL.Date_Char_8_USR + LCL.Day_USR (*ZERO);

 // LCL.DATE = CVTVAR(LCL.Date (Char-8) USR)
 LCL.DATE = CVTVAR(LCL.Date_Char_8_USR);

 // PAR.System Date D8# USR = LCL.DATE
 PAR.System_Date_D8#_USR = LCL.DATE;

 //?Format System Time.
 // LCL.Hours  2A            USR = SUBSTRING(LCL.*System timestamp,CON.12,CON.2)
 LCL.Hours_2A_USR = SUBSTRING(LCL.*System_timestamp:12:2);

 // LCL.Minutes  2A          USR = SUBSTRING(LCL.*System timestamp,CON.15,CON.2)
 LCL.Minutes_2A_USR = SUBSTRING(LCL.*System_timestamp:15:2);

 // LCL.Seconds 2A            USR = SUBSTRING(LCL.*System timestamp,CON.18,CON.2)
 LCL.Seconds_2A_USR = SUBSTRING(LCL.*System_timestamp:18:2);

 // LCL.Time Alpha usr 6 = CONCAT(LCL.Hours  2A            USR,LCL.Minutes  2A          USR,CON.*ZER
 LCL.Time_Alpha_usr_6 = LCL.Hours_2A_USR + LCL.Minutes_2A_USR (*ZERO);

 // LCL.Time Alpha usr 6 = CONCAT(LCL.Time Alpha usr 6,LCL.Seconds 2A            USR,CON.*ZERO)
 LCL.Time_Alpha_usr_6 = LCL.Time_Alpha_usr_6 + LCL.Seconds_2A_USR (*ZERO);

 // PAR.System Time USR = CVTVAR(LCL.Time Alpha usr 6)
 PAR.System_Time_USR = CVTVAR(LCL.Time_Alpha_usr_6);

}


// LCL.Time From = LCL.System Time USR + CON.-60 *MINUTES
LCL.Time_From = TIMEINCR(LCL.System_Time_USR '-60' 'MN');

//?Set to Yesterday's Date.
CASE;

// IF LCL.Time From is 11th Hour in PM
IF LCL.Time_From >= 230000;
AND LCL.Time_From <= 235959;

// LCL.Yesterday Date Sts USR = CND.Yes
LCL.Yesterday_Date_Sts_USR = 'Y';

// LCL.Yesterday Date D8# USR = LCL.System Date D8# USR + CON.-1 *DAYS
LCL.Yesterday_Date_D8#_USR = DATEINCR(LCL.System_Date_D8#_USR '-1' 'DY' 1111111 'NONE'             +
'N' 1);

// LCL.System Date D8# USR = LCL.Yesterday Date D8# USR
LCL.System_Date_D8#_USR = LCL.Yesterday_Date_D8#_USR;

//?Set to Yesterday's Date.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Yesterday Date Sts USR = CND.No
LCL.Yesterday_Date_Sts_USR = 'N';

ENDIF;

EXECUTE FUNCTION(Exc 824 Not Rcvd f/601 RT) TYPE(RTVOBJ) FILE(ECP136)           AC2212575;
PARAMETER(LCL.System_Date_D8#_USR);
PARAMETER(LCL.Time_From);
PARAMETER(LCL.System_Time_USR);
PARAMETER(LCL.Yesterday_Date_Sts_USR);
PARAMETER(LCL.Yesterday_Date_D8#_USR);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(RTV System Value Alpha RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1530745;
 PARAMETER('EDI824EXP');
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
 PARAMETER('DTALIB');
 PARAMETER(LCL.Library_List_Code);
 PARAMETER(NLL.@Library_List_Code);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.System Value Code is Data File Library
  IF DB1.System_Value_Code = 'DTALIB';

  // PAR.Library List Code = DB1.System Value Alpha
  PAR.Library_List_Code = DB1.System_Value_Alpha;

  // IF DB1.System Value Code is History File Library
  IF DB1.System_Value_Code = 'HISLIB';

  // PAR.@Library List Code = DB1.System Value Alpha
  PAR.@Library_List_Code = DB1.System_Value_Alpha;

  QUIT;

  ENDIF;

 }

 // LCL.First Time Through USR = CND.Yes
 LCL.First_Time_Through_USR = 'Y';

 // LCL.Send Email USR = CND.No
 LCL.Send_Email_USR = 'N';

 CASE;

 // IF PAR.Yesterday Date Sts USR is Yes
 IF PAR.Yesterday_Date_Sts_USR = 'Y';

 // LCL.Current Date D8# = PAR.Yesterday Date D8# USR + CON.1 *DAYS
 LCL.Current_Date_D8# = DATEINCR(PAR.Yesterday_Date_D8#_USR 1 'DY' 1111111 'NONE' 'N' 1);

 ENDIF;

 //?USER: Process Data record

 //?Check Yesterday or Current Date Processing.
 CASE;

 // IF PAR.Yesterday Date Sts USR is Yes
 IF PAR.Yesterday_Date_Sts_USR = 'Y';

 //?Select Records Not Within 11PM & 12AM Time Frame.
 CASE;

 // IF PAR.Create Date D8# EQ DB1.Create Date D8#
 IF ( PAR.Create_Date_D8# = DB1.Create_Date_D8#;

 // AND DB1.Create Time is 11th Hour in PM
 AND DB1.Create_Time >= 230000;
 AND DB1.Create_Time <= 235959 );

 // OR DB1.Create Date D8# EQ LCL.Current Date D8#
 OR ( DB1.Create_Date_D8# = LCL.Current_Date_D8#;

 // AND DB1.Create Time is Midnight Hour
 AND DB1.Create_Time >= 000000;
 AND DB1.Create_Time <= 005959 );

 //?We should NOT be running this during this time frame.
 //?11th Hour in PM & Midnight Hour, Do NOT Select.
 // LCL.Continue (Yes/No) USR = CND.No
 LCL.Continue_Yes_No_USR = 'N';

 //?Select Records Not Within 11PM & 12AM Time Frame.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Continue (Yes/No) USR = CND.Yes
 LCL.Continue_Yes_No_USR = 'Y';

 ENDIF;

 //?Check Yesterday or Current Date Processing.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Current Date Processing. Select Records Past the 1 Hour or More.
 CASE;

 // IF PAR.Create Date D8# EQ DB1.Create Date D8#
 IF PAR.Create_Date_D8# = DB1.Create_Date_D8#;

 // AND DB1.Create Time GT PAR.Create Time
 AND DB1.Create_Time > PAR.Create_Time;

 // AND DB1.Create Time LE PAR.System Time USR
 AND DB1.Create_Time <= PAR.System_Time_USR;

 // LCL.Continue (Yes/No) USR = CND.No
 LCL.Continue_Yes_No_USR = 'N';

 //?Current Date Processing. Select Records Past the 1 Hour or More.
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Continue (Yes/No) USR = CND.Yes
 LCL.Continue_Yes_No_USR = 'Y';

 ENDIF;

 ENDIF;

 //?Continue to Process?
 CASE;

 // IF LCL.Continue (Yes/No) USR is Yes
 IF LCL.Continue_Yes_No_USR = 'Y';

 //?Format Data.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Load ID Alpha USR = CVTVAR(DB1.BA105-Shipment Ref #-Load)
 LCL.Load_ID_Alpha_USR = CVTVAR(DB1.BA105_Shipment_Ref_#_Load);

 //?Date.
 // LCL.Create Date = DB1.Create Date D8#
 LCL.Create_Date = DB1.Create_Date_D8#;

 EXECUTE FUNCTION(Cvt DTE to MM/DD/YYYY  IF) TYPE(EXCINTFUN)                     AC2215661;
 PARAMETER(LCL.Create_Date);
 PARAMETER(LCL.Date_mm_dd_yyyy_USR);
 {
  //?Execute internal function

  //?Break apart date.
  // PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
  PAR.YYYY_numeric_USR = DATEDTLS(PAR.@Date_ATR 'YR' 1111111 'NONE' 'N' 1);

  // PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
  PAR.MM_numeric_USR = DATEDTLS(PAR.@Date_ATR 'MO' 1111111 'NONE' 'N' 1);

  // PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
  PAR.DD_numeric_USR = DATEDTLS(PAR.@Date_ATR 'DM' 1111111 'NONE' 'N' 1);

  //?Convert to alpha.
  // PAR.YYYY alpha   USR = CVTVAR(PAR.YYYY numeric USR)
  PAR.YYYY_alpha_USR = CVTVAR(PAR.YYYY_numeric_USR);

  // PAR.MM   alpha   USR = CVTVAR(PAR.MM   numeric USR)
  PAR.MM_alpha_USR = CVTVAR(PAR.MM_numeric_USR);

  // PAR.DD   alpha   USR = CVTVAR(PAR.DD   numeric USR)
  PAR.DD_alpha_USR = CVTVAR(PAR.DD_numeric_USR);

  //?Put back together.
  // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.MM   alpha   USR,CON./,CON.*ZERO)
  PAR.Date_mm_dd_yyyy_USR = PAR.MM_alpha_USR + '/' (*ZERO);

  // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,PAR.DD   alpha   USR,CO
  PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + PAR.DD_alpha_USR (*ZERO);

  // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,CON./,CON.*ZERO)
  PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + '/' (*ZERO);

  // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,PAR.YYYY alpha   USR,CO
  PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + PAR.YYYY_alpha_USR (*ZERO);

 }

 //?Time.
 // LCL.Time  6A             USR = CVTVAR(DB1.Create Time)
 LCL.Time_6A_USR = CVTVAR(DB1.Create_Time);

 // LCL.Hour 2A USR = SUBSTRING(LCL.Time  6A             USR,CON.1,CON.2)
 LCL.Hour_2A_USR = SUBSTRING(LCL.Time_6A_USR:1:2);

 // LCL.Minute 2A USR = SUBSTRING(LCL.Time  6A             USR,CON.3,CON.2)
 LCL.Minute_2A_USR = SUBSTRING(LCL.Time_6A_USR:3:2);

 // LCL.Second 2A USR = SUBSTRING(LCL.Time  6A             USR,CON.5,CON.2)
 LCL.Second_2A_USR = SUBSTRING(LCL.Time_6A_USR:5:2);

 // LCL.Time  HH:MM:SS      USR = CONCAT(LCL.Hour 2A USR,CON.:,CON.*ZERO)
 LCL.Time_HHMMSS_USR = LCL.Hour_2A_USR + ':' (0);

 // LCL.Time  HH:MM:SS      USR = CONCAT(LCL.Time  HH:MM:SS      USR,LCL.Minute 2A USR,CON.*ZERO)
 LCL.Time_HHMMSS_USR = LCL.Time_HHMMSS_USR + LCL.Minute_2A_USR (0);

 // LCL.Time  HH:MM:SS      USR = CONCAT(LCL.Time  HH:MM:SS      USR,CON.:,CON.*ZERO)
 LCL.Time_HHMMSS_USR = LCL.Time_HHMMSS_USR + ':' (0);

 // LCL.Time  HH:MM:SS      USR = CONCAT(LCL.Time  HH:MM:SS      USR,LCL.Second 2A USR,CON.*ZERO)
 LCL.Time_HHMMSS_USR = LCL.Time_HHMMSS_USR + LCL.Second_2A_USR (0);

 ENDIF;

 //?Format Email Data.
 CASE;

 // IF LCL.First Time Through USR is Yes
 IF LCL.First_Time_Through_USR = 'Y';

 // LCL.First Time Through USR = CND.No
 LCL.First_Time_Through_USR = 'N';

 // LCL.Send Email USR = CND.Yes
 LCL.Send_Email_USR = 'Y';

 //?Format Email Subject Line.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Subject 2 USR = CONCAT(CON.AES 824 Application Advic,CON.e Not Received,CON.*ZERO)
 LCL.Email_Subject_2_USR = 'AES 824 Application Advic' + 'e Not Received' (0);

 //?If Not PROD Then Append 'TEST' to Email Subject Line.
 CASE;

 // IF LCL.Library List Code is Not PRKFLIB
 IF LCL.Library_List_Code <> 'PRKFLIB';

 // LCL.Email Subject 2 USR = CONCAT(LCL.Email Subject 2 USR,CON.- TEST,CON.1)
 LCL.Email_Subject_2_USR = LCL.Email_Subject_2_USR + '- TEST' (1);

 ENDIF;

 ENDIF;

 //?Format Email Message.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Email Message 2 USR = CONCAT(CON.The AES 824 Application A,CON.dvice has not been,CON.*ZERO)
 LCL.Email_Message_2_USR = 'The AES 824 Application A' + 'dvice has not been' (0);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.received for the,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'received for the' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.following Load(s). The ED,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'following Load(s). The ED' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.I 601 transaction(s) has,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'I 601 transaction(s) has' (0);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.been resubmitted to AES.,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'been resubmitted to AES.' (1);

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.Load ID    601 Created Da,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'Load ID    601 Created Da' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.te/Time:,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + 'te/Time:' (0);

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-----------   -----------,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-----------   -----------' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.-------------------,CON.*ZERO)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '-------------------' (0);

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Load ID Alpha USR,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Load_ID_Alpha_USR (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Date mm/dd/yyyy USR,CON.3)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Date_mm_dd_yyyy_USR (3);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Time  HH:MM:SS      USR,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Time_HHMMSS_USR (1);

 ENDIF;

 //?Format Email Data.
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Format Email Message - Append Additional Loads.
 CASE;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Force New Line.
 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Load ID Alpha USR,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Load_ID_Alpha_USR (1);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Date mm/dd/yyyy USR,CON.3)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Date_mm_dd_yyyy_USR (3);

 // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Time  HH:MM:SS      USR,CON.1)
 LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Time_HHMMSS_USR (1);

 ENDIF;

 ENDIF;

 //?Resubmit the Original EDI 601 Transaction.
 EXECUTE FUNCTION(Chg EDI Rcd Processed CH) TYPE(CHGOBJ) FILE(ECP136)            AC2211483;
 PARAMETER(DB1.ST02_TRANS_SET_CONTROL_NU);
 PARAMETER('N');
 ENDIF;

 //?USER: Exit processing

 //?OK to Send Email?
 CASE;

 // IF LCL.Send Email USR is Yes
 IF LCL.Send_Email_USR = 'Y';

 // Call program Exc ESNDMAIL Generic2 CL.
 CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
 PARAMETER(LCL.Email_Address);
 PARAMETER(LCL.Email_Subject_2_USR);
 PARAMETER(LCL.Email_Message_2_USR);

 ENDIF;

}


