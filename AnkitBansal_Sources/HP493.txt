      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP493
      * TITLE:       Specify Transfer Movement BOL to Print
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     09/13/04
      *
      * FUNCTION:    Prints Bill of Ladings for Scheduled Transfer Movements.
      *
      *              This program is called from:
      *                  1) Work with Transfers
      *                  2) Work with Scheduled Transfers
      *
      * This is a clone of HP481. It is used to generate the new BOL form.
      * Once everybody is using the new form, HP481 will be replaced with HP493.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 07/17/21  Danny Nguyen  (W80211)
      *           Added option to enter email address (optional) to send BOL as PDF
      *           via ESEND. Will set email address within Cmd_StringDS.
      *           Removed 'cmd' as array table & will now use 'Cmd_String' with
      *           QCMDEXC prototype.
      *
      ****************************************************************
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd493    cf   e             workstn infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp010    if   e           k disk
      *    Production type
      *
      *
     Fhsp011    if   e           k disk
      *    Production phase
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp074    if   e           k disk
      *    Transfer movement header
      *
      *
     Fhsp109    if   e           k disk
      *    Transportation offices
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET   '
     D scrn1           c                   'SCRN1 '
     D edit1           c                   'EDIT1 '
     D exit            c                   'EXIT  '
80211D quote           c                   const(X'7D')                         Single Quote
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *  W80211 - Commented out & will use 'cmdstring'.
      *---------------------------------------------------------------
80211D** cmd             s              1    dim(80) ctdata perrcd(80)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * W80211 - Use for QCMDEXC.
80211D Cmd_String      s            512a   Inz
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      *
      * Control/flag fields
      *
     D termfl          s              1
      *
      *
      * Work fields for date manipulation
      *
     D wkcymdiso       s               d   datfmt(*iso)
      *
      *
      * Parm fields
      *
     D xxreprint       s              1
      *
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxmvsn          s                   like(mhmvsn)
     D xxaist          s              1
      *
     D xxptcd          s                   like(ptptcd)
     D xxptds          s                   like(ptptds)
     D xxppcd          s                   like(ppppcd)
     D xxppds          s                   like(ppppds)
      *
     D xxtocd          s                   like(totocd)
     D xxtonm          s                   like(totonm)
      *
     D xxalphcell      s              2
     D xxalphfscd      s              5
     D xxalphmvsn      s              7
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *  W80211 - Do not default 'length'. Commented out & add it to QCMDEXC Prototype.
      *
80211D** length          s             15  5 inz(80)
80211D** cmdsbm          s             80
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * W80211 - Data Structure to Build 'cmd' for QCMDEXC.
      *---------------------------------------------------------------
      *
80211 ** SBMJOB CMD(CALL PGM(HP493CL) PARM('emailaddress')) JOB(TRANBOL) JOBQ(__________)
  |  D Cmd_StringDS    ds                  inz
  |  D  string1                1     28    inz('SBMJOB CMD(CALL PGM(HP493CL)')
  |  D  string2               29     34    inz(' PARM(')
  |  D  str_quote1            35     35
  |  D  str_email             36     85
  |  D  str_quote2            86     86
  |  D  string3               87    102    inz(')) JOB(TRANBOL) ')
  |  D  string4              103    107    inz('JOBQ(')
  |  D  str_jobq             108    117
80211D  string5              118    119    inz(')')
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldreprint              1      1
     D  ldmvsn                 2      8  0
      *
     D  ldfcymd                9     16  0
     D  ldtcymd               17     24  0
      *
     D  ldortocd              25     29
     D  ldorptcd              30     34
     D  ldorppcd              35     39
     D  ldorcell              40     41  0
     D  ldorfscd              42     46  0
      *
     D  lddnptcd              47     51
     D  lddnppcd              52     56
     D  lddncell              57     58  0
     D  lddnfscd              59     63  0
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      ****************************************************************
      * PROTOTYPES
      ****************************************************************
      *
      * W80211 - Command Execute Prototype.
80211D ExcCmd          PR                  ExtPgm('QCMDEXC')
  |  D  CmdString                   512a   Options(*VARSIZE) Const
80211D  CmdLength                    15p 5 Const
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C                   movel     set1          routne
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * If the user failed the initial security checks, set on indicator to
      * protect input fields and invalidate function keys.
      *
     C                   if        termfl = yes
     C                   seton                                        99
     C                   endif
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp493k1
     C                   write     hp493ec
     C                   exfmt     hp493r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on  or                              F3-exit
     C                             *in12 = *on
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
     C                   other
      *
     C                   movel     edit1         routne
     C                   endsl
      *
     c                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) movement number
      *        -OR-
      *   1) origin transportation office (required)
      *   2) from/to dates (required)
      *   3) origin data (optional)
      *   4) destination data (optional)
      *
     C                   select
     C                   when      d1mvsn <> 0
     C                   exsr      $mvsn
     C                   other
      *
      * Required selections
     C                   exsr      $ortocd
     C                   exsr      $fmdy
     C                   exsr      $tmdy
      * Optional--Origin
     C                   exsr      $orppcd
     C                   exsr      $orptcd
     C                   exsr      $orcell
     C                   exsr      $orfscd
      *
      * Optional--Destination
      *
     C                   exsr      $dnppcd
     C                   exsr      $dnptcd
     C                   exsr      $dncell
     C                   exsr      $dnfscd
     C                   endsl
      *
      * You user cannot elect to run more than 1 copy. Issue message if
      * user has elected to run multiple copies.
      *
     C                   if        xxcopy > 1 and error < maxmsg
     C                   add       1             error
     C                   movel     'HS09134'     mgid(e)
     C                   endif
      *
      *
      * If there are no errors and the user took F8=submit, process the request.
      *
     C                   if        error = 0 and *in08 = *on
     C                   exsr      $proc1
     C                   endif
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Movement
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) must be valid in master file
      *  3) must have a Scheduled status
      *
     C     $mvsn         begsr
      *
     C     d1mvsn        chain     hsp074                             92
      *
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00733'     mgid(e)
     C                   clear                   mgw
     C                   movel     d1mvsn        xxalphmvsn
     C                   movea     xxalphmvsn    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   when      mhmscd <> 'SC'
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00728'     mgid(e)
     C                   clear                   mgw
     C                   movel     d1mvsn        xxalphmvsn
     C                   movea     xxalphmvsn    mgw(1)
     C                   movea     mhmscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Origin Transporation Office
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be valid in master file
      *
     C     $ortocd       begsr
      *
     C                   select
     C                   when      d1ortocd = *blank
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1ortocd      chain     hsp109                             92
     C                   if        *in92 = *off                                 If hit
     C                   move      totonm        d1ortonm
     C                   else
      *
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01196'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1ortocd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate From Date
      *----------------------------------------------------------------
      *
      * Validations:
      *       1) cannot be zero
      *       2) cannot be negative
      *       3) must be a valid date
      *
     C     $fmdy         begsr
      *
     C                   z-add     0             ldfcymd
      *
     C                   select
     C                   when      d1fmdy = 0
     C                   seton                                        45
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1fmdy < 0
     C                   seton                                        45
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1fmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        45
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1fmdy        wkcymdiso
     C                   move      wkcymdiso     ldfcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate To Date
      *----------------------------------------------------------------
      *
      * Validations:
      *       a) cannot be zero
      *       b) cannot be negative
      *       c) must be a valid date
      *       d) cannot be earlier than from date
      *
     C     $tmdy         begsr
      *
     C                   z-add     0             ldtcymd
      *
     C                   select
     C                   when      d1tmdy = 0
     C                   seton                                        46
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1tmdy < 0
     C                   seton                                        46
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1tmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        46
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1tmdy        wkcymdiso
     C                   move      wkcymdiso     ldtcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      *
      * To date cannot be earlier than from date.
      *
     C                   if        *in45 = *off and
     C                             *in46 = *off and
     C                             ldtcymd < ldfcymd
     C                   seton                                        46
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09009'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Origin Production Type
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) must exist in master file
      *
     C     $orptcd       begsr
      *
     C                   move      *blank        d1orptds
      *
     C                   select
     C                   when      d1orptcd <> *blank
     C     d1orptcd      chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1orptds
     C                   else
      *
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1orptcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Origin Production Phase
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) must exist in master file
      *
     C     $orppcd       begsr
      *
     C                   move      *blank        d1orppds
      *
     C                   select
     C                   when      d1orppcd <> *blank
     C     d1orppcd      chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1orppds
     C                   else
      *
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1orppcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Origin Cell
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *
     C     $orcell       begsr
      *
     C                   if        d1orcell < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Origin Farm Site
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *  2) must exist in master file
      *  3) must match Transportation Office
      *  4) must match Cell if a Cell is keyed
      *
     C     $orfscd       begsr
      *
     C                   move      *blank        d1orfsnm
      *
     C                   select
     C                   when      d1orfscd = 0
      *
     C                   when      d1orfscd < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1orfscd      chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1orfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1orfsnm
      *
      * Must match Transportation Office
      *
     C                   if        fstocd <> d1ortocd                           If tran office
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01218'     mgid(e)
     C                   clear                   mgw
     C                   move      d1orfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fstocd        mgw(6)
     C                   movea     d1ortocd      mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If tran office
      *
      *
      * Must match cell the user has keyed...if he keyed one
      *
     C                   if        d1orcell <> 0 and                            If cell mismatch
     C                             fscell <> d1orcell
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1orfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1orcell      xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Destination Production Type
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) must exist in master file
      *
     C     $dnptcd       begsr
      *
     C                   move      *blank        d1dnptds
      *
     C                   select
     C                   when      d1dnptcd <> *blank
     C     d1dnptcd      chain     hsp010                             92
     C                   if        *in92 = *off                                 If good type
     C                   move      ptptds        d1dnptds
     C                   else
      *
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00180'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1dnptcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Destination Production Phase
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) must exist in master file
      *
     C     $dnppcd       begsr
      *
     C                   move      *blank        d1dnppds
      *
     C                   select
     C                   when      d1dnppcd <> *blank
     C     d1dnppcd      chain     hsp011                             92
     C                   if        *in92 = *off                                 If good phase
     C                   move      ppppds        d1dnppds
     C                   else
      *
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00170'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1dnppcd      mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endif                                                  If good phase
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Destination Cell
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *
     C     $dncell       begsr
      *
     C                   if        d1dncell < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Destination Farm Site
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *  2) must exist in master file
      *  3) must match Cell if a Cell is keyed
      *
     C     $dnfscd       begsr
      *
     C                   move      *blank        d1dnfsnm
      *
     C                   select
     C                   when      d1dnfscd = 0
      *
     C                   when      d1dnfscd < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1dnfscd      chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1dnfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1dnfsnm
      *
      * Must match cell the user has keyed...if he keyed one
      *
     C                   if        d1dncell <> 0 and                            If cell mismatch
     C                             fscell <> d1dncell
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1dnfscd      xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1dncell      xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   move      xxreprint     ldreprint
      *
     C                   if        d1mvsn <> 0
     C                   z-add     d1mvsn        ldmvsn
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtcymd
     C                   move      *blank        ldortocd
     C                   move      *blank        ldorppcd
     C                   move      *blank        ldorptcd
     C                   z-add     0             ldorcell
     C                   z-add     0             ldorfscd
     C                   move      *blank        lddnppcd
     C                   move      *blank        lddnptcd
     C                   z-add     0             lddncell
     C                   z-add     0             lddnfscd
     C                   else
      *
     C                   z-add     0             ldmvsn
     C                   move      d1ortocd      ldortocd
     C                   move      d1orppcd      ldorppcd
     C                   move      d1orptcd      ldorptcd
     C                   z-add     d1orcell      ldorcell
     C                   z-add     d1orfscd      ldorfscd
      *
     C                   move      d1dnppcd      lddnppcd
     C                   move      d1dnptcd      lddnptcd
     C                   z-add     d1dncell      lddncell
     C                   z-add     d1dnfscd      lddnfscd
     C                   endif
      *
     C                   out       lda
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
      * W80211 - Commented Out. Use QCMDEXC Prototype to Submit Job.
80211C**                 movea     xxjobq        cmd(49)
  |  C**                 movea     cmd           cmdsbm
  |  C**                 call      'QCMDEXC'
  |  C**                 parm                    cmdsbm
  |  C**                 parm                    length
  |   *
  |   * W80211 - Build 'Cmd_StringDS' data structure before calling QCMDEXC API.
  |  C                   eval      str_quote1 = quote
  |  C                   eval      str_email = D1EMAIL
  |  C                   eval      str_quote2 = quote
  |  C                   eval      str_jobq = xxjobq
  |  C                   eval      Cmd_String = Cmd_StringDS
  |   *
80211C                   Callp     ExcCmd(Cmd_String : %len(%trim(Cmd_String)))
      *
      * Issue standard submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09003'     mgid(e)
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Prompts on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Movement
     C                   select
     C                   when      fld = 'D1MVSN'
     C                   call      'HP5047'
     C                   parm                    xxreprint
     C                   parm      0             xxmvsn
     C                   seton                                        52
     C                   if        xxmvsn <> 0
     C                   z-add     xxmvsn        d1mvsn
     C                   endif
      *
      * Origin Transportation Office
      *
     C                   when      fld = 'D1ORTOCD'
     C                   call      'HP5026'
     C                   parm      ' '           xxaist
     C                   parm      *blank        xxtocd
     C                   parm      *blank        xxtonm
     C                   seton                                        50
     C                   if        xxtocd <> *blank
     C                   movel     xxtocd        d1ortocd
     C                   movel     xxtonm        d1ortonm
     C                   endif
      *
      * Origin Production Type
      *
     C                   when      fld = 'D1ORPTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        53
     C                   if        xxptcd <> *blank
     C                   move      xxptcd        d1orptcd
     C                   move      xxptds        d1orptds
     C                   endif
      *
      * Origin Production Phase
      *
     C                   when      fld = 'D1ORPPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        54
     C                   if        xxppcd <> *blank
     C                   move      xxppcd        d1orppcd
     C                   move      xxppds        d1orppds
     C                   endif
      *
      * Origin Farm Site
      *
     C                   when      fld = 'D1ORFSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        55
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1orfscd
     C                   movel     xxfsnm        d1orfsnm
     C                   endif
      *
      * Destination Production Type
      *
     C                   when      fld = 'D1DNPTCD'
     C                   call      'HP504'
     C                   parm      *blank        xxptcd
     C                   parm      *blank        xxptds
     C                   seton                                        57
     C                   if        xxptcd <> *blank
     C                   move      xxptcd        d1dnptcd
     C                   move      xxptds        d1dnptds
     C                   endif
      *
      * Destination Production Phase
      *
     C                   when      fld = 'D1DNPPCD'
     C                   call      'HP507'
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxppds
     C                   seton                                        58
     C                   if        xxppcd <> *blank
     C                   move      xxppcd        d1dnppcd
     C                   move      xxppds        d1dnppds
     C                   endif
      *
      * Destination Farm Site
      *
     C                   when      fld = 'D1DNFSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        59
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1dnfscd
     C                   movel     xxfsnm        d1dnfsnm
     C                   endif
     C                   other
      *
      * F4 not valid for this field; issue message.
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Exit
      *----------------------------------------------------------------
      *
     C     $exit         begsr
      *
     C                   seton                                        lr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Security Program
      *---------------------------------------------------------------
      *
     C     $sec          begsr
      *
     C                   call      'HPSEC  '
      **** IN
     C                   parm                    mgid                           MSGID ARRAY
     C                   parm                    mgdt                           MSGDTA DATA
     C                   parm                    error                          # OF errorS
     C                   parm      sdpgm         infncd                         FUNC CODE
     C                   parm                    inbobo                         BO CODE
     C                   parm                    indvfl                         CHECK DIV?
     C                   parm                    inbofl                         CHECK B.O.?
      **** OUT
     C                   parm      *blank        oubobo                         BO CODE
     C                   parm      *blank        oubods                         BO DESC.
     C                   parm      *blank        oudvcd                         DIV CODE
     C                   parm                    secfl                          SEC ERR FLAG
     C                   parm                    oubofl                         B.O. ERR FLG
     C                   parm                    ourmfl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxreprint
      *
     C                   if        xxreprint = yes
     C                   seton                                        98
     C                   endif
      *
      * Initialize numeric LDA fields
      *
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtcymd
     C                   z-add     0             ldmvsn
      *
     C                   z-add     0             ldorfscd
     C                   z-add     0             ldorcell
      *
     C                   z-add     0             lddnfscd
     C                   z-add     0             lddncell
      *
      * Initialize LDA fields for printing
      *
     C                   move      no            ldhold
     C                   z-add     1             ldcopy
     C                   movel     ldoutu        ldoutq
     C                   movel(p)  'PRIORITY'    xxjobq
     C                   movel     no            xxnite
      *
      *
      * Get this function's number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        xxcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        xxcopy = 0
     C                   z-add     1             xxcopy
     C                   endif
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      * Execute the security routine to determine the user's authorizations.
      *
     C                   exsr      $sec
      *
      * If errors on the initial call, set the terminal flag to yes.
      *
     C                   if        secfl = yes
     C                   movel     yes           termfl
     C                   endif
      *
      *
      * Default System Date in the From/To dates
      *
     C                   z-add     udate         d1fmdy
     C                   z-add     udate         d1tmdy
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      * W80211 - Commented out. Will not use 'cmd' table but 'Cmd_StringDS'.
      *****************************************************************
      ** CMD TABLE
      ** SBMJOB CMD(CALL PGM(HP493CL)) JOB(TRANBOL) JOBQ(__________)
