// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNU6PFR
// ?Date: 14.08.2025 Time: 12:06:02
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E4925 01/26/16 RMC Print printed name
//?RMC Print Mexico Letterheads:
//? L = overlay MEX1 = Pork and products containing pork to mexico
//? N = overlay MEX2 = Pork Offal Products (including skins)
//? M = overlay MEX3 = Pork and products containing pork to mexico &
//?           re-export to Japan
//?USER: Print required level headings

CASE;

IF NEW Company_Number;
CASE;

// IF DB1.ED Document Date is Not entered
IF DB1.ED_Document_Date = *ZERO;

// LCL.Date                  USR = JOB.*Job date
LCL.Date_USR = JOB.*Job_date;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Date                  USR = DB1.ED Document Date
LCL.Date_USR = DB1.ED_Document_Date;

ENDIF;

// WRK.Date (Alpha) USR = CVTVAR(LCL.Date                  USR)
WRK.Date_Alpha_USR = CVTVAR(LCL.Date_USR);

// WRK.Month/Day Alpha MMDD = SUBSTRING(WRK.Date (Alpha) USR,CON.4,CON.4)
WRK.Month_Day_Alpha_MMDD = SUBSTRING(WRK.Date_Alpha_USR:4:4);

// WRK.Year  (Char) USR = SUBSTRING(WRK.Date (Alpha) USR,CON.2,CON.2)
WRK.Year_Char_USR = SUBSTRING(WRK.Date_Alpha_USR:2:2);

// WRK.Year Alpha (YYYY) USR = CONCAT(CON.20,WRK.Year  (Char) USR,CON.*ZERO)
WRK.Year_Alpha_YYYY_USR = '20' + WRK.Year_Char_USR (*ZERO);

// WRK.Date (Char-8) USR = CONCAT(WRK.Month/Day Alpha MMDD,WRK.Year Alpha (YYYY) USR,CON.*ZERO)
WRK.Date_Char_8_USR = WRK.Month_Day_Alpha_MMDD + WRK.Year_Alpha_YYYY_USR (*ZERO);

// CUR.Date 8.0 USR = CVTVAR(WRK.Date (Char-8) USR)
CUR.Date_8_0_USR = CVTVAR(WRK.Date_Char_8_USR);

// CUR.ED Export Certificate Nbr = DB1.ED Export Certificate Nbr
CUR.ED_Export_Certificate_Nbr = DB1.ED_Export_Certificate_Nbr;

// CUR.Order Number = CON.*ZERO
CUR.Order_Number = *ZERO;

//?E00421 RMC 05/26/09 get form letters from company value - copy from JPN
// CUR.ED USDA Cert Nbr US = DB1.ED USDA Cert Nbr US
CUR.ED_USDA_Cert_Nbr_US = DB1.ED_USDA_Cert_Nbr_US;

CASE;

// IF CUR.ED USDA Cert Nbr US is not entered
IF CUR.ED_USDA_Cert_Nbr_US = *BLANK;

EXECUTE FUNCTION(RTV 1st Warehouse/Ctl  RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1360958;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(0);
PARAMETER(0);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(NLL.Trans_Contol_AS400_Plant);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Warehouse Control  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1304300;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.Trans_Contol_AS400_Plant);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(RTV Warehouse Type     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1285482;
PARAMETER(LCL.Warehouse_Code);
PARAMETER(LCL.Warehouse_Type);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Get Fresh /frozen to get which form name to use    RMC 12/10/08
CASE;

// IF LCL.Warehouse Type is Fresh
IF LCL.Warehouse_Type = 'FR';

// WRK.Company Value Code = CON.MPGFRLTR
WRK.Company_Value_Code = 'MPGFRLTR';

//?Get Fresh /frozen to get which form name to use    RMC 12/10/08
// IF LCL.Warehouse Type is Frozen
IF LCL.Warehouse_Type = 'FZ';

// WRK.Company Value Code = CON.MPGFZLTR
WRK.Company_Value_Code = 'MPGFZLTR';

//?Get Fresh /frozen to get which form name to use    RMC 12/10/08
// IF *OTHERWISE
IF *OTHERWISE;

//?default to something
// WRK.Company Value Code = CON.MPGFRLTR
WRK.Company_Value_Code = 'MPGFRLTR';

ENDIF;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DB1.Company_Number);
PARAMETER(WRK.Company_Value_Code);
PARAMETER(WRK.USR_Old_New_prtf_designtn);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.ED USDA Cert Nbr US = WRK.USR Old/New prtf designtn
CUR.ED_USDA_Cert_Nbr_US = WRK.USR_Old_New_prtf_designtn;

//?S020491 SP 10/16/24 Start (Update PHIS Certificate Letters MPP to MPQ)
EXECUTE FUNCTION(Set USDA Cert Nbr US   IF) TYPE(EXCINTFUN)                     AC2235467;
PARAMETER(DB1.Country_Code);
PARAMETER(LCL.Warehouse_Type);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.ED_USDA_Cert_Nbr_US);
{
 //?Execute internal function

 // LCL.ED USDA Cert Nbr US = PAR.ED USDA Cert Nbr US
 LCL.ED_USDA_Cert_Nbr_US = PAR.ED_USDA_Cert_Nbr_US;

 //?Get "USDA Cert Nbr" for Japan/Chile
 CASE;

 // IF PAR.Country Code is Japan
 IF PAR.Country_Code = 'JPN';

 // OR PAR.Country Code is Mexico
 OR PAR.Country_Code = 'MEX';

 // OR PAR.Country Code is Korea
 OR PAR.Country_Code = 'KOR';

 // OR PAR.Country Code is Australia
 OR PAR.Country_Code = 'AUS';

 // OR PAR.Country Code is Chile - ISO 3
 OR PAR.Country_Code = 'CHL';

 // OR PAR.Country Code is NewZealand
 OR PAR.Country_Code = 'NZL';

 // OR PAR.Country Code is New Zealand
 OR PAR.Country_Code = 'NEW';

 CASE;

 // IF PAR.Warehouse Type is Fresh
 IF PAR.Warehouse_Type = 'FR';

 EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
 PARAMETER(PAR.Company_Number);
 PARAMETER('CERTLTRFR');
 PARAMETER(LCL.ED_USDA_Cert_Nbr_US_User);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
 PARAMETER(PAR.Company_Number);
 PARAMETER('CERTLTRFZ');
 PARAMETER(LCL.ED_USDA_Cert_Nbr_US_User);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 ENDIF;

 //?Pass "USDA Cert Nbr" as Output
 CASE;

 // IF LCL.ED USDA Cert Nbr US  User is not entered
 IF LCL.ED_USDA_Cert_Nbr_US_User = *BLANK;

 // PAR.ED USDA Cert Nbr US = LCL.ED USDA Cert Nbr US
 PAR.ED_USDA_Cert_Nbr_US = LCL.ED_USDA_Cert_Nbr_US;

 //?Pass "USDA Cert Nbr" as Output
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.ED USDA Cert Nbr US = LCL.ED USDA Cert Nbr US  User
 PAR.ED_USDA_Cert_Nbr_US = LCL.ED_USDA_Cert_Nbr_US_User;

 ENDIF;

}


//?S020491 SP 10/16/24 End
ENDIF;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DB1.Company_Number);
PARAMETER('MPGLTRDTE');
PARAMETER(LCL.Status_Y_or_N);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Print Company Number header format
PRINT Company Number header format;

ENDIF;

// SUPPRESSED PRINT Order Number header format

// SUPPRESSED PRINT ED Export Document Type header format

//?USER: Print required level totals

// SUPPRESSED PRINT ED Export Document Type totals format

// SUPPRESSED PRINT Order Number totals format

CASE;

IF NEW Company_Number;
CASE;

// IF CUR.ED Export Document Type is Letterhead-Pork to Mex-Jp
IF CUR.ED_Export_Document_Type = 'M';

// CUR.Text USR 23 = CUR.ED Title of Official
CUR.Text_USR_23 = CUR.ED_Title_of_Official;

// CUR.Text USR 9 = CUR.ED Area Office
CUR.Text_USR_9 = CUR.ED_Area_Office;

// CUR.ED Title of Official = CON.*BLANK
CUR.ED_Title_of_Official = *BLANK;

// CUR.ED Area Office = CON.*BLANK
CUR.ED_Area_Office = *BLANK;

// CUR.Text-17               USR = CON.Packaging Plant:
CUR.Text_17_USR = 'Packaging Plant:';

// CUR.Text-18               USR = CON.Establishment:
CUR.Text_18_USR = 'Establishment:';

ENDIF;

// Print Company Number totals format
PRINT Company Number totals format;

ENDIF;

