      *****************  RPG PROGRAM HEADING  ************************
      *‚********* THIS PROGRAM WAS CLONED FROM TF608.     ************
      *‚********* ANY CHANGES TO THIS PROGRAM SHOULD ALSO ************
      *‚********* CONSIDER CHANGING TF608.                ************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF6080
      * TITLE:       Weekly Product Floor Production Report - ALL
      * PROGRAMMER:  Danny Nguyen
      * CREATED:     12/04/2017
      *
      * FUNCTION:    Batch program to print weekly revenue values for a selected date range.
      *              (Includes STF data.)
      *
      *            The report can be generated as:
      *                    1) detail or summary
      *                    2) sort/print by Item Structure or TF Structure
      *                    3) on-demand or from the Synon "Post Inventory Values" function
      *
      *            To make this fit on the line we went with whole numbers for all pounds and
      *            dollars fields for printing; BUT, the underlying accumulations and calcs
      *            use decimal postions. Sooooo, adding the columns DOWN with an adding
      *            machine WILL NOT give the same totals that we print on the report.
      *
      ********************************************************************************
      * MODIFICATIONS:
      ********************************************************************************
      * DATE      PROGRAMMER
      *
      * 04/12/06  LeAnne Fedor
      *           Changed the text that appears at the top of the report to "Post Inventory
      *           Values" when this report is generated automatically from the Post fucntion.
      *
      * 09/19/06  LeAnne Ramsey
      *           Recompile only. Synon file PPAMREP was changed.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 04/16/07  LeAnne Ramsey
      *           Recompile only. Fields were added/changed in the Weekly
      *           Product Revenue file.
      *           Added:   Byproduct Mix Flag
      *                    Meat Cost Group Code
      *           Changed: Exclude from Mix Flag     to  Mix Flag
      *                    Exclude from Volume Flag  to  Volume Flag
      *                    Capability Flag           to  Inventory Flag
      *
      * 05/14/07  LeAnne Ramsey
      *           "Co-owner" fields were added to file TFP010. And, the users
      *           can now elect to generate this report for:
      *              Only CoOwned Products
      *              Only NOT CoOwned Products
      *              Both CoOwned and Not CoOwned Products
      *
      * 08/14/07  LeAnne Ramsey
      *           Added field: Item Type Code to TFP010
      *
      * 02/25/08  LeAnne Ramsey
      *           Funky data was causing an abend on the calc for L1SPC.
      *           Added our standard "funky data" code.
      *
      * 09/11/08  LeAnne Ramsey
      *           Added new field Export/Domestic Flag to layout.
      *
      * 09/12/08  LeAnne Ramsey
      *           Added a new selection on the Export/Domestic Flag.
      *
      * 03/25/14  LeAnne Ramsey (C3058)
      *           When Josh Edwards was running a "Detail" version, it
      *           abended for Item 91816 back on WeekEnding 1/14/14 with
      *           a "value is too large to fit in the target". This
      *           occurred on the calc for the detail line value L1APR.
      *           The TF608 report that runs weekly is the "Summary" version;
      *           the problem doesn't happen in the Summary verison...I think
      *           because I use a div instead of an eval.  Anyway,
      *           I'm going to add a pre-calc into a big workfield to solve
      *           the issue.
      *
      * 12/04/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Program cloned from TF608.
      *           Added 25 STF fields to TFP010 file.
      *           Print the STF fields on report on legal size paper.
      *           STF Floor Produced Pounds will be added to the AGG Floor Produced Pounds.
      *           STF Floor Produced Value Amt will be added to the AGG Floor Produced Value Amt.
      *           Then calculate the % of Total Floor Production for each company.
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES PRANPRPR IN TFP010
      *         CHANGE TO 9.4 -- FIELDS:L1APR, L1SPR, L1TPR, L2APR, L2SPR, L2TPR,
      *                                                      T3APR, T3SPR, T3TPR
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fombyrel0  if   e           k disk
      *    Item default
      *
      *
     Fome8rel0  if   e           k disk
      *    Product type
      *
      *
     Fome9rel0  if   e           k disk
      *    Product group
      *
      *
     Fomfarel1  if   e           k disk
      *    Product class
      *
      *
     Fppamrel1  if   e           k disk
      *    TF Classification
      *
      *
     Ftfl010b   if   e           k disk
      *    Weekly product revenue detail
      *    (Records selected, file keyed in open query)
      *
      *
12011F**print198  o    f  198        printer oflind(*inof)
12011Fprint198  o    f  257        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
12011D dash            s            257    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
     D svrcexfl        s                   like(prrcexfl)
     D svprexfl        s                   like(prprexfl)
      *
     D svistycd        s                   like(pristycd)
     D svisgrcd        s                   like(prisgrcd)
     D svisclcd        s                   like(prisclcd)
     D svtfclcd        s                   like(prtfclcd)
     D svtfcgcd        s                   like(prtfcgcd)
     D svprcd          s                   like(prprcd)
     D svedfl          s                   like(predfl)
      *
      *
      * Array index
      *
     d x               s              1  0
      *
      *
      * Parms
      *
     D xxtfcgcd        s                   like(prtfcgcd)
     D xxtfcgds        s             15
      *
      *
      * Workfields
      *
     D wkpc            s             15  9
     D wklb            s             15  6
     D wkfld           s             15  4
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Print fields
      *
     d h1demand        s             25
     d h1rcexds        s             18
     d h1ieds          s             10
     d h1cods          s             11
     d h1edds          s              8
      *
     d h2prexds        s             20
      *
     d h2isclds        s                   like(fadetx)
     d h2isgrds        s                   like(e9ddtx)
     d h2istyds        s                   like(e8dctx)
      *
     d h2tfclds        s                   like(amq0na)
     d h2tfcgds        s             15
      *
      *
     d l1prds          s             24
     d l1wemdy         s              6  0
     d l1afpulb        s              9  0
     d l1sfpulb        s              9  0
     d l1tfpulb        s              9  0
12011d l1xfpulb        s              9  0
      *
     d l1afpuam        s             10  0
     d l1sfpuam        s             10  0
     d l1tfpuam        s             10  0
12011d l1xfpuam        s             10  0
      *
     d*l1apr           s              7  4
     d*l1spr           s              7  4
     d*l1tpr           s              7  4
12011d*l1xpr           s              7  4
     d l1apr           s              9  4
     d l1spr           s              9  4
     d l1tpr           s              9  4
12011d l1xpr           s              9  4
      *
     d l1spc           s              5  2
     d l1tpc           s              5  2
12011d l1xpc           s              5  2
      *
     d l2prds          s             23
     d l2afpulb        s             10  0
     d l2tfpulb        s             10  0
     d l2sfpulb        s             10  0
12011d l2xfpulb        s             10  0
      *
     d l2afpuam        s             10  0
     d l2sfpuam        s             10  0
     d l2tfpuam        s             10  0
12011d l2xfpuam        s             10  0
      *
     d*l2apr           s              7  4
     d*l2spr           s              7  4
     d*l2tpr           s              7  4
12011d*l2xpr           s              7  4
     d l2apr           s              9  4
     d l2spr           s              9  4
     d l2tpr           s              9  4
12011d l2xpr           s              9  4
      *
     d l2spc           s              5  2
     d l2tpc           s              5  2
12011d l2xpc           s              5  2
      *
     d t2rcexds        s             24
     d t2prexds        s             24
      *
     d t3afpulb        s             10  0
     d t3sfpulb        s             10  0
     d t3tfpulb        s             10  0
12011d t3xfpulb        s             10  0
      *
     d t3afpuam        s             10  0
     d t3sfpuam        s             10  0
     d t3tfpuam        s             10  0
12011d t3xfpuam        s             10  0
      *
     d*t3apr           s              7  4
     d*t3spr           s              7  4
     d*t3tpr           s              7  4
12011d*t3xpr           s              7  4
     d t3apr           s              9  4
     d t3spr           s              9  4
     d t3tpr           s              9  4
12011d t3xpr           s              9  4
      *
     d t3spc           s              5  2
     d t3tpc           s              5  2
12011d t3xpc           s              5  2
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arafpulb        s             11  1 dim(7)
     D arsfpulb        s             11  1 dim(7)
     D artfpulb        s             11  1 dim(7)
12011D arxfpulb        s             11  1 dim(7)
      *
     D arsfpuam        s             12  2 dim(7)
     D artfpuam        s             12  2 dim(7)
     D arafpuam        s             12  2 dim(7)
12011D arxfpuam        s             12  2 dim(7)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
     D  ldfmdy                39     44  0
     D  ldtmdy                45     50  0
     D  ldfcymd               52     59  0
     D  ldtcymd               60     67  0
      *
     D  lddsfl                71     71
     D  lddsds                73     82
      *
     D  ldistycd              83     85  0
     D  ldistyds              86    115
     D  ldisgrcd             116    118  0
     D  ldisgrds             119    148
     D  ldisclcd             149    151  0
     D  ldisclds             152    181
     D  ldprcd               182    188  0
     D  ldprds               189    218
      *
     D  ldtfcgcd             219    220
     D  ldtfcgds             221    235
     D  ldtfclcd             236    238
     D  ldtfclds             239    268
      *
     D  ldver                269    269
     D  ldverds              270    299
      *
     D  lddemand             300    300
      *
     D  ldiecd               301    301
     D  ldieds               302    327
     D  ldcofl               329    329
      *
     D  ldedfl               349    349
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *****************************************************************************************
      * MAINLINE
      *****************************************************************************************
      *
      * Read each record selected by the open query from the Weekly Product
      * Revenue Detail file. Some records in the file have only "Claim" data;
      * we will not process these records. So, only process records that have
      * data in a "non-claim" field. And, only process Finished Goods items.
      *
593  C*    *loval        setll     tfl010b
593  C     *start        setll     tfl010b
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      tfl010b                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             pritycd = 'FG ' and
     C                             (prsfpulb <> 0 or
     C                              prtfpulb <> 0 or
12011C                              prxfpulb <> 0)
      *
      * Control breaks
     C                   select
     C                   when      first = yes
     C                   exsr      $first
      *
     C                   when      ldver = '1' and
     C                             (svrcexfl  <> prrcexfl or
     C                              svprexfl  <> prprexfl or
     C                              svistycd  <> pristycd or
     C                              svisgrcd  <> prisgrcd or
     C                              svisclcd  <> prisclcd or
     C                              svprcd    <> prprcd)
     C                   exsr      $break1
      *
     C                   when      ldver = '2' and
     C                             (svrcexfl  <> prrcexfl or
     C                              svprexfl  <> prprexfl or
     C                              svtfcgcd  <> prtfcgcd or
     C                              svtfclcd  <> prtfclcd or
     C                              svistycd  <> pristycd or
     C                              svprcd    <> prprcd)
     C                   exsr      $break2
     C                   endsl
      *
      *
      * Detail Processing:
      *         Accumulate record values into total arrays
      *         Print detail line if this is the 'Detail' version
      *
     C                   exsr      $accum
      *
     C                   if        lddsfl = 'D'
     C                   exsr      $l1dtl
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *---------------------------------------------------------------
      * EOF processing
      *---------------------------------------------------------------
      * If the file was empty, print the standard 'no data...' message
      *
     C                   if        first = yes
     C                   except    h1hdr
     C                   except    nodata
     C                   else
      *
      * Print total for last product
      *
     C                   exsr      $prodtot
      *
      * Print last Item Structure totals
      *
     C                   select
     C                   when      ldver = '1'
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
      *
      * Print last Triumph Structure totals
      *
     C                   when      ldver = '2'
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   endsl
      *
      * Print last Exempt/Non-Exempt Product Total
      *
     C                   exsr      $prextot
      *
      * Print last Exempt/Non-Exempt Record Total
      *
     C                   exsr      $rcextot
      * Report total
     C                   exsr      $reporttot
     C                   endif
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Accumulate detail line values into total arrays
      *---------------------------------------------------------------
      *
     C     $accum        begsr
      *
      * Floor produced pounds
      *
     C                   add       prsfpulb      arafpulb
     C                   add       prtfpulb      arafpulb
12011C                   add       prxfpulb      arafpulb
      *
     C                   add       prsfpulb      arsfpulb
     C                   add       prtfpulb      artfpulb
12011C                   add       prxfpulb      arxfpulb
      *
      * Floor produced amount
      *
     C                   add       prsfpuam      arafpuam
     C                   add       prtfpuam      arafpuam
12011C                   add       prxfpuam      arafpuam
      *
     C                   add       prsfpuam      arsfpuam
     C                   add       prtfpuam      artfpuam
12011C                   add       prxfpuam      arxfpuam
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print product line for the 'Detail' version
      *---------------------------------------------------------------
      *
     C     $l1dtl        begsr
      *
      * Retrieve Product Description
      *
     C     prprcd        chain     ombyrel0                           92
     C                   if        *in92 = *off
     C                   movel(p)  byavna        l1prds
     C                   else
     C                   move      *blank        l1prds
     C                   endif
      *
      * Flip Week-ending Date from CCYYMMDD to MMDDYY
      *
     C     *iso          test(d)                 prwedt                 92
     C                   if        *in92 = *off                                 If OK
     C                   move      prwedt        wkisodate
     C     *mdy          move      wkisodate     l1wemdy
     C                   endif                                                  If OK
      *
     C                   z-add(h)  prsfpulb      l1sfpulb
     C                   z-add(h)  prtfpulb      l1tfpulb
     C     prsfpulb      add(h)    prtfpulb      l1afpulb
12011C                   add(h)    prxfpulb      l1afpulb
12011C                   z-add(h)  prxfpulb      l1xfpulb
      *
     C                   z-add(h)  prsfpuam      l1sfpuam
     C                   z-add(h)  prtfpuam      l1tfpuam
     C     prsfpuam      add(h)    prtfpuam      l1afpuam
12011C                   add(h)    prxfpuam      l1afpuam
12011C                   z-add(h)  prxfpuam      l1xfpuam
      *
      *
      * Produced Value Amount per CWT:
      *    Calc: floor produced amount / (floor produced pounds / 100)
      *
      * Aggregate
      *
     C     prsfpulb      add       prtfpulb      wklb
12011C                   add       prxfpulb      wklb
     C     wklb          div(h)    100           wklb
     C                   if        wklb <> 0
12011C**                 eval(h)   wkfld = (prsfpuam + prtfpuam) / wklb
12011C                   eval(h)   wkfld = (prsfpuam+prtfpuam+prxfpuam) / wklb
     C**                 if        wkfld <= 999.9999
     C                   z-add     wkfld         l1apr                          field is 9,4 now
     C**                 endif
     C                   endif
      *
      * Seaboard
      *
     C     prsfpulb      div(h)    100           wklb
     C                   if        wklb <> 0
     C                   eval(h)   wkfld = prsfpuam / wklb
     C**                 if        wkfld <= 999.9999
     C                   z-add     wkfld         l1spr                         field is 9,4 now
     C**                 endif
     C                   endif
      * Triumph
      *
     C     prtfpulb      div(h)    100           wklb
     C                   if        wklb <> 0
     C                   eval(h)   wkfld = prtfpuam / wklb
     C**                 if        wkfld <= 999.9999
     C                   z-add     wkfld         l1tpr                           field is 9,4 now
     C**                 endif
     C                   endif
      *
12011 * Seaboard Triumph Foods
  |  C     prxfpulb      div(h)    100           wklb
  |  C                   if        wklb <> 0
  |  C                   eval(h)   wkfld = prxfpuam / wklb
  |  C**                 if        wkfld <= 999.9999
  |  C                   z-add     wkfld         l1xpr                           field is 9.4 now
  |  C**                 endif
12011C                   endif
      *
      * Percent of Total Floor Produced Pounds:
      *  SBF: (SBF Floor Produced Pounds / Aggregate Floor Produced Pounds) * 100
      *   TF: 100% - SBF %
12011 *  STF: 100% - (SBF % + TF %)
      *
     C     prsfpulb      add       prtfpulb      wklb
12011C                   add       prxfpulb      wklb
     C                   if        wklb <> 0
     C                   eval(h)   wkpc = (prsfpulb / wklb) * 100
     C                   z-add(h)  wkpc          l1spc
12011C                   if        prxfpulb = 0
     C                   eval      l1tpc = 100 - l1spc
12011C                   else
  |  C                   eval(h)   wkpc = (prtfpulb / wklb) * 100
  |  C                   z-add(h)  wkpc          l1tpc
  |  C                   endif
  |  C                   if        prxfpulb > 0
  |  C                   eval(h)   wkpc = 100 - (l1spc + l1tpc)
  |  C                   z-add(h)  wkpc          l1xpc
12011C                   endif
     C                   endif
      *
      *  Print line
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   endif
      *
     C                   except    l1dtl
     C                   setoff                                       83
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print detail line for the 'Summary' version
      *---------------------------------------------------------------
      *
     C     $l2dtl        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   endif
      *
      * Retrieve Product Description
      *
     C     svprcd        chain     ombyrel0                           92
     C                   if        *in92 = *off
     C                   movel(p)  byavna        l2prds
     C                   else
     C                   move      *blank        l2prds
     C                   endif
      *
      * Set array index
     C                   z-add     1             x
      *
      * Get array values into whole-number print fields.
      *
     C                   z-add(h)  arafpulb (x)  l2afpulb
     C                   z-add(h)  arsfpulb (x)  l2sfpulb
     C                   z-add(h)  artfpulb (x)  l2tfpulb
12011C                   z-add(h)  arxfpulb (x)  l2xfpulb
      *
     C                   z-add(h)  arafpuam (x)  l2afpuam
     C                   z-add(h)  arsfpuam (x)  l2sfpuam
     C                   z-add(h)  artfpuam (x)  l2tfpuam
12011C                   z-add(h)  arxfpuam (x)  l2xfpuam
      *
      *
      * Calc '% of Total Floor Production' for total line.
      *
     C                   if        arafpulb(x) <> 0
     C                   eval      wkpc = (arsfpulb(x) / arafpulb(x)) * 100
     C                   z-add(h)  wkpc          l2spc
12011 *   R12011-Replaced calculation for TF.
  |  C                   if        arxfpulb(x) = 0
  |  C     100           sub       l2spc         l2tpc
  |  C                   else
  |  C                   eval      wkpc = (artfpulb(x) / arafpulb(x)) * 100
  |  C                   z-add(h)  wkpc          l2tpc
  |  C                   endif
  |   *   R12011-Calculation for STF.
  |  C                   if        arxfpulb(x) > 0
  |  C                   eval      wkpc = 100 - (l2spc + l2tpc)
  |  C                   z-add(h)  wkpc          l2xpc
12011C                   endif
     C                   endif
      *
      * Calc 'Floor Produced Value/CWT' for total line.
      *
      * Aggregate
      *
     C     arafpulb(x)   div(h)    100           wklb
     C                   if        wklb <> 0
     C     arafpuam(x)   div(h)    wklb          l2apr
     C                   endif
      *
      * Seaboard
      *
     C     arsfpulb(x)   div(h)    100           wklb
     C                   if        wklb <> 0
     C     arsfpuam(x)   div(h)    wklb          l2spr
     C                   endif
      *
      * Triumph
      *
     C     artfpulb(x)   div(h)    100           wklb
     C                   if        wklb <> 0
     C     artfpuam(x)   div(h)    wklb          l2tpr
     C                   endif
      *
12011 * Seaboard Triumph Foods
  |   *
  |  C     arxfpulb(x)   div(h)    100           wklb
  |  C                   if        wklb <> 0
  |  C     arxfpuam(x)   div(h)    wklb          l2xpr
12011C                   endif
      *
     C                   except    l2dtl
      *
      * Clear the arrays for this occurrence.
      *
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print report heading
      *---------------------------------------------------------------
      *
     C     $h1hdr        begsr
      *
     C                   if        svrcexfl = yes
     C                   eval      h1rcexds = 'EXEMPT RECORDS'
     C                   else
     C                   eval      h1rcexds = 'NON-EXEMPT RECORDS'
     C                   endif
      *
     C                   except    h1hdr
      *
     C                   seton                                        77
     C                   seton                                        808182
     C                   seton                                        83
      *
     C                   endsr
      *
      *---------------------------------------------------------------
      * Print Item Structure Header
      *---------------------------------------------------------------
      *
     C     $h2hdr        begsr
      *
     C                   if        *inof = *on or *in77 = *on
     C                   exsr      $h1hdr
     C                   else
     C                   except    blank
     C                   endif
      *
      * If you are in the "Exempt" section, set up the 'Product Exempt
      * Description'
     C                   move      *blank        h2prexds
     C                   if        svrcexfl = yes
      *
     C                   select
     C                   when      svprexfl = yes
     C                   eval      h2prexds = 'EXEMPT PRODUCTS'
     C                   other
     C                   eval      h2prexds = 'NON-EXEMPT PRODUCTS'
     C                   endsl
      *
     C                   endif
      *
      * I was trying to make this BOLD, so I print it twice!
      *
     C                   except    h2hdr
     C                   except    h2hdr
      *
     C                   except    blank
     C                   except    blank
      *
     C                   setoff                                       77
     C                   setoff                                       808182
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print 'Product' total
      *-----------------------------------------------------------------------------
      *
     C     $prodtot      begsr
      *
     C                   select
     C                   when      lddsfl = 'S'
     C                   exsr      $l2dtl
      *
     C                   when      lddsfl = 'D'
     C                   z-add     1             x
     C                   seton                                        8485
     C                   exsr      $total
     C                   setoff                                       8485
     C                   endsl
      *
     C                   z-add     prprcd        svprcd
     C                   move      predfl        svedfl
     C                   seton                                        83
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Item Structure Class total
      *-----------------------------------------------------------------------------
      *
     C     $iscltot      begsr
      *
     C                   if        lddsfl = 'S'
     C                   seton                                        84
     C                   endif
      *
     C                   z-add     2             x
      *
     C                   seton                                        86
     C                   exsr      $total
     C                   setoff                                       86
      *
     C                   z-add     prisclcd      svisclcd
     C                   exsr      $isclds
      *
     C                   if        lddsfl = 'S'
     C                   setoff                                       84
     C                   endif
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Item Structure Group total
      *-----------------------------------------------------------------------------
      *
     C     $isgrtot      begsr
      *
     C                   z-add     3             x
      *
     C                   seton                                        87
     C                   exsr      $total
     C                   setoff                                       87
      *
     C                   z-add     prisgrcd      svisgrcd
     C                   exsr      $isgrds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Item Structure Type Total for Version 1
      *-----------------------------------------------------------------------------
      *
     C     $istytot      begsr
      *
      * Set array index value and print control indicators based on:
      *   1) Sort/print by Item Structure
      *   2) Sort/print by TF Structure
      *
     C                   select
     C                   when      ldver = '1'
     C                   z-add     4             x
     C                   seton                                        88
      *
     C                   when      ldver = '2'
     C                   z-add     2             x
     C                   seton                                        86
     C                   if        lddsfl = 'S'
     C                   seton                                        84
     C                   endif
     C                   endsl
      *
      * For both sort versions
      *
     C                   exsr      $total
      *
      *
      * Set off print control indicators based on:
      *   1) Sort/print by Item Structure
      *   2) Sort/print by TF Structure
      *
     C                   select
     C                   when      ldver = '1'
     C                   setoff                                       88
      *
     C                   when      ldver = '2'
     C                   setoff                                       86
     C                   if        lddsfl = 'S'
     C                   setoff                                       84
     C                   endif
     C                   endsl
      *
      * Retrieve description for next heading line
      *
     C                   z-add     pristycd      svistycd
     C                   exsr      $istyds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print TF Structure Classification total
      *-----------------------------------------------------------------------------
      *
     C     $tfcltot      begsr
      *
     C                   z-add     3             x
      *
     C                   seton                                        87
     C                   exsr      $total
     C                   setoff                                       87
      *
     C                   move      prtfclcd      svtfclcd
     C                   exsr      $tfclds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print TF Class Group total
      *-----------------------------------------------------------------------------
      *
     C     $tfcgtot      begsr
      *
     C                   z-add     4             x
      *
     C                   seton                                        88
     C                   exsr      $total
     C                   setoff                                       88
      *
     C                   move      prtfcgcd      svtfcgcd
     C                   exsr      $tfcgds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Exempt/Non-Exempt Product Total
      *-----------------------------------------------------------------------------
      *
     C     $prextot      begsr
      *
     C                   z-add     5             x
      *
      * If you are processing "Exempt" records, we print;
      * otherwise, we will just clear the arrays.
      *
     C                   select
     C                   when      svrcexfl = no
     C                   exsr      $clear
     C                   other
      *
     C                   if        svprexfl = yes
     C                   eval      t2prexds = '   Exempt Products *****'
     C                   else
     C                   eval      t2prexds = 'NonExempt Products *****'
     C                   endif
      *
     C                   seton                                        78
     C                   exsr      $total
     C                   setoff                                       78
     C                   endsl
      *
     C                   move      prprexfl      svprexfl
     C                   seton                                        77
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Exempt/Non-Exempt Record Total
      *-----------------------------------------------------------------------------
      *
     C     $rcextot      begsr
      *
     C                   z-add     6             x
      *
     C                   if        svrcexfl = yes
     C                   eval      t2rcexds = '    Exempt Records *****'
     C                   else
     C                   eval      t2rcexds = 'Non-Exempt Records *****'
     C                   endif
      *
     C                   seton                                        79
     C                   exsr      $total
     C                   setoff                                       79
      *
     C                   move      prrcexfl      svrcexfl
     C                   seton                                        of
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Report total
      *-----------------------------------------------------------------------------
      *
     C     $reporttot    begsr
      *
     C                   setoff                                       of
     C                   z-add     7             x
      *
     C                   seton                                        89
     C                   exsr      $total
     C                   setoff                                       89
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Control break logic for the version Sorted/Printed by Item Structure
      *-----------------------------------------------------------------------------
      *
     C     $break1       begsr
      *
     C                   select
     C                   when      prrcexfl <> svrcexfl
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
     C                   exsr      $prextot
     C                   exsr      $rcextot
     C                   exsr      $h2hdr
      *
     C                   when      prprexfl <> svprexfl
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
     C                   exsr      $prextot
     C                   exsr      $h2hdr
      *
     C                   when      pristycd <> svistycd
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
     C                   exsr      $h2hdr
      *
     C                   when      prisgrcd <> svisgrcd
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $h2hdr
      *
     C                   when      prisclcd <> svisclcd
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $h2hdr
      *
     C                   when      prprcd <> svprcd
     C                   exsr      $prodtot
     C                   except    blank
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Control break logic for the version Sorted/Printed by TF Structure
      *-----------------------------------------------------------------------------
      *
     C     $break2       begsr
      *
     C                   select
     C                   when      prrcexfl <> svrcexfl
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   exsr      $prextot
     C                   exsr      $rcextot
     C                   exsr      $h2hdr
      *
     C                   when      prprexfl <> svprexfl
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   exsr      $prextot
     C                   exsr      $h2hdr
      *
     C                   when      prtfcgcd <> svtfcgcd
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   exsr      $h2hdr
      *
     C                   when      prtfclcd <> svtfclcd
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $h2hdr
      *
     C                   when      pristycd <> svistycd
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $h2hdr
      *
     C                   when      prprcd <> svprcd
     C                   exsr      $prodtot
     C                   except    blank
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print totals line
      *-----------------------------------------------------------------------------
      *
     C     $total        begsr
      *
      * Print the dashed underscore...unless you have hit page break.
      *
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   else
     C                   except    t1tot
     C                   endif
      *
      * Get array values into whole-number print fields.
      *
     C                   z-add(h)  arafpulb (x)  t3afpulb
     C                   z-add(h)  arsfpulb (x)  t3sfpulb
     C                   z-add(h)  artfpulb (x)  t3tfpulb
12011C                   z-add(h)  arxfpulb (x)  t3xfpulb
      *
     C                   z-add(h)  arafpuam (x)  t3afpuam
     C                   z-add(h)  arsfpuam (x)  t3sfpuam
     C                   z-add(h)  artfpuam (x)  t3tfpuam
12011C                   z-add(h)  arxfpuam (x)  t3xfpuam
      *
      * Calc '% of Total Floor Production' for total line.
      *
     C                   if        arafpulb(x) <> 0
     C                   eval      wkpc = (arsfpulb(x) / arafpulb(x)) * 100
     C                   z-add(h)  wkpc          t3spc
12011 *   R12011-Replaced calculation for TF.
  |  C                   if        arxfpulb(x) = 0
  |  C     100           sub       t3spc         t3tpc
  |  C                   else
  |  C                   eval      wkpc = (artfpulb(x) / arafpulb(x)) * 100
  |  C                   z-add(h)  wkpc          t3tpc
  |  C                   endif
  |   *   R12011-Calculation for STF.
  |  C                   if        arxfpulb(x) > 0
  |  C                   eval      wkpc = 100 - (t3spc + t3tpc)
  |  C                   z-add(h)  wkpc          t3xpc
12011C                   endif
     C                   endif
      *
      * Calc 'Floor Produced Value/CWT' for total line.
      *
      * Aggregate
      *
     C     arafpulb(x)   div(h)    100           wklb
     C                   if        wklb <> 0
     C     arafpuam(x)   div(h)    wklb          t3apr
     C                   endif
      *
      * Seaboard
      *
     C     arsfpulb(x)   div(h)    100           wklb
     C                   if        wklb <> 0
     C     arsfpuam(x)   div(h)    wklb          t3spr
     C                   endif
      *
      * Triumph
      *
     C     artfpulb(x)   div(h)    100           wklb
     C                   if        wklb <> 0
     C     artfpuam(x)   div(h)    wklb          t3tpr
     C                   endif
      *
12011 * Seaboard Triumph Foods
  |   *
  |  C     arxfpulb(x)   div(h)    100           wklb
  |  C                   if        wklb <> 0
  |  C     arxfpuam(x)   div(h)    wklb          t3xpr
12011C                   endif
      *
      *
      * Print header line
      *
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   endif
      *
      * Print the total line twice to make the text bold.
      *
     C                   except    t2tot
     C                   except    t2tot
      *
      * Print this line once without spacing.
      *
     C                   except    t3tot
      *
      * Clear the arrays for this occurrence.
      *
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Item Structure Class description
      *---------------------------------------------------------------
      *
     C     $isclds       begsr
      *
     C     svisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      h2isclds = fadetx
     C                   else
     C                   eval      h2isclds = 'Unassigned'
     C                   endif
      *
     C                   seton                                        80
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Item Structure Group description
      *---------------------------------------------------------------
      *
     C     $isgrds       begsr
      *
     C     svisgrcd      chain     ome9rel0                           92
     C                   if        *in92 = *off
     C                   eval      h2isgrds  = e9ddtx
     C                   else
     C                   eval      h2isgrds = 'Unassigned'
     C                   endif
      *
     C                   seton                                        81
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Item Structure Type description
      *---------------------------------------------------------------
      *
     C     $istyds       begsr
      *
     C     svistycd      chain     ome8rel0                           92
     C                   if        *in92 = *off
     C                   eval      h2istyds  = e8dctx
     C                   else
     C                   eval      h2istyds  = 'Unassigned'
     C                   endif
      *
     C                   select
     C                   when      ldver = '1'
     C                   seton                                        82
      *
     C                   when      ldver = '2'
     C                   seton                                        80
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve TF Classification description
      *---------------------------------------------------------------
      *
     C     $tfclds       begsr
      *
     C     prtfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *off                                 If ok
     C                   eval      h2tfclds  = amq0na
     C                   else
     C                   eval      h2tfclds = 'Unassigned'
     C                   endif                                                  If ok
      *
     C                   seton                                        81
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve TF Class Group description
      *---------------------------------------------------------------
      *
     C     $tfcgds       begsr
      *
     C                   call      'TF804'
     C                   parm      prtfcgcd      xxtfcgcd
     C                   parm      *blank        xxtfcgds
      *
     C                   if        xxtfcgds = *blank                            If bad
     C                   eval      h2tfcgds = 'Unassigned'
     C                   else
     C                   eval      h2tfcgds = xxtfcgds
     C                   endif                                                  If bad
      *
     C                   seton                                        82
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear occurrence in arrays
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             arafpulb  (x)
     C                   z-add     0             arsfpulb  (x)
     C                   z-add     0             artfpulb  (x)
12011C                   z-add     0             arxfpulb  (x)
      *
     C                   z-add     0             arafpuam (x)
     C                   z-add     0             arsfpuam (x)
     C                   z-add     0             artfpuam (x)
12011C                   z-add     0             arxfpuam (x)
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * First time subroutine
      *---------------------------------------------------------------
      *
     C     $first        begsr
      *
     C                   move      no            first
      *
     C                   z-add     prprcd        svprcd
     C                   move      predfl        svedfl
     C                   move      prrcexfl      svrcexfl
     C                   move      prprexfl      svprexfl
      *
      *
      * When sorting/printing by Item Structure
      *
     C                   select
     C                   when      ldver = '1'
     C                   z-add     prisclcd      svisclcd
     C                   z-add     prisgrcd      svisgrcd
     C                   z-add     pristycd      svistycd
     C                   exsr      $isclds
     C                   exsr      $isgrds
     C                   exsr      $istyds
      *
      * When sorting/printing by TF Strucuture
      *
     C                   when      ldver = '2'
     C                   move      prtfcgcd      svtfcgcd
     C                   move      prtfclcd      svtfclcd
     C                   z-add     pristycd      svistycd
     C                   exsr      $istyds
     C                   exsr      $tfclds
     C                   exsr      $tfcgds
     C                   endsl
      *
      * Print Headings
      *
     C                   seton                                        of
     C                   exsr      $h2hdr
     C                   seton                                        83
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Retrieve time for report heading.
      *
     C                   time                    rtime
      *
     C                   if        ldistycd = 0
     C                   seton                                        96
     C                   endif
      *
     C                   if        ldisgrcd = 0
     C                   seton                                        97
     C                   endif
      *
     C                   if        ldisclcd = 0
     C                   seton                                        98
     C                   endif
      *
     C                   if        ldprcd = 0
     C                   seton                                        99
     C                   endif
      *
     C                   if        ldtfcgcd = *blank
     C                   seton                                        94
     C                   endif
      *
     C                   if        ldtfclcd = *blank
     C                   seton                                        95
     C                   endif
      *
      * Set indicators for the sort/print version the user selected.
      *
     C                   select
     C                   when      ldver = '1'
     C                   seton                                        71
      *
     C                   when      ldver = '2'
     C                   seton                                        72
     C                   endsl
      *
      * Exempt/Non-Exempt/Both selection.
      *
     C                   select
     C                   when      ldiecd = 'E'
     C                   movel     'Exempt'      h1ieds
      *
     C                   when      ldiecd = 'N'
     C                   movel     'Non-Exempt'  h1ieds
      *
     C                   when      ldiecd = 'B'
     C                   movel     'Both'        h1ieds
     C                   endsl
      *
      * Co-Owned selection
     C                   select
     C                   when      ldcofl = 'C'
     C                   eval      h1cods = 'CoOwned'
      *
     C                   when      ldcofl = 'N'
     C                   eval      h1cods = 'Not CoOwned'
      *
     C                   when      ldcofl = 'B'
     C                   eval      h1cods = 'Both'
     C                   endsl
      *
      * Export/Domestic
     C                   select
     C                   when      ldedfl = 'E'
     C                   eval      h1edds = 'Export'
      *
     C                   when      ldedfl = 'D'
     C                   eval      h1edds = 'Domestic'
      *
     C                   when      ldedfl = 'B'
     C                   eval      h1edds = 'Both'
     C                   endsl
      *
      * This report is generated on-demand and also from the Synon
      * "Post Inventory Values" function.
      *
     C                   select
     C                   when      lddemand = yes
     C                   eval      h1demand = '        On-Demand        '
      *
     C                   when      lddemand = 'N'
     C                   eval      h1demand = '  Post Inventory Values  '
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
     Oprint198  e            h1hdr          1 01
     O                       sdpgm               10
     O                                          110 'WEEKLY PRODUCT FLOOR'
12011O                                          134 ' PRODUCTION REPORT - ALL'
12011O                                          247 'DATE'
12011O                       udate         y    257
      *
      *
     O          e            h1hdr          0
     O                       lddsds             114
      *
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                       lddsds             114
12011O                                          247 'TIME'
12011O                       rtime              257 '  :  :  '
      *
      *
     O          e            h1hdr          0
12011O                                          247 'PAGE'
12011O                       page          z    257
     O                       ldverds            124
      *
      *
     O          e            h1hdr          1
     O                       ldverds            124
      *
      *
     O          e            h1hdr          0
     O                       h1demand           121
      *
      *
     O          e            h1hdr          2
     O                       h1demand           121
      *
      *
     O          e            h1hdr          1
     O                                           23 'From week-ending date..'
     O                       ldfmdy              33 '  /  /  '
      *
     O                                           63 'Item structure type code :'
     O               96                          68 'All'
     O              n96      ldistycd      z     68
     O              n96      ldistyds           100
      *
     O                                          130 'TF class group code ..:'
     O               94                         135 'All'
     O              n94      ldtfcgcd           138
     O              n94      ldtfcgds           155
      *
     O          e            h1hdr          1
     O                                           23 'To week-ending date ..:'
     O                       ldtmdy              33 '  /  /  '
      *
     O                                           63 'Item structure group code:'
     O               97                          68 'All'
     O              n97      ldisgrcd      z     68
     O              n97      ldisgrds           100
      *
      *
     O                                          130 'TF classification code:'
     O               95                         135 'All'
     O              n95      ldtfclcd           138
     O              n95      ldtfclds           170
      *
      *
     O          e            h1hdr          1
     O                                           23 'Exempt/Non-Exempt/Both:'
     O                       h1ieds              35
     O                                           63 'Item structure class code:'
     O               98                          68 'All'
     O              n98      ldisclcd      z     68
     O              n98      ldisclds           100
      *
     O                                          130 'Product code .........:'
     O               99                         135 'All'
     O              n99      ldprcd        z    138
     O              n99      ldprds             170
      *
     O          e            h1hdr          1
     O                                           23 'CoOwned/Not CoOwn/Both:'
     O                       h1cods              36
      *
     O          e            h1hdr          3
     O                                           23 'Export/Domestic/Both .:'
     O                       h1edds              33
      *
      *-------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------
      *
     O          e            h1hdr          0
     O                       h1rcexds            18
     O                                           69 '-------------- Aggregate'
     O                                           83 '-------------'
      *
     O                                          109 '---------------------- '
     O                                          117 'Seaboard'
     O                                          139 ' ---------------------'
      *
     O                                          169 '--------------------------'
     O                                          177 ' Triumph'
     O                                          198 ' --------------------'
      *
12011O                                          220 '------------------'
  |  O                                          243 ' Seaboard Triumph Foods'
12011O                                          257 ' -------------'
      *
     O          e            h1hdr          1
     O                       h1rcexds            18
     O                                           69 '-------------- Aggregate'
     O                                           83 '-------------'
      *
     O                                          109 '---------------------- '
     O                                          117 'Seaboard'
     O                                          139 ' ---------------------'
      *
     O                                          169 '--------------------------'
     O                                          177 ' Triumph'
     O                                          198 ' --------------------'
      *
12011O                                          220 '------------------'
  |  O                                          243 ' Seaboard Triumph Foods'
12011O                                          257 ' -------------'
      *
     O          e            h1hdr          1
     O                                           35 'Ex'
     O                                           43 'Week'
      * Aggregate
     O                                           56 'Floor'
     O                                           71 'Floor'
     O                                           83 'Floor'
      * Seaboard
     O                                           97 'Floor'
     O                                          112 'Floor'
     O                                          125 'Floor'
     O                                          139 '% of Total'
      * Triumph
     O                                          157 'Floor'
     O                                          172 'Floor'
     O                                          184 'Floor'
     O                                          197 '% of Total'
      *
12011 * Seaboard Triumph Foods
  |  O                                          217 'Floor'
  |  O                                          232 'Floor'
  |  O                                          243 'Floor'
12011O                                          255 '% of Total'
      *
      *
     O          e            h1hdr          1
     O                                           32 'Product'
     O                                           35 'Dm'
     O                                           43 'Ending'
      * Aggregate
     O                                           56 'Produced'
     O                                           71 'Produced'
     O                                           83 'Produced'
      * Seaboard
     O                                           97 'Produced'
     O                                          112 'Produced'
     O                                          125 'Produced'
     O                                          139 'Floor'
      * Triumph
     O                                          157 'Produced'
     O                                          172 'Produced'
     O                                          184 'Produced'
     O                                          197 'Floor'
12011 * Seaboard Triumph Foods
  |  O                                          217 'Produced'
  |  O                                          232 'Produced'
  |  O                                          243 'Produced'
12011O                                          255 'Floor'
      *
      *
     O          e            h1hdr          1
     O                                           19 'Product Description'
     O                                           32 'Code'
     O                                           35 'Fl'
     O                                           43 'Date'
      * Aggregate
     O                                           56 'Pounds'
     O                                           71 'Value Amt'
     O                                           83 'Value/CWT'
      * Seaboard
     O                                           97 'Pounds'
     O                                          112 'Value Amt'
     O                                          125 'Value/CWT'
     O                                          139 'Production'
      * Triumph
     O                                          157 'Pounds'
     O                                          172 'Value Amt'
     O                                          184 'Value/CWT'
     O                                          197 'Production'
      *
12011 * Seaboard Triumph Foods
  |  O                                          217 'Pounds'
  |  O                                          232 'Value Amt'
  |  O                                          243 'Value/CWT'
12011O                                          255 'Production'
      *
     O          e            h1hdr          1
12011O                       dash               257
      *
      *
      *-------------------------------------------------------------
      * Item structure heading
      *-------------------------------------------------------------
      *
      *
     O          e    71      h2hdr       0  0
     O               77      h2prexds            20
      *
     O               82                          30 'Type:'
     O               82      svistycd      z     35
     O               82      h2istyds            67
      *
     O               81                          81 'Group:'
     O               81      svisgrcd      z     86
     O               81      h2isgrds           118
      *
     O               80                         131 'Class:'
     O               80      svisclcd      z    136
     O               80      h2isclds           168
      *
      *-------------------------------------------------------------
      * TF structure heading
      *-------------------------------------------------------------
      *
     O          e    72      h2hdr       0  0
     O               77      h2prexds            20
      *
     O               82                          40 'TF Class Group:'
     O               82      svtfcgcd            44
     O               82      h2tfcgds            61
      *
     O               81                          85 'TF Classification:'
     O               81      svtfclcd            90
     O               81      h2tfclds           122
      *
     O               80                         146 'Item Structure Type:'
     O               80      svistycd      z    151
     O               80      h2istyds           183
      *
      *-------------------------------------------------------------
      * Detail line for product when 'detail' version selected
      *-------------------------------------------------------------
      *
     O          e            l1dtl          1
     O               83      l1prds              24
     O               83      prprcd        z     32
     O               83      predfl              35
     O                       l1wemdy        b    44 '  /  /  '
      * Aggregate
     O                       l1afpulb      kb    57
     O                       l1afpuam      kb    72
     O                       l1apr         mb    84
      * Seaboard
     O                       l1sfpulb      kb    98
     O                       l1sfpuam      kb   113
     O                       l1spr         mb   126
     O                       l1spc         kb   140
      * Triumph
     O                       l1tfpulb      kb   158
     O                       l1tfpuam      kb   173
     O                       l1tpr         mb   185
     O                       l1tpc         kb   198
      *
12011 * Seaboard Triumph Foods
  |  O                       l1xfpulb      kb   218
  |  O                       l1xfpuam      kb   233
  |  O                       l1xpr         mb   244
12011O                       l1xpc         kb   256
      *
      *-------------------------------------------------------------
      * Summary line for product when 'summary' version selected
      *-------------------------------------------------------------
      *
     O          e            l2dtl          1
      *
     O                       l2prds              24
     O                       svprcd        z     32
     O                       svedfl              35
      *
     O                       l2afpulb      kb    57
     O                       l2afpuam      kb    72
     O                       l2apr         mb    84
      *
     O                       l2sfpulb      kb    98
     O                       l2sfpuam      kb   113
     O                       l2spr         mb   126
     O                       l2spc         kb   140
      *
     O                       l2tfpulb      kb   158
     O                       l2tfpuam      kb   173
     O                       l2tpr         mb   185
     O                       l2tpc         kb   198
      *
12011O                       l2xfpulb      kb   218
  |  O                       l2xfpuam      kb   233
  |  O                       l2xpr         mb   244
12011O                       l2xpc         kb   256
      *
      *-------------------------------------------------------------
      * Total lines
      *-------------------------------------------------------------
      *
     O          e    84      t1tot          1
      * Aggregate
     O                                           56 '-----------'
     O                                           71 '-------------'
     O                                           83 '----------'
      * Seaboard
     O                                           97 '-----------'
     O                                          112 '-------------'
     O                                          125 '----------'
     O                                          139 '------'
      * Triumph
     O                                          157 '-----------'
     O                                          172 '-------------'
     O                                          184 '----------'
     O                                          197 '------'
12011 * Seaboard Triumph Foods
  |  O                                          217 '-----------'
  |  O                                          232 '-------------'
  |  O                                          243 '----------'
12011O                                          255 '------'
      *
     O          e    71      t2tot       0  0
     O               85                          24 'Product     *'
     O               86                          24 '  Class    **'
     O               87                          24 '  Group   ***'
     O               88                          24 '   Type  ****'
     O               78      t2prexds            24
     O               79      t2rcexds            24
     O               89                          24 'Report Total'
      *
     O          e    72      t2tot       0  0
     O               85                          24 '       Product     *'
     O               86                          24 '          Type    **'
     O               87                          24 'Classification   ***'
     O               88                          24 '   Class Group  ****'
     O               78      t2prexds            24
     O               79      t2rcexds            24
     O               89                          24 'Report Total'
      *
      *
     O          e            t3tot          1
     O                  85   svprcd        z     32
     O               71 86   svisclcd            32
     O               71 87   svisgrcd            32
     O               71 88   svistycd            32
      *
     O               72 86   svistycd            32
     O               72 87   svtfclcd            32
     O               72 88   svtfcgcd            32
      *
     O                       t3afpulb      kb    57
     O                       t3afpuam      kb    72
     O                       t3apr         mb    84
      *
     O                       t3sfpulb      kb    98
     O                       t3sfpuam      kb   113
     O                       t3spr         mb   126
     O                       t3spc         kb   140
      *
     O                       t3tfpulb      kb   158
     O                       t3tfpuam      kb   173
     O                       t3tpr         mb   185
     O                       t3tpc         kb   198
      *
12011O                       t3xfpulb      kb   218
  |  O                       t3xfpuam      kb   233
  |  O                       t3xpr         mb   244
12011O                       t3xpc         kb   256
      *
      *-------------------------------------------------------------
      * Blank line
      *-------------------------------------------------------------
      *
     O          e            blank       1
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      1
     O                                           19 'No data meets your'
     O                                           39 'selection criteria.'
