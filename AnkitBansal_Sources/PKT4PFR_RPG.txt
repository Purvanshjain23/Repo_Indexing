     H/TITLE Prt Prcrmnt Prfm Dtl  PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 00:49:42
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKA1CPLTIF  E           K        DISK
      * RSQ : Tattoo Header             Co/Buy/Prd/PayType/Kll/T
      *
     FPKADREL0IF  E           K        DISK
      * RTV : Hog Buyer                 Retrieval index
      *
     FPKACREL1IF  E           K        DISK
      * RTV : Producer                  Retrieval index
      *
     FPKCDCPL8IF  E           K        DISK
      * RTV : Tattoo Ded/Add            Rtv Index - Seab's
      *
     FPKDDCPL2IF  E           K        DISK
      * RSQ : Company Kill Expense Rate Co/Kill/Exp
      *
     FPKT4PFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Prcrmnt Prfm Dtl  PF  Print file
      *
      * Long constants
     E                    @CN#    1  01  6   @CN    25
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * I : RST BOH Company Number
     I                                    P   1   20P1HMNB
      * I :  TH Source Type
     I                                        3   3 P1KAST
      * I :  TH Payment Type
     I                                        4   4 P1J9ST
     IP2PARM      DS
      * FLD: *Arrays
      * I :  TH Source Code-X18 USR
     I                                        1  18 P2DRT1
      * I :  PD Producer Code
     I                                       19  24 P2ABCD
      * I :  HB Buyer Code
     I                                       25  27 P2ACCD
     IP3PARM      DS
      * I :  Date From USR
     I                                    P   1   40P3B3DT
     IP4PARM      DS
      * I :  Date To   USR
     I                                    P   1   40P4B4DT
     IP5PARM      DS
      * I :  Oms System Value Alpha
     I                                        1  40 P5EVTX
     IP6PARM      DS
      * I :  Market Code Usr
     I                                        1   3 P6EVCD
     IP7PARM      DS
      * I :  Price Group Usr
     I                                        1   7 P7EWCD
     IP8PARM      DS
      * I :  Report Type Sum/Dtl USR
     I                                        1   1 P8M1ST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1KAST    PARM           WP0002  1        TH Source Type
     C           P1J9ST    PARM           WP0003  1        TH Payment Type
     C           P2DRT1    PARM           WP0004 18        TH Source Code-
     C           P2ABCD    PARM           WP0005  6        PD Producer Cod
     C           P2ACCD    PARM           WP0006  3        HB Buyer Code
     C           P3B3DT    PARM           WP0007  70       Date From USR
     C           P4B4DT    PARM           WP0008  70       Date To   USR
     C           P5EVTX    PARM           WP0009 40        Oms System Valu
     C           P6EVCD    PARM           WP0010  3        Market Code Usr
     C           P7EWCD    PARM           WP0011  7        Price Group Usr
     C           P8M1ST    PARM           WP0012  1        Report Type Sum
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Prcrmnt Prfm D,S  PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$JENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Prcrmnt Prfm D,S  PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN A1HMNB    WQKA01           BOH Company Num
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           BOH Company Num
      * Setup key
     C                     Z-ADDP1HMNB    WQKA01           BOH Company Num
      * Establish starting position
     C           KRSA      SETLL@A1CPQH                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        HB Buyer Code
     C                     MOVEL'Y'       W0AL02  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL03  1        TH Payment Type
     C                     MOVEL'Y'       W0AL04  1        TH Kill Date
     C                     MOVEL'Y'       W0AL05  1        TH Tattoo Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     MOVEL*BLANK    $CM1ST           Report Type Sum
     C                     MOVEL*BLANK    $CKKTX           Description 30
     C                     Z-ADD*ZERO     $CHMNB           BOH Company Num
     C                     MOVEL*BLANK    $CBSTX           Name USR
     C                     Z-ADD*ZERO     $CB3DT           Date From USR
     C                     Z-ADD*ZERO     $CB4DT           Date To   USR
     C                     MOVEL*BLANK    $CEVCD           Market Code Usr
     C                     MOVEL*BLANK    $CERTX           Market Code Des
     C                     MOVEL*BLANK    $CEWCD           Price Group Usr
     C                     MOVEL*BLANK    $CESTX           Market Group De
     C                     MOVEL*BLANK    $CTJST           Performance Rep
     C                     MOVEL*BLANK    $CEXTX           PL Name Usr 17
     C                     MOVEL*BLANK    $CACCD           HB Buyer Code
     C                     MOVEL*BLANK    $CALTX           HB Name
     C                     MOVEL*BLANK    $CIXST           SR Type
     C                     MOVEL*BLANK    $CISTX           SR Type Desc
     C                     MOVEL*BLANK    $CSHCD           TH Source Code-
     C                     MOVEL*BLANK    $CSICD           TH Source Code-
     C                     MOVEL*BLANK    $CSJCD           TH Source Code-
     C                     MOVEL*BLANK    $CSKCD           TH Source Code-
     C                     MOVEL*BLANK    $CSLCD           TH Source Code-
     C                     MOVEL*BLANK    $CSMCD           TH Source Code-
     C                     MOVEL*BLANK    $CABCD           PD Producer Cod
     C                     MOVEL*BLANK    $CCPTX           Name Producer D
     C                     MOVEL*BLANK    $CJ9ST           TH Payment Type
     C                     MOVEL*BLANK    $CHDTX           Payment Type De
      * Load related totals format
     C                     Z-ADD*ZERO     $ID2PC           Act Dress Yield
     C                     Z-ADD*ZERO     $IOVNB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $IOUNB           Lean % Usr REp
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $HJZA1           Live Weight Adj
     C                     Z-ADD*ZERO     $HJYA1           Live Weight Adj
     C                     Z-ADD*ZERO     $HFIPR           Gross Cutout Va
     C                     Z-ADD*ZERO     $HFOPR           Gross Cutout Va
     C                     Z-ADD*ZERO     $HQJNB           Head Received 2
     C                     Z-ADD*ZERO     $HQKNB           Hot Weight 2 SU
     C                     Z-ADD*ZERO     $HB0VA           Bse Mrkt Prc 2
     C                     Z-ADD*ZERO     $HQLNB           Live Weight 2 S
     C                     Z-ADDA1HMNB    $HHMNB           BOH Company Num
     C                     MOVEL*BLANK    $HIYTX           Th Payment Type
     C                     Z-ADD*ZERO     $HWUNB           Head Killed 1 S
     C                     Z-ADD*ZERO     $HOVNB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $HQFNB           Avg Hot Wgt
     C                     Z-ADD*ZERO     $HESPC           Avg Actual Dres
     C                     Z-ADD*ZERO     $HP8NB           Avg Backfat
     C                     Z-ADD*ZERO     $HENPC           Avg Loin eye
     C                     Z-ADD*ZERO     $HEOPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $HC3PR           Base Price Live
     C                     Z-ADD*ZERO     $HK1PR           Gross Pay Amt 1
     C                     Z-ADD*ZERO     $HDCVA           Gross Ttl 1 Sum
     C                     Z-ADD*ZERO     $HI3PR           Gross Price /C
     C                     Z-ADD*ZERO     $HFGPR           Gross Cutout va
     C                     Z-ADD*ZERO     $HFHPR           Gross margin pe
     C                     Z-ADD*ZERO     $HBUVA           Plant Expense p
     C                     Z-ADD*ZERO     $HR5NB           Plant expense p
     C                     Z-ADD*ZERO     $HBVVA           P/L per CWT
     C                     MOVEL*BLANK    $HI9TX           TH Payment Type
     C                     Z-ADD*ZERO     $HWVNB           Head Killed 3 S
     C                     Z-ADD*ZERO     $HQMNB           Avg Live Wgt 2
     C                     Z-ADD*ZERO     $HQNNB           Avg Hot Wgt 2 U
     C                     Z-ADD*ZERO     $HETPC           Avg Actual Dres
     C                     Z-ADD*ZERO     $HQONB           Avg Backfat 2 U
     C                     Z-ADD*ZERO     $HEUPC           Avg Loin eye 2
     C                     Z-ADD*ZERO     $HEVPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $HFJPR           Base Price live
     C                     Z-ADD*ZERO     $HK2PR           Gross Pay Amt 2
     C                     Z-ADD*ZERO     $HDDVA           Gross Ttl 2 Sum
     C                     Z-ADD*ZERO     $HI4PR           Gross Price /C
     C                     Z-ADD*ZERO     $HFLPR           Gross Cutout Vl
     C                     Z-ADD*ZERO     $HFMPR           Gross Margin /c
     C                     Z-ADD*ZERO     $HB8VA           Plant Expense p
     C                     Z-ADD*ZERO     $HB5VA           Plant expense p
     C                     Z-ADD*ZERO     $HB2VA           P/L per CWT 2
     C                     Z-ADD*ZERO     $HGPNB           Head Killed 4 U
     C                     Z-ADD*ZERO     $HZ8NB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $HAVHW           Avg Hot Weight
     C                     Z-ADD*ZERO     $HGEPC           Avg Actual Dres
     C                     Z-ADD*ZERO     $HAVF4           Avg BackFat 4 U
     C                     Z-ADD*ZERO     $HGCPC           Avg Loin eye 4
     C                     Z-ADD*ZERO     $HGDPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $HIDPR           Market amt / CW
     C                     Z-ADD*ZERO     $HMOPR           Gross Pay Amt 4
     C                     Z-ADD*ZERO     $HMPPR           Gross Price /C
     C                     Z-ADD*ZERO     $HMQPR           Gross Cutout Vl
     C                     Z-ADD*ZERO     $HMRPR           Gross margin pe
     C                     Z-ADD*ZERO     $HECVA           Plant Expense p
     C                     Z-ADD*ZERO     $HEEVA           P/L per CWT 4
     C                     Z-ADD*ZERO     $HVKNB           Avg Lean % 5.2
     C                     Z-ADD*ZERO     $HXBNB           Hot Weight 3 SU
     C                     Z-ADD*ZERO     $HXCNB           Hot Weight 4 SU
     C                     Z-ADD*ZERO     $HXDNB           Hot Weight 5 SU
     C                     Z-ADD*ZERO     $HXENB           Hot Weight 6 SU
     C                     Z-ADD*ZERO     $HXFNB           Hot Weight 7 SU
     C                     Z-ADD*ZERO     $HXGNB           Hot Weight 8 SU
     C                     Z-ADD*ZERO     $HBXVA           Backfat * wgt 2
     C                     Z-ADD*ZERO     $HBYVA           Loin eye * wgt
     C                     Z-ADD*ZERO     $HBZVA           Lean Percent *
     C                     Z-ADD*ZERO     $HEIVA           Bse Mrkt Prc Am
     C                     Z-ADD*ZERO     $HBSVA           Backfat * Wgt
     C                     Z-ADD*ZERO     $HBTVA           Loin eye * wgt
     C                     Z-ADD*ZERO     $HNTNB           Lean % * Wt
     C                     Z-ADD*ZERO     $HWTNB           Hot Weight 1 SU
     C                     Z-ADD*ZERO     $HWSNB           Live Weight 1 S
     C                     Z-ADD*ZERO     $HWWNB           Head Received 1
     C                     MOVELA1ABCD    $HABCD           PD Producer Cod
     C                     MOVELA1AECD    $HAECD           PL Location Cod
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDA1HMNB    $DHMNB           BOH Company Num
     C                     MOVELA1ACCD    $DACCD           HB Buyer Code
     C                     MOVEL*BLANK    $DALTX           HB Name
     C                     MOVEL*BLANK    $DIXTX           Blank Usr 1 fld
      * Load related totals format
     C                     Z-ADD*ZERO     $GJZA1           Live Weight Adj
     C                     Z-ADD*ZERO     $GJYA1           Live Weight Adj
     C                     Z-ADD*ZERO     $GXGNB           Hot Weight 8 SU
     C                     Z-ADD*ZERO     $GXFNB           Hot Weight 7 SU
     C                     Z-ADD*ZERO     $GXENB           Hot Weight 6 SU
     C                     Z-ADD*ZERO     $GXBNB           Hot Weight 3 SU
     C                     Z-ADD*ZERO     $GXCNB           Hot Weight 4 SU
     C                     Z-ADD*ZERO     $GFOPR           Gross Cutout Va
     C                     Z-ADD*ZERO     $GFIPR           Gross Cutout Va
     C                     Z-ADD*ZERO     $GEIVA           Bse Mrkt Prc Am
     C                     Z-ADDA1HMNB    $GHMNB           BOH Company Num
     C                     MOVELA1ACCD    $GACCD           HB Buyer Code
     C                     MOVEL*BLANK    $GIYTX           Th Payment Type
     C                     Z-ADD*ZERO     $GWUNB           Head Killed 1 S
     C                     Z-ADD*ZERO     $GXDNB           Hot Weight 5 SU
     C                     Z-ADD*ZERO     $GOVNB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $GQFNB           Avg Hot Wgt
     C                     Z-ADD*ZERO     $GESPC           Avg Actual Dres
     C                     Z-ADD*ZERO     $GP8NB           Avg Backfat
     C                     Z-ADD*ZERO     $GENPC           Avg Loin eye
     C                     Z-ADD*ZERO     $GEOPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $GC3PR           Base Price Live
     C                     Z-ADD*ZERO     $GK1PR           Gross Pay Amt 1
     C                     Z-ADD*ZERO     $GDCVA           Gross Ttl 1 Sum
     C                     Z-ADD*ZERO     $GI3PR           Gross Price /C
     C                     Z-ADD*ZERO     $GFGPR           Gross Cutout va
     C                     Z-ADD*ZERO     $GFHPR           Gross margin pe
     C                     Z-ADD*ZERO     $GBUVA           Plant Expense p
     C                     Z-ADD*ZERO     $GR5NB           Plant expense p
     C                     Z-ADD*ZERO     $GBVVA           P/L per CWT
     C                     MOVEL*BLANK    $GI9TX           TH Payment Type
     C                     Z-ADD*ZERO     $GWVNB           Head Killed 3 S
     C                     Z-ADD*ZERO     $GQMNB           Avg Live Wgt 2
     C                     Z-ADD*ZERO     $GQNNB           Avg Hot Wgt 2 U
     C                     Z-ADD*ZERO     $GETPC           Avg Actual Dres
     C                     Z-ADD*ZERO     $GQONB           Avg Backfat 2 U
     C                     Z-ADD*ZERO     $GEUPC           Avg Loin eye 2
     C                     Z-ADD*ZERO     $GEVPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $GFJPR           Base Price live
     C                     Z-ADD*ZERO     $GK2PR           Gross Pay Amt 2
     C                     Z-ADD*ZERO     $GDDVA           Gross Ttl 2 Sum
     C                     Z-ADD*ZERO     $GI4PR           Gross Price /C
     C                     Z-ADD*ZERO     $GFLPR           Gross Cutout Vl
     C                     Z-ADD*ZERO     $GFMPR           Gross Margin /c
     C                     Z-ADD*ZERO     $GB8VA           Plant Expense p
     C                     Z-ADD*ZERO     $GB5VA           Plant expense p
     C                     Z-ADD*ZERO     $GB2VA           P/L per CWT 2
     C                     Z-ADD*ZERO     $GQLNB           Live Weight 2 S
     C                     Z-ADD*ZERO     $GQKNB           Hot Weight 2 SU
     C                     Z-ADD*ZERO     $GBXVA           Backfat * wgt 2
     C                     Z-ADD*ZERO     $GB0VA           Bse Mrkt Prc 2
     C                     Z-ADD*ZERO     $GBZVA           Lean Percent *
     C                     Z-ADD*ZERO     $GBYVA           Loin eye * wgt
     C                     Z-ADD*ZERO     $GQJNB           Head Received 2
     C                     Z-ADD*ZERO     $GNTNB           Lean % * Wt
     C                     Z-ADD*ZERO     $GBSVA           Backfat * Wgt
     C                     Z-ADD*ZERO     $GBTVA           Loin eye * wgt
     C                     Z-ADD*ZERO     $GWWNB           Head Received 1
     C                     Z-ADD*ZERO     $GWSNB           Live Weight 1 S
     C                     Z-ADD*ZERO     $GWTNB           Hot Weight 1 SU
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $FJYA1           Live Weight Adj
     C                     Z-ADD*ZERO     $FXDNB           Hot Weight 5 SU
     C                     Z-ADD*ZERO     $FXCNB           Hot Weight 4 SU
     C                     Z-ADD*ZERO     $FXBNB           Hot Weight 3 SU
     C                     Z-ADDA1HMNB    $FHMNB           BOH Company Num
     C                     MOVELA1KAST    $FKAST           TH Source Type
     C                     MOVELA1J9ST    $FJ9ST           TH Payment Type
     C                     MOVEL*BLANK    $FITTX           Payment type De
     C                     MOVELA1ABCD    $FABCD           PD Producer Cod
     C                     MOVEL*BLANK    $FC4TX           Condition Name
     C                     MOVEL*BLANK    $FIYTX           Th Payment Type
     C                     Z-ADD*ZERO     $FD2PC           Act Dress Yield
     C                     Z-ADD*ZERO     $FWUNB           Head Killed 1 S
     C                     Z-ADD*ZERO     $FOVNB           Avg Live Wgt Us
     C                     Z-ADD*ZERO     $FQFNB           Avg Hot Wgt
     C                     Z-ADD*ZERO     $FESPC           Avg Actual Dres
     C                     Z-ADD*ZERO     $FP8NB           Avg Backfat
     C                     Z-ADD*ZERO     $FENPC           Avg Loin eye
     C                     Z-ADD*ZERO     $FEOPC           Avg Lean Percen
     C                     Z-ADD*ZERO     $FBDPR           Market Price US
     C                     Z-ADD*ZERO     $FC3PR           Base Price Live
     C                     Z-ADD*ZERO     $FK1PR           Gross Pay Amt 1
     C                     Z-ADD*ZERO     $FDCVA           Gross Ttl 1 Sum
     C                     Z-ADD*ZERO     $FI3PR           Gross Price /C
     C                     Z-ADD*ZERO     $FFGPR           Gross Cutout va
     C                     Z-ADD*ZERO     $FBBVA           Gross Total SUM
     C                     Z-ADD*ZERO     $FFHPR           Gross margin pe
     C                     Z-ADD*ZERO     $FBUVA           Plant Expense p
     C                     Z-ADD*ZERO     $FR5NB           Plant expense p
     C                     Z-ADD*ZERO     $FBVVA           P/L per CWT
     C                     Z-ADD*ZERO     $FOLPR           Mkt - Gross Prc
     C                     MOVEL*BLANK    $FIXTX           Blank Usr 1 fld
     C                     Z-ADD*ZERO     $FBSVA           Backfat * Wgt
     C                     Z-ADD*ZERO     $FBTVA           Loin eye * wgt
     C                     Z-ADD*ZERO     $FNTNB           Lean % * Wt
     C                     Z-ADD*ZERO     $FFIPR           Gross Cutout Va
     C                     Z-ADD*ZERO     $FWWNB           Head Received 1
     C                     Z-ADD*ZERO     $FWSNB           Live Weight 1 S
     C                     Z-ADD*ZERO     $FWTNB           Hot Weight 1 SU
     C                     Z-ADD*ZERO     $FEIVA           Bse Mrkt Prc Am
     C                     Z-ADD*ZERO     $FOUNB           Lean % Usr REp
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
     C           W0AL05    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP05  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDA1HMNB    $EHMNB           BOH Company Num
     C                     Z-ADDA1LPNB    $ELPNB           TH AP Voucher/D
     C                     MOVELA1ABCD    $EABCD           PD Producer Cod
     C                     MOVEL*BLANK    $EEKTX           Producer Name 1
     C                     Z-ADDA1B0DT    $EB0DT           TH Kill Date
     C                     Z-ADDA1CVNB    $ECVNB           TH Tattoo Numbe
     C                     MOVEL*BLANK    $EIYTX           Th Payment Type
     C                     Z-ADDA1FENB    $EFENB           TH Head Killed
     C                     Z-ADD*ZERO     $EB5NB           Head Total USR
     C                     Z-ADDA1BNNB    $EBNNB           BOH Buy Order N
     C                     Z-ADDA1F7NB    $EF7NB           TH Avg Live Wgt
     C                     Z-ADDA1BONB    $EBONB           BOL Load Number
     C                     Z-ADDA1HDNB    $EHDNB           TH Avg Hot Wgt
     C                     Z-ADDA1CWPC    $ECWPC           TH Adj Actual Y
     C                     Z-ADDA1AWPC    $EAWPC           TH Actual Yield
     C                     Z-ADDA1F2NB    $EF2NB           TH Avg Backfat
     C                     Z-ADDA1F3NB    $EF3NB           TH Avg Loin Eye
     C                     Z-ADDA1CYNB    $ECYNB           TH Live Wgt
     C                     Z-ADDA1E0NB    $EE0NB           TH Hot Wgt
     C                     Z-ADDA1F4NB    $EF4NB           TH Avg Lean Per
     C                     Z-ADDA1ANPR    $EANPR           TH CM Base Mkt
     C                     Z-ADDA1AXVA    $EAXVA           TH CM LN AddOn/
     C                     Z-ADDA1AWVA    $EAWVA           TH CM Yield Gai
     C                     Z-ADDA1AYVA    $EAYVA           TH CM Sort Disc
     C                     Z-ADDA1AOPR    $EAOPR           TH CM Base Carc
     C                     Z-ADDA1CBPR    $ECBPR           TH Payment Gros
     C                     Z-ADDA1A5VA    $EA5VA           TH Additions Am
     C                     Z-ADDA1ASPR    $EASPR           TH Deduction Am
     C                     Z-ADDA1CCPR    $ECCPR           Th Payment Net
     C                     Z-ADDA1CXNB    $ECXNB           TH Dead On Arri
     C                     Z-ADDA1FCNB    $EFCNB           TH Yard Deads
     C                     Z-ADDA1FDNB    $EFDNB           TH Head Condemn
     C                     Z-ADDA1HENB    $EHENB           TH Head Adds
     C                     Z-ADDA1HFNB    $EHFNB           TH Head Accepte
     C                     MOVELA1BICD    $EBICD           TH Group Refere
     C                     Z-ADDA1LRNB    $ELRNB           TH Adj Live Wgt
     C                     MOVELA1CPST    $ECPST           TH Live Purchas
     C                     Z-ADDA1A5PC    $EA5PC           TH Tot Loin Eye
     C                     Z-ADDA1ACPR    $EACPR           TH Live Purchas
     C                     Z-ADDA1FBNB    $EFBNB           TH Tot Backfat
     C                     Z-ADDA1A4PC    $EA4PC           TH Tot Light Re
     C                     Z-ADDA1F5NB    $EF5NB           TH Avg Light Re
     C                     Z-ADDA1AVPC    $EAVPC           TH Std Yield Pe
     C                     Z-ADDA1A8PC    $EA8PC           TH Yield Differ
     C                     Z-ADDA1A7PC    $EA7PC           TH Recalc Live
     C                     Z-ADDA1AMPR    $EAMPR           TH CM Base Mkt
     C                     MOVELA1CWST    $ECWST           TH Payment Sts
     C                     Z-ADDA1CWNB    $ECWNB           TH Head Receive
     C                     Z-ADDA1B8PR    $EB8PR           TH CM Market Pr
     C                     MOVELA1CSCD    $ECSCD           THP Process Cod
     C                     Z-ADDA1APPR    $EAPPR           TH CM Carcass G
     C                     Z-ADDA1ATPR    $EATPR           TH Carcass Net
     C                     Z-ADDA1H9NB    $EH9NB           TH Held Over
     C                     MOVELA1BECD    $EBECD           HC Class Code
     C                     Z-ADDA1A4VA    $EA4VA           TH Total Net WO
     C                     Z-ADDA1B9PR    $EB9PR           TH Live Gross A
     C                     Z-ADDA1CDPR    $ECDPR           TH Freight Amou
     C                     Z-ADDA1CAPR    $ECAPR           TH LIve Net Amt
     C                     Z-ADDA1A7VA    $EA7VA           TH Accrual Amou
     C                     Z-ADDA1A2PR    $EA2PR           TH Fixed Cost A
     C                     MOVELA1JWST    $EJWST           TH Calc Net Sts
     C                     MOVELA1D7ST    $ED7ST           TH Header Error
     C                     MOVELA1D8ST    $ED8ST           TH Detail Error
     C                     MOVELA1DWST    $EDWST           TH Kill Balanci
     C                     MOVELA1D6ST    $ED6ST           TH Bal to Kill
     C                     Z-ADDA1AWDT    $EAWDT           TH Purchase Dat
     C                     Z-ADDA1GHNB    $EGHNB           TH Commission A
     C                     Z-ADDA1BYDT    $EBYDT           TH Voucher Paym
     C                     MOVELA1E0ST    $EE0ST           TH User Error O
     C                     MOVELA1E1ST    $EE1ST           TH Held Over Re
     C                     MOVELA1E2ST    $EE2ST           TH Sex
     C                     Z-ADDA1BSDT    $EBSDT           TH Held/Ovr Com
     C                     Z-ADDA1BTDT    $EBTDT           TH Commission P
     C                     Z-ADDA1BUDT    $EBUDT           TH Actual Check
     C                     Z-ADDA1HGNB    $EHGNB           TH Shipped Weig
     C                     Z-ADDA1HHNB    $EHHNB           TH Avg Hot Wgt
     C                     Z-ADDA1HINB    $EHINB           TH FFLI
     C                     Z-ADDA1A3PR    $EA3PR           TH Kill Product
     C                     Z-ADDA1A4PR    $EA4PR           TH Cut Product
     C                     Z-ADDA1A6PR    $EA6PR           TH Render Produ
     C                     Z-ADDA1J9NB    $EJ9NB           TH Head Exclude
     C                     Z-ADD*ZERO     $EBDPR           Market Price US
     C                     Z-ADDA1D6PR    $ED6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     $EK1PR           Gross Pay Amt 1
     C                     Z-ADDA1D7PR    $ED7PR           TH CM Bse Mkt C
     C                     Z-ADDA1EFPR    $EEFPR           TH CM Lean Prem
     C                     Z-ADDA1D8PR    $ED8PR           TH CM Srt Dsc L
     C                     Z-ADDA1EAPR    $EEAPR           TH CM Yld G/L L
     C                     Z-ADDA1EBPR    $EEBPR           TH CM Yld G/L C
     C                     Z-ADDA1ECPR    $EECPR           TH CM Crc Val L
     C                     Z-ADDA1EDPR    $EEDPR           TH CM Crc Val C
     C                     Z-ADDA1EEPR    $EEEPR           TH CM Lean Prem
     C                     Z-ADDA1D9PR    $ED9PR           TH CM Srt Dsc C
     C                     Z-ADDA1EHPR    $EEHPR           TH CM Gross Car
     C                     Z-ADD*ZERO     $EI3PR           Gross Price /C
     C                     Z-ADD*ZERO     $EFGPR           Gross Cutout va
     C                     Z-ADD*ZERO     $EFHPR           Gross margin pe
     C                     Z-ADD*ZERO     $EBUVA           Plant Expense p
     C                     Z-ADD*ZERO     $EBVVA           P/L per CWT
     C                     Z-ADD*ZERO     $ENONB           Backfat * Wgt U
     C                     Z-ADD*ZERO     $ENPNB           Loin-Eye * Wgt
     C                     Z-ADD*ZERO     $ENNNB           Lean % * Wgt US
     C                     Z-ADDA1EGPR    $EEGPR           TH CM Gross Liv
     C                     MOVELA1KAST    $EKAST           TH Source Type
     C                     MOVELA1J7ST    $EJ7ST           TH Scale Ticket
     C                     MOVELA1J8ST    $EJ8ST           TH Posted to HP
     C                     MOVELA1LIST    $ELIST           TH Schedule Kil
     C                     MOVELA1LJST    $ELJST           TH Shift Held O
     C                     MOVELA1NZTX    $ENZTX           TH State
     C                     MOVELA1HJCD    $EHJCD           TH Unused Code
     C                     MOVELA1R4ST    $ER4ST           TH Unused Sts 2
     C                     MOVELA1R5ST    $ER5ST           TH Commission S
     C                     MOVELA1R6ST    $ER6ST           TH Paid 2 Week
     C                     MOVELA1R7ST    $ER7ST           TH Unused Sts 1
     C                     Z-ADDA1THWT    $ETHWT           TH DOA Weight
     C                     Z-ADDA1T2WT    $ET2WT           TH Avg Lean % E
     C                     Z-ADDA1THHD    $ETHHD           TH HPS Farm Sit
     C                     Z-ADDA1T2HD    $ET2HD           TH Shift Held O
     C                     Z-ADDA1OBPR    $EOBPR           TH Sorting Amou
     C                     Z-ADDA1KOER    $EKOER           TH Head Identif
     C                     Z-ADDA1OPIR    $EOPIR           TH Percent Iden
     C                     Z-ADDA1OPEM    $EOPEM           TH Percent Acce
     C                     Z-ADDA1IORP    $EIORP           TH Head Adjuste
     C                     Z-ADDA1OWEO    $EOWEO           TH PHA Head Add
     C                     MOVELA1OQET    $EOQET           TH PHA Add Type
     C                     MOVELA1URST    $EURST           TH PHA Average
     C                     MOVELA1USST    $EUSST           TH PHA Add Reas
     C                     Z-ADDA1HHPC    $EHHPC           TH PHA Yield Pe
     C                     Z-ADDA1S9PR    $ES9PR           TH PHA Lean Prm
     C                     Z-ADDA1TAPR    $ETAPR           TH VC Gross Val
     C                     Z-ADDA1TBPR    $ETBPR           TH Excluded Gro
     C                     Z-ADDA1JFUR    $EJFUR           TH Avg Lean %
     C                     Z-ADDA1KRIF    $EKRIF           TH Broken Back
     C                     Z-ADDA1KORF    $EKORF           TH Hot Scl Uplo
     C                     Z-ADDA1KAPR    $EKAPR           TH Unused Nbr 4
     C                     Z-ADDA1KROT    $EKROT           TH Excluded Car
     C                     Z-ADDA1OTJG    $EOTJG           TH Excluded Pre
     C                     Z-ADDA1IRJG    $EIRJG           TH Unused Nbr 7
     C                     Z-ADDA1IMJF    $EIMJF           TH Unused Nbr 8
     C                     Z-ADDA1IRGF    $EIRGF           TH Unused Nbr 9
     C                     Z-ADDA1KRJF    $EKRJF           TH Unused Nbr 1
     C                     Z-ADDA1OJRF    $EOJRF           TH Break Even P
     C                     Z-ADDA1KFOR    $EKFOR           TH Meat Value F
     C                     Z-ADDA1ORJK    $EORJK           TH Yld Parm Adj
     C                     Z-ADDA1OMVJ    $EOMVJ           TH PHA Sort Dis
     C                     Z-ADDA1MVNF    $EMVNF           TH Avg Loin Eye
     C                     Z-ADDA1MCNF    $EMCNF           TH Avg Backfat
     C                     Z-ADDA1NCNF    $ENCNF           TH HITCH Old Pa
     C                     Z-ADDA1NCHF    $ENCHF           TH MPR Sort Los
     C                     Z-ADDA1IGIR    $EIGIR           TH Unused Nbr 1
     C                     Z-ADDA1KFJR    $EKFJR           TH Unused Nbr 2
     C                     Z-ADDA1EADT    $EEADT           TH Cold Scl Upl
     C                     Z-ADDA1EBDT    $EEBDT           TH Cold Scl Upl
     C                     Z-ADDA1ECDT    $EECDT           TH Head LFT
     C                     Z-ADDA1EDDT    $EEDDT           TH Head EUT/KOA
     C                     Z-ADDA1EEDT    $EEEDT           TH Unused Date
     C                     MOVELA1U4ST    $EU4ST           TH Unused Sts 1
     C                     MOVELA1U5ST    $EU5ST           TH Unused Sts 2
     C                     MOVELA1U6ST    $EU6ST           TH Unused Sts 3
     C                     MOVELA1U7ST    $EU7ST           TH Unused Sts 4
     C                     MOVELA1U8ST    $EU8ST           TH Unused Sts 5
     C                     MOVELA1U9ST    $EU9ST           TH Unused Sts 6
     C                     MOVELA1VAST    $EVAST           TH Unused Sts 7
     C                     MOVELA1VBST    $EVBST           TH Unused Sts 8
     C                     MOVELA1J9ST    $EJ9ST           TH Payment Type
     C                     Z-ADDA1OXNB    $EOXNB           TH HPS Movement
     C                     MOVELA1LKST    $ELKST           TH Source Code
     C                     MOVELA1LLST    $ELLST           TH Hog Class Ty
     C                     MOVELA1AGCD    $EAGCD           GN Genetic Code
     C                     MOVELA1BDCD    $EBDCD           DF Defect Code
     C                     MOVELA1AECD    $EAECD           PL Location Cod
     C                     MOVELA1ACCD    $EACCD           HB Buyer Code
     C                     MOVELA1AAVN    $EAAVN           RS User Changed
     C                     Z-ADDA1AADT    $EAADT           RS Date Changed
     C                     Z-ADDA1AMTM    $EAMTM           RS Time Changed
     C                     MOVELA1AJST    $EAJST           RS Record Statu
     C                     MOVELA1AHVN    $EAHVN           RS Job
     C                     MOVELA1AGVN    $EAGVN           RS Program
     C                     MOVELA1ABVN    $EABVN           RS User Added
     C                     Z-ADDA1ABDT    $EABDT           RS Date Added
     C                     MOVELA1C4ST    $EC4ST           TH Resale UOM
     C                     Z-ADDA1ABTM    $EABTM           RS Time Added
     C                     Z-ADDA1AIPR    $EAIPR           TH Recalc Live
     C                     Z-ADDA1A6DT    $EA6DT           TH Pricing Date
     C                     MOVELA1C2ST    $EC2ST           TH Resale Sprea
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
     C                     ADD  $EANPR    $FEIVA           Bse Mrkt Prc Am
     C                     ELSE
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C                     ADD  $EB9PR    $FEIVA           Bse Mrkt Prc Am
     C                     END                             *FI
     C                     END                             *FI
     C                     MOVEL$EIYTX    $FIYTX           Th Payment Type
     C                     ADD  WUMHPR    $FDCVA           Gross Ttl 1 Sum
     C                     ADD  WUB6VA    $FFIPR           Gross Cutout Va
     C                     ADD  WUB7VA    $FR5NB           Plant expense p
     C                     ADD  $EFENB    $FWUNB           Head Killed 1 S
     C                     ADD  $ECWNB    $FWWNB           Head Received 1
     C                     ADD  $ECYNB    $FWSNB           Live Weight 1 S
     C                     ADD  $ELRNB    $FJYA1           Live Weight Adj
     C                     ADD  $EE0NB    $FWTNB           Hot Weight 1 SU
      * Avg Backf based on hot wgt of carcasses having backfat
      * CASE: CUR.Backfat * Wgt USR GT WRK.Zero USR
     C           $ENONB    IFGT WUE9NB                     *IF
     C                     ADD  $ENONB    $FBSVA           Backfat * Wgt
     C                     ADD  $EE0NB    $FXBNB           Hot Weight 3 SU
     C                     END                             *FI
      * Avg Loin eye based on hot wgt of carcasses having loin eye
      * CASE: CUR.Loin-Eye * Wgt USR GT WRK.Zero USR
     C           $ENPNB    IFGT WUE9NB                     *IF
     C                     ADD  $ENPNB    $FBTVA           Loin eye * wgt
     C                     ADD  $EE0NB    $FXCNB           Hot Weight 4 SU
     C                     END                             *FI
      * Avg Lean % based on hot wgt of carcasses having lean %
      * CASE: CUR.Lean % * Wgt USR GT WRK.Zero USR
     C           $ENNNB    IFGT WUE9NB                     *IF
     C                     ADD  $ENNNB    $FNTNB           Lean % * Wt
     C                     ADD  $EE0NB    $FXDNB           Hot Weight 5 SU
     C                     END                             *FI
      * C4292:  5/5/98 pll  added market price to pmt type total for calc
      *                     use.  Per Julie, it's OK to use the last one,
      *                     that's what we're doing.
     C                     Z-ADD$EBDPR    $FBDPR           Market Price US
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN A1HMNB    WZA001           BOH Company Num
     C                     Z-ADDA1HMNB    WZA001
     C           *LIKE     DEFN A1ACCD    WZA002           HB Buyer Code
     C                     MOVELA1ACCD    WZA002
     C           *LIKE     DEFN A1ABCD    WZA003           PD Producer Cod
     C                     MOVELA1ABCD    WZA003
     C           *LIKE     DEFN A1J9ST    WZA004           TH Payment Type
     C                     MOVELA1J9ST    WZA004
     C           *LIKE     DEFN A1B0DT    WZA005           TH Kill Date
     C                     Z-ADDA1B0DT    WZA005
     C           *LIKE     DEFN A1CVNB    WZA006           TH Tattoo Numbe
     C                     Z-ADDA1CVNB    WZA006
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@A1CPQH                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
     C                     MOVEL'Y'       W0RSL            *Record selecte
      * E10339 JJH 05/16/17 - Change Record Selection for Source Code
      * Record Selection
      * CASE: DB1.TH Hog Class Type is Resale
     C           A1LLST    IFEQ 'R'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.HB Buyer Code NE WRK.Blank USR
      *   |- c2    : PAR.HB Buyer Code NE DB1.HB Buyer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2ACCD    IFNE WUCRTX                     *IF
     C           P2ACCD    IFNE A1ACCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DB1.TH Kill Date LT PAR.Date From USR
      *   |- c2    : DB1.TH Kill Date GT PAR.Date To   USR
      *   '-
     C           A1B0DT    IFLT P3B3DT                     *IF
     C           A1B0DT    ORGT P4B4DT                     *OR
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.PD Producer Code NE WRK.Blank USR
      *   |- c2    : PAR.PD Producer Code NE DB1.PD Producer Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2ABCD    IFNE WUCRTX                     *IF
     C           P2ABCD    IFNE A1ABCD                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.TH Source Type NE WRK.Blank USR
      *   |- c2    : PAR.TH Source Type NE DB1.TH Source Type
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1KAST    IFNE WUCRTX                     *IF
     C           P1KAST    IFNE A1KAST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
      * E10339 JJH 05/16/17 - Change Record Selection for Source Code
     C                     ELSE
      * CASE: DB1.TH Head Killed is *Zeros
     C           A1FENB    IFEQ *ZERO                      *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: DB1.TH Payment Sts is Paid Producer
     C           A1CWST    IFEQ 'PL'                       *IF
     C           A1CWST    OREQ 'PC'
     C           A1CWST    OREQ 'NC'
     C           A1CWST    OREQ 'NL'
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Record Selection for 6-Source Codes
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PGM.*Record selected is *YES
      *   |- c2    : PAR.TH Source Code-X18 USR is Blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           W0RSL     IFEQ 'Y'                        *IF
     C           P2DRT1    IFEQ *BLANK                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.TH Source Code-1 USR is NE Blank
      *   |- c2    : LCL.TH Source Code-1 USR EQ DB1.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0001    IFNE *BLANK                     *IF
     C           YL0001    IFEQ A1LKST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.TH Source Code-2 USR is NE Blank
      *   |- c2    : LCL.TH Source Code-2 USR EQ DB1.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0002    IFNE *BLANK                     *IF
     C           YL0002    IFEQ A1LKST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.TH Source Code-3 USR is NE Blank
      *   |- c2    : LCL.TH Source Code-3 USR EQ DB1.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0003    IFNE *BLANK                     *IF
     C           YL0003    IFEQ A1LKST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.TH Source Code-4 USR is NE Blank
      *   |- c2    : LCL.TH Source Code-4 USR EQ DB1.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0004    IFNE *BLANK                     *IF
     C           YL0004    IFEQ A1LKST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.TH Source Code-5 USR is NE Blank
      *   |- c2    : LCL.TH Source Code-5 USR EQ DB1.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0005    IFNE *BLANK                     *IF
     C           YL0005    IFEQ A1LKST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : LCL.TH Source Code-6 USR is NE Blank
      *   |- c2    : LCL.TH Source Code-6 USR EQ DB1.TH Source Code
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0006    IFNE *BLANK                     *IF
     C           YL0006    IFEQ A1LKST                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        BOH Company Num
     C                     MOVEL*BLANK    W0AL01  1        HB Buyer Code
     C                     MOVEL*BLANK    W0AL02  1        PD Producer Cod
     C                     MOVEL*BLANK    W0AL03  1        TH Payment Type
     C                     MOVEL*BLANK    W0AL04  1        TH Kill Date
     C                     MOVEL*BLANK    W0AL05  1        TH Tattoo Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        BOH Company Num
     C                     MOVEL'Y'       W0AL01  1        HB Buyer Code
     C                     MOVEL'Y'       W0AL02  1        PD Producer Cod
     C                     MOVEL'Y'       W0AL03  1        TH Payment Type
     C                     MOVEL'Y'       W0AL04  1        TH Kill Date
     C                     MOVEL'Y'       W0AL05  1        TH Tattoo Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           A1HMNB    IFNE WZA001                     BOH Company Num
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           A1ACCD    IFNE WZA002                     HB Buyer Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           A1ABCD    IFNE WZA003                     PD Producer Cod
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           A1J9ST    IFNE WZA004                     TH Payment Type
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           A1B0DT    IFNE WZA005                     TH Kill Date
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C           A1CVNB    IFNE WZA006                     TH Tattoo Numbe
     C           W0AL04    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL05
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL05    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP05
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of TH Payment Type format
      * Retrieve Producer Name if Summary Report
      * CASE: PAR.Report Type Sum/Dtl USR is Summary
     C           P8M1ST    IFEQ 'S'                        *IF
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
      * Avg live wgt
      * CASE: CUR.Head Received 1 SUM is Not 0
     C           $FWWNB    IFNE *ZERO                      *IF
     C           $FWSNB    DIV  $FWWNB    $FOVNB    H      Avg Live Wgt Us
     C                     END                             *FI
      * Avg hot wgt
      * CASE: CUR.Head Killed 1 SUM is Not 0
     C           $FWUNB    IFNE *ZERO                      *IF
     C           $FWTNB    DIV  $FWUNB    $FQFNB    H      Avg Hot Wgt
     C                     END                             *FI
      * Avg Backf based on hot wgt of carcasses having backfat
      * CASE: CUR.Hot Weight 3 SUM NE WRK.Zero USR
     C           $FXBNB    IFNE WUE9NB                     *IF
     C           $FBSVA    DIV  $FXBNB    $FP8NB           Avg Backfat
     C                     END                             *FI
      * Avg Loin eye based on hot wgt of carcasses having loin eye
      * CASE: CUR.Hot Weight 4 SUM NE WRK.Zero USR
     C           $FXCNB    IFNE WUE9NB                     *IF
     C           $FBTVA    DIV  $FXCNB    $FENPC           Avg Loin eye
     C                     END                             *FI
      * Avg Lean % based on hot weight of carcasses having lean percent
      * CASE: CUR.Hot Weight 5 SUM NE WRK.Zero USR
     C           $FXDNB    IFNE WUE9NB                     *IF
     C           $FNTNB    DIV  $FXDNB    $FEOPC           Avg Lean Percen
     C                     END                             *FI
      * Per Live CWT
      * CASE: CUR.Live Weight 1 SUM NE WRK.Zero USR
     C           $FWSNB    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Gross Pay Amt 1 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $FWSNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $FDCVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $FK1PR           Gross Pay Amt 1
      * Base Price /Live CWT
      * CUR.Base Price Live /CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Bse Mrkt Prc Amt 15.2 Sum
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $FWSNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $FEIVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $FC3PR           Base Price Live
     C                     END                             *FI
      * Per Live Adj CWT 10/6/03
      * CASE: CUR.Live Weight Adj SUM NE WRK.Zero USR
     C           $FJYA1    IFNE WUE9NB                     *IF
      * Compute: Avg Actual Dress
      * CUR.Avg Actual Dress Yld  USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight Adj SUM
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $FWTNB    DIV  $FJYA1    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $FESPC           Avg Actual Dres
     C                     END                             *FI
      * Per Carc CWT
      * CASE: CUR.Hot Weight 1 SUM NE WRK.Zero USR
     C           $FWTNB    IFNE WUE9NB                     *IF
      * Gross Price /Carc CWT
      * CUR.Gross Price /C CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $FWTNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $FDCVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $FI3PR           Gross Price /C
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout value/cwtUSR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Cutout Value    SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $FWTNB    DIV  100       W0WA01           *Synon (15,2) w
     C           $FFIPR    DIV  W0WA01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FFGPR           Gross Cutout va
     C                     END                             *FI
      * Per Head
      * CASE: CUR.Head Killed 1 SUM NE WRK.Zero USR
     C           $FWUNB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross margin per CWT  USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : CUR.Gross Cutout Value    SUM
      * -     : PGM.*Synon (17,7) work field
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Killed 1 SUM
     C           $FFIPR    SUB  $FDCVA    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $FWUNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FFHPR           Gross margin pe
      * Plant Expense /Head
      * CUR.Plant Expense per CWT USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Plant expense per/cwt SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Killed 1 SUM
     C           $FR5NB    DIV  $FWUNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $FBUVA           Plant Expense p
     C                     END                             *FI
     C           $FFHPR    SUB  $FBUVA    $FBVVA           P/L per CWT
     C           $FK1PR    SUB  $FBDPR    $FOLPR           Mkt - Gross Prc
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
     C                     MOVEL'0'       *IN79
     C           P8M1ST    IFEQ 'D'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
     C                     MOVEL'0'       *IN78
     C           P8M1ST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       *IN78
     C                     END                             *FI
      * Print format
     C                     WRITE$FKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of TH Payment Type format
      * CUR.Th Payment Type Desc Usr = Condition name of CUR.TH Payment T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100717   Y2LSNO  70       List number
     C                     PARM $FJ9ST    W0INVL 25        TH Payment Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $FIYTX    PARM           W0CNNM 25        Th Payment Type
      *
      * Accum totals per Carcass merit or Live payment type
      * CASE: CUR.TH Payment Type is Carcass Merit
     C           $FJ9ST    IFEQ 'C'                        *IF
     C                     MOVEL$FIYTX    $GIYTX           Th Payment Type
     C                     ADD  $FWUNB    $GWUNB           Head Killed 1 S
     C                     ADD  $FWWNB    $GWWNB           Head Received 1
     C                     ADD  $FWSNB    $GWSNB           Live Weight 1 S
     C                     ADD  $FJYA1    $GJYA1           Live Weight Adj
     C                     ADD  $FWTNB    $GWTNB           Hot Weight 1 SU
     C                     ADD  $FXBNB    $GXBNB           Hot Weight 3 SU
     C                     ADD  $FXCNB    $GXCNB           Hot Weight 4 SU
     C                     ADD  $FXDNB    $GXDNB           Hot Weight 5 SU
     C                     ADD  $FBSVA    $GBSVA           Backfat * Wgt
     C                     ADD  $FBTVA    $GBTVA           Loin eye * wgt
     C                     ADD  $FNTNB    $GNTNB           Lean % * Wt
     C                     ADD  $FEIVA    $GEIVA           Bse Mrkt Prc Am
     C                     ADD  $FDCVA    $GDCVA           Gross Ttl 1 Sum
     C                     ADD  $FFIPR    $GFIPR           Gross Cutout Va
     C                     ADD  $FR5NB    $GR5NB           Plant expense p
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL$FIYTX    $GI9TX           TH Payment Type
     C                     ADD  $FWUNB    $GWVNB           Head Killed 3 S
     C                     ADD  $FWWNB    $GQJNB           Head Received 2
     C                     ADD  $FWSNB    $GQLNB           Live Weight 2 S
     C                     ADD  $FJYA1    $GJZA1           Live Weight Adj
     C                     ADD  $FWTNB    $GQKNB           Hot Weight 2 SU
     C                     ADD  $FXBNB    $GXENB           Hot Weight 6 SU
     C                     ADD  $FXCNB    $GXFNB           Hot Weight 7 SU
     C                     ADD  $FXDNB    $GXGNB           Hot Weight 8 SU
     C                     ADD  $FBSVA    $GBXVA           Backfat * wgt 2
     C                     ADD  $FBTVA    $GBYVA           Loin eye * wgt
     C                     ADD  $FNTNB    $GBZVA           Lean Percent *
     C                     ADD  $FEIVA    $GB0VA           Bse Mrkt Prc 2
     C                     ADD  $FDCVA    $GDDVA           Gross Ttl 2 Sum
     C                     ADD  $FFIPR    $GFOPR           Gross Cutout Va
     C                     ADD  $FR5NB    $GB5VA           Plant expense p
     C                     END                             *FI
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of HB Buyer Code format
      * Payment Type = Carcass
     C                     EXSR UCSUBR                     Payment Type =
      * Payment Type = Live
     C                     EXSR UDSUBR                     Payment Type =
      * Payment Type = Carcass - Description
      * CASE: CUR.Th Payment Type Desc Usr EQ WRK.Blank USR
     C           $GIYTX    IFEQ WUCRTX                     *IF
     C                     MOVEL'Carc'    $GIYTX           Th Payment Type
     C                     END                             *FI
      * Payment Type = Live - Description
      * CASE: CUR.TH Payment Type Dsc 2 USR EQ WRK.Blank USR
     C           $GI9TX    IFEQ WUCRTX                     *IF
     C                     MOVEL'Live'    $GI9TX           TH Payment Type
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$GKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
      * USER: Process after print of HB Buyer Code format
     C                     MOVEL$GIYTX    $HIYTX           Th Payment Type
     C                     ADD  $GWUNB    $HWUNB           Head Killed 1 S
     C                     ADD  $GWTNB    $HWTNB           Hot Weight 1 SU
     C                     ADD  $GWSNB    $HWSNB           Live Weight 1 S
     C                     ADD  $GWWNB    $HWWNB           Head Received 1
     C                     ADD  $GBSVA    $HBSVA           Backfat * Wgt
     C                     ADD  $GBTVA    $HBTVA           Loin eye * wgt
     C                     ADD  $GNTNB    $HNTNB           Lean % * Wt
     C                     ADD  $GFIPR    $HFIPR           Gross Cutout Va
     C                     ADD  $GR5NB    $HR5NB           Plant expense p
     C                     MOVEL$GI9TX    $HI9TX           TH Payment Type
     C                     ADD  $GWVNB    $HWVNB           Head Killed 3 S
     C                     ADD  $GQJNB    $HQJNB           Head Received 2
     C                     ADD  $GQLNB    $HQLNB           Live Weight 2 S
     C                     ADD  $GQKNB    $HQKNB           Hot Weight 2 SU
     C                     ADD  $GBXVA    $HBXVA           Backfat * wgt 2
     C                     ADD  $GBYVA    $HBYVA           Loin eye * wgt
     C                     ADD  $GBZVA    $HBZVA           Lean Percent *
     C                     ADD  $GEIVA    $HEIVA           Bse Mrkt Prc Am
     C                     ADD  $GB0VA    $HB0VA           Bse Mrkt Prc 2
     C                     ADD  $GFOPR    $HFOPR           Gross Cutout Va
     C                     ADD  $GB5VA    $HB5VA           Plant expense p
     C                     ADD  $GDCVA    $HDCVA           Gross Ttl 1 Sum
     C                     ADD  $GDDVA    $HDDVA           Gross Ttl 2 Sum
     C                     ADD  $GXBNB    $HXBNB           Hot Weight 3 SU
     C                     ADD  $GXCNB    $HXCNB           Hot Weight 4 SU
     C                     ADD  $GXDNB    $HXDNB           Hot Weight 5 SU
     C                     ADD  $GXENB    $HXENB           Hot Weight 6 SU
     C                     ADD  $GXFNB    $HXFNB           Hot Weight 7 SU
     C                     ADD  $GXGNB    $HXGNB           Hot Weight 8 SU
     C                     ADD  $GJYA1    $HJYA1           Live Weight Adj
     C                     ADD  $GJZA1    $HJZA1           Live Weight Adj
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of BOH Company Number format
     C           $HWUNB    ADD  $HWVNB    $HGPNB           Head Killed 4 U
     C           $HQLNB    ADD  $HWSNB    WUGQNB           Live Weight 4 U
     C           $HQKNB    ADD  $HWTNB    WUHW4U           Hot Weight 4 Us
     C           $HJYA1    ADD  $HJZA1    WUJ0A1           Live Weight Adj
      * Backfat hot weight
     C           $HXBNB    ADD  $HXENB    WUHW09           Hot Weight 9 Us
      * Loin Eye weight
     C           $HXCNB    ADD  $HXFNB    WUHW10           Hot Weight 10 U
      * Lean %
     C           $HXDNB    ADD  $HXGNB    WUIFNB           Hot Weight 11 U
     C           $HBXVA    ADD  $HBSVA    WUD8VA           BackFat * Weigh
     C           $HBYVA    ADD  $HBTVA    WUD9VA           Loin eye * wgt
     C           $HBZVA    ADD  $HNTNB    WULN4U           Lean % * Wt 4 U
     C           $HEIVA    ADD  $HB0VA    WUDFVA           Bse Mrkt Prc Am
     C           $HDCVA    ADD  $HDDVA    WUEAVA           Gross Ttl 4 Sum
     C           $HFIPR    ADD  $HFOPR    WUEBVA           Gross Cutout Va
     C           $HR5NB    ADD  $HB5VA    WUEDVA           Plant expense p
      * Payment Type = Carcass
     C                     EXSR UESUBR                     Payment Type =
      * Payment Type = Live
     C                     EXSR UFSUBR                     Payment Type =
      * Company totals
     C                     EXSR UGSUBR                     Company totals
     C           W0PFM     IFEQ 'Y'
      * This format always starts a new page
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
      * Print format
     C                     WRITE$HKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * Mention hidden format
     C   99N99             WRITE$IFINTTL
      * USER: Process after print of final totals format
     C                     Z-ADDWUE9NB    WUKEST           TOT Hot Wgt Bk
     C                     Z-ADDWUE9NB    WUPGNB           Tot Hot Wgt Car
     C                     Z-ADDWUE9NB    WUPANB           TOT Head Rec Bk
     C                     Z-ADDWUE9NB    WUO2NB           TOT Head Kill B
     C                     Z-ADDWUE9NB    WUO1NB           TOT Live Wgt Bk
     C                     Z-ADDWUE9NB    WUPDNB           Tot Lean % Wgt
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     MOVELP8M1ST    $CM1ST           Report Type Sum
      * 1PG.Description 30 USR = Condition name of 1PG.Report Type Sum/Dt
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1174633   Y2LSNO  70       List number
     C                     PARM $CM1ST    W0INVL 25        Report Type Sum
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CKKTX    PARM           W0CNNM 25        Description 30
      *
     C                     Z-ADDP1HMNB    $CHMNB           BOH Company Num
      * Val Company Number    XF - STR Order Management Sys  * 
     C                     CALL 'PDGZXFR'              90  Val Company Num
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $CHMNB    WQ0001  30       CC Company Numb
     C           $CBSTX    PARM *BLANK    WQ0002 30        Oms Name
     C           WUG3ST    PARM *BLANK    WQ0003  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGZXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: PAR.HB Buyer Code is Blank
     C           P2ACCD    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $CALTX           HB Name
     C                     MOVEL'ALL'     $CALTX           HB Name
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP2ACCD    $CACCD           HB Buyer Code
      * Rtv Hog Buyer Name    RT - Hog Buyer  * 
     C                     EXSR SARVGN
     C                     END                             *FI
      * CASE: PAR.TH Source Type EQ WRK.Blank USR
     C           P1KAST    IFEQ WUCRTX                     *IF
     C                     MOVEL*BLANK    $CISTX           SR Type Desc
     C                     MOVEL'ALL'     $CISTX           SR Type Desc
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1KAST    $CIXST           SR Type
      * 1PG.SR Type Desc = Condition name of PAR.TH Source Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1121482   Y2LSNO  70       List number
     C                     PARM P1KAST    W0INVL 25        TH Source Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CISTX    PARM           W0CNNM 25        SR Type Desc
      *
     C                     END                             *FI
      * E10339 JJH 05/16/17 - Display 6 Source Codes
     C                     MOVELYL0001    $CSHCD           TH Source Code-
     C                     MOVELYL0002    $CSICD           TH Source Code-
     C                     MOVELYL0003    $CSJCD           TH Source Code-
     C                     MOVELYL0004    $CSKCD           TH Source Code-
     C                     MOVELYL0005    $CSLCD           TH Source Code-
     C                     MOVELYL0006    $CSMCD           TH Source Code-
      * CASE: PAR.PD Producer Code EQ WRK.Blank USR
     C           P2ABCD    IFEQ WUCRTX                     *IF
     C                     MOVEL*BLANK    $CCPTX           Name Producer D
     C                     MOVEL'ALL'     $CCPTX           Name Producer D
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP2ABCD    $CABCD           PD Producer Cod
     C                     MOVEL*BLANK    $CCPTX           Name Producer D
      * Name Producer DRV
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
      * CASE: PAR.TH Payment Type EQ WRK.Blank USR
     C           P1J9ST    IFEQ WUCRTX                     *IF
     C                     MOVEL*BLANK    $CHDTX           Payment Type De
     C                     MOVEL'ALL'     $CHDTX           Payment Type De
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1J9ST    $CJ9ST           TH Payment Type
      * 1PG.Payment Type Desc USR = Condition name of PAR.TH Payment Type
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100717   Y2LSNO  70       List number
     C                     PARM P1J9ST    W0INVL 25        TH Payment Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $CHDTX    PARM           W0CNNM 25        Payment Type De
      *
     C                     END                             *FI
     C                     Z-ADDP3B3DT    $CB3DT           Date From USR
     C                     Z-ADDP4B4DT    $CB4DT           Date To   USR
     C                     MOVELP6EVCD    $CEVCD           Market Code Usr
     C                     MOVELP7EWCD    $CEWCD           Price Group Usr
      * Val Commodity Market  XF - STR Order Management Sys  * 
     C                     CALL 'PDG1XFR'              90  Val Commodity M
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $CEVCD    WQ0004  3        PSC Commodity M
     C           $CERTX    PARM *BLANK    WQ0005 30        Market Code Des
     C           WUG3ST    PARM *BLANK    WQ0006  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG1XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Val Commodity Group   XF - STR Order Management Sys  * 
     C                     CALL 'PDG2XFR'              90  Val Commodity G
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $CEWCD    WQ0007  7        PSC Commodity P
     C           $CESTX    PARM *BLANK    WQ0008 30        Market Group De
     C           WUG3ST    PARM *BLANK    WQ0009  1        Invalid Y/N USR
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDG2XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * *****************************************************************
      * **  PK0050
      * *****************************************************************
     C                     MOVEL'1'       $CTJST           Performance Rep
     C                     MOVEL@CN,001   $CEXTX           PL Name Usr 17
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Date From USR to display format
      * Convert date
     C           1000000   ADD  $CB3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCB3DT
      * Convert Date To   USR to display format
      * Convert date
     C           1000000   ADD  $CB4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCB4DT
      * Print format
     C                     WRITE$C1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print BOH Company Number of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print HB Buyer Code of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of HB Buyer Code format
      * Rtv Hog Buyer Name    RT - Hog Buyer  * 
     C                     EXSR SCRVGN
     C           W0PFM     IFEQ 'Y'
     C                     MOVEL'0'       *IN79
     C           P8M1ST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP01
     C                     END                             FI
      * Print PD Producer Code of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print TH Payment Type of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE 'P'       W0AP03
     C                     END                             FI
      * Print TH Kill Date of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print TH Tattoo Number of Prt Prcrmnt Prfm D,S  PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP05    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP05    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP05
     C                     END                             FI
      * Print Detail line. of Prt Prcrmnt Prfm D,S  PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * Rtv Producer Name     RT - Producer  * 
     C                     EXSR SDRVGN
     C                     MOVELWUAGTX    $EEKTX           Producer Name 1
      * CUR.Th Payment Type Desc Usr = Condition name of CUR.TH Payment T
     C                     CALL 'PKRVC2R'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1100717   Y2LSNO  70       List number
     C                     PARM $EJ9ST    W0INVL 25        TH Payment Type
     C                     PARM ' '       W0VLMP  1        Value mapped
     C           $EIYTX    PARM           W0CNNM 25        Th Payment Type
      *
     C           $EF2NB    MULT $EE0NB    $ENONB           Backfat * Wgt U
     C           $EF3NB    MULT $EE0NB    $ENPNB           Loin-Eye * Wgt
     C           $EF4NB    MULT $EE0NB    $ENNNB           Lean % * Wgt US
      * Will be hard coding for this report the Market Date Method
      * The value is 'CUR.
     C                     MOVEL'CUR'     WUJ5TX           BOH Market Date
      * RTV Market Price      XF - STR Order Management Sys  * 
     C                     CALL 'PDMWXFR'              90  RTV Market Pric
     C                     PARM W0RTN     WQ0010  7        *Return code
     C                     PARM P6EVCD    WQ0011  3        PSC Commodity M
     C                     PARM P7EWCD    WQ0012  7        PSC Commodity P
     C                     PARM $EAWDT    WQ0013  70       TH Purchase Dat
     C                     PARM *ZERO     WQ0014  70       Date To   USR
     C           $EBDPR    PARM *ZERO     WQ0015 114       OMS Market Pric
     C           YL0007    PARM *ZERO     WQ0016  70       Pricing Date US
     C                     PARM $EHMNB    WQ0017  30       BOH Company Num
     C                     PARM WUJ5TX    WQ0018  3        BOH Market Date
     C                     PARM 'H'       WQ0019  1        System Used
     C           WUIPTX    PARM *BLANK    WQ0020  5        OMS Error Retur
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMWXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
     C                     Z-ADD*ZERO     WUB6VA           Gross Cutout Ho
      * Gross Cutout Hold   USR
      * WRK.Gross Cutout Hold     USR =
      *    *COMPUTE (x1 + x2 + x3)
      * x1    : CUR.TH Kill Product Value
      * +     : PGM.*Synon (17,7) work field
      * x2    : CUR.TH Cut Product Value
      * +     : PGM.*Synon (17,7) work field
      * x3    : CUR.TH Render Product Value
     C           $EA3PR    ADD  $EA4PR    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  $EA6PR    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WUB6VA           Gross Cutout Ho
     C                     Z-ADD*ZERO     WUB7VA           Plant Expense H
      * Additional Cost and Gross Amount
     C                     EXSR UBSUBR                     Additional Cost
      * Base Price
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           A1J9ST    IFEQ 'C'                        *IF
     C                     Z-ADDA1D6PR    $ED6PR           TH CM Bse Mkt L
     C                     ELSE
      * CASE: DB1.TH Payment Type is Live
     C           A1J9ST    IFEQ 'L'                        *IF
     C                     Z-ADDA1ACPR    $ED6PR           TH CM Bse Mkt L
     C                     END                             *FI
     C                     END                             *FI
      * Per Live CWT
      * CASE: CUR.TH Live Wgt NE WRK.Zero USR
     C           $ECYNB    IFNE WUE9NB                     *IF
      * Gross Pay Price /Live CWT
      * CUR.Gross Pay Amt 1 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : WRK.Payment Total Usr
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           A1CYNB    DIV  100       W0WD01           *Synon (17,7) w
     C           WUMHPR    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $EK1PR           Gross Pay Amt 1
     C                     END                             *FI
      * Per Carc CWT
      * CASE: CUR.TH Hot Wgt NE WRK.Zero USR
     C           $EE0NB    IFNE WUE9NB                     *IF
      * Gross Price /Carc CWT
      * CUR.Gross Price /C CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : WRK.Payment Total Usr
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : DB1.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           A1E0NB    DIV  100       W0WD01           *Synon (17,7) w
     C           WUMHPR    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $EI3PR           Gross Price /C
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout value/cwtUSR =
      *    *COMPUTE ((x1) / (x2 / x3))
      * x1    : WRK.Gross Cutout Hold     USR
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.TH Hot Wgt
      * /     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $EE0NB    DIV  100       W0WA01           *Synon (15,2) w
     C           WUB6VA    DIV  W0WA01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EFGPR           Gross Cutout va
     C                     END                             *FI
      * Per Head
      * CASE: CUR.TH Head Killed NE WRK.Zero USR
     C           $EFENB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross margin per CWT  USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : WRK.Gross Cutout Hold     USR
      * -     : PGM.*Synon (17,7) work field
      * x1    : WRK.Payment Total Usr
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.TH Head Killed
     C           WUB6VA    SUB  WUMHPR    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $EFENB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EFHPR           Gross margin pe
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CUR) $EEDDT' defaulted for 'TH Head EUT/KOA'.
      * Rtv Co Expense Total  RT - Company Kill Expense Rate  * 
     C                     EXSR SFRVGN
      * Plant Expense /Head
      * CUR.Plant Expense per CWT USR =
      *    *COMPUTE (x1 / x2)
      * x1    : WRK.Plant Expense Hold    USR
      * /     : CUR.Plant Expense per CWT USR *
      * x2    : CUR.TH Head Killed
     C           WUB7VA    DIV  $EFENB    $EBUVA           Plant Expense p
     C                     Z-ADD$EBUVA    $EBUVA           Plant Expense p
     C                     END                             *FI
     C           $EFHPR    SUB  $EBUVA    $EBVVA           P/L per CWT
      * CASE: PAR.Report Type Sum/Dtl USR is Summary
     C           P8M1ST    IFEQ 'S'                        *IF
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert TH Kill Date to display format
      * Convert date
     C           1000000   ADD  $EB0DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VEB0DT
     C                     MOVEL'0'       *IN79
     C           P8M1ST    IFEQ 'S'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP01    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Prcrmnt Prfm D,S  PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  13        W0FSUM
     C                     END                             FI
      *
      * * BOH Company Number of Prt Prcrmnt Prfm D,S  PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * HB Buyer Code of Prt Prcrmnt Prfm D,S  PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  8         W0FSUM
     C                     END                             FI
      *
      * * PD Producer Code of Prt Prcrmnt Prfm D,S  PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Payment Type of Prt Prcrmnt Prfm D,S  PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Kill Date of Prt Prcrmnt Prfm D,S  PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * TH Tattoo Number of Prt Prcrmnt Prfm D,S  PF
     C           W0AP05    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Prcrmnt Prfm D,S  PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Hog Buyer Name    RT - Hog Buyer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ADACCD           HB Buyer Code
      * Setup key
     C                     MOVEL$CACCD    ADACCD           HB Buyer Code
      * Establish starting position
     C           KRSSA     CHAIN@ADREAF              90    *
      * Data record not found
     C   90                MOVEL'PRK0011' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADALTX    $CALTX           HB Name
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVELP2ABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSB     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    $CCPTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Hog Buyer Name    RT - Hog Buyer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ADACCD           HB Buyer Code
      * Setup key
     C                     MOVEL$DACCD    ADACCD           HB Buyer Code
      * Establish starting position
     C           KRSSC     CHAIN@ADREAF              90    *
      * Data record not found
     C   90                MOVEL'PRK0011' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADALTX    $DALTX           HB Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$EABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSD     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    WUAGTX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Ded/Add Seaboards RT - Tattoo Ded/Add  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUMIPR           Addt Cst Ttl Us
      * Declare restrictor key work fields
     C           *LIKE     DEFN CDHMNB    WQSE01           BOH Company Num
     C           *LIKE     DEFN CDBNNB    WQSE02           BOH Buy Order N
     C           *LIKE     DEFN CDBONB    WQSE03           BOL Load Number
     C           *LIKE     DEFN CDCVNB    WQSE04           TH Tattoo Numbe
     C           *LIKE     DEFN CDB0DT    WQSE05           TH Kill Date
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           BOH Company Num
     C                     KFLD           WQSE02           BOH Buy Order N
     C                     KFLD           WQSE03           BOL Load Number
     C                     KFLD           WQSE04           TH Tattoo Numbe
     C                     KFLD           WQSE05           TH Kill Date
      * Setup key
     C                     Z-ADD$EHMNB    WQSE01           BOH Company Num
     C                     Z-ADD$EBNNB    WQSE02           BOH Buy Order N
     C                     Z-ADD$EBONB    WQSE03           BOL Load Number
     C                     Z-ADD$ECVNB    WQSE04           TH Tattoo Numbe
     C                     Z-ADD$EB0DT    WQSE05           TH Kill Date
      * Establish starting position
     C           KRSSE     SETLL@CDCPWY                    *
     C           KRSSE     READE@CDCPWY                  90*
      * Data record not found
     C   90                MOVEL'PRK0174' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  CDA0VA    WUMIPR           Addt Cst Ttl Us
     C           KRSSE     READE@CDCPWY                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Co Expense Total  RT - Company Kill Expense Rate  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DDP9NB    WQSF01           CE Company
     C           *LIKE     DEFN DDCSDT    WQSF02           CKE Kill Date
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           CE Company
     C                     KFLD           WQSF02           CKE Kill Date
      * Setup key
     C                     Z-ADD$EHMNB    WQSF01           CE Company
     C                     Z-ADD$EB0DT    WQSF02           CKE Kill Date
      * Establish starting position
     C           KRSSF     SETLL@DDCPSL                    *
     C           KRSSF     READE@DDCPSL                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0543' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     WUB7VA           Plant Expense H
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Clc UOM Extension     IF
      * Extension
      * CASE: PAR.Trans UOM USR is Flat
     C           DDL7ST    IFEQ 'FL'                       *IF
      * * * * * *   FLAT    * * * * *
      * FLAT
      * CASE: PAR.Trans UOM USR is Flat
     C           DDL7ST    IFEQ 'FL'                       *IF
     C           DDF5PR    MULT 1         WUCFPR           Trans Extended
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Head UOM
     C           DDL7ST    IFEQ 'DH'                       *IF
     C           DDL7ST    OREQ 'RH'
     C           DDL7ST    OREQ 'YH'
     C           DDL7ST    OREQ 'CH'
     C           DDL7ST    OREQ 'KH'
     C           DDL7ST    OREQ 'NH'
     C           DDL7ST    OREQ 'DY'
     C           DDL7ST    OREQ 'RX'
     C           DDL7ST    OREQ 'HM'
     C           DDL7ST    OREQ 'DE'
      * * * * * *    HEAD   * * * * *
      * HEAD
      * CASE: PAR.Trans UOM USR is Received Head
     C           DDL7ST    IFEQ 'RH'                       *IF
     C           $ECWNB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Received Hd less Yard Dd
     C           DDL7ST    IFEQ 'RX'                       *IF
     C           $ECWNB    SUB  $EFCNB    WUF6NB           Net Head Usr
     C           WUF6NB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Killed Head
     C           DDL7ST    IFEQ 'KH'                       *IF
     C           $EFENB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Condemned Head
     C           DDL7ST    IFEQ 'CH'                       *IF
     C           $EFDNB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Yard Deads Head
     C           DDL7ST    IFEQ 'YH'                       *IF
     C           $EFCNB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA Head
     C           DDL7ST    IFEQ 'DH'                       *IF
     C           $ECXNB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Net Head
     C           DDL7ST    IFEQ 'NH'                       *IF
     C                     Z-ADD$ECWNB    WUF6NB           Net Head Usr
     C                     SUB  $EFCNB    WUF6NB           Net Head Usr
     C                     SUB  $EFDNB    WUF6NB           Net Head Usr
     C           WUF6NB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA Head + Yard Dead Head
     C           DDL7ST    IFEQ 'DY'                       *IF
     C           $ECXNB    ADD  $EFCNB    WUF6NB           Net Head Usr
     C           WUF6NB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is DOA HD + Yard Dead + EUT
     C           DDL7ST    IFEQ 'DE'                       *IF
     C           $ECXNB    ADD  $EFCNB    WUF6NB           Net Head Usr
     C                     ADD  $EEDDT    WUF6NB           Net Head Usr
     C           WUF6NB    MULT DDF5PR    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Received Head /100 Miles
     C           DDL7ST    IFEQ 'HM'                       *IF
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (x1 * x2 * (x3/x4))
      * x1    : PAR.PSM Miles to Company
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.TH Head Killed
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x4    : CON.100
     C           0         MULT $EFENB    W0WA01           *Synon (15,2) w
     C           DDF5PR    DIV  100       W0WB02    H      *Synon (15,5) w
     C           W0WA01    MULT W0WB02    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WUCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Weight UOM
     C           DDL7ST    IFEQ 'CW'                       *IF
     C           DDL7ST    OREQ 'LW'
     C           DDL7ST    OREQ 'NL'
     C           DDL7ST    OREQ 'SW'
     C           DDL7ST    OREQ 'LX'
     C           DDL7ST    OREQ 'SX'
      * * * * * *    WEIGHT   * * * * *
      * WEIGHT
      * CASE: PAR.Trans UOM USR is Live Hundred Weight
     C           DDL7ST    IFEQ 'LW'                       *IF
      * Live hundred wgt
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Live Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $ECYNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT DDF5PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is LW less Yard Dead Wgt
     C           DDL7ST    IFEQ 'LX'                       *IF
      *  Calc wgt of yard dead based on Th avg live wgt
     C           $EF7NB    MULT $EFCNB    WUCCNB           Yard dead weigh
      *   Subtract Yard Dead wgt from Live Wgt
     C           $ECYNB    SUB  WUCCNB    WUOONB           Live Weight
      * Live hundred wgt less Yd
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Live Weight           USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUOONB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT DDF5PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Carcass Hundred Weight
     C           DDL7ST    IFEQ 'CW'                       *IF
      * Carcass Hundred Wgt
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $EE0NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT DDF5PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Net Live Weight
     C           DDL7ST    IFEQ 'NL'                       *IF
     C                     Z-ADD$ECWNB    WUF6NB           Net Head Usr
     C                     SUB  $EFCNB    WUF6NB           Net Head Usr
     C                     SUB  $EFDNB    WUF6NB           Net Head Usr
      * * Insert avg live weight
     C           WUF6NB    MULT $EF7NB    WUVBNB           Net Live Weight
      * Net Live Weight
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Net Live Weight Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUVBNB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT DDF5PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Shipped Weight - Doa's
     C           DDL7ST    IFEQ 'SW'                       *IF
      *   Calc Avg shipped wgt, then calc wgt of DOA'S
      * This rule was defined on 01/14/97
      * The Calculations for Avg Shipped Weights are
      * Head Received should be the live hogs that walk across the scale
      * Doa's should be the hogs that died either after we collected
      *       or before we weighed them
      * Avg Shipped Weight : Shipped Weight /(Head Received + Doa's)
     C           $ECWNB    ADD  $ECXNB    WUEXNB           Hd Cnt Org Ship
      * CASE: WRK.Hd Cnt Org Ship Usr is *Zeros
     C           WUEXNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUY9NB           Avg Weight USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           *ZERO     DIV  WUEXNB    WUY9NB           Avg Weight USR
     C                     END                             *FI
     C           WUY9NB    MULT $ECXNB    WUEVNB           Doa's Avg Weigh
      *   Subtract doa's from Shipped Wgt
     C           *ZERO     SUB  WUEVNB    WUZ4NB           Ship Wgt Tot Us
      * Shipped Weight Total Ext
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Ship Wgt Tot Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUZ4NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT DDF5PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is SW - Doa's WT - Yrd Dd WT
     C           DDL7ST    IFEQ 'SX'                       *IF
      *   Calc Avg shipped wgt, then calc wgt of DOA'S and Yard Deads
      * This rule was defined on 01/14/97
      * The Calculations for Avg Shipped Weights are
      * Head Received should be the live hogs that walk across the scale
      * Doa's should be the hogs that died either after we collected
      *       or before we weighed them
      * Avg Shipped Weight : Shipped Weight /(Head Received + Doa's)
     C           $ECWNB    ADD  $ECXNB    WUEXNB           Hd Cnt Org Ship
      * CASE: WRK.Hd Cnt Org Ship Usr is *Zeros
     C           WUEXNB    IFEQ 0                          *IF
     C                     Z-ADD*ZERO     WUY9NB           Avg Weight USR
     C                     ELSE
      * CASE: *OTHERWISE
     C           *ZERO     DIV  WUEXNB    WUY9NB           Avg Weight USR
     C                     END                             *FI
     C           WUY9NB    MULT $EFCNB    WUCCNB           Yard dead weigh
     C           WUY9NB    MULT $ECXNB    WUEVNB           Doa's Avg Weigh
      *   Subtract Doa's and Subtract Yard Dead wgt from Shipped Wgt
     C           *ZERO     SUB  WUEVNB    WUZ4NB           Ship Wgt Tot Us
     C                     SUB  WUCCNB    WUZ4NB           Ship Wgt Tot Us
      * Shipped wgt less Yd
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Ship Wgt Tot Usr
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUZ4NB    DIV  100       W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT DDF5PR    W0WD00    H      *Synon (17,7) w
     C                     Z-ADDW0WD00    WUCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Value UOM
     C           DDL7ST    IFEQ 'GV'                       *IF
     C           DDL7ST    OREQ 'BD'
      * * * * * *    VALUE    * * * * *
      * VALUE
      * CASE: PAR.Trans UOM USR is Gross Hundred Value
     C           DDL7ST    IFEQ 'GV'                       *IF
      * Gross Hundred Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Payment Gross
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUMHPR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT DDF5PR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Carcass Hundred Weight
     C           DDL7ST    IFEQ 'CW'                       *IF
      * Carcass Hundred Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.TH Hot Wgt
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           $EE0NB    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT DDF5PR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Base Market Dollars
     C           DDL7ST    IFEQ 'BD'                       *IF
      * Clc Base Mkt Dollars  XF - STR Unit of Measure Calc  * 
     C                     CALL 'PKBSE01'              90  Clc Base Mkt Do
     C                     PARM *BLANK    W0RTN   7
     C                     PARM DDP9NB    WQ0021  30       BOH Company Num
     C                     PARM *ZERO     WQ0022  70       TH Purchase Dat
     C                     PARM $ECYNB    WQ0023  71       TH Live Wgt
     C                     PARM '*ZERO'   WQ0024  5        DED D/A Code
     C           WUCSPR    PARM *ZERO     WQ0025  92       Base Mkt Prc Am
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKBSE01' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.Base Mkt Prc Amt Tot USR GE WRK.Zero USR
     C           WUCSPR    IFGE WUE9NB                     *IF
      * Base Market Dollars
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : WRK.Base Mkt Prc Amt Tot USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.Trans Unit Amt Usr
     C           WUCSPR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT DDF5PR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WUCFPR           Trans Extended
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     WUCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Trans UOM USR is Percent UOM
     C           DDL7ST    IFEQ *BLANK                     *IF
      * * * * * *    PERCENT   * * * * *
      * PERCENT
      * CASE: PAR.Trans UOM USR is Percent of Gross Value
     C           DDL7ST    IFEQ *BLANK                     *IF
      * Percent of Gross Value
      * PAR.Trans Extended Amt Usr =
      *    *COMPUTE (((x1 / x2) * x3))
      * x1    : PAR.Trans Unit Amt Usr
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CON.100
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x3    : PAR.TH Payment Gross
     C           DDF5PR    DIV  100       W0WA01    H      *Synon (15,2) w
     C           W0WA01    MULT WUMHPR    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    WUCFPR           Trans Extended
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  WUCFPR    WUB7VA           Plant Expense H
     C           KRSSF     READE@DDCPSL                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Producer Name     RT - Producer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           ACABCD           PD Producer Cod
      * Setup key
     C                     MOVEL$FABCD    ACABCD           PD Producer Cod
      * Establish starting position
     C           KRSSG     CHAIN@ACREAI              90    *
      * Data record not found
     C   90                MOVEL'PRK0009' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELACAGTX    $FC4TX           PD Name
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modifications and Comments
      *================================================================
      * E10339 JJH 05/16/17 - Hog Procurement Performance Modifications
      * - Replace I TH Source Code with TH Source Code-X18 USR
      * - Add *Arrays PARM Prt Prcrmnt Prfm Rpt to pass in parms
      * - Substring TH Source Code-X18 USR into 6 Source Codes
      * - Change Record Selection processing for Source Code
      * - Remove TH Source Code from 1st Page Format
      * - Remove SR Description from 1st Page Format
      * - Add TH Source Code-1 USR through TH Source Code-6 USR to
      *   First Page Format
      * H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Num
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Additional Cost and Gross Amount
      *================================================================
      * Accum the Expenses paid by Seaboard as the addt'l costs   (HPE140
     C                     Z-ADD*ZERO     WUMIPR           Addt Cst Ttl Us
      * Rtv Ded/Add Seaboards RT - Tattoo Ded/Add  * 
     C                     EXSR SERVGN
      * Gross
     C                     Z-ADDA1CBPR    WUMHPR           Payment Total U
     C                     ADD  WUMIPR    WUMHPR           Payment Total U
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Payment Type = Carcass
      *================================================================
      * Carcass Totals
      * Avg live wgt
      * CASE: CUR.Head Received 1 SUM is Not 0
     C           $GWWNB    IFNE *ZERO                      *IF
     C           $GWSNB    DIV  $GWWNB    $GOVNB    H      Avg Live Wgt Us
     C                     END                             *FI
      * Avg hot wgt
      * CASE: CUR.Head Killed 1 SUM is Not 0
     C           $GWUNB    IFNE *ZERO                      *IF
     C           $GWTNB    DIV  $GWUNB    $GQFNB    H      Avg Hot Wgt
     C                     END                             *FI
      * Avg Backf based on hot wgt of carcasses having backfat
      * CASE: CUR.Hot Weight 3 SUM NE WRK.Zero USR
     C           $GXBNB    IFNE WUE9NB                     *IF
     C           $GBSVA    DIV  $GXBNB    $GP8NB           Avg Backfat
     C                     END                             *FI
      * Avg Loin eye based on hot wgt of carcasses having loin eye
      * CASE: CUR.Hot Weight 4 SUM NE WRK.Zero USR
     C           $GXCNB    IFNE WUE9NB                     *IF
     C           $GBTVA    DIV  $GXCNB    $GENPC           Avg Loin eye
     C                     END                             *FI
      * Avg Lean % based on hot wgt of carcasses having lean percent
      * CASE: CUR.Hot Weight 5 SUM NE WRK.Zero USR
     C           $GXDNB    IFNE WUE9NB                     *IF
     C           $GNTNB    DIV  $GXDNB    $GEOPC           Avg Lean Percen
     C                     END                             *FI
      * Per Live CWT
      * CASE: CUR.Live Weight 1 SUM NE WRK.Zero USR
     C           $GWSNB    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Gross Pay Amt 1 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GWSNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GDCVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GK1PR           Gross Pay Amt 1
      * Base Price /Live CWT
      * CUR.Base Price Live /CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Bse Mrkt Prc Amt 15.2 Sum
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GWSNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GEIVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GC3PR           Base Price Live
     C                     END                             *FI
      * Per Live Adj CWT   10/6/03
      * CASE: CUR.Live Weight Adj SUM NE WRK.Zero USR
     C           $GJYA1    IFNE WUE9NB                     *IF
      * Compute: Avg Actual Dress
      * CUR.Avg Actual Dress Yld  USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight Adj SUM
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $GWTNB    DIV  $GJYA1    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GESPC           Avg Actual Dres
     C                     END                             *FI
      * Per Carc CWT
      * CASE: CUR.Hot Weight 1 SUM NE WRK.Zero USR
     C           $GWTNB    IFNE WUE9NB                     *IF
      * Gross Price /Carc CWT
      * CUR.Gross Price /C CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GWTNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GDCVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GI3PR           Gross Price /C
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout value/cwtUSR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Cutout Value    SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GWTNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GFIPR    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GFGPR           Gross Cutout va
     C                     END                             *FI
      * Per Head CWT
      * CASE: CUR.Head Killed 1 SUM NE WRK.Zero USR
     C           $GWUNB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross margin per CWT  USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : CUR.Gross Cutout Value    SUM
      * -     : PGM.*Synon (17,7) work field
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Killed 1 SUM
     C           $GFIPR    SUB  $GDCVA    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $GWUNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GFHPR           Gross margin pe
      * Plant Expense /Head
      * CUR.Plant Expense per CWT USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Plant expense per/cwt SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Killed 1 SUM
     C           $GR5NB    DIV  $GWUNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GBUVA           Plant Expense p
     C                     END                             *FI
     C           $GFHPR    SUB  $GBUVA    $GBVVA           P/L per CWT
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Payment Type = Live
      *================================================================
      * Live Totals
      * Avg Live wgt
      * CASE: CUR.Head Received 2 SUM NE WRK.Zero USR
     C           $GQJNB    IFNE WUE9NB                     *IF
     C           $GQLNB    DIV  $GQJNB    $GQMNB    H      Avg Live Wgt 2
     C                     END                             *FI
      * Avg Hot wgt
      * CASE: CUR.Head Killed 3 SUM NE WRK.Zero USR
     C           $GWVNB    IFNE WUE9NB                     *IF
     C           $GQKNB    DIV  $GWVNB    $GQNNB    H      Avg Hot Wgt 2 U
     C                     END                             *FI
      * Avg Backf based on hot wgt of carcasses having backfat
      * CASE: CUR.Hot Weight 6 SUM NE WRK.Zero USR
     C           $GXENB    IFNE WUE9NB                     *IF
     C           $GBXVA    DIV  $GXENB    $GQONB           Avg Backfat 2 U
     C                     END                             *FI
      * Avg Loin eye based on hot wgt of carcasses having loin eye
      * CASE: CUR.Hot Weight 7 SUM NE WRK.Zero USR
     C           $GXFNB    IFNE WUE9NB                     *IF
     C           $GBYVA    DIV  $GXFNB    $GEUPC           Avg Loin eye 2
     C                     END                             *FI
      * Avg Lean % based on hot wgt of carcasses having lean percent
      * CASE: CUR.Hot Weight 8 SUM NE WRK.Zero USR
     C           $GXGNB    IFNE WUE9NB                     *IF
     C           $GBZVA    DIV  $GXGNB    $GEVPC           Avg Lean Percen
     C                     END                             *FI
      * Per Carc CWT
      * CASE: CUR.Hot Weight 2 SUM NE WRK.Zero USR
     C           $GQKNB    IFNE WUE9NB                     *IF
      * Gross Price /Carc CWT
      * CUR.Gross Price /C CWT 2 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 2 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GQKNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GDDVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GI4PR           Gross Price /C
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout Vl Cwt 2 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Cutout Value 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GQKNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GFOPR    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GFLPR           Gross Cutout Vl
     C                     END                             *FI
      * Per Live CWT
      * CASE: CUR.Live Weight 2 SUM NE WRK.Zero USR
     C           $GQLNB    IFNE WUE9NB                     *IF
      * Compute: Avg Actual Dress
      * CUR.Avg Actual DressYld 2 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight 2 SUM
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $GQKNB    DIV  $GQLNB    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $GETPC           Avg Actual Dres
      * Gross Price /Live CWT
      * CUR.Gross Pay Amt 2 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 2 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GQLNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GDDVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GK2PR           Gross Pay Amt 2
      * Base Price /Live CWT
      * CUR.Base Price live/CWT 2 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Bse Mrkt Prc 2 SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $GQLNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $GB0VA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $GFJPR           Base Price live
     C                     END                             *FI
      * Per Head
      * CASE: CUR.Head Killed 3 SUM NE WRK.Zero USR
     C           $GWVNB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross Margin /cwt 2 USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : CUR.Gross Cutout Value 2 SUM
      * -     : PGM.*Synon (17,7) work field
      * x1    : CUR.Gross Ttl 2 Sum 15/2
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Killed 3 SUM
     C           $GFOPR    SUB  $GDDVA    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $GWVNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GFMPR           Gross Margin /c
      * Plant Expense /Head
      * CUR.Plant Expense p/cwt 2 USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Plant expense p/cwt 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Killed 3 SUM
     C           $GB5VA    DIV  $GWVNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $GB8VA           Plant Expense p
     C                     END                             *FI
     C           $GFMPR    SUB  $GB8VA    $GB2VA           P/L per CWT 2
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Payment Type = Carcass
      *================================================================
      * Carcass Totals
      * Avg live wgt
      * CASE: CUR.Head Received 1 SUM NE WRK.Zero USR
     C           $HWWNB    IFNE WUE9NB                     *IF
     C           $HWSNB    DIV  $HWWNB    $HOVNB    H      Avg Live Wgt Us
     C                     END                             *FI
      * Avg hot wgt
      * CASE: CUR.Head Killed 1 SUM NE WRK.Zero USR
     C           $HWUNB    IFNE WUE9NB                     *IF
     C           $HWTNB    DIV  $HWUNB    $HQFNB    H      Avg Hot Wgt
     C                     END                             *FI
      * Avg Backf based on hot wgt of carcesses having backfat
      * CASE: CUR.Hot Weight 3 SUM NE WRK.Zero USR
     C           $HXBNB    IFNE WUE9NB                     *IF
     C           $HBSVA    DIV  $HXBNB    $HP8NB           Avg Backfat
     C                     END                             *FI
      * Avg loin eye based on hot wgt of carcasses having loin eye
      * CASE: CUR.Hot Weight 4 SUM NE WRK.Zero USR
     C           $HXCNB    IFNE WUE9NB                     *IF
     C           $HBTVA    DIV  $HXCNB    $HENPC           Avg Loin eye
     C                     END                             *FI
      * Avg Lean % based on hot wgt of carcasses having lean percent
      * CASE: CUR.Hot Weight 5 SUM NE WRK.Zero USR
     C           $HXDNB    IFNE WUE9NB                     *IF
     C           $HNTNB    DIV  $HXDNB    $HEOPC           Avg Lean Percen
     C                     END                             *FI
      * Per Live CWT
      * CASE: CUR.Live Weight 1 SUM NE WRK.Zero USR
     C           $HWSNB    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Gross Pay Amt 1 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HWSNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HDCVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HK1PR           Gross Pay Amt 1
      * Base Price /Live CWT
      * CUR.Base Price Live /CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Bse Mrkt Prc Amt 15.2 Sum
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HWSNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HEIVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HC3PR           Base Price Live
     C                     END                             *FI
      * Per Live Adj Cwt   10/6/03
      * CASE: CUR.Live Weight Adj SUM NE WRK.Zero USR
     C           $HJYA1    IFNE WUE9NB                     *IF
      * Compute: Avg Actual Dress
      * CUR.Avg Actual Dress Yld  USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight Adj SUM
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $HWTNB    DIV  $HJYA1    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $HESPC           Avg Actual Dres
     C                     END                             *FI
      * Per Carc CWT
      * CASE: CUR.Hot Weight 1 SUM NE WRK.Zero USR
     C           $HWTNB    IFNE WUE9NB                     *IF
      * Gross Price /Carc CWT
      * CUR.Gross Price /C CWT USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HWTNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HDCVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HI3PR           Gross Price /C
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout value/cwtUSR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Cutout Value    SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Hot Weight 1 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HWTNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HFIPR    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HFGPR           Gross Cutout va
     C                     END                             *FI
      * Per Head
      * CASE: CUR.Head Killed 1 SUM NE WRK.Zero USR
     C           $HWUNB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross margin per CWT  USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : CUR.Gross Cutout Value    SUM
      * -     : PGM.*Synon (17,7) work field
      * x1    : CUR.Gross Ttl 1 Sum 15/2
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Killed 1 SUM
     C           $HFIPR    SUB  $HDCVA    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $HWUNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HFHPR           Gross margin pe
      * Plant Expense /Head
      * CUR.Plant Expense per CWT USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Plant expense per/cwt SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Killed 1 SUM
     C           $HR5NB    DIV  $HWUNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HBUVA           Plant Expense p
     C                     END                             *FI
     C           $HFHPR    SUB  $HBUVA    $HBVVA           P/L per CWT
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Payment Type = Live
      *================================================================
      * Live Totals
      * Avg live wgt
      * CASE: CUR.Head Received 2 SUM NE WRK.Zero USR
     C           $HQJNB    IFNE WUE9NB                     *IF
     C           $HQLNB    DIV  $HQJNB    $HQMNB    H      Avg Live Wgt 2
     C                     END                             *FI
      * Avg hot wgt
      * CASE: CUR.Head Killed 3 SUM NE WRK.Zero USR
     C           $HWVNB    IFNE WUE9NB                     *IF
     C           $HQKNB    DIV  $HWVNB    $HQNNB    H      Avg Hot Wgt 2 U
     C                     END                             *FI
      * Avg Backf based on hot wgt of carcasses having backfat
      * CASE: CUR.Hot Weight 6 SUM NE WRK.Zero USR
     C           $HXENB    IFNE WUE9NB                     *IF
     C           $HBXVA    DIV  $HXENB    $HQONB           Avg Backfat 2 U
     C                     END                             *FI
      * Avg Loin eye based on hot wgt of carcasses having loin eye
      * CASE: CUR.Hot Weight 7 SUM NE WRK.Zero USR
     C           $HXFNB    IFNE WUE9NB                     *IF
     C           $HBYVA    DIV  $HXFNB    $HEUPC           Avg Loin eye 2
     C                     END                             *FI
      * Avg Lean % based on hot wgt of carcasses having lean percent
      * CASE: CUR.Hot Weight 8 SUM NE WRK.Zero USR
     C           $HXGNB    IFNE WUE9NB                     *IF
     C           $HBZVA    DIV  $HXGNB    $HEVPC           Avg Lean Percen
     C                     END                             *FI
      * Per Live CWT
      * CASE: CUR.Live Weight 2 SUM NE WRK.Zero USR
     C           $HQLNB    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Gross Pay Amt 2 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 2 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HQLNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HDDVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HK2PR           Gross Pay Amt 2
      * Base Price /Live CWT
      * CUR.Base Price live/CWT 2 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Bse Mrkt Prc 2 SUM
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Live Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HQLNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HB0VA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HFJPR           Base Price live
     C                     END                             *FI
      * Per Live Adj CWT 10/6/03
      * CASE: CUR.Live Weight Adj 2 SUM NE WRK.Zero USR
     C           $HJZA1    IFNE WUE9NB                     *IF
      * Compute: Avg Actual Dress
      * CUR.Avg Actual DressYld 2 USR =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Live Weight Adj 2 SUM
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           $HQKNB    DIV  $HJZA1    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $HETPC           Avg Actual Dres
     C                     END                             *FI
      * Per Carc CWT
      * CASE: CUR.Hot Weight 2 SUM NE WRK.Zero USR
     C           $HQKNB    IFNE WUE9NB                     *IF
      * Gross Price /Carc CWT
      * CUR.Gross Price /C CWT 2 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Ttl 2 Sum 15/2
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HQKNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HDDVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HI4PR           Gross Price /C
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout Vl Cwt 2 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : CUR.Gross Cutout Value 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Hot Weight 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           $HQKNB    DIV  100       W0WD01           *Synon (17,7) w
     C           $HFOPR    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HFLPR           Gross Cutout Vl
     C                     END                             *FI
      * Per Head
      * CASE: CUR.Head Killed 3 SUM NE WRK.Zero USR
     C           $HWVNB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross Margin /cwt 2 USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : CUR.Gross Cutout Value 2 SUM
      * -     : PGM.*Synon (17,7) work field
      * x1    : CUR.Gross Ttl 2 Sum 15/2
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Killed 3 SUM
     C           $HFOPR    SUB  $HDDVA    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $HWVNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HFMPR           Gross Margin /c
      * Plant Expense /Head
      * CUR.Plant Expense p/cwt 2 USR =
      *    *COMPUTE (x1 / x2)
      * x1    : CUR.Plant expense p/cwt 2 SUM
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Killed 3 SUM
     C           $HB5VA    DIV  $HWVNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HB8VA           Plant Expense p
     C                     END                             *FI
     C           $HFMPR    SUB  $HB8VA    $HB2VA           P/L per CWT 2
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Company totals
      *================================================================
      * Avg live wgt 4
      * CASE: CUR.Head Killed 4 Usr NE WRK.Zero USR
     C           $HGPNB    IFNE WUE9NB                     *IF
     C           WUGQNB    DIV  $HGPNB    $HZ8NB    H      Avg Live Wgt Us
     C                     END                             *FI
      * Avg hot wgt
      * CASE: CUR.Head Killed 4 Usr NE WRK.Zero USR
     C           $HGPNB    IFNE WUE9NB                     *IF
     C           WUHW4U    DIV  $HGPNB    $HAVHW    H      Avg Hot Weight
     C                     END                             *FI
      * Avg Backf based on hot wgt of carcesses having backfat
      * CASE: WRK.Hot Weight 9 Usr NE WRK.Zero USR
     C           WUHW09    IFNE WUE9NB                     *IF
     C           WUD8VA    DIV  WUHW09    $HAVF4           Avg BackFat 4 U
     C                     END                             *FI
      * Avg loin eye based on hot wgt of carcasses having loin eye
      * CASE: WRK.Hot Weight 10 Usr NE WRK.Zero USR
     C           WUHW10    IFNE WUE9NB                     *IF
     C           WUD9VA    DIV  WUHW10    $HGCPC           Avg Loin eye 4
     C                     END                             *FI
      * Avg Lean % based on hot wgt of carcasses having lean percent
      * CASE: WRK.Hot Weight 11 Usr NE WRK.Zero USR
     C           WUIFNB    IFNE WUE9NB                     *IF
     C           WULN4U    DIV  WUIFNB    $HGDPC           Avg Lean Percen
     C           WULN4U    DIV  WUIFNB    $HVKNB           Avg Lean % 5.2
     C                     END                             *FI
      * Per actual dress yield / gross per live cwt
      * CASE: WRK.Live Weight 4 Usr NE WRK.Zero USR
     C           WUGQNB    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Gross Pay Amt 4 Cwt Usr =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : WRK.Gross Ttl 4 Sum 15/2 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : WRK.Live Weight 4 Usr
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUGQNB    DIV  100       W0WD01           *Synon (17,7) w
     C           WUEAVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HMOPR           Gross Pay Amt 4
     C                     END                             *FI
      * Per actual dress yield  from Adj Live cwt    10/6/03
      * CASE: WRK.Live Weight Adj 4 USR NE WRK.Zero USR
     C           WUJ0A1    IFNE WUE9NB                     *IF
      * Compute: Avg Actual Drs 4
      * CUR.Avg Actual Dress Yld 4 US =
      *    *COMPUTE ((x1 / x2) * x3)
      * x1    : WRK.Hot Weight 4 Usr
      * /     : PGM.*Synon (17,7) work field *
      * x2    : WRK.Live Weight Adj 4 USR
      * *     : PGM.*Synon (15,2) work field *
      * x3    : CON.100
     C           WUHW4U    DIV  WUJ0A1    W0WD01           *Synon (17,7) w
     C           W0WD01    MULT 100       W0WA00           *Synon (15,2) w
     C                     Z-ADDW0WA00    $HGEPC           Avg Actual Dres
     C                     END                             *FI
      * Base Per Live Cwt
      * CASE: WRK.Live Weight 4 Usr NE WRK.Zero USR
     C           WUGQNB    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Market amt / CWT      USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : WRK.Bse Mrkt Prc Am2 15.2 Sum
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : WRK.Live Weight 4 Usr
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUGQNB    DIV  100       W0WD01           *Synon (17,7) w
     C           WUDFVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HIDPR           Market amt / CW
     C                     END                             *FI
      * Gross Per Carcass Cwt
      * CASE: WRK.Hot Weight 4 Usr NE WRK.Zero USR
     C           WUHW4U    IFNE WUE9NB                     *IF
      * Gross Price /Live CWT
      * CUR.Gross Price /C CWT 4 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : WRK.Gross Ttl 4 Sum 15/2 USR
      * /     : PGM.*Synon (15,2) work field *Rounded
      * x2    : WRK.Hot Weight 4 Usr
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUHW4U    DIV  100       W0WD01           *Synon (17,7) w
     C           WUEAVA    DIV  W0WD01    W0WA00    H      *Synon (15,2) w
     C                     Z-ADDW0WA00    $HMPPR           Gross Price /C
     C                     END                             *FI
      * Gross Cutout Value Per Carc CWT
      * CASE: WRK.Hot Weight 4 Usr NE WRK.Zero USR
     C           WUHW4U    IFNE WUE9NB                     *IF
      * Gross Cutout /Carc CWT
      * CUR.Gross Cutout Vl Cwt 4 USR =
      *    *COMPUTE (x1 / (x2 / x3))
      * x1    : WRK.Gross Cutout Value 4 Usr
      * /     : PGM.*Synon (17,7) work field *
      * x2    : WRK.Hot Weight 4 Usr
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CON.100
     C           WUHW4U    DIV  100       W0WD01           *Synon (17,7) w
     C           WUEBVA    DIV  W0WD01    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HMQPR           Gross Cutout Vl
     C                     END                             *FI
      * Gross Margin Per head and Plant expense
      * CASE: CUR.Head Killed 4 Usr NE WRK.Zero USR
     C           $HGPNB    IFNE WUE9NB                     *IF
      * Gross Margin /Head
      * CUR.Gross margin per CWT 4USR =
      *    *COMPUTE ((x2 - x1) / x3)
      * x2    : WRK.Gross Cutout Value 4 Usr
      * -     : PGM.*Synon (17,7) work field
      * x1    : WRK.Gross Ttl 4 Sum 15/2 USR
      * /     : PGM.*Synon (17,7) work field *
      * x3    : CUR.Head Killed 4 Usr
     C           WUEBVA    SUB  WUEAVA    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  $HGPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HMRPR           Gross margin pe
      * Plant Expense /Head
      * CUR.Plant Expense per CWT 4us =
      *    *COMPUTE (x1 / x2)
      * x1    : WRK.Plant expense per/cwt 4US
      * /     : PGM.*Synon (17,7) work field *
      * x2    : CUR.Head Killed 4 Usr
     C           WUEDVA    DIV  $HGPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $HECVA           Plant Expense p
     C                     END                             *FI
     C           $HMRPR    SUB  $HECVA    $HEEVA           P/L per CWT 4
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    A1HMNB           BOH Company Num
     C                     MOVEL*LOVAL    A1ACCD           HB Buyer Code
     C                     MOVEL*LOVAL    A1ABCD           PD Producer Cod
     C                     MOVEL*LOVAL    A1J9ST           TH Payment Type
     C                     MOVEL*LOVAL    A1B0DT           TH Kill Date
     C                     MOVEL*LOVAL    A1CVNB           TH Tattoo Numbe
      * Define work field Invalid Y/N USR
     C                     MOVEL*BLANK    WUG3ST  1
      * Define work field Blank USR
     C                     MOVEL*BLANK    WUCRTX 80
      * Define work field PD Name
     C                     MOVEL*BLANK    WUAGTX 40
      * Define work field BOH Market Date Method
     C                     MOVEL*BLANK    WUJ5TX  3
      * Define work field OMS Error Return Usr
     C                     MOVEL*BLANK    WUIPTX  5
      * Define work field Gross Cutout Hold     USR
     C                     Z-ADD*ZERO     WUB6VA  92
      * Define work field Plant Expense Hold    USR
     C                     Z-ADD*ZERO     WUB7VA  92
      * Define work field Addt Cst Ttl Usr
     C                     Z-ADD*ZERO     WUMIPR  72
      * Define work field Payment Total Usr
     C                     Z-ADD*ZERO     WUMHPR  72
      * Define work field Zero USR
     C                     Z-ADD*ZERO     WUE9NB  10
      * Define work field Trans Extended Amt Usr
     C                     Z-ADD*ZERO     WUCFPR  72
      * Define work field Net Head Usr
     C                     Z-ADD*ZERO     WUF6NB  50
      * Define work field Yard dead weight      USR
     C                     Z-ADD*ZERO     WUCCNB  71
      * Define work field Live Weight           USR
     C                     Z-ADD*ZERO     WUOONB  71
      * Define work field Net Live Weight Usr
     C                     Z-ADD*ZERO     WUVBNB  71
      * Define work field Hd Cnt Org Ship Usr
     C                     Z-ADD*ZERO     WUEXNB  50
      * Define work field Avg Weight USR
     C                     Z-ADD*ZERO     WUY9NB  51
      * Define work field Doa's Avg Weight Usr
     C                     Z-ADD*ZERO     WUEVNB  71
      * Define work field Ship Wgt Tot Usr
     C                     Z-ADD*ZERO     WUZ4NB  71
      * Define work field Base Mkt Prc Amt Tot USR
     C                     Z-ADD*ZERO     WUCSPR  92
      * Define work field Live Weight 4 Usr
     C                     Z-ADD*ZERO     WUGQNB 111
      * Define work field Hot Weight 4 Usr
     C                     Z-ADD*ZERO     WUHW4U 111
      * Define work field Live Weight Adj 4 USR
     C                     Z-ADD*ZERO     WUJ0A1 111
      * Define work field Hot Weight 9 Usr
     C                     Z-ADD*ZERO     WUHW09 111
      * Define work field Hot Weight 10 Usr
     C                     Z-ADD*ZERO     WUHW10 111
      * Define work field Hot Weight 11 Usr
     C                     Z-ADD*ZERO     WUIFNB 111
      * Define work field BackFat * Weight 4 Usr
     C                     Z-ADD*ZERO     WUD8VA 112
      * Define work field Loin eye * wgt 4 usr
     C                     Z-ADD*ZERO     WUD9VA 152
      * Define work field Lean % * Wt 4 Usr
     C                     Z-ADD*ZERO     WULN4U 152
      * Define work field Bse Mrkt Prc Am2 15.2 Sum
     C                     Z-ADD*ZERO     WUDFVA 152
      * Define work field Gross Ttl 4 Sum 15/2 USR
     C                     Z-ADD*ZERO     WUEAVA 152
      * Define work field Gross Cutout Value 4 Usr
     C                     Z-ADD*ZERO     WUEBVA 152
      * Define work field Plant expense per/cwt 4US
     C                     Z-ADD*ZERO     WUEDVA 152
      * Define work field TOT Hot Wgt Bk 3 Usr
     C                     Z-ADD*ZERO     WUKEST  81
      * Define work field Tot Hot Wgt Car Bk3 Usr
     C                     Z-ADD*ZERO     WUPGNB  81
      * Define work field TOT Head Rec Bk 3 Usr
     C                     Z-ADD*ZERO     WUPANB  70
      * Define work field TOT Head Kill Bk 3 Usr
     C                     Z-ADD*ZERO     WUO2NB  70
      * Define work field TOT Live Wgt Bk 3 Usr
     C                     Z-ADD*ZERO     WUO1NB  81
      * Define work field Tot Lean % Wgt BK 3 Usr
     C                     Z-ADD*ZERO     WUPDNB 152
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WA00 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WB02 155       *Synon (15,5) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field TH Source Code-1 USR
     C                     MOVEL*BLANK    YL0001  3
      * Define local work field TH Source Code-2 USR
     C                     MOVEL*BLANK    YL0002  3
      * Define local work field TH Source Code-3 USR
     C                     MOVEL*BLANK    YL0003  3
      * Define local work field TH Source Code-4 USR
     C                     MOVEL*BLANK    YL0004  3
      * Define local work field TH Source Code-5 USR
     C                     MOVEL*BLANK    YL0005  3
      * Define local work field TH Source Code-6 USR
     C                     MOVEL*BLANK    YL0006  3
      * Define local work field Pricing Date USR
     C                     Z-ADD*ZERO     YL0007  70
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Modifications and Comments
     C                     EXSR UASUBR                     Modifications a
      * HPE063 Frt Exp/Accruals
      * 2/26/96  HPE063   Allow the expense for freight to be paid
      *                   by either Seaboard(us) or the producer
      *                   Allow the system to process accruals thru
      *                   the General Ledger.
      * Mov ApplN to Co-PRINT US - STR User Source Functions  * 
     C***   MOVE USER SOURCE                      ***
     C                     MOVELP5EVTX    $ACMP
      * 10/6/03  Print Adj Yield instead of Actual Yield  per Jancie
      *    Calc totals from Adj Live Wgt a lieu Live Wgt
      * E10339 JJH 05/16/17 - Substring TH Source Code-X18 USR
     C                     Z-ADD3         YRSW00
     C                     Z-ADD1         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00018
     C           ZQ        ORGT 00018
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTP2DRT1:ZQ YL0001    P  90  TH Source Code-
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD3         YRSW00
     C                     Z-ADD4         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00018
     C           ZQ        ORGT 00018
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTP2DRT1:ZQ YL0002    P  90  TH Source Code-
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD3         YRSW00
     C                     Z-ADD7         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00018
     C           ZQ        ORGT 00018
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTP2DRT1:ZQ YL0003    P  90  TH Source Code-
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD3         YRSW00
     C                     Z-ADD10        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00018
     C           ZQ        ORGT 00018
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTP2DRT1:ZQ YL0004    P  90  TH Source Code-
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD3         YRSW00
     C                     Z-ADD13        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00018
     C           ZQ        ORGT 00018
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTP2DRT1:ZQ YL0005    P  90  TH Source Code-
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD3         YRSW00
     C                     Z-ADD16        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00018
     C           ZQ        ORGT 00018
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTP2DRT1:ZQ YL0006    P  90  TH Source Code-
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Buyer/Producer
