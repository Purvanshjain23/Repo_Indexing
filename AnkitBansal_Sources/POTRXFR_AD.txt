// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POTRXFR
// ?Date: 14.08.2025 Time: 03:38:59
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?05/12/04 SLM PKTR01 Multi-Company - Order Header TRG Remove Co
//?                                    from Logical View
EXECUTE FUNCTION(Bld Mex Sales         RT) TYPE(RTVOBJ) FILE(POCFREP)           AC1659470;
PARAMETER(PAR.Export_Country_Code);
{
 //?USER: Initialize routine

 //?DOC:  2003 PERIOD OF INVESTIGATION
 DO;

 //?FROM DATE = 1020401
 //?TO DATE   = 1020930
 ENDDO;

 //?DOC:  2004 PERIOD OF INVESTIGATION
 DO;

 //?FROM DATE = 1010101
 //?TO DATE   = 1031231
 ENDDO;

 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?SEL:  Item Code
 CASE;

 // IF PAR.Export Country Code is Not Mexico
 IF PAR.Export_Country_Code <> 'MEX';

 CASE;

 // IF DB1.MI 6 Mo Sold to MEX is no
 IF DB1.MI_6_Mo_Sold_to_MEX = 'N';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Process Record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // LCL.MI Item Code = DB1.MI Item Code
 LCL.MI_Item_Code = DB1.MI_Item_Code;

 //?Export Country Code
 CASE;

 // IF PAR.Export Country Code is USA
 IF PAR.Export_Country_Code = 'USA';

 // LCL.Export Country Code = CON.*BLANK
 LCL.Export_Country_Code = *BLANK;

 //?Export Country Code
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Export Country Code = PAR.Export Country Code
 LCL.Export_Country_Code = PAR.Export_Country_Code;

 ENDIF;

 EXECUTE FUNCTION(Bld MEX Sales         RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1659471;
 PARAMETER(360);
 PARAMETER(LCL.Export_Country_Code);
 PARAMETER(LCL.MI_Item_Code);
 PARAMETER(1010101);
 PARAMETER(LCL.Record_Found_USR);
 PARAMETER(LCL.MI_Item_Code);
 {
  //?USER: Initialize routine

  // LCL.Actual Shipped Date = CON.1031231
  LCL.Actual_Shipped_Date = 1031231;

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

  //?USER: Processing if Data record not found

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  //?QUIT:  Actual Shipped Date GT LCL.Actual Shipped Date
  CASE;

  // IF DB1.Actual Shipped Date GT LCL.Actual Shipped Date
  IF DB1.Actual_Shipped_Date > LCL.Actual_Shipped_Date;

  QUIT;

  ENDIF;

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

  //?OMT:  Orders
  CASE;

  // IF DB1.Order Number is 201934
  IF DB1.Order_Number = 201934;

  // OR DB1.Order Number is 209447
  OR DB1.Order_Number = 209447;

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  ENDIF;

  //?Process Record
  CASE;

  // IF PGM.*Record selected is *YES
  IF PGM.*Record_selected = 'Y';

  //?MS Country Code
  CASE;

  // IF PAR.Export Country Code is Blank
  IF PAR.Export_Country_Code = *BLANK;

  // PAR.MS Country Code = CON.USA
  PAR.MS_Country_Code = 'USA';

  //?MS Country Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Country Code = DB1.Export Country Code
  PAR.MS_Country_Code = DB1.Export_Country_Code;

  ENDIF;

  // PAR.MS Item Code = DB1.Shipped Item Code
  PAR.MS_Item_Code = DB1.Shipped_Item_Code;

  //?MEX:  Replace 11410 and 11810 with 11610
  CASE;

  // IF PAR.Export Country Code is Mexico
  IF PAR.Export_Country_Code = 'MEX';

  CASE;

  // IF DB1.Shipped Item Code is 11410
  IF DB1.Shipped_Item_Code = 11410;

  // OR DB1.Shipped Item Code is 11810
  OR DB1.Shipped_Item_Code = 11810;

  // PAR.MS Item Code = CON.11610
  PAR.MS_Item_Code = 11610;

  ENDIF;

  ENDIF;

  // PAR.MS Invoice Number = DB1.Invoice Number
  PAR.MS_Invoice_Number = DB1.Invoice_Number;

  EXECUTE FUNCTION(Rtv Mex Item Info     RT) TYPE(RTVOBJ) FILE(POCFREP)           AC1659472;
  PARAMETER(PAR.MS_Item_Code);
  PARAMETER(PAR.MS_Item_Description);
  PARAMETER(PAR.MS_Tariff_Class);
  PARAMETER(PAR.MS_Packing_Material_Exp);
  PARAMETER(PAR.MS_Packing_Labor_Exp);
  PARAMETER(LCL.MI_6_Mo_Sold_to_MEX);
  PARAMETER(LCL.MI_USA_Claim_Adj);
  PARAMETER(LCL.MI_MEX_Claim_Adj);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?MS MEX Comparison Item Code
  CASE;

  // IF PAR.Shipped Item Code EQ PAR.MI Item Code
  IF PAR.Shipped_Item_Code = PAR.MI_Item_Code;

  // PAR.MS MEX Comparison Item = CON.*ZERO
  PAR.MS_MEX_Comparison_Item = *ZERO;

  //?MS MEX Comparison Item Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS MEX Comparison Item = PAR.MI Item Code
  PAR.MS_MEX_Comparison_Item = PAR.MI_Item_Code;

  ENDIF;

  // PAR.MS Invoice Date = DB1.Invoice Date
  PAR.MS_Invoice_Date = DB1.Invoice_Date;

  // PAR.MS Shipment Date = DB1.Actual Shipped Date
  PAR.MS_Shipment_Date = DB1.Actual_Shipped_Date;

  // PAR.MS Terms of Sale = DB1.Shipping Method
  PAR.MS_Terms_of_Sale = DB1.Shipping_Method;

  EXECUTE FUNCTION(Rtv Days to Payment   RT) TYPE(RTVOBJ) FILE(ARBDCPP)           AC1659477;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(LCL.Days_to_Pay);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.MS Payment Date = PAR.MS Invoice Date + LCL.Days to Pay *DAYS
  PAR.MS_Payment_Date = DATEINCR(PAR.MS_Invoice_Date LCL.Days_to_Pay 'DY' 1111111 'NONE'
  'N' 1);

  //?MS Destination
  CASE;

  // IF DB1.Shipping Method is Prepaid
  IF DB1.Shipping_Method = 'PR'/'PT';

  // PAR.MS Destination = CONCAT(DB1.Ship To City,DB1.Ship To State Code,CON.1)
  PAR.MS_Destination = DB1.Ship_To_City + DB1.Ship_To_State_Code (1);

  //?MS Destination
  // IF DB1.Shipping Method is Collect
  IF DB1.Shipping_Method = 'CR'/'CT';

  // PAR.MS Destination = CON.Guymon OK
  PAR.MS_Destination = 'Guymon OK';

  ENDIF;

  // PAR.MS Bill To Name = DB1.A/R Customer Name
  PAR.MS_Bill_To_Name = DB1.AR_Customer_Name;

  // PAR.MS Related Client = CON.1
  PAR.MS_Related_Client = 1;

  // PAR.MS Invoice Amount = DB1.Extended Amount
  PAR.MS_Invoice_Amount = DB1.Extended_Amount;

  // PAR.MS Weight Billed = DB1.Weight Billed
  PAR.MS_Weight_Billed = DB1.Weight_Billed;

  // PAR.MS Exchange Rate = CON.NA
  PAR.MS_Exchange_Rate = 'NA';

  // PAR.MS Conversion Factor = CON.NA
  PAR.MS_Conversion_Factor = 'NA';

  // PAR.MS Unit Price = DB1.Unit Price
  PAR.MS_Unit_Price = DB1.Unit_Price;

  EXECUTE FUNCTION(Rtv Frt Charge MEX    RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1659560;
  PARAMETER(DB1.Load_ID);
  PARAMETER('INLAND');
  PARAMETER(LCL.LFC_Amount);
  PARAMETER(DB1.Weight_Billed);
  {
   //?USER: Initialize routine

   //?05/12/04 SLM PKTR01 Multi-Company - Function was changed
   //?                                    to remove Company RST or Pos
   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Order Weight Total = PAR.Order Weight Total + DB1.Order Weight Total
   PAR.Order_Weight_Total = PAR.Order_Weight_Total + DB1.Order_Weight_Total;

   //?USER: Exit processing

   EXECUTE FUNCTION(Rtv Charge Amount     RT) TYPE(RTVOBJ) FILE(POBCCPP)           AC1659529;
   PARAMETER(DB1.Load_ID);
   PARAMETER(PAR.FC_Code);
   PARAMETER(LCL.LFC_Amount);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   CASE;

   // IF PAR.Order Weight Total is Greater than zero
   IF PAR.Order_Weight_Total > *ZERO;

   // LCL.Carrier Rate = LCL.LFC Amount / PAR.Order Weight Total *Rounded
   LCL.Carrier_Rate = LCL.LFC_Amount / PAR.Order_Weight_Total 'H';

   // PAR.Amount Paid = LCL.Carrier Rate * PAR.Weight Billed *Rounded
   PAR.Amount_Paid = LCL.Carrier_Rate * PAR.Weight_Billed 'H';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Amount Paid = CON.*ZERO
   PAR.Amount_Paid = *ZERO;

   ENDIF;

  }

  // LCL.Actual Freight Amount = DB1.Actual Freight Amount + LCL.LFC Amount
  LCL.Actual_Freight_Amount = DB1.Actual_Freight_Amount + LCL.LFC_Amount;

  //?MS Rebates, Credits, etc. (Claim Adjustment)
  CASE;

  // IF PAR.MS Country Code is Mexico
  IF PAR.MS_Country_Code = 'MEX';

  // PAR.MS Rebates = LCL.MI MEX Claim Adj
  PAR.MS_Rebates = LCL.MI_MEX_Claim_Adj;

  //?MS Rebates, Credits, etc. (Claim Adjustment)
  // IF PAR.MS Country Code is USA
  IF PAR.MS_Country_Code = 'USA';

  // PAR.MS Rebates = LCL.MI USA Claim Adj
  PAR.MS_Rebates = LCL.MI_USA_Claim_Adj;

  ENDIF;

  //?MS USA Freight, MS Ocean Freight, MS Credit Exp
  CASE;

  // IF PAR.MS Weight Billed is Greater than zero
  IF PAR.MS_Weight_Billed > *ZERO;

  // PAR.MS USA Freight Exp = LCL.Actual Freight Amount / PAR.MS Weight Billed *Rounded
  PAR.MS_USA_Freight_Exp = LCL.Actual_Freight_Amount / PAR.MS_Weight_Billed 'H';

  // LCL.Days = PAR.MS Payment Date - PAR.MS Invoice Date *DAYS
  LCL.Days = DURATION(PAR.MS_Payment_Date PAR.MS_Invoice_Date 'DY' 1111111 'NONE' 'N' 1);

  CASE;

  // IF LCL.Days is GT Zero
  IF LCL.Days > *ZERO;

  //?Interest Rate = 3.42% for 2003
  //?Interest Rate = 2.768% for 2004
  // MS Credit Exp (MEX2004)
  PAR.MS_Credit_Exp = ( ( ( PAR.MS_Invoice_Amount * .02768 'H' ) / 365 'H' ) * LCL.Days
  'H' ) / PAR.MS_Weight_Billed 'H';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Credit Exp = CON.*ZERO
  PAR.MS_Credit_Exp = *ZERO;

  ENDIF;

  //?MS Commission Exp
  CASE;

  // IF PAR.Export Country Code is Japan
  IF PAR.Export_Country_Code = 'JPN';

  // MS Commission Exp
  PAR.MS_Commission_Exp = ( .005 * DB1.FOB_Gross_Amount 'H' ) / PAR.MS_Weight_Billed 'H';

  //?MS Commission Exp
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Commision Exp = CON.*ZERO
  PAR.MS_Commission_Exp = *ZERO;

  ENDIF;

  ENDIF;

  // PAR.MS Garranties Exp = CON.NA
  PAR.MS_Garranties_Exp = 'NA';

  EXECUTE FUNCTION(Rtv Labor Cost        RT) TYPE(RTVOBJ) FILE(POCIREP)           AC1659549;
  PARAMETER(DB1.U_M_Ordered);
  PARAMETER(PAR.MS_Handling_Exp);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.MS USA Insurance Exp = CON.NA
  PAR.MS_USA_Insurance_Exp = 'NA';

  // PAR.MS MEX Freight Exp = CON.NA
  PAR.MS_MEX_Freight_Exp = 'NA';

  // PAR.MS MEX Insurance Exp = CON.NA
  PAR.MS_MEX_Insurance_Exp = 'NA';

  CASE;

  // IF PAR.Export Country Code is Mexico
  IF PAR.Export_Country_Code = 'MEX';

  // MS Total Adj
  PAR.MS_Total_Adj = ( ( ( ( PAR.MS_Rebates + PAR.MS_Packing_Labor_Exp )
  + PAR.MS_Packing_Material_Exp ) + PAR.MS_Credit_Exp ) + PAR.MS_Handling_Exp )
  + PAR.MS_USA_Freight_Exp;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // MS Total Adj
  PAR.MS_Total_Adj = ( ( ( ( ( ( ( ( ( ( PAR.MS_Rebates + PAR.MS_Packing_Labor_Exp )
  + PAR.MS_Packing_Material_Exp ) + PAR.MS_Credit_Exp ) + PAR.MS_Handling_Exp )
  + PAR.MS_USA_Freight_Exp ) + PAR.MS_Commission_Exp ) + PAR.MS_Quality_Adj )
  + PAR.MS_Taxes_Adj ) + PAR.MS_Physical_Adj ) + PAR.MS_Other_Adj )
  + PAR.MS_USA_Ocean_Frt_Exp;

  ENDIF;

  // PAR.MS Total Adj USD = PAR.MS Total Adj
  PAR.MS_Total_Adj_USD = PAR.MS_Total_Adj;

  // PAR.MS Net Price USD = PAR.MS Unit Price - PAR.MS Total Adj
  PAR.MS_Net_Price_USD = PAR.MS_Unit_Price - PAR.MS_Total_Adj;

  // PAR.MS Exchange Rate USD = CON.NA
  PAR.MS_Exchange_Rate_USD = 'NA';

  EXECUTE FUNCTION(Rtv Consignee/Consgnr RT) TYPE(RTVOBJ) FILE(PDMRREP)           AC1633380;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER('H');
  PARAMETER(LCL.ED_Consignor_Name);
  PARAMETER(WRK.ED_Consignor_Addr_1);
  PARAMETER(WRK.ED_Consignor_Addr_2);
  PARAMETER(WRK.ED_Consignor_Addr_3);
  PARAMETER(WRK.ED_Consignee_Name);
  PARAMETER(WRK.ED_Consignee_Addr_1);
  PARAMETER(WRK.ED_Consignee_Addr_2);
  PARAMETER(WRK.ED_Consignee_Addr_3);
  PARAMETER(WRK.ED_Consignee_Addr_4);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  // LCL.Text USR 8 = SUBSTRING(LCL.ED Consignor Name,CON.1,CON.8)
  LCL.Text_USR_8 = SUBSTRING(LCL.ED_Consignor_Name:1:8);

  //?Direct/Indirect
  CASE;

  // IF LCL.Text USR 8 is Seaboard
  IF LCL.Text_USR_8 = 'Seaboard';

  // PAR.MS Direct/Indirect = CND.Direct
  PAR.MS_Direct_Indirect = 1;

  //?Direct/Indirect
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Direct/Indirect = CND.Indirect
  PAR.MS_Direct_Indirect = 2;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Seq          RT) TYPE(RTVOBJ) FILE(POCGCPP)           AC1659642;
  PARAMETER(PAR.MS_Country_Code);
  PARAMETER(PAR.MS_Item_Code);
  PARAMETER(PAR.MS_Invoice_Number);
  PARAMETER(PAR.MS_Item_Seq);
  {
   //?USER: Processing if Data record not found

   // PAR.MS Item Seq = CON.1
   PAR.MS_Item_Seq = 1;

   //?USER: Process Data record

   // PAR.MS Item Seq = DB1.MS Item Seq + CON.1
   PAR.MS_Item_Seq = DB1.MS_Item_Seq + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Crt MEX Sales         CR) TYPE(CRTOBJ) FILE(POCGCPP)           AC1659434;
  PARAMETER(PAR.MS_Country_Code);
  PARAMETER(PAR.MS_Item_Code);
  PARAMETER(PAR.MS_Invoice_Number);
  PARAMETER(PAR.MS_Item_Seq);
  PARAMETER(PAR.MS_Tariff_Class);
  PARAMETER(PAR.MS_Item_Description);
  PARAMETER(PAR.MS_MEX_Comparison_Item);
  PARAMETER(PAR.MS_Invoice_Date);
  PARAMETER(PAR.MS_Shipment_Date);
  PARAMETER(PAR.MS_Terms_of_Sale);
  PARAMETER(PAR.MS_Payment_Date);
  PARAMETER(PAR.MS_Destination);
  PARAMETER(PAR.MS_Bill_To_Name);
  PARAMETER(PAR.MS_Related_Client);
  PARAMETER(PAR.MS_Invoice_Amount);
  PARAMETER(PAR.MS_Weight_Billed);
  PARAMETER(PAR.MS_Exchange_Rate);
  PARAMETER(PAR.MS_Conversion_Factor);
  PARAMETER(PAR.MS_Unit_Price);
  PARAMETER(PAR.MS_Rebates);
  PARAMETER(PAR.MS_Packing_Labor_Exp);
  PARAMETER(PAR.MS_Packing_Material_Exp);
  PARAMETER(PAR.MS_Credit_Exp);
  PARAMETER(PAR.MS_Garranties_Exp);
  PARAMETER(PAR.MS_Commission_Exp);
  PARAMETER(PAR.MS_Handling_Exp);
  PARAMETER(PAR.MS_Export_Handling_Exp);
  PARAMETER(PAR.MS_USA_Freight_Exp);
  PARAMETER(PAR.MS_USA_Ocean_Frt_Exp);
  PARAMETER(PAR.MS_USA_Insurance_Exp);
  PARAMETER(PAR.MS_MEX_Freight_Exp);
  PARAMETER(PAR.MS_Quality_Adj);
  PARAMETER(PAR.MS_MEX_Insurance_Exp);
  PARAMETER(PAR.MS_Taxes_Adj);
  PARAMETER(PAR.MS_USDA_Document_Exp);
  PARAMETER(PAR.MS_Physical_Adj);
  PARAMETER(PAR.MS_Other_Adj);
  PARAMETER(PAR.MS_Total_Adj);
  PARAMETER(PAR.MS_Total_Adj_USD);
  PARAMETER(PAR.MS_Net_Price_USD);
  PARAMETER(PAR.MS_Exchange_Rate_USD);
  PARAMETER(PAR.MS_Direct_Indirect);
  ENDIF;

 }

 CASE;

 // IF LCL.Record Found USR is Record Not Found
 IF LCL.Record_Found_USR = 'N';

 CASE;

 // IF PAR.Export Country Code is Japan
 IF PAR.Export_Country_Code = 'JPN';

 EXECUTE FUNCTION(Val Item Existance    RT) TYPE(RTVOBJ) FILE(POCGCPP)           AC1659621;
 PARAMETER(PAR.Export_Country_Code);
 PARAMETER(DB1.MI_JPN_MEX_Item_Code);
 PARAMETER(LCL.Return_Code_Usr);
 {
  //?USER: Processing if Data record not found

  // PAR.Return Code Usr = CND.*Blank
  PAR.Return_Code_Usr = *BLANK;

  //?USER: Process Data record

  // PAR.Return Code Usr = CND.Record Found
  PAR.Return_Code_Usr = 'RCDFND';

  QUIT;

 }

 CASE;

 // IF LCL.Return Code Usr is *Blank
 IF LCL.Return_Code_Usr = *BLANK;

 EXECUTE FUNCTION(Bld MEX Sales         RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1659471;
 PARAMETER(360);
 PARAMETER(LCL.Export_Country_Code);
 PARAMETER(DB1.MI_JPN_MEX_Item_Code);
 PARAMETER(1010101);
 PARAMETER(LCL.Record_Found_USR);
 PARAMETER(DB1.MI_Item_Code);
 {
  //?USER: Initialize routine

  // LCL.Actual Shipped Date = CON.1031231
  LCL.Actual_Shipped_Date = 1031231;

  // PAR.Record Found USR = CND.Record Found
  PAR.Record_Found_USR = 'Y';

  //?USER: Processing if Data record not found

  // PAR.Record Found USR = CND.Record Not Found
  PAR.Record_Found_USR = 'N';

  //?USER: Process Data record

  //?QUIT:  Actual Shipped Date GT LCL.Actual Shipped Date
  CASE;

  // IF DB1.Actual Shipped Date GT LCL.Actual Shipped Date
  IF DB1.Actual_Shipped_Date > LCL.Actual_Shipped_Date;

  QUIT;

  ENDIF;

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

  //?OMT:  Orders
  CASE;

  // IF DB1.Order Number is 201934
  IF DB1.Order_Number = 201934;

  // OR DB1.Order Number is 209447
  OR DB1.Order_Number = 209447;

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  ENDIF;

  //?Process Record
  CASE;

  // IF PGM.*Record selected is *YES
  IF PGM.*Record_selected = 'Y';

  //?MS Country Code
  CASE;

  // IF PAR.Export Country Code is Blank
  IF PAR.Export_Country_Code = *BLANK;

  // PAR.MS Country Code = CON.USA
  PAR.MS_Country_Code = 'USA';

  //?MS Country Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Country Code = DB1.Export Country Code
  PAR.MS_Country_Code = DB1.Export_Country_Code;

  ENDIF;

  // PAR.MS Item Code = DB1.Shipped Item Code
  PAR.MS_Item_Code = DB1.Shipped_Item_Code;

  //?MEX:  Replace 11410 and 11810 with 11610
  CASE;

  // IF PAR.Export Country Code is Mexico
  IF PAR.Export_Country_Code = 'MEX';

  CASE;

  // IF DB1.Shipped Item Code is 11410
  IF DB1.Shipped_Item_Code = 11410;

  // OR DB1.Shipped Item Code is 11810
  OR DB1.Shipped_Item_Code = 11810;

  // PAR.MS Item Code = CON.11610
  PAR.MS_Item_Code = 11610;

  ENDIF;

  ENDIF;

  // PAR.MS Invoice Number = DB1.Invoice Number
  PAR.MS_Invoice_Number = DB1.Invoice_Number;

  EXECUTE FUNCTION(Rtv Mex Item Info     RT) TYPE(RTVOBJ) FILE(POCFREP)           AC1659472;
  PARAMETER(PAR.MS_Item_Code);
  PARAMETER(PAR.MS_Item_Description);
  PARAMETER(PAR.MS_Tariff_Class);
  PARAMETER(PAR.MS_Packing_Material_Exp);
  PARAMETER(PAR.MS_Packing_Labor_Exp);
  PARAMETER(LCL.MI_6_Mo_Sold_to_MEX);
  PARAMETER(LCL.MI_USA_Claim_Adj);
  PARAMETER(LCL.MI_MEX_Claim_Adj);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?MS MEX Comparison Item Code
  CASE;

  // IF PAR.Shipped Item Code EQ PAR.MI Item Code
  IF PAR.Shipped_Item_Code = PAR.MI_Item_Code;

  // PAR.MS MEX Comparison Item = CON.*ZERO
  PAR.MS_MEX_Comparison_Item = *ZERO;

  //?MS MEX Comparison Item Code
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS MEX Comparison Item = PAR.MI Item Code
  PAR.MS_MEX_Comparison_Item = PAR.MI_Item_Code;

  ENDIF;

  // PAR.MS Invoice Date = DB1.Invoice Date
  PAR.MS_Invoice_Date = DB1.Invoice_Date;

  // PAR.MS Shipment Date = DB1.Actual Shipped Date
  PAR.MS_Shipment_Date = DB1.Actual_Shipped_Date;

  // PAR.MS Terms of Sale = DB1.Shipping Method
  PAR.MS_Terms_of_Sale = DB1.Shipping_Method;

  EXECUTE FUNCTION(Rtv Days to Payment   RT) TYPE(RTVOBJ) FILE(ARBDCPP)           AC1659477;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Invoice_Number);
  PARAMETER(DB1.Invoice_Suffix);
  PARAMETER(LCL.Days_to_Pay);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.MS Payment Date = PAR.MS Invoice Date + LCL.Days to Pay *DAYS
  PAR.MS_Payment_Date = DATEINCR(PAR.MS_Invoice_Date LCL.Days_to_Pay 'DY' 1111111 'NONE'
  'N' 1);

  //?MS Destination
  CASE;

  // IF DB1.Shipping Method is Prepaid
  IF DB1.Shipping_Method = 'PR'/'PT';

  // PAR.MS Destination = CONCAT(DB1.Ship To City,DB1.Ship To State Code,CON.1)
  PAR.MS_Destination = DB1.Ship_To_City + DB1.Ship_To_State_Code (1);

  //?MS Destination
  // IF DB1.Shipping Method is Collect
  IF DB1.Shipping_Method = 'CR'/'CT';

  // PAR.MS Destination = CON.Guymon OK
  PAR.MS_Destination = 'Guymon OK';

  ENDIF;

  // PAR.MS Bill To Name = DB1.A/R Customer Name
  PAR.MS_Bill_To_Name = DB1.AR_Customer_Name;

  // PAR.MS Related Client = CON.1
  PAR.MS_Related_Client = 1;

  // PAR.MS Invoice Amount = DB1.Extended Amount
  PAR.MS_Invoice_Amount = DB1.Extended_Amount;

  // PAR.MS Weight Billed = DB1.Weight Billed
  PAR.MS_Weight_Billed = DB1.Weight_Billed;

  // PAR.MS Exchange Rate = CON.NA
  PAR.MS_Exchange_Rate = 'NA';

  // PAR.MS Conversion Factor = CON.NA
  PAR.MS_Conversion_Factor = 'NA';

  // PAR.MS Unit Price = DB1.Unit Price
  PAR.MS_Unit_Price = DB1.Unit_Price;

  EXECUTE FUNCTION(Rtv Frt Charge MEX    RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1659560;
  PARAMETER(DB1.Load_ID);
  PARAMETER('INLAND');
  PARAMETER(LCL.LFC_Amount);
  PARAMETER(DB1.Weight_Billed);
  {
   //?USER: Initialize routine

   //?05/12/04 SLM PKTR01 Multi-Company - Function was changed
   //?                                    to remove Company RST or Pos
   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   // PAR.Order Weight Total = PAR.Order Weight Total + DB1.Order Weight Total
   PAR.Order_Weight_Total = PAR.Order_Weight_Total + DB1.Order_Weight_Total;

   //?USER: Exit processing

   EXECUTE FUNCTION(Rtv Charge Amount     RT) TYPE(RTVOBJ) FILE(POBCCPP)           AC1659529;
   PARAMETER(DB1.Load_ID);
   PARAMETER(PAR.FC_Code);
   PARAMETER(LCL.LFC_Amount);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   CASE;

   // IF PAR.Order Weight Total is Greater than zero
   IF PAR.Order_Weight_Total > *ZERO;

   // LCL.Carrier Rate = LCL.LFC Amount / PAR.Order Weight Total *Rounded
   LCL.Carrier_Rate = LCL.LFC_Amount / PAR.Order_Weight_Total 'H';

   // PAR.Amount Paid = LCL.Carrier Rate * PAR.Weight Billed *Rounded
   PAR.Amount_Paid = LCL.Carrier_Rate * PAR.Weight_Billed 'H';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.Amount Paid = CON.*ZERO
   PAR.Amount_Paid = *ZERO;

   ENDIF;

  }

  // LCL.Actual Freight Amount = DB1.Actual Freight Amount + LCL.LFC Amount
  LCL.Actual_Freight_Amount = DB1.Actual_Freight_Amount + LCL.LFC_Amount;

  //?MS Rebates, Credits, etc. (Claim Adjustment)
  CASE;

  // IF PAR.MS Country Code is Mexico
  IF PAR.MS_Country_Code = 'MEX';

  // PAR.MS Rebates = LCL.MI MEX Claim Adj
  PAR.MS_Rebates = LCL.MI_MEX_Claim_Adj;

  //?MS Rebates, Credits, etc. (Claim Adjustment)
  // IF PAR.MS Country Code is USA
  IF PAR.MS_Country_Code = 'USA';

  // PAR.MS Rebates = LCL.MI USA Claim Adj
  PAR.MS_Rebates = LCL.MI_USA_Claim_Adj;

  ENDIF;

  //?MS USA Freight, MS Ocean Freight, MS Credit Exp
  CASE;

  // IF PAR.MS Weight Billed is Greater than zero
  IF PAR.MS_Weight_Billed > *ZERO;

  // PAR.MS USA Freight Exp = LCL.Actual Freight Amount / PAR.MS Weight Billed *Rounded
  PAR.MS_USA_Freight_Exp = LCL.Actual_Freight_Amount / PAR.MS_Weight_Billed 'H';

  // LCL.Days = PAR.MS Payment Date - PAR.MS Invoice Date *DAYS
  LCL.Days = DURATION(PAR.MS_Payment_Date PAR.MS_Invoice_Date 'DY' 1111111 'NONE' 'N' 1);

  CASE;

  // IF LCL.Days is GT Zero
  IF LCL.Days > *ZERO;

  //?Interest Rate = 3.42% for 2003
  //?Interest Rate = 2.768% for 2004
  // MS Credit Exp (MEX2004)
  PAR.MS_Credit_Exp = ( ( ( PAR.MS_Invoice_Amount * .02768 'H' ) / 365 'H' ) * LCL.Days
  'H' ) / PAR.MS_Weight_Billed 'H';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Credit Exp = CON.*ZERO
  PAR.MS_Credit_Exp = *ZERO;

  ENDIF;

  //?MS Commission Exp
  CASE;

  // IF PAR.Export Country Code is Japan
  IF PAR.Export_Country_Code = 'JPN';

  // MS Commission Exp
  PAR.MS_Commission_Exp = ( .005 * DB1.FOB_Gross_Amount 'H' ) / PAR.MS_Weight_Billed 'H';

  //?MS Commission Exp
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Commision Exp = CON.*ZERO
  PAR.MS_Commission_Exp = *ZERO;

  ENDIF;

  ENDIF;

  // PAR.MS Garranties Exp = CON.NA
  PAR.MS_Garranties_Exp = 'NA';

  EXECUTE FUNCTION(Rtv Labor Cost        RT) TYPE(RTVOBJ) FILE(POCIREP)           AC1659549;
  PARAMETER(DB1.U_M_Ordered);
  PARAMETER(PAR.MS_Handling_Exp);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.MS USA Insurance Exp = CON.NA
  PAR.MS_USA_Insurance_Exp = 'NA';

  // PAR.MS MEX Freight Exp = CON.NA
  PAR.MS_MEX_Freight_Exp = 'NA';

  // PAR.MS MEX Insurance Exp = CON.NA
  PAR.MS_MEX_Insurance_Exp = 'NA';

  CASE;

  // IF PAR.Export Country Code is Mexico
  IF PAR.Export_Country_Code = 'MEX';

  // MS Total Adj
  PAR.MS_Total_Adj = ( ( ( ( PAR.MS_Rebates + PAR.MS_Packing_Labor_Exp )
  + PAR.MS_Packing_Material_Exp ) + PAR.MS_Credit_Exp ) + PAR.MS_Handling_Exp )
  + PAR.MS_USA_Freight_Exp;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // MS Total Adj
  PAR.MS_Total_Adj = ( ( ( ( ( ( ( ( ( ( PAR.MS_Rebates + PAR.MS_Packing_Labor_Exp )
  + PAR.MS_Packing_Material_Exp ) + PAR.MS_Credit_Exp ) + PAR.MS_Handling_Exp )
  + PAR.MS_USA_Freight_Exp ) + PAR.MS_Commission_Exp ) + PAR.MS_Quality_Adj )
  + PAR.MS_Taxes_Adj ) + PAR.MS_Physical_Adj ) + PAR.MS_Other_Adj )
  + PAR.MS_USA_Ocean_Frt_Exp;

  ENDIF;

  // PAR.MS Total Adj USD = PAR.MS Total Adj
  PAR.MS_Total_Adj_USD = PAR.MS_Total_Adj;

  // PAR.MS Net Price USD = PAR.MS Unit Price - PAR.MS Total Adj
  PAR.MS_Net_Price_USD = PAR.MS_Unit_Price - PAR.MS_Total_Adj;

  // PAR.MS Exchange Rate USD = CON.NA
  PAR.MS_Exchange_Rate_USD = 'NA';

  EXECUTE FUNCTION(Rtv Consignee/Consgnr RT) TYPE(RTVOBJ) FILE(PDMRREP)           AC1633380;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER('H');
  PARAMETER(LCL.ED_Consignor_Name);
  PARAMETER(WRK.ED_Consignor_Addr_1);
  PARAMETER(WRK.ED_Consignor_Addr_2);
  PARAMETER(WRK.ED_Consignor_Addr_3);
  PARAMETER(WRK.ED_Consignee_Name);
  PARAMETER(WRK.ED_Consignee_Addr_1);
  PARAMETER(WRK.ED_Consignee_Addr_2);
  PARAMETER(WRK.ED_Consignee_Addr_3);
  PARAMETER(WRK.ED_Consignee_Addr_4);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  // LCL.Text USR 8 = SUBSTRING(LCL.ED Consignor Name,CON.1,CON.8)
  LCL.Text_USR_8 = SUBSTRING(LCL.ED_Consignor_Name:1:8);

  //?Direct/Indirect
  CASE;

  // IF LCL.Text USR 8 is Seaboard
  IF LCL.Text_USR_8 = 'Seaboard';

  // PAR.MS Direct/Indirect = CND.Direct
  PAR.MS_Direct_Indirect = 1;

  //?Direct/Indirect
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.MS Direct/Indirect = CND.Indirect
  PAR.MS_Direct_Indirect = 2;

  ENDIF;

  EXECUTE FUNCTION(Rtv Next Seq          RT) TYPE(RTVOBJ) FILE(POCGCPP)           AC1659642;
  PARAMETER(PAR.MS_Country_Code);
  PARAMETER(PAR.MS_Item_Code);
  PARAMETER(PAR.MS_Invoice_Number);
  PARAMETER(PAR.MS_Item_Seq);
  {
   //?USER: Processing if Data record not found

   // PAR.MS Item Seq = CON.1
   PAR.MS_Item_Seq = 1;

   //?USER: Process Data record

   // PAR.MS Item Seq = DB1.MS Item Seq + CON.1
   PAR.MS_Item_Seq = DB1.MS_Item_Seq + 1;

   QUIT;

  }

  EXECUTE FUNCTION(Crt MEX Sales         CR) TYPE(CRTOBJ) FILE(POCGCPP)           AC1659434;
  PARAMETER(PAR.MS_Country_Code);
  PARAMETER(PAR.MS_Item_Code);
  PARAMETER(PAR.MS_Invoice_Number);
  PARAMETER(PAR.MS_Item_Seq);
  PARAMETER(PAR.MS_Tariff_Class);
  PARAMETER(PAR.MS_Item_Description);
  PARAMETER(PAR.MS_MEX_Comparison_Item);
  PARAMETER(PAR.MS_Invoice_Date);
  PARAMETER(PAR.MS_Shipment_Date);
  PARAMETER(PAR.MS_Terms_of_Sale);
  PARAMETER(PAR.MS_Payment_Date);
  PARAMETER(PAR.MS_Destination);
  PARAMETER(PAR.MS_Bill_To_Name);
  PARAMETER(PAR.MS_Related_Client);
  PARAMETER(PAR.MS_Invoice_Amount);
  PARAMETER(PAR.MS_Weight_Billed);
  PARAMETER(PAR.MS_Exchange_Rate);
  PARAMETER(PAR.MS_Conversion_Factor);
  PARAMETER(PAR.MS_Unit_Price);
  PARAMETER(PAR.MS_Rebates);
  PARAMETER(PAR.MS_Packing_Labor_Exp);
  PARAMETER(PAR.MS_Packing_Material_Exp);
  PARAMETER(PAR.MS_Credit_Exp);
  PARAMETER(PAR.MS_Garranties_Exp);
  PARAMETER(PAR.MS_Commission_Exp);
  PARAMETER(PAR.MS_Handling_Exp);
  PARAMETER(PAR.MS_Export_Handling_Exp);
  PARAMETER(PAR.MS_USA_Freight_Exp);
  PARAMETER(PAR.MS_USA_Ocean_Frt_Exp);
  PARAMETER(PAR.MS_USA_Insurance_Exp);
  PARAMETER(PAR.MS_MEX_Freight_Exp);
  PARAMETER(PAR.MS_Quality_Adj);
  PARAMETER(PAR.MS_MEX_Insurance_Exp);
  PARAMETER(PAR.MS_Taxes_Adj);
  PARAMETER(PAR.MS_USDA_Document_Exp);
  PARAMETER(PAR.MS_Physical_Adj);
  PARAMETER(PAR.MS_Other_Adj);
  PARAMETER(PAR.MS_Total_Adj);
  PARAMETER(PAR.MS_Total_Adj_USD);
  PARAMETER(PAR.MS_Net_Price_USD);
  PARAMETER(PAR.MS_Exchange_Rate_USD);
  PARAMETER(PAR.MS_Direct_Indirect);
  ENDIF;

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


