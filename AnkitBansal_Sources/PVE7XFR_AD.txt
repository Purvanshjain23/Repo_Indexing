// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PVE7XFR
// ?Date: 14.08.2025 Time: 03:52:00
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Val Upd Held 856 f/TP RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2195450;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Bill_to_Customer);
PARAMETER(PAR.Hold_856_f_Cust_Asgn_App#);
PARAMETER(PAR.Hold_856_f_Carr_PRO);
PARAMETER(PAR.Create_EDI_ASN_856_V2_USR);
{
 //?USER: Initialize routine

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 // LCL.Order Upd to Held f/856 U = CND.No
 LCL.Order_Upd_to_Held_f_856_U = 'N';

 //?USER: Process Data record

 //?WI609_2 JM 11/21/24-Added output parm warehouse location to array
 //?                    PAR EDI 856 ASN V2-Val Cust Setup 4/856 V2IF.
 //?                    Recompile only.
 EXECUTE FUNCTION(Val Cust Setup 4/856 V2IF) TYPE(EXCINTFUN)                     AC2178250;
 PARAMETER(PAR.Create_EDI_ASN_856_V2_USR);
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Bill_to_Customer);
 PARAMETER(LCL.EDI_Trading_Partner_No);
 PARAMETER(NLL.Country_Code);
 PARAMETER(NLL.Warehouse_Code);
 PARAMETER(NLL.Warehouse_Location);
 PARAMETER(*BLANK);
 {
  //?Execute internal function

  //?VALIDATIONS: Is Bill To Customer Setup for EDI 856 ASN V2?
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Create EDI ASN 856 V2 USR = CND.No
  PAR.Create_EDI_ASN_856_V2_USR = 'N';

  EXECUTE FUNCTION(RTV EDI ASN 856 Info  RT) TYPE(RTVOBJ) FILE(PNGQREP)           AC2177034;
  PARAMETER(PAR.Bill_to_Customer);
  PARAMETER('ADVSN');
  PARAMETER(PAR.EDI_Trading_Partner_No);
  PARAMETER(LCL.EDI_Detailed_ASN_856_Rqd);
  PARAMETER(LCL.Record_Status);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
  CASE;

  //?Do Not Check Customer & Warehouse if Coming From PDN2XFR Program.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Bill To Customer Must Be Active & Setup for EDI 856.
  CASE;

  // IF LCL.EDI Detailed ASN 856 Rqd is Yes
  IF LCL.EDI_Detailed_ASN_856_Rqd = 'Y';

  // AND LCL.Record Status is Active
  AND LCL.Record_Status = 'A';

  // PAR.Create EDI ASN 856 V2 USR = CND.Yes
  PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  ENDIF;

  //?WI609_2 Check Internal or External Warehouse Qualifies for 856 ASN.
  CASE;

  // IF PAR.Create EDI ASN 856 V2 USR is Yes
  IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  EXECUTE FUNCTION(RTV 1st Whse/Country   RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1426676;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(1);
  PARAMETER(1);
  PARAMETER(LCL.Warehouse_Code);
  PARAMETER(PAR.Country_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  EXECUTE FUNCTION(Rtv EDI 856 ASN Info RT) TYPE(RTVOBJ) FILE(CAADREP)            AC2234972;
  PARAMETER(LCL.Warehouse_Code);
  PARAMETER(LCL.Warehouse_Location);
  PARAMETER(LCL.WHS_Live_with_Carlisle);
  PARAMETER(NLL.WHS_PFS_Interface);
  PARAMETER(LCL.Crt_856_ASN_for_3PL_Whse);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // PAR.Warehouse Location = LCL.Warehouse Location
  PAR.Warehouse_Location = LCL.Warehouse_Location;

  CASE;

  // IF LCL.Warehouse Location is Internal (Plant)
  IF LCL.Warehouse_Location = 'I';

  // AND LCL.WHS Live w/Carlisle is Yes
  AND LCL.WHS_Live_with_Carlisle = 'Y';

  // PAR.Create EDI ASN 856 V2 USR = CND.Yes
  PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Create EDI ASN 856 V2 USR = CND.No
  PAR.Create_EDI_ASN_856_V2_USR = 'N';

  //?WI609_2 JM 10/08/24-Allow External 3PL Warehouses to Receive EDI 856 ASN.
  CASE;

  // IF LCL.Warehouse Location is External
  IF LCL.Warehouse_Location = 'E';

  CASE;

  // IF LCL.Crt 856 ASN for 3PL Whse is Yes
  IF LCL.Crt_856_ASN_for_3PL_Whse = 'Y';

  // PAR.Create EDI ASN 856 V2 USR = CND.Yes
  PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  //?WI609_2 JM 10/08/24-Check EDI Manual PO.
  CASE;

  // IF PAR.Create EDI ASN 856 V2 USR is Yes
  IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

  // Call program Rtv EDI Manual PO Sts XF.
  CALL PROGRAM(Rtv EDI Manual PO Sts XF) ('PUTBXFR');
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER('ADVSN');
  PARAMETER(LCL.Send_EDI_Document_Y_N);

  //?If Send EDI Documents = N, set Create EDI ASN 856 V2 USR = N
  CASE;

  // IF LCL.Send EDI Document Y/N is No
  IF LCL.Send_EDI_Document_Y_N = 'N';

  // PAR.Create EDI ASN 856 V2 USR = CND.No
  PAR.Create_EDI_ASN_856_V2_USR = 'N';

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

 }

 CASE;

 // IF PAR.Create EDI ASN 856 V2 USR is Yes
 IF PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 EXECUTE FUNCTION(RTV EDI 856 Flags     RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC2195454;
 PARAMETER(PAR.Load_ID);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Carrier_Ref_PRO_Inv);
 PARAMETER(LCL.Cust_Assigned_Appt_#);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Check Held 'Cust Assigned Appt #' - Designated for Walmart.
 CASE;

 // IF PAR.Hold 856 f/Cust Asgn App# is Yes
 IF PAR.Hold_856_f_Cust_Asgn_App# = 'Y';

 EXECUTE FUNCTION(RTV EDI 856/824 Sts    RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2176913;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(NLL.OHE_EDI_Error_Reasons_2);
 PARAMETER(LCL.OHE_EDI_856_Action);
 PARAMETER(NLL.OHE_EDI_824_Action);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Continue Validation if NOT 'Sent'.
 CASE;

 // IF NOT LCL.OHE EDI 856 Action is Sent
 IF ! LCL.OHE_EDI_856_Action = 'S';

 //?Determine if OK to Create EDI 856?
 CASE;

 // IF LCL.Cust Assigned Appt # is Not Entered
 IF LCL.Cust_Assigned_Appt_# = *BLANK;

 // LCL.Order Upd to Held f/856 U = CND.Yes
 LCL.Order_Upd_to_Held_f_856_U = 'Y';

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 //?If Not Already 'Held', Update to 'Held' in OHE file.
 CASE;

 // IF NOT LCL.OHE EDI 856 Action is Held
 IF ! LCL.OHE_EDI_856_Action = 'H';

 EXECUTE FUNCTION(Upd OHE EDI 856 Error  RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2177296;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*BLANK);
 PARAMETER('H');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG OHE EDI 856 Error  CH) TYPE(CHGOBJ) FILE(PMAMREP)          AC2177297;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.OHE_EDI_Error_Reasons_2);
  PARAMETER(PAR.OHE_EDI_856_Action);
  {
   //?USER: Processing before Data update

   // DB1.Job Time = JOB.*Job time
   DB1.Job_Time = JOB.*Job_time;

   // DB1.Job Date = JOB.*Job date
   DB1.Job_Date = JOB.*Job_date;

   // DB1.Job Name = JOB.*PROGRAM
   DB1.Job_Name = JOB.*PROGRAM;

   // DB1.User Id = JOB.*USER
   DB1.User_Id = JOB.*USER;

  }

 }

 ENDIF;

 //?Determine if OK to Create EDI 856?
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?If ALL Orders for Load/BTC# falls through here, create EDI 856.
 // PAR.Create EDI ASN 856 V2 USR = CND.Yes
 PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 //?If OHE EDI 856 'Held' Status, Change it to 'Blank'.
 CASE;

 // IF LCL.OHE EDI 856 Action is Held
 IF LCL.OHE_EDI_856_Action = 'H';

 EXECUTE FUNCTION(Upd OHE EDI 856 Error  RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2177296;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG OHE EDI 856 Error  CH) TYPE(CHGOBJ) FILE(PMAMREP)          AC2177297;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.OHE_EDI_Error_Reasons_2);
  PARAMETER(PAR.OHE_EDI_856_Action);
  {
   //?USER: Processing before Data update

   // DB1.Job Time = JOB.*Job time
   DB1.Job_Time = JOB.*Job_time;

   // DB1.Job Date = JOB.*Job date
   DB1.Job_Date = JOB.*Job_date;

   // DB1.Job Name = JOB.*PROGRAM
   DB1.Job_Name = JOB.*PROGRAM;

   // DB1.User Id = JOB.*USER
   DB1.User_Id = JOB.*USER;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Check Held 'Carrier Ref PRO/Inv' - Designated for Hello Fresh.
 CASE;

 // IF PAR.Hold 856 f/Carr PRO is Yes
 IF PAR.Hold_856_f_Carr_PRO = 'Y';

 EXECUTE FUNCTION(RTV EDI 856/824 Sts    RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2176913;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(NLL.OHE_EDI_Error_Reasons_2);
 PARAMETER(LCL.OHE_EDI_856_Action);
 PARAMETER(NLL.OHE_EDI_824_Action);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Continue Validation if NOT 'Sent'.
 CASE;

 // IF NOT LCL.OHE EDI 856 Action is Sent
 IF ! LCL.OHE_EDI_856_Action = 'S';

 //?Determine if OK to Create EDI 856?
 CASE;

 // IF LCL.Carrier Ref PRO/Inv is Not Entered
 IF LCL.Carrier_Ref_PRO_Inv = *BLANK;

 // LCL.Order Upd to Held f/856 U = CND.Yes
 LCL.Order_Upd_to_Held_f_856_U = 'Y';

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 //?If Not Already 'Held', Update to 'Held' in OHE file.
 CASE;

 // IF LCL.OHE EDI 856 Action is Held
 IF LCL.OHE_EDI_856_Action = 'H';

 EXECUTE FUNCTION(Upd OHE EDI 856 Error  RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2177296;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*BLANK);
 PARAMETER('H');
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG OHE EDI 856 Error  CH) TYPE(CHGOBJ) FILE(PMAMREP)          AC2177297;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.OHE_EDI_Error_Reasons_2);
  PARAMETER(PAR.OHE_EDI_856_Action);
  {
   //?USER: Processing before Data update

   // DB1.Job Time = JOB.*Job time
   DB1.Job_Time = JOB.*Job_time;

   // DB1.Job Date = JOB.*Job date
   DB1.Job_Date = JOB.*Job_date;

   // DB1.Job Name = JOB.*PROGRAM
   DB1.Job_Name = JOB.*PROGRAM;

   // DB1.User Id = JOB.*USER
   DB1.User_Id = JOB.*USER;

  }

 }

 ENDIF;

 //?Determine if OK to Create EDI 856?
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?If ALL Orders for Load/BTC# falls through here, create EDI 856.
 // PAR.Create EDI ASN 856 V2 USR = CND.Yes
 PAR.Create_EDI_ASN_856_V2_USR = 'Y';

 //?If OHE EDI 856 'Held' Status, Change it to 'Blank'.
 CASE;

 // IF LCL.OHE EDI 856 Action is Held
 IF LCL.OHE_EDI_856_Action = 'H';

 EXECUTE FUNCTION(Upd OHE EDI 856 Error  RT) TYPE(RTVOBJ) FILE(PMAMREP)          AC2177296;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(CHG OHE EDI 856 Error  CH) TYPE(CHGOBJ) FILE(PMAMREP)          AC2177297;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(PAR.OHE_EDI_Error_Reasons_2);
  PARAMETER(PAR.OHE_EDI_856_Action);
  {
   //?USER: Processing before Data update

   // DB1.Job Time = JOB.*Job time
   DB1.Job_Time = JOB.*Job_time;

   // DB1.Job Date = JOB.*Job date
   DB1.Job_Date = JOB.*Job_date;

   // DB1.Job Name = JOB.*PROGRAM
   DB1.Job_Name = JOB.*PROGRAM;

   // DB1.User Id = JOB.*USER
   DB1.User_Id = JOB.*USER;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?USER: Exit processing

 //?At Least 1 or More Orders Updated to 'Held' for 856, Do NOT Create 856.
 CASE;

 // IF LCL.Order Upd to Held f/856 U is Yes
 IF LCL.Order_Upd_to_Held_f_856_U = 'Y';

 // PAR.Create EDI ASN 856 V2 USR = CND.No
 PAR.Create_EDI_ASN_856_V2_USR = 'N';

 ENDIF;

}


