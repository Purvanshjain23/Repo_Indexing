// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDN5XFR
// ?Date: 14.08.2025 Time: 03:32:28
// ?------------------------------------------------------------------------------------------------

//?Execute user function

CASE;

// IF PAR.Component Item Code EQ PAR.Item Code
IF PAR.Component_Item_Code = PAR.Item_Code;

CASE;

// IF PAR.PS Process Control USR is Production Need
IF PAR.PS_Process_Control_USR = 'N';

EXECUTE FUNCTION(UPS Upd Sched Need    RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1371900;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Weight_9_2_USR);
{
 //?USER: Process Data record

 // WRK.PS Weight Sched Need = DB1.PS Weight Sched Need + PAR.PS Weight Sched Need
 WRK.PS_Weight_Sched_Need = DB1.PS_Weight_Sched_Need + PAR.PS_Weight_Sched_Need;

 EXECUTE FUNCTION(UPS Chg Sched Need    CH) TYPE(CHGOBJ) FILE(PDI8CPP)           AC1371904;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(WRK.PS_Weight_Sched_Need);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


// IF PAR.PS Process Control USR is Standard Mix
IF PAR.PS_Process_Control_USR = 'S';

EXECUTE FUNCTION(UPS Upd Wgt Standard  RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1325091;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Weight_9_2_USR);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(UPS Crt Prod Detail   CR) TYPE(CRTOBJ) FILE(PDI8CPP)           AC1309512;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.PS_Available_Ship_Date);
 PARAMETER(PAR.PS_Weight_Planned_Prod);
 PARAMETER(PAR.PS_Pieces_Planned_Prod);
 PARAMETER(PAR.PS_Pct_of_Carcass_Yield);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_On_Hand);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Standard);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Converted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Shipping_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Ship_Cut_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Id);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.PS_Lock_Status);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Sched_Need_Sts);
 PARAMETER(PAR.PS_Production_Warehouse);
 PARAMETER(PAR.PS_Weight_Ordered);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FC_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FX_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Shipment);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Available_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Production_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Fab_Needs);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(*MISSING);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(BPS Setup Item Info   IF) TYPE(EXCINTFUN)                      AC1367204;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(WRK.Description_Line_One);
  PARAMETER(WRK.UOM_Primary);
  PARAMETER(WRK.Unit_Weight);
  PARAMETER(DB1.Item_Structure_Class_Code);
  PARAMETER(DB1.Item_Structure_Group_Code);
  PARAMETER(DB1.Item_Structure_Type_Code);
  PARAMETER(WRK.Item_Type_Code);
  PARAMETER(WRK.Default_Warehouse);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(WRK.Base_Conv_Loss_Item);
  PARAMETER(WRK.Variety_Rendered_Cut);
  PARAMETER(WRK.Credit_Item_Status);
  PARAMETER(WRK.Std_Weight_Head_Var_Ren);
  PARAMETER(WRK.Pieces_Per_Head);
  PARAMETER(DB1.Department_Code);
  PARAMETER(WRK.Group_for_Packaging);
  PARAMETER(WRK.Seconds_Item);
  PARAMETER(DB1.PS_Piece_Count_Item);
  PARAMETER(WRK.Pieces_Per_Bag);
  PARAMETER(WRK.Bags_Per_Unit);
  PARAMETER(DB1.PS_Export_Domestic);
  PARAMETER(DB1.PS_Print_On_Schedule);
  PARAMETER(WRK.Fresh_Inv_Allocation_Seq);
  PARAMETER(WRK.Fresh_Sched_As_Ordered);
  PARAMETER(WRK.Frozen_Inv_Allocation_Seq);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Warehouse_Type);
  PARAMETER(WRK.Trans_Contol_AS400_Plant);
  PARAMETER(WRK.Warehouse_Location);
  PARAMETER(WRK.Warehouse_Std_Chill_Time);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Item_Id);
  {
   //?Execute internal function

   EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Description_Line_One);
   PARAMETER(PAR.UOM_Primary);
   PARAMETER(PAR.Unit_Weight);
   PARAMETER(PAR.Item_Structure_Class_Code);
   PARAMETER(PAR.Item_Structure_Group_Code);
   PARAMETER(PAR.Item_Structure_Type_Code);
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Default_Warehouse);
   PARAMETER(PAR.Fresh_Chilling_Time);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Std_Weight_Head_Var_Ren);
   PARAMETER(PAR.Pieces_Per_Head);
   PARAMETER(PAR.Department_Code);
   PARAMETER(PAR.Group_for_Packaging);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.Piece_Count_Item);
   PARAMETER(PAR.Pieces_Per_Bag);
   PARAMETER(PAR.Bags_Per_Unit);
   PARAMETER(PAR.Export_Domestic);
   PARAMETER(PAR.Print_On_Schedule);
   PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
   PARAMETER(PAR.Fresh_Sched_As_Ordered);
   PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
   PARAMETER(PAR.Primal_Group_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Warehouse_Type);
   PARAMETER(PAR.Trans_Contol_AS400_Plant);
   PARAMETER(PAR.Warehouse_Location);
   PARAMETER(PAR.Warehouse_Std_Chill_Time);
   PARAMETER(PAR.Warehouse_Chill_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Description_Line_One);
    PARAMETER(PAR.UOM_Primary);
    PARAMETER(PAR.Unit_Weight);
    PARAMETER(PAR.Item_Structure_Class_Code);
    PARAMETER(PAR.Item_Structure_Group_Code);
    PARAMETER(PAR.Item_Structure_Type_Code);
    PARAMETER(PAR.Item_Type_Code);
    PARAMETER(PAR.Default_Warehouse);
    PARAMETER(PAR.Fresh_Chilling_Time);
    PARAMETER(PAR.Base_Conv_Loss_Item);
    PARAMETER(PAR.Variety_Rendered_Cut);
    PARAMETER(PAR.Credit_Item_Status);
    PARAMETER(PAR.Std_Weight_Head_Var_Ren);
    PARAMETER(PAR.Pieces_Per_Head);
    PARAMETER(PAR.Department_Code);
    PARAMETER(PAR.Group_for_Packaging);
    PARAMETER(PAR.Seconds_Item);
    PARAMETER(PAR.Piece_Count_Item);
    PARAMETER(PAR.Pieces_Per_Bag);
    PARAMETER(PAR.Bags_Per_Unit);
    PARAMETER(PAR.Export_Domestic);
    PARAMETER(PAR.Print_On_Schedule);
    PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
    PARAMETER(PAR.Fresh_Sched_As_Ordered);
    PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
    PARAMETER(PAR.Primal_Group_Code);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.Warehouse_Type);
    PARAMETER(PAR.Trans_Contol_AS400_Plant);
    PARAMETER(PAR.Warehouse_Location);
    PARAMETER(PAR.Warehouse_Std_Chill_Time);
    PARAMETER(PAR.Warehouse_Chill_Time);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

   }

   EXECUTE FUNCTION(BPS Set Up Item Id    IF) TYPE(EXCINTFUN)                      AC1332905;
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.PS_Item_Id);
   {
    //?Execute internal function

    CASE;

    // IF PAR.Item Type Code is Raw Materials
    IF PAR.Item_Type_Code = 'RM';

    // PAR.PS Item Identification = CND.RM Base
    PAR.PS_Item_Id = 'RMB';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Seconds Item is Yes
    IF PAR.Seconds_Item = 'Y';

    // PAR.PS Item Identification = CND.FG Seconds
    PAR.PS_Item_Id = 'FSC';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Variety/Rendered/Cut is Variety
    IF PAR.Variety_Rendered_Cut = 'V';

    // PAR.PS Item Identification = CND.FG Variety
    PAR.PS_Item_Id = 'FVR';

    // IF PAR.Variety/Rendered/Cut is Rendered
    IF PAR.Variety_Rendered_Cut = 'R';

    // PAR.PS Item Identification = CND.FG Rendered
    PAR.PS_Item_Id = 'FRD';

    // IF PAR.Variety/Rendered/Cut is Cut
    IF PAR.Variety_Rendered_Cut = 'C';

    //?Base/Converted/Fabricated
    CASE;

    // IF PAR.Credit Item Status is yes
    IF PAR.Credit_Item_Status = 'Y';

    //?Setup Base/Converted/Fabricated Credit
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base Credit
    PAR.PS_Item_Id = 'FBC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted Credit
    PAR.PS_Item_Id = 'FCC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated Credit
    PAR.PS_Item_Id = 'FFC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss Credit
    PAR.PS_Item_Id = 'FLC';

    ENDIF;

    //?Base/Converted/Fabricated
    // IF *OTHERWISE
    IF *OTHERWISE;

    //?Setup Base/Converted/Fabricated
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base
    PAR.PS_Item_Id = 'FGB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted
    PAR.PS_Item_Id = 'FCV';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated
    PAR.PS_Item_Id = 'FFB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss
    PAR.PS_Item_Id = 'FLS';

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

   }

  }

  //?FP1054 Output PS Prod Warehouse
  EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.PS_Production_Warehouse);
  PARAMETER(LCL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Available Ship Date
  CASE;

  // IF WRK.Warehouse Std Chill Time is yes
  IF WRK.Warehouse_Std_Chill_Time = 'Y';

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  //?Available Ship Date
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  ENDIF;

  //?Average Piece Weight
  CASE;

  // IF PAR.PS Pieces Planned Prod is GT Zero
  IF PAR.PS_Pieces_Planned_Prod > *ZERO;

  // DB1.PS Avg Piece Wgt = PAR.PS Weight Planned Prod / PAR.PS Pieces Planned Prod *
  DB1.PS_Avg_Piece_Wgt = PAR.PS_Weight_Planned_Prod / PAR.PS_Pieces_Planned_Prod;

  ENDIF;

  EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.PS Lock Status = CND.NOT LOCKED
  DB1.PS_Lock_Status = 'N';

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(UPS Chg Wgt Standard  CH) TYPE(CHGOBJ) FILE(PDI8CPP)           AC1325098;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.PS_Weight_Standard);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.Job Name = JOB.*PROGRAM
  DB1.Job_Name = JOB.*PROGRAM;

 }

}


ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF PAR.BOM Type is Produced - Meat
IF PAR.BOM_Type = 'P';

EXECUTE FUNCTION(ZZUPSUpdPlanned Prd   RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1326316;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Component_Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Weight_9_2_USR);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(UPS Crt Prod Detail   CR) TYPE(CRTOBJ) FILE(PDI8CPP)           AC1309512;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.PS_Available_Ship_Date);
 PARAMETER(PAR.Weight_9_2_USR);
 PARAMETER(PAR.PS_Pieces_Planned_Prod);
 PARAMETER(PAR.PS_Pct_of_Carcass_Yield);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_On_Hand);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Standard);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Converted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Shipping_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Ship_Cut_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Id);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.PS_Lock_Status);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Sched_Need_Sts);
 PARAMETER(PAR.PS_Production_Warehouse);
 PARAMETER(PAR.PS_Weight_Ordered);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FC_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FX_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Shipment);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Available_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Production_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Fab_Needs);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(*MISSING);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(BPS Setup Item Info   IF) TYPE(EXCINTFUN)                      AC1367204;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(WRK.Description_Line_One);
  PARAMETER(WRK.UOM_Primary);
  PARAMETER(WRK.Unit_Weight);
  PARAMETER(DB1.Item_Structure_Class_Code);
  PARAMETER(DB1.Item_Structure_Group_Code);
  PARAMETER(DB1.Item_Structure_Type_Code);
  PARAMETER(WRK.Item_Type_Code);
  PARAMETER(WRK.Default_Warehouse);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(WRK.Base_Conv_Loss_Item);
  PARAMETER(WRK.Variety_Rendered_Cut);
  PARAMETER(WRK.Credit_Item_Status);
  PARAMETER(WRK.Std_Weight_Head_Var_Ren);
  PARAMETER(WRK.Pieces_Per_Head);
  PARAMETER(DB1.Department_Code);
  PARAMETER(WRK.Group_for_Packaging);
  PARAMETER(WRK.Seconds_Item);
  PARAMETER(DB1.PS_Piece_Count_Item);
  PARAMETER(WRK.Pieces_Per_Bag);
  PARAMETER(WRK.Bags_Per_Unit);
  PARAMETER(DB1.PS_Export_Domestic);
  PARAMETER(DB1.PS_Print_On_Schedule);
  PARAMETER(WRK.Fresh_Inv_Allocation_Seq);
  PARAMETER(WRK.Fresh_Sched_As_Ordered);
  PARAMETER(WRK.Frozen_Inv_Allocation_Seq);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Warehouse_Type);
  PARAMETER(WRK.Trans_Contol_AS400_Plant);
  PARAMETER(WRK.Warehouse_Location);
  PARAMETER(WRK.Warehouse_Std_Chill_Time);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Item_Id);
  {
   //?Execute internal function

   EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Description_Line_One);
   PARAMETER(PAR.UOM_Primary);
   PARAMETER(PAR.Unit_Weight);
   PARAMETER(PAR.Item_Structure_Class_Code);
   PARAMETER(PAR.Item_Structure_Group_Code);
   PARAMETER(PAR.Item_Structure_Type_Code);
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Default_Warehouse);
   PARAMETER(PAR.Fresh_Chilling_Time);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Std_Weight_Head_Var_Ren);
   PARAMETER(PAR.Pieces_Per_Head);
   PARAMETER(PAR.Department_Code);
   PARAMETER(PAR.Group_for_Packaging);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.Piece_Count_Item);
   PARAMETER(PAR.Pieces_Per_Bag);
   PARAMETER(PAR.Bags_Per_Unit);
   PARAMETER(PAR.Export_Domestic);
   PARAMETER(PAR.Print_On_Schedule);
   PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
   PARAMETER(PAR.Fresh_Sched_As_Ordered);
   PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
   PARAMETER(PAR.Primal_Group_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Warehouse_Type);
   PARAMETER(PAR.Trans_Contol_AS400_Plant);
   PARAMETER(PAR.Warehouse_Location);
   PARAMETER(PAR.Warehouse_Std_Chill_Time);
   PARAMETER(PAR.Warehouse_Chill_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Description_Line_One);
    PARAMETER(PAR.UOM_Primary);
    PARAMETER(PAR.Unit_Weight);
    PARAMETER(PAR.Item_Structure_Class_Code);
    PARAMETER(PAR.Item_Structure_Group_Code);
    PARAMETER(PAR.Item_Structure_Type_Code);
    PARAMETER(PAR.Item_Type_Code);
    PARAMETER(PAR.Default_Warehouse);
    PARAMETER(PAR.Fresh_Chilling_Time);
    PARAMETER(PAR.Base_Conv_Loss_Item);
    PARAMETER(PAR.Variety_Rendered_Cut);
    PARAMETER(PAR.Credit_Item_Status);
    PARAMETER(PAR.Std_Weight_Head_Var_Ren);
    PARAMETER(PAR.Pieces_Per_Head);
    PARAMETER(PAR.Department_Code);
    PARAMETER(PAR.Group_for_Packaging);
    PARAMETER(PAR.Seconds_Item);
    PARAMETER(PAR.Piece_Count_Item);
    PARAMETER(PAR.Pieces_Per_Bag);
    PARAMETER(PAR.Bags_Per_Unit);
    PARAMETER(PAR.Export_Domestic);
    PARAMETER(PAR.Print_On_Schedule);
    PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
    PARAMETER(PAR.Fresh_Sched_As_Ordered);
    PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
    PARAMETER(PAR.Primal_Group_Code);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.Warehouse_Type);
    PARAMETER(PAR.Trans_Contol_AS400_Plant);
    PARAMETER(PAR.Warehouse_Location);
    PARAMETER(PAR.Warehouse_Std_Chill_Time);
    PARAMETER(PAR.Warehouse_Chill_Time);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

   }

   EXECUTE FUNCTION(BPS Set Up Item Id    IF) TYPE(EXCINTFUN)                      AC1332905;
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.PS_Item_Id);
   {
    //?Execute internal function

    CASE;

    // IF PAR.Item Type Code is Raw Materials
    IF PAR.Item_Type_Code = 'RM';

    // PAR.PS Item Identification = CND.RM Base
    PAR.PS_Item_Id = 'RMB';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Seconds Item is Yes
    IF PAR.Seconds_Item = 'Y';

    // PAR.PS Item Identification = CND.FG Seconds
    PAR.PS_Item_Id = 'FSC';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Variety/Rendered/Cut is Variety
    IF PAR.Variety_Rendered_Cut = 'V';

    // PAR.PS Item Identification = CND.FG Variety
    PAR.PS_Item_Id = 'FVR';

    // IF PAR.Variety/Rendered/Cut is Rendered
    IF PAR.Variety_Rendered_Cut = 'R';

    // PAR.PS Item Identification = CND.FG Rendered
    PAR.PS_Item_Id = 'FRD';

    // IF PAR.Variety/Rendered/Cut is Cut
    IF PAR.Variety_Rendered_Cut = 'C';

    //?Base/Converted/Fabricated
    CASE;

    // IF PAR.Credit Item Status is yes
    IF PAR.Credit_Item_Status = 'Y';

    //?Setup Base/Converted/Fabricated Credit
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base Credit
    PAR.PS_Item_Id = 'FBC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted Credit
    PAR.PS_Item_Id = 'FCC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated Credit
    PAR.PS_Item_Id = 'FFC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss Credit
    PAR.PS_Item_Id = 'FLC';

    ENDIF;

    //?Base/Converted/Fabricated
    // IF *OTHERWISE
    IF *OTHERWISE;

    //?Setup Base/Converted/Fabricated
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base
    PAR.PS_Item_Id = 'FGB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted
    PAR.PS_Item_Id = 'FCV';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated
    PAR.PS_Item_Id = 'FFB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss
    PAR.PS_Item_Id = 'FLS';

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

   }

  }

  //?FP1054 Output PS Prod Warehouse
  EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.PS_Production_Warehouse);
  PARAMETER(LCL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Available Ship Date
  CASE;

  // IF WRK.Warehouse Std Chill Time is yes
  IF WRK.Warehouse_Std_Chill_Time = 'Y';

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  //?Available Ship Date
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  ENDIF;

  //?Average Piece Weight
  CASE;

  // IF PAR.PS Pieces Planned Prod is GT Zero
  IF PAR.PS_Pieces_Planned_Prod > *ZERO;

  // DB1.PS Avg Piece Wgt = PAR.PS Weight Planned Prod / PAR.PS Pieces Planned Prod *
  DB1.PS_Avg_Piece_Wgt = PAR.PS_Weight_Planned_Prod / PAR.PS_Pieces_Planned_Prod;

  ENDIF;

  EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.PS Lock Status = CND.NOT LOCKED
  DB1.PS_Lock_Status = 'N';

 }

 //?USER: Process Data record

 // PAR.PS Weight Planned Prod = DB1.PS Weight Planned Prod + PAR.Weight 9.2 USR
 PAR.PS_Weight_Planned_Prod = DB1.PS_Weight_Planned_Prod + PAR.Weight_9_2_USR;

 EXECUTE FUNCTION(UPS Chg Planned Prod  CH) TYPE(CHGOBJ) FILE(PDI8CPP)           AC1326319;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.PS_Weight_Planned_Prod);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

}


// IF PAR.BOM Type is Consumed - Meat
IF PAR.BOM_Type = 'C';

//?Item Type Code = Raw Material, update Conv or Fab Need
CASE;

// IF PAR.Item Type Code is Raw Materials
IF PAR.Item_Type_Code = 'RM';

CASE;

// IF PAR.Department Type is Converting
IF PAR.Department_Type = 'C';

EXECUTE FUNCTION(UPS Upd Conv Need     RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1371996;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Component_Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Weight_9_2_USR);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(UPS Crt Prod Detail   CR) TYPE(CRTOBJ) FILE(PDI8CPP)           AC1309512;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.PS_Available_Ship_Date);
 PARAMETER(PAR.PS_Weight_Planned_Prod);
 PARAMETER(PAR.PS_Pieces_Planned_Prod);
 PARAMETER(PAR.PS_Pct_of_Carcass_Yield);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_On_Hand);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Standard);
 PARAMETER(*MISSING);
 PARAMETER(PAR.Weight_9_2_USR);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Shipping_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Ship_Cut_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Id);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.PS_Lock_Status);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Sched_Need_Sts);
 PARAMETER(PAR.PS_Production_Warehouse);
 PARAMETER(PAR.PS_Weight_Ordered);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FC_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FX_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Shipment);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Available_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Production_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Fab_Needs);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(*MISSING);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(BPS Setup Item Info   IF) TYPE(EXCINTFUN)                      AC1367204;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(WRK.Description_Line_One);
  PARAMETER(WRK.UOM_Primary);
  PARAMETER(WRK.Unit_Weight);
  PARAMETER(DB1.Item_Structure_Class_Code);
  PARAMETER(DB1.Item_Structure_Group_Code);
  PARAMETER(DB1.Item_Structure_Type_Code);
  PARAMETER(WRK.Item_Type_Code);
  PARAMETER(WRK.Default_Warehouse);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(WRK.Base_Conv_Loss_Item);
  PARAMETER(WRK.Variety_Rendered_Cut);
  PARAMETER(WRK.Credit_Item_Status);
  PARAMETER(WRK.Std_Weight_Head_Var_Ren);
  PARAMETER(WRK.Pieces_Per_Head);
  PARAMETER(DB1.Department_Code);
  PARAMETER(WRK.Group_for_Packaging);
  PARAMETER(WRK.Seconds_Item);
  PARAMETER(DB1.PS_Piece_Count_Item);
  PARAMETER(WRK.Pieces_Per_Bag);
  PARAMETER(WRK.Bags_Per_Unit);
  PARAMETER(DB1.PS_Export_Domestic);
  PARAMETER(DB1.PS_Print_On_Schedule);
  PARAMETER(WRK.Fresh_Inv_Allocation_Seq);
  PARAMETER(WRK.Fresh_Sched_As_Ordered);
  PARAMETER(WRK.Frozen_Inv_Allocation_Seq);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Warehouse_Type);
  PARAMETER(WRK.Trans_Contol_AS400_Plant);
  PARAMETER(WRK.Warehouse_Location);
  PARAMETER(WRK.Warehouse_Std_Chill_Time);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Item_Id);
  {
   //?Execute internal function

   EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Description_Line_One);
   PARAMETER(PAR.UOM_Primary);
   PARAMETER(PAR.Unit_Weight);
   PARAMETER(PAR.Item_Structure_Class_Code);
   PARAMETER(PAR.Item_Structure_Group_Code);
   PARAMETER(PAR.Item_Structure_Type_Code);
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Default_Warehouse);
   PARAMETER(PAR.Fresh_Chilling_Time);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Std_Weight_Head_Var_Ren);
   PARAMETER(PAR.Pieces_Per_Head);
   PARAMETER(PAR.Department_Code);
   PARAMETER(PAR.Group_for_Packaging);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.Piece_Count_Item);
   PARAMETER(PAR.Pieces_Per_Bag);
   PARAMETER(PAR.Bags_Per_Unit);
   PARAMETER(PAR.Export_Domestic);
   PARAMETER(PAR.Print_On_Schedule);
   PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
   PARAMETER(PAR.Fresh_Sched_As_Ordered);
   PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
   PARAMETER(PAR.Primal_Group_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Warehouse_Type);
   PARAMETER(PAR.Trans_Contol_AS400_Plant);
   PARAMETER(PAR.Warehouse_Location);
   PARAMETER(PAR.Warehouse_Std_Chill_Time);
   PARAMETER(PAR.Warehouse_Chill_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Description_Line_One);
    PARAMETER(PAR.UOM_Primary);
    PARAMETER(PAR.Unit_Weight);
    PARAMETER(PAR.Item_Structure_Class_Code);
    PARAMETER(PAR.Item_Structure_Group_Code);
    PARAMETER(PAR.Item_Structure_Type_Code);
    PARAMETER(PAR.Item_Type_Code);
    PARAMETER(PAR.Default_Warehouse);
    PARAMETER(PAR.Fresh_Chilling_Time);
    PARAMETER(PAR.Base_Conv_Loss_Item);
    PARAMETER(PAR.Variety_Rendered_Cut);
    PARAMETER(PAR.Credit_Item_Status);
    PARAMETER(PAR.Std_Weight_Head_Var_Ren);
    PARAMETER(PAR.Pieces_Per_Head);
    PARAMETER(PAR.Department_Code);
    PARAMETER(PAR.Group_for_Packaging);
    PARAMETER(PAR.Seconds_Item);
    PARAMETER(PAR.Piece_Count_Item);
    PARAMETER(PAR.Pieces_Per_Bag);
    PARAMETER(PAR.Bags_Per_Unit);
    PARAMETER(PAR.Export_Domestic);
    PARAMETER(PAR.Print_On_Schedule);
    PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
    PARAMETER(PAR.Fresh_Sched_As_Ordered);
    PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
    PARAMETER(PAR.Primal_Group_Code);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.Warehouse_Type);
    PARAMETER(PAR.Trans_Contol_AS400_Plant);
    PARAMETER(PAR.Warehouse_Location);
    PARAMETER(PAR.Warehouse_Std_Chill_Time);
    PARAMETER(PAR.Warehouse_Chill_Time);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

   }

   EXECUTE FUNCTION(BPS Set Up Item Id    IF) TYPE(EXCINTFUN)                      AC1332905;
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.PS_Item_Id);
   {
    //?Execute internal function

    CASE;

    // IF PAR.Item Type Code is Raw Materials
    IF PAR.Item_Type_Code = 'RM';

    // PAR.PS Item Identification = CND.RM Base
    PAR.PS_Item_Id = 'RMB';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Seconds Item is Yes
    IF PAR.Seconds_Item = 'Y';

    // PAR.PS Item Identification = CND.FG Seconds
    PAR.PS_Item_Id = 'FSC';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Variety/Rendered/Cut is Variety
    IF PAR.Variety_Rendered_Cut = 'V';

    // PAR.PS Item Identification = CND.FG Variety
    PAR.PS_Item_Id = 'FVR';

    // IF PAR.Variety/Rendered/Cut is Rendered
    IF PAR.Variety_Rendered_Cut = 'R';

    // PAR.PS Item Identification = CND.FG Rendered
    PAR.PS_Item_Id = 'FRD';

    // IF PAR.Variety/Rendered/Cut is Cut
    IF PAR.Variety_Rendered_Cut = 'C';

    //?Base/Converted/Fabricated
    CASE;

    // IF PAR.Credit Item Status is yes
    IF PAR.Credit_Item_Status = 'Y';

    //?Setup Base/Converted/Fabricated Credit
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base Credit
    PAR.PS_Item_Id = 'FBC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted Credit
    PAR.PS_Item_Id = 'FCC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated Credit
    PAR.PS_Item_Id = 'FFC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss Credit
    PAR.PS_Item_Id = 'FLC';

    ENDIF;

    //?Base/Converted/Fabricated
    // IF *OTHERWISE
    IF *OTHERWISE;

    //?Setup Base/Converted/Fabricated
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base
    PAR.PS_Item_Id = 'FGB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted
    PAR.PS_Item_Id = 'FCV';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated
    PAR.PS_Item_Id = 'FFB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss
    PAR.PS_Item_Id = 'FLS';

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

   }

  }

  //?FP1054 Output PS Prod Warehouse
  EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.PS_Production_Warehouse);
  PARAMETER(LCL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Available Ship Date
  CASE;

  // IF WRK.Warehouse Std Chill Time is yes
  IF WRK.Warehouse_Std_Chill_Time = 'Y';

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  //?Available Ship Date
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  ENDIF;

  //?Average Piece Weight
  CASE;

  // IF PAR.PS Pieces Planned Prod is GT Zero
  IF PAR.PS_Pieces_Planned_Prod > *ZERO;

  // DB1.PS Avg Piece Wgt = PAR.PS Weight Planned Prod / PAR.PS Pieces Planned Prod *
  DB1.PS_Avg_Piece_Wgt = PAR.PS_Weight_Planned_Prod / PAR.PS_Pieces_Planned_Prod;

  ENDIF;

  EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.PS Lock Status = CND.NOT LOCKED
  DB1.PS_Lock_Status = 'N';

 }

 //?USER: Process Data record

 // PAR.PS Weight Conv Needs = DB1.PS Weight Conv Needs + PAR.Weight 9.2 USR
 PAR.PS_Weight_Converted = DB1.PS_Weight_Converted + PAR.Weight_9_2_USR;

 EXECUTE FUNCTION(UPS Chg Conv Need     CH) TYPE(CHGOBJ) FILE(PDI8CPP)           AC1326364;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.PS_Weight_Converted);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.Job Name = JOB.*PROGRAM
  DB1.Job_Name = JOB.*PROGRAM;

 }

}


// IF PAR.Department Type is Fabricating
IF PAR.Department_Type = 'F';

EXECUTE FUNCTION(UPS Upd Fab Need      RT) TYPE(RTVOBJ) FILE(PDI8CPP)           AC1380694;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Production_Type);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Component_Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Weight_9_2_USR);
{
 //?USER: Processing if Data record not found

 EXECUTE FUNCTION(UPS Crt Prod Detail   CR) TYPE(CRTOBJ) FILE(PDI8CPP)           AC1309512;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Production_Type);
 PARAMETER(PAR.Production_Date);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.PS_Available_Ship_Date);
 PARAMETER(PAR.PS_Weight_Planned_Prod);
 PARAMETER(PAR.PS_Pieces_Planned_Prod);
 PARAMETER(PAR.PS_Pct_of_Carcass_Yield);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_On_Hand);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Standard);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Converted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Shipping_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Ship_Cut_Adj);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Prod_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Inv_Allocated);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Id);
 PARAMETER(PAR.Warehouse_Type);
 PARAMETER(PAR.PS_Lock_Status);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Item_Sched_Need_Sts);
 PARAMETER(PAR.PS_Production_Warehouse);
 PARAMETER(PAR.PS_Weight_Ordered);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FC_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_FX_Adjusted);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Shipment);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Available_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Production_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.Weight_9_2_USR);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Prod);
 PARAMETER(*MISSING);
 PARAMETER(PAR.PS_Weight_Sched_Need);
 PARAMETER(*MISSING);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(*MISSING);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(BPS Setup Item Info   IF) TYPE(EXCINTFUN)                      AC1367204;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(WRK.Description_Line_One);
  PARAMETER(WRK.UOM_Primary);
  PARAMETER(WRK.Unit_Weight);
  PARAMETER(DB1.Item_Structure_Class_Code);
  PARAMETER(DB1.Item_Structure_Group_Code);
  PARAMETER(DB1.Item_Structure_Type_Code);
  PARAMETER(WRK.Item_Type_Code);
  PARAMETER(WRK.Default_Warehouse);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(WRK.Base_Conv_Loss_Item);
  PARAMETER(WRK.Variety_Rendered_Cut);
  PARAMETER(WRK.Credit_Item_Status);
  PARAMETER(WRK.Std_Weight_Head_Var_Ren);
  PARAMETER(WRK.Pieces_Per_Head);
  PARAMETER(DB1.Department_Code);
  PARAMETER(WRK.Group_for_Packaging);
  PARAMETER(WRK.Seconds_Item);
  PARAMETER(DB1.PS_Piece_Count_Item);
  PARAMETER(WRK.Pieces_Per_Bag);
  PARAMETER(WRK.Bags_Per_Unit);
  PARAMETER(DB1.PS_Export_Domestic);
  PARAMETER(DB1.PS_Print_On_Schedule);
  PARAMETER(WRK.Fresh_Inv_Allocation_Seq);
  PARAMETER(WRK.Fresh_Sched_As_Ordered);
  PARAMETER(WRK.Frozen_Inv_Allocation_Seq);
  PARAMETER(DB1.Primal_Group_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.Warehouse_Type);
  PARAMETER(WRK.Trans_Contol_AS400_Plant);
  PARAMETER(WRK.Warehouse_Location);
  PARAMETER(WRK.Warehouse_Std_Chill_Time);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Item_Id);
  {
   //?Execute internal function

   EXECUTE FUNCTION(UPS Rtv Company/Item  IF) TYPE(EXCINTFUN)                      AC1423844;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Description_Line_One);
   PARAMETER(PAR.UOM_Primary);
   PARAMETER(PAR.Unit_Weight);
   PARAMETER(PAR.Item_Structure_Class_Code);
   PARAMETER(PAR.Item_Structure_Group_Code);
   PARAMETER(PAR.Item_Structure_Type_Code);
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Default_Warehouse);
   PARAMETER(PAR.Fresh_Chilling_Time);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Std_Weight_Head_Var_Ren);
   PARAMETER(PAR.Pieces_Per_Head);
   PARAMETER(PAR.Department_Code);
   PARAMETER(PAR.Group_for_Packaging);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.Piece_Count_Item);
   PARAMETER(PAR.Pieces_Per_Bag);
   PARAMETER(PAR.Bags_Per_Unit);
   PARAMETER(PAR.Export_Domestic);
   PARAMETER(PAR.Print_On_Schedule);
   PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
   PARAMETER(PAR.Fresh_Sched_As_Ordered);
   PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
   PARAMETER(PAR.Primal_Group_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Warehouse_Type);
   PARAMETER(PAR.Trans_Contol_AS400_Plant);
   PARAMETER(PAR.Warehouse_Location);
   PARAMETER(PAR.Warehouse_Std_Chill_Time);
   PARAMETER(PAR.Warehouse_Chill_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
    PARAMETER(PAR.Company_Number);
    PARAMETER(PAR.Item_Code);
    PARAMETER(PAR.Description_Line_One);
    PARAMETER(PAR.UOM_Primary);
    PARAMETER(PAR.Unit_Weight);
    PARAMETER(PAR.Item_Structure_Class_Code);
    PARAMETER(PAR.Item_Structure_Group_Code);
    PARAMETER(PAR.Item_Structure_Type_Code);
    PARAMETER(PAR.Item_Type_Code);
    PARAMETER(PAR.Default_Warehouse);
    PARAMETER(PAR.Fresh_Chilling_Time);
    PARAMETER(PAR.Base_Conv_Loss_Item);
    PARAMETER(PAR.Variety_Rendered_Cut);
    PARAMETER(PAR.Credit_Item_Status);
    PARAMETER(PAR.Std_Weight_Head_Var_Ren);
    PARAMETER(PAR.Pieces_Per_Head);
    PARAMETER(PAR.Department_Code);
    PARAMETER(PAR.Group_for_Packaging);
    PARAMETER(PAR.Seconds_Item);
    PARAMETER(PAR.Piece_Count_Item);
    PARAMETER(PAR.Pieces_Per_Bag);
    PARAMETER(PAR.Bags_Per_Unit);
    PARAMETER(PAR.Export_Domestic);
    PARAMETER(PAR.Print_On_Schedule);
    PARAMETER(PAR.Fresh_Inv_Allocation_Seq);
    PARAMETER(PAR.Fresh_Sched_As_Ordered);
    PARAMETER(PAR.Frozen_Inv_Allocation_Seq);
    PARAMETER(PAR.Primal_Group_Code);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

    EXECUTE FUNCTION(BPS Rtv Whs Info      RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1475289;
    PARAMETER(PAR.Warehouse_Code);
    PARAMETER(PAR.Warehouse_Type);
    PARAMETER(PAR.Trans_Contol_AS400_Plant);
    PARAMETER(PAR.Warehouse_Location);
    PARAMETER(PAR.Warehouse_Std_Chill_Time);
    PARAMETER(PAR.Warehouse_Chill_Time);
    {
     //?USER: Processing if Data record not found

     MOVE *ALL (To: PAR From: CON);

     //?USER: Process Data record

     MOVE *ALL (To: PAR From: DB1);

    }

   }

   EXECUTE FUNCTION(BPS Set Up Item Id    IF) TYPE(EXCINTFUN)                      AC1332905;
   PARAMETER(PAR.Item_Type_Code);
   PARAMETER(PAR.Base_Conv_Loss_Item);
   PARAMETER(PAR.Variety_Rendered_Cut);
   PARAMETER(PAR.Credit_Item_Status);
   PARAMETER(PAR.Seconds_Item);
   PARAMETER(PAR.PS_Item_Id);
   {
    //?Execute internal function

    CASE;

    // IF PAR.Item Type Code is Raw Materials
    IF PAR.Item_Type_Code = 'RM';

    // PAR.PS Item Identification = CND.RM Base
    PAR.PS_Item_Id = 'RMB';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Seconds Item is Yes
    IF PAR.Seconds_Item = 'Y';

    // PAR.PS Item Identification = CND.FG Seconds
    PAR.PS_Item_Id = 'FSC';

    // IF *OTHERWISE
    IF *OTHERWISE;

    CASE;

    // IF PAR.Variety/Rendered/Cut is Variety
    IF PAR.Variety_Rendered_Cut = 'V';

    // PAR.PS Item Identification = CND.FG Variety
    PAR.PS_Item_Id = 'FVR';

    // IF PAR.Variety/Rendered/Cut is Rendered
    IF PAR.Variety_Rendered_Cut = 'R';

    // PAR.PS Item Identification = CND.FG Rendered
    PAR.PS_Item_Id = 'FRD';

    // IF PAR.Variety/Rendered/Cut is Cut
    IF PAR.Variety_Rendered_Cut = 'C';

    //?Base/Converted/Fabricated
    CASE;

    // IF PAR.Credit Item Status is yes
    IF PAR.Credit_Item_Status = 'Y';

    //?Setup Base/Converted/Fabricated Credit
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base Credit
    PAR.PS_Item_Id = 'FBC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted Credit
    PAR.PS_Item_Id = 'FCC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated Credit
    PAR.PS_Item_Id = 'FFC';

    //?Setup Base/Converted/Fabricated Credit
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss Credit
    PAR.PS_Item_Id = 'FLC';

    ENDIF;

    //?Base/Converted/Fabricated
    // IF *OTHERWISE
    IF *OTHERWISE;

    //?Setup Base/Converted/Fabricated
    CASE;

    // IF PAR.Converted/Base Item is Base
    IF PAR.Base_Conv_Loss_Item = 'B';

    // PAR.PS Item Identification = CND.FG Base
    PAR.PS_Item_Id = 'FGB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Converted
    IF PAR.Base_Conv_Loss_Item = 'C';

    // PAR.PS Item Identification = CND.FG Converted
    PAR.PS_Item_Id = 'FCV';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Fabricated
    IF PAR.Base_Conv_Loss_Item = 'F';

    // PAR.PS Item Identification = CND.FG Fabricated
    PAR.PS_Item_Id = 'FFB';

    //?Setup Base/Converted/Fabricated
    // IF PAR.Converted/Base Item is Loss
    IF PAR.Base_Conv_Loss_Item = 'L';

    // PAR.PS Item Identification = CND.FG Loss
    PAR.PS_Item_Id = 'FLS';

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

    ENDIF;

   }

  }

  //?FP1054 Output PS Prod Warehouse
  EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(DB1.PS_Production_Warehouse);
  PARAMETER(LCL.Accounting_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Available Ship Date
  CASE;

  // IF WRK.Warehouse Std Chill Time is yes
  IF WRK.Warehouse_Std_Chill_Time = 'Y';

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Warehouse_Chill_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  //?Available Ship Date
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(UPS Clc Avail Shp Dte RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1324967;
  PARAMETER(DB1.Company_Number);
  PARAMETER(PAR.Production_Date);
  PARAMETER(WRK.Fresh_Chilling_Time);
  PARAMETER(DB1.PS_Available_Ship_Date);
  {
   //?USER: Initialize routine

   // WRK.Count USR = CON.*ZERO
   WRK.Count_USR = *ZERO;

   //?USER: Process Data record

   CASE;

   // IF WRK.Count USR EQ PAR.Chilling Time
   IF WRK.Count_USR = PAR.Fresh_Chilling_Time;

   // PAR.PS Available Ship Date = DB1.Post to G/L Date
   PAR.PS_Available_Ship_Date = DB1.Post_to_G_L_Date;

   QUIT;

   ENDIF;

   //?Skip Saturday
   CASE;

   // IF DB1.Day of Week is Saturday
   IF DB1.Day_of_Week = '7';

   //?Skip Saturday
   // IF *OTHERWISE
   IF *OTHERWISE;

   // WRK.Count USR = WRK.Count USR + CON.1
   WRK.Count_USR = WRK.Count_USR + 1;

   ENDIF;

  }

  ENDIF;

  //?Average Piece Weight
  CASE;

  // IF PAR.PS Pieces Planned Prod is GT Zero
  IF PAR.PS_Pieces_Planned_Prod > *ZERO;

  // DB1.PS Avg Piece Wgt = PAR.PS Weight Planned Prod / PAR.PS Pieces Planned Prod *
  DB1.PS_Avg_Piece_Wgt = PAR.PS_Weight_Planned_Prod / PAR.PS_Pieces_Planned_Prod;

  ENDIF;

  EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.PS Lock Status = CND.NOT LOCKED
  DB1.PS_Lock_Status = 'N';

 }

 //?USER: Process Data record

 // PAR.PS Weight Fab Needs NU = DB1.PS Weight Fab Needs NU + PAR.Weight 9.2 USR
 PAR.PS_Weight_Fab_Needs = DB1.PS_Weight_Fab_Needs + PAR.Weight_9_2_USR;

 EXECUTE FUNCTION(UPS Chg Fab Need      CH) TYPE(CHGOBJ) FILE(PDI8CPP)           AC1326365;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Production_Type);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(PAR.PS_Weight_Fab_Needs);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  // DB1.Job Name = JOB.*PROGRAM
  DB1.Job_Name = JOB.*PROGRAM;

 }

}


ENDIF;

ENDIF;

ENDIF;

ENDIF;

