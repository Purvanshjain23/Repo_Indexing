// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDAYXFR
// ?Date: 14.08.2025 Time: 03:33:51
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?***********
//?S019492  AB  09/09/2024  Re-compiled as ARBDCPP is converted to DDL and
//?Logicals with sub-select of fields converted to all fields indexes
//?***********
//?JBB E5262 7/01/16 Add processing in RTVOBJ for Rebills (RB)
//?RMC E2991 1/28/14 for CB set to seq 1 instead of deriving it
//?RMC OMS036 4/4/05 Removed Co from par selector
//?** Add Co# back to par selector per Tim in A/R    1/31/2006 LJB
//?** Put 15.5 passed co# into 3.0 co#          2/1/2006 LJB
//?RMC FP1271 02/07/08 Added aging bucket to workf for sql tableview
//?LJB 6/07/2010 C000789 Rtv seq# from last digit of inv# (CBs only)
// PAR.Company Number = PAR.Company Number Pass   USR
PAR.Company_Number = PAR.Company_Number_Pass_USR;

EXECUTE FUNCTION(RTV Crt CB by Cust WK  RT) TYPE(RTVOBJ) FILE(ARBDCPP)          AC1477702;
PARAMETER(PAR.Company_Number);
{
 //?USER: Initialize routine

 // Call program Rtv Plant Co/Org      XF.
 CALL PROGRAM(Rtv Plant Co/Org      XF) ('PMOVXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(NLL.Plant_Company_Sts);
 PARAMETER(WRK.Company_Organization);

 //?***** Change Log and Comments
 DO;

 //?RMC E2991 1/28/14 for CB use Orig Inv for CB instead of deriving inv #
 //?6/14/10 LJB  C000789  Daily's can be 1 or 2 digit sequence numbers
 //?       Determine if this is Daily's or Seaboard/TF/HPB
 //?6/04/10 LJB  C000789  Extract seq# from last number of invoice
 //?       (CBs only) This is the A/R Detail seq# as of 6/2010
 //?4/10/09 SZ   Added call to rtv the Chgback grouping code
 ENDDO;

 //?USER: Process Data record

 //?** If Company # is passed in then only process matching
 //?**   company records, otherwise, select all        1/31/2006 LJB
 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?** Skip if db1 co# doesn't match par co#
 CASE;

 // IF PAR.Company Number is not equal to zero
 IF PAR.Company_Number <> *ZERO;

 CASE;

 // IF DB1.Company Number NE PAR.Company Number
 IF DB1.Company_Number <> PAR.Company_Number;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?06/23/2016 JBB E5262 - Add Rebills to selected records
 //?** Create record for selected records  06/23/2016 JBB  E5262
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF DB1.Remaining Balance Due is not equal to zeros
 IF DB1.Remaining_Balance_Due <> *ZERO;

 // AND DB1.Invoice Suffix is Charge Backs
 AND ( DB1.Invoice_Suffix = 'CB';

 // OR DB1.Invoice Suffix is Rebill
 OR DB1.Invoice_Suffix = 'RB' );

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(PAR.AR_Customer_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV CB Rpt Grouping    RT) TYPE(RTVOBJ) FILE(PDNFREP)          AC1917259;
 PARAMETER(DB1.Salesperson_Code);
 PARAMETER(LCL.CB_Grouping_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.Sequence Number = CON.1
 WRK.Sequence_Number = 1;

 EXECUTE FUNCTION(Create A/R Aged CB by Nam) TYPE(CRTOBJ) FILE(PDLOCPP)          AC1477717;
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.AR_Customer_Name);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(WRK.Sequence_Number);
 PARAMETER(DB1.Order_Number_Ref);
 PARAMETER(DB1.Due_Date);
 PARAMETER(DB1.Salesperson_Code);
 PARAMETER(LCL.CB_Grouping_Code);
 PARAMETER(*BLANK);
 ENDIF;

 ENDIF;

}


