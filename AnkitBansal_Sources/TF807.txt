      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF807
      * TITLE:       Retrieve Next Invoice Charge Number
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/24/05
      *
      * FUNCTION:  This function retrieves the next 'system-assigned' Invoice Charge Number
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 99/99/99
      *
      /EJECT
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Parms
      *
     D xxicsn          s              7  0
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      ****************************************************************
      * Data areas
      ****************************************************************
      *
      * Definition for external data area 'DATFICSN' for assigning the next
      * Invoice Charge number.
      *
     Dnexticsn         s              7  0 dtaara(datficsn)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C     *lock         in        nexticsn
     C                   add       1             nexticsn
     C                   z-add     nexticsn      xxicsn
     C                   out       nexticsn
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxicsn
      *
     C                   endsr
      /EJECT
