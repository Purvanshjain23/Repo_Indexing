      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP4070
      * TITLE:       Specify Sales Movement BOL to Print
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     10/11/04
      *
      * FUNCTION:    Prints Bill of Ladings for Scheduled Sales Movements.
      *
      *              There are 2 'versions': full and restricted. The incoming parm
      *              controls the version.
      *
      *              This program is called from:
      *                  1) Work with Sales
      *                  2) Work with Scheduled Sales
      *
      * This is a clone of HP470. It is used to generate the new BOL form.
      * Once everybody is using the new form, HP470 will be replaced with HP4070.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/21/13  LeAnne Ramsey (E2831)
      *           Added MTech Reference as a parm on the calls to:
      *               HP538-Select Trucker
      *
      * 07/10/20  Danny Nguyen  (P408-Optima BOL Premise ID)
      *           Added option to enter email address (optional) to send BOL as PDF
      *           via ESEND. Will set email address within Cmd_StringDS.
      *           Removed 'cmd' as array table & will now use 'Cmd_String' with
      *           QCMDEXC prototype.
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4070   cf   e             workstn infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp009    if   e           k disk
      *    Business office
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp046    if   e           k disk
      *    Trucker
      *
      *
     Fhsp066    if   e           k disk
      *    Sales type
      *
      *
     Fhsp084    if   e           k disk
      *    Sales movement header
      *
      *
     Fhsp109    if   e           k disk
      *    Transportation offices
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET   '
     D scrn1           c                   'SCRN1 '
     D edit1           c                   'EDIT1 '
     D exit            c                   'EXIT  '
P408 D quote           c                   const(X'7D')                         Single Quote
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *  P408 - Commented out & will use 'cmdstring'.
      *---------------------------------------------------------------
P408 D** cmd             s              1    dim(80) ctdata perrcd(80)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * P408 - Use for QCMDEXC.
P408 D Cmd_String      s            512a   Inz
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      *
      * Control/flag fields
      *
     D termfl          s              1
      *
      *
      * Work fields for date manipulation
      *
     D wkcymdiso       s               d   datfmt(*iso)
      *
      *
      * Parm fields
      *
     D xxreprint       s              1
     D version         s                   like(d1version)
      *
     D xxmvsn          s                   like(shmvsn)
     D xxaist          s              1
      *
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
      *
     D xxstcd          s                   like(ststcd)
     D xxstds          s                   like(ststds)
      *
     D xxticd          s                   like(titicd)
     D xxtinm          s                   like(titinm)
     D xxmtechref      s                   like(timtechref)
      *
     D xxtocd          s                   like(totocd)
     D xxtonm          s                   like(totonm)
      *
     D xxalphcell      s              2
     D xxalphfscd      s              5
     D xxalphmvsn      s              7
     D xxalphcvno      s              8
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
     D infncd          s             10
     D inbobo          s              5
     D indvfl          s              1
     D inbofl          s              1
     D oubobo          s              5
     D oubods          s             30
     D oudvcd          s              5
     D secfl           s              1
     D oubofl          s              1
     D ourmfl          s              1
      *
      *
     D oualph          s             40
     D ouajd           s                   like(shcvno)
     D inat1           s              3
     D inajd           s                   like(shcvno)
     D jdefl           s              1
     D incocd          s              3
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *  P408 - Do not default 'length'. Commented out & add it to QCMDEXC Prototype.
      *
P408 D** length          s             15  5 inz(80)
P408 D** cmdsbm          s             80
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * P408 - Data Structure to Build 'cmd' for QCMDEXC.
      *---------------------------------------------------------------
      *
      ** SBMJOB CMD(CALL PGM(HP4070CL) PARM('emailaddress')) JOB(SALEBOL) JOBQ(__________)
P408 D Cmd_StringDS    ds                  inz
  |  D  string1                1     29    inz('SBMJOB CMD(CALL PGM(HP4070CL)')
  |  D  string2               30     35    inz(' PARM(')
  |  D  str_quote1            36     36
  |  D  str_email             37     86
  |  D  str_quote2            87     87
  |  D  string3               88    103    inz(')) JOB(SALEBOL) ')
  |  D  string4              104    108    inz('JOBQ(')
  |  D  str_jobq             109    118
P408 D  string5              119    120    inz(')')
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldtocd                 1      5
     D  ldfcymd                6     13  0
     D  ldtcymd               14     21  0
     D  ldfscd                27     31  0
     D  ldcell                32     33  0
     D  ldcvno                34     41  0
     D  ldstcd                42     46
     D  ldticd                47     51
     D  ldmvsn                52     58  0
     D  ldversion             59     59
     D  ldreprint             60     60
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      ****************************************************************
      * PROTOTYPES
      ****************************************************************
      *
      * P408 - Command Execute Prototype.
P408 D ExcCmd          PR                  ExtPgm('QCMDEXC')
  |  D  CmdString                   512a   Options(*VARSIZE) Const
P408 D  CmdLength                    15p 5 Const
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
     C                   movel     set1          routne
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * If the user failed the initial security checks, set on indicator to
      * protect input fields and invalidate function keys.
      *
     C                   if        termfl = yes
     C                   seton                                        99
     C                   endif
      *
      * Write the error messages from the error arrays to the error
      * message subfile
      *
     C                   exsr      $wrmsg
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4070k1
     C                   write     hp4070ec
     C                   exfmt     hp4070r1
      *
      *
      * Clear the messages from the message data structures and
      * program message queue
      *
     C                   exsr      $clmsg
      *
      *
      * Get user's entry and set next routine
      *
     C                   select
     C                   when      *in03 = *on  or                              F3-exit
     C                             *in12 = *on
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
      *
     C                   when      *in20 = *on                                  F20-wrksplf
     C                   call      'QEZOUTPT'                                       API
     C                   eval      routne = scrn1
     C                   other
      *
     C                   movel     edit1         routne
     C                   endsl
      *
     c                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit screen 1 input fields
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   1) movement number
      *        -OR-
      *   1) transportation office (required)
      *   2) from/to dates         (required)
      *   3) sales type            (required)
      *   4) cell                  (optional)
      *   5) farm site             (optional)
      *   6) customer number       (optional)
      *   7) trucker               (optional)
      *
     C                   select
     C                   when      d1mvsn <> 0
     C                   exsr      $mvsn
     C                   other
      *
      * Required selections
     C                   exsr      $tocd
     C                   exsr      $fmdy
     C                   exsr      $tmdy
      * Optional
     C                   exsr      $stcd
     C                   exsr      $cell
     C                   exsr      $fscd
     C                   exsr      $cvno
     C                   exsr      $ticd
     C                   endsl
      *
      * You user cannot elect to run more than 1 copy. Issue message if
      * user has elected to run multiple copies.
      *
     C                   if        xxcopy > 1 and error < maxmsg
     C                   add       1             error
     C                   movel     'HS09134'     mgid(e)
     C                   endif
      *
      *
      * If there are no errors and the user took F8=submit, process the request.
      *
     C                   if        error = 0 and *in08 = *on
     C                   exsr      $proc1
     C                   endif
      *
     C                   movel     scrn1         routne
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Movement
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *  2) must be valid in master file
      *  3) must have a Scheduled status
      *
     C     $mvsn         begsr
      *
     C                   select
     C                   when      d1mvsn < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1mvsn        chain     hsp084                             92
      *
     C                   select
     C                   when      *in92 = *on
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00709'     mgid(e)
     C                   clear                   mgw
     C                   movel     d1mvsn        xxalphmvsn
     C                   movea     xxalphmvsn    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   when      shmscd <> 'SC'
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00728'     mgid(e)
     C                   clear                   mgw
     C                   movel     d1mvsn        xxalphmvsn
     C                   movea     xxalphmvsn    mgw(1)
     C                   movea     shmscd        mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endsl
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Sales Type
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be valid in master file
      *
     C     $stcd         begsr
      *
     C                   move      *blank        d1stds
      *
     C                   select
     C                   when      d1stcd = *blank
     C                   other
      *
     C     d1stcd        chain     hsp066                             92
     C                   if        *in92 = *off                                 If good type
     C                   movel     ststds        d1stds
     C                   else
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00635'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1stcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If good type
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Transporation Office
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be valid in master file
      *
     C     $tocd         begsr
      *
     C                   move      *blank        d1tonm
      *
     C                   select
     C                   when      d1tocd = *blank
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
     C                   other
      *
     C     d1tocd        chain     hsp109                             92
     C                   if        *in92 = *off                                 If hit
     C                   move      totonm        d1tonm
     C                   else
      *
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01196'     mgid(e)
     C                   clear                   mgw
     C                   movea     d1tocd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate From Date
      *----------------------------------------------------------------
      *
      * Validations:
      *       1) cannot be zero
      *       2) cannot be negative
      *       3) must be a valid date
      *
     C     $fmdy         begsr
      *
     C                   z-add     0             ldfcymd
      *
     C                   select
     C                   when      d1fmdy = 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1fmdy < 0
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1fmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1fmdy        wkcymdiso
     C                   move      wkcymdiso     ldfcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate To Date
      *----------------------------------------------------------------
      *
      * Validations:
      *       a) cannot be zero
      *       b) cannot be negative
      *       c) must be a valid date
      *       d) cannot be earlier than from date
      *
     C     $tmdy         begsr
      *
     C                   z-add     0             ldtcymd
      *
     C                   select
     C                   when      d1tmdy = 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1tmdy < 0
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1tmdy                 92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip the date from MMDDYY to CCYYMMDD.
      *
     C     *mdy          move      d1tmdy        wkcymdiso
     C                   move      wkcymdiso     ldtcymd
     C                   endif                                                  If bad date
     C                   endsl
      *
      *
      * To date cannot be earlier than from date.
      *
     C                   if        *in32 = *off and
     C                             *in33 = *off and
     C                             ldtcymd < ldfcymd
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09009'
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Cell
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *
     C     $cell         begsr
      *
     C                   if        d1cell < 0
     C                   seton                                        30
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Farm Site
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) cannot be negative
      *  2) must exist in master file
      *  3) must match Transportation Office
      *  4) must match Cell if a Cell is keyed
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
      *
     C                   when      d1fscd < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move(p)   fsfsnm        d1fsnm
      *
      * Must match Transportation Office
      *
     C                   if        fstocd <> d1tocd                             If tran office
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS01218'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     fstocd        mgw(6)
     C                   movea     d1tocd        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If tran office
      *
      *
      * Must match cell the user has keyed...if he keyed one
      *
     C                   if        d1cell <> 0 and                              If cell mismatch
     C                             fscell <> d1cell
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00705'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   move      fscell        xxalphcell
     C                   movea     xxalphcell    mgw(6)
     C                   move      d1cell        xxalphcell
     C                   movea     xxalphcell    mgw(8)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If cell mismatch
      *
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Customer Number
      *---------------------------------------------------------------
      *
     C     $cvno         begsr
      *
     C                   eval      d1cnam = *blank
      *
     C                   select
     C                   when      d1cvno <> 0
     C                   z-add     d1cvno        inajd
     C                   eval      inat1 = 'C'
     C                   exsr      $jdev
      *
     C                   if        jdefl = yes
     C                   seton                                        34
     C                   else
     C                   movel     oualph        d1cnam
      *
      * If this is the Restricted verion and both Customer and Sales Type are
      * entered and valid, perform another edit.
      *
     C                   if        version = 'R' and                            If SBD market
     C                             d1stcd = 'MRKTS' and d1cvno = 360516
     C                   seton                                        3437
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00885'     mgid(e)
     C                   clear                   mgw
     C                   movea     'PRINT'       mgw(1)
     C                   movea     d1stcd        mgw(7)
     C                   movel     d1cvno        xxalphcvno
     C                   movea     xxalphcvno    mgw(12)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If SBD market
      *
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Validate Trucker
      *---------------------------------------------------------------
      *
     C     $ticd         begsr
      *
     C                   move      *blank        d1tinm
      *
     C                   select
     C                   when      d1ticd = *blank
     C                   other
      *
     C     d1ticd        chain     hsp046                             92
     C                   if        *in92 = *off                                 If found
     C                   move      titinm        d1tinm
     C                   else
      *
     C                   seton                                        38
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00235'
     C                   clear                   mgw
     C                   movea     d1ticd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If found
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   move      xxreprint     ldreprint
     C                   move      version       ldversion
      *
     C                   if        d1mvsn <> 0
     C                   z-add     d1mvsn        ldmvsn
     C                   move      *blank        ldtocd
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtcymd
     C                   z-add     0             ldfscd
     C                   z-add     0             ldcell
     C                   z-add     0             ldcvno
     C                   move      *blank        ldstcd
     C                   move      *blank        ldticd
     C                   else
      *
     C                   z-add     0             ldmvsn
     C                   move      d1tocd        ldtocd
     C                   z-add     d1fscd        ldfscd
     C                   z-add     d1cell        ldcell
     C                   z-add     d1cvno        ldcvno
     C                   move      d1stcd        ldstcd
     C                   move      d1ticd        ldticd
     C                   endif
      *
     C                   out       lda
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
      * P408 - Commented Out. Use QCMDEXC Prototype to Submit Job.
P408 C**                 movea     xxjobq        cmd(50)
  |  C**                 movea     cmd           cmdsbm
  |  C**                 call      'QCMDEXC'
  |  C**                 parm                    cmdsbm
  |  C**                 parm                    length
  |   *
  |   * P408 - Build 'Cmd_StringDS' data structure before calling QCMDEXC API.
  |  C                   eval      str_quote1 = quote
  |  C                   eval      str_email = D1EMAIL
  |  C                   eval      str_quote2 = quote
  |  C                   eval      str_jobq = xxjobq
  |  C                   eval      Cmd_String = Cmd_StringDS
  |   *
P408 C                   Callp     ExcCmd(Cmd_String : %len(%trim(Cmd_String)))
      *
      * Issue standard submission message
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09003'     mgid(e)
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Prompts on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Movement
     C                   select
     C                   when      fld = 'D1MVSN'
     C                   call      'HP5050'
     C                   parm                    xxreprint
     C                   parm      0             xxmvsn
     C                   seton                                        59
     C                   if        xxmvsn <> 0
     C                   z-add     xxmvsn        d1mvsn
     C                   endif
      *
      * Sales type
      *
     C                   when      fld = 'D1STCD'
     C                   call      'HP544'
     C                   parm      *blank        xxstcd
     C                   parm      *blank        xxstds
     C                   seton                                        57
     C                   if        xxstcd <> *blank
     C                   movel     xxstcd        d1stcd
     C                   movel     xxstds        d1stds
     C                   endif
      *
      *
      * Transportation Office
      *
     C                   when      fld = 'D1TOCD'
     C                   call      'HP5026'
     C                   parm      ' '           xxaist
     C                   parm      *blank        xxtocd
     C                   parm      *blank        xxtonm
     C                   seton                                        51
     C                   if        xxtocd <> *blank
     C                   movel     xxtocd        d1tocd
     C                   movel     xxtonm        d1tonm
     C                   endif
      *
      * Farm Site
      *
     C                   when      fld = 'D1FSCD'
     C                   call      'HP5040'
     C                   parm      *blank        xxaist
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   seton                                        56
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   movel     xxfsnm        d1fsnm
     C                   endif
      *
      * JDE customer number
      * (the call requires a Company; so, retrieve a business office to get a company)
      *
     C                   when      fld = 'D1CVNO'
      *
     C     *loval        setll     hsp009
     C                   read      hsp009                                 92
     C                   if        *in92 = *off
     C                   eval      inat1 = 'C'
     C                   call      'HP513'
     C                   parm                    incocd                         COMPANY
     C                   parm                    inat1                          SEARCH TYPE
     C                   parm      *zero         ouajd                          NUMBER
     C                   parm      *blank        oualph                         NAME
     C                   endif
      *
     C                   seton                                        54
     C                   if        ouajd <> 0
     C                   z-add     ouajd         d1cvno
     C                   movel     oualph        d1cnam
     C                   endif
      *
      * Trucker
     C                   when      fld = 'D1TICD'
     C                   call      'HP538'
     C                   parm      *blank        xxaist
     C                   parm      *blank        xxticd
     C                   parm      *blank        xxtinm
     C                   parm      *blank        xxmtechref
     C                   seton                                        58
     C                   if        xxticd <> *blank
     C                   move      xxticd        d1ticd
     C                   move      xxtinm        d1tinm
     C                   endif
     C                   other
      *
      * F4 not valid for this field; issue message.
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09011'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve JDE customer name
      *----------------------------------------------------------------
      *
     C     $jdev         begsr
      *
     C                   move      no            jdefl
      *
     C                   call      'HPJDEV'
     C                   parm                    mgi                            MSG ID'S
     C                   parm                    mgd                            MSG DATA FLD
     C                   parm                    error                          # ERR MSGS
     C                   parm                    inajd                          JDE addR #
     C                   parm                    inat1                          JDE addR TYP
     C                   parm                    jdefl                          error FLAG
     C                   parm      *blank        oualph                         JDE NAME
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Exit
      *----------------------------------------------------------------
      *
     C     $exit         begsr
      *
     C                   seton                                        lr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Security Program
      *---------------------------------------------------------------
      *
     C     $sec          begsr
      *
     C                   call      'HPSEC  '
      **** IN
     C                   parm                    mgid                           MSGID ARRAY
     C                   parm                    mgdt                           MSGDTA DATA
     C                   parm                    error                          # OF errorS
     C                   parm      sdpgm         infncd                         FUNC CODE
     C                   parm                    inbobo                         BO CODE
     C                   parm                    indvfl                         CHECK DIV?
     C                   parm                    inbofl                         CHECK B.O.?
      **** OUT
     C                   parm      *blank        oubobo                         BO CODE
     C                   parm      *blank        oubods                         BO DESC.
     C                   parm      *blank        oudvcd                         DIV CODE
     C                   parm                    secfl                          SEC ERR FLAG
     C                   parm                    oubofl                         B.O. ERR FLG
     C                   parm                    ourmfl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxreprint
     C                   parm                    version
     C                   parm                    d1version
      *
     C                   if        xxreprint = yes
     C                   seton                                        98
     C                   endif
      *
      * Initialize LDA fields
      *
     C                   z-add     0             ldfcymd
     C                   z-add     0             ldtcymd
     C                   z-add     0             ldmvsn
      *
     C                   z-add     0             ldfscd
     C                   z-add     0             ldcell
     C                   z-add     0             ldcvno
      *
     C                   move      *blank        ldtocd
     C                   move      *blank        ldticd
     C                   move      *blank        ldstcd
     C                   move      *blank        ldversion
      *
      *
      * Initialize LDA fields for printing
      *
     C                   move      no            ldhold
     C                   z-add     1             ldcopy
     C                   movel     ldoutu        ldoutq
     C                   movel(p)  'PRIORITY'    xxjobq
     C                   movel     no            xxnite
      *
      *
      * Get this function's number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        xxcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        xxcopy = 0
     C                   z-add     1             xxcopy
     C                   endif
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      * Execute the security routine to determine the user's authorizations.
      * If there are errors, set the terminal flag to yes.
      *
     C                   exsr      $sec
      *
     C                   if        secfl = yes
     C                   movel     yes           termfl
     C                   endif
      *
      *
      * Default System Date in the From/To dates
      *
     C                   z-add     udate         d1fmdy
     C                   z-add     udate         d1tmdy
      *
     C                   endsr
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      * P408 - Commented out. Will not use 'cmd' table but 'Cmd_StringDS'.
      *****************************************************************
      ** CMD TABLE
      ** SBMJOB CMD(CALL PGM(HP4070CL)) JOB(SALEBOL) JOBQ(__________)
