// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKRCXFR
// ?Date: 14.08.2025 Time: 02:52:34
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?H16853 ISE 11/09/2020 - Recompiled due to change in Buy Order Number
//?PK0359 -- 1/21/2002  Added Sire Line fields to workfile
//?PK0359 -- 2/21/2002  Remove Sire Line fields from workfile
//?02/26/02 PKD Added repeat for date range.
// LCL.Date USR = PAR.TH Kill Date
LCL.Date_USR = PAR.TH_Kill_Date;

// DOW LCL.Date USR LE PAR.Date To   USR
DOW LCL.Date_USR <= PAR.Date_To_USR;

EXECUTE FUNCTION(Bld Rest Time Wrkf    RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1218799;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(LCL.Date_USR);
PARAMETER(PAR.TH_Source_Type);
PARAMETER(PAR.Pen_Number);
PARAMETER(PAR.TH_Schedule_Kill_Shift);
{
 //?USER: Process Data record

 CASE;

 // IF PAR.Schedule Kill Shift   USR EQ WRK.Blank USR
 IF PAR.Schedule_Kill_Shift_USR = WRK.Blank_USR;

 // OR PAR.Schedule Kill Shift   USR EQ DB1.TH Schedule Kill Shift
 OR PAR.Schedule_Kill_Shift_USR = DB1.TH_Schedule_Kill_Shift;

 CASE;

 // IF PAR.TH Source Type EQ WRK.Blank USR
 IF PAR.TH_Source_Type = WRK.Blank_USR;

 // OR DB1.TH Source Type EQ PAR.TH Source Type
 OR DB1.TH_Source_Type = PAR.TH_Source_Type;

 CASE;

 // IF PAR.TH Tattoo Number EQ WRK.Zero USR
 IF PAR.TH_Tattoo_Number = WRK.Zero_USR;

 // OR DB1.TH Tattoo Number EQ PAR.TH Tattoo Number
 OR DB1.TH_Tattoo_Number = PAR.TH_Tattoo_Number;

 //?Suppress rcd  if tattoo is completely held over
 CASE;

 // IF DB1.TH Head Received is *Zeros
 IF DB1.TH_Head_Received = *ZERO;

 // AND DB1.TH Yard Deads is Zero
 AND DB1.TH_Yard_Deads = *ZERO;

 // AND DB1.TH Dead On Arrival is *Zeros
 AND DB1.TH_Dead_On_Arrival = *ZERO;

 // AND DB1.TH Shift Held Over is Not Yes
 AND DB1.TH_Shift_Held_Over = *BLANK/'N';

 //?If TATTOO is Held over until tomorrow's kill
 CASE;

 // IF DB1.TH Held Over is *Zeros
 IF DB1.TH_Held_Over = *ZERO;

 //?If TATTOO is Held over until tomorrow's kill
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Bld Rest Time HoldOvr RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1219916;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.Schedule_Kill_Shift_USR);
 {
  //?USER: Process Data record

  // LCL.W Held Over Status = CND.Held over -
  LCL.W_Held_Over_Status = 'H-';

  // WRK.TH Yard Deads = DB1.TH Yard Deads
  WRK.TH_Yard_Deads = DB1.TH_Yard_Deads;

  // WRK.TH Shift Held Over Head = DB1.TH Shift Held Over Head
  WRK.TH_Shift_Held_Over_Head = DB1.TH_Shift_Held_Over_Head;

  EXECUTE FUNCTION(Rtv/Crt Rest Time EvalRT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1218698;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(PAR.Pen_Number);
  PARAMETER(DB1.TH_Group_Reference);
  PARAMETER(DB1.TH_Dead_On_Arrival);
  PARAMETER(WRK.TH_Yard_Deads);
  PARAMETER(DB1.TH_Avg_Live_Wgt);
  PARAMETER(DB1.TH_Source_Type);
  PARAMETER(DB1.TH_HPS_Movement_Ref_#);
  PARAMETER(PAR.TH_Schedule_Kill_Shift);
  PARAMETER(DB1.TH_Shift_Held_Over);
  PARAMETER(DB1.TH_HPS_Farm_Site);
  PARAMETER(WRK.TH_Shift_Held_Over_Head);
  PARAMETER(LCL.W_Held_Over_Status);
  PARAMETER(PAR.Kill_Date_Usr);
  PARAMETER(PAR.Schedule_Kill_Shift_USR);
  {
   //?USER: Initialize routine

   //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
   //?Get the MTech Live Yes or No
   DO;

   //?Mtech Live Yes or no
   // Call program Rtv Company Values    XF.
   CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER('MTECHLIVE');
   PARAMETER(WRK.System_Value_Alpha_USR);

   // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
   LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

   ENDDO;

   //?USER: Process Data record

   EXECUTE FUNCTION(Rtv Pen Type          RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1170335;
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(WRK.Pen_Type);
   {
    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   CASE;

   // IF WRK.Pen Type is Resale
   IF WRK.Pen_Type = 'R';

   // IF *OTHERWISE
   IF *OTHERWISE;

   CASE;

   // IF PAR.Pen Number is Pen Number is Empty
   IF PAR.Pen_Number = *BLANK;

   // OR PAR.Pen Number EQ DB1.Pen Number
   OR PAR.Pen_Number = DB1.Pen_Number;

   CASE;

   // IF DB1.TD Drive Time is Not Zero
   IF DB1.TD_Drive_Time <> *ZERO;

   EXECUTE FUNCTION(Rtv Scale dt,tm       RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218699;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   PARAMETER(DB1.Pen_Number);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?Get the wgt for the Tt without using the pen/or kill dt (ie.xfer,hld over)
   CASE;

   // IF WRK.TST Wgt Date EQ WRK.Zero USR
   IF WRK.TST_Wgt_Date = WRK.Zero_USR;

   EXECUTE FUNCTION(Rtv Scale dt,tm,No PenRT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218932;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?Drop the kill date ( may be a held over ttt)
   CASE;

   // IF WRK.TST Wgt Date EQ WRK.Zero USR
   IF WRK.TST_Wgt_Date = WRK.Zero_USR;

   EXECUTE FUNCTION(Rtv Scale dt,tm,No KdtRT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218936;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

   ENDIF;

   // WRK.TD Pen Head = DB1.TD Pen Head
   WRK.TD_Pen_Head = DB1.TD_Pen_Head;

   //?If Shift Held Over AND Next day held over
   CASE;

   // IF DB1.TD Held Over is greater than 0
   IF DB1.TD_Held_Over > *ZERO;

   // AND PAR.TH Shift Held Over is Yes
   AND PAR.TH_Shift_Held_Over = 'Y';

   //?Combine the hd held over with hd rcvd here, we want the hd to be
   //?accounted for in this shift, because the H- appears on Shift 2
   // WRK.TD Pen Head = DB1.TD Pen Head + DB1.TD Held Over
   WRK.TD_Pen_Head = DB1.TD_Pen_Head + DB1.TD_Held_Over;

   ENDIF;

   CASE;

   // IF LCL.MTech Live Yes or No is No MTech not Live
   IF LCL.MTech_Live_Yes_or_No = 'N';

   // Call program Z1v HPS Grp from Mvmt UP.
   CALL PROGRAM(Z1v HPS Grp from Mvmt UP) ('HP258');
   PARAMETER(WRK.Return_Code_USR);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.W_Group_Reference);

   // Call program Z1v HPS LdTm,TrvTm,Tp UP.
   CALL PROGRAM(Z1v HPS LdTm,TrvTm,Tp UP) ('HP257');
   PARAMETER(WRK.Return_Code_USR);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.HPE_Load_Type);
   PARAMETER(WRK.HPS_Shipped_In_Time);
   PARAMETER(WRK.HPS_Shipped_Out_Time);
   PARAMETER(WRK.HPS_Shipped_In_Date);
   PARAMETER(WRK.HPS_Shipped_Out_Date);

   //?review and found that not all of these fields going into HPE
   //?were being populated due to changes to HPS and decission to
   //?to send the data to HPE as blank or zero
   // IF LCL.MTech Live Yes or No is Yes MTech is Live
   IF LCL.MTech_Live_Yes_or_No = 'Y';

   //?Meeting with Purva and decission was to get information
   //?from the delivery tracking when live with mtech
   EXECUTE FUNCTION(Rtv Tracking Info     RT) TYPE(RTVOBJ) FILE(PLAFCPP)           AB1314040;
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.DT_Hog_Group_Reference);
   PARAMETER(WRK.DT_Load_Type);
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: CND);

    QUIT;

   }

   // WRK.W Group Reference = WRK.DT Hog Group Reference
   WRK.W_Group_Reference = WRK.DT_Hog_Group_Reference;

   // WRK.HPE Load Type = WRK.DT Load Type
   WRK.HPE_Load_Type = WRK.DT_Load_Type;

   // WRK.HPS Shipped In Time = CON.*ZERO
   WRK.HPS_Shipped_In_Time = *ZERO;

   // WRK.HPS Shipped Out Time = CON.*ZERO
   WRK.HPS_Shipped_Out_Time = *ZERO;

   // WRK.HPS Shipped In Date = CON.*ZERO
   WRK.HPS_Shipped_In_Date = *ZERO;

   // WRK.HPS Shipped Out Date = CON.*ZERO
   WRK.HPS_Shipped_Out_Date = *ZERO;

   ENDIF;

   // Call program Rtv Stress Pens Only  XF.
   CALL PROGRAM(Rtv Stress Pens Only  XF) ('PLPJXFR');
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(LCL.Stress_Market_Type);

   EXECUTE FUNCTION(Crt W001 Rest Time Evl IF) TYPE(EXCINTFUN)                     AB1219950;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(PAR.Kill_Date_Usr);
   PARAMETER(DB1.TD_Sequence_Number);
   PARAMETER(WRK.W_Sequence_Number);
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(WRK.TD_Pen_Head);
   PARAMETER(DB1.TD_Drive_Time);
   PARAMETER(DB1.TD_Drive_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   PARAMETER(PAR.TH_Source_Type);
   PARAMETER(PAR.TH_Schedule_Kill_Shift);
   PARAMETER(WRK.Blank_USR);
   PARAMETER(LCL.W_Stress_Market_Type);
   PARAMETER(PAR.W_Held_Over_Status);
   PARAMETER(PAR.TH_Shift_Held_Over_Head);
   PARAMETER(DB1.TD_Held_Over);
   PARAMETER(PAR.TH_Yard_Deads);
   PARAMETER(PAR.TH_Avg_Live_Wgt);
   PARAMETER(PAR.TH_Dead_On_Arrival);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.W_Group_Reference);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   PARAMETER(*ZERO);
   PARAMETER(WRK.HPE_Load_Type);
   PARAMETER(WRK.HPS_Shipped_In_Date);
   PARAMETER(WRK.HPS_Shipped_In_Time);
   PARAMETER(WRK.HPS_Shipped_Out_Date);
   PARAMETER(WRK.HPS_Shipped_Out_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.W Sequence Number = CON.1
     PAR.W_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
     PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

     QUIT;

    }

    //?**** Calc Wait Time Diff
    // LCL.TD Drive Time = PAR.TD Drive Time
    LCL.TD_Drive_Time = PAR.TD_Drive_Time;

    CASE;

    // IF PAR.TD Drive Date NE PAR.TST Wgt Date
    IF PAR.TD_Drive_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TD Drive Date - PAR.TST Wgt Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TD_Drive_Date PAR.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.TD Drive Time = LCL.TD Drive Time + LCL.Usr Elapsed hours
    LCL.TD_Drive_Time = LCL.TD_Drive_Time + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.Time Diff Usr = LCL.TD Drive Time - PAR.TST Wgt Time *HHMMSS
    LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time PAR.TST_Wgt_Time 'HS');

    //?****
    // LCL.W Load Time Difference = CON.*ZERO
    LCL.W_Load_Time_Difference = *ZERO;

    // LCL.W Travel Time Difference = CON.*ZERO
    LCL.W_Travel_Time_Difference = *ZERO;

    //?**** Calc Load Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped In Time is Entered
    IF PAR.HPS_Shipped_In_Time <> 0;

    // AND PAR.HPS Shipped Out Time is Entered
    AND PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_End_USR = 100 * PAR.HPS_Shipped_Out_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped In Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_In_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.HPS Shipped In Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.HPS_Shipped_In_Date;

    // LCL.Number 1 USR = PAR.HPS Shipped Out Date - PAR.HPS Shipped In Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.HPS_Shipped_Out_Date PAR.HPS_Shipped_In_Date 'DY'
    1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Load Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Load_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?**** Calc travel Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped Out Time is Entered
    IF PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = PAR.TST Wgt Time
    LCL.Time_End_USR = PAR.TST_Wgt_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_Out_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.TST Wgt Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TST Wgt Date - PAR.HPS Shipped Out Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TST_Wgt_Date PAR.HPS_Shipped_Out_Date 'DY' 1111111
    'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Travel Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Travel_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?****
    EXECUTE FUNCTION(Crt W001 Rest Time Eval) TYPE(CRTOBJ) FILE(PKEMCPP)            AB1218758;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    PARAMETER(PAR.Pen_Company_Number);
    PARAMETER(PAR.Pen_Number);
    PARAMETER(PAR.TD_Pen_Head);
    PARAMETER(PAR.TD_Drive_Time);
    PARAMETER(PAR.TD_Drive_Date);
    PARAMETER(PAR.TST_Wgt_Date);
    PARAMETER(PAR.TST_Wgt_Time);
    PARAMETER(PAR.TH_Source_Type);
    PARAMETER(PAR.TH_Schedule_Kill_Shift);
    PARAMETER(PAR.Tattoo_Status);
    PARAMETER(PAR.W_Stress_Market_Type);
    PARAMETER(PAR.W_Held_Over_Status);
    PARAMETER(PAR.W_Shift_Held_Over_Head);
    PARAMETER(PAR.W_Held_Over_Head);
    PARAMETER(PAR.W_Yard_Dead);
    PARAMETER(PAR.TH_Avg_Live_Wgt);
    PARAMETER(PAR.TH_Dead_On_Arrival);
    PARAMETER(PAR.TH_HPS_Movement_Ref_#);
    PARAMETER(PAR.W_Group_Reference);
    PARAMETER(PAR.W_Farm_Site);
    PARAMETER(LCL.Time_Diff_Usr);
    PARAMETER(LCL.W_Load_Time_Difference);
    PARAMETER(LCL.W_Travel_Time_Difference);
    PARAMETER(PAR.HPE_Load_Type);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(DB1.W_Sequence_Number);
     {
      //?USER: Processing if Data record not found

      // PAR.W Sequence Number = CON.1
      PAR.W_Sequence_Number = 1;

      //?USER: Process Data record

      // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
      PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

      QUIT;

     }

    }

   }

   // PAR.TH Yard Deads = CON.*ZERO
   PAR.TH_Yard_Deads = *ZERO;

   //?Create S+ if Shift_1_only not selected
   CASE;

   // IF PAR.Schedule Kill Shift   USR is Shift 2
   IF PAR.Schedule_Kill_Shift_USR = '2';

   // OR PAR.Schedule Kill Shift   USR EQ WRK.Blank USR
   OR PAR.Schedule_Kill_Shift_USR = WRK.Blank_USR;

   //?Create S+ record for shift 2
   CASE;

   // IF PAR.TH Shift Held Over Head is Not Zero
   IF PAR.TH_Shift_Held_Over_Head <> *ZERO;

   EXECUTE FUNCTION(Crt W001 Rest Time Evl IF) TYPE(EXCINTFUN)                     AB1219950;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(PAR.Kill_Date_Usr);
   PARAMETER(DB1.TD_Sequence_Number);
   PARAMETER(WRK.W_Sequence_Number);
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(*ZERO);
   PARAMETER(DB1.TD_Drive_Time);
   PARAMETER(DB1.TD_Drive_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   PARAMETER(PAR.TH_Source_Type);
   PARAMETER(2);
   PARAMETER(WRK.Blank_USR);
   PARAMETER(WRK.Blank_USR);
   PARAMETER('S+');
   PARAMETER(PAR.TH_Shift_Held_Over_Head);
   PARAMETER(DB1.TD_Held_Over);
   PARAMETER(PAR.TH_Yard_Deads);
   PARAMETER(PAR.TH_Avg_Live_Wgt);
   PARAMETER(PAR.TH_Dead_On_Arrival);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.W_Group_Reference);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   PARAMETER(*ZERO);
   PARAMETER(WRK.HPE_Load_Type);
   PARAMETER(WRK.HPS_Shipped_In_Date);
   PARAMETER(WRK.HPS_Shipped_In_Time);
   PARAMETER(WRK.HPS_Shipped_Out_Date);
   PARAMETER(WRK.HPS_Shipped_Out_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.W Sequence Number = CON.1
     PAR.W_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
     PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

     QUIT;

    }

    //?**** Calc Wait Time Diff
    // LCL.TD Drive Time = PAR.TD Drive Time
    LCL.TD_Drive_Time = PAR.TD_Drive_Time;

    CASE;

    // IF PAR.TD Drive Date NE PAR.TST Wgt Date
    IF PAR.TD_Drive_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TD Drive Date - PAR.TST Wgt Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TD_Drive_Date PAR.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.TD Drive Time = LCL.TD Drive Time + LCL.Usr Elapsed hours
    LCL.TD_Drive_Time = LCL.TD_Drive_Time + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.Time Diff Usr = LCL.TD Drive Time - PAR.TST Wgt Time *HHMMSS
    LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time PAR.TST_Wgt_Time 'HS');

    //?****
    // LCL.W Load Time Difference = CON.*ZERO
    LCL.W_Load_Time_Difference = *ZERO;

    // LCL.W Travel Time Difference = CON.*ZERO
    LCL.W_Travel_Time_Difference = *ZERO;

    //?**** Calc Load Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped In Time is Entered
    IF PAR.HPS_Shipped_In_Time <> 0;

    // AND PAR.HPS Shipped Out Time is Entered
    AND PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_End_USR = 100 * PAR.HPS_Shipped_Out_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped In Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_In_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.HPS Shipped In Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.HPS_Shipped_In_Date;

    // LCL.Number 1 USR = PAR.HPS Shipped Out Date - PAR.HPS Shipped In Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.HPS_Shipped_Out_Date PAR.HPS_Shipped_In_Date 'DY'
    1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Load Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Load_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?**** Calc travel Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped Out Time is Entered
    IF PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = PAR.TST Wgt Time
    LCL.Time_End_USR = PAR.TST_Wgt_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_Out_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.TST Wgt Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TST Wgt Date - PAR.HPS Shipped Out Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TST_Wgt_Date PAR.HPS_Shipped_Out_Date 'DY' 1111111
    'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Travel Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Travel_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?****
    EXECUTE FUNCTION(Crt W001 Rest Time Eval) TYPE(CRTOBJ) FILE(PKEMCPP)            AB1218758;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    PARAMETER(PAR.Pen_Company_Number);
    PARAMETER(PAR.Pen_Number);
    PARAMETER(PAR.TD_Pen_Head);
    PARAMETER(PAR.TD_Drive_Time);
    PARAMETER(PAR.TD_Drive_Date);
    PARAMETER(PAR.TST_Wgt_Date);
    PARAMETER(PAR.TST_Wgt_Time);
    PARAMETER(PAR.TH_Source_Type);
    PARAMETER(PAR.TH_Schedule_Kill_Shift);
    PARAMETER(PAR.Tattoo_Status);
    PARAMETER(PAR.W_Stress_Market_Type);
    PARAMETER(PAR.W_Held_Over_Status);
    PARAMETER(PAR.W_Shift_Held_Over_Head);
    PARAMETER(PAR.W_Held_Over_Head);
    PARAMETER(PAR.W_Yard_Dead);
    PARAMETER(PAR.TH_Avg_Live_Wgt);
    PARAMETER(PAR.TH_Dead_On_Arrival);
    PARAMETER(PAR.TH_HPS_Movement_Ref_#);
    PARAMETER(PAR.W_Group_Reference);
    PARAMETER(PAR.W_Farm_Site);
    PARAMETER(LCL.Time_Diff_Usr);
    PARAMETER(LCL.W_Load_Time_Difference);
    PARAMETER(LCL.W_Travel_Time_Difference);
    PARAMETER(PAR.HPE_Load_Type);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(DB1.W_Sequence_Number);
     {
      //?USER: Processing if Data record not found

      // PAR.W Sequence Number = CON.1
      PAR.W_Sequence_Number = 1;

      //?USER: Process Data record

      // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
      PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

      QUIT;

     }

    }

   }

   ENDIF;

   ENDIF;

   // PAR.TH Shift Held Over Head = CON.*ZERO
   PAR.TH_Shift_Held_Over_Head = *ZERO;

   ENDIF;

   ENDIF;

   ENDIF;

  }

 }

 ENDIF;

 //?Suppress rcd  if tattoo is completely held over
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.W Held Over Status = WRK.Blank USR
 LCL.W_Held_Over_Status = WRK.Blank_USR;

 //?If Tattoo WAS held over from previous day, or until next shift
 CASE;

 // IF DB1.TH Held Over Record is Yes
 IF DB1.TH_Held_Over_Record = 'Y';

 // LCL.W Held Over Status = CND.Held over +
 LCL.W_Held_Over_Status = 'H+';

 //?If Tattoo WAS held over from previous day, or until next shift
 // IF DB1.TH Shift Held Over is Yes
 IF DB1.TH_Shift_Held_Over = 'Y';

 // LCL.W Held Over Status = CND.Shift Held over -
 LCL.W_Held_Over_Status = 'S-';

 ENDIF;

 // WRK.TH Yard Deads = DB1.TH Yard Deads
 WRK.TH_Yard_Deads = DB1.TH_Yard_Deads;

 // WRK.TH Shift Held Over Head = DB1.TH Shift Held Over Head
 WRK.TH_Shift_Held_Over_Head = DB1.TH_Shift_Held_Over_Head;

 EXECUTE FUNCTION(Rtv/Crt Rest Time EvalRT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1218698;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(DB1.TH_Group_Reference);
 PARAMETER(DB1.TH_Dead_On_Arrival);
 PARAMETER(WRK.TH_Yard_Deads);
 PARAMETER(DB1.TH_Avg_Live_Wgt);
 PARAMETER(DB1.TH_Source_Type);
 PARAMETER(DB1.TH_HPS_Movement_Ref_#);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(DB1.TH_Shift_Held_Over);
 PARAMETER(DB1.TH_HPS_Farm_Site);
 PARAMETER(WRK.TH_Shift_Held_Over_Head);
 PARAMETER(LCL.W_Held_Over_Status);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.Schedule_Kill_Shift_USR);
 {
  //?USER: Initialize routine

  //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
  //?Get the MTech Live Yes or No
  DO;

  //?Mtech Live Yes or no
  // Call program Rtv Company Values    XF.
  CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
  PARAMETER(PAR.BOH_Company_Number);
  PARAMETER('MTECHLIVE');
  PARAMETER(WRK.System_Value_Alpha_USR);

  // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
  LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

  ENDDO;

  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Pen Type          RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1170335;
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(WRK.Pen_Type);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF WRK.Pen Type is Resale
  IF WRK.Pen_Type = 'R';

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF PAR.Pen Number is Pen Number is Empty
  IF PAR.Pen_Number = *BLANK;

  // OR PAR.Pen Number EQ DB1.Pen Number
  OR PAR.Pen_Number = DB1.Pen_Number;

  CASE;

  // IF DB1.TD Drive Time is Not Zero
  IF DB1.TD_Drive_Time <> *ZERO;

  EXECUTE FUNCTION(Rtv Scale dt,tm       RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218699;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(WRK.TST_Wgt_Date);
  PARAMETER(WRK.TST_Wgt_Time);
  PARAMETER(DB1.Pen_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Get the wgt for the Tt without using the pen/or kill dt (ie.xfer,hld over)
  CASE;

  // IF WRK.TST Wgt Date EQ WRK.Zero USR
  IF WRK.TST_Wgt_Date = WRK.Zero_USR;

  EXECUTE FUNCTION(Rtv Scale dt,tm,No PenRT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218932;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(WRK.TST_Wgt_Date);
  PARAMETER(WRK.TST_Wgt_Time);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Drop the kill date ( may be a held over ttt)
  CASE;

  // IF WRK.TST Wgt Date EQ WRK.Zero USR
  IF WRK.TST_Wgt_Date = WRK.Zero_USR;

  EXECUTE FUNCTION(Rtv Scale dt,tm,No KdtRT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218936;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(WRK.TST_Wgt_Date);
  PARAMETER(WRK.TST_Wgt_Time);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  ENDIF;

  // WRK.TD Pen Head = DB1.TD Pen Head
  WRK.TD_Pen_Head = DB1.TD_Pen_Head;

  //?If Shift Held Over AND Next day held over
  CASE;

  // IF DB1.TD Held Over is greater than 0
  IF DB1.TD_Held_Over > *ZERO;

  // AND PAR.TH Shift Held Over is Yes
  AND PAR.TH_Shift_Held_Over = 'Y';

  //?Combine the hd held over with hd rcvd here, we want the hd to be
  //?accounted for in this shift, because the H- appears on Shift 2
  // WRK.TD Pen Head = DB1.TD Pen Head + DB1.TD Held Over
  WRK.TD_Pen_Head = DB1.TD_Pen_Head + DB1.TD_Held_Over;

  ENDIF;

  CASE;

  // IF LCL.MTech Live Yes or No is No MTech not Live
  IF LCL.MTech_Live_Yes_or_No = 'N';

  // Call program Z1v HPS Grp from Mvmt UP.
  CALL PROGRAM(Z1v HPS Grp from Mvmt UP) ('HP258');
  PARAMETER(WRK.Return_Code_USR);
  PARAMETER(PAR.TH_HPS_Movement_Ref_#);
  PARAMETER(WRK.W_Group_Reference);

  // Call program Z1v HPS LdTm,TrvTm,Tp UP.
  CALL PROGRAM(Z1v HPS LdTm,TrvTm,Tp UP) ('HP257');
  PARAMETER(WRK.Return_Code_USR);
  PARAMETER(PAR.TH_HPS_Movement_Ref_#);
  PARAMETER(WRK.HPE_Load_Type);
  PARAMETER(WRK.HPS_Shipped_In_Time);
  PARAMETER(WRK.HPS_Shipped_Out_Time);
  PARAMETER(WRK.HPS_Shipped_In_Date);
  PARAMETER(WRK.HPS_Shipped_Out_Date);

  //?review and found that not all of these fields going into HPE
  //?were being populated due to changes to HPS and decission to
  //?to send the data to HPE as blank or zero
  // IF LCL.MTech Live Yes or No is Yes MTech is Live
  IF LCL.MTech_Live_Yes_or_No = 'Y';

  //?Meeting with Purva and decission was to get information
  //?from the delivery tracking when live with mtech
  EXECUTE FUNCTION(Rtv Tracking Info     RT) TYPE(RTVOBJ) FILE(PLAFCPP)           AB1314040;
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(WRK.DT_Hog_Group_Reference);
  PARAMETER(WRK.DT_Load_Type);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: CND);

   QUIT;

  }

  // WRK.W Group Reference = WRK.DT Hog Group Reference
  WRK.W_Group_Reference = WRK.DT_Hog_Group_Reference;

  // WRK.HPE Load Type = WRK.DT Load Type
  WRK.HPE_Load_Type = WRK.DT_Load_Type;

  // WRK.HPS Shipped In Time = CON.*ZERO
  WRK.HPS_Shipped_In_Time = *ZERO;

  // WRK.HPS Shipped Out Time = CON.*ZERO
  WRK.HPS_Shipped_Out_Time = *ZERO;

  // WRK.HPS Shipped In Date = CON.*ZERO
  WRK.HPS_Shipped_In_Date = *ZERO;

  // WRK.HPS Shipped Out Date = CON.*ZERO
  WRK.HPS_Shipped_Out_Date = *ZERO;

  ENDIF;

  // Call program Rtv Stress Pens Only  XF.
  CALL PROGRAM(Rtv Stress Pens Only  XF) ('PLPJXFR');
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(LCL.Stress_Market_Type);

  EXECUTE FUNCTION(Crt W001 Rest Time Evl IF) TYPE(EXCINTFUN)                     AB1219950;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(PAR.Kill_Date_Usr);
  PARAMETER(DB1.TD_Sequence_Number);
  PARAMETER(WRK.W_Sequence_Number);
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(WRK.TD_Pen_Head);
  PARAMETER(DB1.TD_Drive_Time);
  PARAMETER(DB1.TD_Drive_Date);
  PARAMETER(WRK.TST_Wgt_Date);
  PARAMETER(WRK.TST_Wgt_Time);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(PAR.TH_Schedule_Kill_Shift);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(LCL.W_Stress_Market_Type);
  PARAMETER(PAR.W_Held_Over_Status);
  PARAMETER(PAR.TH_Shift_Held_Over_Head);
  PARAMETER(DB1.TD_Held_Over);
  PARAMETER(PAR.TH_Yard_Deads);
  PARAMETER(PAR.TH_Avg_Live_Wgt);
  PARAMETER(PAR.TH_Dead_On_Arrival);
  PARAMETER(PAR.TH_HPS_Movement_Ref_#);
  PARAMETER(WRK.W_Group_Reference);
  PARAMETER(PAR.TH_HPS_Farm_Site);
  PARAMETER(*ZERO);
  PARAMETER(WRK.HPE_Load_Type);
  PARAMETER(WRK.HPS_Shipped_In_Date);
  PARAMETER(WRK.HPS_Shipped_In_Time);
  PARAMETER(WRK.HPS_Shipped_Out_Date);
  PARAMETER(WRK.HPS_Shipped_Out_Time);
  {
   //?Execute internal function

   EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.W_Sequence_Number);
   {
    //?USER: Processing if Data record not found

    // PAR.W Sequence Number = CON.1
    PAR.W_Sequence_Number = 1;

    //?USER: Process Data record

    // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
    PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

    QUIT;

   }

   //?**** Calc Wait Time Diff
   // LCL.TD Drive Time = PAR.TD Drive Time
   LCL.TD_Drive_Time = PAR.TD_Drive_Time;

   CASE;

   // IF PAR.TD Drive Date NE PAR.TST Wgt Date
   IF PAR.TD_Drive_Date <> PAR.TST_Wgt_Date;

   // LCL.Number 1 USR = PAR.TD Drive Date - PAR.TST Wgt Date *DAYS
   LCL.Number_1_USR = DURATION(PAR.TD_Drive_Date PAR.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

   // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
   LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

   // LCL.TD Drive Time = LCL.TD Drive Time + LCL.Usr Elapsed hours
   LCL.TD_Drive_Time = LCL.TD_Drive_Time + LCL.Usr_Elapsed_hours;

   ENDIF;

   // LCL.Time Diff Usr = LCL.TD Drive Time - PAR.TST Wgt Time *HHMMSS
   LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time PAR.TST_Wgt_Time 'HS');

   //?****
   // LCL.W Load Time Difference = CON.*ZERO
   LCL.W_Load_Time_Difference = *ZERO;

   // LCL.W Travel Time Difference = CON.*ZERO
   LCL.W_Travel_Time_Difference = *ZERO;

   //?**** Calc Load Time Diff     3/26/02
   CASE;

   // IF PAR.HPS Shipped In Time is Entered
   IF PAR.HPS_Shipped_In_Time <> 0;

   // AND PAR.HPS Shipped Out Time is Entered
   AND PAR.HPS_Shipped_Out_Time <> 0;

   // LCL.Time End USR = CON.100 * PAR.HPS Shipped Out Time *
   LCL.Time_End_USR = 100 * PAR.HPS_Shipped_Out_Time;

   // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped In Time *
   LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_In_Time;

   CASE;

   // IF PAR.HPS Shipped Out Date NE PAR.HPS Shipped In Date
   IF PAR.HPS_Shipped_Out_Date <> PAR.HPS_Shipped_In_Date;

   // LCL.Number 1 USR = PAR.HPS Shipped Out Date - PAR.HPS Shipped In Date *DAYS
   LCL.Number_1_USR = DURATION(PAR.HPS_Shipped_Out_Date PAR.HPS_Shipped_In_Date 'DY'
   1111111 'NONE' 'N' 1);

   // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
   LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

   // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
   LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

   ENDIF;

   // LCL.W Load Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
   LCL.W_Load_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

   ENDIF;

   //?**** Calc travel Time Diff     3/26/02
   CASE;

   // IF PAR.HPS Shipped Out Time is Entered
   IF PAR.HPS_Shipped_Out_Time <> 0;

   // LCL.Time End USR = PAR.TST Wgt Time
   LCL.Time_End_USR = PAR.TST_Wgt_Time;

   // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped Out Time *
   LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_Out_Time;

   CASE;

   // IF PAR.HPS Shipped Out Date NE PAR.TST Wgt Date
   IF PAR.HPS_Shipped_Out_Date <> PAR.TST_Wgt_Date;

   // LCL.Number 1 USR = PAR.TST Wgt Date - PAR.HPS Shipped Out Date *DAYS
   LCL.Number_1_USR = DURATION(PAR.TST_Wgt_Date PAR.HPS_Shipped_Out_Date 'DY' 1111111
   'NONE' 'N' 1);

   // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
   LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

   // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
   LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

   ENDIF;

   // LCL.W Travel Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
   LCL.W_Travel_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

   ENDIF;

   //?****
   EXECUTE FUNCTION(Crt W001 Rest Time Eval) TYPE(CRTOBJ) FILE(PKEMCPP)            AB1218758;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.W_Sequence_Number);
   PARAMETER(PAR.Pen_Company_Number);
   PARAMETER(PAR.Pen_Number);
   PARAMETER(PAR.TD_Pen_Head);
   PARAMETER(PAR.TD_Drive_Time);
   PARAMETER(PAR.TD_Drive_Date);
   PARAMETER(PAR.TST_Wgt_Date);
   PARAMETER(PAR.TST_Wgt_Time);
   PARAMETER(PAR.TH_Source_Type);
   PARAMETER(PAR.TH_Schedule_Kill_Shift);
   PARAMETER(PAR.Tattoo_Status);
   PARAMETER(PAR.W_Stress_Market_Type);
   PARAMETER(PAR.W_Held_Over_Status);
   PARAMETER(PAR.W_Shift_Held_Over_Head);
   PARAMETER(PAR.W_Held_Over_Head);
   PARAMETER(PAR.W_Yard_Dead);
   PARAMETER(PAR.TH_Avg_Live_Wgt);
   PARAMETER(PAR.TH_Dead_On_Arrival);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(PAR.W_Group_Reference);
   PARAMETER(PAR.W_Farm_Site);
   PARAMETER(LCL.Time_Diff_Usr);
   PARAMETER(LCL.W_Load_Time_Difference);
   PARAMETER(LCL.W_Travel_Time_Difference);
   PARAMETER(PAR.HPE_Load_Type);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.TD_Sequence_Number);
    PARAMETER(DB1.W_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.W Sequence Number = CON.1
     PAR.W_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
     PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

     QUIT;

    }

   }

  }

  // PAR.TH Yard Deads = CON.*ZERO
  PAR.TH_Yard_Deads = *ZERO;

  //?Create S+ if Shift_1_only not selected
  CASE;

  // IF PAR.Schedule Kill Shift   USR is Shift 2
  IF PAR.Schedule_Kill_Shift_USR = '2';

  // OR PAR.Schedule Kill Shift   USR EQ WRK.Blank USR
  OR PAR.Schedule_Kill_Shift_USR = WRK.Blank_USR;

  //?Create S+ record for shift 2
  CASE;

  // IF PAR.TH Shift Held Over Head is Not Zero
  IF PAR.TH_Shift_Held_Over_Head <> *ZERO;

  EXECUTE FUNCTION(Crt W001 Rest Time Evl IF) TYPE(EXCINTFUN)                     AB1219950;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(PAR.Kill_Date_Usr);
  PARAMETER(DB1.TD_Sequence_Number);
  PARAMETER(WRK.W_Sequence_Number);
  PARAMETER(DB1.Pen_Company_Number);
  PARAMETER(DB1.Pen_Number);
  PARAMETER(*ZERO);
  PARAMETER(DB1.TD_Drive_Time);
  PARAMETER(DB1.TD_Drive_Date);
  PARAMETER(WRK.TST_Wgt_Date);
  PARAMETER(WRK.TST_Wgt_Time);
  PARAMETER(PAR.TH_Source_Type);
  PARAMETER(2);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(WRK.Blank_USR);
  PARAMETER('S+');
  PARAMETER(PAR.TH_Shift_Held_Over_Head);
  PARAMETER(DB1.TD_Held_Over);
  PARAMETER(PAR.TH_Yard_Deads);
  PARAMETER(PAR.TH_Avg_Live_Wgt);
  PARAMETER(PAR.TH_Dead_On_Arrival);
  PARAMETER(PAR.TH_HPS_Movement_Ref_#);
  PARAMETER(WRK.W_Group_Reference);
  PARAMETER(PAR.TH_HPS_Farm_Site);
  PARAMETER(*ZERO);
  PARAMETER(WRK.HPE_Load_Type);
  PARAMETER(WRK.HPS_Shipped_In_Date);
  PARAMETER(WRK.HPS_Shipped_In_Time);
  PARAMETER(WRK.HPS_Shipped_Out_Date);
  PARAMETER(WRK.HPS_Shipped_Out_Time);
  {
   //?Execute internal function

   EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.W_Sequence_Number);
   {
    //?USER: Processing if Data record not found

    // PAR.W Sequence Number = CON.1
    PAR.W_Sequence_Number = 1;

    //?USER: Process Data record

    // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
    PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

    QUIT;

   }

   //?**** Calc Wait Time Diff
   // LCL.TD Drive Time = PAR.TD Drive Time
   LCL.TD_Drive_Time = PAR.TD_Drive_Time;

   CASE;

   // IF PAR.TD Drive Date NE PAR.TST Wgt Date
   IF PAR.TD_Drive_Date <> PAR.TST_Wgt_Date;

   // LCL.Number 1 USR = PAR.TD Drive Date - PAR.TST Wgt Date *DAYS
   LCL.Number_1_USR = DURATION(PAR.TD_Drive_Date PAR.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

   // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
   LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

   // LCL.TD Drive Time = LCL.TD Drive Time + LCL.Usr Elapsed hours
   LCL.TD_Drive_Time = LCL.TD_Drive_Time + LCL.Usr_Elapsed_hours;

   ENDIF;

   // LCL.Time Diff Usr = LCL.TD Drive Time - PAR.TST Wgt Time *HHMMSS
   LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time PAR.TST_Wgt_Time 'HS');

   //?****
   // LCL.W Load Time Difference = CON.*ZERO
   LCL.W_Load_Time_Difference = *ZERO;

   // LCL.W Travel Time Difference = CON.*ZERO
   LCL.W_Travel_Time_Difference = *ZERO;

   //?**** Calc Load Time Diff     3/26/02
   CASE;

   // IF PAR.HPS Shipped In Time is Entered
   IF PAR.HPS_Shipped_In_Time <> 0;

   // AND PAR.HPS Shipped Out Time is Entered
   AND PAR.HPS_Shipped_Out_Time <> 0;

   // LCL.Time End USR = CON.100 * PAR.HPS Shipped Out Time *
   LCL.Time_End_USR = 100 * PAR.HPS_Shipped_Out_Time;

   // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped In Time *
   LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_In_Time;

   CASE;

   // IF PAR.HPS Shipped Out Date NE PAR.HPS Shipped In Date
   IF PAR.HPS_Shipped_Out_Date <> PAR.HPS_Shipped_In_Date;

   // LCL.Number 1 USR = PAR.HPS Shipped Out Date - PAR.HPS Shipped In Date *DAYS
   LCL.Number_1_USR = DURATION(PAR.HPS_Shipped_Out_Date PAR.HPS_Shipped_In_Date 'DY'
   1111111 'NONE' 'N' 1);

   // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
   LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

   // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
   LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

   ENDIF;

   // LCL.W Load Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
   LCL.W_Load_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

   ENDIF;

   //?**** Calc travel Time Diff     3/26/02
   CASE;

   // IF PAR.HPS Shipped Out Time is Entered
   IF PAR.HPS_Shipped_Out_Time <> 0;

   // LCL.Time End USR = PAR.TST Wgt Time
   LCL.Time_End_USR = PAR.TST_Wgt_Time;

   // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped Out Time *
   LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_Out_Time;

   CASE;

   // IF PAR.HPS Shipped Out Date NE PAR.TST Wgt Date
   IF PAR.HPS_Shipped_Out_Date <> PAR.TST_Wgt_Date;

   // LCL.Number 1 USR = PAR.TST Wgt Date - PAR.HPS Shipped Out Date *DAYS
   LCL.Number_1_USR = DURATION(PAR.TST_Wgt_Date PAR.HPS_Shipped_Out_Date 'DY' 1111111
   'NONE' 'N' 1);

   // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
   LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

   // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
   LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

   ENDIF;

   // LCL.W Travel Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
   LCL.W_Travel_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

   ENDIF;

   //?****
   EXECUTE FUNCTION(Crt W001 Rest Time Eval) TYPE(CRTOBJ) FILE(PKEMCPP)            AB1218758;
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER(PAR.BOH_Buy_Order_Number);
   PARAMETER(PAR.BOL_Load_Number);
   PARAMETER(PAR.TH_Tattoo_Number);
   PARAMETER(PAR.TH_Kill_Date);
   PARAMETER(PAR.TD_Sequence_Number);
   PARAMETER(PAR.W_Sequence_Number);
   PARAMETER(PAR.Pen_Company_Number);
   PARAMETER(PAR.Pen_Number);
   PARAMETER(PAR.TD_Pen_Head);
   PARAMETER(PAR.TD_Drive_Time);
   PARAMETER(PAR.TD_Drive_Date);
   PARAMETER(PAR.TST_Wgt_Date);
   PARAMETER(PAR.TST_Wgt_Time);
   PARAMETER(PAR.TH_Source_Type);
   PARAMETER(PAR.TH_Schedule_Kill_Shift);
   PARAMETER(PAR.Tattoo_Status);
   PARAMETER(PAR.W_Stress_Market_Type);
   PARAMETER(PAR.W_Held_Over_Status);
   PARAMETER(PAR.W_Shift_Held_Over_Head);
   PARAMETER(PAR.W_Held_Over_Head);
   PARAMETER(PAR.W_Yard_Dead);
   PARAMETER(PAR.TH_Avg_Live_Wgt);
   PARAMETER(PAR.TH_Dead_On_Arrival);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(PAR.W_Group_Reference);
   PARAMETER(PAR.W_Farm_Site);
   PARAMETER(LCL.Time_Diff_Usr);
   PARAMETER(LCL.W_Load_Time_Difference);
   PARAMETER(LCL.W_Travel_Time_Difference);
   PARAMETER(PAR.HPE_Load_Type);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
    PARAMETER(DB1.BOH_Company_Number);
    PARAMETER(DB1.BOH_Buy_Order_Number);
    PARAMETER(DB1.BOL_Load_Number);
    PARAMETER(DB1.TH_Tattoo_Number);
    PARAMETER(DB1.TH_Kill_Date);
    PARAMETER(DB1.TD_Sequence_Number);
    PARAMETER(DB1.W_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.W Sequence Number = CON.1
     PAR.W_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
     PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

     QUIT;

    }

   }

  }

  ENDIF;

  ENDIF;

  // PAR.TH Shift Held Over Head = CON.*ZERO
  PAR.TH_Shift_Held_Over_Head = *ZERO;

  ENDIF;

  ENDIF;

  ENDIF;

 }

 //?Get H- records -- held over until the next day.
 //?If TATTOO is Held over until tomorrow's kill
 CASE;

 // IF DB1.TH Held Over is *Zeros
 IF DB1.TH_Held_Over = *ZERO;

 //?If TATTOO is Held over until tomorrow's kill
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Bld Rest Time HoldOvr RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1219916;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Schedule_Kill_Shift);
 PARAMETER(PAR.Pen_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.Schedule_Kill_Shift_USR);
 {
  //?USER: Process Data record

  // LCL.W Held Over Status = CND.Held over -
  LCL.W_Held_Over_Status = 'H-';

  // WRK.TH Yard Deads = DB1.TH Yard Deads
  WRK.TH_Yard_Deads = DB1.TH_Yard_Deads;

  // WRK.TH Shift Held Over Head = DB1.TH Shift Held Over Head
  WRK.TH_Shift_Held_Over_Head = DB1.TH_Shift_Held_Over_Head;

  EXECUTE FUNCTION(Rtv/Crt Rest Time EvalRT) TYPE(RTVOBJ) FILE(PKA2CPP)           AB1218698;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(PAR.Pen_Number);
  PARAMETER(DB1.TH_Group_Reference);
  PARAMETER(DB1.TH_Dead_On_Arrival);
  PARAMETER(WRK.TH_Yard_Deads);
  PARAMETER(DB1.TH_Avg_Live_Wgt);
  PARAMETER(DB1.TH_Source_Type);
  PARAMETER(DB1.TH_HPS_Movement_Ref_#);
  PARAMETER(PAR.TH_Schedule_Kill_Shift);
  PARAMETER(DB1.TH_Shift_Held_Over);
  PARAMETER(DB1.TH_HPS_Farm_Site);
  PARAMETER(WRK.TH_Shift_Held_Over_Head);
  PARAMETER(LCL.W_Held_Over_Status);
  PARAMETER(PAR.Kill_Date_Usr);
  PARAMETER(PAR.Schedule_Kill_Shift_USR);
  {
   //?USER: Initialize routine

   //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
   //?Get the MTech Live Yes or No
   DO;

   //?Mtech Live Yes or no
   // Call program Rtv Company Values    XF.
   CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
   PARAMETER(PAR.BOH_Company_Number);
   PARAMETER('MTECHLIVE');
   PARAMETER(WRK.System_Value_Alpha_USR);

   // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
   LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

   ENDDO;

   //?USER: Process Data record

   EXECUTE FUNCTION(Rtv Pen Type          RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1170335;
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(WRK.Pen_Type);
   {
    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   CASE;

   // IF WRK.Pen Type is Resale
   IF WRK.Pen_Type = 'R';

   // IF *OTHERWISE
   IF *OTHERWISE;

   CASE;

   // IF PAR.Pen Number is Pen Number is Empty
   IF PAR.Pen_Number = *BLANK;

   // OR PAR.Pen Number EQ DB1.Pen Number
   OR PAR.Pen_Number = DB1.Pen_Number;

   CASE;

   // IF DB1.TD Drive Time is Not Zero
   IF DB1.TD_Drive_Time <> *ZERO;

   EXECUTE FUNCTION(Rtv Scale dt,tm       RT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218699;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   PARAMETER(DB1.Pen_Number);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?Get the wgt for the Tt without using the pen/or kill dt (ie.xfer,hld over)
   CASE;

   // IF WRK.TST Wgt Date EQ WRK.Zero USR
   IF WRK.TST_Wgt_Date = WRK.Zero_USR;

   EXECUTE FUNCTION(Rtv Scale dt,tm,No PenRT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218932;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?Drop the kill date ( may be a held over ttt)
   CASE;

   // IF WRK.TST Wgt Date EQ WRK.Zero USR
   IF WRK.TST_Wgt_Date = WRK.Zero_USR;

   EXECUTE FUNCTION(Rtv Scale dt,tm,No KdtRT) TYPE(RTVOBJ) FILE(PKB3CPP)           AB1218936;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

   ENDIF;

   // WRK.TD Pen Head = DB1.TD Pen Head
   WRK.TD_Pen_Head = DB1.TD_Pen_Head;

   //?If Shift Held Over AND Next day held over
   CASE;

   // IF DB1.TD Held Over is greater than 0
   IF DB1.TD_Held_Over > *ZERO;

   // AND PAR.TH Shift Held Over is Yes
   AND PAR.TH_Shift_Held_Over = 'Y';

   //?Combine the hd held over with hd rcvd here, we want the hd to be
   //?accounted for in this shift, because the H- appears on Shift 2
   // WRK.TD Pen Head = DB1.TD Pen Head + DB1.TD Held Over
   WRK.TD_Pen_Head = DB1.TD_Pen_Head + DB1.TD_Held_Over;

   ENDIF;

   CASE;

   // IF LCL.MTech Live Yes or No is No MTech not Live
   IF LCL.MTech_Live_Yes_or_No = 'N';

   // Call program Z1v HPS Grp from Mvmt UP.
   CALL PROGRAM(Z1v HPS Grp from Mvmt UP) ('HP258');
   PARAMETER(WRK.Return_Code_USR);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.W_Group_Reference);

   // Call program Z1v HPS LdTm,TrvTm,Tp UP.
   CALL PROGRAM(Z1v HPS LdTm,TrvTm,Tp UP) ('HP257');
   PARAMETER(WRK.Return_Code_USR);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.HPE_Load_Type);
   PARAMETER(WRK.HPS_Shipped_In_Time);
   PARAMETER(WRK.HPS_Shipped_Out_Time);
   PARAMETER(WRK.HPS_Shipped_In_Date);
   PARAMETER(WRK.HPS_Shipped_Out_Date);

   //?review and found that not all of these fields going into HPE
   //?were being populated due to changes to HPS and decission to
   //?to send the data to HPE as blank or zero
   // IF LCL.MTech Live Yes or No is Yes MTech is Live
   IF LCL.MTech_Live_Yes_or_No = 'Y';

   //?Meeting with Purva and decission was to get information
   //?from the delivery tracking when live with mtech
   EXECUTE FUNCTION(Rtv Tracking Info     RT) TYPE(RTVOBJ) FILE(PLAFCPP)           AB1314040;
   PARAMETER(DB1.TH_Kill_Date);
   PARAMETER(WRK.DT_Hog_Group_Reference);
   PARAMETER(WRK.DT_Load_Type);
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: CND);

    QUIT;

   }

   // WRK.W Group Reference = WRK.DT Hog Group Reference
   WRK.W_Group_Reference = WRK.DT_Hog_Group_Reference;

   // WRK.HPE Load Type = WRK.DT Load Type
   WRK.HPE_Load_Type = WRK.DT_Load_Type;

   // WRK.HPS Shipped In Time = CON.*ZERO
   WRK.HPS_Shipped_In_Time = *ZERO;

   // WRK.HPS Shipped Out Time = CON.*ZERO
   WRK.HPS_Shipped_Out_Time = *ZERO;

   // WRK.HPS Shipped In Date = CON.*ZERO
   WRK.HPS_Shipped_In_Date = *ZERO;

   // WRK.HPS Shipped Out Date = CON.*ZERO
   WRK.HPS_Shipped_Out_Date = *ZERO;

   ENDIF;

   // Call program Rtv Stress Pens Only  XF.
   CALL PROGRAM(Rtv Stress Pens Only  XF) ('PLPJXFR');
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(LCL.Stress_Market_Type);

   EXECUTE FUNCTION(Crt W001 Rest Time Evl IF) TYPE(EXCINTFUN)                     AB1219950;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(PAR.Kill_Date_Usr);
   PARAMETER(DB1.TD_Sequence_Number);
   PARAMETER(WRK.W_Sequence_Number);
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(WRK.TD_Pen_Head);
   PARAMETER(DB1.TD_Drive_Time);
   PARAMETER(DB1.TD_Drive_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   PARAMETER(PAR.TH_Source_Type);
   PARAMETER(PAR.TH_Schedule_Kill_Shift);
   PARAMETER(WRK.Blank_USR);
   PARAMETER(LCL.W_Stress_Market_Type);
   PARAMETER(PAR.W_Held_Over_Status);
   PARAMETER(PAR.TH_Shift_Held_Over_Head);
   PARAMETER(DB1.TD_Held_Over);
   PARAMETER(PAR.TH_Yard_Deads);
   PARAMETER(PAR.TH_Avg_Live_Wgt);
   PARAMETER(PAR.TH_Dead_On_Arrival);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.W_Group_Reference);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   PARAMETER(*ZERO);
   PARAMETER(WRK.HPE_Load_Type);
   PARAMETER(WRK.HPS_Shipped_In_Date);
   PARAMETER(WRK.HPS_Shipped_In_Time);
   PARAMETER(WRK.HPS_Shipped_Out_Date);
   PARAMETER(WRK.HPS_Shipped_Out_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.W Sequence Number = CON.1
     PAR.W_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
     PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

     QUIT;

    }

    //?**** Calc Wait Time Diff
    // LCL.TD Drive Time = PAR.TD Drive Time
    LCL.TD_Drive_Time = PAR.TD_Drive_Time;

    CASE;

    // IF PAR.TD Drive Date NE PAR.TST Wgt Date
    IF PAR.TD_Drive_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TD Drive Date - PAR.TST Wgt Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TD_Drive_Date PAR.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.TD Drive Time = LCL.TD Drive Time + LCL.Usr Elapsed hours
    LCL.TD_Drive_Time = LCL.TD_Drive_Time + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.Time Diff Usr = LCL.TD Drive Time - PAR.TST Wgt Time *HHMMSS
    LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time PAR.TST_Wgt_Time 'HS');

    //?****
    // LCL.W Load Time Difference = CON.*ZERO
    LCL.W_Load_Time_Difference = *ZERO;

    // LCL.W Travel Time Difference = CON.*ZERO
    LCL.W_Travel_Time_Difference = *ZERO;

    //?**** Calc Load Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped In Time is Entered
    IF PAR.HPS_Shipped_In_Time <> 0;

    // AND PAR.HPS Shipped Out Time is Entered
    AND PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_End_USR = 100 * PAR.HPS_Shipped_Out_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped In Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_In_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.HPS Shipped In Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.HPS_Shipped_In_Date;

    // LCL.Number 1 USR = PAR.HPS Shipped Out Date - PAR.HPS Shipped In Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.HPS_Shipped_Out_Date PAR.HPS_Shipped_In_Date 'DY'
    1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Load Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Load_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?**** Calc travel Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped Out Time is Entered
    IF PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = PAR.TST Wgt Time
    LCL.Time_End_USR = PAR.TST_Wgt_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_Out_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.TST Wgt Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TST Wgt Date - PAR.HPS Shipped Out Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TST_Wgt_Date PAR.HPS_Shipped_Out_Date 'DY' 1111111
    'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Travel Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Travel_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?****
    EXECUTE FUNCTION(Crt W001 Rest Time Eval) TYPE(CRTOBJ) FILE(PKEMCPP)            AB1218758;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    PARAMETER(PAR.Pen_Company_Number);
    PARAMETER(PAR.Pen_Number);
    PARAMETER(PAR.TD_Pen_Head);
    PARAMETER(PAR.TD_Drive_Time);
    PARAMETER(PAR.TD_Drive_Date);
    PARAMETER(PAR.TST_Wgt_Date);
    PARAMETER(PAR.TST_Wgt_Time);
    PARAMETER(PAR.TH_Source_Type);
    PARAMETER(PAR.TH_Schedule_Kill_Shift);
    PARAMETER(PAR.Tattoo_Status);
    PARAMETER(PAR.W_Stress_Market_Type);
    PARAMETER(PAR.W_Held_Over_Status);
    PARAMETER(PAR.W_Shift_Held_Over_Head);
    PARAMETER(PAR.W_Held_Over_Head);
    PARAMETER(PAR.W_Yard_Dead);
    PARAMETER(PAR.TH_Avg_Live_Wgt);
    PARAMETER(PAR.TH_Dead_On_Arrival);
    PARAMETER(PAR.TH_HPS_Movement_Ref_#);
    PARAMETER(PAR.W_Group_Reference);
    PARAMETER(PAR.W_Farm_Site);
    PARAMETER(LCL.Time_Diff_Usr);
    PARAMETER(LCL.W_Load_Time_Difference);
    PARAMETER(LCL.W_Travel_Time_Difference);
    PARAMETER(PAR.HPE_Load_Type);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(DB1.W_Sequence_Number);
     {
      //?USER: Processing if Data record not found

      // PAR.W Sequence Number = CON.1
      PAR.W_Sequence_Number = 1;

      //?USER: Process Data record

      // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
      PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

      QUIT;

     }

    }

   }

   // PAR.TH Yard Deads = CON.*ZERO
   PAR.TH_Yard_Deads = *ZERO;

   //?Create S+ if Shift_1_only not selected
   CASE;

   // IF PAR.Schedule Kill Shift   USR is Shift 2
   IF PAR.Schedule_Kill_Shift_USR = '2';

   // OR PAR.Schedule Kill Shift   USR EQ WRK.Blank USR
   OR PAR.Schedule_Kill_Shift_USR = WRK.Blank_USR;

   //?Create S+ record for shift 2
   CASE;

   // IF PAR.TH Shift Held Over Head is Not Zero
   IF PAR.TH_Shift_Held_Over_Head <> *ZERO;

   EXECUTE FUNCTION(Crt W001 Rest Time Evl IF) TYPE(EXCINTFUN)                     AB1219950;
   PARAMETER(DB1.BOH_Company_Number);
   PARAMETER(DB1.BOH_Buy_Order_Number);
   PARAMETER(DB1.BOL_Load_Number);
   PARAMETER(DB1.TH_Tattoo_Number);
   PARAMETER(PAR.Kill_Date_Usr);
   PARAMETER(DB1.TD_Sequence_Number);
   PARAMETER(WRK.W_Sequence_Number);
   PARAMETER(DB1.Pen_Company_Number);
   PARAMETER(DB1.Pen_Number);
   PARAMETER(*ZERO);
   PARAMETER(DB1.TD_Drive_Time);
   PARAMETER(DB1.TD_Drive_Date);
   PARAMETER(WRK.TST_Wgt_Date);
   PARAMETER(WRK.TST_Wgt_Time);
   PARAMETER(PAR.TH_Source_Type);
   PARAMETER(2);
   PARAMETER(WRK.Blank_USR);
   PARAMETER(WRK.Blank_USR);
   PARAMETER('S+');
   PARAMETER(PAR.TH_Shift_Held_Over_Head);
   PARAMETER(DB1.TD_Held_Over);
   PARAMETER(PAR.TH_Yard_Deads);
   PARAMETER(PAR.TH_Avg_Live_Wgt);
   PARAMETER(PAR.TH_Dead_On_Arrival);
   PARAMETER(PAR.TH_HPS_Movement_Ref_#);
   PARAMETER(WRK.W_Group_Reference);
   PARAMETER(PAR.TH_HPS_Farm_Site);
   PARAMETER(*ZERO);
   PARAMETER(WRK.HPE_Load_Type);
   PARAMETER(WRK.HPS_Shipped_In_Date);
   PARAMETER(WRK.HPS_Shipped_In_Time);
   PARAMETER(WRK.HPS_Shipped_Out_Date);
   PARAMETER(WRK.HPS_Shipped_Out_Time);
   {
    //?Execute internal function

    EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    {
     //?USER: Processing if Data record not found

     // PAR.W Sequence Number = CON.1
     PAR.W_Sequence_Number = 1;

     //?USER: Process Data record

     // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
     PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

     QUIT;

    }

    //?**** Calc Wait Time Diff
    // LCL.TD Drive Time = PAR.TD Drive Time
    LCL.TD_Drive_Time = PAR.TD_Drive_Time;

    CASE;

    // IF PAR.TD Drive Date NE PAR.TST Wgt Date
    IF PAR.TD_Drive_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TD Drive Date - PAR.TST Wgt Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TD_Drive_Date PAR.TST_Wgt_Date 'DY' 1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.TD Drive Time = LCL.TD Drive Time + LCL.Usr Elapsed hours
    LCL.TD_Drive_Time = LCL.TD_Drive_Time + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.Time Diff Usr = LCL.TD Drive Time - PAR.TST Wgt Time *HHMMSS
    LCL.Time_Diff_Usr = TIMELAPSED(LCL.TD_Drive_Time PAR.TST_Wgt_Time 'HS');

    //?****
    // LCL.W Load Time Difference = CON.*ZERO
    LCL.W_Load_Time_Difference = *ZERO;

    // LCL.W Travel Time Difference = CON.*ZERO
    LCL.W_Travel_Time_Difference = *ZERO;

    //?**** Calc Load Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped In Time is Entered
    IF PAR.HPS_Shipped_In_Time <> 0;

    // AND PAR.HPS Shipped Out Time is Entered
    AND PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_End_USR = 100 * PAR.HPS_Shipped_Out_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped In Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_In_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.HPS Shipped In Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.HPS_Shipped_In_Date;

    // LCL.Number 1 USR = PAR.HPS Shipped Out Date - PAR.HPS Shipped In Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.HPS_Shipped_Out_Date PAR.HPS_Shipped_In_Date 'DY'
    1111111 'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Load Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Load_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?**** Calc travel Time Diff     3/26/02
    CASE;

    // IF PAR.HPS Shipped Out Time is Entered
    IF PAR.HPS_Shipped_Out_Time <> 0;

    // LCL.Time End USR = PAR.TST Wgt Time
    LCL.Time_End_USR = PAR.TST_Wgt_Time;

    // LCL.Time Beg USR = CON.100 * PAR.HPS Shipped Out Time *
    LCL.Time_Beg_USR = 100 * PAR.HPS_Shipped_Out_Time;

    CASE;

    // IF PAR.HPS Shipped Out Date NE PAR.TST Wgt Date
    IF PAR.HPS_Shipped_Out_Date <> PAR.TST_Wgt_Date;

    // LCL.Number 1 USR = PAR.TST Wgt Date - PAR.HPS Shipped Out Date *DAYS
    LCL.Number_1_USR = DURATION(PAR.TST_Wgt_Date PAR.HPS_Shipped_Out_Date 'DY' 1111111
    'NONE' 'N' 1);

    // LCL.Usr Elapsed hours = LCL.Number 1 USR * CON.240000 *
    LCL.Usr_Elapsed_hours = LCL.Number_1_USR * 240000;

    // LCL.Time End USR = LCL.Time End USR + LCL.Usr Elapsed hours
    LCL.Time_End_USR = LCL.Time_End_USR + LCL.Usr_Elapsed_hours;

    ENDIF;

    // LCL.W Travel Time Difference = LCL.Time End USR - LCL.Time Beg USR *HHMMSS
    LCL.W_Travel_Time_Difference = TIMELAPSED(LCL.Time_End_USR LCL.Time_Beg_USR 'HS');

    ENDIF;

    //?****
    EXECUTE FUNCTION(Crt W001 Rest Time Eval) TYPE(CRTOBJ) FILE(PKEMCPP)            AB1218758;
    PARAMETER(PAR.BOH_Company_Number);
    PARAMETER(PAR.BOH_Buy_Order_Number);
    PARAMETER(PAR.BOL_Load_Number);
    PARAMETER(PAR.TH_Tattoo_Number);
    PARAMETER(PAR.TH_Kill_Date);
    PARAMETER(PAR.TD_Sequence_Number);
    PARAMETER(PAR.W_Sequence_Number);
    PARAMETER(PAR.Pen_Company_Number);
    PARAMETER(PAR.Pen_Number);
    PARAMETER(PAR.TD_Pen_Head);
    PARAMETER(PAR.TD_Drive_Time);
    PARAMETER(PAR.TD_Drive_Date);
    PARAMETER(PAR.TST_Wgt_Date);
    PARAMETER(PAR.TST_Wgt_Time);
    PARAMETER(PAR.TH_Source_Type);
    PARAMETER(PAR.TH_Schedule_Kill_Shift);
    PARAMETER(PAR.Tattoo_Status);
    PARAMETER(PAR.W_Stress_Market_Type);
    PARAMETER(PAR.W_Held_Over_Status);
    PARAMETER(PAR.W_Shift_Held_Over_Head);
    PARAMETER(PAR.W_Held_Over_Head);
    PARAMETER(PAR.W_Yard_Dead);
    PARAMETER(PAR.TH_Avg_Live_Wgt);
    PARAMETER(PAR.TH_Dead_On_Arrival);
    PARAMETER(PAR.TH_HPS_Movement_Ref_#);
    PARAMETER(PAR.W_Group_Reference);
    PARAMETER(PAR.W_Farm_Site);
    PARAMETER(LCL.Time_Diff_Usr);
    PARAMETER(LCL.W_Load_Time_Difference);
    PARAMETER(LCL.W_Travel_Time_Difference);
    PARAMETER(PAR.HPE_Load_Type);
    {
     //?USER: Processing before Data update

     EXECUTE FUNCTION(Rtv Last Key Seq      RT) TYPE(RTVOBJ) FILE(PKEMCPP)           AB1219937;
     PARAMETER(DB1.BOH_Company_Number);
     PARAMETER(DB1.BOH_Buy_Order_Number);
     PARAMETER(DB1.BOL_Load_Number);
     PARAMETER(DB1.TH_Tattoo_Number);
     PARAMETER(DB1.TH_Kill_Date);
     PARAMETER(DB1.TD_Sequence_Number);
     PARAMETER(DB1.W_Sequence_Number);
     {
      //?USER: Processing if Data record not found

      // PAR.W Sequence Number = CON.1
      PAR.W_Sequence_Number = 1;

      //?USER: Process Data record

      // PAR.W Sequence Number = PAR.W Sequence Number + CON.1
      PAR.W_Sequence_Number = PAR.W_Sequence_Number + 1;

      QUIT;

     }

    }

   }

   ENDIF;

   ENDIF;

   // PAR.TH Shift Held Over Head = CON.*ZERO
   PAR.TH_Shift_Held_Over_Head = *ZERO;

   ENDIF;

   ENDIF;

   ENDIF;

  }

 }

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

}


// LCL.Date USR = LCL.Date USR + CON.1 *DAYS
LCL.Date_USR = DATEINCR(LCL.Date_USR 1 'DY' 1111111 'NONE' 'N' 1);

ENDDO;

