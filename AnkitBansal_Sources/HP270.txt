      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP270 - ERM: Download Weekly Hog Inventory
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/05/01
      *
      * Function:    The function builds a file of weekly farm records showing
      *              the ending inventory head for the week summarized to the
      *              'consolidated' farm site level.
      *
      *              This program is called from HP270CL which is submitted from
      *              the job scheduler.
      *
      *              We extract the data from the Datamart files. We have hard-coded the
      *              logic to extract 52 weeks.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/20/02  LeAnne Fedor
      *           We changed 2 fields in the download file:
      *             1) farm became 'consoldated farm'
      *             2) week-ending date became 'date'
      *           Our new logic will:
      *            1) summarize the data to the 'consolidated farm site' level
      *            2) populate the date field with the date of the Monday after the
      *               week-ending date.
      *
      * 02/28/02  LeAnne Fedor
      *           Increased length of data area DAFIN.
      *
      * 04/10/02  LeAnne Fedor
      *           Added new field 'average age (days)' to the file. This field will be
      *           zero for the BGF processing.  For Nursery/Grow Finish it will be a
      *           weighted average of all the groups for the 'consolidated' farm site.
      *
      * 05/06/02  LeAnne Fedor
      *           Changed new field 'average age (days)' to be 'average phase days'.
      *           Also, any 'consolidated' farm that includes 1 or more BGF farms will
      *           always have zero in this field.
      *           For 'consolidated' farms that do not have any BGF farms, this will be a
      *           weighted average of all the groups for the 'consolidated' farm site.
      *
      * 08/01/02  LeAnne Fedor
      *           Increased DAFIN data area by 1. 'Days' is now 3 long instead of 2.
      *
      * 08/05/02  LeAnne Fedor
      *           Changed logic to always extract 52 weeks---instead of using data area
      *           DAFIN to control extraction.
      *
      * 12/31/02  LeAnne Fedor
      *           The P.C. side was blowing up on negative values. So, Cami requested that
      *           any record with negative 'average phase days' be set to zero.
      *
      * 02/04/03  LeAnne Fedor
      *           Added new field 'capacity-head' to the file. We will calculate this value
      *           by summing the Building Capacity Head values from the BGF/FIN Datamart files.
      *
      * 02/11/03  LeAnne Fedor
      *           Added new logic to limit processing of records in the Datamart FIN: Weekly
      *           Group Detail file to those records that represent a 'full week'.
      *
      * 01/14/04  LeAnne Fedor
      *           Added logic to the existing clean-up routine. If the 'average inventory' is
      *           zero, we will always set the 'phase days' to zero.
      *
      * 06/30/04  LeAnne Fedor
      *           Recompile only.
      *
      * 10/27/04  LeAnne Fedor
      *           Recompile only. New field "3-week average dead" added to file
      *           Datamart FIN: Weekly Group Detail.
      *
      * 02/01/05  LeAnne Fedor
      *           Recompile only. New fields (Sire Line Company and Prime Line) added
      *           to Datamart BGF: Weekly Production file.
      *
      * 02/07/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *                    Added: Transferred In Open Gilts
      *                  Removed: Total Lactation Pounds
      *
      * 06/20/05  LeAnne Fedor
      *           The users now want to see the "Ending Inventory Head" instead of the "Average
      *           Inventory Head" for Nursery/Grow Finishers.
      *
      * 07/05/05  LeAnne Fedor
      *           Recompile only due to file changes in Datamart BGF Weekly Production file:
      *           Added 1 new field: Average Daily Beginning Piglet Inventory
      *
      * 08/01/05  LeAnne Fedor
      *           We now exclude ANY/ALL inventory counting for ALL BGF/GDU farms. This
      *           means that the BGF/GDU head will NOT be added (by the system/program)
      *           in to any BGF or Nursery or GF farm inventories.
      *
      *           The users requested this because THEY are ENTERING the head from BGF/GDU
      *           farms in to the other farms already. So, prior to this change, they were
      *           'doubling up' on the inventories when the 'consolidated' farms included
      *           BGF/GDU farms in with other farms.
      *
      * 08/03/05  LeAnne Fedor
      *           We decided to exclude ANY/ALL BGF/GDU farms from ALL processing.
      *
      * 09/06/05  LeAnne Fedor
      *           User Becky Woodall wants a 1-time download of data from 2000 forward--
      *           instead of the usual previous 52 weeks. So, we are temporarily changing
      *           the hardcoded 364 days to 2200 days. We will change this back to 364
      *           days when Alice says to (scan for 364).
      *
      * 09/07/05  LeAnne Fedor
      *           Recompile only. New field 'manhours' added to Datamart file.
      *
      * 03/23/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *
      * 04/24/06  LeAnne Fedor
      *           Recompile only. New fields added to Datamart BGF Weekly Production file.
      *                 Cognos Report Grouping
      *                 Weaning Cognos Report Grouping
      *                 Report PCP Cognos Report Grouping
      *                 Report Farrowed Cognos Report Grouping
      *
      * 06/15/06  LeAnne Ramsey
      *           Recompile only. New field added to Datamart BGF Weekly Production file:
      *                Field: Total Gilt Weight @ 28 Weeks
      *
      * 10/16/06  LeAnne Fedor
      *           We reverted to 364 days on the temp code that was added 9/06/06 per
      *           Becky Woodall.
      *
      * 09/19/07  LeAnne Ramsey
      *           Recompile only. New "target" fields added to the Datamart FIN: Weekly
      *           Group Detail file.
      *
      * 06/20/08  LeAnne Ramsey
      *           Added logic to exclude "created" groups from the NurFin processing.
      *
      * 08/04/08  LeAnne Ramsey
      *           Recompile only. Fields deleted from Weekly Production file.
      *             BPPSGLSV - Nbr Gilts Bred w/Passed Date
      *             BPWSLB   - Weekly Ending Lbs Supplement Used
      *             BPP2LT   - Total P2 Litters Farrowed
      *             BPTDGB   - Total Days Gilt Breeding Age
      *
      * 11/07/08  LeAnne Ramsey
      *           Recompile only:
      *           Added 3 new fields to HPPB092-Datamart BGF: Weekly Production
      *            1) Target open gilt pool eligible
      *            2) Target litters farrowed/mated female/year
      *            3) Target pigs weaned/mated female/year
      *
      * 05/28/09  LeAnne Ramsey
      *           Recompile only. Added new field "Farrowing Crates" to:
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 09/01/09  LeAnne Ramsey
      *           Recompile only. Added new field "Report Total Litters Farrowed" to:
      *                 HPPB092-Datamart BGF: Weekly Production
      *
      * 01/14/10  LeAnne Ramsey
      *           Recompile only. Changed text on BPLVHD and BPLVLB in:
      *                HPPB092-Datamart BGF: Weekly Production
      *
      * 05/24/10  LeAnne Ramsey
      *           Recompile only. Added 2 fields to HPPF075-Weekly Group Detail:
      *              WBWEDTMDCY-Week Ending Date in date format mm/dd/ccyy
      *              WBPAJTIHD -Placement Adjusted Transfer In Head
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one.
      *
      *           Weeks in Phase by dividing HGADOI by 7.  Populate
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 10/14/16  Barb Gutierrez
      *           Recompile only. Two new fields (total market days, avg mkt days in
      *           phase) added to Datamart group header HPPF034.   E6136
      *
      * 05/11/17  Barb Gutierrez
      *           Receiving Array Index out of range error on arrcnfscd - consolidated
      *           farm site.  Bumped it and all other arrays to 1300 from 1000. C10475
      *
      * 05/12/17  Barb Gutierrez
      *           Receiving Array Index out of range error on arrcnfscd - consolidated
      *           farm site.  Bumped X and Y up from 3.0 to 4.0.          C10475
      *
      * 11/17/17  Rose Centonze
      *           Output Sunday date instead of Monday Date per ERM team  T12077
      *
      * 12/08/17  Brad Baden   E010812
      *           Recompiled for change in file HSP270 and HSL270A.
      *           Calculate Average Weeks in Phase by dividing the Average
      *           Days in Phase by 7.
      *
      * 08/27/18  Brad Baden   E13674
      *           Receiving Array Index out of range error on arrcnfscd - consolidated
      *           farm site.  Bumped it and all other arrays from 1300 to 1600.
      *
      * 02/08/21  Danny Nguyen S17043
      *           Receiving Array Index out of range error on arrcnfscd - consolidated
      *           farm site.  Bumped it and all other arrays from 1600 to 2400.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhppb019   if   e           k disk
      *  Datamart BGF: Farm buildings
      *
      *
     Fhppf019   if   e           k disk    rename(fbrec:fbrec1)
      *  Datamart FIN: Farm buildings
      *
      *
     Fhppf034   if   e           k disk
      *   Datamart FIN: Group header
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl018k   if   e           k disk    rename(fsrec:fsreck)
      *    Farm site
      *
      *
     Fhplf075a  if   e           k disk
      *    DataMart FIN: Weekly Group Detail
      *    (records selected by open query)
      *
      *
     Fhplb092b  if   e           k disk
      *    DataMart BGF: Weekly Production
      *    (records selected by open query)
      *
      *
     Fhsp270    uf a e           k disk
      *    ERM: Download Weekly Hog Inventory
      *
      *
     Fhsl270a   uf   e           k disk    rename(d4rec:d4reca)
      *    ERM: Download Weekly Hog Inventory
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D*arrcnfscd       s              5p 0 dim(1000)
     D*arrfscd         s              5p 0 dim(1000)
     D*arrday          s             15p 0 dim(1000)
     D*arrhd           s              5p 0 dim(1000)
     D*arrcnfscd       s              5p 0 dim(1300)
     D*arrfscd         s              5p 0 dim(1300)
     D*arrday          s             15p 0 dim(1300)
     D*arrhd           s              5p 0 dim(1300)
      * S17043 - Increase arrays from 1600 to 2400.
17043D*arrcnfscd       s              5p 0 dim(1600)
  |  D arrcnfscd       s              5p 0 dim(2400)
  |  D*arrfscd         s              5p 0 dim(1600)
  |  D arrfscd         s              5p 0 dim(2400)
  |  D*arrday          s             15p 0 dim(1600)
  |  D arrday          s             15p 0 dim(2400)
  |  D*arrhd           s              5p 0 dim(1600)
17043D arrhd           s              5p 0 dim(2400)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svfscd          s                   like(bpfscd)
     D svcnfscd        s                   like(fscnfscd)
     D svwedt          s                   like(bpwedt)
     D bgfcount        s              3  0
     D firstcnfs       s              1    inz('Y')
      *
      *
      * Workfields
      *
     D wkcnfscd        s              5s 0
     D wkdt            s                   like(d4dt)
      *
     D wkphsday        s              5  0
     D wkphshd         s             15  0
     D wktotday        s             15  0
      *
     D wkweeksphs      s                   like(d4weeksphs)
      *
      *
      * Fields for date manipulation
      *
     D wkmoniso        s               d   datfmt(*iso)
     D wkisodate       s               d   datfmt(*iso)
     D wknulldt        s                   like(hgopdt) inz(D'0001-01-01')
      *
      *
      * Parm fields
      *
     D xxmode          s              1
     D xxcdyr          s                   like(bpcdyr)
     D xxcdwk          s                   like(bpcdwk)
     D xxccyymmdd      s              8  0
     D xxsatdt         s              8  0
      *
      *
      * Accumulator fields
      *
     D wkhd            s             15  0
      *
      *
      * Array indexes
      *
     D*x               s              3  0
     D*y               s              3  0
     D x               s              4  0
     D y               s              4  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * The CL calls this program twice. The initial time in, we simply retrieve
      * a calendar year/week to pass back to the CL for the open queries.
      *
     C                   select
     C                   when      xxmode = 'I'
     C                   exsr      $week
      *
      * The extraction processing occurs in the second call to this program.
      *    1) build an array of consolidated farms that do not have any BGF farms
      *    2) extract BGF data
      *    3) extract Finisher data
      *    4) clean up negative values and add head capacity
      *
     C                   other
     C                   exsr      $arrcnfscd
     C                   exsr      $bgf
     C                   exsr      $fin
     C                   exsr      $cleanup
     C                   endsl
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Process Weekly Production Records for BGF farms
      *---------------------------------------------------------------
      *
      * Omit all BGF GDU farms from processing.
      *
     C     $bgf          begsr
      *
     C                   dou       *in90 = *on                                  Do farms
     C                   read      hplb092b                               90
     C                   if        *in90 = *off                                 If not EOF
      *
     C     bpfscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If hit
      *
      * There should only be BGF farms in the Datamart file we are
      * processing. But, we will go ahead and check Production Phase and
      * Type of Farm.
     C                   if        fsppcd = 'BGF  ' and                         If omit BGF/GDU
     C                             fstfcd = 'GDU  '
     C                   else
     C                   z-add     fscnfscd      wkcnfscd
     C                   exsr      $wrtbgf
     C                   endif                                                  If omit BGF/GDU
      *
     C                   endif                                                  If hit
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do farms
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Set up to write BGF records to the download file
      *---------------------------------------------------------------
      *
     C     $wrtbgf       begsr
      *
      * Calculate the date of the Monday after this week-ending date.
      *                     ---> sunday instead of monday                    T12077
     C**   bpwedt        adddur    2:*d          wkmoniso
     C     bpwedt        adddur    1:*d          wkmoniso                     T12077
      *
      * Add the following head fields into a workfield so that you can
      * use the same 'write' subroutine for the Finisher logic.
      *          1) gilt and sow ending inventory
      *          2) boar inventory
      *
     C                   z-add     bpengshd      wkhd
     C                   add       bpbohd        wkhd
      *
      * Write/update a download record
      *
     C                   exsr      $wrt270
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write/update records in the download file
      *---------------------------------------------------------------
      *
     C     $wrt270       begsr
      *
     C     key01         chain     hsp270                             92
     C                   if        *in92 = *off                                 If found
     C                   add       wkhd          d4eihd
     C                   update    d4rec
     C                   else
      *
     C                   z-add     wkcnfscd      d4cnfscd
     C                   move      wkmoniso      d4dt
     C                   z-add     wkhd          d4eihd
     C                   write     d4rec
     C                   endif                                                  If found
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process Weekly Group Detail Records for Finishers
      *---------------------------------------------------------------
      *
     C     $fin          begsr
      *
     C                   eval      first = yes
      *
     C                   dou       *in90 = *on                                  Do farms
     C                   read      hplf075a                               90
     C                   if        *in90 = *off and wbfullwk = yes              If not EOF
      *
      * Check Group status; omit/exclude Created groups.
      * (Since we are processing a Datamart file, use the Datamart Hog Group
      *  file for the check.)
      *
     C     wbhgcd        chain     hppf034                            92
     C                   if        *in92 = *off and                             If process
     C                             hgopdt <> wknulldt
      *
      * First time
     C                   if        first = yes
     C                   z-add     wbfscd        svfscd
     C                   move      wbwedt        svwedt
     C                   move      no            first
     C                   endif
      *
      * Write a weekly record when:
      *    1) week changes, or
      *    2) farm changes
     C
     C                   if        svwedt <> wbwedt or svfscd <> wbfscd
     C                   exsr      $wrtfin
     C                   endif
      *
      * Detail processing, accumulate:
      *   1) ending inventory head
      *
     C                   add       wbeihd        wkhd
      *
      * Determine group phase days and accumulate at consolidated farm site level.
      *
     C                   exsr      $groupphs
      *
     C                   endif                                                  If process
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do farms
      *
      * Last record processing for Finishers
      *
     C                   if        first = no
     C                   exsr      $wrtfin
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Calculate/store 'group phase' factors for the group
      *---------------------------------------------------------------
      *
     C     $groupphs     begsr
      *
      * Calculate average weekly head using 'pig days'.
      *
     C     wbpigday      div       7             wkphshd
      *
      *
      * Get the 'days in phase' for the group as of the week-ending date
      *
     C                   z-add     wbphsday      wkphsday
      *
      * Calc 'total phase days'
      *
     C     wkphsday      mult      wkphshd       wktotday
      *
      *
      * Retrieve 'consolidated' farm associated with this farm.
      * Check to see if the 'consolidated' farm is in the no-BGF farm array.
      * If it is, load up arrays.
      *
     C     wbfscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If farm hit
      *
     C                   z-add     1             x
     C     fscnfscd      lookup    arrcnfscd(x)                           92
     C                   if        *in92 = *on                                  If OK to go
      *
     C                   z-add     1             x
     C     fscnfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If new farm
     C                   add       1             y
     C                   z-add     fscnfscd      arrfscd(y)
     C                   z-add     wkphshd       arrhd(y)
     C                   z-add     wktotday      arrday(y)
     C                   else
     C                   add       wkphshd       arrhd(x)
     C                   add       wktotday      arrday(x)
     C                   endif                                                  If new farm
     C                   endif                                                  If OK to go
      *
     C                   endif                                                  If farm hit
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Set up to write Finisher weekly records to download file
      *---------------------------------------------------------------
      *
     C     $wrtfin       begsr
      *
      * Retrieve the 'consolidated farm site' number for this farm.
      *
     C     svfscd        chain     hsp018                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     fscnfscd      wkcnfscd
     C                   else
     C                   z-add     bpfscd        wkcnfscd
     C                   endif
      *
      * Calculate the date of the Monday after this week-ending date.
      *        -->     Sunday instead of Monday                                 T12077
     C**   svwedt        adddur    2:*d          wkmoniso
     C     svwedt        adddur    1:*d          wkmoniso                       T12077
      *
      *
      * Write/update download record
      *
     C                   exsr      $wrt270
      *
      *
      * If this is 'last record' processing or 'week' as changed,
      * read each farm record for the week and update it with the 'average phase days'
      * from the arrays.
      *
     C                   if        svwedt <> wbwedt or *in90 = *on
     C                   movel     d4dt          wkdt
     C                   exsr      $farmphs
     C                   endif
      *
      * Set control fields
      *
     C                   z-add     0             wkhd
     C                   z-add     wbfscd        svfscd
     C                   move      wbwedt        svwedt
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Update consolidated farm records with 'average phase days'
      *---------------------------------------------------------------
      *
     C     $farmphs      begsr
      *
     C     wkdt          setll     hsl270a
      *
     C                   dou       *in91 = *on                                  Do loop
     C     wkdt          reade     hsl270a                                91
     C                   if        *in91 = *off                                 If read
      *
     C                   z-add     1             x
     C     d4cnfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *on                                  If found
      *
     C                   z-add     0             d4weeksphs
     C                   if        arrhd(x) <> 0
     C     arrday(x)     div(h)    arrhd(x)      d4phsday
     C     d4phsday      div       7             d4weeksphs
     C                   update    d4reca
     C                   endif
      *
     C                   endif                                                  If found
      *
     C                   endif                                                  If read
     C                   enddo                                                  Do loop
      *
      * Clear arrays
      *
     C                   exsr      $cleararr
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Clear arrays and initialize array indexes
      *-----------------------------------------------------------------------
      *
     C     $cleararr     begsr
      *
     C                   z-add     0             arrfscd
     C                   z-add     0             arrday
     C                   z-add     0             arrhd
      *
     C                   z-add     0             x
     C                   z-add     0             y
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Find year/week to process
      *---------------------------------------------------------------
      *
     C     $week         begsr
      *
      * The users always want to process the 52 weeks of date. Since we extract based
      * on calendar year/week, we need to subtract 364 days from the system date.
      *
     C     *mdy          move      udate         wkisodate
     C     wkisodate     subdur    364:*days     wkisodate
     C                   movel     wkisodate     xxccyymmdd
      *
      * Now, call a generic program that will 1) find the 'Saturday' associated with
      * this date and 2) return the calendar year/week for that Saturday
      *
     C                   call      'HP8007'
     C                   parm                    xxccyymmdd
     C                   parm      0             xxsatdt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve the 'Consolidated' Farm Site Humber and Type of Farm for a Farm
      *-----------------------------------------------------------------------------------
      *
     C     $cnfscd       begsr
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Build an array of 'consolidated' farm sites that do not include any BGF farms
      *-----------------------------------------------------------------------------------
      *
     C     $arrcnfscd    begsr
      *
     C     *loval        setll     hsl018k
      *
     C                   dou       *in91 = *on                                  Do loop
     C                   read      hsl018k                                91
     C                   if        *in91 = *off                                 If read
      *
      * We are omitting all BGF/GDU farms from all processing.
      *
     C                   if        fsppcd = 'BGF  ' and                         If omit BGF/GDU
     C                             fstfcd = 'GDU  '
     C                   else
      *
      * If first time
     C                   select
     C                   when      firstcnfs = yes
     C                   z-add     0             y
     C                   z-add     0             bgfcount
     C                   move      no            firstcnfs
     C                   z-add     fscnfscd      svcnfscd
      *
      * If break on consolidated farm site number
      *
     C                   when      svcnfscd <> fscnfscd
      *
     C                   if        bgfcount = 0
     C                   add       1             y
     C                   z-add     svcnfscd      arrcnfscd(y)
     C                   endif
      *
     C                   z-add     fscnfscd      svcnfscd
     C                   z-add     0             bgfcount
     C                   endsl
      *
      * Detail processing
      *
     C                   if        fsppcd = 'BGF  '
     C                   add       1             bgfcount
     C                   endif
      *
     C                   endif                                                  If omit BGF/GDU
     C                   endif                                                  If read
     C                   enddo                                                  Do loop
      *
      * Last record processing
      *
     C                   if        bgfcount = 0
     C                   add       1             y
     C                   z-add     svcnfscd      arrcnfscd(y)
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Clean up negative values and retrieve/calculate Capacity Head
      *---------------------------------------------------------------
      *
     C     $cleanup      begsr
      *
     C                   z-add     0             svcnfscd
     C     *loval        setll     hsp270
      *
     C                   dou       *in90 = *on                                  Do cleanup
     C                   read      hsp270                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Each time you have a new 'consolidated' farm site, go retrieve/calculate
      * 'capacity-head'.
      *
     C                   if        d4cnfscd <> svcnfscd
     C                   exsr      $head
     C                   z-add     d4cnfscd      svcnfscd
     C                   endif
      *
     C                   z-add     wkhd          d4cphd
      *
      * Negative values for 'head' and 'average phase days' cause problems on the P.C. side.
      * So, the users requested that we set any 'negative' values to zero.
      *
     C                   if        d4eihd < 0
     C                   z-add     0             d4eihd
     C                   endif
      *
     C                   if        d4phsday < 0
     C                   z-add     0             d4phsday
     C                   endif
      *
      *
      * If 'head' is zero, always set 'days' to zero.
      *
     C                   if        d4eihd = 0
     C                   z-add     0             d4phsday
     C                   endif
      *
     C                   update    d4rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do cleanup
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve/calculate Capacity-Head for a Consolidated Farm Site
      *---------------------------------------------------------------
      *
     C     $head         begsr
      *
      * Initialize accumulator
      *
     C                   z-add     0             wkhd
      *
      * Find/process 'farms' associated with this 'consolidated' farm
      * site. Omit BGF/GDU farms.
      *
     C     d4cnfscd      setll     hsl018k
      *
     C                   dou       *in91 = *on                                  Do farms
     C     d4cnfscd      reade     hsl018k                                91
     C                   if        *in91 = *off                                 If read
      *
     C                   if        fsppcd = 'BGF  ' and                         If omit BGF/GDU
     C                             fstfcd = 'GDU  '
     C                   else
      *
      * Retrieve/process Datamart BGF or FIN data for the farm based
      * on the Production Phase of the farm.
      *
     C                   select
     C                   when      fsppcd = 'BGF  '
     C                   exsr      $bgffarm
     C                   other
     C                   exsr      $finfarm
     C                   endsl
      *
     C                   endif                                                  If omit BGF/GDU
     C                   endif                                                  If read
     C                   enddo                                                  Do farms
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Datamart BGF farm/building 'capacity head'
      *---------------------------------------------------------------
      *
     C     $bgffarm      begsr
      *
     C     fsfscd        setll     hppb019
      *
     C                   dou       *in93 = *on                                  Do BGF farm
     C     fsfscd        reade     hppb019                                93
     C                   if        *in93 = *off and fbaist = 'A'                If read
     C                   add       fbcphd        wkhd
     C                   endif                                                  If read
     C                   enddo                                                  Do BGF farm
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve Datamart FIN farm/building Capacity Head
      *---------------------------------------------------------------
      *
     C     $finfarm      begsr
      *
     C     fsfscd        setll     hppf019
      *
     C                   dou       *in93 = *on                                  Do FIN farm
     C     fsfscd        reade     hppf019                                93
     C                   if        *in93 = *off and fbaist = 'A'                If read
     C                   add       fbcphd        wkhd
     C                   endif                                                  If read
     C                   enddo                                                  Do FIN farm
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxmode
     C                   parm                    xxcdyr
     C                   parm                    xxcdwk
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkcnfscd
     C                   kfld                    wkmoniso
      *
     C                   endsr
      /eject
