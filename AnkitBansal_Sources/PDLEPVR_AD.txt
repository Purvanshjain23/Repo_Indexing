// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDLEPVR
// ?Date: 14.08.2025 Time: 03:35:04
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.Application Code = CND.Accounts Receivable
PAR.Application_Code = 'A/R';

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(PAR.Company_Number_CDE);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

// Call program Rtv Plant Co/Org      XF.
CALL PROGRAM(Rtv Plant Co/Org      XF) ('PMOVXFR');
PARAMETER(PAR.Company_Number_CDE);
PARAMETER(NLL.Plant_Company_Sts);
PARAMETER(WRK.Company_Organization);

//?default drawer number to 1
// WRK.Text 1 Length USR = CON.1
WRK.Text_1_Length_USR = 1;

//?***** Change Log and Comments
DO;

//?*****
//?** 06/14/2016 JBB E5262
//?** Add Include Rebills Y/N flag to screen and pass on to called
//?** programs
//?*****
//?** 06/27/2012 LJB E002159
//?** Allow Print selection to print for Active or Inactive
//?** customers per Susan Mead at Daily's.
//?*****
//?** 05/25/2012 LJB E002121
//?** Separate the Fax/Email selection to 2 separate functions.
//?** so Soni can do one or all three if she wants to.
//?** Add a new function to Print. Add new parms to Print, Fax,
//?** and Email programs.
//?*****
//?** 05/04/2012 LJB E002085
//?** Rtv default printer for A/R statements. Pass to Fax and Print
//?** program. Also pass drawer# and Co Org.
//?*****
//?** 05/01/2012 LJB E000909
//?** Update with additional parms on POQ1UPC which is now called
//?** from the batch program PORGXFR and called from job scheduler
//?*****
//?** 04/01/2010 LJB P000198 (sub task: E000673)
//?** Statements can now be Faxed or Emailed. Fax/email stored in
//?** Cust Distribution Entry file. Error if no A/R Cust fax entry.
//?*****
//?** 05/16/2007 LJB DLY029
//?** Change parameters being passed to the Process Fax program.
//?** Remove Cover sheet name.
//?*****
//?7/11/2006 slm
//?Default Company to blanks for *All.
//?*****
//?L060606 LJB 07/07/2006
//?** Don't remove company number - needed for the aging function
//?*****
//?OMS036 RMC 4/28/05 Company has been removed
//?*****
//?OMS036 RMC 5/28/05 Company has been removed   -- not yet
//?*****
ENDDO;

//?USER: Load screen

CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

// DTL.Company Number CDE = PAR.Company Number CDE
DTL.Company_Number_CDE = PAR.Company_Number_CDE;

ENDIF;

// DTL.Include Credit Memos = CND.No
DTL.Include_Credit_Memos = 'N';

// DTL.Include Charge Backs = CND.Yes
DTL.Include_Charge_Backs = 'Y';

//?06/14/2016 Brad Baden  Proj# E5262  Add rebills to screen
// DTL.Include Rebills = CND.Yes
DTL.Include_Rebills = 'Y';

// DTL.Statement Type = CND.Not Aged Statement
DTL.Statement_Type = 'N';

// DTL.Condition Desc. 1  USR = Condition name of DTL.Statement Type
DTL.Condition_Desc_1_USR = RTVCND(DTL.Statement_Type);

//?Fax flag
// DTL.Status Flag 1  Y/N = CND.No
DTL.Status_Flag_1_Y_N = 'N';

//?Print flag
// DTL.Status Flag 2  Y/N = CND.Yes
DTL.Status_Flag_2_Y_N = 'Y';

//?Email flag                            E002121 05/25/2012 LJB
// DTL.Status Flag 3  Y/N = CND.No
DTL.Status_Flag_3_Y_N = 'N';

//?Print company on stmt .. dft to No          ARS011 RMC 8/30/05
// DTL.Print Yes/No          USR = CND.No
DTL.Print_Yes_No_USR = 'N';

//?USER: Validate fields

//?Process F4 on Company Number
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Company Number CDE
AND PGM.*Cursor_field = DTL.Company_Number_CDE;

CASE;

// IF PAR.Allow Multi-Company is yes
IF PAR.Allow_Multi_Company = 'Y';

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(DTL.Company_Number_CDE);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Prompt not allowed on output field.'
ERROR(USR2410);

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Company Organization
CASE;

// IF DTL.Company Number CDE is not equal to zero
IF DTL.Company_Number_CDE <> *ZERO;

// Call program Rtv Plant Co/Org      XF.
CALL PROGRAM(Rtv Plant Co/Org      XF) ('PMOVXFR');
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(NLL.Plant_Company_Sts);
PARAMETER(WRK.Company_Organization);

ENDIF;

//?CALC: Screen function fields

//?Validate Company & Retrieve Company Name.
CASE;

// IF DTL.Company Number CDE is not equal to zero
IF DTL.Company_Number_CDE <> *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(DTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

//?Validate Company & Retrieve Company Name.
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Company Name = CON.*All
DTL.Company_Name = *All;

ENDIF;

//?Validate Customer Number & Retrieve Customer Name.
CASE;

// IF DTL.A/R Customer Number is not equal to zero
IF DTL.AR_Customer_Number <> *ZERO;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(DTL.AR_Customer_Number);
PARAMETER(DTL.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'A/R Customer is invalid.'
ERROR(USR2110);
MSGPARM(DTL.AR_Customer_Number);

ENDIF;

ENDIF;

// DTL.Condition Desc. 1  USR = Condition name of DTL.Statement Type
DTL.Condition_Desc_1_USR = RTVCND(DTL.Statement_Type);

//?USER: Validate relations

//?If Fax, verify fax number is in Cust Distr Entry  E002121
CASE;

// IF DTL.Status Flag 1  Y/N is Yes
IF DTL.Status_Flag_1_Y_N = 'Y';

// WRK.USR Flag 1 = CND.Blank
WRK.USR_Flag_1 = *BLANK;

//?** Retrieve record for fax - Active only           E002121
// LCL.CDE Name = CON.*BLANK
LCL.CDE_Name = *BLANK;

// LCL.CDE Destination = CON.*BLANK
LCL.CDE_Destination = *BLANK;

EXECUTE FUNCTION(RTV CDE by entry type RT) TYPE(RTVOBJ) FILE(PNF7REP)           AC2044549;
PARAMETER(DTL.AR_Customer_Number);
PARAMETER('AR-STMTS');
PARAMETER(1);
PARAMETER(LCL.CDE_Name);
PARAMETER('F');
PARAMETER(LCL.CDE_Destination);
PARAMETER('A');
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 CASE;

 // IF DB1.CDE Destination Type EQ PAR.CDE Destination Type
 IF DB1.CDE_Destination_Type = PAR.CDE_Destination_Type;

 // AND DB1.Record Status EQ PAR.Record Status
 AND DB1.Record_Status = PAR.Record_Status;

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

 ENDIF;

}


//?Fax should exist - warning
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send information message - 'Warning: Fax Number not entered for A/R Customer &1. Press enter.'
MESSAGE(USR4519 *INFO);
MSGPARM(DTL.AR_Customer_Number);

// WRK.USR Flag 1 = CND.No
WRK.USR_Flag_1 = 'N';

ENDIF;

ENDIF;

//?If Email, verify email addr is in Cust Distr Entry  E002121
CASE;

// IF DTL.Status Flag 3  Y/N is Yes
IF DTL.Status_Flag_3_Y_N = 'Y';

// WRK.USR Flag 3 = CND.Blank
WRK.USR_Flag_3 = *BLANK;

//?** Retrieve record for Email - Active only           E002121
// LCL.CDE Name = CON.*BLANK
LCL.CDE_Name = *BLANK;

// LCL.CDE Destination = CON.*BLANK
LCL.CDE_Destination = *BLANK;

EXECUTE FUNCTION(RTV CDE by entry type RT) TYPE(RTVOBJ) FILE(PNF7REP)           AC2044549;
PARAMETER(DTL.AR_Customer_Number);
PARAMETER('AR-STMTS');
PARAMETER(1);
PARAMETER(LCL.CDE_Name);
PARAMETER('E');
PARAMETER(LCL.CDE_Destination);
PARAMETER('A');
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 CASE;

 // IF DB1.CDE Destination Type EQ PAR.CDE Destination Type
 IF DB1.CDE_Destination_Type = PAR.CDE_Destination_Type;

 // AND DB1.Record Status EQ PAR.Record Status
 AND DB1.Record_Status = PAR.Record_Status;

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

 ENDIF;

}


//?Email should exist - warning
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send information message - 'Warning: Email is not entered for AR Cust &1. Press enter'
MESSAGE(USR4520 *INFO);
MSGPARM(DTL.AR_Customer_Number);

// WRK.USR Flag 3 = CND.No
WRK.USR_Flag_3 = 'N';

ENDIF;

ENDIF;

//?If Print, verify entry is there for Cust Distr Entry  E002121
CASE;

// IF DTL.Status Flag 2  Y/N is Yes
IF DTL.Status_Flag_2_Y_N = 'Y';

// WRK.USR Flag 2 = CND.Blank
WRK.USR_Flag_2 = *BLANK;

//?** Retrieve record for Print - Active or Inactive    E002159
// LCL.CDE Name = CON.*BLANK
LCL.CDE_Name = *BLANK;

// LCL.CDE Destination = CON.*BLANK
LCL.CDE_Destination = *BLANK;

// Call program RTV CDE for Act/Inact XF.
CALL PROGRAM(RTV CDE for Act/Inact XF) ('PBD9XFR');
PARAMETER(DTL.AR_Customer_Number);
PARAMETER('AR-STMTS');
PARAMETER(1);
PARAMETER(LCL.CDE_Name);
PARAMETER('P');
PARAMETER(LCL.CDE_Destination);
PARAMETER('A');
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(WRK.Company_Organization);

//?Print queue should exist - error
CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Print Queue not entered for Customer (in Cust Commerce)'
ERROR(USR4521);
MSGPARM(DTL.AR_Customer_Number);

// WRK.USR Flag 2 = CND.No
WRK.USR_Flag_2 = 'N';

ENDIF;

ENDIF;

//?USER: User defined action

//?Print Statement
CASE;

// IF WRK.USR Flag 2 is Blank
IF WRK.USR_Flag_2 = *BLANK;

//?Print Statement?     8/12/2002  RMC
CASE;

// IF DTL.Status Flag 2  Y/N is Yes
IF DTL.Status_Flag_2_Y_N = 'Y';

// PAR.Company Number Pass   USR = DTL.Company Number CDE
PAR.Company_Number_Pass_USR = DTL.Company_Number_CDE;

// PAR.Customer Number Pass  USR = DTL.A/R Customer Number
PAR.Customer_Number_Pass_USR = DTL.AR_Customer_Number;

//?** Default A/R Outq for batch printing to blanks      E002085
//?** Set job scheduler flag to "N"                      E002121
// WRK.Default Printer = CND.Not entered
WRK.Default_Printer = *BLANK;

// WRK.Status Flag 5  Y/N = WRK.Company Organization
WRK.Status_Flag_5_Y_N = WRK.Company_Organization;

// WRK.Status Flag 6  Y/N = CND.No
WRK.Status_Flag_6_Y_N = 'N';

//?** Retrieve the print queue from cust distribution    E002121
// Call program RTV CDE for Act/Inact XF.
CALL PROGRAM(RTV CDE for Act/Inact XF) ('PBD9XFR');
PARAMETER(DTL.AR_Customer_Number);
PARAMETER('AR-STMTS');
PARAMETER(1);
PARAMETER(LCL.CDE_Name);
PARAMETER('P');
PARAMETER(LCL.CDE_Destination);
PARAMETER('A');
PARAMETER(DTL.Company_Number_CDE);
PARAMETER(WRK.Company_Organization);

//?** Pass default cust distr entry parms for printing   E002121
// LCL.Distribution Code = CND.Statements
LCL.Distribution_Code = 'AR-STMTS';

// LCL.PRT Printer Device = LCL.CDE Destination
LCL.PRT_Printer_Device = LCL.CDE_Destination;

// Call program PRT A/R Customer Stmt  UP.
CALL PROGRAM(PRT A/R Customer Stmt  UP) ('PDLFUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Application_Code);
PARAMETER(LCL.PRT_Printer_Device);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Customer_Number_Pass_USR);
PARAMETER(DTL.Customer_Name);
PARAMETER(DTL.Include_Credit_Memos);
PARAMETER(DTL.Include_Charge_Backs);
PARAMETER(DTL.Include_Rebills);
PARAMETER(DTL.Statement_Type);
PARAMETER('N');
PARAMETER(DTL.Status_Flag_2_Y_N);
PARAMETER('N');
PARAMETER(DTL.Print_Yes_No_USR);
PARAMETER(WRK.Status_Flag_5_Y_N);
PARAMETER(WRK.Status_Flag_6_Y_N);
PARAMETER(LCL.Distribution_Code);
PARAMETER(LCL.CDE_Destination);
PARAMETER('A');

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

ENDIF;

ENDIF;

//?Fax Statement
CASE;

// IF WRK.USR Flag 1 is Blank
IF WRK.USR_Flag_1 = *BLANK;

//?Fax Statement                           E002121 05/25/12 LJB
CASE;

// IF DTL.Status Flag 1  Y/N is Yes
IF DTL.Status_Flag_1_Y_N = 'Y';

// PAR.Company Number Pass   USR = DTL.Company Number CDE
PAR.Company_Number_Pass_USR = DTL.Company_Number_CDE;

// PAR.Customer Number Pass  USR = DTL.A/R Customer Number
PAR.Customer_Number_Pass_USR = DTL.AR_Customer_Number;

//?** If Cust Distribution Entry has a Fax record set up, then
//?** the statement will be faxed.                       E002121
//?** Default A/R Outq to blanks for interactive stmts   E002085
//?** set job scheduler flag to "N", drawer = 1          E002121
// WRK.Default Printer = CND.Not entered
WRK.Default_Printer = *BLANK;

// WRK.Status Flag 5  Y/N = WRK.Company Organization
WRK.Status_Flag_5_Y_N = WRK.Company_Organization;

// WRK.Status Flag 6  Y/N = CND.No
WRK.Status_Flag_6_Y_N = 'N';

// Call program PRC Fax A/R Statement  UP.
CALL PROGRAM(PRC Fax A/R Statement  UP) ('POQ1UPC');
PARAMETER(PAR.Default_Printer);
PARAMETER(*NO);
PARAMETER(*YES);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Customer_Number_Pass_USR);
PARAMETER(1);
PARAMETER(DTL.Include_Credit_Memos);
PARAMETER(DTL.Include_Charge_Backs);
PARAMETER(DTL.Customer_Name);
PARAMETER(DTL.Statement_Type);
PARAMETER('Y');
PARAMETER(DTL.Status_Flag_1_Y_N);
PARAMETER('N');
PARAMETER('N');
PARAMETER(DTL.Print_Yes_No_USR);
PARAMETER(WRK.Status_Flag_5_Y_N);
PARAMETER(WRK.Status_Flag_6_Y_N);
PARAMETER(WRK.Default_Printer);
PARAMETER(WRK.Text_1_Length_USR);
PARAMETER('AR-STMTS');
PARAMETER('A');
PARAMETER(DTL.Include_Rebills);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Fax has been sent.'
MESSAGE(USR2443 *INFO);

ENDIF;

ENDIF;

ENDIF;

//?Email Statement
CASE;

// IF WRK.USR Flag 3 is Blank
IF WRK.USR_Flag_3 = *BLANK;

//?Email Statement                         E002121 05/25/12 LJB
CASE;

// IF DTL.Status Flag 3  Y/N is Yes
IF DTL.Status_Flag_3_Y_N = 'Y';

// PAR.Company Number Pass   USR = DTL.Company Number CDE
PAR.Company_Number_Pass_USR = DTL.Company_Number_CDE;

// PAR.Customer Number Pass  USR = DTL.A/R Customer Number
PAR.Customer_Number_Pass_USR = DTL.AR_Customer_Number;

//?** Report will be printed. If fax or email address is in Cust
//?** Distribution Entry file then it will be faxed or emailed. P000198
//?** Default A/R Outq to blanks for interactive stmts   E002085
//?** set job scheduler flag to "N", Drawer = 1          E002121
// WRK.Default Printer = CND.Not entered
WRK.Default_Printer = *BLANK;

// WRK.Text 1 Length USR = CON.1
WRK.Text_1_Length_USR = 1;

// WRK.Status Flag 5  Y/N = WRK.Company Organization
WRK.Status_Flag_5_Y_N = WRK.Company_Organization;

// WRK.Status Flag 6  Y/N = CND.No
WRK.Status_Flag_6_Y_N = 'N';

// Call program PRC Fax A/R Statement  UP.
CALL PROGRAM(PRC Fax A/R Statement  UP) ('POQ1UPC');
PARAMETER(PAR.Default_Printer);
PARAMETER(*NO);
PARAMETER(*YES);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.Customer_Number_Pass_USR);
PARAMETER(1);
PARAMETER(DTL.Include_Credit_Memos);
PARAMETER(DTL.Include_Charge_Backs);
PARAMETER(DTL.Customer_Name);
PARAMETER(DTL.Statement_Type);
PARAMETER('Y');
PARAMETER('N');
PARAMETER('N');
PARAMETER(DTL.Status_Flag_3_Y_N);
PARAMETER(DTL.Print_Yes_No_USR);
PARAMETER(WRK.Status_Flag_5_Y_N);
PARAMETER(WRK.Status_Flag_6_Y_N);
PARAMETER(WRK.Default_Printer);
PARAMETER(WRK.Text_1_Length_USR);
PARAMETER('AR-STMTS');
PARAMETER(LCL.Record_Status);
PARAMETER(DTL.Include_Rebills);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Email has been submitted'
MESSAGE(USR2977 *INFO);

ENDIF;

ENDIF;

ENDIF;

