// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWNBEFR
// ?Date: 14.08.2025 Time: 02:57:02
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//? 6/08/2021 JBB SDD619 - Repayment by Business User
//?                        Function created. copied from function:
//?                        Edt HdRcvAftrSnt2Kill EF - Tattoo Detail.
ENDDO;

//?This program displays all Tattoo Detail records associated with a
//?Company, Buy Order, and Load.  The only Tattoo Detail records that
//?can be updated are the ones that match the incoming Tattoo and
//?Kill Date.  The other records are used for reference only.
// PAR.Tattoo Number Selected = PAR.TH Tattoo Number
PAR.Tattoo_Number_Selected = PAR.TH_Tattoo_Number;

// PAR.Kill Date Selected = PAR.TH Kill Date
PAR.Kill_Date_Selected = PAR.TH_Kill_Date;

// LCL.Update Flag = CND.No
LCL.Update_Flag = 'N';

//?USER: Initialize subfile header

// CTL.TRH Repayment ID = PAR.TRH Repayment ID
CTL.TRH_Repayment_ID = PAR.TRH_Repayment_ID;

// CTL.Kill Date Usr = PAR.TH Kill Date
CTL.Kill_Date_Usr = PAR.TH_Kill_Date;

// CTL.Tattoo Number USR = PAR.TH Tattoo Number
CTL.Tattoo_Number_USR = PAR.TH_Tattoo_Number;

//?Retrieve the current Head Received values
EXECUTE FUNCTION(Rtv Buy Order Load    RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1192881;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.BOL_Kill_Date);
PARAMETER(NLL.BOL_Pln_Delv_Start_Time);
PARAMETER(NLL.BOL_Pln_Delv_End_Time);
PARAMETER(NLL.BOL_Pln_Head_Delv);
PARAMETER(NLL.BOL_Shipped_Wgt);
PARAMETER(NLL.BOL_Pln_Delv_Date);
PARAMETER(NLL.BOL_Freight_UOM);
PARAMETER(NLL.BOL_Freight_Unit_Amt);
PARAMETER(NLL.BOL_Freight_Amt);
PARAMETER(NLL.BOL_Freight_Allocation);
PARAMETER(CTL.BOL_Head_Received_3_0);
PARAMETER(NLL.BOL_Live_Wgt_Received);
PARAMETER(NLL.BOL_Trucker_Payment_Sts);
PARAMETER(NLL.BOL_Trucker_Check_Number);
PARAMETER(NLL.BOL_Trucker_Check_Date);
PARAMETER(NLL.BOL_AP_Voucher);
PARAMETER(NLL.BOL_Trailer);
PARAMETER(NLL.BOL_Freight_Exp_Paid_By);
PARAMETER(NLL.BOL_Scheduled_Kill_Shift);
PARAMETER(NLL.BOL_Truck_Scale_Weigh_Sts);
PARAMETER(NLL.Reported_to_USDA);
PARAMETER(NLL.BOL_MPR_Prior_Day_Prch);
PARAMETER(NLL.BOL_Violated_Auth_Tme_Sts);
PARAMETER(NLL.TRK_Trucker_Code);
PARAMETER(NLL.PD_Producer_Code);
PARAMETER(NLL.PL_Location_Code);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CTL.Head Rcvd 1 = CON.*ZERO
CTL.Head_Rcvd_1 = *ZERO;

//?RMC ADDED KILL DATE RST HERE
EXECUTE FUNCTION(Rtv Hd Rcvd for Repay RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1369077;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);
PARAMETER(CTL.Head_Rcvd_1);
{
 //?USER: Initialize routine

 // LCL.Head Rcvd 1 = CON.*ZERO
 LCL.Head_Rcvd_1 = *ZERO;

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // LCL.Head Rcvd 1 = LCL.Head Rcvd 1 + DB1.TH Head Received
 LCL.Head_Rcvd_1 = LCL.Head_Rcvd_1 + DB1.TH_Head_Received;

 //?USER: Exit processing

 // PAR.Head Rcvd 1 = LCL.Head Rcvd 1
 PAR.Head_Rcvd_1 = LCL.Head_Rcvd_1;

}


//?Position to the first Tattoo for the Company, Buy Order, and Load
// CTL.Calc BOL Head Rcvd USR = CON.*ZERO
CTL.Calc_BOL_Head_Rcvd_USR = *ZERO;

// CTL.Calc Head Rcvd 1 = CON.*ZERO
CTL.Calc_Head_Rcvd_1 = *ZERO;

//?USER: Initialize subfile record (existing record)

EXECUTE FUNCTION(Rtv Tattoo Repay Dtl  RT) TYPE(RTVOBJ) FILE(PWAXCPP)           AB1368821;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(NLL.Transfer_Buy_Order_Number);
PARAMETER(NLL.Transfer_Buy_Order_Load);
PARAMETER(NLL.Transfer_Tattoo_Number);
PARAMETER(NLL.TRD_Repayment_Status);
PARAMETER(RCD.Pen_Head_Original);
PARAMETER(NLL.TRD_Payment_Sts);
PARAMETER(NLL.TRD_Process_Code);
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(NLL.PS_Site_ID);
PARAMETER(NLL.SR_Source_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(NLL.PC_Contract_Code);
PARAMETER(NLL.PSC_Sub_Contract_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// RCD.Pen Head - Current = RCD.TD Pen Head
RCD.Pen_Head_Current = RCD.TD_Pen_Head;

//?Initially load New Head from Current Head
// RCD.Pen Head - New = RCD.TD Pen Head
RCD.Pen_Head_New = RCD.TD_Pen_Head;

//?Protect New Pen Head field if Tattoo Numbers do not match
CASE;

// IF RCD.TH Tattoo Number NE CTL.Tattoo Number USR
IF RCD.TH_Tattoo_Number <> CTL.Tattoo_Number_USR;

// RCD.Protect field = CND.Yes
RCD.Protect_field = 'Y';

//?Protect New Pen Head field if Tattoo Numbers do not match
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.Protect field = CND.No
RCD.Protect_field = 'N';

ENDIF;

// PGM.*Re-read Subfile Record = CND.*YES
PGM.*Re_read_Subfile_Record = 1;

//?USER: Validate subfile control

//?Initial flag that signifies that a Pen Head was changed
// LCL.Update Flag = CND.No
LCL.Update_Flag = 'N';

//?Initialize the new Tattoo Header and Buy Order Load screen fields.
// CTL.Calc Head Rcvd 1 = CTL.Head Rcvd 1
CTL.Calc_Head_Rcvd_1 = CTL.Head_Rcvd_1;

// CTL.Calc BOL Head Rcvd USR = CTL.BOL Head Received 3.0
CTL.Calc_BOL_Head_Rcvd_USR = CTL.BOL_Head_Received_3_0;

//?Initialize BOL Head Received accumulator
// LCL.Calc BOL Head Rcvd USR = CON.*ZERO
LCL.Calc_BOL_Head_Rcvd_USR = *ZERO;

//?USER: Validate subfile record fields

//?Determine difference between original value and new value
// RCD.DIFF Total Head = RCD.Pen Head - New - RCD.Pen Head - Current
RCD.DIFF_Total_Head = RCD.Pen_Head_New - RCD.Pen_Head_Current;

//?Accumulate Tattoo Header and BOL values for Head Received
// CTL.Calc BOL Head Rcvd USR = CTL.Calc BOL Head Rcvd USR + RCD.DIFF Total Head
CTL.Calc_BOL_Head_Rcvd_USR = CTL.Calc_BOL_Head_Rcvd_USR + RCD.DIFF_Total_Head;

// CTL.Calc Head Rcvd 1 = CTL.Calc Head Rcvd 1 + RCD.DIFF Total Head
CTL.Calc_Head_Rcvd_1 = CTL.Calc_Head_Rcvd_1 + RCD.DIFF_Total_Head;

//?Set update flag so confirmation prompt will display
// LCL.Update Flag = CND.Yes
LCL.Update_Flag = 'Y';

//?USER: Validate subfile record relations

//?Determine confirm prompt Y/N
CASE;

// IF LCL.Update Flag is Yes
IF LCL.Update_Flag = 'Y';

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

//?Determine confirm prompt Y/N
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Hd Rcvd for Repay CH) TYPE(CHGOBJ) FILE(PKA2CPP)           AB1367844;
PARAMETER(RCD.BOH_Company_Number);
PARAMETER(RCD.BOH_Buy_Order_Number);
PARAMETER(RCD.BOL_Load_Number);
PARAMETER(RCD.TH_Tattoo_Number);
PARAMETER(RCD.TH_Kill_Date);
PARAMETER(RCD.TD_Sequence_Number);
PARAMETER(RCD.Pen_Head_New);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?USER: Exit program processing

//?RMC MOVED HERE FROM FUNCTION KEYS 1/20/22
//?Perform Tattoo Header, BOL, and Tattoo Repayment Detail updates
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Chg Hd Rcvd for Repay CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1367845;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(CTL.Calc_Head_Rcvd_1);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


// LCL.TH Head Received = CON.*ZERO
LCL.TH_Head_Received = *ZERO;

EXECUTE FUNCTION(RTV Head Rec/Live Wgt RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1172937;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(LCL.TH_Head_Received);
PARAMETER(NLL.TH_Avg_Live_Wgt);
{
 //?USER: Process Data record

 // PAR.TH Head Received = PAR.TH Head Received + DB1.TH Head Received
 PAR.TH_Head_Received = PAR.TH_Head_Received + DB1.TH_Head_Received;

 CASE;

 // IF DB1.TH Tattoo Number EQ PAR.TH Tattoo Number
 IF DB1.TH_Tattoo_Number = PAR.TH_Tattoo_Number;

 // PAR.TH Avg Live Wgt = DB1.TH Avg Live Wgt
 PAR.TH_Avg_Live_Wgt = DB1.TH_Avg_Live_Wgt;

 ENDIF;

}


EXECUTE FUNCTION(Chg BOL Head Received CH) TYPE(CHGOBJ) FILE(PKAXCPP)           AB1351161;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(LCL.TH_Head_Received);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?Update Tattoo Repayment Detail and create comments
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Head - Orig 3 Alpha = CVTVAR(CTL.Head Rcvd 1)
LCL.Head_Orig_3_Alpha = CVTVAR(CTL.Head_Rcvd_1);

// LCL.Head - New 3 Alpha = CVTVAR(CTL.Calc Head Rcvd 1)
LCL.Head_New_3_Alpha = CVTVAR(CTL.Calc_Head_Rcvd_1);

// LCL.TRC Comment = CONCAT(CON.Head Received changed fro,CON.m,CND.*None)
LCL.TRC_Comment = 'Head Received changed fro' + 'm' (*ZERO);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Head - Orig 3 Alpha,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + LCL.Head_Orig_3_Alpha (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,CON.to,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + 'to' (1);

// LCL.TRC Comment = CONCAT(LCL.TRC Comment,LCL.Head - New 3 Alpha,CND.*One)
LCL.TRC_Comment = LCL.TRC_Comment + LCL.Head_New_3_Alpha (1);

EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(LCL.TRC_Comment);
PARAMETER('S');
{
 //?USER: Processing before Data update

 //?Make sure BOH Company Number is populated
 CASE;

 // IF PAR.BOH Company Number is *ZERO
 IF PAR.BOH_Company_Number = *ZERO;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 ENDIF;

 EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(DB1.TRC_Sequence);
 {
  //?USER: Processing if Data record not found

  // PAR.TRC Sequence = CON.1
  PAR.TRC_Sequence = 1;

  //?USER: Process Data record

  // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
  PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


// Call program Chg Tatt Repay Dtl Sts XF.
CALL PROGRAM(Chg Tatt Repay Dtl Sts XF) ('PWNQXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER('E');

//?Create a Tattoo Repayment Comment showing record as Edited
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.TRC Comment = CONCAT(CON.Tattoo record marked as e,CON.dited (Head Received),CND.*None)
LCL.TRC_Comment = 'Tattoo record marked as e' + 'dited (Head Received)' (*ZERO);

EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
PARAMETER(PAR.CC_Company_Number);
PARAMETER(PAR.TRH_Repayment_ID);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(LCL.TRC_Comment);
PARAMETER('S');
{
 //?USER: Processing before Data update

 //?Make sure BOH Company Number is populated
 CASE;

 // IF PAR.BOH Company Number is *ZERO
 IF PAR.BOH_Company_Number = *ZERO;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 ENDIF;

 EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(DB1.TRC_Sequence);
 {
  //?USER: Processing if Data record not found

  // PAR.TRC Sequence = CON.1
  PAR.TRC_Sequence = 1;

  //?USER: Process Data record

  // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
  PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


ENDIF;

ENDIF;

ENDIF;

//?Exit program after update
RETURN;

