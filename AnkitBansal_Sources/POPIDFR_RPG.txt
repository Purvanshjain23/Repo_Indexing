     H/TITLE ZZWW Whse Inv/Ord Cmpr DF Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by AllFusion 2E release 8.1SP2 (1250)
     H* Function type : Display file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 02/23/10  Time  : 09:08:28
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPOPIDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: ZZWW Whse Inv/Ord Cmpr DF Display file
      *
     FPDIORELCIF  E           K        DISK
     F                                              KINFDS INFDS1
      * RSQ : Item Bill Of Material     Co/Compo Itm/BomTp(D)/It
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDIOREL7IF  E           K        DISK
      * RSQ : Item Bill Of Material     Co/Component Item
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse                 Retrieval index       NV
      *
     FPDL5CPL1IF  E           K        DISK
      * RTV : Item Lot Location         Retrieval index
      *
     FCAB0RELCIF  E           K        DISK
      * RSQ : Item Balance              Co/Whse/Item
      *
     FPDI8CPL1IF  E           K        DISK
      * RTV : PS Prod Item Schedule     Retrieval index
      *
     FOPBGWKLFIF  E           K        DISK
      * RSQ : Order Detail              Co/Itm/Whs/SSD(d)/Od Omt
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FPDI8CPLNIF  E           K        DISK
      * RSQ : PS Prod Item Schedule     Co/Itm/Whs/ShpDte(D)
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     E                    J3          3  1
     E                    K3          3  1
      * RIGHT JUSTIFY INPUT FIELD
     E                    J7          7  1
     E                    K7          7  1
      * RIGHT JUSTIFY INPUT FIELD
      * Days in month for date validation
     E                    @XD    12  12  2 0
     E                    #L7         7  1
     E                    #L3         3  1
     E                    UCT        40  1               CENTER TABLE
      * Screen: Field position and name array
     E                    W0BEG   7 028  5 0A
     E                    W0END   7 028  5 0A
     E                    W0NAM   7 028 10
     E                    YDOW        7  1               *Days of week
     I@IOREG9
      * Item Bill Of Material     Co/Component Item
      * Renamed input format fields
     I              IOAIC3                          WAAIC3
     I              IOHGCD                          WAHGCD
     I              IOC9NB                          WAC9NB
     I              IOV2ST                          WAV2ST
     I              IOBOPR                          WABOPR
     I              IOBPPR                          WABPPR
     I              IOHGQT                          WAHGQT
     I              IOHHCD                          WAHHCD
     I              IOYAST                          WAYAST
     I              IOCNSM                          WACNSM
     I              IOBMY1                          WABMY1
     I              IOBMY2                          WABMY2
     I              IOIXQT                          WAIXQT
     I              IOIYQT                          WAIYQT
     I              IORSST                          WARSST
     I              IORTST                          WARTST
     I              IOUVST                          WAUVST
     I              IOUWST                          WAUWST
     I              IOUXST                          WAUXST
     I              IOVSST                          WAVSST
     I              IOAATM                          WAAATM
     I              IOAYNA                          WAAYNA
     I              IOA0NA                          WAA0NA
     I              IOAXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse                 Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     I@I8CPMH
      * PS Prod Item Schedule     Co/Itm/Whs/ShpDte(D)
      * Renamed input format fields
     I              I8AIC3                          WCAIC3
     I              I8V5ST                          WCV5ST
     I              I8ELDT                          WCELDT
     I              I8HGCD                          WCHGCD
     I              I8AJCD                          WCAJCD
     I              I8GPDT                          WCGPDT
     I              I8WTSP                          WCWTSP
     I              I8QTSP                          WCQTSP
     I              I8DJPC                          WCDJPC
     I              I8F8WG                          WCF8WG
     I              I8WTIN                          WCWTIN
     I              I8D5NB                          WCD5NB
     I              I8DXWG                          WCDXWG
     I              I8B2NB                          WCB2NB
     I              I8WTCN                          WCWTCN
     I              I8PSCV                          WCPSCV
     I              I8SAWT                          WCSAWT
     I              I8B9NB                          WCB9NB
     I              I8D1WG                          WCD1WG
     I              I8CBNB                          WCCBNB
     I              I8EZWG                          WCEZWG
     I              I8CCNB                          WCCCNB
     I              I8E0WG                          WCE0WG
     I              I8D6NB                          WCD6NB
     I              I8OAWT                          WCOAWT
     I              I8CDNB                          WCCDNB
     I              I8UNW2                          WCUNW2
     I              I8CENB                          WCCENB
     I              I8F9WG                          WCF9WG
     I              I8BPNB                          WCBPNB
     I              I8GAWG                          WCGAWG
     I              I8BQNB                          WCBQNB
     I              I8GBWG                          WCGBWG
     I              I8BRNB                          WCBRNB
     I              I8GCWG                          WCGCWG
     I              I8BSNB                          WCBSNB
     I              I8GDWG                          WCGDWG
     I              I8BWNB                          WCBWNB
     I              I8GEWG                          WCGEWG
     I              I8PS6U                          WCPS6U
     I              I8WCST                          WCWCST
     I              I8WPST                          WCWPST
     I              I8B5ST                          WCB5ST
     I              I8TFST                          WCTFST
     I              I8TEST                          WCTEST
     I              I8THST                          WCTHST
     I              I8UDST                          WCUDST
     I              I8UFST                          WCUFST
     I              I8UGST                          WCUGST
     I              I8UHST                          WCUHST
     I              I8B6ST                          WCB6ST
     I              I8B7ST                          WCB7ST
     I              I8DVWG                          WCDVWG
     I              I8D7NB                          WCD7NB
     I              I8FCAD                          WCFCAD
     I              I8D9NB                          WCD9NB
     I              I8DWWG                          WCDWWG
     I              I8EANB                          WCEANB
     I              I8SHWT                          WCSHWT
     I              I8EBNB                          WCEBNB
     I              I8AVWT                          WCAVWT
     I              I8ECNB                          WCECNB
     I              I8WTON                          WCWTON
     I              I8EDNB                          WCEDNB
     I              I8FNWT                          WCFNWT
     I              I8EENB                          WCEENB
     I              I8QTAS                          WCQTAS
     I              I8EFNB                          WCEFNB
     I              I8WAIO                          WCWAIO
     I              I8EGNB                          WCEGNB
     I              I8R3CD                          WCR3CD
     I              I8RGNB                          WCRGNB
     I              I8RHNB                          WCRHNB
     I              I8RINB                          WCRINB
     I              I8XRCD                          WCXRCD
     I              I8UVST                          WCUVST
     I              I8UWST                          WCUWST
     I              I8UXST                          WCUXST
     I              I8VSST                          WCVSST
     I              I8AATM                          WCAATM
     I              I8AYNA                          WCAYNA
     I              I8A0NA                          WCA0NA
     I              I8AXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      * Outward parameters
     IPARC        DS                             11
      * KEY : Item Bill Of Material     Co/Compo Itm/BomTp(D)/It
      * I : RST Company Number
     I                                    P   1   20PAAIC3
      * I : RST Component Item Code
     I                                    P   3   60PAC9NB
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: *Arrays
      * N : MAP Warehouse Code
     I                                        1   3 P1AJCD
      * N : MAP Company Number
     I                                    P   4   50P1AIC3
      * N : MAP Application Code
     I                                        6  11 P1DNCD
      * N : MAP Enterprise Code 1
     I                                       12  15 P1DQCD
      * N : MAP Enterprise Code 2
     I                                       16  27 P1DRCD
      * N : MAP Salesperson Code
     I                                       28  30 P1BCCD
      * N : MAP System Date Format
     I                                       31  33 P1B8NA
      * N : MAP User Profile Name
     I                                       34  43 P1AJVN
      * N : MAP Allow Multi-Company
     I                                       44  44 P1I6ST
      * N : MAP Default Printer
     I                                       45  54 P1MPNA
      * N : MAP First Time Flag
     I                                       55  55 P1TAST
      * N : MAP Name
     I                                       56  85 P1ADTX
      * N : MAP System Value Alpha
     I                                       86 125 P1BXTX
      * N : MAP Access Denied (Y/N)
     I                                      126 126 P1WVST
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'CD3 Non numeric data'
      * Message data for 'CD7 Non numeric data'
      * Message data for 'Date Not In Range'
      * *DATE
     I                                    P   1   40ZA0001
      * USR From Date
     I                                    P   5   80ZA0002
      * USR Through Date
     I                                    P   9  120ZA0003
      * Message data for 'Warehouse Code Required'
      * Warehouse Code
     I                                        1   3 ZA0004
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0005
      * Application Code
     I                                       11  16 ZA0006
      * Message data for 'Application access denied'
      * User Profile Name
     I                                        1  10 ZA0007
      * Application Code
     I                                       11  16 ZA0008
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * USER: Initialize subfile control
      * First time
      * CASE: LCL.First Time Flag is Yes
     C           YL0001    IFEQ 'Y'                        *IF
     C                     Z-ADD##JDT     #CJEDT           Date From
      * CTL.Date To               USR = CTL.Date From             USR + C
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD4         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CJFDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CJFDT
     C                     END
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
     C                     MOVEL'GP1'     #PAJCD           Warehouse Code
     C                     MOVEL'N'       YL0001           First Time Flag
     C                     END                             *FI
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
     C                     EXSR SARVGN
      * CASE: CTL.Date From             USR LT JOB.*Job date
     C           #CJEDT    IFLT ##JDT                      *IF
     C                     Z-ADD##JDT     #CJEDT           Date From
     C                     END                             *FI
      * CASE: CTL.Date To               USR LT CTL.Date From
     C           #CJFDT    IFLT #CJEDT                     *IF
      * CTL.Date To               USR = CTL.Date From             USR + C
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD4         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CJFDT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CJFDT
     C                     END
     C                     END                             *FI
     C                     Z-ADD#CJEDT    YL0005           Date From
     C                     Z-ADD#CJFDT    YL0006           Date To
     C           #CJEDT    ADD  -1        #CE5DT           USR Day 6
     C                     Z-ADD#2C9NB    YL0007           Component Item
     C                     Z-ADD#CJEDT    #CFFDT           USR Day 1
      * CTL.USR Day 2 = CTL.Date From             USR + CON.1 *DAYS
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD1         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE1DT
     C                     END
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
     C                     Z-ADD*ZERO     #CE3DT           USR Day 4
     C                     Z-ADD*ZERO     #CE4DT           USR Day 5
      * CASE: CTL.USR Day 2 LE CTL.Date To               USR
     C           #CE1DT    IFLE #CJFDT                     *IF
      * CTL.USR Day 3 = CTL.Date From             USR + CON.2 *DAYS
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD2         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE2DT
     C                     END
      * CASE: CTL.USR Day 3 LE CTL.Date To               USR
     C           #CE2DT    IFLE #CJFDT                     *IF
      * CTL.USR Day 4 = CTL.Date From             USR + CON.3 *DAYS
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD3         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE3DT
     C                     END
      * CASE: CTL.USR Day 4 LE CTL.Date To               USR
     C           #CE3DT    IFLE #CJFDT                     *IF
      * CTL.USR Day 5 = CTL.Date From             USR + CON.4 *DAYS
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD4         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111110' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #CE4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   #CE4DT
     C                     END
      * CASE: CTL.USR Day 5 GT CTL.Date To               USR
     C           #CE4DT    IFGT #CJFDT                     *IF
     C                     Z-ADD*ZERO     #CE4DT           USR Day 5
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CE3DT           USR Day 4
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
     C                     END                             *FI
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           IOAIC3           Company Number
     C                     KFLD           IOC9NB           Component Item
     C                     KFLD           IOV2ST           BOM Type
     C                     KFLD           IOHGCD           Item Code
      * Setup key
     C                     Z-ADD#2AIC3    IOAIC3
     C                     Z-ADD#2C9NB    IOC9NB
     C           #2V2ST    IFEQ *BLANK
     C                     MOVEL*HIVAL    IOV2ST           BOM Type
     C                     ELSE
     C                     MOVEL#2V2ST    IOV2ST
     C                     ENDIF
     C                     Z-ADD#2HGCD    IOHGCD
     C           KPOS      SETLL@IOREMG
     C                     READ @IOREMG                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2V2ST    WZV2ST
     C                     MOVEL#2V2ST    WZV2ST           BOM Type
     C           *LIKE     DEFN #2HGCD    WZHGCD
     C                     MOVEL#2HGCD    WZHGCD           Item Code
     C           *LIKE     DEFN #2AIC3    WZAIC3
     C                     MOVEL#2AIC3    WZAIC3           Company Number
     C           *LIKE     DEFN #CSQTX    WZSQTX
     C                     MOVEL#CSQTX    WZSQTX           Company Name DR
     C           *LIKE     DEFN #2C9NB    WZC9NB
     C                     MOVEL#2C9NB    WZC9NB           Component Item
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@IOREMG                  90*
     C  N82                READ @IOREMG                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,36
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2C9NB    OREQ *ZERO                      Component Item
     C           #2V2ST    IFNE *BLANK                     BOM Type
     C           IOV2ST    CABNE#2V2ST    BB020            BOM Type
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2C9NB    OREQ *ZERO                      Component Item
     C           #2V2ST    OREQ *BLANK                     BOM Type
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           IOHGCD    CABNE#2HGCD    BB020            Item Code
     C                     END
     C                     END
     C           #2AIC3    IFEQ *ZERO                      Company Number
     C           #2C9NB    IFNE *ZERO                      Component Item
     C           IOC9NB    CABNE#2C9NB    BB020            Component Item
     C                     END
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
     C                     MOVEL'Y'       W0RSL   1
      * Allow for possible *Set Cursor processing
     C                     ADD  1         ##RR
      * USER: Initialize subfile record from DBF record
      * Rtv Base/Cnv/Lss sts   RT - Company Item  * 
     C                     EXSR SBRVGN
      * CASE:
      *  - c1ANDc2ANDc3
      *   |- c1    : DB1.Component Item Code EQ DB1.Item Code
      *   |- c2    : DB1.BOM Type is Produced - Meat
      *   |- c3    : LCL.Base/Conv/Loss Item is Base
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           IOC9NB    IFEQ IOHGCD                     *IF
     C           IOV2ST    IFEQ 'P'                        *IF
     C           YL0008    IFEQ 'B'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * Rtv Whs Inv/Ord Cmprs RT - Item Bill Of Material  * 
     C                     EXSR SCRVGN
      * Compute: Tot Sched Ord
      * RCD.Quantity 7.0 USR =
      *    *COMPUTE (x1+x2+x3+x4+x5+x6)
      * x1    : RCD.Qty Sched Ord 1 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : RCD.Qty Sched Ord 2 USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : RCD.Qty Sched Ord 3 USR
      * +     : PGM.*Synon (15,0) work field
      * x4    : RCD.Qty Sched Ord 4 USR
      * +     : PGM.*Synon (15,0) work field
      * x5    : RCD.Qty Sched Ord 5 USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : RCD.Qty Sched Ord 6 USR
     C           #RLKQT    ADD  #RLLQT    W0WJ04           *Synon (15,0) w
     C           W0WJ04    ADD  #RLVQT    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  #RMOQT    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  #RMPQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    ADD  #RMQQT    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    #RTQTC           Quantity 7.0 US
      * Compute: Sched prod total
      * RCD.Scheduled Production =
      *    *COMPUTE (x1+x2+x3+x4+x5+x6)
      * x1    : RCD.Qty Sched Prod 1 USR
      * +     : PGM.*Synon (15,0) work field
      * x2    : RCD.Qty Sched Prod 2 USR
      * +     : PGM.*Synon (15,0) work field
      * x3    : RCD.Qty Sched Prod 3 USR
      * +     : PGM.*Synon (15,0) work field
      * x4    : RCD.Qty Sched Prod 4 USR
      * +     : PGM.*Synon (15,0) work field
      * x5    : RCD.Qty Sched Prod 5 USR
      * +     : PGM.*Synon (15,0) work field
      * x6    : RCD.Qty Sched Prod 6 USR
     C           #RLIQT    ADD  #RLJQT    W0WJ04           *Synon (15,0) w
     C           W0WJ04    ADD  #RLWQT    W0WJ03           *Synon (15,0) w
     C           W0WJ03    ADD  #RM9QT    W0WJ02           *Synon (15,0) w
     C           W0WJ02    ADD  #RNAQT    W0WJ01           *Synon (15,0) w
     C           W0WJ01    ADD  #RNOQT    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    #RKEQT           Scheduled Produ
      * Compute: Variance
      * RCD.Qty On-Hand USR 2 =
      *    *COMPUTE (x1 + x2 - x3)
      * x1    : RCD.Qty On-Hand USR
      * +     : PGM.*Synon (17,7) work field
      * x2    : RCD.Scheduled Production
      * -     : RCD.Qty On-Hand USR 2
      * x3    : RCD.Quantity 7.0 USR
     C           #RLEQT    ADD  #RKEQT    W0WD00           *Synon (17,7) w
     C           W0WD00    SUB  #RTQTC    #RMSQT           Qty On-Hand USR
     C                     Z-ADD#RMSQT    #RMSQT           Qty On-Hand USR
     C                     SUB  1         ##RR
      * DBF record not selected
     C           W0RSL     CABNE'Y'       BB020
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @IOREMG                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate Company Number and convert to internal.
      * CD3 Ext/Int
     C                     MOVELV2AIC3    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC3  3
     C                     MOVEA*BLANKS   K3
     C                     Z-ADD3         C       30
     C                     Z-ADD3         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUDMCD    J3
     C                     MOVE *BLANKS   W0RTN
     C                     DO   3
     C           J3,C      IFNE ' '
     C                     MOVEAJ3,C      K3,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK3        JUSTC3
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC3    TESTC   1
     C           TESTC     IFGT '?'
     C           TESTC     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC3     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC3    WUDMCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD3 Non numeric data'
     C                     MOVEL'USR0752' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2AIC3           CD3 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUDMCD    #2AIC3           CD3 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Component Item Code and convert to internal.
      * CD7 Ext/Int
     C                     MOVELV2C9NB    WUI3ST           USR First Posit
     C                     MOVEL*BLANK    W0RTN            *Return code
      * CASE: WRK.USR First Position is Search request
     C           WUI3ST    IFEQ '?'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELV2C9NB    WUEOCD           CD7 Ext Numeric
      * CD7 Ext/Int EXCUSRSRC - *Field attribute types  * 
     C                     MOVE *BLANKS   JUSTC7  7
     C                     MOVEA*BLANKS   K7
     C                     Z-ADD7         C       30
     C                     Z-ADD7         D       30
      * FIELD LOADED TO WRK CONTEXT BY INTERNAL FUNCTION
     C                     MOVEAWUEOCD    J7
     C                     MOVE *BLANKS   W0RTN
     C                     DO   7
     C           J7,C      IFNE ' '
     C                     MOVEAJ7,C      K7,D
     C                     SUB  1         D
     C                     END
     C                     SUB  1         C
     C                     END
     C                     MOVEAK7        JUSTC7
      * TEST FOR INVALID DATA IN FIELD
     C                     MOVE JUSTC7    TEST7   1
     C           TEST7     IFGT '?'
     C           TEST7     ANDLT'0'
     C                     MOVE 'USR0752' W0RTN
     C                     ELSE
     C                     MOVE *IN60     HLDIN   1
     C                     TESTN          JUSTC7     606060
     C           *IN60     IFEQ '0'
     C                     MOVE 'USR0752' W0RTN
     C                     END
     C                     END
     C                     MOVE JUSTC7    WUEOCD
     C                     MOVE HLDIN     *IN60
      * CASE: PGM.*Return code is CD3 Non numeric data
     C           W0RTN     IFEQ 'USR0752'                  *IF
      * Setup message data for message
      * Send message 'CD7 Non numeric data'
     C                     MOVEL'USR0802' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     Z-ADD*ZERO     #2C9NB           CD7 Int Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVE WUEOCD    #2C9NB           CD7 Int Numeric
     C                     END                             *FI
     C                     END                             *FI
      * Validate Date From             USR
      * External date
     C                     Z-ADDVCJEDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9934  *
     C                     END
     C                     Z-ADDXDINDT    #CJEDT
      * Validate Date To               USR
      * External date
     C                     Z-ADDVCJFDT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9935  *
     C                     END
     C                     Z-ADDXDINDT    #CJFDT
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      *................................................................
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * CALC: Subfile control function fields
     C                     MOVEL*BLANK    #CSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SMRVGN
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAIC3    CASNE#2AIC3    FBRQRL
     C           WZC9NB    CASNE#2C9NB    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * USER: Process subfile control (Pre-confirm)
      * LCL.Date Used for Calculation = CTL.Date From             USR + C
     C           #CJEDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD5         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0055
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0055
     C                     END
      * CASE: CTL.Date To               USR GT LCL.Date Used for Calculat
     C           #CJFDT    IFGT YL0055                     *IF
      * Setup message data for message
      * Convert Date To               USR to display format
      * Convert date
     C           1000000   ADD  #CJFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0001
      * Convert Date From             USR to display format
      * Convert date
     C           1000000   ADD  #CJEDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
      * Convert Date Used for Calculation to display format
      * Convert date
     C           1000000   ADD  YL0055    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0003
      * Send message 'Date Not In Range'
     C                     MOVEL'USR2248' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     993534*
      *
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * Refresh conditions
      * CASE:
      *  - c1ORc2ORc3ORc4
      *   |- c1    : CTL.Date From             USR NE LCL.Date From
      *   |- c2    : CTL.*CMD key is *Refresh
      *   |- c3    : CTL.Component Item Code NE LCL.Component Item Code
      *   |- c4    : CTL.Date To               USR NE LCL.Date To
      *   '-
     C           #CJEDT    IFNE YL0005                     *IF
     C           *IN05     OREQ '1'                        *OR
     C           #2C9NB    ORNE YL0007                     *OR
     C           #CJFDT    ORNE YL0006                     *OR
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * F4=Prompt
      * CASE: CTL.*CMD key is *Prompt
     C           *IN04     IFEQ '1'                        *IF
      * CASE: PGM.*Cursor field <IS> CTL.Warehouse Code
     C           W0CFL     IFEQ '#PAJCD'                   *IF
      * SEL Warehouse          SR - Warehouse  * 
     C                     CALL 'CAANSRR'              90  SEL Warehouse
     C                     PARM *BLANK    W0RTN   7
     C           #PAJCD    PARM #PAJCD    WQ0001  3        Warehouse Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'CAANSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9932  *
     C                     END
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
      * CASE: PGM.*Cursor field <IS> CTL.Component Item Code
     C           W0CFL     IFEQ 'V2C9NB'                   *IF
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     GOTO DAEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,36
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * 5=Dsp Consumed Items
      * CASE: RCD.*SFLSEL is Option 5
     C           #1SEL     IFEQ ' 5'                       *IF
     C           #1SEL     OREQ '5'
      * Dsp Cnsmd Inv/Ord Cmpr DF - Item Bill Of Material  * 
     C                     CLEARPARC
     C                     Z-ADD#1AIC3    PAAIC3           Company Number
     C                     Z-ADD#1C9NB    PAC9NB           Component Item
      *
     C                     CALL 'POPJDFR'              90  ZZDsp Cnsmd Inv
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PARC             KEY: Item Bill
     C                     PARM #CFFDT    WQ0002  70       USR Day 1
     C                     PARM #CE1DT    WQ0003  70       USR Day 2
     C                     PARM #CE2DT    WQ0004  70       USR Day 3
     C                     PARM #CE3DT    WQ0005  70       USR Day 4
     C                     PARM #CE4DT    WQ0006  70       USR Day 5
     C                     PARM #PAJCD    WQ0007  3        Warehouse Code
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POPJDFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9832  *
     C                     END
     C                     END                             *FI
      * Dsp:  Item Orders        opt 8
      * CASE: RCD.*SFLSEL is *8
     C           #1SEL     IFEQ '8'                        *IF
     C                     MOVEL'Y'       YL0056           *Initial call
      * Dsp Item Orders       DF - Order Detail  * 
     C                     CALL 'PDO7DFR'              90  Dsp Item Orders
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0008  30       Company Number
     C                     PARM #1HGCD    WQ0009  70       Item Code
     C                     PARM ##JDT     WQ0010  70       Scheduled Ship
     C                     PARM #CSQTX    WQ0011 30        Name
     C                     PARM #PAJCD    WQ0012  3        Warehouse Code
     C           YL0056    PARM YL0056    WQ0013  1        *Initial call
     C                     PARM YL0004    WQ0014  2        Warehouse Type
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDO7DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9832  *
     C                     END
     C                     END                             *FI
      * Dsp:  Item Warehouse Inquiry Detail
      * CASE: RCD.*SFLSEL is 9
     C           #1SEL     IFEQ '9'                        *IF
      * CASE: CTL.Warehouse Code is Warehouse Code Blank
     C           #PAJCD    IFEQ *BLANK                     *IF
      * Setup message data for message
     C                     MOVEL#PAJCD    ZA0004           Warehouse Code
      * Send message 'Warehouse Code Required'
     C                     MOVEL'USR2015' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9832  *
      *
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       YL0056           *Initial call
      * CASE: LCL.Lot Tracking Flag is yes
     C           YL0003    IFEQ 'Y'                        *IF
      * Dsp Item Lot Locs     DF - Item Lot Location  * 
     C                     CALL 'PDH2DFR'              90  Dsp Item Lot Lo
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0015  30       Company Number
     C                     PARM #1HGCD    WQ0016  70       Item Code
     C                     PARM #PAJCD    WQ0017  3        Warehouse Code
     C                     PARM *ZERO     WQ0018  70       Production Date
     C           YL0056    PARM YL0056    WQ0019  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDH2DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9832  *
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * Rtv Base Values PA    RT - Company Item  * 
     C                     EXSR SNRVGN
      * Dsp Item/Whse Inqy Dtl DF - Item Balance Detail  * 
     C                     CALL 'ICQ9DFR'              90  Dsp Item/Whse I
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0020  30       Company Number
     C                     PARM #1HGCD    WQ0021  70       Item Code
     C                     PARM YL0057    WQ0022 30        Description Lin
     C                     PARM YL0058    WQ0023  2        U/M - Primary
     C                     PARM YL0059    WQ0024  94       Conversion Fact
     C                     PARM YL0060    WQ0025  1        Operation Facto
     C                     PARM YL0061    WQ0026  2        U/M - Second
     C                     PARM YL0062    WQ0027  94       Conversion Fact
     C                     PARM YL0063    WQ0028  1        Operation Facto
     C                     PARM YL0064    WQ0029  2        U/M - Third
     C                     PARM YL0066    WQ0030 112       Unit Weight
     C                     PARM YL0067    WQ0031  1        Production Date
     C                     PARM YL0068    WQ0032  1        Catch Weight St
     C                     PARM #PAJCD    WQ0033  3        Warehouse Code
     C                     PARM YL0002    WQ0034 30        Warehouse Descr
     C                     PARM YL0074    WQ0035 30        Name
     C           YL0056    PARM YL0056    WQ0036  1        *Initial call
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ICQ9DFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9832  *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @IOREMG fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     Z-ADDIOAIC3    #1AIC3           Company Number
     C                     MOVELIOV2ST    #1V2ST           BOM Type
     C                     Z-ADDIOHGCD    #1HGCD           Item Code
     C                     Z-ADDIOBOPR    #1BOPR           Sales Yield
     C                     Z-ADDIOBPPR    #1BPPR           Production Yiel
     C                     Z-ADDIOHGQT    #1HGQT           Packaging Quant
     C                     MOVELIOHHCD    #1HHCD           U/M - Primary D
     C                     MOVELIOYAST    #1YAST           Average if WPA
     C                     Z-ADDIOCNSM    #1CNSM           Consume Priorit
     C                     Z-ADDIOBMY1    #1BMY1           Consume Priorit
     C                     Z-ADDIOBMY2    #1BMY2           BOM Pumped Perc
     C                     Z-ADDIOIXQT    #1IXQT           BOM Meat Cost C
     C                     Z-ADDIOIYQT    #1IYQT           BOM Off Line Yi
     C                     MOVELIORSST    #1RSST           BOM Multi-RM Op
     C                     MOVELIORTST    #1RTST           BOM Group Prod
     C                     MOVELIOUVST    #1UVST           EDI Status 1
     C                     MOVELIOUWST    #1UWST           EDI Status 2
     C                     MOVELIOUXST    #1UXST           EDI Status 3
     C                     MOVELIOVSST    #1VSST           Record Status
     C                     Z-ADDIOAATM    #1AATM           Job Time
     C                     MOVELIOAYNA    #1AYNA           User Id
     C                     MOVELIOA0NA    #1A0NA           Job Name
     C                     Z-ADDIOAXDT    #1AXDT           Job Date
     C                     Z-ADDIOC9NB    #1C9NB           Component Item
      * Clear external version also
     C                     MOVEL*BLANK    V1C9NB
     C                     Z-ADD*ZERO     #RNOQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMQQT           Qty Sched Ord 6
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
     C                     Z-ADD*ZERO     #RLKQT           Qty Sched Ord 1
     C                     Z-ADD*ZERO     #RLIQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLLQT           Qty Sched Ord 2
     C                     Z-ADD*ZERO     #RLJQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLVQT           Qty Sched Ord 3
     C                     Z-ADD*ZERO     #RLWQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMOQT           Qty Sched Ord 4
     C                     Z-ADD*ZERO     #RM9QT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RMPQT           Qty Sched Ord 5
     C                     Z-ADD*ZERO     #RNAQT           Qty Sched Prod
     C                     Z-ADD*ZERO     #RLEQT           Qty On-Hand USR
     C                     Z-ADD*ZERO     #RKEQT           Scheduled Produ
     C                     Z-ADD*ZERO     #RTQTC           Quantity 7.0 US
     C                     Z-ADD*ZERO     #RMSQT           Qty On-Hand USR
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #CE5DT           USR Day 6
     C                     MOVELP1DNCD    #PDNCD           Application Cod
     C                     MOVELP1DQCD    #PDQCD           Enterprise Code
     C                     MOVELP1DRCD    #PDRCD           Enterprise Code
     C                     MOVELP1BCCD    #PBCCD           Salesperson Cod
     C                     MOVELP1B8NA    #PB8NA           System Date For
     C                     MOVELP1AJVN    #PAJVN           User Profile Na
     C                     MOVELP1I6ST    #PI6ST           Allow Multi-Com
     C                     MOVELP1MPNA    #PMPNA           Default Printer
     C                     MOVELP1TAST    #PTAST           First Time Flag
     C                     MOVELP1ADTX    #PADTX           Name
     C                     MOVELP1BXTX    #PBXTX           System Value Al
     C                     MOVELP1WVST    #PWVST           Access Denied (
     C                     MOVEL*BLANK    #2V2ST           BOM Type
     C                     Z-ADD*ZERO     #2HGCD           Item Code
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVEL*BLANK    #CSQTX           Company Name DR
     C                     MOVELP1AJCD    #PAJCD           Warehouse Code
     C                     Z-ADD*ZERO     #2C9NB           Component Item
      * Clear external version also
     C                     MOVEL*BLANK    V2C9NB
     C                     Z-ADD*ZERO     #CJEDT           Date From
      * Clear external version also
     C                     Z-ADD*ZERO     VCJEDT
     C                     Z-ADD*ZERO     #CJFDT           Date To
      * Clear external version also
     C                     Z-ADD*ZERO     VCJFDT
     C                     Z-ADD*ZERO     #CFFDT           USR Day 1
      * Clear external version also
     C                     Z-ADD*ZERO     VCFFDT
     C                     Z-ADD*ZERO     #CE1DT           USR Day 2
      * Clear external version also
     C                     Z-ADD*ZERO     VCE1DT
     C                     Z-ADD*ZERO     #CE2DT           USR Day 3
      * Clear external version also
     C                     Z-ADD*ZERO     VCE2DT
     C                     Z-ADD*ZERO     #CE3DT           USR Day 4
      * Clear external version also
     C                     Z-ADD*ZERO     VCE3DT
     C                     Z-ADD*ZERO     #CE4DT           USR Day 5
      * Clear external version also
     C                     Z-ADD*ZERO     VCE4DT
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Component Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1C9NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1C9NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1C9NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1C9NB           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Component Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2C9NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2C9NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2C9NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2C9NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Date From             USR to display format
      * Convert date
     C           1000000   ADD  #CJEDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJEDT
      * Convert Date To               USR to display format
      * Convert date
     C           1000000   ADD  #CJFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCJFDT
      * Convert USR Day 1 to display format
      * Convert date
     C           1000000   ADD  #CFFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFFDT
      * Convert USR Day 2 to display format
      * Convert date
     C           1000000   ADD  #CE1DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE1DT
      * Convert USR Day 3 to display format
      * Convert date
     C           1000000   ADD  #CE2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE2DT
      * Convert USR Day 4 to display format
      * Convert date
     C           1000000   ADD  #CE3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE3DT
      * Convert USR Day 5 to display format
      * Convert date
     C           1000000   ADD  #CE4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE4DT
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Desc/Type/LotTrk  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#PAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSA     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0002           Warehouse Descr
     C                     MOVEL*BLANK    YL0003           Lot Tracking Fl
     C                     MOVEL*BLANK    YL0004           Warehouse Type
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELADF8NA    YL0002           Warehouse Descr
     C                     MOVELADVHST    YL0003           Lot Tracking Fl
     C                     MOVELADWPST    YL0004           Warehouse Type
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Base/Cnv/Lss sts   RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDIOAIC3    BZAIC3           Company Number
     C                     Z-ADDIOC9NB    BZHGCD           Item Code
      * Establish starting position
     C           KRSSB     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0008           Base/Conv/Loss
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZQZCD    YL0008           Base/Conv/Loss
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Whs Inv/Ord Cmprs RT - Item Bill Of Material  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  70       Pieces Prod 1 U
     C                     Z-ADD*ZERO     WN0002  70       Pieces Prod 2 U
     C                     Z-ADD*ZERO     WN0003  70       Pieces Prod 3 U
     C                     Z-ADD*ZERO     WN0004  70       Pieces Prod 4 U
     C                     Z-ADD*ZERO     WN0005  70       Pieces Prod 5 U
     C                     Z-ADD*ZERO     WN0006  70       Pieces Prod 6 U
     C                     Z-ADD*ZERO     WN0007 112       Weight Prod 1 U
     C                     Z-ADD*ZERO     WN0008 112       Weight Prod 2 U
     C                     Z-ADD*ZERO     WN0009 112       Weight Prod 3 U
     C                     Z-ADD*ZERO     WN0010 112       Weight Prod 4 U
     C                     Z-ADD*ZERO     WN0011 112       Weight Prod 5 U
     C                     Z-ADD*ZERO     WN0012 112       Weight Prod 6 U
     C                     Z-ADD*ZERO     WN0013  70       Pieces Schd 1 U
     C                     Z-ADD*ZERO     WN0014  70       Pieces Schd 2 U
     C                     Z-ADD*ZERO     WN0015  70       Pieces Schd 3 U
     C                     Z-ADD*ZERO     WN0016  70       Pieces schd 4 U
     C                     Z-ADD*ZERO     WN0017  70       Pieces Schd 5 U
     C                     Z-ADD*ZERO     WN0018  70       Pieces Schd 6 U
     C                     Z-ADD*ZERO     WN0019 112       Weight Schd 1 U
     C                     Z-ADD*ZERO     WN0020 112       Weight Schd 2 U
     C                     Z-ADD*ZERO     WN0021 112       Weight Schd 3 U
     C                     Z-ADD*ZERO     WN0022 112       Weight Schd 4 U
     C                     Z-ADD*ZERO     WN0023 112       Weight Schd 5 U
     C                     Z-ADD*ZERO     WN0024 112       Weight Schd 6 U
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0001           Company Number
     C                     Z-ADD#1C9NB    WL0002           Item Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    YL0009    P      Description Lin
     C                     MOVELWL0004    YL0010    P      U/M - Primary
     C                     Z-ADDWL0005    YL0011           Unit Weight
     C                     Z-ADDWL0006    YL0012           Item Structure
     C                     Z-ADDWL0007    YL0013           Item Structure
     C                     Z-ADDWL0008    YL0014           Item Structure
     C                     MOVELWL0009    YL0015    P      Item Type Code
     C                     MOVELWL0010    YL0016    P      Default Warehou
     C                     Z-ADDWL0011    YL0017           Fresh Chilling
     C                     MOVELWL0012    YL0018    P      Base/Conv/Loss
     C                     MOVELWL0013    YL0019    P      Variety/Rendere
     C                     MOVELWL0014    YL0020    P      Credit Item Sta
     C                     Z-ADDWL0015    YL0021           Std Weight/Head
     C                     Z-ADDWL0016    YL0022           Pieces Per Head
     C                     MOVELWL0017    YL0023    P      Department Code
     C                     MOVELWL0018    YL0024    P      Group for Packa
     C                     MOVELWL0019    YL0025    P      Seconds Item
     C                     MOVELWL0020    YL0026    P      Piece Count Ite
     C                     Z-ADDWL0021    YL0027           Pieces Per Bag
     C                     Z-ADDWL0022    YL0028           Bags Per Unit
     C                     MOVELWL0023    YL0029    P      Export/Domestic
     C                     MOVELWL0024    YL0030    P      Print On Schedu
     C                     MOVELWL0025    YL0031    P      Fresh Inv Alloc
     C                     MOVELWL0026    YL0032    P      Fresh Sched As
     C                     MOVELWL0027    YL0033    P      Frozen Inv Allo
     C                     MOVELWL0028    YL0034    P      Primal Group Co
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIC3    WQSC01           Company Number
     C           *LIKE     DEFN WAC9NB    WQSC02           Component Item
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           WQSC02           Component Item
      * Setup key
     C                     Z-ADD#1AIC3    WQSC01           Company Number
     C                     Z-ADD#1C9NB    WQSC02           Component Item
      * Establish starting position
     C           KRSSC     SETLL@IOREG9                    *
     C           KRSSC     READE@IOREG9                  90*
      * Data record not found
     C   90                MOVEL'USR1679' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0001           Company Number
     C                     Z-ADDWAHGCD    WL0002           Item Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0003    WUGENA    P      Description Lin
     C                     MOVELWL0004    WUADCD    P      U/M - Primary
     C                     Z-ADDWL0005    WUAIWG           Unit Weight
     C                     Z-ADDWL0006    WURINB           Item Structure
     C                     Z-ADDWL0007    WURHNB           Item Structure
     C                     Z-ADDWL0008    WURGNB           Item Structure
     C                     MOVELWL0009    WUN0CD    P      Item Type Code
     C                     MOVELWL0010    WUQ1CD    P      Default Warehou
     C                     Z-ADDWL0011    WUCHTM           Fresh Chilling
     C                     MOVELWL0012    WUQZCD    P      Base/Conv/Loss
     C                     MOVELWL0013    WUXWST    P      Variety/Rendere
     C                     MOVELWL0014    WUVMST    P      Credit Item Sta
     C                     Z-ADDWL0015    WUSWGH           Std Weight/Head
     C                     Z-ADDWL0016    WUPPHE           Pieces Per Head
     C                     MOVELWL0017    WUR3CD    P      Department Code
     C                     MOVELWL0018    WUSDCD    P      Group for Packa
     C                     MOVELWL0019    WUX5ST    P      Seconds Item
     C                     MOVELWL0020    WUPCCT    P      Piece Count Ite
     C                     Z-ADDWL0021    WUBDNB           Pieces Per Bag
     C                     Z-ADDWL0022    WUBJNB           Bags Per Unit
     C                     MOVELWL0023    WUSUST    P      Export/Domestic
     C                     MOVELWL0024    WUSVST    P      Print On Schedu
     C                     MOVELWL0025    WUSYST    P      Fresh Inv Alloc
     C                     MOVELWL0026    WUSZST    P      Fresh Sched As
     C                     MOVELWL0027    WUS1ST    P      Frozen Inv Allo
     C                     MOVELWL0028    WUXRCD    P      Primal Group Co
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) WN0001' defaulted for 'Pieces Prod 1 USR'.
      * Field '(PAR) WN0002' defaulted for 'Pieces Prod 2 USR'.
      * Field '(PAR) WN0003' defaulted for 'Pieces Prod 3 USR'.
      * Field '(PAR) WN0004' defaulted for 'Pieces Prod 4 USR'.
      * Field '(PAR) WN0005' defaulted for 'Pieces Prod 5 USR'.
      * Field '(PAR) WN0006' defaulted for 'Pieces Prod 6 USR'.
      * Field '(PAR) WN0007' defaulted for 'Weight Prod 1 USR'.
      * Field '(PAR) WN0008' defaulted for 'Weight Prod 2 USR'.
      * Field '(PAR) WN0009' defaulted for 'Weight Prod 3 USR'.
      * Field '(PAR) WN0010' defaulted for 'Weight Prod 4 USR'.
      * Field '(PAR) WN0011' defaulted for 'Weight Prod 5 USR'.
      * Field '(PAR) WN0012' defaulted for 'Weight Prod 6 USR'.
      * Field '(PAR) WN0013' defaulted for 'Pieces Schd 1 USR'.
      * Field '(PAR) WN0014' defaulted for 'Pieces Schd 2 USR'.
      * Field '(PAR) WN0015' defaulted for 'Pieces Schd 3 USR'.
      * Field '(PAR) WN0016' defaulted for 'Pieces schd 4 USR'.
      * Field '(PAR) WN0017' defaulted for 'Pieces Schd 5 USR'.
      * Field '(PAR) WN0018' defaulted for 'Pieces Schd 6 USR'.
      * Field '(PAR) WN0019' defaulted for 'Weight Schd 1 USR'.
      * Field '(PAR) WN0020' defaulted for 'Weight Schd 2 USR'.
      * Field '(PAR) WN0021' defaulted for 'Weight Schd 3 USR'.
      * Field '(PAR) WN0022' defaulted for 'Weight Schd 4 USR'.
      * Field '(PAR) WN0023' defaulted for 'Weight Schd 5 USR'.
      * Field '(PAR) WN0024' defaulted for 'Weight Schd 6 USR'.
      *
     C                     Z-ADD*ZERO     WN0025  50       Qty Produced US
     C                     Z-ADD*ZERO     WN0026  50       Qty Remaining P
     C                     Z-ADD*ZERO     WN0027  50       Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     WN0028  50       Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     WN0029  50       Qty Prod Needed
     C                     Z-ADD*ZERO     WN0030  50       Qty Prod Adjust
     C                     Z-ADD*ZERO     WN0031  50       Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     WN0032  50       Qty Prod Needed
     C                     Z-ADD*ZERO     WN0033  50       Qty Prod Adjust
     C                     Z-ADD*ZERO     WN0034  50       Qty EOD Inv 4 U
     C                     Z-ADD*ZERO     WN0035  50       Qty Prod Needed
     C                     Z-ADD*ZERO     WN0036  50       Qty Prod Adjust
     C                     Z-ADD*ZERO     WN0037  50       Qty EOD Inv 5 U
     C                     Z-ADD*ZERO     WN0038  50       Qty Prod Needed
     C                     Z-ADD*ZERO     WN0039  50       Qty Prod Adjust
     C                     Z-ADD*ZERO     WN0040  92       Weight Producti
     C                     Z-ADD*ZERO     WN0041  70       Pieces Producti
     C                     MOVEL*BLANK    WN0042  3        PS Production W
     C                     Z-ADD*ZERO     WN0043  50       Qty Prod Needed
     C                     Z-ADD*ZERO     WN0044  50       Qty Prod Adjust
     C                     Z-ADD*ZERO     WN0045  50       Qty Sched Prod
     C                     MOVEL*BLANK    WN0046  1        Ord/Sch Sts USR
      *
      * Rtv Sch Item Info 6dy IF
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0035           Qty On-Hand USR
     C                     Z-ADD*ZERO     YL0036           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0025           Qty Produced US
     C                     Z-ADD*ZERO     WN0026           Qty Remaining P
     C                     Z-ADD*ZERO     YL0037           Qty Sched Ord 1
     C                     Z-ADD*ZERO     WN0027           Qty EOD Inv 1 U
     C                     Z-ADD*ZERO     YL0038           Qty Sched Ord 2
     C                     Z-ADD*ZERO     WN0028           Qty EOD Inv 2 U
     C                     Z-ADD*ZERO     WN0029           Qty Prod Needed
     C                     Z-ADD*ZERO     WN0030           Qty Prod Adjust
     C                     Z-ADD*ZERO     YL0039           Qty Sched Prod
     C                     Z-ADD*ZERO     YL0040           Qty Sched Ord 3
     C                     Z-ADD*ZERO     WN0031           Qty EOD Inv 3 U
     C                     Z-ADD*ZERO     WN0032           Qty Prod Needed
     C                     Z-ADD*ZERO     WN0033           Qty Prod Adjust
     C                     Z-ADD*ZERO     YL0041           Qty Sched Prod
     C                     Z-ADD*ZERO     YL0042           Qty Sched Ord 4
     C                     Z-ADD*ZERO     WN0034           Qty EOD Inv 4 U
     C                     Z-ADD*ZERO     WN0035           Qty Prod Needed
     C                     Z-ADD*ZERO     WN0036           Qty Prod Adjust
     C                     Z-ADD*ZERO     YL0043           Qty Sched Prod
     C                     Z-ADD*ZERO     YL0044           Qty Sched Ord 5
     C                     Z-ADD*ZERO     WN0037           Qty EOD Inv 5 U
     C                     Z-ADD*ZERO     WN0038           Qty Prod Needed
     C                     Z-ADD*ZERO     WN0039           Qty Prod Adjust
     C                     Z-ADD*ZERO     YL0045           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0040           Weight Producti
     C                     Z-ADD*ZERO     WN0041           Pieces Producti
     C                     MOVEL*BLANK    WN0042           PS Production W
     C                     Z-ADD*ZERO     WUNLQT           Qty EOD Inv 6 U
     C                     Z-ADD*ZERO     YL0046           Qty Sched Ord 6
     C                     Z-ADD*ZERO     WN0043           Qty Prod Needed
     C                     Z-ADD*ZERO     WN0044           Qty Prod Adjust
     C                     Z-ADD*ZERO     WN0045           Qty Sched Prod
     C                     Z-ADD*ZERO     WN0001           Pieces Prod 1 U
     C                     Z-ADD*ZERO     WN0002           Pieces Prod 2 U
     C                     Z-ADD*ZERO     WN0003           Pieces Prod 3 U
     C                     Z-ADD*ZERO     WN0004           Pieces Prod 4 U
     C                     Z-ADD*ZERO     WN0005           Pieces Prod 5 U
     C                     Z-ADD*ZERO     WN0006           Pieces Prod 6 U
     C                     Z-ADD*ZERO     WN0007           Weight Prod 1 U
     C                     Z-ADD*ZERO     WN0008           Weight Prod 2 U
     C                     Z-ADD*ZERO     WN0009           Weight Prod 3 U
     C                     Z-ADD*ZERO     WN0010           Weight Prod 4 U
     C                     Z-ADD*ZERO     WN0011           Weight Prod 5 U
     C                     Z-ADD*ZERO     WN0012           Weight Prod 6 U
     C                     Z-ADD*ZERO     WN0013           Pieces Schd 1 U
     C                     Z-ADD*ZERO     WN0014           Pieces Schd 2 U
     C                     Z-ADD*ZERO     WN0015           Pieces Schd 3 U
     C                     Z-ADD*ZERO     WN0016           Pieces schd 4 U
     C                     Z-ADD*ZERO     WN0017           Pieces Schd 5 U
     C                     Z-ADD*ZERO     WN0018           Pieces Schd 6 U
     C                     Z-ADD*ZERO     WN0019           Weight Schd 1 U
     C                     Z-ADD*ZERO     WN0020           Weight Schd 2 U
     C                     Z-ADD*ZERO     WN0021           Weight Schd 3 U
     C                     Z-ADD*ZERO     WN0022           Weight Schd 4 U
     C                     Z-ADD*ZERO     WN0023           Weight Schd 5 U
     C                     Z-ADD*ZERO     WN0024           Weight Schd 6 U
     C                     MOVEL*BLANK    WN0046           Ord/Sch Sts USR
      * Rtv Lot Tracking Flag RT - Warehouse  * 
     C                     EXSR SERVGN
      * Inventory
      * CASE: LCL.Lot Tracking Flag is yes
     C           YL0047    IFEQ 'Y'                        *IF
      * Rtv Item Loc Qty Tot  RT - IC Item Lot Location  * 
     C                     EXSR SFRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV On Hand Qty f/Whse RT - Item Balance  * 
     C                     EXSR SGRVGN
     C                     END                             *FI
      * If inventory qty is less than zero then make zero
      * CASE: PAR.Qty On-Hand USR is LT Zero
     C           YL0035    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     YL0035           Qty On-Hand USR
     C                     END                             *FI
      * Production & Scheduled Shipments
     C                     MOVEL'S'       WN0046           Ord/Sch Sts USR
      * Day 1
     C                     EXSR UASUBR                     Day 1
      * Day 2
     C                     EXSR UBSUBR                     Day 2
      * Day 3
     C                     EXSR UCSUBR                     Day 3
      * Day 4
     C                     EXSR UDSUBR                     Day 4
      * Day 5
     C                     EXSR UESUBR                     Day 5
      * Day 6 - is one day prior to day 1
     C                     EXSR UFSUBR                     Day 6 - is one
      * Accum into the Base Item
      * CASE: WRK.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * LCL.Pieces Production USR =
      *    *COMPUTE (x1 * x2 * x3)
      * x1    : LCL.Quantity Ordered
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x2    : WRK.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : WRK.Bags Per Unit
     C           YL0052    MULT WUBDNB    W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    MULT WUBJNB    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0053           Pieces Producti
     C                     END                             *FI
     C                     ADD  YL0035    #RLEQT           Qty On-Hand USR
     C                     ADD  YL0036    #RLIQT           Qty Sched Prod
     C                     ADD  YL0037    #RLKQT           Qty Sched Ord 1
     C                     ADD  YL0038    #RLLQT           Qty Sched Ord 2
     C                     ADD  YL0039    #RLJQT           Qty Sched Prod
     C                     ADD  YL0041    #RLWQT           Qty Sched Prod
     C                     ADD  YL0040    #RLVQT           Qty Sched Ord 3
     C                     ADD  YL0042    #RMOQT           Qty Sched Ord 4
     C                     ADD  YL0043    #RM9QT           Qty Sched Prod
     C                     ADD  YL0044    #RMPQT           Qty Sched Ord 5
     C                     ADD  YL0045    #RNAQT           Qty Sched Prod
     C                     ADD  YL0046    #RMQQT           Qty Sched Ord 6
     C                     ADD  YL0054    #RNOQT           Qty Sched Prod
     C           KRSSC     READE@IOREG9                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Prd Sch Info   PS RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0001    BZAIC3           Company Number
     C                     Z-ADDWL0002    BZHGCD           Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0003           Description Lin
     C                     MOVEL*BLANK    WL0004           U/M - Primary
     C                     Z-ADD*ZERO     WL0005           Unit Weight
     C                     Z-ADD*ZERO     WL0006           Item Structure
     C                     Z-ADD*ZERO     WL0007           Item Structure
     C                     Z-ADD*ZERO     WL0008           Item Structure
     C                     MOVEL*BLANK    WL0009           Item Type Code
     C                     MOVEL*BLANK    WL0010           Default Warehou
     C                     Z-ADD*ZERO     WL0011           Fresh Chilling
     C                     MOVEL*BLANK    WL0012           Base/Conv/Loss
     C                     MOVEL*BLANK    WL0013           Variety/Rendere
     C                     MOVEL*BLANK    WL0014           Credit Item Sta
     C                     Z-ADD*ZERO     WL0015           Std Weight/Head
     C                     Z-ADD*ZERO     WL0016           Pieces Per Head
     C                     MOVEL*BLANK    WL0017           Department Code
     C                     MOVEL*BLANK    WL0018           Group for Packa
     C                     MOVEL*BLANK    WL0019           Seconds Item
     C                     MOVEL*BLANK    WL0020           Piece Count Ite
     C                     Z-ADD*ZERO     WL0021           Pieces Per Bag
     C                     Z-ADD*ZERO     WL0022           Bags Per Unit
     C                     MOVEL*BLANK    WL0023           Export/Domestic
     C                     MOVEL*BLANK    WL0024           Print On Schedu
     C                     MOVEL*BLANK    WL0025           Fresh Inv Alloc
     C                     MOVEL*BLANK    WL0026           Fresh Sched As
     C                     MOVEL*BLANK    WL0027           Frozen Inv Allo
     C                     MOVEL*BLANK    WL0028           Primal Group Co
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WL0003           Description Lin
     C                     MOVELBZADCD    WL0004           U/M - Primary
     C                     Z-ADDBZAIWG    WL0005           Unit Weight
     C                     Z-ADDBZRINB    WL0006           Item Structure
     C                     Z-ADDBZRHNB    WL0007           Item Structure
     C                     Z-ADDBZRGNB    WL0008           Item Structure
     C                     MOVELBZN0CD    WL0009           Item Type Code
     C                     MOVELBZQ1CD    WL0010           Default Warehou
     C                     Z-ADDBZCHTM    WL0011           Fresh Chilling
     C                     MOVELBZQZCD    WL0012           Base/Conv/Loss
     C                     MOVELBZXWST    WL0013           Variety/Rendere
     C                     MOVELBZVMST    WL0014           Credit Item Sta
     C                     Z-ADDBZSWGH    WL0015           Std Weight/Head
     C                     Z-ADDBZPPHE    WL0016           Pieces Per Head
     C                     MOVELBZR3CD    WL0017           Department Code
     C                     MOVELBZSDCD    WL0018           Group for Packa
     C                     MOVELBZX5ST    WL0019           Seconds Item
     C                     MOVELBZPCCT    WL0020           Piece Count Ite
     C                     Z-ADDBZBDNB    WL0021           Pieces Per Bag
     C                     Z-ADDBZBJNB    WL0022           Bags Per Unit
     C                     MOVELBZSUST    WL0023           Export/Domestic
     C                     MOVELBZSVST    WL0024           Print On Schedu
     C                     MOVELBZSYST    WL0025           Fresh Inv Alloc
     C                     MOVELBZSZST    WL0026           Fresh Sched As
     C                     MOVELBZS1ST    WL0027           Frozen Inv Allo
     C                     MOVELBZXRCD    WL0028           Primal Group Co
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#PAJCD    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSE     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0047           Lot Tracking Fl
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBVHST    YL0047           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Item Loc Qty Tot  RT - IC Item Lot Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     YL0035           Quantity Loc On
      * Declare restrictor key work fields
     C           *LIKE     DEFN L5AIC3    WQSF01           Company Number
     C           *LIKE     DEFN L5HGCD    WQSF02           Item Code
     C           *LIKE     DEFN L5AJCD    WQSF03           Warehouse Code
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           Company Number
     C                     KFLD           WQSF02           Item Code
     C                     KFLD           WQSF03           Warehouse Code
      * Setup key
     C                     Z-ADDWAAIC3    WQSF01           Company Number
     C                     Z-ADDWAHGCD    WQSF02           Item Code
     C                     MOVEL#PAJCD    WQSF03           Warehouse Code
      * Establish starting position
     C           KRSSF     SETLL@L5CPSV                    *
     C           KRSSF     READE@L5CPSV                  90*
      * Data record not found
     C   90                MOVEL'USR2634' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  L5J2QT    YL0035           Quantity Loc On
     C           KRSSF     READE@L5CPSV                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV On Hand Qty f/Whse RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B0AIC3    WQSG01           Company Number
     C           *LIKE     DEFN B0AJCD    WQSG02           Warehouse Code
     C           *LIKE     DEFN B0HGCD    WQSG03           Item Code
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Company Number
     C                     KFLD           WQSG02           Warehouse Code
     C                     KFLD           WQSG03           Item Code
      * Setup key
     C                     Z-ADDWAAIC3    WQSG01           Company Number
     C                     MOVEL#PAJCD    WQSG02           Warehouse Code
     C                     Z-ADDWAHGCD    WQSG03           Item Code
      * Establish starting position
     C           KRSSG     SETLL@B0REHD                    *
     C           KRSSG     READE@B0REHD                  90*
      * Data record not found
     C   90                MOVEL'USR0328' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  B0DDQT    YL0035           On Hand U/M1 Su
     C           KRSSG     READE@B0REHD                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * Rtv Production        RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           I8AIC3           Company Number
     C                     KFLD           I8V5ST           Production Type
     C                     KFLD           I8ELDT           Production Date
     C                     KFLD           I8HGCD           Item Code
     C                     KFLD           I8AJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0029    I8AIC3           Company Number
     C                     MOVELWL0030    I8V5ST           Production Type
     C                     Z-ADDWL0031    I8ELDT           Production Date
     C                     Z-ADDWL0032    I8HGCD           Item Code
     C                     MOVELWL0033    I8AJCD           Warehouse Code
      * Establish starting position
     C           KRSSH     CHAIN@I8CPUS              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1763' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0034           Weight Producti
     C                     Z-ADD*ZERO     WL0035           Pieces Producti
     C                     MOVEL*BLANK    WL0036           PS Production W
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Weight Production
      * PAR.Weight Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Weight Standard
      * +     : PGM.*Synon (15,2) work field
      * x2    : DB1.PS Weight Prod Adj
      * -     : PGM.*Synon (15,2) work field
      * x3    : DB1.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Weight Whse Tfr Adj
     C           I8DXWG    ADD  I8D1WG    W0WA02           *Synon (15,2) w
     C           W0WA02    SUB  I8WTCN    W0WA01           *Synon (15,2) w
     C           W0WA01    SUB  I8GAWG    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0034           Weight Producti
      * Pieces Production
      * PAR.Pieces Production USR =
      *    *COMPUTE (x1 + x2 - x3 - x4)
      * x1    : DB1.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.PS Pieces Prod Adj
      * -     : PGM.*Synon (15,0) work field
      * x3    : DB1.PS Pieces Converted
      * -     : PGM.*Synon (17,7) work field
      * x4    : DB1.PS Pieces Whse Tfr Adj
     C           I8B2NB    ADD  I8CBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  I8PSCV    W0WJ01           *Synon (15,0) w
     C           W0WJ01    SUB  I8BPNB    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WL0035           Pieces Producti
     C                     MOVELI8B7ST    WL0036           PS Production W
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Sched Shipments   RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0041           Weight Schedule
     C                     Z-ADD*ZERO     WL0042           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSI01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSI02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSI03           Warehouse Code
     C           *LIKE     DEFN OMAODT    WQSI04           Scheduled Ship
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WQSI01           Company Number
     C                     KFLD           WQSI02           Item Code
     C                     KFLD           WQSI03           Warehouse Code
     C                     KFLD           WQSI04           Scheduled Ship
      * Setup key
     C                     Z-ADDWL0037    WQSI01           Company Number
     C                     Z-ADDWL0038    WQSI02           Item Code
     C                     MOVELWL0039    WQSI03           Warehouse Code
     C                     Z-ADDWL0040    WQSI04           Scheduled Ship
      * Establish starting position
     C           KRSSI     SETLL@BGWKKG                    *
     C           KRSSI     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0044           Company Number
     C                     Z-ADDOMC4NB    WL0045           Order Number
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0046    WUGWST    P      Header Status
     C                     MOVELWL0047    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Ord/Sch Sts USR is Scheduled
     C           WL0043    IFEQ 'S'                        *IF
     C                     ADD  OMAUWG    WL0041           Weight Schedule
     C                     ADD  OMCCQT    WL0042           Quantity Schedu
     C                     ELSE
      * CASE: PAR.Ord/Sch Sts USR is Ordered
     C           WL0043    IFEQ 'O'                        *IF
     C                     ADD  OMD0WG    WL0041           Weight Schedule
     C                     ADD  OMAVQT    WL0042           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSI     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDWL0044    BEAIC3           Company Number
     C                     Z-ADDWL0045    BEC4NB           Order Number
      * Establish starting position
     C           KRSSJ     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    WL0046           Header Status
     C                     MOVELBEOBST    WL0047           Billing Activit
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * Rtv PA Prod < FDate   RT - PS Prod Item Schedule  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSK01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSK02           Item Code
     C           *LIKE     DEFN WCAJCD    WQSK03           Warehouse Code
      * Define keylist
     C           KPSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
     C                     KFLD           WCGPDT           PS Available Sh
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
      * Setup key
     C                     Z-ADDWAAIC3    WQSK01           Company Number
     C                     Z-ADDWAHGCD    WQSK02           Item Code
     C                     MOVEL#PAJCD    WQSK03           Warehouse Code
     C                     Z-ADD#CE5DT    WCGPDT           PS Available Sh
      * Establish starting position
     C           KPSSK     SETLL@I8CPMH                    *
     C           KRSSK     READE@I8CPMH                  90*
      * Data record not found
     C   90                MOVEL'USR1763' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Production Date LT JOB.*Job date
     C           WCELDT    IFLT ##JDT                      *IF
     C                     GOTO SKEXIT                     *QUIT
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Production Date EQ JOB.*Job date
      *   |- c2    : DB1.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCELDT    IFEQ ##JDT                      *IF
     C           WCV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: DB1.Production Type is Schedule Saved in the am
     C           WCV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production based on Unit Weight or Pieces
      * CASE: (Unit Weight > 0  OR Piece count item
      *  - c2 OR c3
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   |- c3    : PAR.Piece Count Item is yes
      *   '-
     C           WUAIWG    IFGT *ZERO                      *IF
     C           WUPCCT    OREQ 'Y'                        *OR
      * Rtv PA Prod by Day    IF
      * CASE: Prod Date = Job Date & Plan, do not Calc PA
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date EQ JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCELDT    IFEQ ##JDT                      *IF
     C           WCV5ST    IFEQ 'P'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Chilling Time > 0 and Ship Date = Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Fresh Chilling Time is GT Zero
      *   |- c2    : PAR.Avail Ship Date USR EQ JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUCHTM    IFGT *ZERO                      *IF
     C           WCGPDT    IFEQ ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date LT Job Date & Plan Chill GT 0 No Calc PA
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Production Type is Plan
      *   |- c3    : PAR.Fresh Chilling Time is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCELDT    IFLT ##JDT                      *IF
     C           WCV5ST    IFEQ 'P'                        *IF
     C           WUCHTM    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: Prod Date < Job Date & Avail Ship Date > Job Date
      *  - c1 AND c2
      *   |- c1    : PAR.Production Date LT JOB.*Job date
      *   |- c2    : PAR.Avail Ship Date USR GT JOB.*Job date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCELDT    IFLT ##JDT                      *IF
     C           WCGPDT    IFGT ##JDT                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: PAR.Production Type is Schedule Saved in the am
     C           WCV5ST    IFEQ 'X'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Calculate Production
      * CASE: ** Piece Count = N **
      *  - c1 AND c2
      *   |- c1    : PAR.Piece Count Item is Not Yes
      *   |- c2    : PAR.Unit Weight is Greater than zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUPCCT    IFEQ *BLANK                     *IF
     C           WUPCCT    OREQ 'N'
     C           WUAIWG    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5-x6) / x4))
      * x2    : PAR.PS Weight Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Weight Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Weight Converted
      * -     : PGM.*Synon (17,7) work field
      * x6    : PAR.PS Weight Whse Tfr Adj
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Unit Weight
     C           WCDXWG    ADD  WCD1WG    W0WJ03           *Synon (15,0) w
     C           W0WJ03    SUB  WCWTCN    W0WD02           *Synon (17,7) w
     C           W0WD02    SUB  WCGAWG    W0WD01           *Synon (17,7) w
     C           W0WD01    DIV  WUAIWG    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0051           Quantity Produc
     C                     ELSE
      * CASE: ** Piece Count = Y **
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Piece Count Item is yes
      *   |- c2    : PAR.Pieces Per Bag is GT Zero
      *   |- c3    : PAR.Bags Per Unit is GT Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUPCCT    IFEQ 'Y'                        *IF
     C           WUBDNB    IFGT *ZERO                      *IF
     C           WUBJNB    IFGT *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      *  **If Piece count item use  PIECE fields
      * Production (No Dec)
      * PAR.Quantity Production USR =
      *    *COMPUTE (((x2 + x3 - x5) / (x4 * x6)))
      * x2    : PAR.PS Pieces Standard
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.PS Pieces Prod Adj
      * -     : PGM.*Synon (17,7) work field
      * x5    : PAR.PS Pieces Converted
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x4    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (17,7) work field *
      * x6    : PAR.Bags Per Unit
     C           WCB2NB    ADD  WCCBNB    W0WJ02           *Synon (15,0) w
     C           W0WJ02    SUB  WCPSCV    W0WD01           *Synon (17,7) w
     C           WUBDNB    MULT WUBJNB    W0WD03           *Synon (17,7) w
     C           W0WD01    DIV  W0WD03    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0051           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
      * If production is negative then make zero
      * CASE: PAR.Quantity Production USR is LT Zero
     C           YL0051    IFLT *ZERO                      *IF
     C                     Z-ADD*ZERO     YL0051           Quantity Produc
     C                     END                             *FI
     C                     Z-ADDWCELDT    YL0050           Production Date
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  YL0051    WN0045           Quantity Produc
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSK     READE@I8CPMH                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Sched Ship ALL    RT - Order Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WUEEWG           Weight Schedule
     C                     Z-ADD*ZERO     YL0046           Quantity Schedu
      * Declare restrictor key work fields
     C           *LIKE     DEFN OMAIC3    WQSL01           Company Number
     C           *LIKE     DEFN OMHGCD    WQSL02           Item Code
     C           *LIKE     DEFN OMAJCD    WQSL03           Warehouse Code
      * Define keylist
     C           KPSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
     C                     KFLD           OMAODT           Scheduled Ship
      * Define keylist
     C           KRSSL     KLIST
     C                     KFLD           WQSL01           Company Number
     C                     KFLD           WQSL02           Item Code
     C                     KFLD           WQSL03           Warehouse Code
      * Setup key
     C                     Z-ADDWAAIC3    WQSL01           Company Number
     C                     Z-ADDWAHGCD    WQSL02           Item Code
     C                     MOVEL#PAJCD    WQSL03           Warehouse Code
     C                     Z-ADD#CE5DT    OMAODT           Scheduled Ship
      * Establish starting position
     C           KPSSL     SETLL@BGWKKG                    *
     C           KRSSL     READE@BGWKKG                  90*
      * Data record not found
     C   90                MOVEL'USR1309' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * RTV Hdr Sts,BillActTy RT - Order Header TRG  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDOMAIC3    WL0044           Company Number
     C                     Z-ADDOMC4NB    WL0045           Order Number
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0046    WUGWST    P      Header Status
     C                     MOVELWL0047    WUOBST    P      Billing Activit
      * CASE:
      *  - c1ANDc2
      *   |- c1    : WRK.Header Status is Not Comp/Canc/Conf
      *   |- c2    : WRK.Billing Activity Type is Invoice or Transfer
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WUGWST    IFEQ 'L'                        *IF
     C           WUGWST    OREQ 'A'
     C           WUGWST    OREQ 'E'
     C           WUGWST    OREQ 'H'
     C           WUOBST    IFEQ '1'                        *IF
     C           WUOBST    OREQ '4'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * CASE: PAR.Status Flag 10 Y/N is Yes
     C           'Y'       IFEQ 'Y'                        *IF
      * FP1054 if Yes, accum Scheduled qty & wgt as it was before
     C                     ADD  OMAUWG    WUEEWG           Weight Schedule
     C                     ADD  OMCCQT    YL0046           Quantity Schedu
     C                     ELSE
      * CASE: *OTHERWISE
      * FP1054 if no, accum Ordered & qty & wgt
     C                     ADD  OMD0WG    WUEEWG           Weight Schedule
     C                     ADD  OMAVQT    YL0046           Quantity Schedu
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSL     READE@BGWKKG                  90*
     C                     ENDDO
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD#2AIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSM     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    #CSQTX           Name
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    #CSQTX           Name
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * Rtv Base Values PA    RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADD#1AIC3    BZAIC3           Company Number
     C                     Z-ADD#1HGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSN     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0057           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     MOVEL*BLANK    YL0058           U/M - Primary
     C                     Z-ADD*ZERO     YL0059           Conversion Fact
     C                     MOVEL*BLANK    YL0060           Operation Facto
     C                     MOVEL*BLANK    YL0061           U/M - Second
     C                     Z-ADD*ZERO     YL0062           Conversion Fact
     C                     MOVEL*BLANK    YL0063           Operation Facto
     C                     MOVEL*BLANK    YL0064           U/M - Third
     C                     MOVEL*BLANK    YL0065           U/M - Pricing
     C                     Z-ADD*ZERO     YL0066           Unit Weight
     C                     MOVEL*BLANK    YL0067           Production Date
     C                     MOVEL*BLANK    YL0068           Catch Weight St
     C                     Z-ADD*ZERO     YL0069           Fresh Chilling
     C                     MOVEL*BLANK    YL0008           Base/Conv/Loss
     C                     MOVEL*BLANK    YL0070           Piece Count Ite
     C                     Z-ADD*ZERO     YL0071           Pieces Per Bag
     C                     Z-ADD*ZERO     YL0072           Bags Per Unit
     C                     MOVEL*BLANK    YL0073           Record Status
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    YL0057           Description Lin
     C                     MOVELBZAWNA    WUAWNA           Description Lin
     C                     MOVELBZADCD    YL0058           U/M - Primary
     C                     Z-ADDBZAWPC    YL0059           Conversion Fact
     C                     MOVELBZLXST    YL0060           Operation Facto
     C                     MOVELBZAECD    YL0061           U/M - Second
     C                     Z-ADDBZAXPC    YL0062           Conversion Fact
     C                     MOVELBZLYST    YL0063           Operation Facto
     C                     MOVELBZAFCD    YL0064           U/M - Third
     C                     MOVELBZAICD    YL0065           U/M - Pricing
     C                     Z-ADDBZAIWG    YL0066           Unit Weight
     C                     MOVELBZFZST    YL0067           Production Date
     C                     MOVELBZAVST    YL0068           Catch Weight St
     C                     Z-ADDBZCHTM    YL0069           Fresh Chilling
     C                     MOVELBZQZCD    YL0008           Base/Conv/Loss
     C                     MOVELBZPCCT    YL0070           Piece Count Ite
     C                     Z-ADDBZBDNB    YL0071           Pieces Per Bag
     C                     Z-ADDBZBJNB    YL0072           Bags Per Unit
     C                     MOVELBZVSST    YL0073           Record Status
     C                     ENDIF
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0047    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSO     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P1I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P1MPNA           Default Printer
     C                     MOVELDRBCCD    P1BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0075           Company Number
     C                     MOVELDRBUVN    WN0048           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0048    DTAJVN           User Profile Na
     C                     MOVELWL0049    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSP     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0050           Company Number
     C                     MOVELDTAJCD    WL0051           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSQ01           Application Cod
      * Define keylist
     C           KRSSQ     KLIST
     C                     KFLD           WQSQ01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSQ01           Application Cod
     C                     MOVEL'P/S'     WQSQ01           Application Cod
      * Establish starting position
     C           KRSSQ     SETLL@DNRESF                    *
     C           KRSSQ     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SRRVGN
     C                     END                             *FI
     C           KRSSQ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSR01           Application Cod
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WQSR01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSR01           Application Cod
      * Establish starting position
     C           KRSSR     SETLL@DNRESF                    *
     C           KRSSR     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SREXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSR     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Day 1
      *================================================================
      * CASE: PAR.USR Day 1 EQ JOB.*Job date
     C           #CFFDT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       YL0048           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       YL0048           Production Type
     C                     END                             *FI
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0029           Company Number
     C                     MOVELYL0048    WL0030    P      Production Type
     C                     Z-ADD#CFFDT    WL0031           Production Date
     C                     Z-ADDWAHGCD    WL0032           Item Code
     C                     MOVEL#PAJCD    WL0033    P      Warehouse Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    WN0040           Weight Producti
     C                     Z-ADDWL0035    WN0041           Pieces Producti
     C                     MOVELWL0036    YL0049    P      PS Production W
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 1 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WUBDNB    MULT WUBJNB    W0WJ01           *Synon (15,0) w
     C           WN0041    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0036           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0040    DIV  WUAIWG    YL0036    H      Qty Sched Prod
     C                     END                             *FI
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0037           Company Number
     C                     Z-ADDWAHGCD    WL0038           Item Code
     C                     MOVEL#PAJCD    WL0039    P      Warehouse Code
     C                     Z-ADD#CFFDT    WL0040           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0041           Weight Schedule
     C                     Z-ADDYL0037    WL0042           Quantity Schedu
     C                     MOVELWN0046    WL0043    P      Ord/Sch Sts USR
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0041    WUEEWG           Weight Schedule
     C                     Z-ADDWL0042    YL0037           Quantity Schedu
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Day 2
      *================================================================
      * CASE: PAR.USR Day 2 NE WRK.ZERO
     C           #CE1DT    IFNE WUW0NB                     *IF
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0029           Company Number
     C                     MOVEL'P'       WL0030    P      Production Type
     C                     Z-ADD#CE1DT    WL0031           Production Date
     C                     Z-ADDWAHGCD    WL0032           Item Code
     C                     MOVEL#PAJCD    WL0033    P      Warehouse Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    WN0040           Weight Producti
     C                     Z-ADDWL0035    WN0041           Pieces Producti
     C                     MOVELWL0036    YL0049    P      PS Production W
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0037           Company Number
     C                     Z-ADDWAHGCD    WL0038           Item Code
     C                     MOVEL#PAJCD    WL0039    P      Warehouse Code
     C                     Z-ADD#CE1DT    WL0040           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0041           Weight Schedule
     C                     Z-ADDYL0038    WL0042           Quantity Schedu
     C                     MOVELWN0046    WL0043    P      Ord/Sch Sts USR
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0041    WUEEWG           Weight Schedule
     C                     Z-ADDWL0042    YL0038           Quantity Schedu
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 2 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WUBDNB    MULT WUBJNB    W0WJ01           *Synon (15,0) w
     C           WN0041    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0039           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0040    DIV  WUAIWG    YL0039    H      Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Day 3
      *================================================================
      * CASE: PAR.USR Day 3 NE WRK.ZERO
     C           #CE2DT    IFNE WUW0NB                     *IF
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0029           Company Number
     C                     MOVEL'P'       WL0030    P      Production Type
     C                     Z-ADD#CE2DT    WL0031           Production Date
     C                     Z-ADDWAHGCD    WL0032           Item Code
     C                     MOVEL#PAJCD    WL0033    P      Warehouse Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    WN0040           Weight Producti
     C                     Z-ADDWL0035    WN0041           Pieces Producti
     C                     MOVELWL0036    YL0049    P      PS Production W
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0037           Company Number
     C                     Z-ADDWAHGCD    WL0038           Item Code
     C                     MOVEL#PAJCD    WL0039    P      Warehouse Code
     C                     Z-ADD#CE2DT    WL0040           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0041           Weight Schedule
     C                     Z-ADDYL0040    WL0042           Quantity Schedu
     C                     MOVELWN0046    WL0043    P      Ord/Sch Sts USR
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0041    WUEEWG           Weight Schedule
     C                     Z-ADDWL0042    YL0040           Quantity Schedu
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 3 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WUBDNB    MULT WUBJNB    W0WJ01           *Synon (15,0) w
     C           WN0041    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0041           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0040    DIV  WUAIWG    YL0041    H      Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Day 4
      *================================================================
      * CASE: PAR.USR Day 4 NE WRK.ZERO
     C           #CE3DT    IFNE WUW0NB                     *IF
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0029           Company Number
     C                     MOVEL'P'       WL0030    P      Production Type
     C                     Z-ADD#CE3DT    WL0031           Production Date
     C                     Z-ADDWAHGCD    WL0032           Item Code
     C                     MOVEL#PAJCD    WL0033    P      Warehouse Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    WN0040           Weight Producti
     C                     Z-ADDWL0035    WN0041           Pieces Producti
     C                     MOVELWL0036    YL0049    P      PS Production W
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0037           Company Number
     C                     Z-ADDWAHGCD    WL0038           Item Code
     C                     MOVEL#PAJCD    WL0039    P      Warehouse Code
     C                     Z-ADD#CE3DT    WL0040           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0041           Weight Schedule
     C                     Z-ADDYL0042    WL0042           Quantity Schedu
     C                     MOVELWN0046    WL0043    P      Ord/Sch Sts USR
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0041    WUEEWG           Weight Schedule
     C                     Z-ADDWL0042    YL0042           Quantity Schedu
      * scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 4 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WUBDNB    MULT WUBJNB    W0WJ01           *Synon (15,0) w
     C           WN0041    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0043           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0040    DIV  WUAIWG    YL0043    H      Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Day 5
      *================================================================
      * CASE: PAR.USR Day 5 NE WRK.ZERO
     C           #CE4DT    IFNE WUW0NB                     *IF
      * Rtv Production        RT - PS Prod Item Schedule  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0029           Company Number
     C                     MOVEL'P'       WL0030    P      Production Type
     C                     Z-ADD#CE4DT    WL0031           Production Date
     C                     Z-ADDWAHGCD    WL0032           Item Code
     C                     MOVEL#PAJCD    WL0033    P      Warehouse Code
     C                     EXSR SHRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0034    WN0040           Weight Producti
     C                     Z-ADDWL0035    WN0041           Pieces Producti
     C                     MOVELWL0036    YL0049    P      PS Production W
      * Rtv Sched Shipments   RT - Order Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWAAIC3    WL0037           Company Number
     C                     Z-ADDWAHGCD    WL0038           Item Code
     C                     MOVEL#PAJCD    WL0039    P      Warehouse Code
     C                     Z-ADD#CE4DT    WL0040           Scheduled Ship
     C                     Z-ADDWUEEWG    WL0041           Weight Schedule
     C                     Z-ADDYL0044    WL0042           Quantity Schedu
     C                     MOVELWN0046    WL0043    P      Ord/Sch Sts USR
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0041    WUEEWG           Weight Schedule
     C                     Z-ADDWL0042    YL0044           Quantity Schedu
      * scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 5 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WUBDNB    MULT WUBJNB    W0WJ01           *Synon (15,0) w
     C           WN0041    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    YL0045           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0040    DIV  WUAIWG    YL0045    H      Qty Sched Prod
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Day 6 - is one day prior to day 1
      *================================================================
      * CASE: PAR.USR Day 6 EQ JOB.*Job date
     C           #CE5DT    IFEQ ##JDT                      *IF
     C                     MOVEL'S'       YL0048           Production Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'P'       YL0048           Production Type
     C                     END                             *FI
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(PAR) WN0040' defaulted for 'Weight Production USR'.
      * Field '(PAR) WN0041' defaulted for 'Pieces Production USR'.
      * Rtv PA Prod < FDate   RT - PS Prod Item Schedule  * 
     C                     EXSR SKRVGN
      * Rtv Sched qty & Wgt which is what it was doing... FP1054 4/15/09
      * Rtv Sched Ship ALL    RT - Order Detail  * 
     C                     EXSR SLRVGN
      * Scheduled Production Quantity
      * CASE: PAR.Piece Count Item is yes
     C           WUPCCT    IFEQ 'Y'                        *IF
      * Qty Sched Prod
      * PAR.Qty Sched Prod 6 USR =
      *    *COMPUTE (x1 / (x2 * x3))
      * x1    : PAR.Pieces Production USR
      * /     : PGM.*Synon (15,0) work field *Rounded
      * x2    : PAR.Pieces Per Bag
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : PAR.Bags Per Unit
     C           WUBDNB    MULT WUBJNB    W0WJ01           *Synon (15,0) w
     C           WN0041    DIV  W0WJ01    W0WJ00    H      *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0045           Qty Sched Prod
     C                     ELSE
      * CASE: *OTHERWISE
     C           WN0040    DIV  WUAIWG    WN0045    H      Qty Sched Prod
     C                     END                             *FI
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
     C           ZINPOS    IFGE 03328
     C           ZINPOS    ANDLE06144
      * Cursor in the subfile record area
      * Reset cursor position to the basic (first) record for lookup
     C           W0CRW     SUB  13        W0CSRR  50
     C           03328     ADD  W0CCL     ZINPOS
      * Calculate rrn of the cursor position
     C                     ADD  ##SFRC    W0CSRR
     C                     ENDIF
     C                     MOVE *BLANK    W0CFL
     C                     Z-ADD1         F       30
     C           ZINPOS    LOKUPW0END,F              96  96LE
     C           *IN96     IFEQ '1'
     C           ZINPOS    ANDGEW0BEG,F
     C                     MOVELW0NAM,F   W0CFL
     C                     ENDIF
     C           W0CFL     IFEQ *BLANK
     C                     Z-ADD0         W0CSRR
     C                     ENDIF
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD13        ZHSTRW  40
     C                     Z-ADD23        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     P1AIC3           Company Number
     C                     MOVEL*BLANK    P1DNCD           Application Cod
     C                     MOVEL*BLANK    P1DQCD           Enterprise Code
     C                     MOVEL*BLANK    P1DRCD           Enterprise Code
     C                     MOVEL*BLANK    P1BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P1B8NA           System Date For
     C                     MOVEL*BLANK    P1AJVN           User Profile Na
     C                     MOVEL*BLANK    P1I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P1MPNA           Default Printer
     C                     MOVEL*BLANK    P1TAST           First Time Flag
     C                     MOVEL*BLANK    P1ADTX           Name
     C                     MOVEL*BLANK    P1BXTX           System Value Al
     C                     MOVEL*BLANK    P1WVST           Access Denied (
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAC9NB           Component Item
     C                     Z-ADD*ZERO     WABOPR           Sales Yield
     C                     Z-ADD*ZERO     WABPPR           Production Yiel
     C                     Z-ADD*ZERO     WAHGQT           Packaging Quant
     C                     Z-ADD*ZERO     WACNSM           Consume Priorit
     C                     Z-ADD*ZERO     WABMY1           Consume Priorit
     C                     Z-ADD*ZERO     WABMY2           BOM Pumped Perc
     C                     Z-ADD*ZERO     WAIXQT           BOM Meat Cost C
     C                     Z-ADD*ZERO     WAIYQT           BOM Off Line Yi
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Define work field Item Description
     C                     MOVEL*BLANK    WUGENA 30
      * Define work field U/M - Primary
     C                     MOVEL*BLANK    WUADCD  2
      * Define work field Unit Weight
     C                     Z-ADD*ZERO     WUAIWG 112
      * Define work field Item Structure Class Code
     C                     Z-ADD*ZERO     WURINB  30
      * Define work field Item Structure Group Code
     C                     Z-ADD*ZERO     WURHNB  30
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field Item Type Code
     C                     MOVEL*BLANK    WUN0CD  3
      * Define work field Default Warehouse
     C                     MOVEL*BLANK    WUQ1CD  3
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    WUQZCD  2
      * Define work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    WUXWST  1
      * Define work field Credit Item Status
     C                     MOVEL*BLANK    WUVMST  1
      * Define work field Std Weight/Head (Var/Ren)
     C                     Z-ADD*ZERO     WUSWGH 112
      * Define work field Pieces Per Head
     C                     Z-ADD*ZERO     WUPPHE  70
      * Define work field Department Code
     C                     MOVEL*BLANK    WUR3CD  6
      * Define work field Group for Packaging
     C                     MOVEL*BLANK    WUSDCD  1
      * Define work field Seconds Item
     C                     MOVEL*BLANK    WUX5ST  1
      * Define work field Piece Count Item
     C                     MOVEL*BLANK    WUPCCT  1
      * Define work field Pieces Per Bag
     C                     Z-ADD*ZERO     WUBDNB  70
      * Define work field Bags Per Unit
     C                     Z-ADD*ZERO     WUBJNB  70
      * Define work field Export/Domestic
     C                     MOVEL*BLANK    WUSUST  1
      * Define work field Print On Schedule
     C                     MOVEL*BLANK    WUSVST  1
      * Define work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    WUSYST  1
      * Define work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    WUSZST  1
      * Define work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    WUS1ST  1
      * Define work field Primal Group Code
     C                     MOVEL*BLANK    WUXRCD  6
      * Define work field Qty EOD Inv 6 USR
     C                     Z-ADD*ZERO     WUNLQT  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WBBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WBBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WBBUC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WBBVC3           WHS Unused Comp
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Weight Scheduled SUM
     C                     Z-ADD*ZERO     WUEEWG 112
      * Define work field Header Status
     C                     MOVEL*BLANK    WUGWST  1
      * Define work field Billing Activity Type
     C                     MOVEL*BLANK    WUOBST  1
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCELDT           Production Date
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCGPDT           PS Available Sh
     C                     Z-ADD*ZERO     WCWTSP           PS Weight Plann
     C                     Z-ADD*ZERO     WCQTSP           PS Pieces Plann
     C                     Z-ADD*ZERO     WCDJPC           PS % of Carcass
     C                     Z-ADD*ZERO     WCF8WG           PS Avg Piece Wg
     C                     Z-ADD*ZERO     WCWTIN           PS Weight Inv O
     C                     Z-ADD*ZERO     WCD5NB           PS Pieces Inv O
     C                     Z-ADD*ZERO     WCDXWG           PS Weight Stand
     C                     Z-ADD*ZERO     WCB2NB           PS Pieces Stand
     C                     Z-ADD*ZERO     WCWTCN           PS Weight Conve
     C                     Z-ADD*ZERO     WCPSCV           PS Pieces Conve
     C                     Z-ADD*ZERO     WCSAWT           PS Weight Shipp
     C                     Z-ADD*ZERO     WCB9NB           PS Pieces Shipp
     C                     Z-ADD*ZERO     WCD1WG           PS Weight Prod
     C                     Z-ADD*ZERO     WCCBNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WCEZWG           PS Weight Inv A
     C                     Z-ADD*ZERO     WCCCNB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WCE0WG           PS Weight Ship
     C                     Z-ADD*ZERO     WCD6NB           PS Pieces Ship
     C                     Z-ADD*ZERO     WCOAWT           PS Weight Prod
     C                     Z-ADD*ZERO     WCCDNB           PS Pieces Prod
     C                     Z-ADD*ZERO     WCUNW2           PS Weight Inv A
     C                     Z-ADD*ZERO     WCCENB           PS Pieces Inv A
     C                     Z-ADD*ZERO     WCF9WG           PS Unit Weight
     C                     Z-ADD*ZERO     WCBPNB           PS Pieces Whse
     C                     Z-ADD*ZERO     WCGAWG           PS Weight Whse
     C                     Z-ADD*ZERO     WCBQNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WCGBWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WCBRNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WCGCWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WCBSNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WCGDWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WCBWNB           PS Pieces Unuse
     C                     Z-ADD*ZERO     WCGEWG           PS Weight Unuse
     C                     Z-ADD*ZERO     WCPS6U           PS Pieces Unuse
     C                     Z-ADD*ZERO     WCDVWG           PS Weight Order
     C                     Z-ADD*ZERO     WCD7NB           PS Pieces Order
     C                     Z-ADD*ZERO     WCFCAD           PS Weight FC Ad
     C                     Z-ADD*ZERO     WCD9NB           PS Pieces FC Ad
     C                     Z-ADD*ZERO     WCDWWG           PS Weight FX Ad
     C                     Z-ADD*ZERO     WCEANB           PS Pieces FX Ad
     C                     Z-ADD*ZERO     WCSHWT           PS Weight Sched
     C                     Z-ADD*ZERO     WCEBNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WCAVWT           PS Weight Avail
     C                     Z-ADD*ZERO     WCECNB           PS Pieces Avail
     C                     Z-ADD*ZERO     WCWTON           PS Weight Produ
     C                     Z-ADD*ZERO     WCEDNB           PS Pieces Produ
     C                     Z-ADD*ZERO     WCFNWT           PS Weight Fab N
     C                     Z-ADD*ZERO     WCEENB           PS Pieces Fab N
     C                     Z-ADD*ZERO     WCQTAS           PS Weight Sched
     C                     Z-ADD*ZERO     WCEFNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WCWAIO           PS Weight Sched
     C                     Z-ADD*ZERO     WCEGNB           PS Pieces Sched
     C                     Z-ADD*ZERO     WCRGNB           Item Structure
     C                     Z-ADD*ZERO     WCRHNB           Item Structure
     C                     Z-ADD*ZERO     WCRINB           Item Structure
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field USR First Position
     C                     MOVEL*BLANK    WUI3ST  1
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WA02 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ02 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ03 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WJ04 150       *Synon (15,0) w
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'Y'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     MOVEL*BLANK    WL0003 30
     C                     MOVEL*BLANK    WL0004  2
     C                     Z-ADD*ZERO     WL0005 112
     C                     Z-ADD*ZERO     WL0006  30
     C                     Z-ADD*ZERO     WL0007  30
     C                     Z-ADD*ZERO     WL0008  30
     C                     MOVEL*BLANK    WL0009  3
     C                     MOVEL*BLANK    WL0010  3
     C                     Z-ADD*ZERO     WL0011  52
     C                     MOVEL*BLANK    WL0012  2
     C                     MOVEL*BLANK    WL0013  1
     C                     MOVEL*BLANK    WL0014  1
     C                     Z-ADD*ZERO     WL0015 112
     C                     Z-ADD*ZERO     WL0016  70
     C                     MOVEL*BLANK    WL0017  6
     C                     MOVEL*BLANK    WL0018  1
     C                     MOVEL*BLANK    WL0019  1
     C                     MOVEL*BLANK    WL0020  1
     C                     Z-ADD*ZERO     WL0021  70
     C                     Z-ADD*ZERO     WL0022  70
     C                     MOVEL*BLANK    WL0023  1
     C                     MOVEL*BLANK    WL0024  1
     C                     MOVEL*BLANK    WL0025  1
     C                     MOVEL*BLANK    WL0026  1
     C                     MOVEL*BLANK    WL0027  1
     C                     MOVEL*BLANK    WL0028  6
      * Define local variables for subroutine SHRVGN.
     C                     Z-ADD*ZERO     WL0029  30
     C                     MOVEL*BLANK    WL0030  1
     C                     Z-ADD*ZERO     WL0031  70
     C                     Z-ADD*ZERO     WL0032  70
     C                     MOVEL*BLANK    WL0033  3
     C                     Z-ADD*ZERO     WL0034  92
     C                     Z-ADD*ZERO     WL0035  70
     C                     MOVEL*BLANK    WL0036  3
      * Define local variables for subroutine SIRVGN.
     C                     Z-ADD*ZERO     WL0037  30
     C                     Z-ADD*ZERO     WL0038  70
     C                     MOVEL*BLANK    WL0039  3
     C                     Z-ADD*ZERO     WL0040  70
     C                     Z-ADD*ZERO     WL0041 112
     C                     Z-ADD*ZERO     WL0042 112
     C                     MOVEL*BLANK    WL0043  1
      * Define local variables for subroutine SJRVGN.
     C                     Z-ADD*ZERO     WL0044  30
     C                     Z-ADD*ZERO     WL0045  70
     C                     MOVEL*BLANK    WL0046  1
     C                     MOVEL*BLANK    WL0047  1
      * Define local variables for subroutine SPRVGN.
     C                     MOVEL*BLANK    WL0048 10
     C                     MOVEL*BLANK    WL0049  6
     C                     Z-ADD*ZERO     WL0050  30
     C                     MOVEL*BLANK    WL0051  3
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Warehouse Description
     C                     MOVEL*BLANK    YL0002 30
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field Warehouse Type
     C                     MOVEL*BLANK    YL0004  2
      * Define local work field Date From             USR
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Date To               USR
     C                     Z-ADD*ZERO     YL0006  70
      * Define local work field Component Item Code
     C                     Z-ADD*ZERO     YL0007  70
      * Define local work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    YL0008  2
      * Define local work field Description Line One
     C                     MOVEL*BLANK    YL0009 30
      * Define local work field U/M - Primary
     C                     MOVEL*BLANK    YL0010  2
      * Define local work field Unit Weight
     C                     Z-ADD*ZERO     YL0011 112
      * Define local work field Item Structure Class Code
     C                     Z-ADD*ZERO     YL0012  30
      * Define local work field Item Structure Group Code
     C                     Z-ADD*ZERO     YL0013  30
      * Define local work field Item Structure Type Code
     C                     Z-ADD*ZERO     YL0014  30
      * Define local work field Item Type Code
     C                     MOVEL*BLANK    YL0015  3
      * Define local work field Default Warehouse
     C                     MOVEL*BLANK    YL0016  3
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0017  52
      * Define local work field Base/Conv/Loss Item
     C                     MOVEL*BLANK    YL0018  2
      * Define local work field Variety/Rendered/Cut
     C                     MOVEL*BLANK    YL0019  1
      * Define local work field Credit Item Status
     C                     MOVEL*BLANK    YL0020  1
      * Define local work field Std Weight/Head (Var/Ren)
     C                     Z-ADD*ZERO     YL0021 112
      * Define local work field Pieces Per Head
     C                     Z-ADD*ZERO     YL0022  70
      * Define local work field Department Code
     C                     MOVEL*BLANK    YL0023  6
      * Define local work field Group for Packaging
     C                     MOVEL*BLANK    YL0024  1
      * Define local work field Seconds Item
     C                     MOVEL*BLANK    YL0025  1
      * Define local work field Piece Count Item
     C                     MOVEL*BLANK    YL0026  1
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0027  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0028  70
      * Define local work field Export/Domestic
     C                     MOVEL*BLANK    YL0029  1
      * Define local work field Print On Schedule
     C                     MOVEL*BLANK    YL0030  1
      * Define local work field Fresh Inv Allocation Seq
     C                     MOVEL*BLANK    YL0031  1
      * Define local work field Fresh Sched As Ordered
     C                     MOVEL*BLANK    YL0032  1
      * Define local work field Frozen Inv Allocation Seq
     C                     MOVEL*BLANK    YL0033  1
      * Define local work field Primal Group Code
     C                     MOVEL*BLANK    YL0034  6
      * Define local work field Qty On-Hand USR
     C                     Z-ADD*ZERO     YL0035  50
      * Define local work field Qty Sched Prod 1 USR
     C                     Z-ADD*ZERO     YL0036  50
      * Define local work field Qty Sched Ord 1 USR
     C                     Z-ADD*ZERO     YL0037  50
      * Define local work field Qty Sched Ord 2 USR
     C                     Z-ADD*ZERO     YL0038  50
      * Define local work field Qty Sched Prod 2 USR
     C                     Z-ADD*ZERO     YL0039  50
      * Define local work field Qty Sched Ord 3 USR
     C                     Z-ADD*ZERO     YL0040  50
      * Define local work field Qty Sched Prod 3 USR
     C                     Z-ADD*ZERO     YL0041  50
      * Define local work field Qty Sched Ord 4 USR
     C                     Z-ADD*ZERO     YL0042  50
      * Define local work field Qty Sched Prod 4 USR
     C                     Z-ADD*ZERO     YL0043  50
      * Define local work field Qty Sched Ord 5 USR
     C                     Z-ADD*ZERO     YL0044  50
      * Define local work field Qty Sched Prod 5 USR
     C                     Z-ADD*ZERO     YL0045  50
      * Define local work field Qty Sched Ord 6 USR
     C                     Z-ADD*ZERO     YL0046  50
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0047  1
      * Define local work field Production Type
     C                     MOVEL*BLANK    YL0048  1
      * Define local work field PS Production Warehouse
     C                     MOVEL*BLANK    YL0049  3
      * Define local work field USR Day 1
     C                     Z-ADD*ZERO     YL0050  70
      * Define local work field Quantity Production USR
     C                     Z-ADD*ZERO     YL0051  61
      * Define local work field Quantity Ordered
     C                     Z-ADD*ZERO     YL0052 112
      * Define local work field Pieces Production USR
     C                     Z-ADD*ZERO     YL0053  70
      * Define local work field Qty Sched Prod 6 USR
     C                     Z-ADD*ZERO     YL0054  50
      * Define local work field Date Used for Calculation
     C                     Z-ADD*ZERO     YL0055  70
      * Define local work field *Initial call
     C                     MOVEL*BLANK    YL0056  1
      * Define local work field Item Description
     C                     MOVEL*BLANK    YL0057 30
      * Define local work field U/M - Primary
     C                     MOVEL*BLANK    YL0058  2
      * Define local work field Conversion Factor 1
     C                     Z-ADD*ZERO     YL0059  94
      * Define local work field Operation Factor 1
     C                     MOVEL*BLANK    YL0060  1
      * Define local work field U/M - Second
     C                     MOVEL*BLANK    YL0061  2
      * Define local work field Conversion Factor 2
     C                     Z-ADD*ZERO     YL0062  94
      * Define local work field Operation Factor 2
     C                     MOVEL*BLANK    YL0063  1
      * Define local work field U/M - Third
     C                     MOVEL*BLANK    YL0064  2
      * Define local work field U/M - Pricing
     C                     MOVEL*BLANK    YL0065  2
      * Define local work field Unit Weight
     C                     Z-ADD*ZERO     YL0066 112
      * Define local work field Production Date Control
     C                     MOVEL*BLANK    YL0067  1
      * Define local work field Catch Weight Status
     C                     MOVEL*BLANK    YL0068  1
      * Define local work field Fresh Chilling Time
     C                     Z-ADD*ZERO     YL0069  52
      * Define local work field Piece Count Item
     C                     MOVEL*BLANK    YL0070  1
      * Define local work field Pieces Per Bag
     C                     Z-ADD*ZERO     YL0071  70
      * Define local work field Bags Per Unit
     C                     Z-ADD*ZERO     YL0072  70
      * Define local work field Record Status
     C                     MOVEL*BLANK    YL0073  1
      * Define local work field Company Name
     C                     MOVEL*BLANK    YL0074 30
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0075  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0076  3
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD11        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      *
     C                     MOVEL*BLANK    WN0047 10        User Profile Na
      *
      * VAL Set Inter. Access  IF
     C                     MOVEL##USR     WN0047           User Profile Na
      *
     C                     MOVEL*BLANK    WN0048 10        User Code Model
      *
      * VAL User/Application   IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SORVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ 'Y2U0005'                  *IF
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0047    ZA0005           User Profile Na
     C                     MOVEL'P/S'     ZA0006           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0048    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0047    WL0048    P      User Profile Na
     C                     MOVEL'P/S'     WL0049    P      Application Cod
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0050    P1AIC3           Company Number
     C                     MOVELWL0051    YL0076    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0048    WL0048    P      User Profile Na
     C                     MOVEL'P/S'     WL0049    P      Application Cod
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0050    P1AIC3           Company Number
     C                     MOVELWL0051    YL0076    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0076    P1AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * SET Message Queue Dest US - /UT User Source  * 
     C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
      * Setup message data for message
     C                     MOVELWN0047    ZA0007           User Profile Na
     C                     MOVEL'P/S'     ZA0008           Application Cod
      * Send message 'Application access denied'
     C                     MOVEL'USR0810' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     MOVEL'*COMP  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     MOVEL'Y2U9999' P0RTN            *Return code
     C                     EXSR ZYEXPG
     C                     END                             *FI
      * Override company with User profile control's company if found
      * CASE: LCL.Company Number is not equal to zero
     C           YL0075    IFNE *ZERO                      *IF
     C                     Z-ADDYL0075    P1AIC3           Company Number
      * Get prod warehouse, if the appl got a warehouse
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0076    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  XF - Warehouse  * 
     C                     CALL 'PNKDXFR'              90  RTV Prod Whse f
     C                     PARM *BLANK    W0RTN   7
     C           P1AJCD    PARM *BLANK    WQ0037  3        Warehouse Code
     C                     PARM YL0075    WQ0038  30       Shipping Compan
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNKDXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SQRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'Y'       YL0001           First Time Flag
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** W0BEG
01045010520130101329015570158502050
02576025890260202615026280333003333
03342033480335503361033680337403381
03387033940340003410034160342503435
** W0END
01047010810130301335015620159002179
02583025960260902622026350333003339
03346033520335903365033720337803385
03391033980340403414034230343203440
** W0NAM
V2AIC3    #CSQTX    #PAJCD    V2C9NB    VCJEDT    VCJFDT    #2ST1
VCFFDT    VCE1DT    VCE2DT    VCE3DT    VCE4DT    #1SEL     V1C9NB
#RLKQT    #RLIQT    #RLLQT    #RLJQT    #RLVQT    #RLWQT    #RMOQT
#RM9QT    #RMPQT    #RNAQT    #RLEQT    #RKEQT    #RTQTC    #RMSQT
