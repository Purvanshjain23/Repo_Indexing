     H/TITLE Exc TRG HSP085 Process XF Execute external functio
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(QC2LE) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Execute external function
     H* Object type   : *PGM
      *
     H* Company       : Seaboard Foods
     H* System        : HPS
     H* User name     : ISDNGUY
     H* Date          : 01/20/22  Time  : 11:57:11
     H* Copyright     : Seaboard Foods
      *
      *================================================================
     M* Maintenance   :
      * DATE      PROGRAMMER
      * 04/14/22  Barb Gutierrez
      *           Changed field names to be hps standard.
      *================================================================
     FHSL085TR  IF A E           K DISK
      * Sales Movement Detail TRG
      *
      * Long constants
     D @CN#            S              6    DIM(01)CTDATA PERRCD(1)
     D @CN             S             25    DIM(01) ALT(@CN#)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
     D QPUCC1        E DS                  EXTNAME(HSL085TR)
      * UPD : HPS Sales Movement Dtl TRG
      * Renamed input format fields
     D  WAMVSN       E                     EXTFLD(SDTMVSN)
     D  WAHGSN       E                     EXTFLD(SDTHGSN)
     D  WASTMP       E                     EXTFLD(SDTTSTMP)
     D  WAEVSTS      E                     EXTFLD(SDTEVSTS)
     D  WAPRSTS      E                     EXTFLD(SDTPRSTS)
     D  WAPRDT       E                     EXTFLD(SDTPRDT)
      *
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              1
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  XDTSDL         S             26
     D  WLMVSN         S              7  0
     D  WLHGSN         S              7  0
     D  WLEVSTS        S              1
     D  WLPRSTS        S              2
     D  WLPRDT         S              8  0
     D  WNTSTMP        S             26
     D  ##TMS          S             26
     D  ZADFMF         S             10
     D  YL0001         S              1
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0PMT          S              1
     D  W_WASTMP       S               z
      /EJECT
      * Parameter declarations
     D P1PARM          DS            41
      * RCD: HPS Sales Movement Dtl    Retrieval index
      * I :  Movement Number
     D  P1MVSN                 1      4P 0
      * I :  Group Number
     D  P1HGSN                 5      8P 0
      * I :  Scheduled Head
     D  P1SCHD                 9     11P 0
      * I :  Shipped Head
     D  P1SHHD                12     14P 0
      * I :  Shipped Pounds
     D  P1SHLB                15     17P 0
      * I :  Live Head
     D  P1LVHD                18     20P 0
      * I :  Live Pounds
     D  P1LVLB                21     23P 0
      * I :  Dead-On-Arrival Head
     D  P1DOHD                24     26P 0
      * I :  Dead-On-Arrival Pounds
     D  P1DOLB                27     29P 0
      * I :  Condemned Head
     D  P1CDHD                30     32P 0
      * I :  Condemned Pounds
     D  P1CDLB                33     35P 0
      * I :  Yard Dead Head
     D  P1YDHD                36     38P 0
      * I :  Yard Dead Pounds
     D  P1YDLB                39     41P 0
     D P2PARM          DS            41
      * RCD: HPS Sales Movement Dtl    Retrieval index
      * I :  Movement Number
     D  P2MVSN                 1      4P 0
      * I :  Group Number
     D  P2HGSN                 5      8P 0
      * I :  Scheduled Head
     D  P2SCHD                 9     11P 0
      * I :  Shipped Head
     D  P2SHHD                12     14P 0
      * I :  Shipped Pounds
     D  P2SHLB                15     17P 0
      * I :  Live Head
     D  P2LVHD                18     20P 0
      * I :  Live Pounds
     D  P2LVLB                21     23P 0
      * I :  Dead-On-Arrival Head
     D  P2DOHD                24     26P 0
      * I :  Dead-On-Arrival Pounds
     D  P2DOLB                27     29P 0
      * I :  Condemned Head
     D  P2CDHD                30     32P 0
      * I :  Condemned Pounds
     D  P2CDLB                33     35P 0
      * I :  Yard Dead Head
     D  P2YDHD                36     38P 0
      * I :  Yard Dead Pounds
     D  P2YDLB                39     41P 0
     D P3PARM          DS
      * I :  TRG Database Event
     D  P3D8SC                 1      1
     D                 DS
     D  ZAMSDA                 1    132
     ISDTREC
      * Sales Movement Detail TRG
      * Renamed input format fields
     I              SDTMVSN                     WAMVSN
     I              SDTHGSN                     WAHGSN
     I              SDTTSTMP                    WASTMP
     I              SDTEVSTS                    WAEVSTS
     I              SDTPRSTS                    WAPRSTS
     I              SDTPRDT                     WAPRDT
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C                   PARM                    P1PARM                         RCD: HPS Sales
     C                   PARM                    P2PARM                         RCD: HPS Sales
     C     P3D8SC        PARM                    WP0001                         TRG Database Ev
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Trigger Processing for HSP085 File.
      * *****************************************************************
      * ** PR1 Parms Represent Old Record Fields (Will be blank for Inser
      * ** PR2 Parms Represent New Record Fields (Will be blank for Delet
      * *****************************************************************
      * Trigger Processing for Insert Event.
      * CASE: PR3.TRG Database Event is Insert
      * Create HPS Sales Movement Dtl TRG  *
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '1'
     C                   Z-ADD     P2MVSN        WLMVSN                         Movement Number
     C                   Z-ADD     P2HGSN        WLHGSN                         Group Number
     C                   MOVEL(P)  P3D8SC        WLEVSTS                        SMDT TRG Databa
     C                   MOVEL(P)  '0'           WLPRSTS                        SMDT Process St
     C                   Z-ADD     *ZERO         WLPRDT                         SMDT Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      * Trigger Processing for Update Event.
      * CASE: PR3.TRG Database Event is Update
     C                   IF        P3D8SC = '3'
     C                   MOVEL     'N'           YL0001                         Update Record U
      * Update If Any Non-Key Fields Have Changed.
      * CASE:
      *  - c1ORc2ORc3ORc4ORc5ORc6ORc7ORc8ORc9ORc10ORc11
      *   |- c1    : PR1.Scheduled Head NE PR2.Scheduled Head
      *   |- c2    : PR1.Shipped Head NE PR2.Shipped Head
      *   |- c3    : PR1.Shipped Pounds NE PR2.Shipped Pounds
      *   |- c4    : PR1.Live Head NE PR2.Live Head
      *   |- c5    : PR1.Live Pounds NE PR2.Live Pounds
      *   |- c6    : PR1.Dead-On-Arrival Head NE PR2.Dead-On-Arrival Head
      *   |- c7    : PR1.Dead-On-Arrival Pounds NE PR2.Dead-On-Arrival Po
      *   |- c8    : PR1.Condemned Head NE PR2.Condemned Head
      *   |- c9    : PR1.Condemned Pounds NE PR2.Condemned Pounds
      *   |- c10   : PR1.Yard Dead Head NE PR2.Yard Dead Head
      *   |- c11   : PR1.Yard Dead Pounds NE PR2.Yard Dead Pounds
      *   '-
     C                   IF        P1SCHD <> P2SCHD OR
     C                             P1SHHD <> P2SHHD OR
     C                             P1SHLB <> P2SHLB OR
     C                             P1LVHD <> P2LVHD OR
     C                             P1LVLB <> P2LVLB OR
     C                             P1DOHD <> P2DOHD OR
     C                             P1DOLB <> P2DOLB OR
     C                             P1CDHD <> P2CDHD OR
     C                             P1CDLB <> P2CDLB OR
     C                             P1YDHD <> P2YDHD OR
     C                             P1YDLB <> P2YDLB
     C                   MOVEL     'Y'           YL0001                         Update Record U
     C                   END                                                    *FI
      * Update Record?
      * CASE: LCL.Update Record USR is Yes
      * Create HPS Sales Movement Dtl TRG  *
      * Move input parameters to subroutine local variables.
     C                   IF        YL0001 = 'Y'
     C                   Z-ADD     P2MVSN        WLMVSN                         Movement Number
     C                   Z-ADD     P2HGSN        WLHGSN                         Group Number
     C                   MOVEL(P)  P3D8SC        WLEVSTS                        SMDT TRG Databa
     C                   MOVEL(P)  '0'           WLPRSTS                        SMDT Process St
     C                   Z-ADD     *ZERO         WLPRDT                         SMDT Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Trigger Processing for Delete Event.
      * CASE: PR3.TRG Database Event is Delete
      * Create HPS Sales Movement Dtl TRG  *
      * Move input parameters to subroutine local variables.
     C                   IF        P3D8SC = '2'
     C                   Z-ADD     P1MVSN        WLMVSN                         Movement Number
     C                   Z-ADD     P1HGSN        WLHGSN                         Group Number
     C                   MOVEL(P)  P3D8SC        WLEVSTS                        SMDT TRG Databa
     C                   MOVEL(P)  '0'           WLPRSTS                        SMDT Process St
     C                   Z-ADD     *ZERO         WLPRDT                         SMDT Process Da
     C                   EXSR      SACRRC
     C                   END                                                    *FI
      *----------------------------------------------------------------
      * Exit program
     C     AAEXIT        TAG
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
      /EJECT
     CSR   SACRRC        BEGSR
      *================================================================
      * Create HPS Sales Movement Dtl TRG  *
      *================================================================
      *
     C                   MOVEL     XDTSDL        WNTSTMP                        SMDT Timestamp
      *
     C                   EVAL      W0RTN = ' '
      * Move all fields to hsp085tr
     C                   Z-ADD     WLMVSN        WAMVSN                         Movement Number
     C                   Z-ADD     WLHGSN        WAHGSN                         Group Number
     C                   MOVEL     WLEVSTS       WAEVSTS                        SMDT TRG Databa
     C                   MOVEL     WLPRSTS       WAPRSTS                        SMDT Process St
     C                   Z-ADD     WLPRDT        WAPRDT                         SMDT Process Da
      *
      * USER: Processing before Data update
      * Set Timestamp TS#     IF
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WASTMP                         @Timestamp TS#
     C     KLCRSA        KLIST
     C                   KFLD                    WAMVSN                         Movement Number
     C                   KFLD                    WAHGSN                         Group Number
     C                   KFLD                    WASTMP                         SMDT Timestamp
      * Check for duplicate primary key
     C     KLCRSA        SETLL     SDTREC                                 90    *
     C                   IF        *IN90                                        Dup Timestamp Exist
     C                   EVAL      W_WASTMP = WASTMP
      * Loop Until System Timestamp Changes.
     C                   DOW       W_WASTMP = WASTMP
      * PAR.@Timestamp TS# = JOB.*System timestamp
     C                   EXSR      XSTMS
     C                   MOVEL     ##TMS         WASTMP                         @Timestamp TS#
     C                   ENDDO
     C                   ENDIF
      *
     C                   WRITE     SDTREC                               91      *
      *
      * Write error detected
     C                   IF        *IN91
     C                   MOVEL     'Y2U0004'     W0RTN
     C                   ELSE
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   XSTMS         BEGSR
      *================================================================
      * Refresh System timestamp
      *================================================================
     C                   CALL      'Y2RTTSK'
     C                   PARM                    ##TMS                          System timestam
      *================================================================
     CSR   XSTMSE        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAMVSN                         Movement Number
     C                   Z-ADD     *ZERO         WAHGSN                         Group Number
     C                   MOVE(P)   '0'           XDTSDL
     C                   MOVEL     @CN(001)      XDTSDL
     C                   MOVEL     XDTSDL        WASTMP                         SMDT Timestamp
     C                   Z-ADD     *ZERO         WAPRDT                         SMDT Process Da
      * Obtain default message file
     C     *DTAARA       DEFINE    CAMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Dummy move for compiler
     C                   MOVE      '0'           @CN#(1)
     C                   MOVEL     'N'           W0PMT
      * Define local variables for subroutine SACRRC.
     C                   Z-ADD     *ZERO         WLMVSN
     C                   Z-ADD     *ZERO         WLHGSN
     C                   EVAL      WLEVSTS = ' '
     C                   EVAL      WLPRSTS = ' '
     C                   Z-ADD     *ZERO         WLPRDT
      * Define local work field Update Record USR
     C                   EVAL      YL0001 = ' '
      *================================================================
     CSR   ZZEXIT        ENDSR
** @CN
00001 0001-01-01-00.00.00.00000
