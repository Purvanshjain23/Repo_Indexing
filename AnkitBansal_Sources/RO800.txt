     h option(*SRCSTMT:*NODEBUGIO)
      *
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO800
      * TITLE:       Retrieve Weekly Values of Item
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/19/06
      *
      * FUNCTION:  This function retrieves the 'Sales' and 'Produced' values for an
      *            Item for a specific Week.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 04/11/07  LeAnne Ramsey
      *           Switched from "sales" to "produced" values. But, we will continue
      *           to retrieve 2 "sales" fields: Sales Pounds, Net Product Revenue Amount
      *           just to give us a leg up if the users want to switch back to "sales"
      *           values later.
      *
      * 04/19/07  LeAnne Ramsey
      *           Prior to this change, the Pounds and Amounts were "aggregate" values.
      *           For the new TF Fees & Payments Byproduct Mix requirements, we now need
      *           Seaboard and Triumph broken out.
      *
      * 06/12/07  LeAnne Ramsey
      *           Prior to this change, we did not allow zero "sold" or "produced"
      *           pounds. If they were zero, we reset them to a value of '1'.
      *           Now, we will leave them at zero----except when we are using the
      *           "override" values where we will continue to force zero pounds to 1.
      *
      * 10/03/07  LeAnne Ramsey
      *           We will now adjust accumulated values with the user-entered valeus
      *           for the Week/Item in the Product Excpetion file.
      *
      * 10/23/07  Alice Brownfield
      *           I took out the hard-coding for 26010 and changed the "if" statement
      *           for 94109 to specifically look for that 1 product.  This change
      *           was needed when I automated the Yield calculation for PICNICS.
      *
      * 11/09/07  LeAnne Ramsey
      *           The change of 10/03/07 adjusted the SBF and TF produced values but did not
      *           adjust the Aggregate produced values. Added logic to adjust the Aggregate
      *           produced values.
      *
      * 06/11/08  Alice Brownfield
      *           Changed to exclude the Product Exceptions from TFP019 when the Item is a
      *           ByProduct. It is a Byproduct if this program was called from
      *           RO212-ByProduct Value Summary (Not BP6, Not OFF).
      *           ALSO changed the logical file that we use to get the TFP019 record.
      *           ALSO change $except to go into a setll/read loop in case there
      *                is more than one exception record for an Item/Week.
      *
      * 07/01/08  LeAnne Ramsey
      *           Increased decimal positions for "pounds" and "amount" fields in
      *           Product Exception file.  So, changed workfields in this program
      *           to have 4 decimals for "pounds" and 6 decimals for "amounts".
      *
      * 07/08/08  Alice Brownfield
      *           Added 94409 to work the same way as 94109 to use the Srouce Code info
      *
      * 11/21/08  LeAnne Ramsey
      *           As part of synchronizing the LDAs between the TFS Margin Adjustment Close
      *           and the Meat Costing, we changed the LDA positions.
      *
      * 01/14/10  LeAnne Ramsey
      *           We already had hardcoding on 94409 and 94109. Added more hardcoding since
      *           Damon Ginther now wants it to use the Override price entered in the
      *           Item Control for Item 96109.
      *
      * 11/15/12  LeAnne Ramsey (E2337)
      *           Recompile only.
      *           Rose had to increase the price/cwt field sizes in PPBTCPP-Inventory
      *           Value file and PPBSCPP-Inventory Stock Closing.
      *
      * 02/23/17  Danny Nguyen (R9083)
      *           New Seaboard Triumph Foods (STF) will need to be valued on its own and NOT
      *           included in company 360/960 Valuation and NOT included in the Triumph Fees
      *           & Payments Weekly Revenue processing.
      *           Replaced PPBSCPL3 logical with PPBSCPLC. Replaced PPBTCPL1 logical with
      *           PPBTCPL7. Both logicals SEL Grouping = G (Guymon & Triumph).
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfl019b   if   e           k disk
      *   Product exceptions
      *
      *
R9083f*ppbscpl3  if   e           k disk
  |  fppbscplc  if   e           k disk
R9083 *  Inventory Stock Closing - WeekEnd/Item SEL Grp=G
      *
      *
R9083fppbtcpl1  if   e           k disk
  |  fppbtcpl7  if   e           k disk
R9083 *  Inventory Value File - WeekEnd/Item SEL Grp=G
      *
      *
     frol012a   if   e           k disk
      *  Item control data
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wkfrxfl         s              1
     D wkovrfl         s              1
     D wkitcd          s                   like(bsejc7)
     D wk96109         s                   like(bsejc7)
     D wkdobspr        s                   like(icdobspr)
      *
     D wkssllb         s                   like(pesexpulb)
     D wksslam         s                   like(pesexpuam)
     D wkscomam        s                   like(pesexpuam)
     D wkspulb         s                   like(pesexpulb)
     D wkspuam         s                   like(pesexpuam)
      *
     D wktsllb         s                   like(pesexpulb)
     D wktslam         s                   like(pesexpuam)
     D wktcomam        s                   like(pesexpuam)
     D wktpulb         s                   like(pesexpulb)
     D wktpuam         s                   like(pesexpuam)
      *
     D wkasllb         s                   like(pesexpulb)
     D wkaslam         s                   like(pesexpuam)
     D wkacomam        s                   like(pesexpuam)
     D wkapulb         s                   like(pesexpulb)
     D wkapuam         s                   like(pesexpuam)
      *
      *
      * Parms
      *
     D xxwedt          s                   like(bsaidx)
     D xxitcd          s                   like(bsejc7)
     D xxfzfl          s              1
     d xxmurt          s              9  6
     d xxmupc          s              7  4
     D xxcredit        s              1
      *
     D xxspuam         s             15  6
     D xxspulb         s             15  4
      *
     D xxtpuam         s             15  6
     D xxtpulb         s             15  4
      *
     D xxaslam         s             15  6
     D xxasllb         s             15  4
     D xxapuam         s             15  6
     D xxapulb         s             15  4
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldcono                82     84  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *************************************************************************************
      * Mainline
      *************************************************************************************
      *
      * For our logic we will need:
      *   1) multiplier %
      *   2) fresh product except flag
      *   3) override values
      * from the Item Control Data file for this:
      *   1) week-ending date
      *   2) company
      *   3) item code
      *
     C                   move      no            wkovrfl
     C     key02         chain     rol012a                            92
     C                   if        *in92 = *on                                  If no control
     C                   move      no            wkfrxfl
     C                   else
      *
     C                   move      icfrxfl       wkfrxfl
     C                   z-add     icmupc        xxmupc
      *
      * Determine if we need to use Override values for this item.
      * Set Override flag to YES when there is an ROP012-Item Control Data
      * record for this Item where:
      *   1. The Default/Override code in the ROP012 record is "override"
      *   2. The Default/Override Base Price in the ROP012 record is not zero
      *   3. This pgm was called from RO212-Byproduct Value Summary.
      *
     C                   if        icdocd = 'OVR' and icdobspr <> 0 and
     C                             xxcredit = yes
     C                   move      yes           wkovrfl
     C                   endif
     C                   endif                                                  If no control
      *
      * If Multiplier % is zero, set it to 100%.
      * Then, get the Multiplier % into a "rate" field.
      *
     C                   if        xxmupc = 0
     C                   z-add     100           xxmupc
     C                   endif
     C                   eval      xxmurt = xxmupc / 100
      *
      * We will override the incoming 'Item' with the "source item code" only
      *   when the item code is 94109 or 94409 (FAT items)
      *
     C                   if        xxitcd = 94109 or xxitcd = 94409
     C                   z-add     icsritcd      wkitcd
     C                   else
     C                   z-add     xxitcd        wkitcd
     C                   endif
      *
      * Use Override Values or Retrieve/accumulate Inventory Stock Closing values
      *
     C                   if        wkovrfl = yes                                If override
      * Seaboard
     C                   z-add     0             wkscomam
     C                   z-add     1             wkssllb
     C                   z-add     icdobspr      wksslam
     C                   z-add     1             wkspulb
     C                   z-add     icdobspr      wkspuam
      * Triumph
     C                   z-add     0             wktcomam
     C                   z-add     1             wktsllb
     C                   z-add     icdobspr      wktslam
     C                   z-add     1             wktpulb
     C                   z-add     icdobspr      wktpuam
      * Aggregate
     C                   z-add     0             wkacomam
     C                   z-add     1             wkasllb
     C                   z-add     icdobspr      wkaslam
     C                   z-add     1             wkapulb
     C                   z-add     icdobspr      wkapuam
     C                   else
      *
     C                   exsr      $accum
      *
      * if NOT a Byproduct get the Product Exceptions to include in totals
      *
     C                   if        xxcredit = no
     C                   exsr      $except
     C                   endif
      *
     C                   endif                                                  If override
      *
      * Set up the Amount and Pounds values to send back out to the calling program
      *
      * Seaboard
     C                   z-add     wkspulb       xxspulb
     C                   z-add     wkspuam       xxspuam
      * Triumph
     C                   z-add     wktpulb       xxtpulb
     C                   z-add     wktpuam       xxtpuam
      * Aggregate
     C                   z-add     wkasllb       xxasllb
     C     wkaslam       sub       wkacomam      xxaslam
     C                   z-add     wkapulb       xxapulb
     C                   z-add     wkapuam       xxapuam
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve/accumulate Inventory Stock Closing values
      *-----------------------------------------------------------------------------------
      *
     C     $accum        begsr
      *
      * Process each Inventory Stock Closing record for the Week/Item
      * accumulating Amount and Pounds.
      *
R9083 ** Replaced Logical File. LF selects Grouping = G (Guymon & Triumph).
  |  C**   key01         setll     ppbscpl3
R9083C     key01         setll     ppbscplc
      *
     C                   dou       *in90 = *on                                  Do stock
R9083C**   key01         reade     ppbscpl3                               90
R9083C     key01         reade     ppbscplc                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * The only time we will NOT process a record is when:
      *  1) it is a Frozen warehouse and
      *  2) the user has said "include frozen = NO" and
      *  3) the Fresh Product Except Flag is NO
      *
     C                   if        bsv8sx = 'FZ' and                            If process
     C                             xxfzfl = no and
     C                             wkfrxfl = no
     C                   else
      *
      * Accumulate for Sales:
      *   Sales Amount:       ISC FOB Gross Amount - Exempt Amount
      *   Commisssion Amount: ISC Commission
      *   Sales Pounds:       ISC Shipment Final Pounds - Exempt Pounds
      *
      * Aggregate
     C                   add       bsfqvl        wkaslam
     C                   sub       bsovqt        wkaslam
     C                   add       bsouqt        wkacomam
     C                   add       bsmwwg        wkasllb
     C                   sub       bsm7wg        wkasllb
      * Seaboard
     C                   if        bsb2c3 = 360
     C                   add       bsfqvl        wksslam
     C                   sub       bsovqt        wksslam
     C                   add       bsouqt        wkscomam
     C                   add       bsmwwg        wkssllb
     C                   sub       bsm7wg        wkssllb
     C                   endif
      * Triumph
     C                   if        bsb2c3 = 960
     C                   add       bsfqvl        wktslam
     C                   sub       bsovqt        wktslam
     C                   add       bsouqt        wktcomam
     C                   add       bsmwwg        wktsllb
     C                   sub       bsm7wg        wktsllb
     C                   endif
      *
      * Accumulate for Production:
      *   Produced Pounds:    ISC Sales Production Pounds
      *
      * Aggregate
     C                   add       bsmtwg        wkapulb
      * Seaboard
     C                   if        bsb2c3 = 360
     C                   add       bsmtwg        wkspulb
     C                   endif
      * Triumph
     C                   if        bsb2c3 = 960
     C                   add       bsmtwg        wktpulb
     C                   endif
      *
     C                   endif                                                  If process
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do stock
      *
      *
      * Retrieve an Inventory Value record for this:
      *           1) week-ending date
      *           2) item code
      *
R9083 ** Replaced Logical File. LF selects Grouping = G (Guymon & Triumph).
  |  C**   key01         chain     ppbtcpl1                           92
R9083C     key01         chain     ppbtcpl7                           92
     C                   if        *in92 = *off                                 If hit
      *
      * If Sales values are zero, set:
      *   1) Sales Amount equal to IVF Cur Week Inv Value Prc/CW / 100
      *   2) Commission Amount to zero.
      *
      *         Seaboard
     C                   if        wkssllb = 0 or wksslam = 0
     C                   eval(h)   wksslam = btfzvl / 100
     C                   z-add     0             wkscomam
     C                   endif
      *         Triumph
     C                   if        wktsllb = 0 or wktslam = 0
     C                   eval(h)   wktslam = btfzvl / 100
     C                   z-add     0             wktcomam
     C                   endif
      *        Aggregate
     C                   if        wkasllb = 0 or wkaslam = 0
     C                   eval(h)   wkaslam = btfzvl / 100
     C                   z-add     0             wkacomam
     C                   endif
      *
      * Calculate Produced Value Amount:
      *     If Produced Pounds are zero,
      *        Set Amount to zero
      *     If IVF Curr Wk Prod Price/CW is not zero,
      *        Produced Pounds * (IVF Curr Wk Prod Price/CW / 100)
      *     Else
      *        Set Amount equal to IVF Cur Week Inv Value Prc/CW divided by 100
      *
      * Seaboard
     C                   select
     C                   when      wkspulb = 0
     C                   z-add     0             wkspuam
      *
     C                   when      xxitcd = 94109 or xxitcd = 94409
     C                   eval(h)   wkspuam = wkspulb * wkdobspr
      *
     C                   when      btfxvl <> 0
     C                   eval(h)   wkspuam = wkspulb * (btfxvl / 100)
     C                   other
      *
     C                   eval      wkspuam = btfzvl / 100
     C                   endsl
      * Triumph
     C                   select
     C                   when      wktpulb = 0
     C                   z-add     0             wktpuam
      *
     C                   when      xxitcd = 94109 or xxitcd = 94409
     C                   eval(h)   wktpuam = wktpulb * wkdobspr
      *
     C                   when      btfxvl <> 0
     C                   eval      wktpuam = wktpulb * (btfxvl / 100)
     C                   other
      *
     C                   eval(h)   wktpuam = btfzvl / 100
     C                   endsl
      *
      * Aggregate
     C                   select
     C                   when      wkapulb = 0
     C                   z-add     0             wkapuam
      *
     C                   when      xxitcd = 94109 or xxitcd = 94409
     C                   eval(h)   wkapuam = wkapulb * wkdobspr
      *
     C                   when      btfxvl <> 0
     C                   eval      wkapuam = wkapulb * (btfxvl / 100)
     C                   other
      *
     C                   eval(h)   wkapuam = btfzvl / 100
     C                   endsl
     C                   endif                                                  If hit
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------------------
      * Retrieve Product Exceptions for the Week/Item
      *-------------------------------------------------------------------------------------
      *
     C     $except       begsr
      *
     C     key03         setll     tfl019b
      *
     C                   dou       *in91 = *on                                  Do exception
     C     key03         reade     tfl019b                                91
     C                   if        *in91 = *off                                 If not eof
      *   Produced Pounds
     C                   add       pesexpulb     wkspulb
     C                   add       pesexpulb     wkapulb
      *
     C                   add       petexpulb     wktpulb
     C                   add       petexpulb     wkapulb
      *
      *   Produced Value Amount
     C                   add       pesexpuam     wkspuam
     C                   add       pesexpuam     wkapuam
      *
     C                   add       petexpuam     wktpuam
     C                   add       petexpuam     wkapuam
      *   Sold Pounds
     C                   add       pesexsllb     wkasllb
     C                   add       petexsllb     wkasllb
      *
      *   Net Product Revenue Amount
     C                   add       pesexnpram    wkaslam
     C                   add       petexnpram    wkaslam
      *
     C                   endif                                                  If not eof
     C                   enddo                                                  Do Exception
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxcredit
     C                   parm                    xxwedt
     C                   parm                    xxitcd
     C                   parm                    xxfzfl
     C                   parm                    xxmurt
     C                   parm                    xxmupc
      *        Seaboard
     C                   parm                    xxspulb
     C                   parm                    xxspuam
      *        Triumph
     C                   parm                    xxtpulb
     C                   parm                    xxtpuam
      *        Aggregate
     C                   parm                    xxasllb
     C                   parm                    xxaslam
     C                   parm                    xxapulb
     C                   parm                    xxapuam
      *
      *
      * Retrieve the Override Price for Item 96109-Pork Animal Fat
      *
     C                   z-add     96109         wk96109
     C     key04         chain     rol012a                            92
     C                   if        *in92 = *off
     C                   z-add     icdobspr      wkdobspr
     C                   endif
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    xxwedt
     C                   kfld                    wkitcd
      *
     C     key02         klist
     C                   kfld                    xxwedt
     C                   kfld                    ldcono
     C                   kfld                    xxitcd
      *
     C     key03         klist
     C                   kfld                    xxwedt
     C                   kfld                    xxitcd
      *
     C     key04         klist
     C                   kfld                    xxwedt
     C                   kfld                    ldcono
     C                   kfld                    wk96109
      *
     C                   endsr
      /EJECT
