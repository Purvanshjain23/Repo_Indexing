      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production
      * PROGRAM:     HP3074
      * TITLE:       Build Workfile for Commuter Herd Movement Log
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/21/11
      *
      * *NOTE:       Only includes Transfer movements with a Received Date
      *              or a Scheduled Ship Date as requested
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER    (task#)
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsl034d   if   e           k disk
      *    Hog group
      *
      *
     Fhsp074    if   e           k disk
      *  Transfer movement header (records selected by OPNQRY)
      *
      *
     Fhsp075    if   e           k disk
      *  Transfer movement detail
      *
      *
     Fhsp3074   o    e             disk
      *    Workfile
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO, DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *  Externally defined as UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      *  LDA
      *---------------------------------------------------------------
     d lda            uds                  dtaara(*lda)
     D  ldfymd                 6     13
     D  ldtymd                14     21
     D  ldaslfl               51     51
     D  lddtsel              260    260
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      * Control fields
      *
     D procfl          s              1
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
      * Read each Transfer Movement Header record selected by the Open Query.
      * (Only Transfers with the user's selected Business Office and a
      * Date in the user's Date Range are to be selected.)
      * If "S" date type then date range is by Scheduled Ship Date
      * If "R" date type then date range is by Received Date
      *
     C     *loval        setll     hsp074
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp074                                 90
     C                   if        *in90 = *off                                 If not EOF
     C                   exsr      $tran
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------
      * Transfers
      *----------------------------------------------------------------
      *
     C     $tran         begsr
      *
     C                   z-add     mhmvsn        wfmvsn
     C                   movel     mhmscd        wfmscd
     C                   z-add     mhscdt        wfscdt                         sched ship date
     C                   z-add     mhrcdt        wfrcdt                         received date
     C                   movel     mhticd        wfticd
      * ORIGIN
     C                   move      mhorbo        wforbo                         orig bus office
     C                   move      mhorpt        wforpt                         orig production type
     C                   move      mhorpp        wforpp                         orig produc phase
     C                   z-add     mhorfs        wforfs                         orig farm site
      *
     C     wforfs        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   movel     fssacd        wforsacd
     C                   else
     C                   move      *blank        wforsacd
     C                   endif
      * Destination
     C                   movel     mhdnbo        wfdnbo
     C                   movel     mhdnpt        wfdnpt
     C                   movel     mhdnpp        wfdnpp
     C                   z-add     mhdnfs        wfdnfs
      *
     C     wfdnfs        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   movel     fsfsnm        wfdnnm
     C                   movel     fssacd        wfdnsacd
     C                   else
     C                   movel(p)  'Unknown'     wfdnnm
     C                   move      *blank        wfdnsacd
     C                   endif
      *
      * Users may elect to Include/Exclude/Only Print Transfers that Cross a
      * State line. So, check the user's selection in the LDA and determine
      * whether to continue processing.
      *
     C                   move      no            procfl
     C                   select
     C                   when      ldaslfl = 'I'
     C                   move      yes           procfl
      *
     C                   when      ldaslfl = 'E' and wforsacd = wfdnsacd
     C                   move      yes           procfl
      *
     C                   when      ldaslfl = 'O' and wforsacd <> wfdnsacd
     C                   move      yes           procfl
     C                   endsl
      *
      * Retrieve Transfer Movement Detail records. Write a workfile record
      * for each one.
      *
     C                   if        procfl = yes                                 If process
     C     mhmvsn        setll     hsp075
      *
     C                   dou       *in91 = *on                                  DO TRAN DTL
     C     mhmvsn        reade     hsp075                                 91
     C                   if        *in91 = *off                                 IF TRAN DTL
      *
     C                   z-add     mdschd        wfschd                         sched head
     C                   z-add     mdqlhd        wfqlhd                         quality head
      *
      * Origin group
     C                   z-add     mdorsn        wforsn                         orig group nbr
     C     mdorsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   movel     hghgcd        wforhg                         hog group code
     C                   movel     hgblcd        wforbl                         bldg code
     C                   movel     hgrmcd        wforrm                         room code
     C                   else
     C                   move      *blank        wforhg
     C                   move      *blank        wforbl
     C                   move      *blank        wforrm
     C                   endif
      *
      * Destination group
      *
     C                   z-add     mddnsn        wfdnsn
     C     mddnsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   movel     hghgcd        wfdnhg
     C                   movel     hgblcd        wfdnbl
     C                   movel     hgrmcd        wfdnrm
     C                   else
     C                   move      *blank        wfdnhg
     C                   move      *blank        wfdnbl
     C                   move      *blank        wfdnrm
     C                   endif
      *
     C                   write     wfrec
      *
     C                   endif                                                  IF TRAN DTL
     C                   enddo                                                  DO TRAN DTL
     C                   endif                                                  If process
      *
     C                   clear                   wfrec
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /EJECT
