      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP8018 - Calculate the Farm Size based on Phase/Capacity
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/27/04
      *
      * Function:  This function hard-codes a "Farm Size" based on Phase/Hog Capacity.
      *            (This was originally written to populate Datamart Farm Site files.)
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Parm fields
      *
     D xxppcd          s              5
     D xxcphd          s              5p 0
     D xxsize          s             15
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Clear the return parm.
      *
     C                   move      *blank        xxsize
      *
      *
      * Hardcode a 'Farm Size' value based on phase/hog capacity.
      *
     C                   select
     C                   when      xxppcd = 'BGF  '
     C                   exsr      $bgf
      *
     C                   when      xxppcd = 'NUR  '
     C                   exsr      $nur
      *
     C                   when      xxppcd = 'GF   '
     C                   exsr      $gf
     C                   endsl
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Hardcode BGF values
      *---------------------------------------------------------------
      *
     C     $bgf          begsr
      *
     C                   select
     C                   when      xxcphd <= 2500
     C                   eval      xxsize = 'BGF <= 2500'
      *
     C                   when      xxcphd <= 3500
     C                   eval      xxsize = 'BGF 2501-3500'
      *
     C                   when      xxcphd <= 5000
     C                   eval      xxsize = 'BGF 3501-5000'
      *
     C                   when      xxcphd <= 10000
     C                   eval      xxsize = 'BGF 5001-10000'
     C                   other
      *
     C                   eval      xxsize = 'BGF > 10000'
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Hardcode Nursery values
      *---------------------------------------------------------------
      *
     C     $nur          begsr
      *
     C                   select
     C                   when      xxcphd <= 10000
     C                   eval      xxsize = 'NUR <= 10000'
      *
     C                   when      xxcphd <= 15000
     C                   eval      xxsize = 'NUR 10000-15000'
      *
     C                   when      xxcphd <= 20000
     C                   eval      xxsize = 'NUR 15001-20000'
      *
     C                   when      xxcphd <= 25000
     C                   eval      xxsize = 'NUR 20001-25000'
     C                   other
      *
     C                   eval      xxsize = 'NUR > 25000'
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Hardcode Grow Finish values
      *---------------------------------------------------------------
      *
     C     $gf           begsr
      *
     C                   select
     C                   when      xxcphd <= 5000
     C                   eval      xxsize = 'GF <= 5000'
      *
     C                   when      xxcphd <= 10000
     C                   eval      xxsize = 'GF 5001-10000'
      *
     C                   when      xxcphd <= 15000
     C                   eval      xxsize = 'GF 10001-15000'
      *
     C                   when      xxcphd <= 20000
     C                   eval      xxsize = 'GF 15001-20000'
     C                   other
      *
     C                   eval      xxsize = 'GF > 20000'
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     *entry        plist
     C                   parm                    xxppcd
     C                   parm                    xxcphd
     C                   parm                    xxsize
      *
     C                   endsr
      /eject
