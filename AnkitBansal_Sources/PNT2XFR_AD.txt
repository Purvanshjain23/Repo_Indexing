// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNT2XFR
// ?Date: 14.08.2025 Time: 03:46:32
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?S14912 RMC 5/25/19 on the below, when going after the other plant,
//?  go with 374-6412 then 374-4846 -- sunsetting 6412 with SE name chg
//?S13119 RMC 5/30/18 put the below on a switch so they can go oldest first
//?   or the order's company first-use new lf pmdacpln.
//?   company value: HPBFACOLD = FAC = facilty first, OLD = oldest first
//?S12497 RMC 2/28/18 drop shipp co/ulsd co from key, get oldest first
//?   PMDACPL7
//?R8683 RMC 1/13/17 try to get excess rins from both marketing cos.
//?E2079 RMC 5/15/12 Pass temp to rtv when creating new rcd
//?E2013 RMC 3/21/12 output act ship date as rin trans dt
//?E1868 RMC 01/03/12 All FIFO proc in EMTS - dont chk dt<12/21/11
//?E1868 RMC 12/20/11 Control FIFO proc in EMTS with GEN date<12/21/11
//?C01751 RMC 9/20/11 was using the wrong company when upd leftover vol
//?C01641 RMC 7/13/11 was using the wrong field for the left over volume
//?E0921 8/16/10 Create RIN SEP transactions(s) for a Blender Sel for
//? whom HPB has been 'upstream delegated' to manage their RINs.
//? OR Create SEL transactions for when the Rin equiv value on the order >1.5
//?Calc new volume for 1st SEP or SEL from RIN quantity / 2.5
//?  Round any dec place to next whole nmbr - so add .5 then round
// Comp: vol at 2.5 the rins
LCL.AMOUNT = PAR.COA_RIN_Quantity / PAR.COA_RIN_Equivalence_Valu#;

// LCL.Decimal Places    usr = LCL.AMOUNT
LCL.Decimal_Places_usr = LCL.AMOUNT;

//?chk decimal places>0
CASE;

// IF LCL.Decimal Places    usr is GT .00
IF LCL.Decimal_Places_usr > .00;

// LCL.AMOUNT = LCL.AMOUNT + CON..5
LCL.AMOUNT = LCL.AMOUNT + .5;

ENDIF;

// LCL.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
LCL.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

//?Calc Volume needed =  Orig Volume - Volume at 2.5
// LCL.COA RIN Volume New usr = PAR.COA Batch RIN Volume - LCL.COA Batch RIN Volume
LCL.COA_RIN_Volume_New_usr = PAR.COA_Batch_RIN_Volume - LCL.COA_Batch_RIN_Volume;

//?Create 1st SEP/SEL RIN Trans from 369 Order to Blender/Reg cust
//?with per gallon price
//?************************
//?E2013 RMC 3/21/12 output act ship date as rin trans dt
EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_Batch_Hdr_RIN_Seq_Sec);
PARAMETER(PAR.COA_Batch_Header_RIN);
PARAMETER(PAR.COA_RIN_SSSSSSSS);
PARAMETER(PAR.COA_RIN_EEEEEEEE);
PARAMETER(PAR.COA_RIN_Volume_in_Gallons);
PARAMETER(PAR.Actual_Ship_Date_Usr);
PARAMETER(JOB.*Job_time);
PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Case_Sequence_Number);
PARAMETER(*BLANK);
PARAMETER(PAR.Load_ID);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('N');
PARAMETER(*BLANK);
PARAMETER(PAR.COA_RIN_SoldFull_Splt_Sts);
PARAMETER(PAR.COA_RIN_Gallons_Sold);
PARAMETER(PAR.COA_Ship_To_Warehouse);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(PAR.COA_RIN_Customer_PO#);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.RFS_Compliance_Period);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.COA_RIN_Int_Ext_Company);
PARAMETER(PAR.COA_BHR_Unused_Sts_2);
PARAMETER(PAR.COA_BHR_Net_Galls_to_Sell);
PARAMETER(PAR.COA_BHR_Unused_Date_2);
PARAMETER(PAR.COA_BHR_Unused_Text);
PARAMETER(PAR.COA_BHR_Loadout_Temp);
PARAMETER(PAR.COA_ULSD_Facility_#);
PARAMETER(LCL.COA_Batch_RIN_Volume);
PARAMETER(PAR.COA_RIN_Quantity);
PARAMETER(PAR.RFS_Transaction_Type);
PARAMETER(PAR.RFS_Trans_Reason_Code);
PARAMETER(PAR.RFS_Fuel_Code);
PARAMETER(PAR.COA_BHR_RIN_Gen_Year);
PARAMETER(*ZERO);
PARAMETER(PAR.COA_BHR_Gallon_Price);
PARAMETER(PAR.COA_Transaction_Comment);
PARAMETER(PAR.COA_RIN_Supporting_Text_1);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
PARAMETER(PAR.COA_RIN_Supporting_Text_2);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
PARAMETER(PAR.COA_GEN_EMTS_Sts);
PARAMETER(PAR.COA_GEN_EMTS_Date_Sent);
PARAMETER(PAR.COA_GEN_EMTS_Time_Sent);
PARAMETER(PAR.COA_RIN_EMTS_Sts);
PARAMETER(PAR.COA_RIN_EMTS_Date_Sent);
PARAMETER(PAR.COA_RIN_EMTS_Time_Sent);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.COA_EMTS_Batch_Nbr);
PARAMETER(PAR.COA_BHR_Unused_Sts_3);
PARAMETER(PAR.COA_BHR_Unused_Nbr);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(PAR.COA_BHR_Unused_Date_3);
PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
PARAMETER(*ZERO);
PARAMETER(PAR.COA_Unassgnd_Txfrd_RINS);
PARAMETER('A');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER(JOB.*USER);
PARAMETER(JOB.*PROGRAM);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

}


//?************
//?Create More SEP RINs Trans to cover the extra volume needed
//?  Read trans with unassigned rins to sell
//?   with per gallon price also  per tom
CASE;

// IF LCL.COA RIN Volume New usr is GT 00000000
IF LCL.COA_RIN_Volume_New_usr > 0;

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER('HPBFACOLD');
PARAMETER(LCL.HPB_Facility_or_Oldest);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// LCL.COA BHR RIN Price = CON.*ZERO
LCL.COA_BHR_RIN_Price = *ZERO;

// LCL.COA BHR Gallon Price = PAR.COA BHR Gallon Price
LCL.COA_BHR_Gallon_Price = PAR.COA_BHR_Gallon_Price;

CASE;

// IF LCL.HPB Facilty or Oldest is Oldest first
IF LCL.HPB_Facility_or_Oldest = 'OLD';

EXECUTE FUNCTION(Rtv Gen RIN SEP Trans RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2002722;
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(PAR.COA_RIN_Customer_PO#);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.COA_BHR_Loadout_Temp);
PARAMETER(PAR.COA_ULSD_Facility_#);
PARAMETER(PAR.RFS_Transaction_Type);
PARAMETER(PAR.RFS_Trans_Reason_Code);
PARAMETER(PAR.RFS_Fuel_Code);
PARAMETER(PAR.COA_BHR_RIN_Gen_Year);
PARAMETER(LCL.COA_BHR_RIN_Price);
PARAMETER(LCL.COA_BHR_Gallon_Price);
PARAMETER(PAR.COA_RIN_Supporting_Text_1);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
PARAMETER(PAR.COA_RIN_Supporting_Text_2);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
PARAMETER(PAR.COA_EMTS_PTD_Nbr);
PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
PARAMETER(LCL.COA_RIN_Volume_New_usr);
PARAMETER(PAR.Actual_Ship_Date_Usr);
{
 //?USER: Initialize routine

 //?S12497 RMC 2/28/18 drop shipp co/ulsd co from key, get oldest first
 //?E2079 5/15/12 Use temp passed in when creating new rcd
 //?E0921 8/16/10 Create RIN SEP transactions(s) for a Blender Sel for
 //? whom HPB has been 'upstream delegated' to manage their RINs.
 //?USER: Process Data record

 //?Rounding Rule: When calculating Gallons(Volume), Round up (+.5*1 to round)
 //?               When calculating RINs, dont round
 //?Par.coa rin volume new usr = volume needed
 //?Calc new volume available from (RINs to sell)/ 2.5
 //?  Round any dec place to next whole nmbr - so add .5 then round
 // Comp: vol at 2.5 the rins
 LCL.AMOUNT = DB1.COA_BHR_RINs_to_Sell_Sep / PAR.COA_RIN_Equivalence_Valu#;

 // LCL.Decimal Places    usr = LCL.AMOUNT
 LCL.Decimal_Places_usr = LCL.AMOUNT;

 //?chk decimal places>0
 CASE;

 // IF LCL.Decimal Places    usr is GT .00
 IF LCL.Decimal_Places_usr > .00;

 // LCL.AMOUNT = LCL.AMOUNT + CON..5
 LCL.AMOUNT = LCL.AMOUNT + .5;

 ENDIF;

 // WRK.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
 WRK.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

 CASE;

 // IF WRK.COA Batch RIN Volume GE PAR.COA RIN Volume New usr
 IF WRK.COA_Batch_RIN_Volume >= PAR.COA_RIN_Volume_New_usr;

 // LCL.Volume to use = PAR.COA RIN Volume New usr
 LCL.Volume_to_use = PAR.COA_RIN_Volume_New_usr;

 //?Calc RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = LCL.Volume to use * PAR.COA RIN Equivalence Valu# *
 LCL.COA_RIN_EEEEEEEE_New_usr = LCL.Volume_to_use * PAR.COA_RIN_Equivalence_Valu#;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Volume to use = WRK.COA Batch RIN Volume
 LCL.Volume_to_use = WRK.COA_Batch_RIN_Volume;

 //?Upd RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = DB1.COA BHR RINs to Sell Sep
 LCL.COA_RIN_EEEEEEEE_New_usr = DB1.COA_BHR_RINs_to_Sell_Sep;

 ENDIF;

 //?Reduce Unsassigned RINs to sell by RINS using for this new SEP Trans
 // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep - LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep
 - LCL.COA_RIN_EEEEEEEE_New_usr;

 //?Increase RINs sold  by RINS using for this new SEP Trans
 // LCL.COA RIN Gallons Sold = DB1.COA RIN Gallons Sold + LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_RIN_Gallons_Sold = DB1.COA_RIN_Gallons_Sold + LCL.COA_RIN_EEEEEEEE_New_usr;

 EXECUTE FUNCTION(chg RIN Crt SEL Trans CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1971215;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(DB1.COA_RIN_Volume_in_Gallons);
 PARAMETER(DB1.COA_RIN_SoldFull_Splt_Sts);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(DB1.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 //?Create SEP/SEL RIN Transaction with volume to use and rins @ 2.5
 EXECUTE FUNCTION(Rtv Last Sec f/Btch/SecRT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1963881;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 {
  //?USER: Processing if Data record not found

  // PAR.COA Batch Hdr RIN Seq Sec = CON.*ZERO
  PAR.COA_Batch_Hdr_RIN_Seq_Sec = *ZERO;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // LCL.COA Batch Hdr RIN Seq Sec = LCL.COA Batch Hdr RIN Seq Sec + CON.1
 LCL.COA_Batch_Hdr_RIN_Seq_Sec = LCL.COA_Batch_Hdr_RIN_Seq_Sec + 1;

 //?P00579 RMC 5/18/2010 If RFS2, then set RIN as ready to go to EMTS,
 //?  & dont output par.coa batch rin
 //?RFS2 changes
 CASE;

 // IF PAR.COA BHR RFS Version Nbr is RFS 2
 IF PAR.COA_BHR_RFS_Version_Nbr = '2';

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Not Processed
 LCL.COA_RIN_EMTS_Sts = 0;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 //?RFS2 changes
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Blank
 LCL.COA_RIN_EMTS_Sts = *BLANK;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 ENDIF;

 //?**********************__
 //?Dont output EMTS Batch -- all are fifo now    01/03/12    E1868
 //?  So those will process FIFO in EMTS
 // LCL.COA EMTS Batch Nbr = DB1.COA EMTS Batch Nbr
 LCL.COA_EMTS_Batch_Nbr = DB1.COA_EMTS_Batch_Nbr;

 //?R6965 RMC 8/16/16 new hpb plant
 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('HPBPLT');
 PARAMETER(LCL.Company_Number_041405);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv GEN Dt for org SELRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031994;
 PARAMETER(LCL.Company_Number_041405);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_GEN_EMTS_Date_Sent);
 {
  //?USER: Process Data record

  //?Get GEN date... s/only be 1 order for this ulsd/batch/seq
  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?1/03/2012 -- ALL SELs are to be FIFO NOW in EMTS
 // LCL.COA EMTS Batch Nbr = CON.*ZERO
 LCL.COA_EMTS_Batch_Nbr = *ZERO;

 //?1/04/2012 -- output db1.bhr rin gen year instead of par.bhr rin gen year
 //?E2013 Output actual ship date as rin trans date instead of jobdate
 CASE;

 // IF DB1.Company Number is HPB Biodiesel
 IF DB1.Company_Number = 369;

 // LCL.COA ULSD Facility # = CND.Guymon HP Facility
 LCL.COA_ULSD_Facility_# = '82883';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA ULSD Facility # = CND.St Jo Facility
 LCL.COA_ULSD_Facility_# = '80059';

 ENDIF;

 //?**********************__
 EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.Actual_Ship_Date_Usr);
 PARAMETER(JOB.*Job_time);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_RIN_Type_Flag);
 PARAMETER(PAR.COA_RIN_Customer_PO#);
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_Batch_Number);
 PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_BHR_Loadout_Temp);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.Volume_to_use);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Trans_Reason_Code);
 PARAMETER(PAR.RFS_Fuel_Code);
 PARAMETER(DB1.COA_BHR_RIN_Gen_Year);
 PARAMETER(PAR.COA_BHR_RIN_Price);
 PARAMETER(PAR.COA_BHR_Gallon_Price);
 PARAMETER(DB1.COA_Transaction_Comment);
 PARAMETER(PAR.COA_RIN_Supporting_Text_1);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
 PARAMETER(PAR.COA_RIN_Supporting_Text_2);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
 PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
 PARAMETER(LCL.COA_GEN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_EMTS_PTD_Nbr);
 PARAMETER(LCL.COA_EMTS_Batch_Nbr);
 PARAMETER(LCL.COA_BHR_Unused_Sts_3);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //? Reduce Volume Needed by Volume Used
 // PAR.COA RIN Volume New usr = PAR.COA RIN Volume New usr - LCL.Volume to use
 PAR.COA_RIN_Volume_New_usr = PAR.COA_RIN_Volume_New_usr - LCL.Volume_to_use;

 CASE;

 // IF PAR.COA RIN Volume New usr is eq 0
 IF PAR.COA_RIN_Volume_New_usr = *ZERO;

 QUIT;

 ENDIF;

}


// IF *OTHERWISE
IF *OTHERWISE;

//?Get from order's prod facility first, then from the other facility
EXECUTE FUNCTION(Rtv Gen RIN SEP Trn-CoRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2153629;
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(PAR.COA_RIN_Customer_PO#);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.COA_BHR_Loadout_Temp);
PARAMETER(PAR.COA_ULSD_Facility_#);
PARAMETER(PAR.RFS_Transaction_Type);
PARAMETER(PAR.RFS_Trans_Reason_Code);
PARAMETER(PAR.RFS_Fuel_Code);
PARAMETER(PAR.COA_BHR_RIN_Gen_Year);
PARAMETER(LCL.COA_BHR_RIN_Price);
PARAMETER(LCL.COA_BHR_Gallon_Price);
PARAMETER(PAR.COA_RIN_Supporting_Text_1);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
PARAMETER(PAR.COA_RIN_Supporting_Text_2);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
PARAMETER(PAR.COA_EMTS_PTD_Nbr);
PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
PARAMETER(LCL.COA_RIN_Volume_New_usr);
PARAMETER(PAR.Actual_Ship_Date_Usr);
{
 //?USER: Initialize routine

 //?S12497 RMC 2/28/18 drop shipp co/ulsd co from key, get oldest first
 //?E2079 5/15/12 Use temp passed in when creating new rcd
 //?E0921 8/16/10 Create RIN SEP transactions(s) for a Blender Sel for
 //? whom HPB has been 'upstream delegated' to manage their RINs.
 //?USER: Process Data record

 //?Rounding Rule: When calculating Gallons(Volume), Round up (+.5*1 to round)
 //?               When calculating RINs, dont round
 //?Par.coa rin volume new usr = volume needed
 //?Calc new volume available from (RINs to sell)/ 2.5
 //?  Round any dec place to next whole nmbr - so add .5 then round
 // Comp: vol at 2.5 the rins
 LCL.AMOUNT = DB1.COA_BHR_RINs_to_Sell_Sep / PAR.COA_RIN_Equivalence_Valu#;

 // LCL.Decimal Places    usr = LCL.AMOUNT
 LCL.Decimal_Places_usr = LCL.AMOUNT;

 //?chk decimal places>0
 CASE;

 // IF LCL.Decimal Places    usr is GT .00
 IF LCL.Decimal_Places_usr > .00;

 // LCL.AMOUNT = LCL.AMOUNT + CON..5
 LCL.AMOUNT = LCL.AMOUNT + .5;

 ENDIF;

 // WRK.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
 WRK.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

 CASE;

 // IF WRK.COA Batch RIN Volume GE PAR.COA RIN Volume New usr
 IF WRK.COA_Batch_RIN_Volume >= PAR.COA_RIN_Volume_New_usr;

 // LCL.Volume to use = PAR.COA RIN Volume New usr
 LCL.Volume_to_use = PAR.COA_RIN_Volume_New_usr;

 //?Calc RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = LCL.Volume to use * PAR.COA RIN Equivalence Valu# *
 LCL.COA_RIN_EEEEEEEE_New_usr = LCL.Volume_to_use * PAR.COA_RIN_Equivalence_Valu#;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Volume to use = WRK.COA Batch RIN Volume
 LCL.Volume_to_use = WRK.COA_Batch_RIN_Volume;

 //?Upd RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = DB1.COA BHR RINs to Sell Sep
 LCL.COA_RIN_EEEEEEEE_New_usr = DB1.COA_BHR_RINs_to_Sell_Sep;

 ENDIF;

 //?Reduce Unsassigned RINs to sell by RINS using for this new SEP Trans
 // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep - LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep
 - LCL.COA_RIN_EEEEEEEE_New_usr;

 //?Increase RINs sold  by RINS using for this new SEP Trans
 // LCL.COA RIN Gallons Sold = DB1.COA RIN Gallons Sold + LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_RIN_Gallons_Sold = DB1.COA_RIN_Gallons_Sold + LCL.COA_RIN_EEEEEEEE_New_usr;

 EXECUTE FUNCTION(chg RIN Crt SEL Trans CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1971215;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(DB1.COA_RIN_Volume_in_Gallons);
 PARAMETER(DB1.COA_RIN_SoldFull_Splt_Sts);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(DB1.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 //?Create SEP/SEL RIN Transaction with volume to use and rins @ 2.5
 EXECUTE FUNCTION(Rtv Last Sec f/Btch/SecRT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1963881;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 {
  //?USER: Processing if Data record not found

  // PAR.COA Batch Hdr RIN Seq Sec = CON.*ZERO
  PAR.COA_Batch_Hdr_RIN_Seq_Sec = *ZERO;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // LCL.COA Batch Hdr RIN Seq Sec = LCL.COA Batch Hdr RIN Seq Sec + CON.1
 LCL.COA_Batch_Hdr_RIN_Seq_Sec = LCL.COA_Batch_Hdr_RIN_Seq_Sec + 1;

 //?P00579 RMC 5/18/2010 If RFS2, then set RIN as ready to go to EMTS,
 //?  & dont output par.coa batch rin
 //?RFS2 changes
 CASE;

 // IF PAR.COA BHR RFS Version Nbr is RFS 2
 IF PAR.COA_BHR_RFS_Version_Nbr = '2';

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Not Processed
 LCL.COA_RIN_EMTS_Sts = 0;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 //?RFS2 changes
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Blank
 LCL.COA_RIN_EMTS_Sts = *BLANK;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 ENDIF;

 //?**********************__
 //?Dont output EMTS Batch -- all are fifo now    01/03/12    E1868
 //?  So those will process FIFO in EMTS
 // LCL.COA EMTS Batch Nbr = DB1.COA EMTS Batch Nbr
 LCL.COA_EMTS_Batch_Nbr = DB1.COA_EMTS_Batch_Nbr;

 //?R6965 RMC 8/16/16 new hpb plant
 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('HPBPLT');
 PARAMETER(LCL.Company_Number_041405);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv GEN Dt for org SELRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031994;
 PARAMETER(LCL.Company_Number_041405);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_GEN_EMTS_Date_Sent);
 {
  //?USER: Process Data record

  //?Get GEN date... s/only be 1 order for this ulsd/batch/seq
  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?1/03/2012 -- ALL SELs are to be FIFO NOW in EMTS
 // LCL.COA EMTS Batch Nbr = CON.*ZERO
 LCL.COA_EMTS_Batch_Nbr = *ZERO;

 //?1/04/2012 -- output db1.bhr rin gen year instead of par.bhr rin gen year
 //?E2013 Output actual ship date as rin trans date instead of jobdate
 CASE;

 // IF DB1.Company Number is HPB Biodiesel
 IF DB1.Company_Number = 369;

 // LCL.COA ULSD Facility # = CND.Guymon HP Facility
 LCL.COA_ULSD_Facility_# = '82883';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA ULSD Facility # = CND.St Jo Facility New
 LCL.COA_ULSD_Facility_# = '80441';

 ENDIF;

 //?**********************__
 EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.Actual_Ship_Date_Usr);
 PARAMETER(JOB.*Job_time);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_RIN_Type_Flag);
 PARAMETER(PAR.COA_RIN_Customer_PO#);
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_Batch_Number);
 PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_BHR_Loadout_Temp);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.Volume_to_use);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Trans_Reason_Code);
 PARAMETER(PAR.RFS_Fuel_Code);
 PARAMETER(DB1.COA_BHR_RIN_Gen_Year);
 PARAMETER(PAR.COA_BHR_RIN_Price);
 PARAMETER(PAR.COA_BHR_Gallon_Price);
 PARAMETER(DB1.COA_Transaction_Comment);
 PARAMETER(PAR.COA_RIN_Supporting_Text_1);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
 PARAMETER(PAR.COA_RIN_Supporting_Text_2);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
 PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
 PARAMETER(LCL.COA_GEN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_EMTS_PTD_Nbr);
 PARAMETER(LCL.COA_EMTS_Batch_Nbr);
 PARAMETER(LCL.COA_BHR_Unused_Sts_3);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //? Reduce Volume Needed by Volume Used
 // PAR.COA RIN Volume New usr = PAR.COA RIN Volume New usr - LCL.Volume to use
 PAR.COA_RIN_Volume_New_usr = PAR.COA_RIN_Volume_New_usr - LCL.Volume_to_use;

 CASE;

 // IF PAR.COA RIN Volume New usr is eq 0
 IF PAR.COA_RIN_Volume_New_usr = *ZERO;

 QUIT;

 ENDIF;

}


//?Get from other facility after order's facility is exhausted
CASE;

// IF LCL.COA RIN Volume New usr is GT 00000000
IF LCL.COA_RIN_Volume_New_usr > 0;

//?R8683 RMC 1/13/17 try to get excess rins from both marketing cos.
CASE;

// IF PAR.COA Shipping Company is HPB Biodiesel
IF PAR.COA_Shipping_Company = 369;

EXECUTE FUNCTION(Rtv Gen RIN SEP Trn-CoRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2153629;
PARAMETER(374);
PARAMETER(6412);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(PAR.COA_RIN_Customer_PO#);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.COA_BHR_Loadout_Temp);
PARAMETER('80059');
PARAMETER(PAR.RFS_Transaction_Type);
PARAMETER(PAR.RFS_Trans_Reason_Code);
PARAMETER(PAR.RFS_Fuel_Code);
PARAMETER(PAR.COA_BHR_RIN_Gen_Year);
PARAMETER(LCL.COA_BHR_RIN_Price);
PARAMETER(LCL.COA_BHR_Gallon_Price);
PARAMETER(PAR.COA_RIN_Supporting_Text_1);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
PARAMETER(PAR.COA_RIN_Supporting_Text_2);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
PARAMETER(PAR.COA_EMTS_PTD_Nbr);
PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
PARAMETER(LCL.COA_RIN_Volume_New_usr);
PARAMETER(PAR.Actual_Ship_Date_Usr);
{
 //?USER: Initialize routine

 //?S12497 RMC 2/28/18 drop shipp co/ulsd co from key, get oldest first
 //?E2079 5/15/12 Use temp passed in when creating new rcd
 //?E0921 8/16/10 Create RIN SEP transactions(s) for a Blender Sel for
 //? whom HPB has been 'upstream delegated' to manage their RINs.
 //?USER: Process Data record

 //?Rounding Rule: When calculating Gallons(Volume), Round up (+.5*1 to round)
 //?               When calculating RINs, dont round
 //?Par.coa rin volume new usr = volume needed
 //?Calc new volume available from (RINs to sell)/ 2.5
 //?  Round any dec place to next whole nmbr - so add .5 then round
 // Comp: vol at 2.5 the rins
 LCL.AMOUNT = DB1.COA_BHR_RINs_to_Sell_Sep / PAR.COA_RIN_Equivalence_Valu#;

 // LCL.Decimal Places    usr = LCL.AMOUNT
 LCL.Decimal_Places_usr = LCL.AMOUNT;

 //?chk decimal places>0
 CASE;

 // IF LCL.Decimal Places    usr is GT .00
 IF LCL.Decimal_Places_usr > .00;

 // LCL.AMOUNT = LCL.AMOUNT + CON..5
 LCL.AMOUNT = LCL.AMOUNT + .5;

 ENDIF;

 // WRK.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
 WRK.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

 CASE;

 // IF WRK.COA Batch RIN Volume GE PAR.COA RIN Volume New usr
 IF WRK.COA_Batch_RIN_Volume >= PAR.COA_RIN_Volume_New_usr;

 // LCL.Volume to use = PAR.COA RIN Volume New usr
 LCL.Volume_to_use = PAR.COA_RIN_Volume_New_usr;

 //?Calc RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = LCL.Volume to use * PAR.COA RIN Equivalence Valu# *
 LCL.COA_RIN_EEEEEEEE_New_usr = LCL.Volume_to_use * PAR.COA_RIN_Equivalence_Valu#;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Volume to use = WRK.COA Batch RIN Volume
 LCL.Volume_to_use = WRK.COA_Batch_RIN_Volume;

 //?Upd RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = DB1.COA BHR RINs to Sell Sep
 LCL.COA_RIN_EEEEEEEE_New_usr = DB1.COA_BHR_RINs_to_Sell_Sep;

 ENDIF;

 //?Reduce Unsassigned RINs to sell by RINS using for this new SEP Trans
 // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep - LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep
 - LCL.COA_RIN_EEEEEEEE_New_usr;

 //?Increase RINs sold  by RINS using for this new SEP Trans
 // LCL.COA RIN Gallons Sold = DB1.COA RIN Gallons Sold + LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_RIN_Gallons_Sold = DB1.COA_RIN_Gallons_Sold + LCL.COA_RIN_EEEEEEEE_New_usr;

 EXECUTE FUNCTION(chg RIN Crt SEL Trans CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1971215;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(DB1.COA_RIN_Volume_in_Gallons);
 PARAMETER(DB1.COA_RIN_SoldFull_Splt_Sts);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(DB1.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 //?Create SEP/SEL RIN Transaction with volume to use and rins @ 2.5
 EXECUTE FUNCTION(Rtv Last Sec f/Btch/SecRT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1963881;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 {
  //?USER: Processing if Data record not found

  // PAR.COA Batch Hdr RIN Seq Sec = CON.*ZERO
  PAR.COA_Batch_Hdr_RIN_Seq_Sec = *ZERO;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // LCL.COA Batch Hdr RIN Seq Sec = LCL.COA Batch Hdr RIN Seq Sec + CON.1
 LCL.COA_Batch_Hdr_RIN_Seq_Sec = LCL.COA_Batch_Hdr_RIN_Seq_Sec + 1;

 //?P00579 RMC 5/18/2010 If RFS2, then set RIN as ready to go to EMTS,
 //?  & dont output par.coa batch rin
 //?RFS2 changes
 CASE;

 // IF PAR.COA BHR RFS Version Nbr is RFS 2
 IF PAR.COA_BHR_RFS_Version_Nbr = '2';

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Not Processed
 LCL.COA_RIN_EMTS_Sts = 0;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 //?RFS2 changes
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Blank
 LCL.COA_RIN_EMTS_Sts = *BLANK;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 ENDIF;

 //?**********************__
 //?Dont output EMTS Batch -- all are fifo now    01/03/12    E1868
 //?  So those will process FIFO in EMTS
 // LCL.COA EMTS Batch Nbr = DB1.COA EMTS Batch Nbr
 LCL.COA_EMTS_Batch_Nbr = DB1.COA_EMTS_Batch_Nbr;

 //?R6965 RMC 8/16/16 new hpb plant
 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('HPBPLT');
 PARAMETER(LCL.Company_Number_041405);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv GEN Dt for org SELRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031994;
 PARAMETER(LCL.Company_Number_041405);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_GEN_EMTS_Date_Sent);
 {
  //?USER: Process Data record

  //?Get GEN date... s/only be 1 order for this ulsd/batch/seq
  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?1/03/2012 -- ALL SELs are to be FIFO NOW in EMTS
 // LCL.COA EMTS Batch Nbr = CON.*ZERO
 LCL.COA_EMTS_Batch_Nbr = *ZERO;

 //?1/04/2012 -- output db1.bhr rin gen year instead of par.bhr rin gen year
 //?E2013 Output actual ship date as rin trans date instead of jobdate
 CASE;

 // IF DB1.Company Number is HPB Biodiesel
 IF DB1.Company_Number = 369;

 // LCL.COA ULSD Facility # = CND.Guymon HP Facility
 LCL.COA_ULSD_Facility_# = '82883';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA ULSD Facility # = CND.St Jo Facility New
 LCL.COA_ULSD_Facility_# = '80441';

 ENDIF;

 //?**********************__
 EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.Actual_Ship_Date_Usr);
 PARAMETER(JOB.*Job_time);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_RIN_Type_Flag);
 PARAMETER(PAR.COA_RIN_Customer_PO#);
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_Batch_Number);
 PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_BHR_Loadout_Temp);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.Volume_to_use);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Trans_Reason_Code);
 PARAMETER(PAR.RFS_Fuel_Code);
 PARAMETER(DB1.COA_BHR_RIN_Gen_Year);
 PARAMETER(PAR.COA_BHR_RIN_Price);
 PARAMETER(PAR.COA_BHR_Gallon_Price);
 PARAMETER(DB1.COA_Transaction_Comment);
 PARAMETER(PAR.COA_RIN_Supporting_Text_1);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
 PARAMETER(PAR.COA_RIN_Supporting_Text_2);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
 PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
 PARAMETER(LCL.COA_GEN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_EMTS_PTD_Nbr);
 PARAMETER(LCL.COA_EMTS_Batch_Nbr);
 PARAMETER(LCL.COA_BHR_Unused_Sts_3);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //? Reduce Volume Needed by Volume Used
 // PAR.COA RIN Volume New usr = PAR.COA RIN Volume New usr - LCL.Volume to use
 PAR.COA_RIN_Volume_New_usr = PAR.COA_RIN_Volume_New_usr - LCL.Volume_to_use;

 CASE;

 // IF PAR.COA RIN Volume New usr is eq 0
 IF PAR.COA_RIN_Volume_New_usr = *ZERO;

 QUIT;

 ENDIF;

}


CASE;

// IF LCL.COA RIN Volume New usr is GT 00000000
IF LCL.COA_RIN_Volume_New_usr > 0;

//?8/6/19  RMC chg to 4846 and new facility
EXECUTE FUNCTION(Rtv Gen RIN SEP Trn-CoRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2153629;
PARAMETER(374);
PARAMETER(4846);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(PAR.COA_RIN_Customer_PO#);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.COA_BHR_Loadout_Temp);
PARAMETER('80441');
PARAMETER(PAR.RFS_Transaction_Type);
PARAMETER(PAR.RFS_Trans_Reason_Code);
PARAMETER(PAR.RFS_Fuel_Code);
PARAMETER(PAR.COA_BHR_RIN_Gen_Year);
PARAMETER(LCL.COA_BHR_RIN_Price);
PARAMETER(LCL.COA_BHR_Gallon_Price);
PARAMETER(PAR.COA_RIN_Supporting_Text_1);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
PARAMETER(PAR.COA_RIN_Supporting_Text_2);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
PARAMETER(PAR.COA_EMTS_PTD_Nbr);
PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
PARAMETER(LCL.COA_RIN_Volume_New_usr);
PARAMETER(PAR.Actual_Ship_Date_Usr);
{
 //?USER: Initialize routine

 //?S12497 RMC 2/28/18 drop shipp co/ulsd co from key, get oldest first
 //?E2079 5/15/12 Use temp passed in when creating new rcd
 //?E0921 8/16/10 Create RIN SEP transactions(s) for a Blender Sel for
 //? whom HPB has been 'upstream delegated' to manage their RINs.
 //?USER: Process Data record

 //?Rounding Rule: When calculating Gallons(Volume), Round up (+.5*1 to round)
 //?               When calculating RINs, dont round
 //?Par.coa rin volume new usr = volume needed
 //?Calc new volume available from (RINs to sell)/ 2.5
 //?  Round any dec place to next whole nmbr - so add .5 then round
 // Comp: vol at 2.5 the rins
 LCL.AMOUNT = DB1.COA_BHR_RINs_to_Sell_Sep / PAR.COA_RIN_Equivalence_Valu#;

 // LCL.Decimal Places    usr = LCL.AMOUNT
 LCL.Decimal_Places_usr = LCL.AMOUNT;

 //?chk decimal places>0
 CASE;

 // IF LCL.Decimal Places    usr is GT .00
 IF LCL.Decimal_Places_usr > .00;

 // LCL.AMOUNT = LCL.AMOUNT + CON..5
 LCL.AMOUNT = LCL.AMOUNT + .5;

 ENDIF;

 // WRK.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
 WRK.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

 CASE;

 // IF WRK.COA Batch RIN Volume GE PAR.COA RIN Volume New usr
 IF WRK.COA_Batch_RIN_Volume >= PAR.COA_RIN_Volume_New_usr;

 // LCL.Volume to use = PAR.COA RIN Volume New usr
 LCL.Volume_to_use = PAR.COA_RIN_Volume_New_usr;

 //?Calc RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = LCL.Volume to use * PAR.COA RIN Equivalence Valu# *
 LCL.COA_RIN_EEEEEEEE_New_usr = LCL.Volume_to_use * PAR.COA_RIN_Equivalence_Valu#;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Volume to use = WRK.COA Batch RIN Volume
 LCL.Volume_to_use = WRK.COA_Batch_RIN_Volume;

 //?Upd RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = DB1.COA BHR RINs to Sell Sep
 LCL.COA_RIN_EEEEEEEE_New_usr = DB1.COA_BHR_RINs_to_Sell_Sep;

 ENDIF;

 //?Reduce Unsassigned RINs to sell by RINS using for this new SEP Trans
 // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep - LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep
 - LCL.COA_RIN_EEEEEEEE_New_usr;

 //?Increase RINs sold  by RINS using for this new SEP Trans
 // LCL.COA RIN Gallons Sold = DB1.COA RIN Gallons Sold + LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_RIN_Gallons_Sold = DB1.COA_RIN_Gallons_Sold + LCL.COA_RIN_EEEEEEEE_New_usr;

 EXECUTE FUNCTION(chg RIN Crt SEL Trans CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1971215;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(DB1.COA_RIN_Volume_in_Gallons);
 PARAMETER(DB1.COA_RIN_SoldFull_Splt_Sts);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(DB1.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 //?Create SEP/SEL RIN Transaction with volume to use and rins @ 2.5
 EXECUTE FUNCTION(Rtv Last Sec f/Btch/SecRT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1963881;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 {
  //?USER: Processing if Data record not found

  // PAR.COA Batch Hdr RIN Seq Sec = CON.*ZERO
  PAR.COA_Batch_Hdr_RIN_Seq_Sec = *ZERO;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // LCL.COA Batch Hdr RIN Seq Sec = LCL.COA Batch Hdr RIN Seq Sec + CON.1
 LCL.COA_Batch_Hdr_RIN_Seq_Sec = LCL.COA_Batch_Hdr_RIN_Seq_Sec + 1;

 //?P00579 RMC 5/18/2010 If RFS2, then set RIN as ready to go to EMTS,
 //?  & dont output par.coa batch rin
 //?RFS2 changes
 CASE;

 // IF PAR.COA BHR RFS Version Nbr is RFS 2
 IF PAR.COA_BHR_RFS_Version_Nbr = '2';

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Not Processed
 LCL.COA_RIN_EMTS_Sts = 0;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 //?RFS2 changes
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Blank
 LCL.COA_RIN_EMTS_Sts = *BLANK;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 ENDIF;

 //?**********************__
 //?Dont output EMTS Batch -- all are fifo now    01/03/12    E1868
 //?  So those will process FIFO in EMTS
 // LCL.COA EMTS Batch Nbr = DB1.COA EMTS Batch Nbr
 LCL.COA_EMTS_Batch_Nbr = DB1.COA_EMTS_Batch_Nbr;

 //?R6965 RMC 8/16/16 new hpb plant
 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('HPBPLT');
 PARAMETER(LCL.Company_Number_041405);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv GEN Dt for org SELRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031994;
 PARAMETER(LCL.Company_Number_041405);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_GEN_EMTS_Date_Sent);
 {
  //?USER: Process Data record

  //?Get GEN date... s/only be 1 order for this ulsd/batch/seq
  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?1/03/2012 -- ALL SELs are to be FIFO NOW in EMTS
 // LCL.COA EMTS Batch Nbr = CON.*ZERO
 LCL.COA_EMTS_Batch_Nbr = *ZERO;

 //?1/04/2012 -- output db1.bhr rin gen year instead of par.bhr rin gen year
 //?E2013 Output actual ship date as rin trans date instead of jobdate
 CASE;

 // IF DB1.Company Number is HPB Biodiesel
 IF DB1.Company_Number = 369;

 // LCL.COA ULSD Facility # = CND.Guymon HP Facility
 LCL.COA_ULSD_Facility_# = '82883';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA ULSD Facility # = CND.St Jo Facility New
 LCL.COA_ULSD_Facility_# = '80441';

 ENDIF;

 //?**********************__
 EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.Actual_Ship_Date_Usr);
 PARAMETER(JOB.*Job_time);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_RIN_Type_Flag);
 PARAMETER(PAR.COA_RIN_Customer_PO#);
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_Batch_Number);
 PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_BHR_Loadout_Temp);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.Volume_to_use);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Trans_Reason_Code);
 PARAMETER(PAR.RFS_Fuel_Code);
 PARAMETER(DB1.COA_BHR_RIN_Gen_Year);
 PARAMETER(PAR.COA_BHR_RIN_Price);
 PARAMETER(PAR.COA_BHR_Gallon_Price);
 PARAMETER(DB1.COA_Transaction_Comment);
 PARAMETER(PAR.COA_RIN_Supporting_Text_1);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
 PARAMETER(PAR.COA_RIN_Supporting_Text_2);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
 PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
 PARAMETER(LCL.COA_GEN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_EMTS_PTD_Nbr);
 PARAMETER(LCL.COA_EMTS_Batch_Nbr);
 PARAMETER(LCL.COA_BHR_Unused_Sts_3);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //? Reduce Volume Needed by Volume Used
 // PAR.COA RIN Volume New usr = PAR.COA RIN Volume New usr - LCL.Volume to use
 PAR.COA_RIN_Volume_New_usr = PAR.COA_RIN_Volume_New_usr - LCL.Volume_to_use;

 CASE;

 // IF PAR.COA RIN Volume New usr is eq 0
 IF PAR.COA_RIN_Volume_New_usr = *ZERO;

 QUIT;

 ENDIF;

}


ENDIF;

// IF PAR.COA Shipping Company is St Joseph HPB Marketing
IF PAR.COA_Shipping_Company = 374;

EXECUTE FUNCTION(Rtv Gen RIN SEP Trn-CoRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2153629;
PARAMETER(369);
PARAMETER(4846);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.COA_RIN_Type_Flag);
PARAMETER(PAR.COA_RIN_Customer_PO#);
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.RFS_Report_Year);
PARAMETER(PAR.COA_BHR_Loadout_Temp);
PARAMETER('82883');
PARAMETER(PAR.RFS_Transaction_Type);
PARAMETER(PAR.RFS_Trans_Reason_Code);
PARAMETER(PAR.RFS_Fuel_Code);
PARAMETER(PAR.COA_BHR_RIN_Gen_Year);
PARAMETER(LCL.COA_BHR_RIN_Price);
PARAMETER(LCL.COA_BHR_Gallon_Price);
PARAMETER(PAR.COA_RIN_Supporting_Text_1);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
PARAMETER(PAR.COA_RIN_Supporting_Text_2);
PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
PARAMETER(PAR.COA_EMTS_PTD_Nbr);
PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
PARAMETER(LCL.COA_RIN_Volume_New_usr);
PARAMETER(PAR.Actual_Ship_Date_Usr);
{
 //?USER: Initialize routine

 //?S12497 RMC 2/28/18 drop shipp co/ulsd co from key, get oldest first
 //?E2079 5/15/12 Use temp passed in when creating new rcd
 //?E0921 8/16/10 Create RIN SEP transactions(s) for a Blender Sel for
 //? whom HPB has been 'upstream delegated' to manage their RINs.
 //?USER: Process Data record

 //?Rounding Rule: When calculating Gallons(Volume), Round up (+.5*1 to round)
 //?               When calculating RINs, dont round
 //?Par.coa rin volume new usr = volume needed
 //?Calc new volume available from (RINs to sell)/ 2.5
 //?  Round any dec place to next whole nmbr - so add .5 then round
 // Comp: vol at 2.5 the rins
 LCL.AMOUNT = DB1.COA_BHR_RINs_to_Sell_Sep / PAR.COA_RIN_Equivalence_Valu#;

 // LCL.Decimal Places    usr = LCL.AMOUNT
 LCL.Decimal_Places_usr = LCL.AMOUNT;

 //?chk decimal places>0
 CASE;

 // IF LCL.Decimal Places    usr is GT .00
 IF LCL.Decimal_Places_usr > .00;

 // LCL.AMOUNT = LCL.AMOUNT + CON..5
 LCL.AMOUNT = LCL.AMOUNT + .5;

 ENDIF;

 // WRK.COA Batch RIN Volume = LCL.AMOUNT * CON.1 *Rounded
 WRK.COA_Batch_RIN_Volume = LCL.AMOUNT * 1 'H';

 CASE;

 // IF WRK.COA Batch RIN Volume GE PAR.COA RIN Volume New usr
 IF WRK.COA_Batch_RIN_Volume >= PAR.COA_RIN_Volume_New_usr;

 // LCL.Volume to use = PAR.COA RIN Volume New usr
 LCL.Volume_to_use = PAR.COA_RIN_Volume_New_usr;

 //?Calc RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = LCL.Volume to use * PAR.COA RIN Equivalence Valu# *
 LCL.COA_RIN_EEEEEEEE_New_usr = LCL.Volume_to_use * PAR.COA_RIN_Equivalence_Valu#;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Volume to use = WRK.COA Batch RIN Volume
 LCL.Volume_to_use = WRK.COA_Batch_RIN_Volume;

 //?Upd RINs to use
 // LCL.COA RIN EEEEEEEE  New usr = DB1.COA BHR RINs to Sell Sep
 LCL.COA_RIN_EEEEEEEE_New_usr = DB1.COA_BHR_RINs_to_Sell_Sep;

 ENDIF;

 //?Reduce Unsassigned RINs to sell by RINS using for this new SEP Trans
 // LCL.COA BHR RINs to Sell Sep = DB1.COA BHR RINs to Sell Sep - LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_BHR_RINs_to_Sell_Sep = DB1.COA_BHR_RINs_to_Sell_Sep
 - LCL.COA_RIN_EEEEEEEE_New_usr;

 //?Increase RINs sold  by RINS using for this new SEP Trans
 // LCL.COA RIN Gallons Sold = DB1.COA RIN Gallons Sold + LCL.COA RIN EEEEEEEE  New usr
 LCL.COA_RIN_Gallons_Sold = DB1.COA_RIN_Gallons_Sold + LCL.COA_RIN_EEEEEEEE_New_usr;

 EXECUTE FUNCTION(chg RIN Crt SEL Trans CH) TYPE(CHGOBJ) FILE(PMDACPP)           AC1971215;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(DB1.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(DB1.COA_RIN_Volume_in_Gallons);
 PARAMETER(DB1.COA_RIN_SoldFull_Splt_Sts);
 PARAMETER(LCL.COA_RIN_Gallons_Sold);
 PARAMETER(DB1.COA_BHR_Net_Galls_to_Sell);
 PARAMETER(LCL.COA_BHR_RINs_to_Sell_Sep);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 //?Create SEP/SEL RIN Transaction with volume to use and rins @ 2.5
 EXECUTE FUNCTION(Rtv Last Sec f/Btch/SecRT) TYPE(RTVOBJ) FILE(PMDACPP)          AC1963881;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 {
  //?USER: Processing if Data record not found

  // PAR.COA Batch Hdr RIN Seq Sec = CON.*ZERO
  PAR.COA_Batch_Hdr_RIN_Seq_Sec = *ZERO;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 // LCL.COA Batch Hdr RIN Seq Sec = LCL.COA Batch Hdr RIN Seq Sec + CON.1
 LCL.COA_Batch_Hdr_RIN_Seq_Sec = LCL.COA_Batch_Hdr_RIN_Seq_Sec + 1;

 //?P00579 RMC 5/18/2010 If RFS2, then set RIN as ready to go to EMTS,
 //?  & dont output par.coa batch rin
 //?RFS2 changes
 CASE;

 // IF PAR.COA BHR RFS Version Nbr is RFS 2
 IF PAR.COA_BHR_RFS_Version_Nbr = '2';

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Not Processed
 LCL.COA_RIN_EMTS_Sts = 0;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 //?RFS2 changes
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA GEN EMTS Sts = CND.Blank
 LCL.COA_GEN_EMTS_Sts = *BLANK;

 // LCL.COA RIN EMTS Sts = CND.Blank
 LCL.COA_RIN_EMTS_Sts = *BLANK;

 // LCL.COA Batch RIN = CON.*BLANK
 LCL.COA_Batch_RIN = *BLANK;

 ENDIF;

 //?**********************__
 //?Dont output EMTS Batch -- all are fifo now    01/03/12    E1868
 //?  So those will process FIFO in EMTS
 // LCL.COA EMTS Batch Nbr = DB1.COA EMTS Batch Nbr
 LCL.COA_EMTS_Batch_Nbr = DB1.COA_EMTS_Batch_Nbr;

 //?R6965 RMC 8/16/16 new hpb plant
 EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
 PARAMETER(DB1.Company_Number);
 PARAMETER('HPBPLT');
 PARAMETER(LCL.Company_Number_041405);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv GEN Dt for org SELRT) TYPE(RTVOBJ) FILE(PMDACPP)           AC2031994;
 PARAMETER(LCL.Company_Number_041405);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.COA_BHR_RIN_Gen_Year);
 PARAMETER(LCL.COA_GEN_EMTS_Date_Sent);
 {
  //?USER: Process Data record

  //?Get GEN date... s/only be 1 order for this ulsd/batch/seq
  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?1/03/2012 -- ALL SELs are to be FIFO NOW in EMTS
 // LCL.COA EMTS Batch Nbr = CON.*ZERO
 LCL.COA_EMTS_Batch_Nbr = *ZERO;

 //?1/04/2012 -- output db1.bhr rin gen year instead of par.bhr rin gen year
 //?E2013 Output actual ship date as rin trans date instead of jobdate
 CASE;

 // IF DB1.Company Number is HPB Biodiesel
 IF DB1.Company_Number = 369;

 // LCL.COA ULSD Facility # = CND.Guymon HP Facility
 LCL.COA_ULSD_Facility_# = '82883';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.COA ULSD Facility # = CND.St Jo Facility New
 LCL.COA_ULSD_Facility_# = '80441';

 ENDIF;

 //?**********************__
 EXECUTE FUNCTION(Crt COA Batch Hdr RIN CR) TYPE(CRTOBJ) FILE(PMDACPP)           AC1858626;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.COA_ULSD_Company_#);
 PARAMETER(DB1.COA_Batch_Number);
 PARAMETER(DB1.COA_Batch_Header_RIN_Seq);
 PARAMETER(LCL.COA_Batch_Hdr_RIN_Seq_Sec);
 PARAMETER(LCL.COA_Batch_Header_RIN);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.Actual_Ship_Date_Usr);
 PARAMETER(JOB.*Job_time);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Nm);
 PARAMETER(PAR.COA_RIN_Trans_Partner_Id);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.Order_Sequence_Number);
 PARAMETER(PAR.Order_Secondary_Line_Seq);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_RIN_Type_Flag);
 PARAMETER(PAR.COA_RIN_Customer_PO#);
 PARAMETER(PAR.COA_Shipping_Company);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_Batch_Number);
 PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(PAR.RFS_Report_Year);
 PARAMETER(*BLANK);
 PARAMETER(WRK.Blank_for_4_USR);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(PAR.COA_BHR_Loadout_Temp);
 PARAMETER(LCL.COA_ULSD_Facility_#);
 PARAMETER(LCL.Volume_to_use);
 PARAMETER(LCL.COA_RIN_EEEEEEEE_New_usr);
 PARAMETER(PAR.RFS_Transaction_Type);
 PARAMETER(PAR.RFS_Trans_Reason_Code);
 PARAMETER(PAR.RFS_Fuel_Code);
 PARAMETER(DB1.COA_BHR_RIN_Gen_Year);
 PARAMETER(PAR.COA_BHR_RIN_Price);
 PARAMETER(PAR.COA_BHR_Gallon_Price);
 PARAMETER(DB1.COA_Transaction_Comment);
 PARAMETER(PAR.COA_RIN_Supporting_Text_1);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_1);
 PARAMETER(PAR.COA_RIN_Supporting_Text_2);
 PARAMETER(PAR.COA_RIN_Supporting_Nbr_2);
 PARAMETER(PAR.COA_BHR_RFS_Version_Nbr);
 PARAMETER(LCL.COA_GEN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.COA_RIN_EMTS_Sts);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_EMTS_PTD_Nbr);
 PARAMETER(LCL.COA_EMTS_Batch_Nbr);
 PARAMETER(LCL.COA_BHR_Unused_Sts_3);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(PAR.COA_RIN_Equivalence_Valu#);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

 }

 //? Reduce Volume Needed by Volume Used
 // PAR.COA RIN Volume New usr = PAR.COA RIN Volume New usr - LCL.Volume to use
 PAR.COA_RIN_Volume_New_usr = PAR.COA_RIN_Volume_New_usr - LCL.Volume_to_use;

 CASE;

 // IF PAR.COA RIN Volume New usr is eq 0
 IF PAR.COA_RIN_Volume_New_usr = *ZERO;

 QUIT;

 ENDIF;

}


ENDIF;

ENDIF;

ENDIF;

//?If there werent enough unassigned rins to sell, increase the volume on 1st
CASE;

// IF LCL.COA RIN Volume New usr is GT 00000000
IF LCL.COA_RIN_Volume_New_usr > 0;

//?In this case:  the 1st SEP volume wont = the rin qty/2.5
//?C01641 RMC 7/13/11 was using the wrong field
//?C01751 RMC 9/20/11 was using the wrong company when upd leftover vol
// LCL.COA Batch RIN Volume = LCL.COA Batch RIN Volume + LCL.COA RIN Volume New usr
LCL.COA_Batch_RIN_Volume = LCL.COA_Batch_RIN_Volume + LCL.COA_RIN_Volume_New_usr;

EXECUTE FUNCTION(Chg Btch Rin Vol f/sep CH) TYPE(CHGOBJ) FILE(PMDACPP)          AC2002736;
PARAMETER(PAR.COA_Shipping_Company);
PARAMETER(PAR.COA_ULSD_Company_#);
PARAMETER(PAR.COA_Batch_Number);
PARAMETER(PAR.COA_Batch_Header_RIN_Seq);
PARAMETER(PAR.COA_Batch_Hdr_RIN_Seq_Sec);
PARAMETER(LCL.COA_Batch_RIN_Volume);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  // PAR.Change Date = JOB.*Job date
  PAR.Change_Date = JOB.*Job_date;

  // PAR.Change Time = JOB.*Job time
  PAR.Change_Time = JOB.*Job_time;

  // PAR.Change User = JOB.*USER
  PAR.Change_User = JOB.*USER;

  // PAR.Change Program = JOB.*PROGRAM
  PAR.Change_Program = JOB.*PROGRAM;

 }

}


ENDIF;

ENDIF;

