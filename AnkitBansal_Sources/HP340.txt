      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: Nursery Groups--Sire Line Total
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/12/02
      *
      * FUNCTION:    This function writes 1 record for each sire line associated with the
      *              group.
      *
      *              It calculates the % of total head RECEIVED into the group that is
      *              represented by each sire line.  An 'unknown' record is updated/written
      *              for all unaccounted for head.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/27/05  LeAnne Fedor
      *           Recompile only. Two new fields (sire line company, prime line)
      *           added to Sire Line file.
      *
      * 10/18/10  LeAnne Ramsey  (E1079)
      *           Recompile only. Sire Line Company is now 2-characters instead
      *           of one in file HSP098-Sire Lines.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsp098    if   e           k disk
      *  Sire lines
      *
      *
     Fhsp328    if   e           k disk
      *  Workfile: Nursery groups--sire lines
      *
      *
     Fhsp340    uf a e           k disk
      *  Workfile: Nursery groups--sire line total
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrsicd         s              5    dim(50)
     D arrrchd         s              5s 0 dim(50)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svhgsn          s                   like(w4hgsn)
     D svhgcd          s                   like(w4hgcd)
     D svfscd          s                   like(w4fscd)
     D svcell          s                   like(w4cell)
      *
      *
      * Workfields
      *
     D wksicd          s                   like(w4sicd) inz('UNK??')
     D wkhd            s                   like(w4rchd)
     D wkrchd          s                   like(w4rchd)
     D wkarrhd         s                   like(w4rchd)
     D wkpr            s             15  8
     D wkrempr         s              5  2
      *
     D wksysdt         s              8  0
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
      *
      *
      *
      * Define parms for the generic movement program
      *
     D zzcymd          s              8  0
      *
     D @@nu50          s              5  0
     D gpihd           s                   like(@@nu50)
     D pinhd           s                   like(@@nu50)
     D tinhd           s                   like(@@nu50)
     D tisphd          s                   like(@@nu50)
     D tidphd          s                   like(@@nu50)
     D pouhd           s                   like(@@nu50)
     D touhd           s                   like(@@nu50)
     D tosphd          s                   like(@@nu50)
     D todphd          s                   like(@@nu50)
     D rinhd           s                   like(@@nu50)
     D rouhd           s                   like(@@nu50)
     D qinhd           s                   like(@@nu50)
     D qouhd           s                   like(@@nu50)
     D morhd           s                   like(@@nu50)
     D inahd           s                   like(@@nu50)
      *
     D @@nu92          s              9  2
     D pinlb           s                   like(@@nu92)
     D tinlb           s                   like(@@nu92)
     D tisplb          s                   like(@@nu92)
     D tidplb          s                   like(@@nu92)
     D poulb           s                   like(@@nu92)
     D toulb           s                   like(@@nu92)
     D tosplb          s                   like(@@nu92)
     D todplb          s                   like(@@nu92)
     D rinlb           s                   like(@@nu92)
     D roulb           s                   like(@@nu92)
     D qinlb           s                   like(@@nu92)
     D qoulb           s                   like(@@nu92)
     D morlb           s                   like(@@nu92)
      *
      *
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process each destination group in the Workfile: Nursery Groups-BGF Sources
      *
     C     *loval        setll     hsp328
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsp328                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
      * First time
     C                   if        first = yes
     C                   exsr      $clear
     C                   move      no            first
     C                   endif
      *
      * Break on destination group
      *
     C                   if        w4hgsn <> svhgsn
     C                   exsr      $break
     C                   endif
      *
      * Detail processing when you have 'received' head
      *  1) accumulate head received into array
      *
     C                   if        w4rchd <> 0
     C                   exsr      $detail
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * Last record processing for last nursery group
      *
     C                   if        first = no
     C                   exsr      $break
     C                   endif
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------
      * Detail processing
      *---------------------------------------------------------------------
      *
     C     $detail       begsr
      *
     C                   z-add     1             x
     C     w4sicd        lookup    arrsicd(x)                             92
     C                   if        *in92 = *on                                  If exists
     C                   add       w4rchd        arrrchd(x)
     C                   else
     C                   add       1             y
     C                   move      w4sicd        arrsicd(y)
     C                   z-add     w4rchd        arrrchd(y)
     C                   endif                                                  If exists
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Control break on group
      *----------------------------------------------------------------
      *
     C     $break        begsr
      *
      * Find the total head in the head array for the group
      *
     C                   xfoot     arrrchd       wkarrhd
      *
      * Find the total head 'received' into the group as of the system date.
      *
     C                   exsr      $rchd
      *
      *
      * Start the percent out out 100%.
      *
     C                   z-add     100           wkrempr
      *
      * Write a record for each element in the origin BGF farm array.
      *
     C                   do        y             x
     C                   move      arrsicd(x)    w0sicd
     C                   z-add     arrrchd(x)    w0rchd
      *
      * Calculate percent of total
      *
     C                   if        wkrchd <> 0
     C     w0rchd        div       wkrchd        wkpr
     C     wkpr          mult(h)   100           w0hdpr
     C                   sub       w0hdpr        wkrempr
     C                   else
     C                   z-add     0             w0hdpr
     C                   endif
      *
      * Retrieve the Cognos reporting group associated with the Sire Line
      *
     C     w0sicd        chain     hsp098                             92
     C                   if        *in92 = *off
     C                   eval      w0gg0 = sigg0
     C                   else
     C                   move      'UNK??'       w0gg0
     C                   endif
      *
     C                   exsr      $wrt340
     C                   enddo
      *
      * Now, you have finished processing the arrays, if you have any 'remaining'
      * percent, write an 'unknown' record---or update one if it already exists.
      *
     C                   if        wkrempr <> 0                                 If some left
     C     wkrchd        sub       wkarrhd       wkhd
      *
      * If remaining head is zero, then update the last record written with
      *                            the remaining percent.
      * If remaining head is not zero, look for an already existing 'UNK??'
      *                            record to update.
      *
     C                   if        wkhd = 0
     C                   move      w0sicd        wksicd
     C                   else
     C                   move      'UNK??'       wksicd
     C                   endif
      *
     C     key01         chain     hsp340                             92
     C                   if        *in92 = *off
     C     w0rchd        add       wkhd          w0rchd
     C     w0hdpr        add       wkrempr       w0hdpr
     C                   update    w0rec
     C                   else
      *
      * Write an 'unknown' record
      *
     C                   move      wksicd        w0sicd
     C                   move      wksicd        w0gg0
     C                   z-add     wkhd          w0rchd
     C                   z-add     wkrempr       w0hdpr
     C                   exsr      $wrt340
     C                   endif
      *
     C                   endif                                                  If some left
      *
      * Clear/initialize for next group
      *
     C                   exsr      $clear
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------
      * Retrieve 'total head received' into the group as of the system date
      *---------------------------------------------------------------------
      *
     C     $rchd         begsr
      *
     C                   call      'HPMOVE'      plist01
     C     qinhd         add       rinhd         wkrchd
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Write a workfile record
      *----------------------------------------------------------------
      *
     C     $wrt340       begsr
      *
     C                   z-add     svfscd        w0fscd
     C                   z-add     svcell        w0cell
     C                   z-add     svhgsn        w0hgsn
     C                   move      svhgcd        w0hgcd
      *
     C                   write     w0rec
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear routine
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
      * Clear arrays and set array indexes back to zero
      *
     C                   move      *blank        arrsicd
     C                   z-add     0             arrrchd
     C                   z-add     0             x
     C                   z-add     0             y
      *
      *
      * Set save fields
     C                   z-add     w4hgsn        svhgsn
     C                   move      w4hgcd        svhgcd
     C                   z-add     w4fscd        svfscd
     C                   z-add     w4cell        svcell
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     plist01       plist
     C                   parm                    svhgsn
     C                   parm                    wksysdt
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    svhgsn
     C                   kfld                    wksicd
      *
      *
      * Put system date into work field.
      *
     C     *mdy          movel     udate         wkcymdiso
     C                   movel     wkcymdiso     wksysdt
      *
     C                   endsr
      /EJECT
