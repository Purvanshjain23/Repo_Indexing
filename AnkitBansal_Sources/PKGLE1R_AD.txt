// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKGLE1R
// ?Date: 14.08.2025 Time: 02:49:21
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E4151 JJH 07/10/15 - When this "Edit Pen" program is called from
//?  the WW Pens screen, the 2nd time you call the Edit Pen screen
//?  the user receivies an RPG1215 error.
//?  To correct this problem the Closedown Program option was changed
//?  from N to Y.
//?E4154 JJH 07/27/15 - Pen Revisions
//?- Change function from EXCINTFUN to EXCEXTFUN
//?  From: Exc Chg Ttt Dtl Pen   IF - Tattoo Detail
//?  To  : Exc Chg Ttt Dtl Pen   XF - Tattoo Detail
//?- New logic to determine if Pen Max Capacity Exceeded
ENDDO;

//?USER: Initialize detail screen (existing record)

// DTL.Pen Type Description Usr = Condition name of DB1.Pen Type
DTL.Pen_Type_Description_Usr = RTVCND(DB1.Pen_Type);

//?USER: Validate detail screen relations

//?If Transfer to Pen nbr. is entered
CASE;

// IF DTL.Pen Usr is Pen Number not Empty
IF DTL.Pen_Usr > *BLANK;

//?Transfer from pen must have an Open status.
CASE;

// IF DTL.Pen Sts is Open
IF DTL.Pen_Sts = 'O';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Pen &1 must have an Open status for transfer.'
ERROR(PRK0209);
MSGPARM(DTL.Pen_Number);

QUIT;

ENDIF;

//?Validate Transfer to Pen nbr. and its status
EXECUTE FUNCTION(Rtv Val Pen           RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1110277;
PARAMETER(DTL.Pen_Company_Number);
PARAMETER(DTL.Pen_Usr);
PARAMETER(DTL.Pen_Description);
PARAMETER(DTL.Pen_Maximun_Capacity);
PARAMETER(DTL.Pen_Current_Head);
PARAMETER(DTL.Pen_Current_Drive_Card_No);
PARAMETER(DTL.Pen_Drive_Sequence);
PARAMETER(DTL.GN_Genetic_Code);
PARAMETER(DTL.Pen_Sts_Usr);
{
 //?USER: Process Data record

 // PAR.Pen Sts Usr = DB1.Pen Sts
 PAR.Pen_Sts_Usr = DB1.Pen_Sts;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Invalid Pen for Transfer'
ERROR(PRK0194);

QUIT;

ENDIF;

//?Transfer to pen must have an Open status.
CASE;

// IF DTL.Pen Sts Usr is Open
IF DTL.Pen_Sts_Usr = 'O';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Pen &1 must have an Open status for transfer.'
ERROR(PRK0209);
MSGPARM(DTL.Pen_Usr);

QUIT;

ENDIF;

ENDIF;

//?E4154 JJH 07/28/15 - New logic to determine if Pen Max Capacity
//?  Exceeded.
CASE;

// IF DTL.Pen Current Head is Not Zero
IF DTL.Pen_Current_Head <> *ZERO;

// Call program Clc Pen Max Capacity  XF.
CALL PROGRAM(Clc Pen Max Capacity  XF) ('PLXNXFR');
PARAMETER(DTL.Pen_Company_Number);
PARAMETER(DTL.Pen_Usr);
PARAMETER(DTL.Pen_Current_Head);
PARAMETER(NLL.Pen_Tto_Scl_Tkt_Head_USR);
PARAMETER(LCL.Pen_Exceeds_Max_Cap_USR);

CASE;

// IF LCL.Pen Exceeds Max Cap USR is Yes
IF LCL.Pen_Exceeds_Max_Cap_USR = 'Y';

// Send error message - 'Pen &1 max capacity will be exceeded. Choose another pen.'
ERROR(PRK1124);
MSGPARM(DTL.Pen_Usr);

ENDIF;

ENDIF;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Pen               CH) TYPE(CHGOBJ) FILE(PKA3REP)           AB1102758;
PARAMETER(DTL.Pen_Company_Number);
PARAMETER(DTL.Pen_Number);
PARAMETER(DTL.Pen_Description);
PARAMETER(DTL.Pen_Maximun_Capacity);
PARAMETER(DTL.Pen_Current_Head);
PARAMETER(DTL.Pen_Current_Drive_Card_No);
PARAMETER(DTL.Pen_Sts);
PARAMETER(DTL.Pen_Drive_Sequence);
PARAMETER(DTL.Pen_Type);
PARAMETER(DTL.Pen_Adjustment);
PARAMETER(DTL.GN_Genetic_Code);
PARAMETER(DTL.RS_User_Changed);
PARAMETER(DTL.RS_Date_Changed);
PARAMETER(DTL.RS_Time_Changed);
PARAMETER(DTL.RS_Record_Status);
PARAMETER(DTL.RS_Job);
PARAMETER(DTL.RS_Program);
PARAMETER(DTL.RS_User_Added);
PARAMETER(DTL.RS_Date_Added);
PARAMETER(DTL.RS_Time_Added);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


//?USER: Process command keys

CASE;

// IF DTL.Pen Usr is Pen Number not Empty
IF DTL.Pen_Usr > *BLANK;

//?If No Errors, Perform Transfer to another Pen:
//?1) Change Pen on Tattoo Detail with the From_Pen
//?2) Recount From_Pen Head Count and Chg the Pen
//?3) Recount To_Pen Head Count and Chg the Pen
//?E4154 JJH 07/22/15 - Change function from EXCINTFUN to EXCEXTFUN
// Call program Exc Chg Ttt Dtl Pen   XF.
CALL PROGRAM(Exc Chg Ttt Dtl Pen   XF) ('PLXMXFR');
PARAMETER(DTL.Pen_Number);
PARAMETER(DTL.Pen_Usr);
PARAMETER(DTL.Pen_Company_Number);

ENDIF;

