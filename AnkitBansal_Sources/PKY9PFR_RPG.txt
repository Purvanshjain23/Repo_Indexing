     H/TITLE UPS Prc Evl Trn 4 OMS PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISRCENT
     H* Date          : 05/27/04  Time  : 17:01:21
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKBOREL1IF  E           K        DISK
      * RTV : Evaluation Validation     Retrieval index
      *
     FPKCPCPL1IF  E           K        DISK
      * RTV : Eval Trans UPL            Retrieval index
      *
     FPKY9PFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: UPS Prc Evl Trn 4 OMS PF  Print file
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Eval Trans UPL
      * I : RST EA Company Number
     I                                    P   1   20P1HKST
      * I : RST EA Kill Date
     I                                    P   3   60P1B7DT
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Cooler Shrink Percent USR
     I                                    P   1   32P2FIPC
      * N :  Live Wgt Tot USR
     I                                    P   4   71P2VFNB
      * I :  Std Hot Weight USR
     I                                    P   8  155P2VPNB
      * I :  Std Backfat Inches USR
     I                                    P  16  235P2VQNB
      * I :  Std Loin-Eye Depth USR
     I                                    P  24  315P2VRNB
      * N :  Hot Weight Min USR
     I                                    P  32  351P2VSNB
      * N :  Hot Weight Max USR
     I                                    P  36  391P2VTNB
      * N :  Backfat Inch Min USR
     I                                    P  40  431P2VUNB
      * N :  Backfat Inch Max USR
     I                                    P  44  471P2VVNB
      * N :  Loin Eye Depth Min USR
     I                                    P  48  511P2VWNB
      * N :  Loin Eye Depth Max USR
     I                                    P  52  551P2VXNB
     IP3PARM      DS
      * I :  Cutout Matrix Code USR
     I                                        1   6 P3C9CD
     IP4PARM      DS
      * I :  Effective Month/Day USR
     I                                    P   1   30P4KLNB
     IP5PARM      DS
      * I :  Date USR
     I                                    P   1   40P5B5DT
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HKST    PARM           WP0001  30       EA Company Numb
     C           P1B7DT    PARM           WP0002  70       EA Kill Date
     C           P2VPNB    PARM           WP0003 155       Std Hot Weight
     C           P2VQNB    PARM           WP0004 155       Std Backfat Inc
     C           P2VRNB    PARM           WP0005 155       Std Loin-Eye De
     C           P3C9CD    PARM           WP0006  6        Cutout Matrix C
     C           P4KLNB    PARM           WP0007  40       Effective Month
     C           P5B5DT    PARM           WP0008  70       Date USR
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * UPS Prc Evl Trn 4 OMS PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$GENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * UPS Prc Evl Trn 4 OMS PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN CPHKST    WQKA01           EA Company Numb
     C           *LIKE     DEFN CPB7DT    WQKA02           EA Kill Date
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           EA Company Numb
     C                     KFLD           WQKA02           EA Kill Date
      * Setup key
     C                     Z-ADDP1HKST    WQKA01           EA Company Numb
     C                     Z-ADDP1B7DT    WQKA02           EA Kill Date
      * Establish starting position
     C           KRSA      SETLL@CPCPMX                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        EA Company Numb
     C                     MOVEL'Y'       W0AL01  1        EA Kill Date
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDCPHKST    $CHKST           EA Company Numb
     C                     Z-ADD*ZERO     $CFIPC           Cooler Shrink P
      * Load related totals format
     C                     Z-ADDCPHKST    $FHKST           EA Company Numb
     C                     Z-ADD*ZERO     $FWTNB           Hot Weight 1 SU
     C                     Z-ADD*ZERO     $FQKNB           Hot Weight 2 SU
     C                     Z-ADD*ZERO     $FU4NB           Avg Hot Wgt Act
     C                     Z-ADD*ZERO     $FUYNB           Avg Cold Wgt Ac
     C                     Z-ADD*ZERO     $FVINB           Avg Backfat 5.2
     C                     Z-ADD*ZERO     $FVJNB           Avg Loin-Eye 5.
     C                     Z-ADD*ZERO     $FVKNB           Avg Lean % 5.2
     C                     Z-ADD*ZERO     $FICNB           Head Count
     C                     Z-ADD*ZERO     $FBSVA           Backfat * Wgt
     C                     Z-ADD*ZERO     $FBTVA           Loin eye * wgt
     C                     Z-ADD*ZERO     $FNTNB           Lean % * Wt
      * USER: Process before print of EA Company Number format
      * CUR = PAR By name
     C                     Z-ADDP1HKST    $CHKST           EA Company Numb
     C                     Z-ADDP2FIPC    $CFIPC           Cooler Shrink P
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDCPHKST    $DHKST           EA Company Numb
     C                     Z-ADDCPB7DT    $DB7DT           EA Kill Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDCPHKST    $EHKST           EA Company Numb
     C                     Z-ADDCPB7DT    $EB7DT           EA Kill Date
     C                     Z-ADDCPKINB    $EKINB           EA Scale Sequen
     C                     Z-ADDCPKHNB    $EKHNB           EA Tattoo Numbe
     C                     Z-ADDCPLNNB    $ELNNB           EA Lot
     C                     MOVELCPHLST    $EHLST           EA Shift
     C                     Z-ADDCPKJNB    $EKJNB           EA Hot Weight
     C                     Z-ADDCPKKNB    $EKKNB           EA Backfat Thic
     C                     Z-ADDCPBQPC    $EBQPC           EA Loin-Eye Dep
     C                     Z-ADD*ZERO     $EVDNB           Weight 5.1 USR
     C                     Z-ADD*ZERO     $EVGNB           Cold Weight USR
     C                     Z-ADD*ZERO     $EVENB           Backfat USR
     C                     Z-ADD*ZERO     $ENONB           Backfat * Wgt U
     C                     Z-ADD*ZERO     $EFKPC           Loin-Eye USR
     C                     Z-ADD*ZERO     $ENPNB           Loin-Eye * Wgt
     C                     Z-ADD*ZERO     $EBPPC           Lean % 3.0 USR
     C                     Z-ADD*ZERO     $ENNNB           Lean % * Wgt US
     C                     Z-ADDCPBRPC    $EBRPC           EA Light Reflec
     C                     MOVELCPHMST    $EHMST           EA Trim Area
     C                     MOVELCPHNST    $EHNST           EA Carcass Sex
     C                     MOVELCPHTST    $EHTST           EA Record Creat
     C                     MOVELCPHUST    $EHUST           EA Record Proce
     C                     Z-ADDCPX6NB    $EX6NB           EA Backfat MM
     C                     Z-ADDCPFQPC    $EFQPC           EA LoinEye MM
     C                     Z-ADDCPFRPC    $EFRPC           EA Light Refl M
     C                     MOVELCPM7CD    $EM7CD           EA Trolley Id
     C                     MOVELCPX7ST    $EX7ST           EA Broken Back
     C                     MOVELCPX8ST    $EX8ST           EA Unused Sts 1
     C                     MOVELCPX9ST    $EX9ST           EA Unused Sts 2
     C                     MOVELCPYAST    $EYAST           EA Unused Sts 3
     C                     MOVELCPYBST    $EYBST           EA Unused Sts 4
     C                     MOVELCPYCST    $EYCST           EA Unused Sts 5
     C                     MOVELCPZJST    $EZJST           EA Unused Sts 6
     C                     MOVELCPZKST    $EZKST           EA Unused Sts 7
     C                     MOVELCPZLST    $EZLST           EA Unused Sts 8
     C                     Z-ADDCPB8DT    $EB8DT           RU Date
     C                     Z-ADDCPAOTM    $EAOTM           RU Time
      * USER: Process before print of detail format
     C                     MOVEL'N'       WUL4ST           Display Select
      * Validate Hot Weight (150 - 300) Std = 225
      * CASE: CUR.EA Hot Weight is Not Zero
     C           $EKJNB    IFNE *ZERO                      *IF
      * CASE: Hot Wgt < Min or Hot Wgt > Max
      *  - c1 OR c2
      *   |- c1    : CUR.EA Hot Weight LT PAR.Hot Weight Min USR
      *   |- c2    : CUR.EA Hot Weight GT PAR.Hot Weight Max USR
      *   '-
     C           $EKJNB    IFLT P2VSNB                     *IF
     C           $EKJNB    ORGT P2VTNB                     *OR
     C                     Z-ADDP2VPNB    $EVDNB           Weight 5.1 USR
     C                     MOVEL'Y'       WUL4ST           Display Select
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD$EKJNB    $EVDNB           Weight 5.1 USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2VPNB    $EVDNB           Weight 5.1 USR
     C                     MOVEL'Y'       WUL4ST           Display Select
     C                     END                             *FI
      * Validate Backfat    (0.4 - 1.4) Std = 0.8
      * CASE: CUR.EA Backfat Thickness Inch is GT Zero
     C           $EKKNB    IFGT *ZERO                      *IF
      * CASE: Backfat < Min or Backfat > Max
      *  - c1 OR c2
      *   |- c1    : CUR.EA Backfat Thickness Inch LT PAR.Backfat Inch Mi
      *   |- c2    : CUR.EA Backfat Thickness Inch GT PAR.Backfat Inch Ma
      *   '-
     C           $EKKNB    IFLT P2VUNB                     *IF
     C           $EKKNB    ORGT P2VVNB                     *OR
     C                     Z-ADDP2VQNB    $EVENB           Backfat USR
     C                     MOVEL'Y'       WUL4ST           Display Select
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD$EKKNB    $EVENB           Backfat USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2VQNB    $EVENB           Backfat USR
     C                     MOVEL'Y'       WUL4ST           Display Select
     C                     END                             *FI
      * Validate Loin-Eye   (1.5 - 2.9) Std = 2.1
      * CASE: CUR.EA Loin-Eye Depth Inches is GT Zero
     C           $EBQPC    IFGT *ZERO                      *IF
      * CASE: Loin-Eye < Min or Loin-Eye > Max
      *  - c1 OR c2
      *   |- c1    : CUR.EA Loin-Eye Depth Inches LT PAR.Loin Eye Depth M
      *   |- c2    : CUR.EA Loin-Eye Depth Inches GT PAR.Loin Eye Depth M
      *   '-
     C           $EBQPC    IFLT P2VWNB                     *IF
     C           $EBQPC    ORGT P2VXNB                     *OR
     C                     Z-ADDP2VRNB    $EFKPC           Loin-Eye USR
     C                     MOVEL'Y'       WUL4ST           Display Select
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD$EBQPC    $EFKPC           Loin-Eye USR
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2VRNB    $EFKPC           Loin-Eye USR
     C                     MOVEL'Y'       WUL4ST           Display Select
     C                     END                             *FI
      * Cold Weight
      * CUR.Cold Weight USR =
      *    *COMPUTE (x1 - (x1 * (x2 / x3)))
      * x1    : CUR.Weight 5.1 USR
      * -     : PGM.*Synon (15,0) work field
      * x1    : CUR.Weight 5.1 USR
      * *     : PGM.*Synon (15,2) work field *Rounded
      * x2    : PAR.Cooler Shrink Percent USR
      * /     : PGM.*Synon (15,5) work field *Rounded
      * x3    : CON.100
     C           P2FIPC    DIV  100       W0WB02    H      *Synon (15,5) w
     C           $EVDNB    MULT W0WB02    W0WA01    H      *Synon (15,2) w
     C           $EVDNB    SUB  W0WA01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    $EVGNB           Cold Weight USR
      * Lean Percent
      * CUR.Lean % 3.0 USR =
      *    *COMPUTE (((x1 + (x2 * x3) - (x4 * x5) + (x6 * x7)) / x8) * x
      *    9)
      * x1    : CON.2.827
      * +     : PGM.*Synon (17,7) work field
      * x2    : CON.0.469
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.Weight 5.1 USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : CON.18.47
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x5    : CUR.Backfat USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : CON.9.824
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x7    : CUR.Loin-Eye USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x8    : CUR.Weight 5.1 USR
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x9    : CON.100
     C           0.469     MULT $EVDNB    W0WD05           *Synon (17,7) w
     C           2.827     ADD  W0WD05    W0WD04           *Synon (17,7) w
     C           18.47     MULT $EVENB    W0WD06           *Synon (17,7) w
     C           W0WD04    SUB  W0WD06    W0WD03           *Synon (17,7) w
     C           9.824     MULT $EFKPC    W0WD07           *Synon (17,7) w
     C           W0WD03    ADD  W0WD07    W0WD02           *Synon (17,7) w
     C           W0WD02    DIV  $EVDNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EBPPC           Lean % 3.0 USR
      * Validate Lean Percent (40 - 60) Std = Std HW, BF, LE
      * CASE: CUR.Lean % 3.0 USR is Valid Range
     C           $EBPPC    IFGE 40                         *IF
     C           $EBPPC    ANDLE60
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADDP2VPNB    $EVDNB           Weight 5.1 USR
     C                     Z-ADDP2VQNB    $EVENB           Backfat USR
     C                     Z-ADDP2VRNB    $EFKPC           Loin-Eye USR
     C                     MOVEL'Y'       WUL4ST           Display Select
      * Lean Percent
      * CUR.Lean % 3.0 USR =
      *    *COMPUTE (((x1 + (x2 * x3) - (x4 * x5) + (x6 * x7)) / x8) * x
      *    9)
      * x1    : CON.2.827
      * +     : PGM.*Synon (17,7) work field
      * x2    : CON.0.469
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x3    : CUR.Weight 5.1 USR
      * -     : PGM.*Synon (17,7) work field
      * x4    : CON.18.47
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x5    : CUR.Backfat USR
      * +     : PGM.*Synon (17,7) work field
      * x6    : CON.9.824
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x7    : CUR.Loin-Eye USR
      * /     : PGM.*Synon (17,7) work field *Rounded
      * x8    : CUR.Weight 5.1 USR
      * *     : PGM.*Synon (17,7) work field *Rounded
      * x9    : CON.100
     C           0.469     MULT $EVDNB    W0WD05           *Synon (17,7) w
     C           2.827     ADD  W0WD05    W0WD04           *Synon (17,7) w
     C           18.47     MULT $EVENB    W0WD06           *Synon (17,7) w
     C           W0WD04    SUB  W0WD06    W0WD03           *Synon (17,7) w
     C           9.824     MULT $EFKPC    W0WD07           *Synon (17,7) w
     C           W0WD03    ADD  W0WD07    W0WD02           *Synon (17,7) w
     C           W0WD02    DIV  $EVDNB    W0WD01    H      *Synon (17,7) w
     C           W0WD01    MULT 100       W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    $EBPPC           Lean % 3.0 USR
     C                     END                             *FI
     C           $EVENB    MULT $EVDNB    $ENONB           Backfat * Wgt U
     C           $EFKPC    MULT $EVDNB    $ENPNB           Loin-Eye * Wgt
     C           $EBPPC    MULT $EVDNB    $ENNNB           Lean % * Wgt US
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
     C                     ADD  1         $FICNB           Head Count
     C                     ADD  $EVDNB    $FWTNB           Hot Weight 1 SU
     C                     ADD  $EVGNB    $FQKNB           Hot Weight 2 SU
     C                     ADD  $ENONB    $FBSVA           Backfat * Wgt
     C                     ADD  $ENPNB    $FBTVA           Loin eye * wgt
     C                     ADD  $ENNNB    $FNTNB           Lean % * Wt
      * Rtv Cutout Items 2 OMS XF - STR Order Management Sys  * 
     C                     CALL 'PDHSXFR'              90  Rtv Cutout Item
     C                     PARM *BLANK    W0RTN   7
     C                     PARM CPHKST    WQ0003  30       BOH Company Num
     C                     PARM CPB7DT    WQ0004  70       TH Kill Date
     C                     PARM $EVDNB    WQ0005  51       CD Carcass/Hot
     C                     PARM $EBPPC    WQ0006  31       CD Lean Percent
     C                     PARM P3C9CD    WQ0007  6        Cutout Matrix C
     C                     PARM P4KLNB    WQ0008  40       Effective Month
     C                     PARM P2FIPC    WQ0009  52       Cooler Shrink P
     C                     PARM P5B5DT    WQ0010  70       Date USR
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHSXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN CPHKST    WZA001           EA Company Numb
     C                     Z-ADDCPHKST    WZA001
     C           *LIKE     DEFN CPB7DT    WZA002           EA Kill Date
     C                     Z-ADDCPB7DT    WZA002
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@CPCPMX                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        EA Company Numb
     C                     MOVEL*BLANK    W0AL01  1        EA Kill Date
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        EA Company Numb
     C                     MOVEL'Y'       W0AL01  1        EA Kill Date
     C                     ELSE
      * Next record - Detect level breaks
     C           CPHKST    IFNE WZA001                     EA Company Numb
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           CPB7DT    IFNE WZA002                     EA Kill Date
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * USER: Process before print of EA Company Number format
      * Need Average Live Weight
     C           $FWTNB    DIV  $FICNB    $FU4NB    H      Avg Hot Wgt Act
     C           $FQKNB    DIV  $FICNB    $FUYNB    H      Avg Cold Wgt Ac
     C           $FBSVA    DIV  $FWTNB    $FVINB    H      Avg Backfat 5.2
     C           $FBTVA    DIV  $FWTNB    $FVJNB    H      Avg Loin-Eye 5.
     C           $FNTNB    DIV  $FWTNB    $FVKNB    H      Avg Lean % 5.2
      * UPS Upd Prd Hdr 2 OMS XF - STR Order Management Sys  * 
     C                     CALL 'PDHXXFR'              90  UPS Upd Prd Hdr
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $FHKST    WQ0011  30       Company Number
     C                     PARM P5B5DT    WQ0012  70       Date USR
     C                     PARM $FICNB    WQ0013  50       Head Count
     C                     PARM $FU4NB    WQ0014  50       Avg Hot Wgt Act
     C                     PARM P2FIPC    WQ0015  52       Cooler Shrink P
     C                     PARM $FUYNB    WQ0016  50       Avg Cold Wgt Ac
     C                     PARM $FVKNB    WQ0017  52       Avg Lean % 5.2
     C                     PARM $FVINB    WQ0018  52       Avg Backfat 5.2
     C                     PARM $FVJNB    WQ0019  52       Avg Loin-Eye 5.
     C                     PARM $FWTNB    WQ0020 112       Hot Weight 11.2
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDHXXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 4
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of UPS Prc Evl Trn 4 OMS PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of UPS Prc Evl Trn 4 OMS PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print EA Company Number of UPS Prc Evl Trn 4 OMS PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print EA Kill Date of UPS Prc Evl Trn 4 OMS PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Convert fields to external form
      * Convert EA Kill Date to display format
      * Convert date
     C           1000000   ADD  $DB7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDB7DT
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Detail line. of UPS Prc Evl Trn 4 OMS PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'0'       *IN79
     C           WUL4ST    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$ECOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$EDTLRCD
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of UPS Prc Evl Trn 4 OMS PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * EA Company Number of UPS Prc Evl Trn 4 OMS PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * EA Kill Date of UPS Prc Evl Trn 4 OMS PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  1         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of UPS Prc Evl Trn 4 OMS PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD4         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELWN0001    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSA     CHAIN@BOREFN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0107' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUAFPC           EV Minimum
     C                     Z-ADD*ZERO     P2VSNB           EV Maximum
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBOAFPC    WUAFPC           EV Minimum
     C                     Z-ADDBOAGPC    P2VSNB           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELWN0001    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSB     CHAIN@BOREFN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0107' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P2VTNB           EV Minimum
     C                     Z-ADD*ZERO     WUAGPC           EV Maximum
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBOAFPC    P2VTNB           EV Minimum
     C                     Z-ADDBOAGPC    WUAGPC           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELWN0002    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSC     CHAIN@BOREFN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0107' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUAFPC           EV Minimum
     C                     Z-ADD*ZERO     P2VUNB           EV Maximum
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBOAFPC    WUAFPC           EV Minimum
     C                     Z-ADDBOAGPC    P2VUNB           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELWN0002    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSD     CHAIN@BOREFN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0107' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P2VVNB           EV Minimum
     C                     Z-ADD*ZERO     WUAGPC           EV Maximum
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBOAFPC    P2VVNB           EV Minimum
     C                     Z-ADDBOAGPC    WUAGPC           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELWN0003    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSE     CHAIN@BOREFN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0107' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUAFPC           EV Minimum
     C                     Z-ADD*ZERO     P2VWNB           EV Maximum
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBOAFPC    WUAFPC           EV Minimum
     C                     Z-ADDBOAGPC    P2VWNB           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BOBVCD           EV Validation C
      * Setup key
     C                     MOVELWN0003    BOBVCD           EV Validation C
      * Establish starting position
     C           KRSSF     CHAIN@BOREFN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'PRK0107' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     P2VXNB           EV Minimum
     C                     Z-ADD*ZERO     WUAGPC           EV Maximum
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBOAFPC    P2VXNB           EV Minimum
     C                     Z-ADDBOAGPC    WUAGPC           EV Maximum
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P2FIPC           Cooler Shrink P
     C                     Z-ADD*ZERO     P2VFNB           Live Wgt Tot US
     C                     Z-ADD*ZERO     P2VSNB           Hot Weight Min
     C                     Z-ADD*ZERO     P2VTNB           Hot Weight Max
     C                     Z-ADD*ZERO     P2VUNB           Backfat Inch Mi
     C                     Z-ADD*ZERO     P2VVNB           Backfat Inch Ma
     C                     Z-ADD*ZERO     P2VWNB           Loin Eye Depth
     C                     Z-ADD*ZERO     P2VXNB           Loin Eye Depth
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field EV Minimum
     C                     Z-ADD*ZERO     WUAFPC  71
      * Define work field EV Maximum
     C                     Z-ADD*ZERO     WUAGPC  71
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    CPHKST           EA Company Numb
     C                     MOVEL*LOVAL    CPB7DT           EA Kill Date
     C                     MOVEL*LOVAL    CPKINB           EA Scale Sequen
      * Define work field Display Select Usr
     C                     MOVEL*BLANK    WUL4ST  1
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    W0WB02 155       *Synon (15,5) w
     C                     Z-ADD*ZEROS    W0WA01 152       *Synon (15,2) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD05 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD06 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD07 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * PAR = CON By name
     C                     Z-ADD*ZERO     P2FIPC           Cooler Shrink P
     C                     Z-ADD*ZERO     P2VFNB           Live Wgt Tot US
     C                     Z-ADD*ZERO     P2VSNB           Hot Weight Min
     C                     Z-ADD*ZERO     P2VTNB           Hot Weight Max
     C                     Z-ADD*ZERO     P2VUNB           Backfat Inch Mi
     C                     Z-ADD*ZERO     P2VVNB           Backfat Inch Ma
     C                     Z-ADD*ZERO     P2VWNB           Loin Eye Depth
     C                     Z-ADD*ZERO     P2VXNB           Loin Eye Depth
      * Rtv Coolr Shrnk% 2 OMS XF - STR Order Management Sys  * 
     C                     CALL 'PDAWXFR'              90  Rtv Coolr Shrnk
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HKST    WQ0001  30       Company Number
     C           P2FIPC    PARM *ZERO     WQ0002  52       Cooler Shrink P
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDAWXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      *
     C                     MOVEL*BLANK    WN0001  3        EV Validation C
      *
      * Rtv Hot Weight Range  IF
     C                     MOVEL'CLT'     WN0001           EV Validation C
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
     C                     EXSR SARVGN
     C                     MOVEL'CDB'     WN0001           EV Validation C
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
     C                     EXSR SBRVGN
      *
     C                     MOVEL*BLANK    WN0002  3        EV Validation C
      *
      * Rtv Backfat Range     IF
     C                     MOVEL'BLW'     WN0002           EV Validation C
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
     C                     EXSR SCRVGN
     C                     MOVEL'BHI'     WN0002           EV Validation C
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
     C                     EXSR SDRVGN
      *
     C                     MOVEL*BLANK    WN0003  3        EV Validation C
      *
      * Rtv Loin-Eye Range    IF
     C                     MOVEL'LLW'     WN0003           EV Validation C
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
     C                     EXSR SERVGN
     C                     MOVEL'LHI'     WN0003           EV Validation C
      * Rtv Min/Max Values    RT - Evaluation Validation  * 
     C                     EXSR SFRVGN
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
