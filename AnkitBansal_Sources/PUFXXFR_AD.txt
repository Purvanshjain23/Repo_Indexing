// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUFXXFR
// ?Date: 14.08.2025 Time: 03:50:17
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?12/07/17
//?chg ship to addr to match master file. line 1 now has c/o, addr 2
//?  has the street or PO box
EXECUTE FUNCTION(Rtv Chg Ship to p/Mstr RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC2146399;
{
 //?USER: Initialize routine

 // WRK.Scheduled Ship Date USR = CON.1171206
 WRK.Scheduled_Ship_Date_USR = 1171206;

 //?USER: Process Data record

 // LCL.*Record selected = CND.*NO
 LCL.*Record_selected = 'N';

 CASE;

 // IF DB1.Scheduled Ship Date GE WRK.Scheduled Ship Date USR
 IF DB1.Scheduled_Ship_Date >= WRK.Scheduled_Ship_Date_USR;

 // LCL.*Record selected = CND.*YES
 LCL.*Record_selected = 'Y';

 ENDIF;

 CASE;

 // IF DB1.Order Type - Sales is Regular Order
 IF DB1.Order_Type_Sales = 'OR';

 // LCL.*Record selected = CND.*YES
 LCL.*Record_selected = 'Y';

 ENDIF;

 CASE;

 // IF DB1.Shipping Method is Prepaid Truck
 IF DB1.Shipping_Method = 'PT';

 // LCL.*Record selected = CND.*YES
 LCL.*Record_selected = 'Y';

 ENDIF;

 EXECUTE FUNCTION(RTV Type              RT) TYPE(RTVOBJ) FILE(PMAMREP)           AC2100377;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.OHE_Override_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.OHE Override Type Code is No
 IF LCL.OHE_Override_Type_Code = *BLANK;

 EXECUTE FUNCTION(RTV Type Code          RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1441836;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.OHE_Override_Type_Code);
 PARAMETER(LCL.Customer_Group_Code);
 PARAMETER(LCL.Customer_Group_Code_2);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 CASE;

 // IF LCL.OHE Override Type Code is ES
 IF LCL.OHE_Override_Type_Code = 'ES';

 // OR DB1.Header Status is Confirmed
 OR DB1.Header_Status = 'R';

 //?Dont chg type = ES or header sts ="R"
 // LCL.*Record selected = CND.*NO
 LCL.*Record_selected = 'N';

 ENDIF;

 //?is order to be excluded? check work file with those orders
 //?  if its there, then skip it
 EXECUTE FUNCTION(Rtv Order # for ShpAdd RT) TYPE(RTVOBJ) FILE(PDM8CPP)          AC2146411;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  // PGM.*Return code = CND.*Record already exists
  PGM.*Return_code = 'Y2U0003';

 }

 CASE;

 // IF PGM.*Return code is *Record already exists
 IF PGM.*Return_code = 'Y2U0003';

 // LCL.*Record selected = CND.*NO
 LCL.*Record_selected = 'N';

 ENDIF;

 CASE;

 // IF LCL.*Record selected is *YES
 IF LCL.*Record_selected = 'Y';

 EXECUTE FUNCTION(RTV Cust Name/Addr     RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1129143;
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(NLL.Customer_Name);
 PARAMETER(PAR.Address_Line_1);
 PARAMETER(PAR.Address_Line_2);
 PARAMETER(PAR.Address_Line_3);
 PARAMETER(NLL.City);
 PARAMETER(NLL.State_Code);
 PARAMETER(NLL.Zip_Postal_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Address Line 1 NE DB1.Ship To Address Line 1
 IF PAR.Address_Line_1 <> DB1.Ship_To_Address_Line_1;

 // OR PAR.Address Line 2 NE DB1.Ship To Address Line 2
 OR PAR.Address_Line_2 <> DB1.Ship_To_Address_Line_2;

 // OR PAR.Address Line 3 NE DB1.Ship To Address Line 3
 OR PAR.Address_Line_3 <> DB1.Ship_To_Address_Line_3;

 EXECUTE FUNCTION(Chg SH cust           CH) TYPE(CHGOBJ) FILE(OPBFCPP)           AC2146400;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Address_Line_1);
 PARAMETER(PAR.Address_Line_2);
 PARAMETER(PAR.Address_Line_3);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

 ENDIF;

}


