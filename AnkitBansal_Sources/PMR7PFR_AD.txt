// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMR7PFR
// ?Date: 14.08.2025 Time: 12:05:43
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?T14912 RMC 7/16/19 added co to key when getting order
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

CASE;

// IF DB1.COA Rail Car is Not Entered
IF DB1.COA_Rail_Car = *BLANK;

// OR PAR.COA Rail Car is Entered
OR ( PAR.COA_Rail_Car <> *BLANK;

// AND PAR.COA Rail Car NE DB1.COA Rail Car
AND PAR.COA_Rail_Car <> DB1.COA_Rail_Car );

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

// 1PG.COA Rail Car to Assign = PAR.COA Rail Car
X1PG_COA_Rail_Car_to_Assign = PAR.COA_Rail_Car;

CASE;

// IF 1PG.COA Rail Car to Assign is Not Entered
IF X1PG_COA_Rail_Car_to_Assign = *BLANK;

// 1PG.COA Rail Car to Assign = CON.*ALL
X1PG_COA_Rail_Car_to_Assign = *ALL;

ENDIF;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Company Number header format
PRINT Company Number header format;

ENDIF;

CASE;

IF NEW COA_Rail_Car;
// Print COA Rail Car header format
PRINT COA Rail Car header format;

ENDIF;

// SUPPRESSED PRINT COA ULSD Company # header format

// SUPPRESSED PRINT COA Batch Number header format

// SUPPRESSED PRINT COA Batch Header RIN Seq header format

//?USER: On print of detail format

//?GET ORDER # , ETC FROM 361 SEL RECORD
EXECUTE FUNCTION(RTV Numeric Value      RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1394480;
PARAMETER(CUR.Company_Number);
PARAMETER('HPBPLT');
PARAMETER(LCL.Company_Number_041405);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Order for Ext Sel RT) TYPE(RTVOBJ) FILE(PMDACPP)           AC1963657;
PARAMETER(LCL.Company_Number_041405);
PARAMETER(CUR.COA_ULSD_Company_#);
PARAMETER(CUR.COA_Batch_Number);
PARAMETER(CUR.COA_Batch_Header_RIN_Seq);
PARAMETER(CUR.Order_Number_1_usr);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
PARAMETER(LCL.Case_Sequence_Number);
PARAMETER(CUR.Load_ID_USR);
PARAMETER(LCL.COA_RIN_Gallons_Sold);
PARAMETER(LCL.COA_Shipping_Company);
{
 //?USER: Initialize routine

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 //?USER: Processing if Data record not found

 // PAR.Order Number = CON.*ZERO
 PAR.Order_Number = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.RFS Transaction Type is Sold or Delivered
 IF DB1.RFS_Transaction_Type = 'SEL';

 // AND LCL.First Time Flag is Yes
 AND LCL.First_Time_Flag = 'Y';

 MOVE *ALL (To: PAR From: DB1);

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 QUIT;

 ENDIF;

}


EXECUTE FUNCTION(RTV HPB Gross Gall    RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1879030;
PARAMETER(LCL.COA_Shipping_Company);
PARAMETER(CUR.Order_Number_1_usr);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Order_Secondary_Line_Seq);
PARAMETER(CUR.Quantity_7_0_USR);
{
 //?USER: Process Data record

 // PAR.Quantity Shipped Total = PAR.Quantity Shipped Total + DB1.Case Quantity
 PAR.Quantity_Shipped_Total = PAR.Quantity_Shipped_Total + DB1.Case_Quantity;

}


//?USER: Process after print of detail format

NXT.Gallons_SUM = SUM(CUR.Quantity_7_0_USR);

//?USER: Print required level totals

// SUPPRESSED PRINT COA Batch Header RIN Seq totals format

// SUPPRESSED PRINT COA Batch Number totals format

// SUPPRESSED PRINT COA ULSD Company # totals format

CASE;

IF NEW COA_Rail_Car;
// Print COA Rail Car totals format
PRINT COA Rail Car totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

