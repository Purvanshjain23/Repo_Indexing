      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP231 - WRITE EXPENSE RECEIVING FILE TO EDIT FILE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     12/31/97
      *
      * FUNCTION: THIS PROGRAM PERFORMS THE FOLLOWING FUNCTIONS:
      *
      *           1) READS EACH RECORD IN THE RECEIVING FILE
      *
      *           2) SUMS RECEIVING DATA TO THE EXPENSE CODE/COST CENTER
      *              LEVEL.
      *
      *           3) MAPS IN EXPENSE CLASS AND EXPENSE SUBCLASS INFO
      *
      *           4) WRITES A SUMMARIZED RECORD TO THE EDIT FILE
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 99/99/99
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHSP050    IF   E           K DISK
      *  EXPENSE CLASS
      *
      *
     FHSP052    IF   E           K DISK
      *  EXPENSE CODE
      *
      *
     FHSP230    IF   E           K DISK
      *  RECEIVING FILE FOR G/L TO HPS EXPENSE INTERFACE
      *
      *
     FHSP231    O    E           K DISK
      *  EDIT FILE FOR G/L TO HPS EXPENSE INTERFACE
      *
      /EJECT
      ****************************************************************
      * INPUT SPECS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
      *
      *
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
      * PROCESS EACH RECORD IN THE RECEIVING FILE.
      *
     C     *LOVAL        SETLL     HSP230
      *
     C     *IN90         DOUEQ     *ON                                          MAIN DO
     C                   READ      HSP230                                 90
     C     *IN90         IFEQ      *OFF                                         IF NOT EOF
      *
     C     FIRST         IFEQ      YES
     C                   EXSR      $SAVE
     C                   MOVEL     NO            FIRST
     C                   ENDIF
      *
     C     EREXCD        IFNE      SVEXCD                                       IF BREAK
     C     ERCJD         ORNE      SVCJD
      *
     C     WKAM          IFNE      0
     C                   EXSR      $BREAK
     C                   ENDIF
      *
     C                   EXSR      $SAVE
     C                   ENDIF                                                  IF BREAK
      *
     C                   ADD       ERAM          WKAM
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  MAIN DO
      *
      *----------------------------------------------------------------
      * EOF PROCESSING
      *----------------------------------------------------------------
      *
      * PERFORM LAST RECORD PROCESSING IF ANY DATA WAS READ
      *
     C     FIRST         IFEQ      NO
     C     WKAM          ANDNE     0
     C                   EXSR      $BREAK
     C                   ENDIF
      *
     C                   SETON                                        LR
      /EJECT
      *----------------------------------------------------------------
      * $SAVE - SAVE FIELDS
      *----------------------------------------------------------------
      *
     C     $SAVE         BEGSR
      *
     C                   MOVEL     ERCOCD        SVCOCD
     C                   Z-ADD     ERACYR        SVACYR
     C                   Z-ADD     ERACPE        SVACPE
     C                   MOVEL     EREXCD        SVEXCD
     C                   MOVEL     ERCJD         SVCJD
     C                   MOVEL     EROBJ         SVOBJ
      *
     C                   Z-ADD     0             WKAM
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $BREAK - BREAK LOGIC TO WRITE AN EDIT FILE RECORD
      *----------------------------------------------------------------
      *
     C     $BREAK        BEGSR
      *
     C                   CLEAR                   EEREC
      *
      *
      * RETRIEVE EXPENSE INFO ASSOCIATED WITH EXPENSE CODE
      *
     C     SVEXCD        CHAIN     HSP052                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD CODE
     C                   MOVEL     EXECCD        EEECCD
     C                   MOVEL     EXESCD        EEESCD
     C                   MOVEL     EXRPCD        EERPCD
      *
      * RETRIEVE ALLOCATION METHOD FOR THE EXPENSE CLASS
      * ASSOCIATED WITH THIS EXPENSE CODE.
      *
      *
     C     EEECCD        CHAIN     HSP050                             92
     C     *IN92         IFEQ      *OFF
     C                   MOVEL     ECAMCD        EEAMCD
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD CODE
      *
      * MOVE SAVE FIELDS TO EDIT FILE RECORD
      *
     C                   MOVEL     SVEXCD        EEEXCD
     C                   MOVEL     SVCOCD        EECOCD
     C                   MOVEL     SVACYR        EEACYR
     C                   MOVEL     SVACPE        EEACPE
     C                   MOVEL     SVOBJ         EEOBJ
     C                   MOVEL     SVCJD         EECJD
      *
      * SET UP ACCUMULATED WORK AMOUNT
      *
     C                   Z-ADD     WKAM          EEAM
      *
     C                   WRITE     EEREC
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      *  INZSR - INITIALIZATION SUBROUTINE
      *----------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
      * SAVE FIELDS
      *
     C     *LIKE         DEFINE    EREXCD        SVEXCD
     C     *LIKE         DEFINE    ERCOCD        SVCOCD
     C     *LIKE         DEFINE    ERACYR        SVACYR
     C     *LIKE         DEFINE    ERACPE        SVACPE
     C     *LIKE         DEFINE    ERCJD         SVCJD
     C     *LIKE         DEFINE    EROBJ         SVOBJ
      *
      * WORKFIELDS
      *
     C     *LIKE         DEFINE    ERAM          WKAM
      *
      *
      * CONTROL FIELDS
      *
     C                   MOVEL     YES           FIRST             1
      *
     C                   ENDSR
      /EJECT
