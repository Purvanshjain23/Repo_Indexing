// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMRZXFR
// ?Date: 14.08.2025 Time: 03:43:52
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?W62876 04/15/20 RMC - only do this if PKGFLAG is yes for the company -
//?  dont want to do this for TF. Their misc tares are upl per fg monthly
//?E00221 10/02/08 RMC - added company to key of packaging type file
//?E00326 02/19/09 PKD Added "JZ Rounding".  See Narrative for Details.
EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(PAR.Company_Number);
PARAMETER('PKGFLAG');
PARAMETER(LCL.Status_Flag_10_Y_N);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Status Flag 10 Y/N is Yes
IF LCL.Status_Flag_10_Y_N = 'Y';

EXECUTE FUNCTION(Rtv Calc MscTr/FGitm RT) TYPE(RTVOBJ) FILE(POAZCPP)            AC1865926;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Status_Flag_1_Y_N);
{
 //?USER: Initialize routine

 //?RMC E00221 11/26/08 - Do normal rounding for Boxes-per johnZ, bradH
 // PAR.Misc Tare Weight 5.1 = CON.*ZERO
 PAR.Misc_Tare_Weight_5_1 = *ZERO;

 // PAR.Misc Tare Weight = CON.*ZERO
 PAR.Misc_Tare_Weight = *ZERO;

 EXECUTE FUNCTION(RTV U/M Primary        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1647610;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.UOM_Primary);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?RMC E00221 8/28/08 - Added status 1 value:Y=Round misc tare to 1 dec
 EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
 PARAMETER(PAR.Company_Number);
 PARAMETER('PKGROUND');
 PARAMETER(LCL.Status_Flag_1_Y_N);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Pkg Item Weight   RT) TYPE(RTVOBJ) FILE(POARREP)           AC1865939;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Packaging_Item_Code);
 PARAMETER(LCL.Pckg_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Incl in Misc Tare RT) TYPE(RTVOBJ) FILE(POCAREP)           AC1865444;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Pckg_Item_Type);
 PARAMETER(LCL.Incl_in_Misc_Tare);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 CASE;

 // IF LCL.Incl in Misc Tare is Yes
 IF LCL.Incl_in_Misc_Tare = 'Y';

 // AND DB1.Record Status is Active
 AND DB1.Record_Status = 'A';

 //?02/18/09 PKD E00326 Accumulate into 15.5 field
 // Compute:FG Misc Tare
 PAR.Total_Tare_15_5_USR = ( DB1.Packaging_Item_Quantity * LCL.Pckg_Tare_Weight 'H' )
 + PAR.Total_Tare_15_5_USR;

 ENDIF;

 //?USER: Exit processing

 //?02/18/09 PKD E00326 Added "JZ Rounding". See Narrative for Details.
 //?ROUND: 0 Dec if Combo; 1 Dec if BX w/JZ Rounding
 CASE;

 // IF PAR.Total Tare 15.5 USR is GT Zero
 IF PAR.Total_Tare_15_5_USR > *ZERO;

 // LCL.USR Weight, 5.0 = PAR.Total Tare 15.5 USR * CON.100000 *
 LCL.USR_Weight_5_0 = PAR.Total_Tare_15_5_USR * 100000;

 //?NOT Combos
 CASE;

 // IF PAR.U/M - Primary is Not Combos
 IF PAR.UOM_Primary <> 'CB';

 // LCL.USR Weight, 5.0 = LCL.USR Weight, 5.0 * CON.10 *
 LCL.USR_Weight_5_0 = LCL.USR_Weight_5_0 * 10;

 // LCL.USR Weight, 5.0 = LCL.USR Weight, 5.0 / CON.10 *
 LCL.USR_Weight_5_0 = LCL.USR_Weight_5_0 / 10;

 ENDIF;

 //?ROUND: JZ Rounding or Rounding prior to JZ Rounding
 CASE;

 // IF PAR.U/M - Primary is Combos
 IF PAR.UOM_Primary = 'CB';

 CASE;

 // IF LCL.USR Weight, 5.0 is EQ 50000 for COMBO
 IF LCL.USR_Weight_5_0 = 50000;

 //?******** JZ Rounding ********
 // LCL.Number 1.0 USR = PAR.Total Tare 15.5 USR * CON.1 *
 LCL.Number_1_0_USR = PAR.Total_Tare_15_5_USR * 1;

 //?CHECK: Odd/Even
 CASE;

 // IF LCL.Number 1.0 USR is EQ 1
 IF LCL.Number_1_0_USR = 1;

 // OR LCL.Number 1.0 USR is EQ 3
 OR LCL.Number_1_0_USR = 3;

 // OR LCL.Number 1.0 USR is EQ 5
 OR LCL.Number_1_0_USR = 5;

 // OR LCL.Number 1.0 USR is EQ 7
 OR LCL.Number_1_0_USR = 7;

 // OR LCL.Number 1.0 USR is EQ 9
 OR LCL.Number_1_0_USR = 9;

 //?Move to 1 decimal field before rounding to whole number
 // PAR.Misc Tare Weight 5.1 = PAR.Total Tare 15.5 USR * CON.1 *
 PAR.Misc_Tare_Weight_5_1 = PAR.Total_Tare_15_5_USR * 1;

 // WRK.Weight Adjust = PAR.Misc Tare Weight 5.1 * CON.1 *Rounded
 WRK.Weight_Adjust = PAR.Misc_Tare_Weight_5_1 * 1 'H';

 //?CHECK: Odd/Even
 // IF LCL.Number 1.0 USR is EQ 0
 IF LCL.Number_1_0_USR = *ZERO;

 // OR LCL.Number 1.0 USR is EQ 2
 OR LCL.Number_1_0_USR = 2;

 // OR LCL.Number 1.0 USR is EQ 4
 OR LCL.Number_1_0_USR = 4;

 // OR LCL.Number 1.0 USR is EQ 6
 OR LCL.Number_1_0_USR = 6;

 // OR LCL.Number 1.0 USR is EQ 8
 OR LCL.Number_1_0_USR = 8;

 //?Move to 0 decimal field witout rounding
 // WRK.Weight Adjust = PAR.Total Tare 15.5 USR * CON.1 *
 WRK.Weight_Adjust = PAR.Total_Tare_15_5_USR * 1;

 ENDIF;

 // PAR.Misc Tare Weight = WRK.Weight Adjust
 PAR.Misc_Tare_Weight = WRK.Weight_Adjust;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Per Damon 2/25/08 -  If COMBO do normal rounding on Misc tare wgt
 //?Combos - Normal rounding to a whole nubmer - no decimals allowed
 // WRK.Weight Adjust = PAR.Total Tare 15.5 USR * CON.1 *Rounded
 WRK.Weight_Adjust = PAR.Total_Tare_15_5_USR * 1 'H';

 // PAR.Misc Tare Weight = WRK.Weight Adjust
 PAR.Misc_Tare_Weight = WRK.Weight_Adjust;

 ENDIF;

 //?ROUND: JZ Rounding or Rounding prior to JZ Rounding
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.USR Weight, 5.0 is EQ 5000 for BOX
 IF LCL.USR_Weight_5_0 = 5000;

 //?******** JZ Rounding ********
 // First Digit Right of Dec
 LCL.Number_1_0_USR = ( PAR.Total_Tare_15_5_USR * 10 ) * 1;

 //?CHECK: Odd/Even
 CASE;

 // IF LCL.Number 1.0 USR is EQ 1
 IF LCL.Number_1_0_USR = 1;

 // OR LCL.Number 1.0 USR is EQ 3
 OR LCL.Number_1_0_USR = 3;

 // OR LCL.Number 1.0 USR is EQ 5
 OR LCL.Number_1_0_USR = 5;

 // OR LCL.Number 1.0 USR is EQ 7
 OR LCL.Number_1_0_USR = 7;

 // OR LCL.Number 1.0 USR is EQ 9
 OR LCL.Number_1_0_USR = 9;

 //?Move to 2 decimal field before rounding to 1 decimal
 // LCL.USR Weight = PAR.Total Tare 15.5 USR * CON.1 *
 LCL.USR_Weight = PAR.Total_Tare_15_5_USR * 1;

 // PAR.Misc Tare Weight 5.1 = LCL.USR Weight * CON.1 *Rounded
 PAR.Misc_Tare_Weight_5_1 = LCL.USR_Weight * 1 'H';

 //?CHECK: Odd/Even
 // IF LCL.Number 1.0 USR is EQ 0
 IF LCL.Number_1_0_USR = *ZERO;

 // OR LCL.Number 1.0 USR is EQ 2
 OR LCL.Number_1_0_USR = 2;

 // OR LCL.Number 1.0 USR is EQ 4
 OR LCL.Number_1_0_USR = 4;

 // OR LCL.Number 1.0 USR is EQ 6
 OR LCL.Number_1_0_USR = 6;

 // OR LCL.Number 1.0 USR is EQ 8
 OR LCL.Number_1_0_USR = 8;

 //?Move to 1 decimal field without rounding
 // PAR.Misc Tare Weight 5.1 = PAR.Total Tare 15.5 USR * CON.1 *
 PAR.Misc_Tare_Weight_5_1 = PAR.Total_Tare_15_5_USR * 1;

 ENDIF;

 // PAR.Misc Tare Weight = PAR.Misc Tare Weight 5.1
 PAR.Misc_Tare_Weight = PAR.Misc_Tare_Weight_5_1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Status Flag 1  Y/N is Yes
 IF LCL.Status_Flag_1_Y_N = 'Y';

 //?Per JohnZ,BradH 11/26/08 - for BOX do normal rounding on Misc tare wgt
 //?Boxes - Normal rounding to 1 Decimal
 // PAR.Misc Tare Weight 5.1 = PAR.Total Tare 15.5 USR * CON.1 *Rounded
 PAR.Misc_Tare_Weight_5_1 = PAR.Total_Tare_15_5_USR * 1 'H';

 // PAR.Misc Tare Weight = PAR.Misc Tare Weight 5.1
 PAR.Misc_Tare_Weight = PAR.Misc_Tare_Weight_5_1;

 ENDIF;

 ENDIF;

 ENDIF;

 EXECUTE FUNCTION(Chg FG Misc Tare-btch CH) TYPE(CHGOBJ) FILE(CABZREP)           AC1872939;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(PAR.Misc_Tare_Weight);
 PARAMETER(PAR.Status_Flag_1_Y_N);
 PARAMETER(LCL.Change_Flag_USR);
 {
  //?USER: Processing after Data read

  //?T998 - Notification of change    12/01/01
  DO;

  // LCL.Item Code Txt = CVTVAR(DB1.Item Code)
  LCL.Item_Code_Txt = CVTVAR(DB1.Item_Code);

  // LCL.Description 14A      USR = CONCAT(CON.Item:,LCL.Item Code Txt,CON.1)
  LCL.Description_14A_USR = 'Item:' + LCL.Item_Code_Txt (1);

  // LCL.Text USR 8 = CONCAT(CON.Type:,DB1.Item Type Code,CON.1)
  LCL.Text_USR_8 = 'Type:' + DB1.Item_Type_Code (1);

  // LCL.Text USR 23 = CONCAT(LCL.Description 14A      USR,LCL.Text USR 8,CON.1)
  LCL.Text_USR_23 = LCL.Description_14A_USR + LCL.Text_USR_8 (1);

  // LCL.Text USR 20 = CONCAT(CON.Changed By:,JOB.*USER,CON.1)
  LCL.Text_USR_20 = 'Changed By:' + JOB.*USER (1);

  // LCL.Text USR 43 = CONCAT(LCL.Text USR 23,LCL.Text USR 20,CON.1)
  LCL.Text_USR_43 = LCL.Text_USR_23 + LCL.Text_USR_20 (1);

  //?Finished Goods
  CASE;

  // IF DB1.Item Type Code is Finished Goods
  IF DB1.Item_Type_Code = 'FG';

  //?Misc Tare Weight
  CASE;

  // IF PAR.Misc Tare Weight NE DB1.Misc Tare Weight
  IF PAR.Misc_Tare_Weight <> DB1.Misc_Tare_Weight;

  // LCL.Text Usr 50 = CONCAT(LCL.Text USR 23,CON.Misc Tare Weight:,CON.2)
  LCL.Text_Usr_50 = LCL.Text_USR_23 + 'Misc Tare Weight:' (2);

  // Retrieve message - '&1 &2 &3'
  LCL.Office_Message_USR_1 = RTVMSG(USR3138);
  PARAMETER('Misc Tare Weight:');
  PARAMETER(PAR.Misc_Tare_Weight);
  PARAMETER(*BLANK);

  // LCL.Change Flag USR = CND.Yes
  LCL.Change_Flag_USR = 'Y';

  // PAR.Change Flag USR = CND.Yes
  PAR.Change_Flag_USR = 'Y';

  ENDIF;

  ENDIF;

  //?MISC TARE Changed
  CASE;

  // IF LCL.Change Flag USR is Yes
  IF LCL.Change_Flag_USR = 'Y';

  CASE;

  // IF PAR.Status Flag 1  Y/N is No
  IF PAR.Status_Flag_1_Y_N = 'N';

  EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
  PARAMETER(DB1.Company_Number);
  PARAMETER('PRKSCHED');
  PARAMETER(WRK.DL_List_ID);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // Call program SND Pager Msg-Long    UP.
  CALL PROGRAM(SND Pager Msg-Long    UP) ('POPMUPC');
  PARAMETER(WRK.DL_List_ID);
  PARAMETER(LCL.Text_USR_43);
  PARAMETER(LCL.Office_Message_USR_1);
  PARAMETER(LCL.Office_Message_USR_2);
  PARAMETER(LCL.Office_Message_USR_3);
  PARAMETER(LCL.Office_Message_USR_4);
  PARAMETER(LCL.Office_Message_USR_5);

  // LCL.EDI Status 1 = CND.Modified
  LCL.EDI_Status_1 = 'M';

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.EDI Status 1 = CND.Blank
  LCL.EDI_Status_1 = *BLANK;

  ENDIF;

  //?Create record in Change log   8/28/02
  EXECUTE FUNCTION(Crt Pckg Item Chg Log CR) TYPE(CRTOBJ) FILE(POBTCPP)           AC1647583;
  PARAMETER(DB1.Company_Number);
  PARAMETER(LCL.Description_14A_USR);
  PARAMETER(JOB.*Job_date);
  PARAMETER(JOB.*Job_time);
  PARAMETER(1);
  PARAMETER(PAR.Misc_Tare_Weight);
  PARAMETER(LCL.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(SET Record Stamp CRTOB IF) TYPE(EXCINTFUN)                     AC1282865;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  ENDIF;

  ENDDO;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 CASE;

 // IF LCL.Change Flag USR is Yes
 IF LCL.Change_Flag_USR = 'Y';

 EXECUTE FUNCTION(Rtv Item Info PFS     RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1732761;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.Item_Label_Line_1);
 PARAMETER(WRK.Item_Label_Line_2);
 PARAMETER(WRK.Item_Label_Line_3);
 PARAMETER(WRK.Unit_Weight);
 PARAMETER(WRK.Catch_Weight_Status);
 PARAMETER(WRK.Minimum_Weight_Per_Case);
 PARAMETER(WRK.Maximum_Weight_Per_Case);
 PARAMETER(WRK.Number_Cases_On_A_Pallet);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(WRK.Package_Type_Code);
 PARAMETER(WRK.Default_Warehouse);
 PARAMETER(WRK.Fresh_Chilling_Time);
 PARAMETER(WRK.Misc_Tare_Weight);
 PARAMETER(WRK.Record_Status);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // LCL.AS Add/Change/Delete = CND.Add
 LCL.AS_Add_Change_Delete = 'A';

 // Call program PFS One Prod/Box Rec  XF.
 CALL PROGRAM(PFS One Prod/Box Rec  XF) ('PDK1XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.Item_Label_Line_1);
 PARAMETER(WRK.Item_Label_Line_2);
 PARAMETER(WRK.Item_Label_Line_3);
 PARAMETER(WRK.Unit_Weight);
 PARAMETER(WRK.Catch_Weight_Status);
 PARAMETER(WRK.Minimum_Weight_Per_Case);
 PARAMETER(WRK.Maximum_Weight_Per_Case);
 PARAMETER(WRK.Number_Cases_On_A_Pallet);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(WRK.Package_Type_Code);
 PARAMETER(WRK.Default_Warehouse);
 PARAMETER(WRK.Fresh_Chilling_Time);
 PARAMETER(WRK.Misc_Tare_Weight);
 PARAMETER(LCL.AS_Add_Change_Delete);

 ENDIF;

 ENDIF;

}


ENDIF;

