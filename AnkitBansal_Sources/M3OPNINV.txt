      *****************************************************************
      *
      *  Program number:  M3OPNINV
      *  Program name:    Write Workfile for OM Open Invoices- one order at a time
      *  Programmer:      Rose Centonze
      *  Date created:    10/14/2015
      *
      *  Program purpose: For the co/order parm, read the OM Sales history
      *                   file and create the OMP300 records, that will be
      *                   read in the next program (M3OPNSTG) to write the open
      *                   invoices to the M3 Stage Interface Head and Line tables.
      *
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fpkcwrel5  if   e           k disk
      * GL Account Codes by Company, Category Code
      *
     Fomhstpl0  if   e           k disk
      * OM Sales History File
      *
     Fpdiccpl1  if   e           k disk
      * OM Detail accrual File
      *
     Fpbamrel1  if   e           k disk
      * Accrual program extension file
      *
     Fcabzrel1  if   e           k disk
      * Company/item master
      *
     Fpdnerel0  if   e           k disk
      * Customer EXT file   (Key: NEBKC7)
      *
     Fpdnirel1  if   e           k disk
      * Co/Customer EXT file   (Key: niaic3, nibkc7)
      *
     Fpoc5rel0  if   e           k disk
      * Broker File         (Key: c5fxsx)
      *
     Fopexrel1  if   e           k disk
      * order types file    (Key: exjncd)
      *
     Ff4801     if   e           k disk
      * JDE Work Order Master  (Key: wadoco)
      *
     Ff0101     if   e           k disk
      * JDE Address Book    (Key: aban8)
      *
      *
     Ff0901     if   e             disk
      *   JDE Account master
      *
      *
     Fomp300    o    e             disk
      * OM Invoicing workfile
      *
      *
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D return          s              7
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
      * Save fields
      *
     D svdoc3xx        s                   like(xxdoc)
     D svdoc960        s                   like(xxdoc)
      *
     D svasdt          s                   like(f4gndt)
     D svord           s                   like(f4c4nb)
      *
     D svcust          s                   like(f4anc7)
     D svstcust        s                   like(f4bkc7)
     D svbocd          s                   like(f4bocd)
     d svcustype       s              2
     d svarcode        s              8
     D svacctco        s              3  0
     D svslco          s              3  0
     D svsub           s              8
      *
     d svslman         s                   like(f4r5cd)
     D svslaid         s                   like(gmaid)
     D svslmcu         s                   like(gmmcu)
     D svslsub         s                   like(gmsub)
     D svslobj         s                   like(gmobj)
     D svslsubtyp      s                   like(xxsubtype)
     D svsbl           s                   like(ich1ny)
     D svsblty         s                   like(omsblty)
      *
      * Accumulators
      *
     D artot           s             11  2
      *
      *
      * Workfields
      *
     D wknumco         s              3  0
     D wkusedesc       s              1
      *
     d wkglcode        s                   like(cwdmcd)
     D wkaid           s                   like(gmaid)
     D wkmcu           s                   like(gmmcu)
     D wksub           s                   like(gmsub)
     D wkobj           s                   like(gmobj)
     D wksubtype       s                   like(xxsubtype)
     D wkvndr          s                   like(aban8)
     D wkerr           s                   like(omsblfl)
     D wkcust          s                   like(f4anc7)
     D wkcacode        s                   like(cwlgst)
     D wkamt           s                   like(omamt)
     D wksblcd         s                   like(icfotx)
     D wkcode          s                   like(gmsub)
     D wkbrkr          s                   like(ichhaa)
     D wkvalv          s              1
     D wkhmst          s                   like(nihmst)
      *
      *
      * Parm fields
      *
     D xxerror         s              1
      *
     D xxalphco        s              3  0
     D xxacctco        s              3  0
     D xxnumco         s              3  0
     D xxalphor        s              7  0
      *
     d xxsy            s              4
     d xxidx           s              2
     d xxdoc           s              8  0
      *
     d xxcust          s                   like(f4anc7)
     d xxcustnm        s             30
      *
     d xxglcode        s              8
     d xxdbcode        s              8
     d xxcrcode        s              8
      *
     d xxsblcd         s              1
     d xxsls           s              3
     d xxslsnm         s             30
      *
     d xxsubtype       s              1
     d xxbalsheet      s              1
      *
     d xxcode          s              3
     d xxflag          s              1
     d xxtext          s             30
     d xxtype          s              2
      *
     d xxsym           s              1
     d xxomod          s              1
     d xximod          s              1
     d xxani           s             29
     d xxerrm          s              4
      *
      *
      ****************************************************************
      * Data structures
      ****************************************************************
      *
      *
     d i0901ds         ds           500
     d xxco                                like(gmco)
     d xxaid                               like(gmaid)
     d xxmcu                               like(gmmcu)
     d xxobj                               like(gmobj)
     d xxsub                               like(gmsub)
     d xxans                               like(gmans)
     d xxdl01                              like(gmdl01)
     d xxlda                               like(gmlda)
     d xxbpc                               like(gmbpc)
     d xxpec                               like(gmpec)
     d xxbill                              like(gmbill)
     d xxcrcd                              like(gmcrcd)
     d xxum                                like(gmum)
     d xxr001                              like(gmr001)
     d xxr002                              like(gmr002)
     d xxr003                              like(gmr003)
     d xxr004                              like(gmr004)
     d xxr005                              like(gmr005)
     d xxr006                              like(gmr006)
     d xxr007                              like(gmr007)
     d xxr008                              like(gmr008)
     d xxr009                              like(gmr009)
     d xxr010                              like(gmr010)
     d xxr011                              like(gmr011)
     d xxr012                              like(gmr012)
     d xxr013                              like(gmr013)
     d xxr014                              like(gmr014)
     d xxr015                              like(gmr015)
     d xxr016                              like(gmr016)
     d xxr017                              like(gmr017)
     d xxr018                              like(gmr018)
     d xxr019                              like(gmr019)
     d xxr020                              like(gmr020)
     d xxr021                              like(gmr021)
     d xxr022                              like(gmr022)
     d xxr023                              like(gmr023)
     d xxobja                              like(gmobja)
     d xxsuba                              like(gmsuba)
     d xxwcmp                              like(gmwcmp)
     d xxcct                               like(gmcct)
     d xxerc                               like(gmerc)
     d xxhtc                               like(gmhtc)
     d xxqlda                              like(gmqlda)
     d xxccc                               like(gmccc)
     d xxfmod                              like(gmfmod)
     d xxuser                              like(gmuser)
     d xxpid                               like(gmpid)
     d xxjobn                              like(gmjobn)
     d xxupmj                              like(gmupmj)
     d xxupmt                              like(gmupmt)
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      /eject
      *-------------------------------------------------------------------------------------
      * Mainline
      *-------------------------------------------------------------------------------------
      *
      * Read all sales history for parm order number  .
      *

     C     key05         setll     @FHSTD2
      *
     C                   dou       *in90 = *on                                  Main do
     C     key05         reade     @FHSTD2                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Retrieve the affiliate customer code for every ship to customer.
      *
     C     key04         chain     pdnirel1                           95
     C                   if        *in95 = *off
     C                   move      nihmst        wkhmst
     C                   else                                                    95 = on
     C                   move      *blanks       wkhmst
     C                   endif                                                   95 = off
      *
      * Control break logic
      *   1) first time logic
      *   2) break on order number
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   exsr      $docnbr
     C                   exsr      $neworder
      *
     C                   when      f4c4nb <> svord
     C                   exsr      $brkorder
     C                   endsl
      *
      * For every record, always write a Sales record to the workfile.
      *
     C                   exsr      $sales
      *
      * If there is Absorbed Freight, write 2 records:                   comment for this pgm
      *   1) a balance sheet record...credit
      *   2) an expense record .......debit
      *
     C*****              if        f4ulva <> 0                           comment
     C*****              exsr      $freight                                 "
     C*****              endif                                              "
      *
      *
      * Write Workfile Records for:
      *   History Detail Accruals
      *
     C*****              exsr      $accruals                                 "
      *
      * If this was an inter-plant transfer, w///e the additional cost of sales
      * account to increase the cost of sales for the receiving plant.  This is
      * different from an inter-company transaction in that "IC" does third party
      * averaging and "IP" does not.
      *
     C*****              if        svbocd = 'IP'
     C*****              exsr      $ipsale
     C*****              endif
      *
      * Update Sales History record - use document # associated with the
      *  company that was passed in as a parm.
      *
     C*****              if        wknumco = 960
     C*****              z-add     svdoc960      f4cknb                         960 G/L Document #
     C*****              else
     C*****              z-add     svdoc3xx      f4cknb                         3xx G/L Document #
     C*****              endif
      * posted flag
     C                   move      'P'           f4bmst                         G/L Update Status
     C****               update    @hstpfe
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *-----------------
      * EOF PROCESSING
      *-----------------
      *
      * Write out the last the A/R Summary workfile record
      *
     C                   if        first = no  and svbocd <> 'IP'
     C                   exsr      $arsum
     C                   endif
      *
      * Call the Reclaim Resouce program to close any files left open in
      * called programs.
      *
     C                   call      'UTRCRSC'
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a workfile record
      *-----------------------------------------------------------------------------------
      *
     C     $wrt300       begsr
      *
     C***                z-add     svacctco      omco#                          Post Account CO
     C                   z-add     wknumco       omco#                          Parm Account CO NEW
      *
      * use document # associated with the POSTING Company
      *
     C                   if        svacctco = 960                               Post Account CO
     C                   z-add     svdoc960      omdoc#                         960 G/L Document #
     C                   else
     C                   z-add     svdoc3xx      omdoc#                         3xx G/L Document #
     C                   endif
      *
     C                   z-add     svcust        omcust                         A/R Customer #
     C                   z-add     svord         omord#                         Order #
     C                   z-add     svasdt        omasdt                         Actual Ship Date
     C                   move      svslman       omsls#                         Salesperson
      *
      * Make a final check that cost center/object/sub is a valid combination.
      *
     C                   call      'X0901'
     C                   parm                    xxsym
     C                   parm      '1'           xxomod                         Output Mode
     C                   parm      '9'           xximod                         Input Mode
     C     wkaid         parm      *blank        xxani                          Account ID
     C                   parm      wkmcu         xxmcu                          Cost Center
     C                   parm      wkobj         xxobj                          Object
     C                   parm      wksub         xxsub                          Sub Code
     C                   parm                    xxerrm                         Error Flag
     C                   parm                    i0901ds                        All 901 fields
      *
     C                   if        xxerrm = *blank
     C                   move      wkaid         omaid                          Account ID
     C                   else
     C                   move      *blank        omaid                          Account ID
     C                   endif
      *
      * Always write the cost center, object, and sub code to the workfile even
      * if it is invalid.  This will print on report OMINVJDE3 and will allow the
      * user to see what account number needs to be set up in JDE.
      *
     C                   move      wkmcu         ommcu                          Cost Center
     C                   move      wkobj         omobj                          Object
     C                   move      wksub         omsub                          Sub Code
      *
      * Write workfile record
      *
     C                   if        omamt <> *zero
     C                               or omunit <> *zero
     C                   write     omp300r
     C                   endif
      *
      * Many fields in the workfile record are populated from the initial Sales record
      * and then those values are retained for all the 'other' types of workfile records
      * (Freight, accruals, etc.) that are written for an order. So, we do not 'clear'
      * the workfile record after each 'write'. The workfile record is cleared for
      * each new order.
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a Sales record to the Workfile
      *-----------------------------------------------------------------------------------
      *
     C     $sales        begsr
      *
      * Clear workfile record fields that are not populated for the Sales record.
      *
     C                   move      *blank        omftyp                         Financial Type
     C                   move      *blank        omcode                         Fin/Acc Code
     C                   move      *blank        omtext                         Descr
     C                   move      *blanks       omsblty                        Subledger Type
     C                   move      *blanks       omsbl                          Subledger
     C                   move      *blanks       omsblfl                        Subledger Flag
      *
      * Populate workfile records fields.
      *
     C                   z-add     f4dpnb        omseq#                         Order Seq #
     C                   z-add     f4uenb        omsec#                         Secondary Seq #
      *
     C                   move      f4jncd        omotyp                         Order Type
     c     omotyp        ifeq      'CB'
     c                   move      'CM'          omotyp
     c                   end
     C                   z-add     f4conb        ominv#                         Invoice #
      *
     C                   z-add     f4s5nb        omsitm                         Shipped Item Code
     C                   z-add     f4rhnb        omigrp                         Item Group
     C                   z-add     f4rinb        omicls                         Item Class
      *
      * Retrieve Item Structure Class Code description.
      *
     C                   call      'PDA4XFR'
     C                   parm                    return
     C                   parm                    f4rinb                         Item Class
     C                   parm      *blank        omitxt                         Item Descr
      *
      *
      * Populate amount and accumulate billing detail gross dollars
      * for later writing of the A/R summary record for the order if this is
      * not an interplant customer.
      *
      *  Write out extended amount for the sales account.  We don't want to include
      *  any revenue adjustments in the sales account since we are writing a separate
      *  expense record in the history detail accruals.
      *
      ****RMC  FOR THIS PROCESS USE THE BILLING DTL GROSS DOLLARS THAT HAS THE REV ADJ$
      ****RMC  instead.. take the extended amount and + shipping dtl accruals that print on Invoice
      *
     C**   f4kdva        mult      -1            omamt   *Was using this sans the accruals 11/19
     C**** f4ayva        mult      -1            omamt                          Amount
      *
      * Add in the Shipping Detail Accrual $$ that print on the invoice   (PDICCPL1)
      *
     c*****              z-add     f4kdva        wkkdva           11 2          work amt
     c                   z-add     f4ayva        wkkdva           11 2          work amt
     c                   setoff                                       69
     c     key01         setll     @iccps0
     c     *in69         doweq     '0'
     c     key01         reade     @iccps0                                69
     c     *in69         ifeq      '0'
     c     icfltx        andeq     'Y'                                          print on Inv = Yes
     c                   add       icayva        wkkdva
     c                   end
     c                   enddo
      *
     C     wkkdva        mult      -1            omamt                          Amount  for ordseq
      *
     C                   if        svcustype <> 'IP'
     C                   add       wkkdva        artot                          accum + for sum rcd
     C                   endif
      *
      * If the yes/no value in the oms field "affect Sales pnds status" is a "Yes"
      * then we want to write the pounds for everyone except company 361 (HPB) and 369 (HPB).
      * If BioEnergy or BioDiesel, we want to write quantity billed which holds net gallons.
      *
     C                   select
     C                   when      f4vast = no
     C                   z-add     0             omunit
     C                   other
      *
     C                   if        wknumco = 361 or wknumco = 369               HPB
     C                   z-add     f4exqt        omunit                         qty billed
     C                   else                                                   not HPB
     C                   z-add     f4bywg        omunit                         weight billed
     C                   endif                                                  HPB
      *
      * If this is a credit memo and it has a debit wgt, re-set the units to negative
      *
      * beg:  bg062507-removed hard coding of c/m types.  Will now check the billing activity
     C*                type in the order types file.
      *
     C*****              if        f4jncd = 'CM' or f4jncd = 'CB'               c/m or c/b
      *
     C                   if        omunit > 0                                   db wgt > 0
      *
     C     f4jncd        chain     opexrel1                           89
     C                   if        *in89 = *off and exobst = '2'                 2 = c/m
     C                   z-sub     omunit        omunit
     C                   endif                                                   89 = off
      *
     C                   endif                                                   db wgt > 0
      * end:  bg062507
      *
     C                   endsl
      *
      * Move the saved Sales Account values into the generic account fields.
      * (These values are retrieved/saved when a 'new' order is encountered.)
      *
     C                   move      svslaid       wkaid                          Account ID
     C                   move      svslmcu       wkmcu                          Cost Center
     C                   move      svslobj       wkobj                          Object
     C                   z-add     svslco        svacctco                       Post Account CO
     C                   move      svslsubtyp    wksubtype                      sub type
     C*
      * Get the sub code for the item.
      *
     C                   exsr      $subact
      *
      * Write a workfile record.
      *
     C                   exsr      $wrt300
     C                   z-add     0             omunit
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write Inter plant Sales Record to the workfile
      *-----------------------------------------------------------------------------------
      *
     C     $ipsale       begsr
      *
      * Populate workfile records fields.
      *
     C                   z-add     f4dpnb        omseq#                         Order Seq #
     C                   z-add     f4uenb        omsec#                         Secondary Seq #
      *
     C                   move      f4jncd        omotyp                         Order Type
     c     omotyp        ifeq      'CB'
     c                   move      'CM'          omotyp
     c                   end
     C                   z-add     f4conb        ominv#                         Invoice #
      *
     C                   z-add     f4s5nb        omsitm                         Shipped Item Code
     C                   z-add     f4rhnb        omigrp                         Item Group
     C                   z-add     f4rinb        omicls                         Item Class
      *
      * Retrieve Item Structure Class Code description.
      *
     C                   call      'PDA4XFR'
     C                   parm                    return
     C                   parm                    f4rinb                         Item Class
     C                   parm      *blank        omitxt                         Item Descr
      *
      * Populate amount with billing detail gross dollars
      *
     C                   z-add     f4kdva        omamt                          Amount
      *
      * If the yes/no value in the oms field "affect Sales pnds status" is a "Yes"
      * then we want to write the pounds for everyone except company 361 (HPB) or 369 HPB).
      * If BioEnergy or bioDiesel, we want to write quantity billed which holds net gallons.
      *
     C                   select
     C                   when      f4vast = no
     C                   z-add     0             omunit
     C                   other
      *
     C                   if        wknumco = 361 or wknumco = 369               HPB
     C                   z-add     f4exqt        omunit                         qty billed
     C                   else                                                   not HPB
     C                   z-add     f4bywg        omunit                         weight billed
     C                   endif                                                  HPB
      *
      * If this is a credit memo and it has a debit wgt, re-set the units to negative
      *
     C                   if        omunit > 0                                   db wgt > 0
      *
     C     f4jncd        chain     opexrel1                           89
     C                   if        *in89 = *off and exobst = '2'                 2 = c/m
     C                   z-sub     omunit        omunit
     C                   endif                                                   89 = off
      *
     C                   endif                                                   db wgt > 0
     C                   endsl
      *
     C                   if        f4jncd = 'OR'
     C                   movel(p)  'OMSLSIP '    wkglcode
     C                   else
     C                   movel(p)  'OMCLMIP '    wkglcode
     C                   endif
      *
      * get the GL Account #
      *
     C                   exsr      $account
      *
      *  Set the cost center up with the posting company number associated with wkglcode
      *
     C                   move      xxacctco      wkmcu
      *
      * write the record
      *
     C                   exsr      $wrt300
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write Absorbed Freight records to the workfile
      *-----------------------------------------------------------------------------------
      *
     C     $freight      begsr
      *
      * Clear workfile record fields that are not populated for the Freight records.
      *
     C                   move      *blank        omftyp                         Financial Type
     C                   move      *blank        omcode                         Fin/ACC Code
     C                   move      *blank        omtext                         Description
      * setup work amt
     C                   z-add     f4ulva        wkamt                          Amount
      *
      * setup the Account Category Codes and process ALL records that
      *    apply to the Freight journal entries.  InterPlant customers will have regular
      *    freight only.
      *
      *  1) Freight Expense
      *
     C                   if        svcustype = 'IC'                             Cust Type
     C                             or svcustype = 'IS'
      *
      *  Determine which code to use based on affiliated customer code
      *
     C                   if        wkhmst <> 'A '                               not affiliated
     C                   eval      wkcacode = 'FRI'                             Fgt IC
     C                   else                                                   is affiliated
     C                   eval      wkcacode = 'FRA'                             Fgt Affiliated
     C                   endif                                                  not affiliated
      *
     C                   else
     C                   eval      wkcacode = 'FRR'                             Fgt Regular
     C                   endif
      *
      * We want to use the description for the accounts retrieved out of PKCWREP for
      * freight only.  Accruals description still need to come out of the accruals file
      * because it is more descriptive.
      *
     C                   eval      wkusedesc = 'Y'                              Fgt Descr Flag
      *
     C                   exsr      $getaccts
      *
      *  2) Freight Accruals
     C                   eval      wkcacode = 'FRT'                             Fgt Accruals
      *
     C                   exsr      $getaccts
      *
      * Reset the description flag so as not to retrieve the description when processing
      * accruals
      *
     C                   eval      wkusedesc = 'N'                              Fgt Descr Flag
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * get all the Account Codes within an Account Category Code and execute the SR to
      *     write the records to the Work File for FREIGHT
      *-----------------------------------------------------------------------------------
      *
     C     $getaccts     begsr
      *
      * Read all the records in GL Account code master file to get all the records
      *   for the Account Category Code passed into this subroutine
      *
     C     key03         setll     pkcwrel5
     C                   dou       *in96 = *on                                  Main do
     C     key03         reade     pkcwrel5                               96
     C                   if        *in96 = *off                                 If not EOF
      *
     C                   eval      wkglcode = cwdmcd                            GL acct code
      *
      * Determine whether or not to use the description from this file.  We only want this
      * description for freight records.
      *
     C                   if        wkusedesc = 'Y'
     C                   movel(p)  cwggtx        omtext
     C                   endif
      *
      * set the sign
     C                   if        cwygst = '-'                                 +/- Sign
     C                   eval      omamt = wkamt * -1                           negative
     C                   else
     C                   eval      omamt = wkamt                                positive
     C                   endif
      * get the GL Account #
     C                   exsr      $account
      * write the record
     C                   exsr      $wrt300
      *
     C                   endif
     C                   enddo
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Logic for control break on Order Number
      *-----------------------------------------------------------------------------------
      *
     C     $brkorder     begsr
      *
      * Write an A/R Summary record to the workfile for the old order if not an inter plant
      * transfer.
      *
     C                   if        svbocd <> 'IP'
     C                   exsr      $arsum
     C                   endif
      *
      * If Actual Ship Date has changed, retrieve a new Document Number.
      *
     C                   if        svasdt <> f4gndt
     C                   exsr      $docnbr
     C                   endif
      *
      * Get info for new order
      *
     C                   exsr      $neworder
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve G/L Info for the new order
      *-----------------------------------------------------------------------------------
      *
     C     $neworder     begsr
      *
      * Save control fields
      *
     C                   z-add     f4c4nb        svord                          Order #
     C                   z-add     f4anc7        svcust                         A/R Customer #
     C                   z-add     f4bkc7        svstcust                       Ship To Customer
     C                   move      f4r5cd        svslman                        Salesperson
     C                   move      f4bocd        svbocd                         Type code
      *
      * Retrieve G/L Code and Customer Type for Company/Customer
      * (Save these for ultimately writing the A/R Summary record.)
      *
     C                   call      'PDZFXFR'
     C                   parm                    return
     C                   parm      wknumco       xxnumco                        Co # passed in
     C                   parm      svcust        xxcust                         A/R Customer
     C     svcustype     parm      *blank        xxtype
     C     svarcode      parm      *blank        xxglcode
     C                   parm      *blank        xxcustnm
     C                   parm      *blank        xxsls
     C                   parm      *blank        xxslsnm
     C                   parm      *blank        xxerror
      *
      *
      * Retrieve the G/L Account info for this Sales Order Type
      * (Save these for writing each Sales record.)
      *
     C                   exsr      $glsales
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve G/L Sales account info
      *-----------------------------------------------------------------------------------
      *
     C     $glsales      begsr
      *
      * Retrieve G/L Code for Sales Order Type
      *
     C                   call      'PDA3XFR'
     C                   parm                    return
     C                   parm                    f4jncd                         Order Type
     C                   parm      *blank        xxglcode
      *
      * Set up G/L Code value to use on the account code retrieved from the Order Type
      *
     C                   movel(p)  xxglcode      wkglcode
      *
      *      If the Customer Type was Inter Company, Inter Plant, or Inter Co Sales Agreement,
      *          override the GL code and set up a hardcoded value
      *
     C                   if        svcustype = 'IC'
     C                             or svcustype = 'IP'
     C                             or svcustype = 'IS'
      *
     C                   if        f4jncd = 'OR'
      *
     C                   if        wkhmst <> 'A '
     C                   movel(p)  'OMSLSIC '    wkglcode
     C                   else
     C                   movel(p)  'OMSLSAF '    wkglcode
     C                   endif
      *
     C                   else
     C                   if        wkhmst <> 'A '
     C                   movel(p)  'OMCLMIC '    wkglcode
     C                   else
     C                   movel(p)  'OMCLMAF '    wkglcode
     C                   endif
      *
     C                   endif
     C                   endif
      *
      * Now that the G/L Code value is set, go retrieve the account values
      * for a Sale.
     C                   exsr      $account
      *
      * Save the account information that was retrieved for this Sales record to
      * use in writing:
      *    1) all the sales records for this order
      *    2) any Accrual records for this order
      *
     C                   move      wkmcu         svslmcu                        Cost Center
     C                   move      wkobj         svslobj                        Object
     C                   move      wksub         svslsub                        Sub Code
     C                   move      wkaid         svslaid                        Account ID
     C                   move      wksubtype     svslsubtyp                     sub type
     C                   z-add     xxacctco      svslco                         company
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write an A/R Summary record to the workfile for this order
      *-----------------------------------------------------------------------------------
      *
     C     $arsum        begsr
      *
      * Clear workfile record fields that are not populated for the A/R Summary
      * record.
     C                   move      *blank        omftyp                         Financial Type
     C                   move      *blank        omcode                         Fin/ACC Code
     C                   move      *blank        omtext                         Text
      *
      * Move the G/L Code for this customer into a workfield that will
      * be passed as a parm on the call to the Account Retrieval program.
      *
     C                   move      svarcode      wkglcode
     C                   exsr      $account
      *
      * Write the A/R Summary workfile record
      *
     C                   z-add     0             omseq#                         Order Seq #
     C                   z-add     0             omsec#                         Secondary Seq #
     C                   z-add     artot         omamt                          Amount
     C                   exsr      $wrt300
      *
      * In preparation for the next order,
      *     Initialize the accumualor field
      *     Clear the workfile record
      *
     C                   z-add     0             artot
     C                   clear                   omp300r
      *
     C                   endsr
      *
      /eject
      *----------------------------------------------------------------
      * Retrieve G/L Account
      *----------------------------------------------------------------
      *
     C     $account      begsr
      *
      * Clear account workfields.
      *
     C                   move      *blank        wkaid                          Account ID
     C                   move      *blank        wkmcu                          Cost Center
     C                   move      *blank        wkobj                          Object
     C                   move      *blank        wksub                          Sub Code
      *
      * Retrieve Account I.D. associated with G/L Code.
      *
     C                   call      'PKTIXFR'
     C                   parm                    return
     C                   parm      wknumco       xxnumco                        Co # passed in
     C                   parm      wkglcode      xxglcode
     C     wkaid         parm      *blank        xxaid
     C     wksubtype     parm      *blank        xxsubtype
     C                   parm      *blank        xxbalsheet
     C                   parm      *zeros        xxacctco
      *
     C                   z-add     xxacctco      svacctco                        Post Account CO
      *
      * Retrieve cost center/object/sub associated with Account ID just retrieved.
      * (1 = Short Act I.D., 9 = Individual cost center/object/sub.)
      *
     C                   call      'X0901'
     C                   parm                    xxsym
     C                   parm      '9'           xxomod
     C                   parm      '1'           xximod
     C                   parm      wkaid         xxani
     C                   parm      *blank        xxmcu
     C                   parm      *blank        xxobj
     C                   parm      *blank        xxsub
     C                   parm      *blank        xxerrm
     C                   parm      *blank        i0901ds
      *
      * If retrieval was successful,
      *   1) populate the Object with the retrieved value
      *   2) populate the Cost Center and Subsidiary using either
      *      Structure 1 or Structure 2 logic--depending on whether this is
      *      considered 'sales'.
      *
     C                   if        xxerrm = *blank                              If successful
     C                   movel     xxobj         wkobj
      *
      * If the Balance Sheet flag was 'YES',
      *   default Company Number into Cost Center from the G/L Account codes file.
      * otherwise
      *   use the Cost Center associated with the Account I.D.
      *
     C                   if        xxbalsheet = yes
     C                   move      xxacctco      wkmcu                          Co # retrieved
     C                   else
     C                   move      xxmcu         wkmcu                          Cost Center
     C                   endif
      *
      *------------------------------------------
      *           Determine what sub code to use
      *------------------------------------------
      *
     C                   exsr      $subact
      *
      * If a subledger for this account is required, process either the customer number or the
      * broker number depending upon the type of accrual.
      *
     C                   if        xxpec = 'L'                                  subledger required
     C                   exsr      $sbl
     C                   else                                                   subledger not req.
     C                   move      *blanks       omsblty                        Subledger type
     C                   move      *blanks       omsbl                          Subledger
     C                   move      ' '           omsblfl                        Subledger Error Flag
     C                   endif                                                  subledger required
      *
     C                   endif                                                  If successful
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Retrieve G/L Sub code
      *----------------------------------------------------------------
      *
     C     $subact       begsr
      *
     C                   Select
      *
      * If the Sub Account Type is 'I', retrieve sub code from category code 4
      * in the company/item master. (This is where the old class number is stored.)
      *
     C                   when      wksubtype = 'I'
      *
     C     key02         chain     cabzrel1                           92
     C                   if        *in92 = *off
     C                   movel     bzsycd        wksub                          Item Category Cd 4
     C                   else
     C                   move      *blank        wksub
     C                   endif
      *
      * If the Sub Account Type is 'S',
      *   default the original Salesperson Number into the Sub Code
      *
     C                   when      wksubtype = 'S'
     C                   movel     svslman       wksub
      *
      * If the Sub Account Type is 'A',
      *   default the accrual code into the sub code
      *    if this is a "CM" (commission) accrual type we need to hardcode
      *       "BRK" into all of the Brokerage sub codes if it is not the "CAS" code
      *
     C                   when      wksubtype = 'A'
     C                   movel     xxcode        wksub                          accrual code
      *
     C                   if        wkcacode ='CM' and wksub <> 'CAS'            commission
     C                   movel     'BRK'         wksub                          not CAS
     C                   endif
      *
      * If the Sub Account Type is 'H',
      *   default the sub code that was saved when reading the history detail accrual file.
      *
     C                   when      wksubtype = 'H'
     C                   movel     svsub         wksub
      *
      * Otherwise
      *   use the Sub Code associated with the Account I.D.
      *
     C                   other
     C                   move      xxsub         wksub
     C                   endsl
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Subledger processing
      *-----------------------------------------------------------------------------------
      *
     C     $sbl          begsr
      *
      * subledger is right justified, zero filled
      *
     C                   move      '00000000'    omsbl                          Subledger
     C                   move      *blanks       omsblty                        Subledger Type
     C                   move      *blanks       omsblfl                        Subledger Error Flag
      *
     C* Determine what to put in the subledger field....
      *
     C                   select
      * A/R customer
     C                   when      xxsblcd = 'A'                                a/r customer
     C                   move      svcust        wkcust
     C                   exsr      $rtvglv
      * Ship To Customer
      *
     C                   when      xxsblcd = 'S'                                shipto customer
     C                   move      svstcust      wkcust
     C                   exsr      $rtvglv
      *
      * Broker or Buyer Group
      *--will need to use the ship to customer number to retrieve the broker info
      *
     C                   when      xxsblcd = 'B' or xxsblcd = 'G'               broker
     C                   movel     svstcust      wkcust
     C                   exsr      $rtvglv
      *
      * Product
      *--will need to use the subledger retrieved from the history detail accrual file
      *
     C                   when      xxsblcd = 'P'                                Product
      *
      *  if accrual type was a coupon, validate the subledger against the work order file
      *
     C                   select
      *
     C                   when      svsblty = 'W'                                work order
     C     svsbl         chain     i4801                              93
     C                   if        *in93 = *on                                  invalid vendor
     C                   move      'Y'           omsblfl                        subledger error flag
     C                   else                                                   valid work order
     C                   move      ' '           omsblfl
     C                   endif                                                  invalid work order
      *
     C                   move      svsbl         omsbl                          subledger
     C                   move      svsblty       omsblty                        subledger type
      *
      *  if accrual type is a royalty fee, validate the subledger against the vendor master
      *
     C                   when      svsblty = 'A'                                vendor
     C                   move      svsbl         wkvndr
     C     wkvndr        chain     i0101                              93
     C                   if        *in93 = *on                                  invalid vendor
     C                   move      'Y'           omsblfl                        subledger error flag
     C                   else                                                   valid vendor
     C                   move      ' '           omsblfl
     C                   endif                                                  invalid vendor
     C                   move      svsbl         omsbl                          subledger
     C                   move      svsblty       omsblty                        subledger type
      *
     C                   endsl
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve the G/L Vendor number
      *---------------------------------------------------------------
      *
     C     $rtvglv       begsr
     C                   move      ' '           wkerr
     C                   move      'A'           omsblty                       subledger type
      *
      *    Retrieve the G/L vendor number.
      *
     C     wkcust        chain     pdnerel0                           93
     C                   if        *in93 = *off                                 have G/L Vendor
      *
     C                   if        xxsblcd <> 'B' and xxsblcd <> 'G'            not broker
     C                   move      neaac8        omsbl                          G/L Vendor #
     C                   else                                                   broker
      *
      *    If this is a broker or buyer group,                              r master.
      *    the G/L vendor number is stored in the broker master.
      *
     C     wkbrkr        chain     poc5rel0                           94
     C                   if        *in94 = *off                                 have brkr #
     C                   move      c5dat1        omsbl
     C                   else                                                   no brkr #
      *
      *    If broker code is not setup, use the broker code as the subledger.
      *    The subleger will be blanked out before writing to JDE in OMINVJDE2
      *    but this will allow the user to see what was there.
      *
     C                   movel     wkbrkr        omsbl
     C                   move      'Y'           wkerr
     C                   endif                                                  have brkr #
     C                   endif                                                  not broker
      *
     C                   else                                                   no broker code
      *
      *    If the shipto or A/R customer is not in the Customer EXT file,
      *    then default in the invalid customer number as the subledger and                      .
      *    flag as an error.  The subleger will be blanked out before writing
      *    to JDE in OMINVJDE2 but this will allow the user to see what was there.
      *
     C                   move      wkcust        omsbl
     C                   move      'Y'           wkerr
     C                   endif                                                  Have G/L Vendor
      *
      * If a/r customer, ship to customer or broker number is valid, validate
      * number against the vendor master
      *
     C                   if        wkerr = ' '                                  no errors
     C                   move      omsbl         wkvndr
     C     wkvndr        chain     i0101                              93
     C                   if        *in93 = *on                                  invalid vendor
     C                   move      'Y'           omsblfl                        subledger error flag
     C                   else                                                   valid vendor
     C                   move      ' '           omsblfl
     C                   endif                                                  invalid vendor
     C                   endif                                                  no errors
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Retrieve the document numbers from JDE
      *---------------------------------------------------------------
      *
     C     $docnbr       begsr
      *
     C**                 call      'X0010 '
     C*                  parm      '09  '        xxsy
     C*                  parm      '02'          xxidx
     C*    svdoc3xx      parm      0             xxdoc
      *
      * If the Invoiced Company (input parm) is = 960, we need to
      * get a separate document  # for the 960 journal entries
      *
     C*                  if        wknumco = 960
     C*                  call      'X0010 '
     C*                  parm      '09  '        xxsy
     C*                  parm      '02'          xxidx
     C*    svdoc960      parm      0             xxdoc
     C*                  endif
      *
      * Save Actual Ship Date--the field that triggers the logic to get a new
      * doc number.
      *
     C                   z-add     f4gndt        svasdt
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    return
     C                   parm                    xxalphco
     C                   parm                    xxalphor
      *
      * Get the incoming alpha Company Number/ order into a numeric field.
      *
     C                   move      xxalphco      wknumco
     C                   move      xxalphor      f4c4nb
      *
      * Key lists
      *
     C     key05         klist
     C                   kfld                    wknumco                        Co # passed in
     C                   kfld                    f4c4nb                         Order #
     C     key01         klist
     C                   kfld                    wknumco                        Co # passed in
     C                   kfld                    f4c4nb                         Order #
     C                   kfld                    f4dpnb                         Order Sequence #
     C                   kfld                    f4uenb                         Secondary Seq #
      *
     C     key02         klist
     C                   kfld                    wknumco                        Co # passed in
     C                   kfld                    f4s5nb                         Shipped Item Code
      *
     C     key03         klist
     C                   kfld                    wknumco                        Co # passed in
     C                   kfld                    wkcacode                       GL Acct cat cope
      *
     C     key04         klist
     C                   kfld                    wknumco                        Co # passed in
     C                   kfld                    f4anc7                         ship to customer
      *
     C                   endsr
      /eject
