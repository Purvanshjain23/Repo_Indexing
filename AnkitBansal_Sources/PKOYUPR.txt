/***************************************************************** */
/*                                                                 */
/*  PROGRAM NUMBER:  PKOYUPR                                       */
/*  PROGRAM NAME:    BALANCE TO KILL EDIT                          */
/*  PROGRAMMER:      SUSAN L. MASON                                */
/*  CREATE DATE:     03/16/95                                      */
/*                                                                 */
/*  FUNCTION:        THIS CL IS SUBMITTED WITH EXECUTE MESSAGE     */
/*                   FROM PMT BALANCE TO KILL                      */
/*                   USER OPTIONS ARE PASSED THROUGH THE PARMS.    */
/*                                                                 */
/*******************************************************************/
/*  Modification History                                           */
/*                                                                 */
/*  04/20/95                                                       */
/*  Rose M. CENTONZE Added SBDPRTOVR code and command.             */
/*  03/06/97                                                       */
/*  PURVA DROGE      Added &ELOC PARAMETER THAT INDICATES IF THE   */
/*                    EVAL LOSS EXCEP REPORT NEEDS TO OUTOUT TO    */
/*  04/16/97                                                       */
/*  SUSAN MASON      SEND IN SHIFT                                 */
/*                                                                 */
/*  12/17/98                                                       */
/*  ROSE CENTONZE    SEND IN ALPHA KILL DATE FOR Y2K               */
/*                                                                 */
/*  05/26//99                                                      */
/*  ROSE CENTONZE    PASS ADDTNL PARM TO PKLHXFR FOR EXECUTION LOC */
/*                   = 'U' AND BAL STS = ' ' OR 'E'                */
/*******************************************************************/
             PGM        PARM(&RTN &PDEV &HOLD &SAVE &XCOPIES &XCOMP +
                          &XKLDT &APP &ELOC &ESHF)
/* PRINT OPTION PARMS                                             */
             DCL        VAR(&RTN) TYPE(*CHAR) LEN(7)
             DCL        VAR(&PDEV) TYPE(*CHAR) LEN(10)
             DCL        VAR(&HOLD) TYPE(*CHAR) LEN(4)
             DCL        VAR(&SAVE) TYPE(*CHAR) LEN(4)
             DCL        VAR(&XCOPIES) TYPE(*CHAR) LEN(15)

/* FUNCTION SPECIFIC PARMS                                        */
             DCL        VAR(&XCOMP) TYPE(*CHAR) LEN(15)
             DCL        VAR(&XKLDT) TYPE(*CHAR) LEN(7)
             DCL        VAR(&APP) TYPE(*CHAR) LEN(33)
             DCL        VAR(&LPP) TYPE(*CHAR) LEN(40)
             DCL        VAR(&RUSR) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ELOC) TYPE(*CHAR) LEN(1)
             DCL        VAR(&ESHF) TYPE(*CHAR) LEN(1)
             DCL        VAR(&BALSTS) TYPE(*CHAR) LEN(1)

/* NUMERIC VARIABLES                                             */
             DCL        VAR(&COPIES) TYPE(*DEC) LEN(2 0)
             DCL        VAR(&COMP) TYPE(*DEC) LEN(3 0)
             DCL        VAR(&KDTE) TYPE(*DEC) LEN(7 0) VALUE(0000000)
             DCL        VAR(&BOCO) TYPE(*DEC) LEN(3 0) VALUE(000)
             DCL        VAR(&BOHD) TYPE(*DEC) LEN(5 0) VALUE(000)
             DCL        VAR(&BOLD) TYPE(*DEC) LEN(5 0) VALUE(00000)
             DCL        VAR(&TONO) TYPE(*DEC) LEN(5 0) VALUE(00000)
             DCL        VAR(&TODTE) TYPE(*DEC) LEN(7 0) VALUE(0000000)

/* SBDPRTOVR VARIABLE                                          */
             DCL        VAR(&CMD) TYPE(*CHAR) LEN(512)

/* CHANGE ALPHA PARMS TO NUMERIC VARIABLES                       */
             CHGVAR     VAR(&COPIES) VALUE(&XCOPIES)
             CHGVAR     VAR(&COMP) VALUE(&XCOMP)
             CHGVAR     VAR(&KDTE) VALUE(&XKLDT)
             CHGVAR     VAR(&LPP) VALUE(&APP)

/* CREATE PRINTER FILE OVERRIDE CODE                            */
             IF         COND(&ELOC *EQ 'U') +
             THEN(DO)
               OVRPRTF    FILE(PKLIPFR$) OUTQ(GUYSPLF)
             CHGVAR     VAR(&BALSTS) VALUE(' ')
             ENDDO
             ELSE DO
               SBDPRTOVR  CMDVAR(&CMD) FILE(PKLIPFR$) OUTQ(&PDEV) +
                          COPIES(&COPIES) HOLD(&HOLD) SAVE(&SAVE)
               CALL       PGM(QCMDEXC) PARM(&CMD 512)

             CHGVAR     VAR(&BALSTS) VALUE('E')
 /*            OVRPRTF    FILE(PKLIPFR$) OUTQ(&PDEV) COPIES(&COPIES) +
                          HOLD(&HOLD) SAVE(&SAVE)                 */
             ENDDO

/* PRINT PGM                                                   */
             CALL       PGM(PKLHXFR) PARM(' ' &COMP &KDTE &BOCO +
                          &BOHD &BOLD &TONO &TODTE &BALSTS &ESHF +
                          &RUSR &LPP &ELOC)
             IF         COND(&ELOC *EQ 'U') +
             THEN(DO)
               CHGJOB     LOG(4 00 *SECLVL)
 CHECK:        CHGSTATE   DTAARA(GUYSPLF) STATE(*OPEN)
               MONMSG     MSGID(CPF9897) EXEC(DO)
               SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) MSGDTA('+
                   WAITING FOR DOWNLOAD TO RELEASE DATA FILE') +
                          TOPGMQ(*EXT) MSGTYPE(*STATUS)
                 DLYJOB     DLY(5)
                 GOTO       CMDLBL(CHECK)
               ENDDO
               SNDPGMMSG  MSGID(CPF9898) MSGF(QPFMSG) MSGDTA(' ') +
                          TOPGMQ(*EXT) MSGTYPE(*STATUS)
               SAVSPLF    DTAQ(GUYSPLF) TOFILE(GUYSPLF) +
                          REFORMAT(*YES) REMOVE(*NO) MBROPT(*ADD)
               CHGSTATE DTAARA(GUYSPLF) STATE(*CLOSE)
             ENDDO

ENDPGM:
             DLTOVR *ALL
             ENDPGM
