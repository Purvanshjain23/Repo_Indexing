// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBSVEFR
// ?Date: 14.08.2025 Time: 03:49:16
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Call program VAL Set Inter. Access  XF.
CALL PROGRAM(VAL Set Inter. Access  XF) ('PDSKXFR');
PARAMETER('A/R');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile header

CASE;

// IF CTL.Bill to Customer is not equal to zero
IF CTL.Bill_to_Customer <> *ZERO;

EXECUTE FUNCTION(RTV BillTo/TradePtnr  RT) TYPE(RTVOBJ) FILE(PNGQREP)           AC2144406;
PARAMETER(CTL.Bill_to_Customer);
PARAMETER(CTL.EDI_Trading_Partner_No);
PARAMETER(CTL.Bill_to_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?Get 1st bill to customer's name
 // PAR.EDI Trading Partner No. = DB1.EDI Trading Partner No.
 PAR.EDI_Trading_Partner_No = DB1.EDI_Trading_Partner_No;

 EXECUTE FUNCTION(RTV Name Only          RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1493704;
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(PAR.Bill_to_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 QUIT;

}


CASE;

// IF CTL.EDI Trading Partner No. is Not Entered
IF CTL.EDI_Trading_Partner_No = *BLANK;

// CTL.Bill to Name = CON.CUSTOMER EDI NOT SET UP
CTL.Bill_to_Name = 'CUSTOMER EDI NOT SET UP';

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Bill to Name = CON.*BLANK
CTL.Bill_to_Name = *BLANK;

ENDIF;

//?USER: Initialize subfile record (existing record)

CASE;

// IF CTL.Extol Control Flag NE WRK.Blank for 3          USR
IF CTL.Extol_Control_Flag <> WRK.Blank_for_3_USR;

// AND CTL.Extol Control Flag NE RCD.Extol Control Flag
AND CTL.Extol_Control_Flag <> RCD.Extol_Control_Flag;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF CTL.Live w/EDI Auto Orders NE WRK.Blank for 3          USR
IF CTL.Live_w_EDI_Auto_Orders <> WRK.Blank_for_3_USR;

// AND CTL.Live w/EDI Auto Orders NE RCD.Live w/EDI Auto Orders
AND CTL.Live_w_EDI_Auto_Orders <> RCD.Live_w_EDI_Auto_Orders;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?S15503 DN 10/11/19-Select By 'Use PO Price'.
CASE;

// IF CTL.Use PO Price NE WRK.Blank for 3          USR
IF CTL.Use_PO_Price <> WRK.Blank_for_3_USR;

// AND CTL.Use PO Price NE RCD.Use PO Price
AND CTL.Use_PO_Price <> RCD.Use_PO_Price;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?S16395 DN 04/01/20-Select By 'Requested Delivery Time Default'.
CASE;

// IF CTL.Requested Delv Time Dflt NE WRK.Blank for 3          USR
IF CTL.Requested_Delv_Time_Dflt <> WRK.Blank_for_3_USR;

// AND CTL.Requested Delv Time Dflt NE RCD.Requested Delv Time Dflt
AND CTL.Requested_Delv_Time_Dflt <> RCD.Requested_Delv_Time_Dflt;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?R17040 DN 02/25/21-Select by Hold 856 Statuses.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?By 'Hold 856 f/Cust Asgn App#'.
CASE;

// IF CTL.Hold 856 f/Cust Asgn App# NE WRK.Blank for 3          USR
IF CTL.Hold_856_f_Cust_Asgn_App# <> WRK.Blank_for_3_USR;

// AND CTL.Hold 856 f/Cust Asgn App# NE RCD.Hold 856 f/Cust Asgn App#
AND CTL.Hold_856_f_Cust_Asgn_App# <> RCD.Hold_856_f_Cust_Asgn_App#;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?By 'Hold 856 f/Carr PRO'.
CASE;

// IF CTL.Hold 856 f/Carr PRO NE WRK.Blank for 3          USR
IF CTL.Hold_856_f_Carr_PRO <> WRK.Blank_for_3_USR;

// AND CTL.Hold 856 f/Carr PRO NE RCD.Hold 856 f/Carr PRO
AND CTL.Hold_856_f_Carr_PRO <> RCD.Hold_856_f_Carr_PRO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?W100559 DN 06/14/22-Select by Crt VN Name Statuses.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?By 'Invoice 810 Crt VN Name'.
CASE;

// IF CTL.Invoice 810 Crt VN Name NE WRK.Blank for 3          USR
IF CTL.Invoice_810_Crt_VN_Name <> WRK.Blank_for_3_USR;

// AND CTL.Invoice 810 Crt VN Name NE RCD.Invoice 810 Crt VN Name
AND CTL.Invoice_810_Crt_VN_Name <> RCD.Invoice_810_Crt_VN_Name;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?By 'ASN 856 Crt VN Name'.
CASE;

// IF CTL.ASN 856 Crt VN Name NE WRK.Blank for 3          USR
IF CTL.ASN_856_Crt_VN_Name <> WRK.Blank_for_3_USR;

// AND CTL.ASN 856 Crt VN Name NE RCD.ASN 856 Crt VN Name
AND CTL.ASN_856_Crt_VN_Name <> RCD.ASN_856_Crt_VN_Name;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

EXECUTE FUNCTION(RTV TradePartner/BlTo RT) TYPE(RTVOBJ) FILE(PNGQREP)           AC2144405;
PARAMETER(RCD.EDI_Trading_Partner_No);
PARAMETER(RCD.Bill_to_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?Get 1st bill to customer's name
 EXECUTE FUNCTION(RTV Name Only          RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1493704;
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(PAR.Bill_to_Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 QUIT;

}


//?USER: Initialize subfile record (new record)

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

//?USER: Validate subfile control

CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.Bill to Customer
IF PGM.*Cursor_field = CTL.Bill_to_Customer;

// Call program SEL Bill to Customer   SR.
CALL PROGRAM(SEL Bill to Customer   SR) ('PDU1SRR');
PARAMETER(CTL.Bill_to_Customer);

CASE;

// IF CTL.Bill to Customer is not equal to zero
IF CTL.Bill_to_Customer <> *ZERO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

ENDIF;

CASE;

// IF CTL.Extol Control Flag NE LCL.Extol Control Flag
IF CTL.Extol_Control_Flag <> LCL.Extol_Control_Flag;

// LCL.Extol Control Flag = CTL.Extol Control Flag
LCL.Extol_Control_Flag = CTL.Extol_Control_Flag;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

CASE;

// IF CTL.Live w/EDI Auto Orders NE LCL.Live w/EDI Auto Orders
IF CTL.Live_w_EDI_Auto_Orders <> LCL.Live_w_EDI_Auto_Orders;

// LCL.Live w/EDI Auto Orders = CTL.Live w/EDI Auto Orders
LCL.Live_w_EDI_Auto_Orders = CTL.Live_w_EDI_Auto_Orders;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?S15503 DN 10/11/19-Reload Subfile When CTL 'Use PO Price' Change.
CASE;

// IF CTL.Use PO Price NE LCL.Use PO Price
IF CTL.Use_PO_Price <> LCL.Use_PO_Price;

// LCL.Use PO Price = CTL.Use PO Price
LCL.Use_PO_Price = CTL.Use_PO_Price;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?S16395 DN 04/01/20-Reload Subfile When CTL 'Rqstd Delv Time Dflt' Change.
CASE;

// IF CTL.Requested Delv Time Dflt NE LCL.Requested Delv Time Dflt
IF CTL.Requested_Delv_Time_Dflt <> LCL.Requested_Delv_Time_Dflt;

// LCL.Requested Delv Time Dflt = CTL.Requested Delv Time Dflt
LCL.Requested_Delv_Time_Dflt = CTL.Requested_Delv_Time_Dflt;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?R17040 DN 02/25/21-Reload Subfile When CTL 'Hold 856' Status Change.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?By 'Hold 856 f/Cust Asgn App#'.
CASE;

// IF CTL.Hold 856 f/Cust Asgn App# NE LCL.Hold 856 f/Cust Asgn App#
IF CTL.Hold_856_f_Cust_Asgn_App# <> LCL.Hold_856_f_Cust_Asgn_App#;

// LCL.Hold 856 f/Cust Asgn App# = CTL.Hold 856 f/Cust Asgn App#
LCL.Hold_856_f_Cust_Asgn_App# = CTL.Hold_856_f_Cust_Asgn_App#;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?By 'Hold 856 f/Carr PRO'.
CASE;

// IF CTL.Hold 856 f/Carr PRO NE LCL.Hold 856 f/Carr PRO
IF CTL.Hold_856_f_Carr_PRO <> LCL.Hold_856_f_Carr_PRO;

// LCL.Hold 856 f/Carr PRO = CTL.Hold 856 f/Carr PRO
LCL.Hold_856_f_Carr_PRO = CTL.Hold_856_f_Carr_PRO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?W100559 DN 06/14/22-Reload Subfile When CTL 'Crt VN Name' Status Change.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?By 'Invoice 810 Crt VN Name'.
CASE;

// IF CTL.Invoice 810 Crt VN Name NE LCL.Invoice 810 Crt VN Name
IF CTL.Invoice_810_Crt_VN_Name <> LCL.Invoice_810_Crt_VN_Name;

// LCL.Invoice 810 Crt VN Name = CTL.Invoice 810 Crt VN Name
LCL.Invoice_810_Crt_VN_Name = CTL.Invoice_810_Crt_VN_Name;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?By 'ASN 856 Crt VN Name'.
CASE;

// IF CTL.ASN 856 Crt VN Name NE LCL.ASN 856 Crt VN Name
IF CTL.ASN_856_Crt_VN_Name <> LCL.ASN_856_Crt_VN_Name;

// LCL.ASN 856 Crt VN Name = CTL.ASN 856 Crt VN Name
LCL.ASN_856_Crt_VN_Name = CTL.ASN_856_Crt_VN_Name;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT Trade Partner Ctrl CR) TYPE(CRTOBJ) FILE(PBB8REP)          AC2111387;
PARAMETER(RCD.EDI_Trading_Partner_No);
PARAMETER(RCD.Extol_Control_Flag);
PARAMETER(RCD.Live_with_ERP);
PARAMETER(RCD.Live_w_EDI_Auto_Orders);
PARAMETER(RCD.Use_PO_Price);
PARAMETER(RCD.Hold_856_f_Cust_Asgn_App#);
PARAMETER(RCD.Hold_856_f_Carr_PRO);
PARAMETER(RCD.Requested_Delv_Time_Dflt);
PARAMETER(RCD.Invoice_810_Crt_VN_Name);
PARAMETER(RCD.ASN_856_Crt_VN_Name);
PARAMETER(RCD.Check_856_Error_Pallet_0);
PARAMETER(RCD.TPC_Unused_Status_3_2);
PARAMETER(RCD.TPC_Unused_Status_3_3);
PARAMETER(RCD.TPC_Unused_Status_6_1);
PARAMETER(RCD.TPC_Unused_Char_15_1);
PARAMETER(RCD.TPC_Unused_Char_15_2);
PARAMETER(RCD.TPC_Unused_Char_20_1);
PARAMETER(RCD.TPC_Unused_Char_20_2);
PARAMETER(RCD.TPC_Unused_Date_1);
PARAMETER(RCD.TPC_Unused_date_2);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Create_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 //?USER: Processing if Data record already exists

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 //?USER: Processing if Data update error

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG Trade Partner Ctrl CH) TYPE(CHGOBJ) FILE(PBB8REP)          AC2111388;
PARAMETER(RCD.EDI_Trading_Partner_No);
PARAMETER(RCD.Extol_Control_Flag);
PARAMETER(RCD.Live_with_ERP);
PARAMETER(RCD.Live_w_EDI_Auto_Orders);
PARAMETER(RCD.Use_PO_Price);
PARAMETER(RCD.Hold_856_f_Cust_Asgn_App#);
PARAMETER(RCD.Hold_856_f_Carr_PRO);
PARAMETER(RCD.Requested_Delv_Time_Dflt);
PARAMETER(RCD.Invoice_810_Crt_VN_Name);
PARAMETER(RCD.ASN_856_Crt_VN_Name);
PARAMETER(RCD.Check_856_Error_Pallet_0);
PARAMETER(RCD.TPC_Unused_Status_3_2);
PARAMETER(RCD.TPC_Unused_Status_3_3);
PARAMETER(RCD.TPC_Unused_Status_6_1);
PARAMETER(RCD.TPC_Unused_Char_15_1);
PARAMETER(RCD.TPC_Unused_Char_15_2);
PARAMETER(RCD.TPC_Unused_Char_20_1);
PARAMETER(RCD.TPC_Unused_Char_20_2);
PARAMETER(RCD.TPC_Unused_Date_1);
PARAMETER(RCD.TPC_Unused_date_2);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 PARAMETER(DB1.Change_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


