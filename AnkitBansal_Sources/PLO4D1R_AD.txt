// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLO4D1R
// ?Date: 14.08.2025 Time: 02:54:57
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(LCL.Oms_Warehouse_Code);
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(LCL.Oms_SalesPerson_Code);
PARAMETER(LCL.Oms_Allow_Multi_Company);
PARAMETER(LCL.Oms_Default_Printer);
PARAMETER(LCL.Oms_Name);
PARAMETER(LCL.Oms_System_Value_Alpha);
PARAMETER(LCL.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('M3VEND');
PARAMETER(LCL.Live_with_M3_USR);

//?R17061 DN 04/30/21 - Get JDE 'E1LIVE' Flag.
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.BOH_Company_Number);
PARAMETER('E1LIVE');
PARAMETER(LCL.JDE_Live_with_E1_USR);

//?USER: Load detail screen from DBF record

//?R10690 JJH 06/08/17 - Display M3 Supplier ID
EXECUTE FUNCTION(Rtv Get M3 Supplier   IF) TYPE(EXCINTFUN)                      AB1322091;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(DTL.PD_Name);
PARAMETER(DTL.Producer_Address_1_USR);
PARAMETER(DTL.Producer_Address_2_USR);
PARAMETER(DTL.Producer_Address_3_USR);
PARAMETER(DTL.Producer_City_USR);
PARAMETER(DTL.Producer_State_USR);
PARAMETER(DTL.Producer_Zip_10_USR);
PARAMETER(LCL.M3_Telephone_No_1);
PARAMETER(LCL.M3_Telephone_No_2);
PARAMETER(LCL.M3_Fax_Telephone);
PARAMETER(DTL.Vendor_Tax_Id);
PARAMETER(DTL.Country_Code_Usr);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Producer EXT2     RT) TYPE(RTVOBJ) FILE(PLB4REP)           AB1322079;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.M3_Supplier_ID);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv M# Supplier       RT) TYPE(RTVOBJ) FILE(PLB2REP)           AB1322067;
 PARAMETER(PAR.M3_Supplier_ID);
 PARAMETER(PAR.M3_Supplier_Name);
 PARAMETER(PAR.M3_Address_Line_1);
 PARAMETER(PAR.M3_Address_Line_2);
 PARAMETER(PAR.M3_Address_Line_3);
 PARAMETER(PAR.M3_City);
 PARAMETER(PAR.M3_State);
 PARAMETER(PAR.M3_Postal_Code);
 PARAMETER(PAR.M3_Telephone_No_1);
 PARAMETER(PAR.M3_Telephone_No_2);
 PARAMETER(PAR.M3_Fax_Telephone);
 PARAMETER(PAR.M3_Supplier_Tax_ID);
 PARAMETER(PAR.M3_Country_Code);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?R17061 DN 04/30/21-Set JDE / M3 Prefix Based on 'E1LIVE' Flag.
CASE;

// IF LCL.JDE Live with E1 USR is Yes
IF LCL.JDE_Live_with_E1_USR = 'Y';

// DTL.JDE/M3 Prefix USR = CON.JDE
DTL.JDE_M3_Prefix_USR = 'JDE';

// DTL.Vendor Number USR = CON.*BLANK
DTL.Vendor_Number_USR = *BLANK;

//?Remove Leading Zero for JDE Vendor #.
CASE;

// IF DTL.PD VND Address Number is Not zero
IF DTL.PD_VND_Address_Number <> *ZERO;

// DTL.Vendor Number USR = CVTVAR(DTL.PD VND Address Number)
DTL.Vendor_Number_USR = CVTVAR(DTL.PD_VND_Address_Number);

// PAR.Vendor Number USR = DTL.Vendor Number USR
PAR.Vendor_Number_USR = DTL.Vendor_Number_USR;

// LCL.Count USR = CON.*ZERO
LCL.Count_USR = *ZERO;

// LCL.Text Usr 1 = CON.0
LCL.Text_Usr_1 = 0;

//?Substring in the Value Without the Leading Zeros.
// DOW LCL.Text Usr 1 is Zero
DOW LCL.Text_Usr_1 = '0';

// LCL.Count USR = LCL.Count USR + CON.1
LCL.Count_USR = LCL.Count_USR + 1;

// LCL.Text Usr 1 = SUBSTRING(PAR.Vendor Number USR,LCL.Count USR,CON.1)
LCL.Text_Usr_1 = SUBSTRING(PAR.Vendor_Number_USR:LCL.Count_USR:1);

CASE;

// IF LCL.Text Usr 1 is Not Zero
IF LCL.Text_Usr_1 <> '0';

// LCL.For Length USR = CON.9 - LCL.Count USR
LCL.For_Length_USR = 9 - LCL.Count_USR;

// PAR.Vendor Number USR = SUBSTRING(PAR.Vendor Number USR,LCL.Count USR,LCL.For Length USR)
PAR.Vendor_Number_USR = SUBSTRING(PAR.Vendor_Number_USR:LCL.Count_USR:LCL.For_Length_USR);

// DTL.Vendor Number USR = PAR.Vendor Number USR
DTL.Vendor_Number_USR = PAR.Vendor_Number_USR;

ENDIF;

ENDDO;

ENDIF;

//?R17061 DN 04/30/21-Set JDE / M3 Prefix Based on 'E1LIVE' Flag.
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.JDE/M3 Prefix USR = CON.M3
DTL.JDE_M3_Prefix_USR = 'M3';

// DTL.Vendor Number USR = DTL.M3 Supplier ID
DTL.Vendor_Number_USR = DTL.M3_Supplier_ID;

ENDIF;

//?R10690 JJH 06/08/17 - Get Address from Producer Address
// Call program Rtv Producer Address  XF.
CALL PROGRAM(Rtv Producer Address  XF) ('PWCZXFR');
PARAMETER(DB1.PD_Producer_Code);
PARAMETER(NLL.Address_Number);
PARAMETER(NLL.Pass_Name);
PARAMETER(DTL.Producer_Address_1_USR);
PARAMETER(DTL.Producer_Address_2_USR);
PARAMETER(DTL.Producer_Address_3_USR);
PARAMETER(DTL.Producer_City_USR);
PARAMETER(DTL.Producer_State_USR);
PARAMETER(DTL.Producer_Zip_10_USR);
PARAMETER(DTL.Producer_Area_Code_USR);
PARAMETER(DTL.Producer_Phone_Number_USR);
PARAMETER(NLL.Fax_Area_Code_#);
PARAMETER(NLL.Fax_Telephone);
PARAMETER(NLL.Fax_Attn_1);
PARAMETER(NLL.Fax_Area_Code_#_2);
PARAMETER(NLL.Fax_Telephone_2);
PARAMETER(NLL.Fax_Attn_2);
PARAMETER(NLL.Vendor_1099);
PARAMETER(NLL.Vendor_Tax_Id);
PARAMETER(DTL.Country_Code_Usr);

//?R10690 JJH 06/08/17 - Comment out logic that is no longer required
//?USER: Validate detail screen

//?R10690 JJH 06/08/17 - Comment out logic that is no longer required
//?USER: Process command keys

CASE;

// IF DTL.*CMD key is CF03
IF DTL.*CMD_key = '03';

// PGM.*Return code = CND.*Normal
PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

