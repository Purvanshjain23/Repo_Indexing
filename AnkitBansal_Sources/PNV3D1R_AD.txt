// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNV3D1R
// ?Date: 14.08.2025 Time: 03:46:49
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?***** Changes and Comments
DO;

//?PGMRIO RMC 1/4/2022 swap TPM Location Code for TMS Planning Region
//?P002045 LJB 11/08/2012  Add TPM Location Code
//?E2073 8/2/12 RMC Dsp inventory chill time
//?E3191  07/28/2014 JJH Display the Auto Inv Restoration field.
//? This field is used to designate if the Warehouse will participate
//? in the Automatic Inventory Restoration.  This field was previously
//? the WHS Unused Sts 9.
ENDDO;

//?USER: Load detail screen from DBF record

CASE;

// IF DTL.Production Warehouse Code is Warehouse Code not Blank
IF DTL.Production_Warehouse_Code <> *BLANK;

EXECUTE FUNCTION(RTV Warehouse          RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1100960;
PARAMETER(DB1.Production_Warehouse_Code);
PARAMETER(DTL.USR_Warehouse_description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


ENDIF;

// DTL.Warehouse Type Desc. = Condition name of DTL.Warehouse Type
DTL.Warehouse_Type_Desc = RTVCND(DTL.Warehouse_Type);

// DTL.Transaction Control Desc = Condition name of DTL.Trans Contol AS400/Plant
DTL.Transaction_Control_Desc = RTVCND(DTL.Trans_Contol_AS400_Plant);

// DTL.Condition Desc. 8  USR = Condition name of DTL.Warehouse Location
DTL.Condition_Desc_8_USR = RTVCND(DTL.Warehouse_Location);

// DTL.Condition Desc. 9  USR = Condition name of DTL.Warehouse Std Chill Time
DTL.Condition_Desc_9_USR = RTVCND(DTL.Warehouse_Std_Chill_Time);

// DTL.Text USR = Condition name of DTL.WHS Slotting Limit Type
DTL.Text_USR = RTVCND(DTL.WHS_Slotting_Limit_Type);

// DTL.Condition Desc. 1  USR = Condition name of DTL.WHS Live w/Carlisle
DTL.Condition_Desc_1_USR = RTVCND(DTL.WHS_Live_with_Carlisle);

// DTL.Condition Desc. 2  USR = Condition name of DTL.WHS PFS Interface
DTL.Condition_Desc_2_USR = RTVCND(DTL.WHS_PFS_Interface);

//?USER: Validate detail screen

CASE;

// IF LCL.Company Organization is High Plains Biodiesel
IF LCL.Company_Organization = 'H';

//?FP1322 - not req for hpb
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv Prd WHS w/AcctCo  RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1917599;
PARAMETER(DTL.Accounting_Company);
PARAMETER(DTL.Production_Warehouse_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


ENDIF;

// DTL.Warehouse Type Desc. = Condition name of DTL.Warehouse Type
DTL.Warehouse_Type_Desc = RTVCND(DTL.Warehouse_Type);

// DTL.Transaction Control Desc = Condition name of DTL.Trans Contol AS400/Plant
DTL.Transaction_Control_Desc = RTVCND(DTL.Trans_Contol_AS400_Plant);

EXECUTE FUNCTION(VAL Printer Device     IF) TYPE(EXCINTFUN)                     AC1277933;
PARAMETER(DTL.Default_Printer);
{
 //?Execute internal function

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 // Execute function VAL object existence   US.
 EXECUTE FUNCTION(VAL object existence   US) TYPE(EXCUSRSRC) ('JCOBJR');
 PARAMETER(PAR.PRT_Printer_Device);
 PARAMETER(*OUTQ);
 PARAMETER(PGM.*Return_code);
 {
  C                     CALL 'JCOBJC'                   CL PROGRAM
  C                     PARM #IA8VN    UA8VN  10
  C                     PARM #IOBJT    UOBJT  10
  C           W0RTN     PARM           W0RTN
 }

 CASE;

 // IF PGM.*Return code is *Normal
 IF PGM.*Return_code = *BLANK;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Send error message - ''&1' is invalid, please re-enter.'
 ERROR(USR0280);
 MSGPARM(PAR.PRT_Printer_Device);

 ENDIF;

}


// DTL.Condition Desc. 8  USR = Condition name of DTL.Warehouse Location
DTL.Condition_Desc_8_USR = RTVCND(DTL.Warehouse_Location);

// DTL.Condition Desc. 9  USR = Condition name of DTL.Warehouse Std Chill Time
DTL.Condition_Desc_9_USR = RTVCND(DTL.Warehouse_Std_Chill_Time);

// DTL.Text USR = Condition name of DTL.WHS Slotting Limit Type
DTL.Text_USR = RTVCND(DTL.WHS_Slotting_Limit_Type);

// DTL.Condition Desc. 1  USR = Condition name of DTL.WHS Live w/Carlisle
DTL.Condition_Desc_1_USR = RTVCND(DTL.WHS_Live_with_Carlisle);

// DTL.Condition Desc. 2  USR = Condition name of DTL.WHS PFS Interface
DTL.Condition_Desc_2_USR = RTVCND(DTL.WHS_PFS_Interface);

