// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PQPQXFR
// ?Date: 14.08.2025 Time: 03:42:25
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?** WHD 76262 RMC per AK- so the gross weight matches MG total, change
//?   Calc Pallet tare weight to include combos- whd 76262
//?   so remove from  case stmt : c2:DB1.U/M - Ordered is Not Combos
//?01/18/10 PKD E000261 SEND in PAR.Avg Pallet Tare
EXECUTE FUNCTION(RTV Gross Wgt/Qty     RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1601444;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.USR_Weight_Accumulated);
PARAMETER(PAR.Order_Quantity);
PARAMETER(PAR.Avg_Pallet_Tare);
{
 //?USER: Initialize routine

 // WRK.USR Weight Accumulated = CON.*ZERO
 WRK.USR_Weight_Accumulated = *ZERO;

 // PAR.Order Quantity = CON.*ZERO
 PAR.Order_Quantity = *ZERO;

 //?***** Change Log and comments
 DO;

 //?**********  M A I N T E N A N C E    L O G   ***********
 DO;

 //?** 08/24/2012 RMC E00196 Chg pfs interface shptrn when chking live w/carl
 //?** 01/18/2010 PKD/LJB E000261  Pass in the average pallet tare
 //?** to the Rtv Tare wgt calcs. If Combo and palletized, subtract
 //?** the avg tare from the total pallet tare
 //?06/03/09 PKD FP1054 Use Weight Ordered instead of Weight Scheduled.
 //?             With the new PA System, Scheduling is not allowed
 //?             to perform Schedule As Ordered. Since Ordered matched
 //?             the Scheduled, the Gross Weight would have been
 //?             the same.
 ENDDO;

 ENDDO;

 //?USER: Process Data record

 //?**********  M A I N T E N A N C E    L O G   ***********
 DO;

 //?** WHD 76262 RMC per AK- so the gross weight matches MG total, change
 //?   Calc Pallet tare weight to include combos- whd 76262
 //?   so remove from  case stmt : c2:DB1.U/M - Ordered is Not Combos
 //?06/03/09 PKD FP1054 Use Weight Ordered instead of Weight Scheduled.
 //?             With the new PA System, Scheduling is not allowed
 //?             to perform Schedule As Ordered. Since Ordered matched
 //?             the Scheduled, the Gross Weight would have been
 //?             the same.
 ENDDO;

 CASE;

 // IF DB1.Detail Line Status is Not cancelled
 IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

 //?Retrieve Misc Tare.
 //?01/18/10 PKD Also retrieve the Primary Unit of Measure (BX/CB)
 EXECUTE FUNCTION(Rtv Tare Weight        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1228249;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.Misc_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

 EXECUTE FUNCTION(RTV U/M Primary        RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1647610;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(WRK.UOM_Primary);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Retrieve Box Tare, Pallet Tare, & Cases Per Pallet
 EXECUTE FUNCTION(RTV Itm Bx/Plt Tare   RT) TYPE(RTVOBJ) FILE(PDIOREP)           AC1601773;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(WRK.Unit_Weight);
 PARAMETER(LCL.Number_Cases_On_A_Pallet);
 PARAMETER(LCL.Pallet_Tare_Weight);
 {
  //?USER: Initialize routine

  // PAR.Unit Weight = CON.*ZERO
  PAR.Unit_Weight = *ZERO;

  // PAR.Pallet Tare Weight = CON.*ZERO
  PAR.Pallet_Tare_Weight = *ZERO;

  // PAR.Number Cases On A Pallet = CON.*ZERO
  PAR.Number_Cases_On_A_Pallet = *ZERO;

  //?USER: Process Data record

  // PAR.Unit Weight = CON.*ZERO
  PAR.Unit_Weight = *ZERO;

  EXECUTE FUNCTION(RTV Typ/Pk/UntWgt/Plt RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1601775;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Component_Item_Code);
  PARAMETER(PAR.Unit_Weight);
  PARAMETER(PAR.Number_Cases_On_A_Pallet);
  PARAMETER(PAR.Item_Type_Code);
  PARAMETER(PAR.Package_Type_Code);
  PARAMETER(PAR.Pallet_Tare_Weight);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

  }

  CASE;

  // IF PAR.Item Type Code is Packaging and Supplies
  IF PAR.Item_Type_Code = 'PS';

  // AND PAR.Package Type Code is Box
  AND PAR.Package_Type_Code = 'B';

  QUIT;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Unit Weight = CON.*ZERO
  PAR.Unit_Weight = *ZERO;

  ENDIF;

 }

 // WRK.Tare Weight Total = WRK.Misc Tare Weight + WRK.Unit Weight
 WRK.Tare_Weight_Total = WRK.Misc_Tare_Weight + WRK.Unit_Weight;

 CASE;

 // IF DB1.Detail Line Status is Confirmed & Complete
 IF DB1.Detail_Line_Status = 'C'/'R';

 EXECUTE FUNCTION(Rtv Live w/Carlisle   RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1747217;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(LCL.WHS_Live_with_Carlisle);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?E00196 RMC 8/24/12 chk pfs interface SHPTRN  too
 EXECUTE FUNCTION(Rtv Active Status     RT) TYPE(RTVOBJ) FILE(PPBUREP)           AC1740339;
 PARAMETER(DB1.Company_Number);
 PARAMETER('SHPTRN');
 PARAMETER(LCL.PFS_AccuSort_Active);
 PARAMETER(LCL.PFS_Carlisle_Active);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?Box & Miscellaneous Tare
 CASE;

 // IF LCL.WHS Live w/Carlisle is Yes
 IF LCL.WHS_Live_with_Carlisle = 'Y';

 // AND LCL.PFS Carlisle Active is Yes
 AND LCL.PFS_Carlisle_Active = 'Y';

 //?01/18/10 PKD/LJB E000261  Send in the Ordered Unit of Measure,
 //?the Avg Pallet Tare and the palletize flag. If Palletized and Combos
 //?then the average tare will be subtracted from the total tare weight.
 EXECUTE FUNCTION(Rtv Tare Weight       RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1940018;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(PAR.Tare_Weight_Total);
 PARAMETER(PAR.Avg_Pallet_Tare);
 PARAMETER(DB1.U_M_Ordered);
 PARAMETER(DB1.Palletize);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?01/18/10 PKD/LJB E000261  If primary unit of measure is CB, then
  //?subtract the Avg Pallet Tare from the Tare Weight before accumulating.
  CASE;

  // IF PAR.U/M - Ordered is Combos
  IF PAR.U_M_Ordered = 'CB';

  // AND PAR.Palletize is yes
  AND PAR.Palletize = 'Y';

  // WRK.Manifest Total Tare = DB1.Manifest Total Tare - PAR.Avg Pallet Tare
  WRK.Manifest_Total_Tare = DB1.Manifest_Total_Tare - PAR.Avg_Pallet_Tare;

  // PAR.USR Weight = PAR.USR Weight + WRK.Manifest Total Tare
  PAR.USR_Weight = PAR.USR_Weight + WRK.Manifest_Total_Tare;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.USR Weight = PAR.USR Weight + DB1.Manifest Total Tare
  PAR.USR_Weight = PAR.USR_Weight + DB1.Manifest_Total_Tare;

  ENDIF;

 }

 //?Box & Miscellaneous Tare
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Tare Weight Total = WRK.Tare Weight Total * DB1.Quantity Shipped Total *
 PAR.Tare_Weight_Total = WRK.Tare_Weight_Total * DB1.Quantity_Shipped_Total;

 ENDIF;

 // WRK.USR Weight Accumulated = PAR.Tare Weight Total + DB1.Weight Shipped Total
 WRK.USR_Weight_Accumulated = PAR.Tare_Weight_Total + DB1.Weight_Shipped_Total;

 // PAR.Order Quantity = PAR.Order Quantity + DB1.Quantity Shipped Total
 PAR.Order_Quantity = PAR.Order_Quantity + DB1.Quantity_Shipped_Total;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Tare Weight Total = WRK.Tare Weight Total * DB1.Quantity Ordered *Rounded
 PAR.Tare_Weight_Total = WRK.Tare_Weight_Total * DB1.Quantity_Ordered 'H';

 //?Add Pallet Tare if Palletize = Yes
 CASE;

 // IF DB1.Palletize is yes
 IF DB1.Palletize = 'Y';

 CASE;

 // IF LCL.Number Cases On A Pallet is GT Zero
 IF LCL.Number_Cases_On_A_Pallet > *ZERO;

 //?** Calc Pallet tare weight include combos- whd 76262 DO count Combos
 //? so remove from above case stmt : c2:DB1.U/M - Ordered is Not Combos
 // calc pallet tare weight
 LCL.Weight_11_2_USR = ( DB1.Quantity_Ordered / LCL.Number_Cases_On_A_Pallet 'H' )
 * LCL.Pallet_Tare_Weight 'H';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Weight 11.2 USR = CON.*ZERO
 LCL.Weight_11_2_USR = *ZERO;

 ENDIF;

 // PAR.Tare Weight Total = PAR.Tare Weight Total + LCL.Weight 11.2 USR
 PAR.Tare_Weight_Total = PAR.Tare_Weight_Total + LCL.Weight_11_2_USR;

 ENDIF;

 // WRK.USR Weight Accumulated = PAR.Tare Weight Total + DB1.Weight Ordered
 WRK.USR_Weight_Accumulated = PAR.Tare_Weight_Total + DB1.Weight_Ordered;

 // PAR.Order Quantity = PAR.Order Quantity + DB1.Quantity Ordered
 PAR.Order_Quantity = PAR.Order_Quantity + DB1.Quantity_Ordered;

 ENDIF;

 // PAR.USR Weight Accumulated = PAR.USR Weight Accumulated + WRK.USR Weight Accumulated
 PAR.USR_Weight_Accumulated = PAR.USR_Weight_Accumulated + WRK.USR_Weight_Accumulated;

 ENDIF;

}


