// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDULPFR
// ?Date: 14.08.2025 Time: 12:04:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?USER: Record selection processing

//?NOTE:  IF CHANGES ARE MADE TO SELECTION CRITERIA PROCESSING, ALSO
//?       LOOK AT PRE-INVOICE EXCEPTION REPORT
//?05/01/18 DN R12926-Removed Absorbed Freight Rate CWT Parm on PMF3XFR.
// Call program PRT Invc Excpt Select  XF.
CALL PROGRAM(PRT Invc Excpt Select  XF) ('PPX8XFR');
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(DB1.Order_Type_Sales);
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(DB1.Customer_Purchase_Order_#);
PARAMETER(DB1.Order_Date);
PARAMETER(DB1.Actual_Shipped_Date);
PARAMETER(DB1.Header_Status);
PARAMETER(DB1.Header_Status_Last);
PARAMETER(DB1.Scheduled_Ship_Date);
PARAMETER(DB1.Load_ID);
PARAMETER(DB1.Price_Audit);
PARAMETER(DB1.Price_Status);
PARAMETER(DB1.Shipping_Method);
PARAMETER(DB1.Sales_Route_Code);
PARAMETER(DB1.Event_Code);
PARAMETER(DB1.Billing_Activity_Type);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Billing_Activity_Type);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Update_Exception_Status);
PARAMETER(PGM.*Record_selected);
PARAMETER(PAR.Print_Pre_Inv_Exception);
PARAMETER(PAR.Departure_Sts_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Manual_Prc_Err_Sts_USR);
PARAMETER(LCL.Projected_Market_Price);
PARAMETER(PAR.Average_Ship_Wgt_Err_USR);
PARAMETER(PAR.InterCo_Price_Err_USR);
PARAMETER(PAR.Record_Found_USR);
PARAMETER(PAR.Order_Status);
PARAMETER(LCL.GTIN_Error_Sts_USR);
PARAMETER(LCL.GTIN_Error_Item_Code_USR);
PARAMETER(NLL.Item_Code_USR);
PARAMETER(NLL.Item_Code);
PARAMETER(LCL.Default_Commod_Mark_basis);
PARAMETER(LCL.Market_Overage);
PARAMETER(LCL.Commodity_Price_Group);
PARAMETER(LCL.Price_Overage_Override);
PARAMETER(PAR.Process_Cust_Types_Usr);
PARAMETER(PAR.USR_Check_Y_N_Status);
PARAMETER(LCL.D_EDI_INV_PROC_FLAG);

//?check if order to go on pre-invoice reg or exception report
CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

CASE;

// IF PAR.Print Pre-Inv/Exception is Print on Pre-Invoice Reg
IF PAR.Print_Pre_Inv_Exception = 'P';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process top of page

//?Billing type   - First part of title
CASE;

// IF PAR.Billing Activity Type is Invoice
IF PAR.Billing_Activity_Type = '1';

// TOP.Description Usr - 50 = CON.*** SALES ORDERS ONLY ***
TOP_Description_Usr_50 = '*** SALES ORDERS ONLY ***';

//?Billing type   - First part of title
// IF PAR.Billing Activity Type is Credit Memo
IF PAR.Billing_Activity_Type = '2';

// TOP.Description Usr - 50 = CON.*** CREDIT MEMOS ONLY ***
TOP_Description_Usr_50 = '*** CREDIT MEMOS ONLY ***';

//?Billing type   - First part of title
// IF PAR.Billing Activity Type is Debit Memo
IF PAR.Billing_Activity_Type = '3';

// TOP.Description Usr - 50 = CON.*** Debit Memos Only ***
TOP_Description_Usr_50 = '*** Debit Memos Only ***';

//?Billing type   - First part of title
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Description Usr - 50 = CON.*** Cr/Dr Memos Only ***
TOP_Description_Usr_50 = '*** Cr/Dr Memos Only ***';

ENDIF;

//?Last part of title
CASE;

// IF PAR.Process Cust Types Usr is Inter-Co Customer's
IF PAR.Process_Cust_Types_Usr = 'IC';

// TOP.Description Usr - 50 = CONCAT(TOP.Description Usr - 50,CON.- Inter-Co Customers,CON.1)
TOP_Description_Usr_50 = TOP_Description_Usr_50 + '- Inter-Co Customers' (1);

//?Last part of title
// IF PAR.Process Cust Types Usr is 3rd Party Customer(s)
IF PAR.Process_Cust_Types_Usr = 'TP';

// TOP.Description Usr - 50 = CONCAT(TOP.Description Usr - 50,CON.- 3rd Party Customers,CON.1)
TOP_Description_Usr_50 = TOP_Description_Usr_50 + '- 3rd Party Customers' (1);

//?Last part of title
// IF PAR.Process Cust Types Usr is All Customers
IF PAR.Process_Cust_Types_Usr = 'BT';

// TOP.Description Usr - 50 = CONCAT(TOP.Description Usr - 50,CON.- *All Customers,CON.1)
TOP_Description_Usr_50 = TOP_Description_Usr_50 + '- *All Customers' (1);

//?Last part of title
// IF PAR.Process Cust Types Usr is Selection by Order/Load
IF PAR.Process_Cust_Types_Usr = 'OR';

// TOP.Description Usr - 50 = CONCAT(TOP.Description Usr - 50,CON.- Selection by Order/Load,CON.1)
TOP_Description_Usr_50 = TOP_Description_Usr_50 + '- Selection by Order/Load' (1);

ENDIF;

//?USER: On print of first page format

// 1PG.Accounting Company Number = PAR.Accounting Company Number
X1PG_Company_Number = PAR.Company_Number;

// 1PG.Load ID = PAR.Load ID
X1PG_Load_ID = PAR.Load_ID;

// 1PG.Order Number = PAR.Order Number
X1PG_Order_Number = PAR.Order_Number;

// 1PG.Actual Shipped Date = PAR.Actual Shipped Date
X1PG_Actual_Shipped_Date = PAR.Actual_Shipped_Date;

CASE;

// IF PAR.Order Number is Equal to zeros
IF PAR.Order_Number = *ZERO;

// AND PAR.Load ID is Blank
AND PAR.Load_ID = *ZERO;

// AND PAR.Actual Shipped Date is not entered
AND PAR.Actual_Shipped_Date = *ZERO;

// 1PG.USR Desc. 10 = CON.*ALL
X1PG_USR_Desc_10 = *ALL;

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Billing type
CASE;

// IF PAR.Billing Activity Type is Invoice
IF PAR.Billing_Activity_Type = '1';

// 1PG.USR Work Field 7A = CON.Shipped
X1PG_USR_Work_Field_7A = 'Shipped';

//?Billing type
// IF PAR.Billing Activity Type is Credit Memo
IF PAR.Billing_Activity_Type = '2';

// 1PG.USR Work Field 7A = CON.Entered
X1PG_USR_Work_Field_7A = 'Entered';

//?Billing type
// IF PAR.Billing Activity Type is Debit Memo
IF PAR.Billing_Activity_Type = '3';

// 1PG.USR Work Field 7A = CON.Entered
X1PG_USR_Work_Field_7A = 'Entered';

//?Billing type
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.USR Work Field 7A = CON.Entered
X1PG_USR_Work_Field_7A = 'Entered';

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

//?USER: On print of detail format

// PAR.Update Exception Status = CND.no
PAR.Update_Exception_Status = 'N';

EXECUTE FUNCTION(RTV Salesman Code      RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1284971;
PARAMETER(DB1.Sales_Route_Code);
PARAMETER(CUR.Salesperson_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Reverse $ if credit memo
CASE;

// IF DB1.Billing Activity Type is Credit Memo
IF DB1.Billing_Activity_Type = '2';

// CUR.Order Value Total = CON.*ZERO - DB1.Order Value Total
CUR.Order_Value_Total = *ZERO - DB1.Order_Value_Total;

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Pre-Invoic Reg Dtl PO
EXECUTE FUNCTION(PRT Pre-Invoic Reg Dtl PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(DB1.Billing_Activity_Type);
PARAMETER(PAR.Update_Exception_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Embedded PRTOBJ : PRT Blank Line         PO
EXECUTE FUNCTION(PRT Blank Line         PO) TYPE(PRTOBJ);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

//?set order type print status based on whether pricing errors found
CASE;

// IF PAR.Update Exception Status is no
IF PAR.Update_Exception_Status = 'N';

//?no error
// WRK.Order Type Print Status = CND.yes
WRK.Order_Type_Print_Status = 'Y';

//?set order type print status based on whether pricing errors found
// IF *OTHERWISE
IF *OTHERWISE;

//?error
// WRK.Order Type Print Status = CND.no
WRK.Order_Type_Print_Status = 'N';

ENDIF;

EXECUTE FUNCTION(CHG Ord Typ Prt Status CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1308691;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(WRK.Order_Type_Print_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(PAR.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


//?Combo PO Update the Order Type Print Status  Yes or No
//?04/27 SLM Put in the Combo PO, change all other orders to YES
// Call program Rtv One Invoice /PO   XP.
CALL PROGRAM(Rtv One Invoice /PO   XP) ('PMCOXFR');
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(LCL.One_Invoice_Per_PO);

CASE;

// IF LCL.One Invoice Per PO is Yes
IF LCL.One_Invoice_Per_PO = 'Y';

// Call program CHG Po and its Ords    XF.
CALL PROGRAM(CHG Po and its Ords    XF) ('PMF8XFR');
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Ship_To_Customer);
PARAMETER(DB1.Customer_Purchase_Order_#);
PARAMETER(WRK.Order_Type_Print_Status);
PARAMETER(DB1.Scheduled_Ship_Date);

ENDIF;

NXT.Total_Order_Values = SUM(CUR.Order_Value_Total);

NXT.Total_Order_Weights = SUM(CUR.Order_Weight_Total);

//?USER: Print required level totals

// SUPPRESSED PRINT Accounting Company Number totals format

