// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PWLJEFR
// ?Date: 14.08.2025 Time: 02:56:46
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 5/04/2021 JBB P17058 - Repayments by Business
//?                        Function created.
ENDDO;

// LCL.TRC Comment Type = CND.All
LCL.TRC_Comment_Type = 'A';

//?Initially show records as Truncated
// PGM.*Subfile mode = CND.Truncated
PGM.*Subfile_mode = 1;

//?USER: Initialize subfile header

MOVE *ALL (To: CTL From: PAR);

//?Load Comment Type text
CASE;

// IF LCL.TRC Comment Type is User Generated
IF LCL.TRC_Comment_Type = 'U';

// CTL.Text 6 USR = CON.User
CTL.Text_6_USR = 'User';

//?Load Comment Type text
// IF LCL.TRC Comment Type is All
IF LCL.TRC_Comment_Type = 'A';

// CTL.Text 6 USR = CON.All
CTL.Text_6_USR = 'All';

//?Load Comment Type text
// IF *OTHERWISE
IF *OTHERWISE;

// CTL.Text 6 USR = CON.System
CTL.Text_6_USR = 'System';

ENDIF;

//?USER: Initialize subfile record (existing record)

//?Load subfile records based in toggle value
CASE;

// IF LCL.TRC Comment Type is All
IF LCL.TRC_Comment_Type = 'A';

//?Record will always be selected
//?Load subfile records based in toggle value
// IF RCD.TRC Comment Type NE LCL.TRC Comment Type
IF RCD.TRC_Comment_Type <> LCL.TRC_Comment_Type;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?If Tattoo Number passed in, only show records for that tattoo
CASE;

// IF PAR.TH Tattoo Number is NE Zero
IF PAR.TH_Tattoo_Number <> *ZERO;

//?If a RCD value <> a PAR value, do not select record
CASE;

// IF RCD.BOH Buy Order Number NE PAR.BOH Buy Order Number
IF RCD.BOH_Buy_Order_Number <> PAR.BOH_Buy_Order_Number;

// OR RCD.BOL Load Number NE PAR.BOL Load Number
OR RCD.BOL_Load_Number <> PAR.BOL_Load_Number;

// OR RCD.TH Tattoo Number NE PAR.TH Tattoo Number
OR RCD.TH_Tattoo_Number <> PAR.TH_Tattoo_Number;

// OR RCD.TH Kill Date NE PAR.TH Kill Date
OR RCD.TH_Kill_Date <> PAR.TH_Kill_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Load Comment Type text
CASE;

// IF RCD.TRC Comment Type is System Generated
IF RCD.TRC_Comment_Type = 'S';

// RCD.Text 6 USR = CON.System
RCD.Text_6_USR = 'System';

//?Load Comment Type text
// IF RCD.TRC Comment Type is User Generated
IF RCD.TRC_Comment_Type = 'U';

// RCD.Text 6 USR = CON.User
RCD.Text_6_USR = 'User';

ENDIF;

//?USER: Validate subfile control

//?If F10 pressed (toggle)
CASE;

// IF CTL.*CMD key is Toggle
IF CTL.*CMD_key = '10';

//?If in CHANGE mode, perform the toggle
CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

//?Toggle System and User generated messages if in CHG mode
CASE;

// IF LCL.TRC Comment Type is User Generated
IF LCL.TRC_Comment_Type = 'U';

// LCL.TRC Comment Type = CND.System Generated
LCL.TRC_Comment_Type = 'S';

//?Toggle System and User generated messages if in CHG mode
// IF LCL.TRC Comment Type is System Generated
IF LCL.TRC_Comment_Type = 'S';

// LCL.TRC Comment Type = CND.All
LCL.TRC_Comment_Type = 'A';

//?Toggle System and User generated messages if in CHG mode
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.TRC Comment Type = CND.User Generated
LCL.TRC_Comment_Type = 'U';

ENDIF;

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Validate subfile record fields

//?Delete not allowed for System Message
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

// AND RCD.TRC Comment Type is System Generated
AND RCD.TRC_Comment_Type = 'S';

// Send error message - 'Dlt not Allowed-Sys Msg'
ERROR(PRK1577);
MSGPARM(RCD.*SFLSEL);

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(Crt Tattoo Repay Cmnt CR) TYPE(CRTOBJ) FILE(PWAYCPP)           AB1364775;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(RCD.TRC_Comment);
PARAMETER('U');
{
 //?USER: Processing before Data update

 //?Make sure BOH Company Number is populated
 CASE;

 // IF PAR.BOH Company Number is *ZERO
 IF PAR.BOH_Company_Number = *ZERO;

 // DB1.BOH Company Number = PAR.CC Company Number
 DB1.BOH_Company_Number = PAR.CC_Company_Number;

 ENDIF;

 EXECUTE FUNCTION(Rtv Next Comment Seq# RT) TYPE(RTVOBJ) FILE(PWAYCPP)           AB1366735;
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.TRH_Repayment_ID);
 PARAMETER(DB1.TRC_Sequence);
 {
  //?USER: Processing if Data record not found

  // PAR.TRC Sequence = CON.1
  PAR.TRC_Sequence = 1;

  //?USER: Process Data record

  // PAR.TRC Sequence = DB1.TRC Sequence + CON.1
  PAR.TRC_Sequence = DB1.TRC_Sequence + 1;

  QUIT;

 }

 EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?Execute internal function

  // PAR.RS Record Status = CND.Active
  PAR.RS_Record_Status = 'A';

  // PAR.RS User Added = JOB.*USER
  PAR.RS_User_Added = JOB.*USER;

  // PAR.RS Date Added = JOB.*Job date
  PAR.RS_Date_Added = JOB.*Job_date;

  // PAR.RS Time Added = JOB.*Job time
  PAR.RS_Time_Added = JOB.*Job_time;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

 }

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Dlt Tattoo Repay Cmnt DO) TYPE(DLTOBJ) FILE(PWAYCPP)           AB1364777;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(RCD.TRC_Sequence);

//?USER: Change DBF record

EXECUTE FUNCTION(Chg Tattoo Repay Cmnt CH) TYPE(CHGOBJ) FILE(PWAYCPP)           AB1364776;
PARAMETER(RCD.CC_Company_Number);
PARAMETER(RCD.TRH_Repayment_ID);
PARAMETER(RCD.TRC_Sequence);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(RCD.TRC_Comment);
PARAMETER(RCD.TRC_Comment_Type);
PARAMETER(RCD.RS_Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 {
  //?Execute internal function

  // PAR.RS User Changed = JOB.*USER
  PAR.RS_User_Changed = JOB.*USER;

  // PAR.RS Date Changed = JOB.*Job date
  PAR.RS_Date_Changed = JOB.*Job_date;

  // PAR.RS Time Changed = JOB.*Job time
  PAR.RS_Time_Changed = JOB.*Job_time;

  // PAR.RS Job = JOB.*JOB
  PAR.RS_Job = JOB.*JOB;

  // PAR.RS Program = JOB.*PROGRAM
  PAR.RS_Program = JOB.*PROGRAM;

 }

}


