     H/TITLE CLC Pricing using File XF Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Execute external function
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 05/02/13  Time  : 14:15:30
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDIHREL0IF  E           K        DISK
      * RTV : Price Method Header       Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FPDIMCPL2IF  E           K        DISK
      * RSQ : Order Detail Pricing      Ord/Detail/Price Seq
      *
     FPDIMCPW2IF  E           K        DISK
      * RSQ : Order Detail Pricing      Ord/Dtl/Prc Seq Work
      *
      * Long constants
     E                    @CN#    1  19  6   @CN    25
     I@IHRERN
      * Price Method Header       Retrieval index
      * Renamed input format fields
     I              IHAIC3                          WAAIC3
     I              IHQ7CD                          WAQ7CD
     I              IHMLNA                          WAMLNA
     I              IHU0ST                          WAU0ST
     I              IHV8ST                          WAV8ST
     I              IHBYST                          WABYST
     I              IHRMNY                          WARMNY
     I              IHH3ST                          WAH3ST
     I              IHH5ST                          WAH5ST
     I              IHH6ST                          WAH6ST
     I              IHH7ST                          WAH7ST
     I              IHUVST                          WAUVST
     I              IHUWST                          WAUWST
     I              IHUXST                          WAUXST
     I              IHAATM                          WAAATM
     I              IHAYNA                          WAAYNA
     I              IHA0NA                          WAA0NA
     I              IHAXDT                          WAAXDT
      *
     I@BZREJU
      * Company Item              Retrieval index       NV
      * Renamed input format fields
     I              BZAIC3                          WBAIC3
     I              BZHGCD                          WBHGCD
     I              BZAVNA                          WBAVNA
     I              BZAWNA                          WBAWNA
     I              BZL7NA                          WBL7NA
     I              BZL8NA                          WBL8NA
     I              BZL6NA                          WBL6NA
     I              BZMFNA                          WBMFNA
     I              BZADCD                          WBADCD
     I              BZAWPC                          WBAWPC
     I              BZLXST                          WBLXST
     I              BZAECD                          WBAECD
     I              BZAXPC                          WBAXPC
     I              BZLYST                          WBLYST
     I              BZAFCD                          WBAFCD
     I              BZAICD                          WBAICD
     I              BZAIWG                          WBAIWG
     I              BZHICD                          WBHICD
     I              BZRBCD                          WBRBCD
     I              BZFZST                          WBFZST
     I              BZAVST                          WBAVST
     I              BZCZWG                          WBCZWG
     I              BZC0WG                          WBC0WG
     I              BZURTN                          WBURTN
     I              BZAJC8                          WBAJC8
     I              BZRINB                          WBRINB
     I              BZRHNB                          WBRHNB
     I              BZRGNB                          WBRGNB
     I              BZLNCD                          WBLNCD
     I              BZTFNB                          WBTFNB
     I              BZN0CD                          WBN0CD
     I              BZX4ST                          WBX4ST
     I              BZTMVA                          WBTMVA
     I              BZTNVA                          WBTNVA
     I              BZBLPR                          WBBLPR
     I              BZBMPR                          WBBMPR
     I              BZLRCD                          WBLRCD
     I              BZU9ST                          WBU9ST
     I              BZCMCO                          WBCMCO
     I              BZQ1CD                          WBQ1CD
     I              BZQ8CD                          WBQ8CD
     I              BZCHTM                          WBCHTM
     I              BZQZCD                          WBQZCD
     I              BZXWST                          WBXWST
     I              BZXXST                          WBXXST
     I              BZVMST                          WBVMST
     I              BZSWGH                          WBSWGH
     I              BZPPHE                          WBPPHE
     I              BZR3CD                          WBR3CD
     I              BZSDCD                          WBSDCD
     I              BZICN1                          WBICN1
     I              BZSVCD                          WBSVCD
     I              BZICN2                          WBICN2
     I              BZSWCD                          WBSWCD
     I              BZV2NB                          WBV2NB
     I              BZSXCD                          WBSXCD
     I              BZITCN                          WBITCN
     I              BZSYCD                          WBSYCD
     I              BZITC5                          WBITC5
     I              BZSZCD                          WBSZCD
     I              BZICN6                          WBICN6
     I              BZS0CD                          WBS0CD
     I              BZICN7                          WBICN7
     I              BZS1CD                          WBS1CD
     I              BZICN8                          WBICN8
     I              BZS2CD                          WBS2CD
     I              BZICN9                          WBICN9
     I              BZS3CD                          WBS3CD
     I              BZICN0                          WBICN0
     I              BZS4CD                          WBS4CD
     I              BZSFNB                          WBSFNB
     I              BZA3WG                          WBA3WG
     I              BZSJNB                          WBSJNB
     I              BZLLCD                          WBLLCD
     I              BZLMCD                          WBLMCD
     I              BZP3ST                          WBP3ST
     I              BZSKNB                          WBSKNB
     I              BZSLNB                          WBSLNB
     I              BZSMNB                          WBSMNB
     I              BZP4ST                          WBP4ST
     I              BZCFNB                          WBCFNB
     I              BZCGNB                          WBCGNB
     I              BZILNB                          WBILNB
     I              BZCHNB                          WBCHNB
     I              BZCINB                          WBCINB
     I              BZCJNB                          WBCJNB
     I              BZCMNB                          WBCMNB
     I              BZCNNB                          WBCNNB
     I              BZCRNB                          WBCRNB
     I              BZCSNB                          WBCSNB
     I              BZCVNB                          WBCVNB
     I              BZCWNB                          WBCWNB
     I              BZCXNB                          WBCXNB
     I              BZCZNB                          WBCZNB
     I              BZC0NB                          WBC0NB
     I              BZN1CD                          WBN1CD
     I              BZB4NB                          WBB4NB
     I              BZB5NB                          WBB5NB
     I              BZX5ST                          WBX5ST
     I              BZX6ST                          WBX6ST
     I              BZX7ST                          WBX7ST
     I              BZPCCT                          WBPCCT
     I              BZBDNB                          WBBDNB
     I              BZBJNB                          WBBJNB
     I              BZSUST                          WBSUST
     I              BZSVST                          WBSVST
     I              BZSYST                          WBSYST
     I              BZSZST                          WBSZST
     I              BZS1ST                          WBS1ST
     I              BZXRCD                          WBXRCD
     I              BZXTCD                          WBXTCD
     I              BZXUCD                          WBXUCD
     I              BZF5WG                          WBF5WG
     I              BZF6WG                          WBF6WG
     I              BZF7WG                          WBF7WG
     I              BZBLNB                          WBBLNB
     I              BZBNNB                          WBBNNB
     I              BZS2ST                          WBS2ST
     I              BZS4ST                          WBS4ST
     I              BZS5ST                          WBS5ST
     I              BZS6ST                          WBS6ST
     I              BZS8ST                          WBS8ST
     I              BZS9ST                          WBS9ST
     I              BZTCST                          WBTCST
     I              BZTDST                          WBTDST
     I              BZUVST                          WBUVST
     I              BZUWST                          WBUWST
     I              BZUXST                          WBUXST
     I              BZVSST                          WBVSST
     I              BZAATM                          WBAATM
     I              BZAYNA                          WBAYNA
     I              BZA0NA                          WBA0NA
     I              BZAXDT                          WBAXDT
      *
     I@IMCPZ0
      * Order Detail Pricing      Ord/Detail/Price Seq
      * Renamed input format fields
     I              IMAIC3                          WCAIC3
     I              IMC4NB                          WCC4NB
     I              IMDPNB                          WCDPNB
     I              IMUENB                          WCUENB
     I              IMQ9CD                          WCQ9CD
     I              IMPDSQ                          WCPDSQ
     I              IMBNPR                          WCBNPR
     I              IMU6ST                          WCU6ST
     I              IMUVST                          WCUVST
     I              IMUWST                          WCUWST
     I              IMUXST                          WCUXST
     I              IMAATM                          WCAATM
     I              IMAYNA                          WCAYNA
     I              IMA0NA                          WCA0NA
     I              IMAXDT                          WCAXDT
      *
     I@IMPCZW0
      * Order Detail Pricing      Ord/Dtl/Prc Seq Work
      * Renamed input format fields
     I              IMAIC3                          WDAIC3
     I              IMC4NB                          WDC4NB
     I              IMDPNB                          WDDPNB
     I              IMUENB                          WDUENB
     I              IMQ9CD                          WDQ9CD
     I              IMPDSQ                          WDPDSQ
     I              IMBNPR                          WDBNPR
     I              IMU6ST                          WDU6ST
     I              IMUVST                          WDUVST
     I              IMUWST                          WDUWST
     I              IMUXST                          WDUXST
     I              IMAATM                          WDAATM
     I              IMAYNA                          WDAYNA
     I              IMA0NA                          WDA0NA
     I              IMAXDT                          WDAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Order Detail Pricing
      * I :  Company Number
     I                                    P   1   20P1AIC3
      * I :  Order Number
     I                                    P   3   60P1C4NB
      * I :  Order Sequence Number
     I                                    P   7   80P1DPNB
      * I :  Order Secondary Line Seq
     I                                    P   9  100P1UENB
      * I :  Price Detail Sequence
     I                                    P  11  120P1PDSQ
     IP2PARM      DS
      * FLD: STR Quantity/Price Convrt
      * N :  Price based on U/M1 S
     I                                    P   1   64P2APPR
      * N :  Price based on U/M2 S
     I                                    P   7  124P2AQPR
      * N :  Price based on U/M3 S
     I                                    P  13  184P2ARPR
     IP3PARM      DS
      * FLD: Order Detail
      * I :  Item Code
     I                                    P   1   40P3HGCD
      * I :  Price Method Code
     I                                        5   7 P3Q7CD
      * I :  U/M - Ordered
     I                                        8   9 P3AGCD
      * B :  Unit Price
     I                                    P  10  154P3AKPR
      * B :  Unit Price - Credit
     I                                    P  16  214P3ALPR
      * B :  Unit Price Ordered U/M
     I                                    P  22  274P3AUPR
     IP4PARM      DS
      * FLD: *Arrays
      * N :  Pricing Retrieved Amount
     I                                    P   1   64P4TPVA
     IP5PARM      DS
      * FLD: Price Method Header
      * N :  Price Method Type
     I                                        1   1 P5V8ST
     IP6PARM      DS
      * FLD: Company Item
      * N :  U/M - Primary
     I                                        1   2 P6ADCD
      * N :  Conversion Factor 1
     I                                    P   3   74P6AWPC
      * N :  Operation Factor 1
     I                                        8   8 P6LXST
      * N :  U/M - Second
     I                                        9  10 P6AECD
      * N :  Conversion Factor 2
     I                                    P  11  154P6AXPC
      * N :  Operation Factor 2
     I                                       16  16 P6LYST
      * N :  U/M - Third
     I                                       17  18 P6AFCD
      * N :  U/M - Pricing
     I                                       19  20 P6AICD
      * N :  Unit Weight
     I                                    P  21  262P6AIWG
     IP7PARM      DS
      * I :  Event Called From
     I                                        1   2 P7SJCD
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1C4NB    PARM           WP0002  70       Order Number
     C           P1DPNB    PARM           WP0003  30       Order Sequence
     C           P1UENB    PARM           WP0004  30       Order Secondary
     C           P1PDSQ    PARM           WP0005  30       Price Detail Se
     C           P3HGCD    PARM           WP0006  70       Item Code
     C           P3Q7CD    PARM           WP0007  3        Price Method Co
     C           P3AGCD    PARM           WP0008  2        U/M - Ordered
     C           P3AKPR    PARM P3AKPR    WP0009 114       Unit Price
     C           P3ALPR    PARM P3ALPR    WP0010 114       Unit Price - Cr
     C           P3AUPR    PARM P3AUPR    WP0011 114       Unit Price Orde
     C           P7SJCD    PARM           WP0012  2        Event Called Fr
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * CLC Pricing using File XF
      * Retrive Pricing Method Type
      * RTV Price Meth Type    RT - Price Method Header  * 
     C                     EXSR SARVGN
      * Retrieve Item Information
      * RTV Item Conv. Factr   RT - Company Item  * 
     C                     EXSR SBRVGN
     C                     MOVELP6AICD    WUAICD           U/M - Pricing
      * CASE: PAR.Event Called From is Invoice Update
     C           P7SJCD    IFEQ '02'                       *IF
      * Excecute Retrieve Object to calculate pricing from files
      * CLC Pricing using File RT - Order Detail Pricing  * 
     C                     EXSR SCRVGN
     C                     ELSE
      * CASE: PAR.Event Called From is Pre-Update Invoice
     C           P7SJCD    IFEQ '**'                       *IF
      * Excecute Retrieve Object to calculate pricing from files
      * CLC Pricing Using WORK RT - Order Detail Pricing  * 
     C                     EXSR SDRVGN
     C                     END                             *FI
     C                     END                             *FI
      * *****************************************************************
      * This Code was Brought in from CLC Read/Proc. Detail  RT
     C                     EXSR NJSUBR                     This Code was B
      * *****************************************************************
      * This Code was brought in from CLC Price Item         XF
     C                     EXSR NKSUBR                     This Code was b
      * *****************************************************************
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         NASUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NAEXIT    ENDSR
      /EJECT
     CSR         NBSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NBEXIT    ENDSR
      /EJECT
     CSR         NCSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NCEXIT    ENDSR
      /EJECT
     CSR         NDSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NDEXIT    ENDSR
      /EJECT
     CSR         NESUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NEEXIT    ENDSR
      /EJECT
     CSR         NFSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NFEXIT    ENDSR
      /EJECT
     CSR         NGSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NGEXIT    ENDSR
      /EJECT
     CSR         NHSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NHEXIT    ENDSR
      /EJECT
     CSR         NISUBR    BEGSR
      *================================================================
      * Process Gate Adjustment Component
      *================================================================
      * Update Pricing Detail if Gate adj is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         NIEXIT    ENDSR
      /EJECT
     CSR         NJSUBR    BEGSR
      *================================================================
      * This Code was Brought in from CLC Read/Proc. Detail  RT
      *================================================================
      * Convert from CWT to Pricing U/M if Market or Formula Pricing
      * CASE: PAR.Price Method Type is Market or Formula
     C           P5V8ST    IFEQ 'F'                        *IF
     C           P5V8ST    OREQ 'K'
      * CLC Cvt Price-From CW  XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDZ2XFR'              90  CLC Cvt Price-F
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0001  30       Company Number
     C                     PARM P3HGCD    WQ0002  70       Item Code
     C                     PARM P3AKPR    WQ0003 114       Unit Price
     C           WULOVA    PARM *ZERO     WQ0004 114       Price Adjustmen
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDZ2XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     Z-ADDWULOVA    P3AKPR           Unit Price
     C                     END                             *FI
      * Price has been converted to Pricing U/M Price
      * Now convert to the 3 U/M's Parms which will also calc Selling
      * U/M Price.
      * CLC Convert Price Qtys XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDKGXFR'              90  CLC Convert Pri
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1AIC3    WQ0005  30       Company Number
     C                     PARM P3HGCD    WQ0006  70       Item Code
     C           P6AICD    PARM P6AICD    WQ0007  2        U/M - Pricing
     C           P2APPR    PARM P2APPR    WQ0008 114       Price based on
     C           P2AQPR    PARM P2AQPR    WQ0009 114       Price based on
     C           P2ARPR    PARM P2ARPR    WQ0010 114       Price based on
     C                     PARM P3AKPR    WQ0011 114       Unit Price
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDKGXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * U/M - Pricing was moved to Wrk context at the beginning.  If the
      * Pricing Method = EXT then the "Par.U/M - Price" was changed to th
      * U/M - Ordered, therefore move back the original value prior to ex
      * ALSO: If U/M was not Hundred Weight, and not Extention, then The
      * Price had been changed to CW for Computation. Therefore Convert t
      * the Original U/M.
     C                     MOVELWUAICD    P6AICD           U/M - Pricing
      *================================================================
     CSR         NJEXIT    ENDSR
      /EJECT
     CSR         NKSUBR    BEGSR
      *================================================================
      * This Code was brought in from CLC Price Item         XF
      *================================================================
      * If Extended Method=for Price, use Pricing U/M & Load Unit Price
      * CASE: PAR.Price Method Type is Extended Pricing
     C           P5V8ST    IFEQ 'X'                        *IF
      * If U/M Priced = Primary then execute
      * CASE: PAR.U/M - Pricing EQ PAR.U/M - Primary
     C           P6AICD    IFEQ P6ADCD                     *IF
     C                     Z-ADDP2APPR    P3AKPR           Unit Price
     C                     END                             *FI
      * If U/M Priced = Secondary then execute
      * CASE: PAR.U/M - Pricing EQ PAR.U/M - Second
     C           P6AICD    IFEQ P6AECD                     *IF
     C                     Z-ADDP2AQPR    P3AKPR           Unit Price
     C                     END                             *FI
      * If U/M Priced = Third then execute
      * CASE: PAR.U/M - Pricing EQ PAR.U/M - Third
     C           P6AICD    IFEQ P6AFCD                     *IF
     C                     Z-ADDP2ARPR    P3AKPR           Unit Price
     C                     END                             *FI
     C                     END                             *FI
      * If U/M Priced = Primary then execute
      * CASE: PAR.U/M - Ordered EQ PAR.U/M - Primary
     C           P3AGCD    IFEQ P6ADCD                     *IF
     C                     Z-ADDP2APPR    P3AUPR           Unit Price Orde
     C                     END                             *FI
      * If U/M Priced = Secondary then execute
      * CASE: PAR.U/M - Ordered EQ PAR.U/M - Second
     C           P3AGCD    IFEQ P6AECD                     *IF
     C                     Z-ADDP2AQPR    P3AUPR           Unit Price Orde
     C                     END                             *FI
      * If U/M Priced = Third then execute
      * CASE: PAR.U/M - Ordered EQ PAR.U/M - Third
     C           P3AGCD    IFEQ P6AFCD                     *IF
     C                     Z-ADDP2ARPR    P3AUPR           Unit Price Orde
     C                     END                             *FI
      *================================================================
     CSR         NKEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Price Meth Type    RT - Price Method Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAQ7CD           Price Method Co
      * Setup key
     C                     Z-ADDP1AIC3    WAAIC3           Company Number
     C                     MOVELP3Q7CD    WAQ7CD           Price Method Co
      * Establish starting position
     C           KRSSA     CHAIN@IHRERN              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1665' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    P5V8ST           Price Method Ty
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWAV8ST    P5V8ST           Price Method Ty
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Item Conv. Factr   RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WBAIC3           Company Number
     C                     KFLD           WBHGCD           Item Code
      * Setup key
     C                     Z-ADDP1AIC3    WBAIC3           Company Number
     C                     Z-ADDP3HGCD    WBHGCD           Item Code
      * Establish starting position
     C           KRSSB     CHAIN@BZREJU              90    *
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBADCD    P6ADCD           U/M - Primary
     C                     Z-ADDWBAWPC    P6AWPC           Conversion Fact
     C                     MOVELWBLXST    P6LXST           Operation Facto
     C                     MOVELWBAECD    P6AECD           U/M - Second
     C                     Z-ADDWBAXPC    P6AXPC           Conversion Fact
     C                     MOVELWBLYST    P6LYST           Operation Facto
     C                     MOVELWBAFCD    P6AFCD           U/M - Third
     C                     MOVELWBAICD    P6AICD           U/M - Pricing
     C                     Z-ADDWBAIWG    P6AIWG           Unit Weight
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * CLC Pricing using File RT - Order Detail Pricing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     P3AKPR           Unit Price
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSC01           Company Number
     C           *LIKE     DEFN WCC4NB    WQSC02           Order Number
     C           *LIKE     DEFN WCDPNB    WQSC03           Order Sequence
     C           *LIKE     DEFN WCUENB    WQSC04           Order Secondary
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WQSC01           Company Number
     C                     KFLD           WQSC02           Order Number
     C                     KFLD           WQSC03           Order Sequence
     C                     KFLD           WQSC04           Order Secondary
      * Setup key
     C                     Z-ADDP1AIC3    WQSC01           Company Number
     C                     Z-ADDP1C4NB    WQSC02           Order Number
     C                     Z-ADDP1DPNB    WQSC03           Order Sequence
     C                     Z-ADDP1UENB    WQSC04           Order Secondary
      * Establish starting position
     C           KRSSC     SETLL@IMCPZ0                    *
     C           KRSSC     READE@IMCPZ0                  90*
      * Data record not found
     C   90                MOVEL'USR1675' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * ** If a change is made here or a routine is added here then a
      * ** similar routine must also be added to the CLC Pricing Using WO
      * ** in this file and to the CLC Read/Proc. Detail
      * ** in the Price Method Detail file. These need to be kept in sync
      * *** 01 PROCESS COMPONANT MKTPRC IF SELECTED *
      * CASE: Retrieve Market Price
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is MKTPRC
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,001                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Retrieve Market Pricing Componant
     C                     EXSR UASUBR                     Process Retriev
     C                     END                             *FI
      *        04=Unused ( TCRDVY )
      * *** 09 PROCESS COMPONANT CFRTOV IF SELECTED *
      * CASE: Retrieve Freight Overage
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CFRTOV
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,002                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Company/Customer freight Rate Overage Componant
     C                     EXSR UBSUBR                     Process Company
     C                     END                             *FI
      * *** 10 PROCESS COMPONANT CIOVMK IF SELECTED *
      * CASE: Retrieve Market Overage
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIOVMK
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,003                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UCSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 11 PROCESS COMPONANT IOVMKT IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is IOVMKT
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,004                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UDSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 12 PROCESS COMPONANT EXTEND IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is EXTEND
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,005                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Extended Price Method Componant
     C                     EXSR UESUBR                     Process Extende
     C                     END                             *FI
      * *** 13 PROCESS COMPONANT OVRIDE IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is OVRIDE
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,006                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Manual Pricing Componant
     C                     EXSR UFSUBR                     Process Manual
     C                     END                             *FI
      * *** 14 Process Component ACCRLS if selected *
      * CASE: Retrieve Accruals
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is ACCRLS
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,007                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ** Process Retrieve Market Pricing Componant
      * Pricing Retrieved Amount is not equal to 0
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
     C                     END                             *FI
      * *** 15 PROCESS COMPONANT CFRTAB IF SELECTED *
      * CASE: Retrieve Freight Overage
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CFRTAB
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,008                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Company/Customer freight Rate Overage Componant
     C                     EXSR UGSUBR                     Process Company
     C                     END                             *FI
      * *** 16 PROCESS COMPONANT IOVFRT IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is IOVFRT
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,009                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UHSUBR                     Process Item Ma
     C                     END                             *FI
      * P205--New Components
      * *** 17 PROCESS COMPONANT CIMSLV IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIMSLV
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,010                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UISUBR                     Process Item Ma
     C                     END                             *FI
      * *** 18 PROCESS COMPONANT CIPFEE IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIPFEE
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,011                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UJSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 19 PROCESS COMPONANT CIFRTO IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIFRTO
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,012                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UKSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 20 PROCESS COMPONANT CITMOV IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CITMOV
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,013                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR ULSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 21 PROCESS COMPONANT CSFRTO IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CSFRTO
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,014                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UMSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 22 PROCESS COMPONANT PSITPR IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is PSITPR
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,015                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UNSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 23 PROCESS COMPONANT PSMKTO IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is PSMKTO
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,016                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UOSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 24 PROCESS COMPONANT MKTOVR IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is MKTOVR
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,017                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UPSUBR                     Process Item Ma
     C                     END                             *FI
      * E2494-New Component for Gate price AND Flat Duty Priced items
      * *** 25 PROCESS COMPONANT GATADJ IF SELECTED AND IS ACTIVE-*
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is GATADJ
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,018                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Gate Adjustment Componant
     C                     EXSR UQSUBR                     Process Gate Ad
     C                     END                             *FI
      * *** 26 PROCESS COMPONENT DVGADJ IF SELECTED AND IS ACTIVE-*
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is DVFADJ
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WCQ9CD    IFEQ @CN,019                    *IF
     C           WCU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Gate/Final Adjustment Componant
     C                     EXSR URSUBR                     Process Gate/Fi
     C                     END                             *FI
     C           KRSSC     READE@IMCPZ0                  90*
     C                     ENDDO
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * CLC Pricing Using WORK RT - Order Detail Pricing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     P3AKPR           Unit Price
      * Declare restrictor key work fields
     C           *LIKE     DEFN WDAIC3    WQSD01           Company Number
     C           *LIKE     DEFN WDC4NB    WQSD02           Order Number
     C           *LIKE     DEFN WDDPNB    WQSD03           Order Sequence
     C           *LIKE     DEFN WDUENB    WQSD04           Order Secondary
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           WQSD01           Company Number
     C                     KFLD           WQSD02           Order Number
     C                     KFLD           WQSD03           Order Sequence
     C                     KFLD           WQSD04           Order Secondary
      * Setup key
     C                     Z-ADDP1AIC3    WQSD01           Company Number
     C                     Z-ADDP1C4NB    WQSD02           Order Number
     C                     Z-ADDP1DPNB    WQSD03           Order Sequence
     C                     Z-ADDP1UENB    WQSD04           Order Secondary
      * Establish starting position
     C           KRSSD     SETLL@IMPCZW0                   *
     C           KRSSD     READE@IMPCZW0                 90*
      * Data record not found
     C   90                MOVEL'USR1675' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * ** If a change is made here or a routine is added here then a
      * ** similar routine must also be added to the CLC Pricing using Fi
      * ** in this file and to the CLC Read/Proc. Detail
      * ** in the Price Method Detail file. These need to be kept in sync
      * *** 01 PROCESS COMPONANT MKTPRC IF SELECTED *
      * CASE: Retrieve Market Price
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is MKTPRC
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,001                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Retrieve Market Pricing Componant
     C                     EXSR USSUBR                     Process Retriev
     C                     END                             *FI
      *        04=Unused ( TCRDVY )
      * *** 09 PROCESS COMPONANT CFRTOV IF SELECTED *
      * CASE: Retrieve Freight Overage
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CFRTOV
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,002                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Company/Customer freight Rate Overage Componant
     C                     EXSR UTSUBR                     Process Company
     C                     END                             *FI
      * *** 10 PROCESS COMPONANT CIOVMK IF SELECTED *
      * CASE: Retrieve Market Overage
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIOVMK
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,003                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UUSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 11 PROCESS COMPONANT IOVMKT IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is IOVMKT
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,004                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UVSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 12 PROCESS COMPONANT EXTEND IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is EXTEND
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,005                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Extended Price Method Componant
     C                     EXSR UWSUBR                     Process Extende
     C                     END                             *FI
      * *** 13 PROCESS COMPONANT OVRIDE IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is OVRIDE
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,006                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Manual Pricing Componant
     C                     EXSR UXSUBR                     Process Manual
     C                     END                             *FI
      * *** 14 Process Component ACCRLS if selected *
      * CASE: Retrieve ACCRLS Price
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is ACCRLS
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,007                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ** Process Retrieve Accruals Pricing Componant
      * Update Pricing Retrieved Amount is not equal to 0
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
     C                     END                             *FI
      * *** 15 PROCESS COMPONANT CFRTAB IF SELECTED *
      * CASE: Retrieve Freight Overage
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CFRTAB
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,008                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Company/Customer freight Rate Absprbed Componant
     C                     EXSR UYSUBR                     Process Company
     C                     END                             *FI
      * *** 16 PROCESS COMPONANT IOVFRT IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is IOVFRT
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,009                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR UZSUBR                     Process Item Ma
     C                     END                             *FI
      * P205--New Components
      * *** 17 PROCESS COMPONANT CIMSLV IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIMSLV
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,010                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NASUBR                     Process Item Ma
     C                     END                             *FI
      * *** 18 PROCESS COMPONANT CIPFEE IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIPFEE
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,011                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NBSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 19 PROCESS COMPONANT CIFRTO IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CIFRTO
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,012                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NCSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 20 PROCESS COMPONANT CITMOV IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CITMOV
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,013                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NDSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 21 PROCESS COMPONANT CSFRTO IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is CSFRTO
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,014                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NESUBR                     Process Item Ma
     C                     END                             *FI
      * *** 22 PROCESS COMPONANT PSITPR IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is PSITPR
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,015                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NFSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 23 PROCESS COMPONANT PSMKTO IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is PSMKTO
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,016                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NGSUBR                     Process Item Ma
     C                     END                             *FI
      * *** 24 PROCESS COMPONANT MKTOVR IF SELECTED *
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is MKTOVR
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,017                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Item Market Overage Componant
     C                     EXSR NHSUBR                     Process Item Ma
     C                     END                             *FI
      * E2494-New Component for Gate price AND Flat Duty Priced items
      * *** 25 PROCESS COMPONANT GATADJ IF SELECTED AND IS ACTIVE-*
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is GATADJ
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,018                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Process Gate Adjustment Component
     C                     EXSR NISUBR                     Process Gate Ad
     C                     END                             *FI
      * *** 26 PROCESS COMPONENT DVGADJ IF SELECTED AND IS ACTIVE-*
      * CASE:
      *  - c1 AND c2
      *   |- c1    : DB1.Price Method Componant is DVFADJ
      *   |- c2    : DB1.PD Status is Active
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WDQ9CD    IFEQ @CN,019                    *IF
     C           WDU6ST    IFEQ 'A'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Update Pricing Detail if Gate adj is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSD     READE@IMPCZW0                 90*
     C                     ENDDO
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Process Retrieve Market Pricing Componant
      *================================================================
      * Pricing Retrieved Amount is not equal to 0
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Process Company/Customer freight Rate Overage Componant
      *================================================================
      * Update Pricing Detail if Freight Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market  Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         UESUBR    BEGSR
      *================================================================
      * Process Extended Price Method Componant
      *================================================================
      * Pricing Detail if Extended is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     MOVELP3AGCD    P6AICD           U/M - Pricing
     C                     END                             *FI
      *================================================================
     CSR         UEEXIT    ENDSR
      /EJECT
     CSR         UFSUBR    BEGSR
      *================================================================
      * Process Manual Pricing Componant
      *================================================================
      * Pricing Detail if Override Amt is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UFEXIT    ENDSR
      /EJECT
     CSR         UGSUBR    BEGSR
      *================================================================
      * Process Company/Customer freight Rate Overage Componant
      *================================================================
      * Update Pricing Detail if Freight Absorbed is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UGEXIT    ENDSR
      /EJECT
     CSR         UHSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UHEXIT    ENDSR
      /EJECT
     CSR         UISUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UIEXIT    ENDSR
      /EJECT
     CSR         UJSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UJEXIT    ENDSR
      /EJECT
     CSR         UKSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UKEXIT    ENDSR
      /EJECT
     CSR         ULSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         ULEXIT    ENDSR
      /EJECT
     CSR         UMSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UMEXIT    ENDSR
      /EJECT
     CSR         UNSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UNEXIT    ENDSR
      /EJECT
     CSR         UOSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UOEXIT    ENDSR
      /EJECT
     CSR         UPSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UPEXIT    ENDSR
      /EJECT
     CSR         UQSUBR    BEGSR
      *================================================================
      * Process Gate Adjustment Componant
      *================================================================
      * Update Pricing Detail if Gate adj is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UQEXIT    ENDSR
      /EJECT
     CSR         URSUBR    BEGSR
      *================================================================
      * Process Gate/Final Adjustment Componant
      *================================================================
      * Update Pricing Detail if Gate adj is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WCBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WCBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UREXIT    ENDSR
      /EJECT
     CSR         USSUBR    BEGSR
      *================================================================
      * Process Retrieve Market Pricing Componant
      *================================================================
      * Update Pricing Retrieved Amount is not equal to 0
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         USEXIT    ENDSR
      /EJECT
     CSR         UTSUBR    BEGSR
      *================================================================
      * Process Company/Customer freight Rate Overage Componant
      *================================================================
      * Update Pricing Detail if Freight Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UTEXIT    ENDSR
      /EJECT
     CSR         UUSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market  Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UUEXIT    ENDSR
      /EJECT
     CSR         UVSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UVEXIT    ENDSR
      /EJECT
     CSR         UWSUBR    BEGSR
      *================================================================
      * Process Extended Price Method Componant
      *================================================================
      * Update Pricing Detail if Extended is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     MOVELP3AGCD    P6AICD           U/M - Pricing
     C                     END                             *FI
      *================================================================
     CSR         UWEXIT    ENDSR
      /EJECT
     CSR         UXSUBR    BEGSR
      *================================================================
      * Process Manual Pricing Componant
      *================================================================
      * Update Pricing Detail if Override Amt is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UXEXIT    ENDSR
      /EJECT
     CSR         UYSUBR    BEGSR
      *================================================================
      * Process Company/Customer freight Rate Absprbed Componant
      *================================================================
      * Update Pricing Detail if Freight Absorbed is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UYEXIT    ENDSR
      /EJECT
     CSR         UZSUBR    BEGSR
      *================================================================
      * Process Item Market Overage Componant
      *================================================================
      * Update Pricing Detail if Market Overage is not equal to 0.
      * CASE: DB1.Componant Price NE WRK.ZERO
     C           WDBNPR    IFNE WUW0NB                     *IF
      * Accumulate Final Price
     C                     ADD  WDBNPR    P3AKPR           Unit Price
     C                     END                             *FI
      *================================================================
     CSR         UZEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P2APPR           Price based on
     C                     Z-ADD*ZERO     P2AQPR           Price based on
     C                     Z-ADD*ZERO     P2ARPR           Price based on
     C                     Z-ADD*ZERO     P4TPVA           Pricing Retriev
     C                     MOVEL*BLANK    P5V8ST           Price Method Ty
     C                     MOVEL*BLANK    P6ADCD           U/M - Primary
     C                     Z-ADD*ZERO     P6AWPC           Conversion Fact
     C                     MOVEL*BLANK    P6LXST           Operation Facto
     C                     MOVEL*BLANK    P6AECD           U/M - Second
     C                     Z-ADD*ZERO     P6AXPC           Conversion Fact
     C                     MOVEL*BLANK    P6LYST           Operation Facto
     C                     MOVEL*BLANK    P6AFCD           U/M - Third
     C                     MOVEL*BLANK    P6AICD           U/M - Pricing
     C                     Z-ADD*ZERO     P6AIWG           Unit Weight
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WARMNY           Decimal Places
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIC3           Company Number
     C                     Z-ADD*ZERO     WBHGCD           Item Code
     C                     Z-ADD*ZERO     WBAWPC           Conversion Fact
     C                     Z-ADD*ZERO     WBAXPC           Conversion Fact
     C                     Z-ADD*ZERO     WBAIWG           Unit Weight
     C                     Z-ADD*ZERO     WBCZWG           Minimum Weight
     C                     Z-ADD*ZERO     WBC0WG           Maximum Weight
     C                     Z-ADD*ZERO     WBURTN           Number Cases On
     C                     Z-ADD*ZERO     WBAJC8           Vendor - Item D
     C                     Z-ADD*ZERO     WBRINB           Item Structure
     C                     Z-ADD*ZERO     WBRHNB           Item Structure
     C                     Z-ADD*ZERO     WBRGNB           Item Structure
     C                     Z-ADD*ZERO     WBTFNB           Transportation
     C                     Z-ADD*ZERO     WBTMVA           Maximum Audit V
     C                     Z-ADD*ZERO     WBTNVA           Minimum Audit V
     C                     Z-ADD*ZERO     WBBLPR           Market Overage
     C                     Z-ADD*ZERO     WBBMPR           Standard Overag
     C                     Z-ADD*ZERO     WBCMCO           Item Pricing Co
     C                     Z-ADD*ZERO     WBCHTM           Fresh Chilling
     C                     Z-ADD*ZERO     WBSWGH           Std Weight/Head
     C                     Z-ADD*ZERO     WBPPHE           Pieces Per Head
     C                     Z-ADD*ZERO     WBICN1           Item Category N
     C                     Z-ADD*ZERO     WBICN2           Item Category N
     C                     Z-ADD*ZERO     WBV2NB           Item Category N
     C                     Z-ADD*ZERO     WBITCN           Item Category N
     C                     Z-ADD*ZERO     WBITC5           Item Category N
     C                     Z-ADD*ZERO     WBICN6           Item Category N
     C                     Z-ADD*ZERO     WBICN7           Item Category N
     C                     Z-ADD*ZERO     WBICN8           Item Category N
     C                     Z-ADD*ZERO     WBICN9           Item Category N
     C                     Z-ADD*ZERO     WBICN0           Item Category N
     C                     Z-ADD*ZERO     WBSFNB           Pallet Tare Wei
     C                     Z-ADD*ZERO     WBA3WG           Misc Tare Weigh
     C                     Z-ADD*ZERO     WBSJNB           Production Lead
     C                     Z-ADD*ZERO     WBSKNB           Agrimetrics gro
     C                     Z-ADD*ZERO     WBSLNB           Agrimetrics pac
     C                     Z-ADD*ZERO     WBSMNB           Agrimetrics gra
     C                     Z-ADD*ZERO     WBCFNB           PM Pounds per H
     C                     Z-ADD*ZERO     WBCGNB           Item Frt Overag
     C                     Z-ADD*ZERO     WBILNB           Packages per ca
     C                     Z-ADD*ZERO     WBCHNB           Use/Freeze/Sell
     C                     Z-ADD*ZERO     WBCINB           PM Batch Size
     C                     Z-ADD*ZERO     WBCJNB           Package Level s
     C                     Z-ADD*ZERO     WBCMNB           Partial Item Co
     C                     Z-ADD*ZERO     WBCNNB           WIP Item Code
     C                     Z-ADD*ZERO     WBCRNB           WIP Reject Code
     C                     Z-ADD*ZERO     WBCSNB           Std Costing Uni
     C                     Z-ADD*ZERO     WBCVNB           FP Std Green We
     C                     Z-ADD*ZERO     WBCWNB           PM Standard LBS
     C                     Z-ADD*ZERO     WBCXNB           PM Raw Meat LBS
     C                     Z-ADD*ZERO     WBCZNB           PM Formula LBS/
     C                     Z-ADD*ZERO     WBC0NB           PM Finished LBS
     C                     Z-ADD*ZERO     WBB4NB           PM R/M Type Cod
     C                     Z-ADD*ZERO     WBB5NB           PM Line Number
     C                     Z-ADD*ZERO     WBBDNB           Pieces Per Bag
     C                     Z-ADD*ZERO     WBBJNB           Bags Per Unit
     C                     Z-ADD*ZERO     WBF5WG           Item Target Pri
     C                     Z-ADD*ZERO     WBF6WG           Minimum Piece W
     C                     Z-ADD*ZERO     WBF7WG           Maximum Piece W
     C                     Z-ADD*ZERO     WBBLNB           Seaboard Equiva
     C                     Z-ADD*ZERO     WBBNNB           Production Qty
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field U/M - Pricing
     C                     MOVEL*BLANK    WUAICD  2
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCC4NB           Order Number
     C                     Z-ADD*ZERO     WCDPNB           Order Sequence
     C                     Z-ADD*ZERO     WCUENB           Order Secondary
     C                     Z-ADD*ZERO     WCPDSQ           Price Detail Se
     C                     Z-ADD*ZERO     WCBNPR           Componant Price
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Price Adjustment Amount
     C                     Z-ADD*ZERO     WULOVA 114
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 MKTPRC
00002 CFRTOV
00003 CIOVMK
00004 IOVMKT
00005 EXTEND
00006 OVRIDE
00007 ACCRLS
00008 CFRTAB
00009 IOVFRT
00010 CIMSLV
00011 CIPFEE
00012 CIFRTO
00013 CITMOV
00014 CSFRTO
00015 PSITPR
00016 ITMKTO
00017 MKTOVR
00018 GATADJ
00019 DVFADJ
