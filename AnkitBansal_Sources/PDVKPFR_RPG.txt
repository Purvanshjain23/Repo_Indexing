     H/TITLE PRT A/R Cash Journal   PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 10/18/17  Time  : 16:56:05
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCADRREL1IF  E           K        DISK
      * RTV : User Profile Control      Retrieval index       NV
      *
     FCADTREL1IF  E           K        DISK
      * RTV : User Application Profile  Retrieval index       NV
      *
     FCAADREL9IF  E           K        DISK
      * RSQ : Warehouse                 ShipCo/Warehouse
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FPDJ5CPL5IF  E           K        DISK
      * RSQ : A/R Posting and Reporting Co/Bank/Date/Cust/Ck #
      *
     FCAEBREL3IF  E           K        DISK
      * RTV : Bank Master               Retrieval Active Only
      *
     FCABBREL1IF  E           K        DISK
      * RTV : Customer                  Retrieval index       NV
      *
     FPDJ3CPL1IF  E           K        DISK
      * RTV : A/R Adjustment Type       Retrieval index
      *
     FPDJ5CPL0UF  E           K        DISK
      * UPD : A/R Posting and Reporting Update index
      *
     FPDVKPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT A/R Cash Journal   PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1  01  6   @CN    25
     E                    YK01      100 11  A            ARR Adjustment
      *
     E                    YK02      100 11  A            ARR Adjust Typ
      *
     I@J5CPDL
      * A/R Posting and Reporting Update index
      * Renamed input format fields
     I              J5AIC3                          WCAIC3
     I              J5G4CD                          WCG4CD
     I              J5HXDT                          WCHXDT
     I              J5ANC7                          WCANC7
     I              J5CONB                          WCCONB
     I              J5CEST                          WCCEST
     I              J5DXNB                          WCDXNB
     I              J5UHCD                          WCUHCD
     I              J5BSVA                          WCBSVA
     I              J5CPTX                          WCCPTX
     I              J5C1NY                          WCC1NY
     I              J5IZTX                          WCIZTX
     I              J5H0DT                          WCH0DT
     I              J5ATDT                          WCATDT
     I              J5C4NB                          WCC4NB
     I              J5ABST                          WCABST
     I              J5NGNA                          WCNGNA
     I              J5UJCD                          WCUJCD
     I              J5AJST                          WCAJST
     I              J5ADST                          WCADST
     I              J5CKNB                          WCCKNB
     I              J5BCDT                          WCBCDT
     I              J5BGLC                          WCBGLC
     I              J5GLVL                          WCGLVL
     I              J5UVST                          WCUVST
     I              J5UWST                          WCUWST
     I              J5UXST                          WCUXST
     I              J5VSST                          WCVSST
     I              J5AATM                          WCAATM
     I              J5AYNA                          WCAYNA
     I              J5A0NA                          WCA0NA
     I              J5AXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IYD01        DS
     I                                        1   3 YI0101
     I                                        4   60YI0102
     I                                        7  110YI01
      *
     IYM01        DS                        100
     I                                        1   3 WAUHCD
     I                                        4   60WAFKNB
     I                                        7  172WAABCD
     I                                       18  220WAA2NY
      *
     IYW01        DS
     I                                        1   3 XAUHCD
     I                                        4   60XAFKNB
     I                                        7  172XAABCD
     I                                       18  220XAA2NY
      *
     IYD02        DS
     I                                        1   3 YI0201
     I                                        4   60YI0202
     I                                        7  110YI02
      *
     IYM02        DS                        100
     I                                        1   3 WBGEAA
     I                                        4   6 WBGFAA
     I                                        7   9 WBGGAA
     I                                       10  12 WBGHAA
     I                                       13  15 WBGIAA
     I                                       16  18 WBGJAA
     I                                       19  21 WBGKAA
     I                                       22  24 WBGLAA
     I                                       25  27 WBGMAA
     I                                       28  30 WBGNAA
     I                                       31  330WBB5C3
     I                                       34  360WBB6C3
     I                                       37  390WBB7C3
     I                                       40  420WBB8C3
     I                                       43  450WBB9C3
     I                                       46  480WBCAC3
     I                                       49  510WBCBC3
     I                                       52  540WBCCC3
     I                                       55  570WBCDC3
     I                                       58  600WBCEC3
     I                                       61  712WBFGVL
     I                                       72  822WBFHVL
     I                                       83  932WBFIVL
     I                                       94 1042WBFJVL
     I                                      105 1152WBFKVL
     I                                      116 1262WBFLVL
     I                                      127 1372WBFMVL
     I                                      138 1482WBFNVL
     I                                      149 1592WBFOVL
     I                                      160 1702WBFPVL
     I                                      171 1750WBA2NY
     I                                      176 1800WBA3NY
     I                                      181 1850WBA4NY
     I                                      186 1900WBA5NY
     I                                      191 1950WBA6NY
     I                                      196 2000WBA7NY
     I                                      201 2050WBA8NY
     I                                      206 2100WBA9NY
     I                                      211 2150WBBANY
     I                                      216 2200WBBBNY
      *
     IYW02        DS
     I                                        1   3 XBGEAA
     I                                        4   6 XBGFAA
     I                                        7   9 XBGGAA
     I                                       10  12 XBGHAA
     I                                       13  15 XBGIAA
     I                                       16  18 XBGJAA
     I                                       19  21 XBGKAA
     I                                       22  24 XBGLAA
     I                                       25  27 XBGMAA
     I                                       28  30 XBGNAA
     I                                       31  330XBB5C3
     I                                       34  360XBB6C3
     I                                       37  390XBB7C3
     I                                       40  420XBB8C3
     I                                       43  450XBB9C3
     I                                       46  480XBCAC3
     I                                       49  510XBCBC3
     I                                       52  540XBCCC3
     I                                       55  570XBCDC3
     I                                       58  600XBCEC3
     I                                       61  712XBFGVL
     I                                       72  822XBFHVL
     I                                       83  932XBFIVL
     I                                       94 1042XBFJVL
     I                                      105 1152XBFKVL
     I                                      116 1262XBFLVL
     I                                      127 1372XBFMVL
     I                                      138 1482XBFNVL
     I                                      149 1592XBFOVL
     I                                      160 1702XBFPVL
     I                                      171 1750XBA2NY
     I                                      176 1800XBA3NY
     I                                      181 1850XBA4NY
     I                                      186 1900XBA5NY
     I                                      191 1950XBA6NY
     I                                      196 2000XBA7NY
     I                                      201 2050XBA8NY
     I                                      206 2100XBA9NY
     I                                      211 2150XBBANY
     I                                      216 2200XBBBNY
      *
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IQPDJ51    E DSPDJ5CPL0
      * UPD : A/R Posting and Reporting Update index
      * Renamed input format fields
     I              J5AIC3                          WCAIC3
     I              J5G4CD                          WCG4CD
     I              J5HXDT                          WCHXDT
     I              J5ANC7                          WCANC7
     I              J5CONB                          WCCONB
     I              J5CEST                          WCCEST
     I              J5DXNB                          WCDXNB
     I              J5UHCD                          WCUHCD
     I              J5BSVA                          WCBSVA
     I              J5CPTX                          WCCPTX
     I              J5C1NY                          WCC1NY
     I              J5IZTX                          WCIZTX
     I              J5H0DT                          WCH0DT
     I              J5ATDT                          WCATDT
     I              J5C4NB                          WCC4NB
     I              J5ABST                          WCABST
     I              J5NGNA                          WCNGNA
     I              J5UJCD                          WCUJCD
     I              J5AJST                          WCAJST
     I              J5ADST                          WCADST
     I              J5CKNB                          WCCKNB
     I              J5BCDT                          WCBCDT
     I              J5BGLC                          WCBGLC
     I              J5GLVL                          WCGLVL
     I              J5UVST                          WCUVST
     I              J5UWST                          WCUWST
     I              J5UXST                          WCUXST
     I              J5VSST                          WCVSST
     I              J5AATM                          WCAATM
     I              J5AYNA                          WCAYNA
     I              J5A0NA                          WCA0NA
     I              J5AXDT                          WCAXDT
      *
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: A/R Posting and Reporting
      * I : RST Bank Code
     I                                        1   6 P1G4CD
      * I : RST Deposit Date
     I                                    P   7  100P1HXDT
      * I : POS A/R Customer Number
     I                                    P  11  140P1ANC7
     IP2PARM      DS
      * FLD: *Arrays
      * N :  Warehouse Code
     I                                        1   3 P2AJCD
      * N :  Application Code
     I                                        4   9 P2DNCD
      * N :  Salesperson Code
     I                                       10  12 P2BCCD
      * N :  System Date Format
     I                                       13  15 P2B8NA
      * N :  User Profile Name
     I                                       16  25 P2AJVN
      * N :  Allow Multi-Company
     I                                       26  26 P2I6ST
      * N :  Default Printer
     I                                       27  36 P2MPNA
     IP3PARM      DS
      * FLD: A/R Adjustment Type
      * N :  Adjustment Description
     I                                        1  30 P3NFNA
      * N :  Effect on Account
     I                                       31  31 P3EAZT
      * N :  G/L ID Code JDE
     I                                       32  39 P3IZTX
      * N :  Adjustment Limit Amount
     I                                    P  40  452P3UKVA
      * N :  Cash/Adj
     I                                       46  48 P3A5ST
      * N :  User Enter G/L Status
     I                                       49  49 P3GLTS
      * N :  System Control
     I                                       50  50 P3SYSC
     IP4PARM      DS
      * FLD: *Arrays
      * N :  USR Cash Appl Amount
     I                                    P   1   62P4PSVA
      * N :  USR Adjustments Total
     I                                    P   7  122P4JOVA
     IP5PARM      DS
      * I :  Deposit Time
     I                                    P   1   30P5YXNX
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1G4CD    PARM           WP0001  6        Bank Code
     C           P1HXDT    PARM           WP0002  70       Deposit Date
     C           P1ANC7    PARM           WP0003  70       A/R Customer Nu
     C           P5YXNX    PARM           WP0004  40       Deposit Time
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT A/R Cash Journal   PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$JENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT A/R Cash Journal   PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@J5CPD7                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Bank Code
     C                     MOVEL'Y'       W0AL02  1        Deposit Date
     C                     MOVEL'Y'       W0AL03  1        A/R Customer Nu
     C                     MOVEL'Y'       W0AL04  1        A/R Check Numbe
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADD*ZERO     $IICVA           USR Adjustment
     C                     Z-ADD*ZERO     $IVEVA           USR Final Total
     C                     Z-ADD*ZERO     $IPSVA           USR Cash Appl A
     C                     Z-ADD*ZERO     $IJOVA           USR Adjustments
     C                     Z-ADD*ZERO     $IPTVA           USR Cash Appl A
     C                     Z-ADD*ZERO     $INMVL           USR On Account
     C                     MOVEL*BLANK    $IGEAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFGVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA2NY           USR Adjustment
     C                     MOVEL*BLANK    $IGFAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFHVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA3NY           USR Adjustment
     C                     MOVEL*BLANK    $IGGAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFIVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA4NY           USR Adjustment
     C                     MOVEL*BLANK    $IGHAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFJVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA5NY           USR Adjustment
     C                     MOVEL*BLANK    $IGIAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFKVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA6NY           USR Adjustment
     C                     MOVEL*BLANK    $IGJAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFLVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA7NY           USR Adjustment
     C                     MOVEL*BLANK    $IGKAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFMVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA8NY           USR Adjustment
     C                     MOVEL*BLANK    $IGLAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFNVL           USR Adjustment
     C                     Z-ADD*ZERO     $IA9NY           USR Adjustment
     C                     MOVEL*BLANK    $IGMAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFOVL           USR Adjustment
     C                     Z-ADD*ZERO     $IBANY           USR Adjustment
     C                     MOVEL*BLANK    $IGNAA           USR Adjustment
     C                     Z-ADD*ZERO     $IFPVL           USR Adjustment
     C                     Z-ADD*ZERO     $IBBNY           USR Adjustment
     C                     Z-ADD*ZERO     $IATVL           Deposit CB Tota
     C                     Z-ADD*ZERO     $IAXVL           Deposit CB Coun
     C                     Z-ADD*ZERO     $IASVL           Deposit WO Tota
     C                     Z-ADD*ZERO     $IAWVL           Deposit WO Coun
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDJ5AIC3    $DAIC3           Company Number
     C                     MOVEL*BLANK    $DAPTX           Company Name
     C                     MOVELJ5G4CD    $DG4CD           Bank Code
     C                     MOVEL*BLANK    $DAUNA           Description
     C                     Z-ADDJ5HXDT    $DHXDT           Deposit Date
      * Load related totals format
     C                     Z-ADDJ5AIC3    $HAIC3           Company Number
     C                     Z-ADD*ZERO     $HVEVA           USR Final Total
     C                     Z-ADD*ZERO     $HPSVA           USR Cash Appl A
     C                     Z-ADD*ZERO     $HJOVA           USR Adjustments
     C                     Z-ADD*ZERO     $HPTVA           USR Cash Appl A
     C                     Z-ADD*ZERO     $HNMVL           USR On Account
     C                     MOVEL*BLANK    $HGEAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFGVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA2NY           USR Adjustment
     C                     MOVEL*BLANK    $HGFAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFHVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA3NY           USR Adjustment
     C                     MOVEL*BLANK    $HGGAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFIVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA4NY           USR Adjustment
     C                     MOVEL*BLANK    $HGHAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFJVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA5NY           USR Adjustment
     C                     MOVEL*BLANK    $HGIAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFKVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA6NY           USR Adjustment
     C                     MOVEL*BLANK    $HGJAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFLVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA7NY           USR Adjustment
     C                     MOVEL*BLANK    $HGKAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFMVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA8NY           USR Adjustment
     C                     MOVEL*BLANK    $HGLAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFNVL           USR Adjustment
     C                     Z-ADD*ZERO     $HA9NY           USR Adjustment
     C                     MOVEL*BLANK    $HGMAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFOVL           USR Adjustment
     C                     Z-ADD*ZERO     $HBANY           USR Adjustment
     C                     MOVEL*BLANK    $HGNAA           USR Adjustment
     C                     Z-ADD*ZERO     $HFPVL           USR Adjustment
     C                     Z-ADD*ZERO     $HBBNY           USR Adjustment
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDJ5AIC3    $EAIC3           Company Number
     C                     MOVELJ5G4CD    $EG4CD           Bank Code
     C                     Z-ADDJ5HXDT    $EHXDT           Deposit Date
     C                     Z-ADDJ5ANC7    $EANC7           A/R Customer Nu
     C                     MOVEL*BLANK    $EAYTX           Customer Name
      * Load related totals format
     C                     Z-ADD*ZERO     $GAUVL           Deposit WO Coun
     C                     Z-ADD*ZERO     $GAVVL           Deposit CB Coun
     C                     Z-ADD*ZERO     $GATVL           Deposit CB Tota
     C                     Z-ADD*ZERO     $GASVL           Deposit WO Tota
     C                     Z-ADDJ5AIC3    $GAIC3           Company Number
     C                     MOVELJ5G4CD    $GG4CD           Bank Code
     C                     Z-ADDJ5HXDT    $GHXDT           Deposit Date
     C                     Z-ADDJ5ANC7    $GANC7           A/R Customer Nu
     C                     MOVEL*BLANK    $GAYTX           Customer Name
     C                     Z-ADD*ZERO     $GXAVA           USR Cust Cash
     C                     Z-ADD*ZERO     $GXBVA           USR Cust Adju
     C                     Z-ADD*ZERO     $GK4VA           USR Transaction
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
     C           W0AL04    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP04  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDJ5AIC3    $FAIC3           Company Number
     C                     MOVELJ5G4CD    $FG4CD           Bank Code
     C                     Z-ADDJ5HXDT    $FHXDT           Deposit Date
     C                     Z-ADDJ5ANC7    $FANC7           A/R Customer Nu
     C                     Z-ADDJ5CONB    $FCONB           Invoice Number
     C                     MOVELJ5CEST    $FCEST           Invoice Suffix
     C                     Z-ADDJ5DXNB    $FDXNB           Sequence Number
     C                     MOVELJ5UHCD    $FUHCD           Adjustment Type
     C                     Z-ADDJ5BSVA    $FBSVA           Transaction Amo
     C                     MOVELJ5CPTX    $FCPTX           A/R Check Numbe
     C                     Z-ADDJ5C1NY    $FC1NY           G/L Posting Com
     C                     MOVEL*BLANK    $FJNNA           USR Description
     C                     MOVEL*BLANK    $FMCUX           Cost Center. .
     C                     MOVEL*BLANK    $FOBJX           Object Account
     C                     MOVEL*BLANK    $FSUBX           Subsidiary . .
     C                     Z-ADD*ZERO     $FH3NY           G/L Sub Ledger
     C                     MOVEL*BLANK    $FKNNA           USR G/L Account
     C                     MOVELJ5IZTX    $FIZTX           G/L ID Code JDE
     C                     Z-ADDJ5H0DT    $FH0DT           Last Payment Da
     C                     Z-ADDJ5ATDT    $FATDT           Due Date
     C                     Z-ADDJ5C4NB    $FC4NB           Order Number
     C                     MOVELJ5ABST    $FABST           Effect Cust. Ac
     C                     MOVELJ5NGNA    $FNGNA           Explanation
     C                     MOVELJ5UJCD    $FUJCD           Reference Field
     C                     MOVELJ5AJST    $FAJST           A/R Processing
     C                     MOVELJ5ADST    $FADST           Originating Fil
     C                     Z-ADDJ5CKNB    $FCKNB           G/L Document Nu
     C                     Z-ADDJ5BCDT    $FBCDT           Post to G/L Dat
     C                     MOVELJ5BGLC    $FBGLC           Bank G/L ID Cod
     C                     Z-ADDJ5GLVL    $FGLVL           G/L Sub-Ledger
     C                     MOVELJ5UVST    $FUVST           EDI Status 1
     C                     MOVELJ5UWST    $FUWST           EDI Status 2
     C                     MOVELJ5UXST    $FUXST           EDI Status 3
     C                     MOVELJ5VSST    $FVSST           Record Status
     C                     Z-ADDJ5AATM    $FAATM           Job Time
     C                     MOVELJ5AYNA    $FAYNA           User Id
     C                     MOVELJ5A0NA    $FA0NA           Job Name
     C                     Z-ADDJ5AXDT    $FAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      * USER: Process after print of detail format
      * DLT Post/Report Record DL - A/R Posting and Reporting  * 
     C                     EXSR SODLRC
      * *** PK0333 ***
      * CASE:
      *  - c1 OR c2
      *   |- c1    : CUR.Adjustment Type Code is Chargeback
      *   |- c2    : CUR.Adjustment Type Code is Accrual Chargeback
      *   '-
     C           $FUHCD    IFEQ 'CB'                       *IF
     C           $FUHCD    OREQ 'ACB'                      *OR
     C                     ELSE
      * CASE: CUR.Adjustment Type Code is Write Off Under $50
     C           $FUHCD    IFEQ ' WO'                      *IF
     C                     END                             *FI
     C                     END                             *FI
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN J5AIC3    WZA001           Company Number
     C                     Z-ADDJ5AIC3    WZA001
     C           *LIKE     DEFN J5G4CD    WZA002           Bank Code
     C                     MOVELJ5G4CD    WZA002
     C           *LIKE     DEFN J5HXDT    WZA003           Deposit Date
     C                     Z-ADDJ5HXDT    WZA003
     C           *LIKE     DEFN J5ANC7    WZA004           A/R Customer Nu
     C                     Z-ADDJ5ANC7    WZA004
     C           *LIKE     DEFN J5CPTX    WZA005           A/R Check Numbe
     C                     MOVELJ5CPTX    WZA005
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @J5CPD7                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * RST on multi-company      RMC  2/27/06
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.Allow Multi-Company is no
      *   |- c2    : LCL.Company Number NE DB1.Company Number
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P2I6ST    IFEQ 'N'                        *IF
     C           YL0001    IFNE J5AIC3                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Bank Code EQ DB1.Bank Code
      *   |- c2    : PAR.Deposit Date EQ DB1.Deposit Date
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P1G4CD    IFEQ J5G4CD                     *IF
     C           P1HXDT    IFEQ J5HXDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Bank Code
     C                     MOVEL*BLANK    W0AL02  1        Deposit Date
     C                     MOVEL*BLANK    W0AL03  1        A/R Customer Nu
     C                     MOVEL*BLANK    W0AL04  1        A/R Check Numbe
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Bank Code
     C                     MOVEL'Y'       W0AL02  1        Deposit Date
     C                     MOVEL'Y'       W0AL03  1        A/R Customer Nu
     C                     MOVEL'Y'       W0AL04  1        A/R Check Numbe
     C                     ELSE
      * Next record - Detect level breaks
     C           J5AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           J5G4CD    IFNE WZA002                     Bank Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           J5HXDT    IFNE WZA003                     Deposit Date
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           J5ANC7    IFNE WZA004                     A/R Customer Nu
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C           J5CPTX    IFNE WZA005                     A/R Check Numbe
     C           W0AL03    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL04
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL04    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP04
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of A/R Customer Number format
      * RTV Customer Name      RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$GANC7    WL0007           Ship To Custome
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    $GAYTX    P      Customer Name
      * RMC 12/21/05 Company number totals
     C                     ADD  $GK4VA    $HVEVA           USR Final Total
     C                     ADD  $GXAVA    $HPSVA           USR Cash Appl A
     C                     ADD  $GXBVA    $HJOVA           USR Adjustments
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 3
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $GANC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$GANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VGANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGANC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$GKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of A/R Customer Number format
     C                     Z-ADD*ZERO     $GK4VA           USR Transaction
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Accounting Company Number format
     C                     ADD  $HVEVA    $IVEVA           USR Final Total
     C                     ADD  $HPSVA    $IPSVA           USR Cash Appl A
     C                     ADD  $HJOVA    $IJOVA           USR Adjustments
     C                     Z-ADD$HAIC3    WUFKNB           USR Company Num
      * Rtv Arr Adjust Tot ALL RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUFKNB    WL0009           USR Company Num
     C                     MOVEL$HGEAA    WL0010    P      USR Adjustment
     C                     MOVEL$HGFAA    WL0011    P      USR Adjustment
     C                     MOVEL$HGGAA    WL0012    P      USR Adjustment
     C                     MOVEL$HGHAA    WL0013    P      USR Adjustment
     C                     MOVEL$HGIAA    WL0014    P      USR Adjustment
     C                     MOVEL$HGJAA    WL0015    P      USR Adjustment
     C                     MOVEL$HGKAA    WL0016    P      USR Adjustment
     C                     MOVEL$HGLAA    WL0017    P      USR Adjustment
     C                     MOVEL$HGMAA    WL0018    P      USR Adjustment
     C                     MOVEL$HGNAA    WL0019    P      USR Adjustment
     C                     Z-ADDWUB5C3    WL0020           USR Company Num
     C                     Z-ADDWUB6C3    WL0021           USR Company Num
     C                     Z-ADDWUB7C3    WL0022           USR Company Num
     C                     Z-ADDWUB8C3    WL0023           USR Company Num
     C                     Z-ADDWUB9C3    WL0024           USR Company Num
     C                     Z-ADDWUCAC3    WL0025           USR Company Num
     C                     Z-ADDWUCBC3    WL0026           USR Company Num
     C                     Z-ADDWUCCC3    WL0027           USR Company Num
     C                     Z-ADDWUCDC3    WL0028           USR Company Num
     C                     Z-ADDWUCEC3    WL0029           USR Company Num
     C                     Z-ADD$HFGVL    WL0030           USR Adjustment
     C                     Z-ADD$HFHVL    WL0031           USR Adjustment
     C                     Z-ADD$HFIVL    WL0032           USR Adjustment
     C                     Z-ADD$HFJVL    WL0033           USR Adjustment
     C                     Z-ADD$HFKVL    WL0034           USR Adjustment
     C                     Z-ADD$HFLVL    WL0035           USR Adjustment
     C                     Z-ADD$HFMVL    WL0036           USR Adjustment
     C                     Z-ADD$HFNVL    WL0037           USR Adjustment
     C                     Z-ADD$HFOVL    WL0038           USR Adjustment
     C                     Z-ADD$HFPVL    WL0039           USR Adjustment
     C                     Z-ADD$HA2NY    WL0040           USR Adjustment
     C                     Z-ADD$HA3NY    WL0041           USR Adjustment
     C                     Z-ADD$HA4NY    WL0042           USR Adjustment
     C                     Z-ADD$HA5NY    WL0043           USR Adjustment
     C                     Z-ADD$HA6NY    WL0044           USR Adjustment
     C                     Z-ADD$HA7NY    WL0045           USR Adjustment
     C                     Z-ADD$HA8NY    WL0046           USR Adjustment
     C                     Z-ADD$HA9NY    WL0047           USR Adjustment
     C                     Z-ADD$HBANY    WL0048           USR Adjustment
     C                     Z-ADD$HBBNY    WL0049           USR Adjustment
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUFKNB           USR Company Num
     C                     MOVELWL0010    $HGEAA    P      USR Adjustment
     C                     MOVELWL0011    $HGFAA    P      USR Adjustment
     C                     MOVELWL0012    $HGGAA    P      USR Adjustment
     C                     MOVELWL0013    $HGHAA    P      USR Adjustment
     C                     MOVELWL0014    $HGIAA    P      USR Adjustment
     C                     MOVELWL0015    $HGJAA    P      USR Adjustment
     C                     MOVELWL0016    $HGKAA    P      USR Adjustment
     C                     MOVELWL0017    $HGLAA    P      USR Adjustment
     C                     MOVELWL0018    $HGMAA    P      USR Adjustment
     C                     MOVELWL0019    $HGNAA    P      USR Adjustment
     C                     Z-ADDWL0020    WUB5C3           USR Company Num
     C                     Z-ADDWL0021    WUB6C3           USR Company Num
     C                     Z-ADDWL0022    WUB7C3           USR Company Num
     C                     Z-ADDWL0023    WUB8C3           USR Company Num
     C                     Z-ADDWL0024    WUB9C3           USR Company Num
     C                     Z-ADDWL0025    WUCAC3           USR Company Num
     C                     Z-ADDWL0026    WUCBC3           USR Company Num
     C                     Z-ADDWL0027    WUCCC3           USR Company Num
     C                     Z-ADDWL0028    WUCDC3           USR Company Num
     C                     Z-ADDWL0029    WUCEC3           USR Company Num
     C                     Z-ADDWL0030    $HFGVL           USR Adjustment
     C                     Z-ADDWL0031    $HFHVL           USR Adjustment
     C                     Z-ADDWL0032    $HFIVL           USR Adjustment
     C                     Z-ADDWL0033    $HFJVL           USR Adjustment
     C                     Z-ADDWL0034    $HFKVL           USR Adjustment
     C                     Z-ADDWL0035    $HFLVL           USR Adjustment
     C                     Z-ADDWL0036    $HFMVL           USR Adjustment
     C                     Z-ADDWL0037    $HFNVL           USR Adjustment
     C                     Z-ADDWL0038    $HFOVL           USR Adjustment
     C                     Z-ADDWL0039    $HFPVL           USR Adjustment
     C                     Z-ADDWL0040    $HA2NY           USR Adjustment
     C                     Z-ADDWL0041    $HA3NY           USR Adjustment
     C                     Z-ADDWL0042    $HA4NY           USR Adjustment
     C                     Z-ADDWL0043    $HA5NY           USR Adjustment
     C                     Z-ADDWL0044    $HA6NY           USR Adjustment
     C                     Z-ADDWL0045    $HA7NY           USR Adjustment
     C                     Z-ADDWL0046    $HA8NY           USR Adjustment
     C                     Z-ADDWL0047    $HA9NY           USR Adjustment
     C                     Z-ADDWL0048    $HBANY           USR Adjustment
     C                     Z-ADDWL0049    $HBBNY           USR Adjustment
     C                     Z-ADDYL0006    $HNMVL           USR On Account
     C                     Z-ADDYL0005    $HPTVA           USR Cash Appl A
     C                     ADD  YL0006    $INMVL           USR On Account
     C                     ADD  YL0005    $IPTVA           USR Cash Appl A
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 17
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $HAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$HAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VHAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VHAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$HKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
      * USER: Process after print of Accounting Company Number format
     C                     Z-ADD*ZERO     YL0006           USR On Account
     C                     Z-ADD*ZERO     YL0005           USR Cash Appl A
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of final totals format
     C                     Z-ADD0         WUFKNB           USR Company Num
      * Rtv Arr Adjust Tot ALL RT - *Arrays  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUFKNB    WL0009           USR Company Num
     C                     MOVEL$IGEAA    WL0010    P      USR Adjustment
     C                     MOVEL$IGFAA    WL0011    P      USR Adjustment
     C                     MOVEL$IGGAA    WL0012    P      USR Adjustment
     C                     MOVEL$IGHAA    WL0013    P      USR Adjustment
     C                     MOVEL$IGIAA    WL0014    P      USR Adjustment
     C                     MOVEL$IGJAA    WL0015    P      USR Adjustment
     C                     MOVEL$IGKAA    WL0016    P      USR Adjustment
     C                     MOVEL$IGLAA    WL0017    P      USR Adjustment
     C                     MOVEL$IGMAA    WL0018    P      USR Adjustment
     C                     MOVEL$IGNAA    WL0019    P      USR Adjustment
     C                     Z-ADDWUB5C3    WL0020           USR Company Num
     C                     Z-ADDWUB6C3    WL0021           USR Company Num
     C                     Z-ADDWUB7C3    WL0022           USR Company Num
     C                     Z-ADDWUB8C3    WL0023           USR Company Num
     C                     Z-ADDWUB9C3    WL0024           USR Company Num
     C                     Z-ADDWUCAC3    WL0025           USR Company Num
     C                     Z-ADDWUCBC3    WL0026           USR Company Num
     C                     Z-ADDWUCCC3    WL0027           USR Company Num
     C                     Z-ADDWUCDC3    WL0028           USR Company Num
     C                     Z-ADDWUCEC3    WL0029           USR Company Num
     C                     Z-ADD$IFGVL    WL0030           USR Adjustment
     C                     Z-ADD$IFHVL    WL0031           USR Adjustment
     C                     Z-ADD$IFIVL    WL0032           USR Adjustment
     C                     Z-ADD$IFJVL    WL0033           USR Adjustment
     C                     Z-ADD$IFKVL    WL0034           USR Adjustment
     C                     Z-ADD$IFLVL    WL0035           USR Adjustment
     C                     Z-ADD$IFMVL    WL0036           USR Adjustment
     C                     Z-ADD$IFNVL    WL0037           USR Adjustment
     C                     Z-ADD$IFOVL    WL0038           USR Adjustment
     C                     Z-ADD$IFPVL    WL0039           USR Adjustment
     C                     Z-ADD$IA2NY    WL0040           USR Adjustment
     C                     Z-ADD$IA3NY    WL0041           USR Adjustment
     C                     Z-ADD$IA4NY    WL0042           USR Adjustment
     C                     Z-ADD$IA5NY    WL0043           USR Adjustment
     C                     Z-ADD$IA6NY    WL0044           USR Adjustment
     C                     Z-ADD$IA7NY    WL0045           USR Adjustment
     C                     Z-ADD$IA8NY    WL0046           USR Adjustment
     C                     Z-ADD$IA9NY    WL0047           USR Adjustment
     C                     Z-ADD$IBANY    WL0048           USR Adjustment
     C                     Z-ADD$IBBNY    WL0049           USR Adjustment
     C                     EXSR SPRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0009    WUFKNB           USR Company Num
     C                     MOVELWL0010    $IGEAA    P      USR Adjustment
     C                     MOVELWL0011    $IGFAA    P      USR Adjustment
     C                     MOVELWL0012    $IGGAA    P      USR Adjustment
     C                     MOVELWL0013    $IGHAA    P      USR Adjustment
     C                     MOVELWL0014    $IGIAA    P      USR Adjustment
     C                     MOVELWL0015    $IGJAA    P      USR Adjustment
     C                     MOVELWL0016    $IGKAA    P      USR Adjustment
     C                     MOVELWL0017    $IGLAA    P      USR Adjustment
     C                     MOVELWL0018    $IGMAA    P      USR Adjustment
     C                     MOVELWL0019    $IGNAA    P      USR Adjustment
     C                     Z-ADDWL0020    WUB5C3           USR Company Num
     C                     Z-ADDWL0021    WUB6C3           USR Company Num
     C                     Z-ADDWL0022    WUB7C3           USR Company Num
     C                     Z-ADDWL0023    WUB8C3           USR Company Num
     C                     Z-ADDWL0024    WUB9C3           USR Company Num
     C                     Z-ADDWL0025    WUCAC3           USR Company Num
     C                     Z-ADDWL0026    WUCBC3           USR Company Num
     C                     Z-ADDWL0027    WUCCC3           USR Company Num
     C                     Z-ADDWL0028    WUCDC3           USR Company Num
     C                     Z-ADDWL0029    WUCEC3           USR Company Num
     C                     Z-ADDWL0030    $IFGVL           USR Adjustment
     C                     Z-ADDWL0031    $IFHVL           USR Adjustment
     C                     Z-ADDWL0032    $IFIVL           USR Adjustment
     C                     Z-ADDWL0033    $IFJVL           USR Adjustment
     C                     Z-ADDWL0034    $IFKVL           USR Adjustment
     C                     Z-ADDWL0035    $IFLVL           USR Adjustment
     C                     Z-ADDWL0036    $IFMVL           USR Adjustment
     C                     Z-ADDWL0037    $IFNVL           USR Adjustment
     C                     Z-ADDWL0038    $IFOVL           USR Adjustment
     C                     Z-ADDWL0039    $IFPVL           USR Adjustment
     C                     Z-ADDWL0040    $IA2NY           USR Adjustment
     C                     Z-ADDWL0041    $IA3NY           USR Adjustment
     C                     Z-ADDWL0042    $IA4NY           USR Adjustment
     C                     Z-ADDWL0043    $IA5NY           USR Adjustment
     C                     Z-ADDWL0044    $IA6NY           USR Adjustment
     C                     Z-ADDWL0045    $IA7NY           USR Adjustment
     C                     Z-ADDWL0046    $IA8NY           USR Adjustment
     C                     Z-ADDWL0047    $IA9NY           USR Adjustment
     C                     Z-ADDWL0048    $IBANY           USR Adjustment
     C                     Z-ADDWL0049    $IBBNY           USR Adjustment
     C           W0PFM     IFEQ 'Y'
      * This format always starts a new page
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
      * Print format
     C                     WRITE$IFINTTL
     C                     END
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Mention hidden format
     C   99N99             WRITE$C1STPAG
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Accounting Company Number format
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$DAIC3    WL0005           Company Number
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    $DAPTX    P      Name
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $DAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$DAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VDAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$DKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Bank Code of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Deposit Date of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print A/R Customer Number of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of A/R Customer Number format
      * RTV Customer Name      RT - Customer  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDJ5ANC7    WL0007           Ship To Custome
     C                     EXSR SJRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0008    $EAYTX    P      Customer Name
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert A/R Customer Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EANC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EANC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEANC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEANC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print A/R Check Number of PRT A/R Cash Journal   PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP04    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP04    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP04
     C                     END                             FI
      * Print Detail line. of PRT A/R Cash Journal   PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
     C                     ADD  $FBSVA    $GK4VA           USR Transaction
      * Explanation Field
      * CASE: DB1.Explanation is Blank
     C           J5NGNA    IFEQ *BLANK                     *IF
     C                     MOVEL*BLANK    $FJNNA           USR Description
     C                     MOVELJ5UJCD    $FJNNA           USR Description
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELJ5NGNA    $FJNNA           USR Description
     C                     END                             *FI
      * VAL Acct ID JDE-8 dgt  UP - STR Hog Prcr & Eval Sys  * 
     C                     CALL 'ARACTRET'             90  VAL Acct ID JDE
     C                     PARM J5IZTX    WQ0001  8        G/L ID Code Alp
     C           $FMCUX    PARM *BLANK    WQ0002 12        Cost Center. .
     C           $FOBJX    PARM *BLANK    WQ0003  6        Object Account
     C           $FSUBX    PARM *BLANK    WQ0004  8        Subsidiary . .
     C           $FKNNA    PARM *BLANK    WQ0005 30        Description
     C           $FC1NY    PARM *ZERO     WQ0006  30       G/L Posting Com
     C           WUHNST    PARM *BLANK    WQ0007  1        JDE Posting Edi
     C           WUUNCD    PARM *BLANK    WQ0008  7        Error Return te
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'ARACTRET'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     99    *
     C                     END
      * RTV Adj Limits         RT - A/R Adjustment Type  * 
     C                     EXSR SKRVGN
      * Cash Amounts
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Cash/Adj is Cash Adjustment
      *   |- c2    : DB1.Invoice Number is Not equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3A5ST    IFEQ 'CSH'                      *IF
     C           J5CONB    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $FBSVA    $GXAVA           USR Cust Cash
     C                     END                             *FI
      * Adjustment Amount
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Cash/Adj is Adjustment Amount
      *   |- c2    : DB1.Invoice Number is Not equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3A5ST    IFEQ 'ADJ'                      *IF
     C           J5CONB    IFNE *ZERO                      *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  $FBSVA    $GXBVA           USR Cust Adju
     C                     END                             *FI
      * Non-A/R Cash
      * CASE: DB1.Invoice Suffix is Non-A/R Cash
     C           J5CEST    IFEQ 'NA'                       *IF
     C                     Z-ADD*ZERO     $FCONB           Invoice Number
     C                     END                             *FI
      * OMS036 RMC 4/15/05 Accum/Count by Adj Type
      * CASE: PAR.Cash/Adj is Adjustment Amount
     C           P3A5ST    IFEQ 'ADJ'                      *IF
      * CASE: CUR.Adjustment Type Code is Not Accounts Receivable
     C           $FUHCD    IFNE 'ARC'                      *IF
      * Adj Type
      * CASE: CUR.Adjustment Type Code is Accrual Chargeback
     C           $FUHCD    IFEQ 'ACB'                      *IF
     C                     MOVEL*BLANK    WUUHCD           Adjustment Type
     C                     MOVEL'CB'      WUUHCD           Adjustment Type
     C                     ELSE
      * CASE: CUR.Adjustment Type Code is Write Off Under $50
     C           $FUHCD    IFEQ ' WO'                      *IF
     C                     MOVEL*BLANK    WUUHCD           Adjustment Type
     C                     MOVEL'WO'      WUUHCD           Adjustment Type
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL$FUHCD    WUUHCD           Adjustment Type
     C                     END                             *FI
     C                     END                             *FI
      * Rtv Arr Adjustment Tot RT - *Arrays  * 
     C                     EXSR SLRVGN
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CUR.Adjustment Type Code is Regular Pay
     C           $FUHCD    IFEQ 'PAY'                      *IF
     C                     ADD  J5BSVA    YL0005           USR Cash Appl A
     C                     ELSE
      * CASE: CUR.Adjustment Type Code is OA On Account Cash
     C           $FUHCD    IFEQ 'OA'                       *IF
     C                     ADD  J5BSVA    YL0006           USR On Account
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDJ5GLVL    $FH3NY           G/L Sub Ledger
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $FAIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$FAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VFAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$FCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$FDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     MOVEL*BLANK    W0SKP   1
      * Cascade skip to new page requests upwards
     C           W0AP00    IFEQ 'Y'
     C                     MOVEL'Y'       W0SKP
     C                     END
      * Request new page if required
     C           W0SKP     IFEQ 'Y'                        IF
     C                     MOVE 'Y'       W0NEWP
     C                     END                             FI
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT A/R Cash Journal   PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Company Number of PRT A/R Cash Journal   PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * Bank Code of PRT A/R Cash Journal   PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Deposit Date of PRT A/R Cash Journal   PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * A/R Customer Number of PRT A/R Cash Journal   PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  3         W0FSUM
     C                     END                             FI
      *
      * * A/R Check Number of PRT A/R Cash Journal   PF
     C           W0AP04    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT A/R Cash Journal   PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
      * USER: Process top of page
      * RTV Bank Description   RT - Bank Master  * 
     C                     EXSR SIRVGN
     C                     MOVELP1G4CD    $BG4CD           Bank Code
     C                     Z-ADDP1HXDT    $BHXDT           Deposit Date
     C                     Z-ADDP5YXNX    $BYXNX           Deposit Time
      * Convert fields to external form
      * Convert Deposit Date to display format
      * Convert date
     C           1000000   ADD  $BHXDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBHXDT
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'A/R'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Program Setup w/Co RT - User Profile Control  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           DRAJVN           User Profile Na
      * Setup key
     C                     MOVELWN0001    DRAJVN           User Profile Na
      * Establish starting position
     C           KRSSC     CHAIN@DRRETH              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0763' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDRI6ST    P2I6ST           Allow Multi-Com
     C                     MOVELDRMPNA    P2MPNA           Default Printer
     C                     MOVELDRBCCD    P2BCCD           Salesperson Cod
     C                     Z-ADDDRAIC3    YL0002           Company Number
     C                     MOVELDRBUVN    WN0002           User Code Model
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Appl. Profile      RT - Application Profile  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           DTAJVN           User Profile Na
     C                     KFLD           DTDNCD           Application Cod
      * Setup key
     C                     MOVELWL0001    DTAJVN           User Profile Na
     C                     MOVELWL0002    DTDNCD           Application Cod
      * Establish starting position
     C           KRSSD     CHAIN@DTRETE              90    *
      * Data record not found
     C   90                MOVEL'USR0767' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDDTAIC3    WL0003           Company Number
     C                     MOVELDTAJCD    WL0004           Warehouse Code
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Prod Whse for Co  RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN ADBWC3    WQSE01           Shipping Compan
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Shipping Compan
      * Setup key
     C                     Z-ADDYL0004    WQSE01           Shipping Compan
      * Establish starting position
     C           KRSSE     SETLL@ADREWA                    *
     C           KRSSE     READE@ADREWA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Record Status is Active
     C           ADVSST    IFEQ 'A'                        *IF
      * CASE: DB1.Production Warehouse Code is Warehouse Code not Blank
     C           ADAOCD    IFNE *BLANK                     *IF
     C                     MOVELADAOCD    P2AJCD           Warehouse Code
     C                     GOTO SEEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSE     READE@ADREWA                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0005    ABAIC3           Company Number
      * Establish starting position
     C           KRSSF     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0006           Name
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0006           Name
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGDLRC    BEGSR
      *================================================================
      * Dlt Adjustment Totals DL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to ARR Adjustment Totals
     C                     MOVEL*BLANK    YI0101           Adjustment Type
     C                     Z-ADD0         YI0102           USR Company Num
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE *BLANK
     C           YI0102    ORNE 0
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SGEXIT
     C                     ENDIF
     C                     ENDIF
      *
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGEYD01
     C                     SUB  1         YR01    50
     C                     ENDIF
      *
      * Initialize keys in array but retain index to MODS for later reuse
     C                     Z-ADDYI01      YISAV   50
     C                     MOVEL*HIVAL    YD01
     C                     Z-ADDYISAV     YI01
     C                     MOVELYD01      YK01,Y
      * Sort array to compress out deleted element
     C                     SORTAYK01
      * Adjust number of elements currently in array
     C                     SUB  1         YL01
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHDLRC    BEGSR
      *================================================================
      * Dlt Adjustment Tot ALLDL - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to ARR Adjust Typ Amt Totals
     C                     MOVEL*BLANK    YI0201           USR Adjustment
     C                     Z-ADD0         YI0202           USR Company Num
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL02
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD02      ANDNEYK02,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI02
      * Only search if key is not beyond range of current elements
     C           YL02      IFGT 0
     C           YK02,YL02 ANDGTYD02
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD02      LOKUPYK02,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK02,Y    YD02
      * Compare
     C           YI0201    IFNE *BLANK
     C           YI0202    ORNE 0
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SHEXIT
     C                     ENDIF
     C                     ENDIF
      *
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR02      IFGT 0
     C           YR02      ANDLE100
     C           YK02,YR02 ANDGEYD02
     C                     SUB  1         YR02    50
     C                     ENDIF
      *
      * Initialize keys in array but retain index to MODS for later reuse
     C                     Z-ADDYI02      YISAV   50
     C                     MOVEL*HIVAL    YD02
     C                     Z-ADDYISAV     YI02
     C                     MOVELYD02      YK02,Y
      * Sort array to compress out deleted element
     C                     SORTAYK02
      * Adjust number of elements currently in array
     C                     SUB  1         YL02
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * RTV Bank Description   RT - Bank Master  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           EBG4CD           Bank Code
      * Setup key
     C                     MOVELP1G4CD    EBG4CD           Bank Code
      * Establish starting position
     C           KRSSI     CHAIN@EBREVK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0850' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELEBAUNA    $BAUNA           Description
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJRVGN    BEGSR
      *================================================================
      * RTV Customer Name      RT - Customer  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSJ     KLIST
     C                     KFLD           BBBKC7           Ship To Custome
      * Setup key
     C                     Z-ADDWL0007    BBBKC7           Ship To Custome
      * Establish starting position
     C           KRSSJ     CHAIN@BBREE9              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0170' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0008           Customer Name
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBBAYTX    WL0008           Customer Name
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Adj Limits         RT - A/R Adjustment Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           J3AIC3           Company Number
     C                     KFLD           J3UHCD           Adjustment Type
      * Setup key
     C                     Z-ADDJ5AIC3    J3AIC3           Company Number
     C                     MOVELJ5UHCD    J3UHCD           Adjustment Type
      * Establish starting position
     C           KRSSK     CHAIN@J3CPCQ              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2041' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SKEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELJ3NFNA    P3NFNA           Adjustment Desc
     C                     MOVELJ3EAZT    P3EAZT           Effect on Accou
     C                     MOVELJ3IZTX    WUIZTX           G/L ID Code JDE
     C                     Z-ADDJ3UKVA    P3UKVA           Adjustment Limi
     C                     MOVELJ3A5ST    P3A5ST           Cash/Adj
     C                     MOVELJ3GLTS    P3GLTS           User Enter G/L
     C                     ENDIF
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLRVGN    BEGSR
      *================================================================
      * Rtv Arr Adjustment Tot RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C           YL01      IFGT 0
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * Initialize internal index
     C                     MOVEL*LOVAL    YD01
      * Move key fields to ARR Adjustment Totals
     C                     MOVELWUUHCD    YI0101           Adjustment Type
     C                     Z-ADD$FAIC3    YI0102           USR Company Num
      *
      * Only search if key is not beyond range of current elements
     C           YK01,YL01 IFGT YD01
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WUUHCD
     C           YI0102    ORNE $FAIC3
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
      * USER: Processing if Data record not found
      * Crt ARR Adjustment Tot CR - *Arrays  * 
     C                     EXSR SMCRRC
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '1'
     C           YI01      OCUR YM01
      * USER: Process Data record
     C           WAABCD    ADD  $FBSVA    WUABCD           USR amount 1  1
     C           WAA2NY    ADD  1         WUA2NY           USR Adjustment
      * Chg Arr Adjustment Tot CH - *Arrays  * 
     C                     EXSR SNCHRC
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMCRRC    BEGSR
      *================================================================
      * Crt ARR Adjustment Tot CR - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Array full, cannot add any more elements
     C           YL01      IFEQ 100
     C                     MOVEL'Y2U0036' W0RTN   7
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C                     MOVEL*BLANK    XAUHCD           Adjustment Type
     C                     Z-ADD*ZERO     XAFKNB           USR Company Num
     C                     Z-ADD*ZERO     XAABCD           USR amount 1  1
     C                     Z-ADD*ZERO     XAA2NY           USR Adjustment
      * Move all fields to ARR Adjustment Totals
     C                     MOVELWUUHCD    XAUHCD           Adjustment Type
     C                     Z-ADD$FAIC3    XAFKNB           USR Company Num
     C                     Z-ADD$FBSVA    XAABCD           USR amount 1  1
     C                     Z-ADD1         XAA2NY           USR Adjustment
      *
      * Move key fields to ARR Adjustment Totals
     C                     MOVELXAUHCD    YI0101           Adjustment Type
     C                     Z-ADDXAFKNB    YI0102           USR Company Num
      *
      * Check for duplicate primary key
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFEQ XAUHCD
     C           YI0102    ANDEQXAFKNB
      * Array element already exists
     C                     MOVEL'Y2U0003' W0RTN   7
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C                     ENDIF
      *
      * Insert after last used element
     C           YL01      ADD  1         Y       50
      * Check if element was a previously deleted element
     C           YK01,Y    IFNE *HIVAL
      * If so, reuse MODS index
     C                     MOVELYK01,Y    YD01
     C                     ELSE
      * If not, use element number as MODS index
     C                     Z-ADDY         YI01
     C                     ENDIF
      *
      * Create(insert) new element
      * Move key fields to ARR Adjustment Totals
     C                     MOVELXAUHCD    YI0101           Adjustment Type
     C                     Z-ADDXAFKNB    YI0102           USR Company Num
      *
     C                     MOVELYD01      YK01,Y
     C           YI01      OCUR YM01
      * Update MODS fields
     C                     MOVELXAUHCD    WAUHCD           Adjustment Type
     C                     Z-ADDXAFKNB    WAFKNB           USR Company Num
     C                     Z-ADDXAABCD    WAABCD           USR amount 1  1
     C                     Z-ADDXAA2NY    WAA2NY           USR Adjustment
      * Only sort if element is out of position
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Adjust RTVOBJ index to reflect position of added/removed element
     C           YR01      IFGT 0
     C           YR01      ANDLE100
     C           YK01,YR01 ANDGTYD01
     C                     ADD  1         YR01    50
     C                     ENDIF
      * Sort array to place element in correct position
     C                     SORTAYK01
     C                     ENDIF
      * Adjust number of elements currently in array
     C                     ADD  1         YL01
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNCHRC    BEGSR
      *================================================================
      * Chg Arr Adjustment Tot CH - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to ARR Adjustment Totals
     C                     MOVELWUUHCD    YI0101    P      Adjustment Type
     C                     Z-ADD$FAIC3    YI0102           USR Company Num
      *
      * Reset global index if not within range of current elements
     C           Y         IFGT YL01
     C                     Z-ADD1         Y
     C                     ENDIF
      * Only search if not already pointing to correct element
     C           Y         IFGT 0
     C           YD01      ANDNEYK01,Y
      * Initialize internal index
     C                     Z-ADD*ZERO     YI01
      * Only search if key is not beyond range of current elements
     C           YL01      IFGT 0
     C           YK01,YL01 ANDGTYD01
      * Set search index to first element of array
     C                     Z-ADD1         Y       50
     C           YD01      LOKUPYK01,Y               90    Look for >
     C                     ELSE
     C                     SETOF                     90    *
     C                     ENDIF
     C           *IN90     IFEQ '1'
      * Move to data structure for comparison
     C                     MOVELYK01,Y    YD01
      * Compare
     C           YI0101    IFNE WUUHCD
     C           YI0102    ORNE $FAIC3
      *
     C                     SETOF                     90    *
     C                     ENDIF
     C                     ENDIF
     C           *IN90     IFEQ '0'
      * Element not found in array
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C                     ENDIF
     C           YI01      OCUR YM01
      *
      * Move all fields to ARR Adjustment Totals
     C                     MOVELWUUHCD    WAUHCD    P      Adjustment Type
     C                     Z-ADD$FAIC3    WAFKNB           USR Company Num
     C                     Z-ADDWUABCD    WAABCD           USR amount 1  1
     C                     Z-ADDWUA2NY    WAA2NY           USR Adjustment
      *
      *
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SODLRC    BEGSR
      *================================================================
      * DLT Post/Report Record DL - A/R Posting and Reporting  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @J5CPDL
     C                     Z-ADD$FAIC3    WCAIC3           Company Number
     C                     MOVEL$FG4CD    WCG4CD           Bank Code
     C                     Z-ADD$FHXDT    WCHXDT           Deposit Date
     C                     Z-ADD$FANC7    WCANC7           A/R Customer Nu
     C                     Z-ADD$FCONB    WCCONB           Invoice Number
     C                     MOVEL$FCEST    WCCEST           Invoice Suffix
     C                     Z-ADD$FDXNB    WCDXNB           Sequence Number
      *
     C           KLDLSO    KLIST
     C                     KFLD           WCAIC3           Company Number
     C                     KFLD           WCG4CD           Bank Code
     C                     KFLD           WCHXDT           Deposit Date
     C                     KFLD           WCANC7           A/R Customer Nu
     C                     KFLD           WCCONB           Invoice Number
     C                     KFLD           WCCEST           Invoice Suffix
     C                     KFLD           WCDXNB           Sequence Number
     C           KLDLSO    CHAIN@J5CPDL              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDJ5CPL0'MDACP
     C                     MOVEL'@J5CPDL' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SOEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@J5CPDL                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Rtv Arr Adjust Tot ALL RT - *Arrays  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * ** Save PAR Company Number before fields are cleared   2/2/06 LJB
     C                     Z-ADDWL0009    WUFKNB           USR Company Num
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0009           USR Company Num
     C                     MOVEL*BLANK    WL0010           USR Adjustment
     C                     MOVEL*BLANK    WL0011           USR Adjustment
     C                     MOVEL*BLANK    WL0012           USR Adjustment
     C                     MOVEL*BLANK    WL0013           USR Adjustment
     C                     MOVEL*BLANK    WL0014           USR Adjustment
     C                     MOVEL*BLANK    WL0015           USR Adjustment
     C                     MOVEL*BLANK    WL0016           USR Adjustment
     C                     MOVEL*BLANK    WL0017           USR Adjustment
     C                     MOVEL*BLANK    WL0018           USR Adjustment
     C                     MOVEL*BLANK    WL0019           USR Adjustment
     C                     Z-ADD*ZERO     WL0020           USR Company Num
     C                     Z-ADD*ZERO     WL0021           USR Company Num
     C                     Z-ADD*ZERO     WL0022           USR Company Num
     C                     Z-ADD*ZERO     WL0023           USR Company Num
     C                     Z-ADD*ZERO     WL0024           USR Company Num
     C                     Z-ADD*ZERO     WL0025           USR Company Num
     C                     Z-ADD*ZERO     WL0026           USR Company Num
     C                     Z-ADD*ZERO     WL0027           USR Company Num
     C                     Z-ADD*ZERO     WL0028           USR Company Num
     C                     Z-ADD*ZERO     WL0029           USR Company Num
     C                     Z-ADD*ZERO     WL0030           USR Adjustment
     C                     Z-ADD*ZERO     WL0031           USR Adjustment
     C                     Z-ADD*ZERO     WL0032           USR Adjustment
     C                     Z-ADD*ZERO     WL0033           USR Adjustment
     C                     Z-ADD*ZERO     WL0034           USR Adjustment
     C                     Z-ADD*ZERO     WL0035           USR Adjustment
     C                     Z-ADD*ZERO     WL0036           USR Adjustment
     C                     Z-ADD*ZERO     WL0037           USR Adjustment
     C                     Z-ADD*ZERO     WL0038           USR Adjustment
     C                     Z-ADD*ZERO     WL0039           USR Adjustment
     C                     Z-ADD*ZERO     WL0040           USR Adjustment
     C                     Z-ADD*ZERO     WL0041           USR Adjustment
     C                     Z-ADD*ZERO     WL0042           USR Adjustment
     C                     Z-ADD*ZERO     WL0043           USR Adjustment
     C                     Z-ADD*ZERO     WL0044           USR Adjustment
     C                     Z-ADD*ZERO     WL0045           USR Adjustment
     C                     Z-ADD*ZERO     WL0046           USR Adjustment
     C                     Z-ADD*ZERO     WL0047           USR Adjustment
     C                     Z-ADD*ZERO     WL0048           USR Adjustment
     C                     Z-ADD*ZERO     WL0049           USR Adjustment
      * ** Replace PAR Company Number after fields are cleared   2/2/06 L
     C                     Z-ADDWUFKNB    WL0009           USR Company Num
      * ***** Change Log
      * ** 02/01/06 LJB
      * ** Add Company number to the array elements
      * ** Save company number before all parms are cleared so it can be
      * **   replaced. The PAR context is used to populate the array cell
      * *****
     C                     Z-ADD1         Y       50
     C           YL01      IFGT 0
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
     C                     ELSE
      * Array element not found
     C                     MOVEL'Y2U0005' W0RTN   7
     C                     ENDIF
      *
      * Sequence through qualified elements:
     C                     Z-ADDY         YR01    50
     C           YR01      DOWLEYL01
     C                     Z-ADDYR01      Y
     C                     MOVELYK01,Y    YD01
     C           YI01      OCUR YM01
      * USER: Process Data record
      * ** Change adjustment totals to accumulate so this array can
      * ** be used for company totals and for final totals.   2/1/06 LJB
      * ** If a company number is passed in, accumulate for that company
      * ** only so company break totals will print.
      * ** Otherwise, accumulate for all companies. If a type is already
      * ** in the array then add to that bucket, if it is not then
      * ** add to the next empty bucket.
      * ** Test PAR Co #, if blank include all, else, select matching Co#
      * CASE:
      *  - (c1 AND c2) OR c3
      *   |- c1    : PAR.USR Company Number is not equal to zero
      *   |- c2    : DB1.USR Company Number EQ PAR.USR Company Number
      *   |- c3    : PAR.USR Company Number is Equal to zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WL0009    IFNE 0                          *IF
     C           WAFKNB    IFEQ WL0009                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFNE '1'                        *IF
     C           WL0009    IFEQ 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ** Accumulate into the correct available bucket
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 1 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 1 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0010    IFEQ *BLANK                     *IF
     C           WL0010    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0020           USR Company Num
     C                     MOVELWAUHCD    WL0010           USR Adjustment
     C                     ADD  WAABCD    WL0030           USR Adjustment
     C                     ADD  WAA2NY    WL0040           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 2 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 2 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0011    IFEQ *BLANK                     *IF
     C           WL0011    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0021           USR Company Num
     C                     MOVELWAUHCD    WL0011           USR Adjustment
     C                     ADD  WAABCD    WL0031           USR Adjustment
     C                     ADD  WAA2NY    WL0041           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 3 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 3 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0012    IFEQ *BLANK                     *IF
     C           WL0012    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0022           USR Company Num
     C                     MOVELWAUHCD    WL0012           USR Adjustment
     C                     ADD  WAABCD    WL0032           USR Adjustment
     C                     ADD  WAA2NY    WL0042           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 4 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 4 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0013    IFEQ *BLANK                     *IF
     C           WL0013    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0023           USR Company Num
     C                     MOVELWAUHCD    WL0013           USR Adjustment
     C                     ADD  WAABCD    WL0033           USR Adjustment
     C                     ADD  WAA2NY    WL0043           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 5 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 5 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0014    IFEQ *BLANK                     *IF
     C           WL0014    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0024           USR Company Num
     C                     MOVELWAUHCD    WL0014           USR Adjustment
     C                     ADD  WAABCD    WL0034           USR Adjustment
     C                     ADD  WAA2NY    WL0044           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 6 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 6 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0015    IFEQ *BLANK                     *IF
     C           WL0015    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0025           USR Company Num
     C                     MOVELWAUHCD    WL0015           USR Adjustment
     C                     ADD  WAABCD    WL0035           USR Adjustment
     C                     ADD  WAA2NY    WL0045           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 7 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 7 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0016    IFEQ *BLANK                     *IF
     C           WL0016    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0026           USR Company Num
     C                     MOVELWAUHCD    WL0016           USR Adjustment
     C                     ADD  WAABCD    WL0036           USR Adjustment
     C                     ADD  WAA2NY    WL0046           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 8 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 8 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0017    IFEQ *BLANK                     *IF
     C           WL0017    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0027           USR Company Num
     C                     MOVELWAUHCD    WL0017           USR Adjustment
     C                     ADD  WAABCD    WL0037           USR Adjustment
     C                     ADD  WAA2NY    WL0047           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 9 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 9 EQ DB1.Adjustment Type Cod
      *   '-
     C           WL0018    IFEQ *BLANK                     *IF
     C           WL0018    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0028           USR Company Num
     C                     MOVELWAUHCD    WL0018           USR Adjustment
     C                     ADD  WAABCD    WL0038           USR Adjustment
     C                     ADD  WAA2NY    WL0048           USR Adjustment
     C                     ELSE
      * CASE:
      *  - c1 OR c2
      *   |- c1    : PAR.USR Adjustment Type 10 is Not Entered
      *   |- c2    : PAR.USR Adjustment Type 10 EQ DB1.Adjustment Type Co
      *   '-
     C           WL0019    IFEQ *BLANK                     *IF
     C           WL0019    OREQ WAUHCD                     *OR
     C                     Z-ADDWAFKNB    WL0029           USR Company Num
     C                     MOVELWAUHCD    WL0019           USR Adjustment
     C                     ADD  WAABCD    WL0039           USR Adjustment
     C                     ADD  WAA2NY    WL0049           USR Adjustment
     C                     ELSE
      * CASE: *OTHERWISE
      * add any remaining here.
     C                     ADD  WAABCD    WL0039           USR Adjustment
     C                     ADD  WAA2NY    WL0049           USR Adjustment
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  1         YR01
     C                     ENDDO
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * ***** Change Log and Comments
      *================================================================
      * RMC R11913  10/18/17 Added PAY total and OA Totals to company & f
      * 02/23/2010 LJB E000512  New parm added to ARACTRET & ARACTEDT.
      * RMC OMS036 4/15/05 Deposit Time is part of the key, allow print
      *            posted deposits. so dont update if it has beeen posted
      * RMC OMS036 4/15/05 Added array processing to print adj totals
      * ** LJB ARS011 02/01/2006 - Add co# to the arrays. Pass co# into
      * ** the array retrieval functions and add to the proper cell.
      * ** Print the co# adjustments after the co# level breaks.
      * RMC TFS010 2/27/06 If multi-co is NO, print user's company trans
      * RMC TFS010 3/02/06 Page break on final totals
      * ----------------------------------
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Reclaim resources of called programs
     C                     CALL 'Y2RCRSC'
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P2AJCD           Warehouse Code
     C                     MOVEL*BLANK    P2DNCD           Application Cod
     C                     MOVEL*BLANK    P2BCCD           Salesperson Cod
     C                     MOVEL*BLANK    P2B8NA           System Date For
     C                     MOVEL*BLANK    P2AJVN           User Profile Na
     C                     MOVEL*BLANK    P2I6ST           Allow Multi-Com
     C                     MOVEL*BLANK    P2MPNA           Default Printer
     C                     MOVEL*BLANK    P3NFNA           Adjustment Desc
     C                     MOVEL*BLANK    P3EAZT           Effect on Accou
     C                     MOVEL*BLANK    P3IZTX           G/L ID Code JDE
     C                     Z-ADD*ZERO     P3UKVA           Adjustment Limi
     C                     MOVEL*BLANK    P3A5ST           Cash/Adj
     C                     MOVEL*BLANK    P3GLTS           User Enter G/L
     C                     MOVEL*BLANK    P3SYSC           System Control
     C                     Z-ADD*ZERO     P4PSVA           USR Cash Appl A
     C                     Z-ADD*ZERO     P4JOVA           USR Adjustments
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Define work field Name
     C                     MOVEL*BLANK    WUADTX 30
      * Define work field System Value Alpha
     C                     MOVEL*BLANK    WUBXTX 40
      * Define work field Access Denied (Y/N)
     C                     MOVEL*BLANK    WUWVST  1
      * Define work field Company Number
     C                     Z-ADD*ZERO     WUAIC3  30
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK01
      * Initialize last used element number
     C                     Z-ADD0         YL01    50
     C                     Z-ADD1         Y       50
     C                     ENDIF
      *
      *
     C           W0ICL     IFEQ 'Y'
      * Initialize array variables
     C                     MOVEA*HIVAL    YK02
      * Initialize last used element number
     C                     Z-ADD0         YL02    50
     C                     ENDIF
      *
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    J5AIC3           Company Number
     C                     MOVEL*LOVAL    J5G4CD           Bank Code
     C                     MOVEL*LOVAL    J5HXDT           Deposit Date
     C                     MOVEL*LOVAL    J5ANC7           A/R Customer Nu
     C                     MOVEL*LOVAL    J5CPTX           A/R Check Numbe
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field JDE Posting Edit Code USR
     C                     MOVEL*BLANK    WUHNST  1
      * Define work field Error Return text
     C                     MOVEL*BLANK    WUUNCD  7
      * Define work field G/L ID Code JDE
     C                     MOVEL*BLANK    WUIZTX  8
      * Define work field Adjustment Type Code
     C                     MOVEL*BLANK    WUUHCD  3
      * Define work field USR amount 1  11.2
     C                     Z-ADD*ZERO     WUABCD 112
      * Define work field USR Adjustment Count 1
     C                     Z-ADD*ZERO     WUA2NY  50
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCHXDT           Deposit Date
     C                     Z-ADD*ZERO     WCANC7           A/R Customer Nu
     C                     Z-ADD*ZERO     WCCONB           Invoice Number
     C                     Z-ADD*ZERO     WCDXNB           Sequence Number
     C                     Z-ADD*ZERO     WCBSVA           Transaction Amo
     C                     Z-ADD*ZERO     WCC1NY           G/L Posting Com
     C                     Z-ADD*ZERO     WCH0DT           Last Payment Da
     C                     Z-ADD*ZERO     WCATDT           Due Date
     C                     Z-ADD*ZERO     WCC4NB           Order Number
     C                     Z-ADD*ZERO     WCCKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WCBCDT           Post to G/L Dat
     C                     Z-ADD*ZERO     WCGLVL           G/L Sub-Ledger
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field USR Company Number
     C                     Z-ADD*ZERO     WUFKNB  30
      * Define work field USR Company Number 1
     C                     Z-ADD*ZERO     WUB5C3  30
      * Define work field USR Company Number 2
     C                     Z-ADD*ZERO     WUB6C3  30
      * Define work field USR Company Number 3
     C                     Z-ADD*ZERO     WUB7C3  30
      * Define work field USR Company Number 4
     C                     Z-ADD*ZERO     WUB8C3  30
      * Define work field USR Company Number 5
     C                     Z-ADD*ZERO     WUB9C3  30
      * Define work field USR Company Number 6
     C                     Z-ADD*ZERO     WUCAC3  30
      * Define work field USR Company Number 7
     C                     Z-ADD*ZERO     WUCBC3  30
      * Define work field USR Company Number 8
     C                     Z-ADD*ZERO     WUCCC3  30
      * Define work field USR Company Number 9
     C                     Z-ADD*ZERO     WUCDC3  30
      * Define work field USR Company Number 10
     C                     Z-ADD*ZERO     WUCEC3  30
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     MOVEL*BLANK    WL0001 10
     C                     MOVEL*BLANK    WL0002  6
     C                     Z-ADD*ZERO     WL0003  30
     C                     MOVEL*BLANK    WL0004  3
      * Define local variables for subroutine SFRVGN.
     C                     Z-ADD*ZERO     WL0005  30
     C                     MOVEL*BLANK    WL0006 30
      * Define local variables for subroutine SJRVGN.
     C                     Z-ADD*ZERO     WL0007  70
     C                     MOVEL*BLANK    WL0008 30
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0009  30
     C                     MOVEL*BLANK    WL0010  3
     C                     MOVEL*BLANK    WL0011  3
     C                     MOVEL*BLANK    WL0012  3
     C                     MOVEL*BLANK    WL0013  3
     C                     MOVEL*BLANK    WL0014  3
     C                     MOVEL*BLANK    WL0015  3
     C                     MOVEL*BLANK    WL0016  3
     C                     MOVEL*BLANK    WL0017  3
     C                     MOVEL*BLANK    WL0018  3
     C                     MOVEL*BLANK    WL0019  3
     C                     Z-ADD*ZERO     WL0020  30
     C                     Z-ADD*ZERO     WL0021  30
     C                     Z-ADD*ZERO     WL0022  30
     C                     Z-ADD*ZERO     WL0023  30
     C                     Z-ADD*ZERO     WL0024  30
     C                     Z-ADD*ZERO     WL0025  30
     C                     Z-ADD*ZERO     WL0026  30
     C                     Z-ADD*ZERO     WL0027  30
     C                     Z-ADD*ZERO     WL0028  30
     C                     Z-ADD*ZERO     WL0029  30
     C                     Z-ADD*ZERO     WL0030 112
     C                     Z-ADD*ZERO     WL0031 112
     C                     Z-ADD*ZERO     WL0032 112
     C                     Z-ADD*ZERO     WL0033 112
     C                     Z-ADD*ZERO     WL0034 112
     C                     Z-ADD*ZERO     WL0035 112
     C                     Z-ADD*ZERO     WL0036 112
     C                     Z-ADD*ZERO     WL0037 112
     C                     Z-ADD*ZERO     WL0038 112
     C                     Z-ADD*ZERO     WL0039 112
     C                     Z-ADD*ZERO     WL0040  50
     C                     Z-ADD*ZERO     WL0041  50
     C                     Z-ADD*ZERO     WL0042  50
     C                     Z-ADD*ZERO     WL0043  50
     C                     Z-ADD*ZERO     WL0044  50
     C                     Z-ADD*ZERO     WL0045  50
     C                     Z-ADD*ZERO     WL0046  50
     C                     Z-ADD*ZERO     WL0047  50
     C                     Z-ADD*ZERO     WL0048  50
     C                     Z-ADD*ZERO     WL0049  50
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0001  30
      * Define local work field Company Number
     C                     Z-ADD*ZERO     YL0002  30
      * Define local work field Warehouse Code
     C                     MOVEL*BLANK    YL0003  3
      * Define local work field Shipping Company
     C                     Z-ADD*ZERO     YL0004  30
      * Define local work field USR Cash Appl Amt Total
     C                     Z-ADD*ZERO     YL0005 112
      * Define local work field USR On Account Total
     C                     Z-ADD*ZERO     YL0006 112
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      *
     C                     MOVEL*BLANK    WN0001 10        User Profile Na
      *
      * VAL Set Int.Acc No Hdg IF
     C                     MOVEL##USR     WN0001           User Profile Na
      *
     C                     MOVEL*BLANK    WN0002 10        User Code Model
      *
      * VAL User/Appl No Exit  IF
      * RMC 5/11/09 Rtv default company from user profile --
      *   Override user code model company if it exists
      * RTV Program Setup w/Co RT - User Profile Control  * 
     C                     EXSR SCRVGN
      * User Profile Record Not found
      * CASE: PGM.*Return code is *Record does not exist
     C           W0RTN     IFEQ @CN,001                    *IF
     C                     MOVEL'Y'       WUWVST           Access Denied (
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       WUWVST           Access Denied (
     C                     END                             *FI
      * CASE: PAR.User Code Model is equal to blank
     C           WN0002    IFEQ *BLANK                     *IF
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0001    WL0001    P      User Profile Na
     C                     MOVEL'A/R'     WL0002    P      Application Cod
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WUAIC3           Company Number
     C                     MOVELWL0004    YL0003    P      Warehouse Code
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Appl. Profile      RT - Application Profile  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELWN0002    WL0001    P      User Profile Na
     C                     MOVEL'A/R'     WL0002    P      Application Cod
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WUAIC3           Company Number
     C                     MOVELWL0004    YL0003    P      Warehouse Code
     C                     END                             *FI
     C                     MOVELYL0003    P2AJCD           Warehouse Code
      * Return code when not normal for Application Profile
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     MOVEL'N'       WUWVST           Access Denied (
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'Y'       WUWVST           Access Denied (
     C                     END                             *FI
      * CASE: LCL.Company Number is greater than zero
     C           YL0002    IFGT 0                          *IF
     C                     Z-ADDYL0002    WUAIC3           Company Number
      * CASE: LCL.Warehouse Code is Not Blanks
     C           YL0003    IFNE *BLANK                     *IF
      * RTV Prod Whse for Co  RT - Warehouse  * 
     C                     EXSR SERVGN
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWUAIC3    YL0001           Company Number
     C                     MOVELWUWVST    WUWVST           Access Denied (
      * If access denied is no, rtv co. name
      * CASE: WRK.Access Denied (Y/N) is no
     C           WUWVST    IFEQ 'N'                        *IF
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWUAIC3    WL0005           Company Number
     C                     EXSR SFRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0006    WUADTX    P      Name
     C                     END                             *FI
     C                     Z-ADD*ZERO     P4PSVA           USR Cash Appl A
     C                     Z-ADD*ZERO     P4JOVA           USR Adjustments
      * Dlt Adjustment Totals DL - *Arrays  * 
     C                     EXSR SGDLRC
      * Dlt Adjustment Tot ALLDL - *Arrays  * 
     C                     EXSR SHDLRC
      * ***** Change Log and Comments
     C                     EXSR UASUBR                     ***** Change Lo
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
