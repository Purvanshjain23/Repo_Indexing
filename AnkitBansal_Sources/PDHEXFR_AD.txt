// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDHEXFR
// ?Date: 14.08.2025 Time: 03:34:36
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(CHG Dflt OnHand/Physcl RT) TYPE(RTVOBJ) FILE(CAB1REP)          AC1503256;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Production_Date);
PARAMETER(PAR.Item_Structure_Class_Code);
PARAMETER(PAR.Item_Structure_Group_Code);
PARAMETER(PAR.Item_Structure_Type_Code);
PARAMETER(PAR.Transaction_Date_Code);
PARAMETER(PAR.UOM_Transaction);
PARAMETER(PAR.Shift_Number);
{
 //?USER: Initialize routine

 // PAR.Change Code = CND.No
 PAR.Change_Code = 'N';

 //?USER: Process Data record

 CASE;

 // IF DB1.Physical Count Weight NE DB1.Quantity on Hand - Weight
 IF DB1.Physical_Count_Weight <> DB1.Quantity_on_Hand_Weight;

 // PAR.Physical Count Weight = DB1.Quantity on Hand - Weight
 PAR.Physical_Count_Weight = DB1.Quantity_on_Hand_Weight;

 // PAR.Transaction Weight = PAR.Physical Count Weight - DB1.Physical Count Weight
 PAR.Transaction_Weight = PAR.Physical_Count_Weight - DB1.Physical_Count_Weight;

 // PAR.Change Code = CND.Yes
 PAR.Change_Code = 'Y';

 ENDIF;

 CASE;

 // IF PAR.Change Code is Yes
 IF PAR.Change_Code = 'Y';

 // PAR.Physical Count Qty - U/M1 = DB1.Quantity on Hand - U/M1
 PAR.Physical_Count_Qty_UOM1 = DB1.Quantity_on_Hand_UOM1;

 // PAR.Transaction Quantity = PAR.Physical Count Qty - U/M1 - DB1.Physical Count Qt
 PAR.Transaction_Quantity = PAR.Physical_Count_Qty_UOM1 - DB1.Physical_Count_Qty_UOM1;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Physical Count Qty - U/M1 NE DB1.Quantity on Hand - U/M1
 IF DB1.Physical_Count_Qty_UOM1 <> DB1.Quantity_on_Hand_UOM1;

 // PAR.Physical Count Qty - U/M1 = DB1.Quantity on Hand - U/M1
 PAR.Physical_Count_Qty_UOM1 = DB1.Quantity_on_Hand_UOM1;

 // PAR.Transaction Quantity = PAR.Physical Count Qty - U/M1 - DB1.Physical Count Qt
 PAR.Transaction_Quantity = PAR.Physical_Count_Qty_UOM1 - DB1.Physical_Count_Qty_UOM1;

 // PAR.Change Code = CND.Yes
 PAR.Change_Code = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Change Code = CND.No
 PAR.Change_Code = 'N';

 ENDIF;

 ENDIF;

 CASE;

 // IF PAR.Change Code is Yes
 IF PAR.Change_Code = 'Y';

 EXECUTE FUNCTION(Chg Man Physical Count CH) TYPE(CHGOBJ) FILE(CAB1REP)          AC1503281;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(PAR.Physical_Count_Weight);
 PARAMETER(PAR.Physical_Count_Qty_UOM1);
 PARAMETER('P');
 PARAMETER(DB1.Physical_Start_Date);
 PARAMETER(DB1.Label_Date);
 PARAMETER(PAR.Item_Structure_Class_Code);
 PARAMETER(PAR.Item_Structure_Group_Code);
 PARAMETER(PAR.Item_Structure_Type_Code);
 PARAMETER(PAR.Transaction_Quantity);
 PARAMETER(PAR.Transaction_Weight);
 PARAMETER(PAR.Transaction_Date_Code);
 PARAMETER(PAR.UOM_Transaction);
 PARAMETER(PAR.Shift_Number);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?USER: Processing after Data update

  EXECUTE FUNCTION(Crt Phys. Count Trans  IF) TYPE(EXCINTFUN)                     AC1347512;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER('A');
  PARAMETER('P');
  PARAMETER(PAR.Transaction_Date_Code);
  PARAMETER(DB1.Production_Date);
  PARAMETER(PAR.UOM_Transaction);
  PARAMETER('IC');
  PARAMETER('Physical Count Entry');
  PARAMETER(PAR.Transaction_Quantity);
  PARAMETER(PAR.Transaction_Weight);
  PARAMETER(PAR.Shift_Number);
  PARAMETER(DB1.Label_Date);
  {
   //?Execute internal function

   EXECUTE FUNCTION(Rtv Item Typ/Grp/Cls  RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1298334;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Item_Structure_Class_Code);
   PARAMETER(PAR.Item_Structure_Group_Code);
   PARAMETER(PAR.Item_Structure_Type_Code);
   {
    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   EXECUTE FUNCTION(Rtv Next Sequence No.  RT) TYPE(RTVOBJ) FILE(CAB7CPP)          AC1304410;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Inventory_Trans_ID);
   PARAMETER(PAR.Inventory_Trans_Type);
   PARAMETER(PAR.Transaction_Date_Code);
   PARAMETER(PAR.ITD_Sequence_Number);
   {
    //?USER: Processing if Data record not found

    // PAR.ITD Sequence Number = CON.1
    PAR.ITD_Sequence_Number = 1;

    //?USER: Process Data record

    // PAR.ITD Sequence Number = DB1.ITD Sequence Number + CON.1
    PAR.ITD_Sequence_Number = DB1.ITD_Sequence_Number + 1;

    QUIT;

   }

   EXECUTE FUNCTION(Crt IC Trans. Detail   CR) TYPE(CRTOBJ) FILE(CAB7CPP)          AC1122298;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Inventory_Trans_ID);
   PARAMETER(PAR.Inventory_Trans_Type);
   PARAMETER(PAR.Transaction_Date_Code);
   PARAMETER(PAR.ITD_Sequence_Number);
   PARAMETER(*ZERO);
   PARAMETER(PAR.Production_Date);
   PARAMETER(PAR.UOM_Transaction);
   PARAMETER(PAR.Item_Transaction_Source);
   PARAMETER(PAR.Description);
   PARAMETER(PAR.Transaction_Quantity);
   PARAMETER(PAR.Transaction_Weight);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER('N');
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(PAR.Item_Structure_Class_Code);
   PARAMETER(PAR.Item_Structure_Group_Code);
   PARAMETER(PAR.Item_Structure_Type_Code);
   PARAMETER(*BLANK);
   PARAMETER(*ZERO);
   PARAMETER(PAR.Shift_Number);
   PARAMETER(PAR.Label_Date);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER(*BLANK);
   PARAMETER('A');
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

    //?USER: Processing after Data update

    // Call program Crt Export Rate Dtl   XF.
    CALL PROGRAM(Crt Export Rate Dtl   XF) ('POO5XFR');
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Item_Code);
    PARAMETER(DB1.Warehouse_Code);
    PARAMETER(DB1.Inventory_Trans_ID);
    PARAMETER(DB1.Inventory_Trans_Type);
    PARAMETER(DB1.Transaction_Date_Code);
    PARAMETER(DB1.Sequence_Number);
    PARAMETER(DB1.Production_Date);
    PARAMETER(DB1.UOM_Transaction);
    PARAMETER(DB1.Item_Transaction_Source);
    PARAMETER(DB1.Description);
    PARAMETER(DB1.Transaction_Quantity);
    PARAMETER(DB1.Transaction_Weight);
    PARAMETER(DB1.USR_Transaction_Unit_Cost);
    PARAMETER(DB1.UOM_Cost);
    PARAMETER(DB1.Extended_Amount);
    PARAMETER(DB1.Ticket_Number);
    PARAMETER(DB1.GL_Document_Number);
    PARAMETER(DB1.GL_Update_Status);
    PARAMETER(DB1.Reason_Code);
    PARAMETER(DB1.Reference_Number_Code);
    PARAMETER(DB1.Lot_ID);
    PARAMETER(DB1.Transfer_Batch_Number);
    PARAMETER(DB1.Transfer_Batch_Sequence);
    PARAMETER(DB1.Order_Number);
    PARAMETER(DB1.Item_Structure_Class_Code);
    PARAMETER(DB1.Item_Structure_Group_Code);
    PARAMETER(DB1.Item_Structure_Type_Code);
    PARAMETER(DB1.Employee_Badge_Number);
    PARAMETER(DB1.Production_Time);
    PARAMETER(DB1.Shift_Number);
    PARAMETER(DB1.Label_Date);
    PARAMETER(DB1.Record_Status);
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.Job_Date);

   }

  }

 }

 ENDIF;

}


PGM.*Return_code = *BLANK;

RETURN;

