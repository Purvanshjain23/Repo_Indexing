// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUHVE2R
// ?Date: 14.08.2025 Time: 03:50:25
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize detail screen (existing record)

CASE;

// IF DB1.ED Modified Text is original
IF DB1.ED_Modified_Text = 'original';

// DTL.Original Application USR = CND.X
DTL.Original_Application_USR = 'X';

// IF DB1.ED Modified Text is inlieu
IF DB1.ED_Modified_Text = 'inlieu';

// DTL.In Lieu Application USR = CND.X
DTL.In_Lieu_Application_USR = 'X';

ENDIF;

CASE;

// IF DTL.ED Document Date is Not entered
IF DTL.ED_Document_Date = *ZERO;

// DTL.ED Document Date = JOB.*Job date
DTL.ED_Document_Date = JOB.*Job_date;

ENDIF;

//?R13074 DN 05/23/18-Get Export Doc Order Hdr Ext Info.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Rtv All               RT) TYPE(RTVOBJ) FILE(PUA6CPP)           AC2151312;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Order_Number);
PARAMETER(DB1.ED_Export_Document_Type);
PARAMETER(DB1.Country_Code);
PARAMETER(DTL.EDE_Reason_f_Replcmnt_Sts);
PARAMETER(DTL.EDE_Shipment_Type_Sts);
PARAMETER(DTL.EDE_Frozen_Shelf_Life_Sts);
PARAMETER(NLL.EDE_ISO_Alpha_2_code);
PARAMETER(NLL.EDE_USDA_Export_Mark_Sts);
PARAMETER(NLL.EDE_Special_Printing_Ctl);
PARAMETER(NLL.EDE_Appl_Billing_First_Nm);
PARAMETER(NLL.EDE_Appl_Billing_Last_Nm);
PARAMETER(NLL.EDE_Unused_Date);
PARAMETER(DTL.EDE_Country_of_Final_Dest);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.EDE Reason f/Replcmnt Dsc = Condition name of DTL.EDE Reason f/Replcmnt Sts
DTL.EDE_Reason_f_Replcmnt_Dsc = RTVCND(DTL.EDE_Reason_f_Replcmnt_Sts);

// DTL.EDE Shipment Type Desc = Condition name of DTL.EDE Shipment Type Sts
DTL.EDE_Shipment_Type_Desc = RTVCND(DTL.EDE_Shipment_Type_Sts);

ENDIF;

//?USER: Validate detail screen fields

CASE;

// IF DTL.Original Application USR is X
IF ( DTL.Original_Application_USR = 'X';

// AND DTL.In Lieu Application USR is X
AND DTL.In_Lieu_Application_USR = 'X' );

// OR DTL.Original Application USR is Blank
OR ( DTL.Original_Application_USR = *BLANK;

// AND DTL.In Lieu Application USR is Blank
AND DTL.In_Lieu_Application_USR = *BLANK );

// Send error message - 'Please select Original or Replacement Application.'
ERROR(USR5075);
MSGPARM(DTL.Original_Application_USR);
MSGPARM(DTL.In_Lieu_Application_USR);

QUIT;

ENDIF;

//?R13074 DN 05/23/18-Allow for F4=Prompt.
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

//?Country of Final Destination.
CASE;

// IF PGM.*Cursor field <IS> DTL.EDE Country of Final Dest
IF PGM.*Cursor_field = DTL.EDE_Country_of_Final_Dest;

// Call program SEL Country Active     SR.
CALL PROGRAM(SEL Country Active     SR) ('PDEGSRR');
PARAMETER(DTL.EDE_Country_of_Final_Dest);

ENDIF;

ENDIF;

//?CALC: Detail screen function fields

// DTL.EDE Reason f/Replcmnt Dsc = Condition name of DTL.EDE Reason f/Replcmnt Sts
DTL.EDE_Reason_f_Replcmnt_Dsc = RTVCND(DTL.EDE_Reason_f_Replcmnt_Sts);

// DTL.EDE Shipment Type Desc = Condition name of DTL.EDE Shipment Type Sts
DTL.EDE_Shipment_Type_Desc = RTVCND(DTL.EDE_Shipment_Type_Sts);

//?USER: Validate detail screen relations

CASE;

// IF DTL.Original Application USR is X
IF DTL.Original_Application_USR = 'X';

// DTL.ED Modified Text = CND.original
DTL.ED_Modified_Text = 'original';

//?R13074 DN 05/23/18-Blank Out Replacement Reason.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.EDE Reason f/Replcmnt Sts = CND.Blank
DTL.EDE_Reason_f_Replcmnt_Sts = *BLANK;

ENDIF;

// IF DTL.In Lieu Application USR is X
IF DTL.In_Lieu_Application_USR = 'X';

// DTL.ED Modified Text = CND.inlieu
DTL.ED_Modified_Text = 'inlieu';

//?R13074 DN 05/23/18-Replacement Reason must be selected.
CASE;

// IF DTL.EDE Reason f/Replcmnt Sts is Blank
IF DTL.EDE_Reason_f_Replcmnt_Sts = *BLANK;

// Send error message - 'Replacement Reason code must be selected.'
ERROR(USR5076);
MSGPARM(DTL.EDE_Reason_f_Replcmnt_Sts);

ENDIF;

ENDIF;

//?R13074 DN 05/23/18-Validations for Export Doc Order Hdr Ext File.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

//?Validate Country of Final Dest.
CASE;

// IF DTL.EDE Country of Final Dest is Entered
IF DTL.EDE_Country_of_Final_Dest <> *BLANK;

EXECUTE FUNCTION(RTV Desc, Status       RT) TYPE(RTVOBJ) FILE(OME5REP)          AC1261065;
PARAMETER(DTL.EDE_Country_of_Final_Dest);
PARAMETER(NLL.Country_Description);
PARAMETER(LCL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Record Found?
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?Country not active, throw error message.
CASE;

// IF LCL.Record Status is Inactive/Delete
IF LCL.Record_Status = 'D'/'I';

// LCL.Generic Message 80 USR = CONCAT(CON.Country of Final Destinat,CON.ion is inactive.,CON.*ZERO)
LCL.Generic_Message_80_USR = 'Country of Final Destinat' + 'ion is inactive.' (*ZERO);

// Send error message - '&1'
ERROR(USR5085);
MSGPARM(LCL.Generic_Message_80_USR);
MSGPARM(DTL.EDE_Country_of_Final_Dest);

ENDIF;

//?Record Found?
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Country Master not found.'
ERROR(USR1158);
MSGPARM(DTL.EDE_Country_of_Final_Dest);

ENDIF;

ENDIF;

ENDIF;

//?USER: Change DBF record

EXECUTE FUNCTION(Chg All Order Hdr Date2IF) TYPE(EXCINTFUN) FILE(PDMRREP)       AC2151344;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Order_Number);
PARAMETER(DTL.ED_Export_Document_Type);
PARAMETER(DTL.Country_Code);
PARAMETER(DTL.ED_Area_Office);
PARAMETER(DTL.ED_Destination);
PARAMETER(DTL.ED_Consignor_Name);
PARAMETER(DTL.ED_Consignor_Addr_1);
PARAMETER(DTL.ED_Consignor_Addr_2);
PARAMETER(DTL.ED_Consignor_Addr_3);
PARAMETER(*MISSING);
PARAMETER(DTL.ED_Consignor_State);
PARAMETER(DTL.ED_Consignor_Postal);
PARAMETER(DTL.ED_Consignor_Country_Code);
PARAMETER(DTL.ED_Consignee_Name);
PARAMETER(DTL.ED_Consignee_Addr_1);
PARAMETER(DTL.ED_Consignee_Addr_2);
PARAMETER(DTL.ED_Consignee_Addr_3);
PARAMETER(DTL.ED_Consignee_Addr_4);
PARAMETER(DTL.ED_Consignee_State);
PARAMETER(DTL.ED_Consignee_Postal);
PARAMETER(DTL.ED_Consignee_Country_Code);
PARAMETER(DTL.ED_Plant_Location_City);
PARAMETER(DTL.ED_Plant_Location_State);
PARAMETER(DTL.ED_Plant_Number);
PARAMETER(DTL.ED_Processing_Plant_Sts);
PARAMETER(DTL.ED_Attachment_Subtype);
PARAMETER(DTL.ED_Attachment_Type_Sts);
PARAMETER(DTL.ED_Xlate_Desc_to_Country);
PARAMETER(DTL.ED_Unmarked_Txt);
PARAMETER(DTL.ED_Shipping_Marks_Txt);
PARAMETER(DTL.ED_Date_of_Slaughter);
PARAMETER(DTL.ED_Place_of_Slaughter_Txt);
PARAMETER(DTL.ED_Date_of_Processing);
PARAMETER(DTL.ED_Place_of_processing_Tx);
PARAMETER(DTL.ED_Continue_Comment_Txt);
PARAMETER(2ND.ED_Remark_Constant_1);
PARAMETER(2ND.ED_Remark_Constant_2);
PARAMETER(2ND.ED_Remark_Constant_3);
PARAMETER(DTL.ED_Remark_Constant_4);
PARAMETER(DTL.ED_Remark_Constant_5);
PARAMETER(DTL.ED_Remark_Constant_7);
PARAMETER(DTL.ED_Remark_Constant_8);
PARAMETER(DTL.ED_Certify_that_the_meat);
PARAMETER(DTL.ED_Inspector_Name);
PARAMETER(DTL.ED_Origin_Country);
PARAMETER(DTL.ED_Port_of_Loading);
PARAMETER(DTL.ED_Transportion);
PARAMETER(DTL.ED_Seal_Number_1);
PARAMETER(DTL.ED_Seal_Number_2);
PARAMETER(DTL.ED_Can_Import_Cntrl_Nm);
PARAMETER(DTL.ED_Can_Import_Cntrl_Ad_1);
PARAMETER(DTL.ED_Can_Import_Cntrl_Ad_2);
PARAMETER(DTL.ED_Can_Import_Cntrl_Fax);
PARAMETER(DTL.ED_Can_Import_Cntrl_Phne);
PARAMETER(DTL.ED_Seaboard_Plant_Fax);
PARAMETER(DTL.ED_USDA_Cert_Nbr_US);
PARAMETER(DTL.ED_USDA_Cert_Nbr_CA);
PARAMETER(DTL.ED_Can_Port_of_Entry);
PARAMETER(DTL.ED_Can_Reinsp_Est_Nbr);
PARAMETER(DTL.ED_Can_Reinsp_Est_Name);
PARAMETER(DTL.ED_Can_Reinsp_Est_City);
PARAMETER(DTL.ED_Herm_Sealed_Cntr_Sts);
PARAMETER(DTL.ED_Herm_Sealed_Cntr_Type);
PARAMETER(DTL.ED_Herm_Sealed_Cntr_p_Crt);
PARAMETER(DTL.ED_Whole_Bird_Sts);
PARAMETER(DTL.ED_Marked_Sts);
PARAMETER(DTL.ED_Tamper_Evident_Sts);
PARAMETER(DTL.ED_Plant_Contact_Name);
PARAMETER(DTL.ED_Plant_Contact_Phone);
PARAMETER(DTL.ED_Modified_Text);
PARAMETER(DTL.ED_Issued_Crt_for_Exp_Txt);
PARAMETER(DTL.ED_Species);
PARAMETER(DTL.ED_Slaughter_Plant_Name);
PARAMETER(DTL.ED_Slaughter_Plant_Addr_1);
PARAMETER(DTL.ED_Slaughter_Plant_Addr_2);
PARAMETER(DTL.ED_Packaging_Plant_Name);
PARAMETER(DTL.ED_Packaging_Plant_Addr_1);
PARAMETER(DTL.ED_Packaging_Plant_Addr_2);
PARAMETER(DTL.ED_Manufact_Plant_Name);
PARAMETER(DTL.ED_Manufact_Plant_Addr_1);
PARAMETER(DTL.ED_Manufact_Plant_Addr_2);
PARAMETER(DTL.ED_USDA_Name_1);
PARAMETER(DTL.ED_USDA_Name_2);
PARAMETER(DTL.ED_USDA_Name_3);
PARAMETER(2ND.ED_Title_of_Official);
PARAMETER(DTL.ED_Letter_of_Credit_Nbr);
PARAMETER(DTL.ED_Unused_prd_mo_yr);
PARAMETER(DTL.ED_Nbr_of_prods_on_1st_pg);
PARAMETER(DTL.ED_Importer_Name);
PARAMETER(DTL.ED_Importer_Addr_1);
PARAMETER(DTL.ED_Importer_Addr_2);
PARAMETER(DTL.ED_Purchaser_Name);
PARAMETER(DTL.ED_Purchaser_Addr_1);
PARAMETER(DTL.ED_Purchaser_Addr_2);
PARAMETER(DTL.ED_Place_Drct_Shpmnt_Nm);
PARAMETER(DTL.ED_Place_Drct_Shpmnt_Ad_1);
PARAMETER(DTL.ED_Place_Drct_Shpmnt_Ad_2);
PARAMETER(DTL.ED_Place_Drct_Shpmnt_Ad_3);
PARAMETER(DTL.ED_Currency);
PARAMETER(DTL.ED_Conditions_of_Sale);
PARAMETER(DTL.ED_Total_Unit_Price);
PARAMETER(DTL.ED_Invoice_Total);
PARAMETER(DTL.ED_Live_with_PHIS);
PARAMETER(DTL.ED_Print_Status);
PARAMETER(DTL.ED_Total_Net_Weight_lbs);
PARAMETER(DTL.ED_Total_Net_Weight_MT);
PARAMETER(DTL.ED_Nbr_of_Packages);
PARAMETER(DTL.ED_Customer_PO_#);
PARAMETER(DTL.ED_Total_Gross_Weight_lbs);
PARAMETER(DTL.ED_Total_Gross_Weight_MT);
PARAMETER(DTL.ED_Plant_Number_Dtl);
PARAMETER(DTL.ED_Language_Xlate_Desc_2);
PARAMETER(DTL.ED_Slaughter_Date_CofE_3);
PARAMETER(DTL.ED_Production_mo_yr_ln_3);
PARAMETER(DTL.ED_Remark_Constant_6);
PARAMETER(DTL.ED_Allow_Print_bef_Ship);
PARAMETER(DTL.ED_Cert_of_Orig_Sbd_addr);
PARAMETER(DTL.ED_Use_item_label_1_2);
PARAMETER(DTL.ED_Slg_Proc_Date_Format);
PARAMETER(DTL.ED_Total_Package_UOM);
PARAMETER(DTL.ED_Export_Certificate_Nbr);
PARAMETER(DTL.ED_Sail_Date);
PARAMETER(DTL.ED_Sworn_on_Date);
PARAMETER(DTL.ED_Consignee_Address_Nbr);
PARAMETER(DTL.ED_Form_Identification_Tx);
PARAMETER(DTL.ED_Cold_Storage_Name);
PARAMETER(DTL.ED_Cold_Storage_Addr_1);
PARAMETER(DTL.ED_Cold_Storage_Addr_2);
PARAMETER(DTL.ED_Cold_Storage_Plant_Nbr);
PARAMETER(DTL.ED_Slaughter_Date_CofE_1);
PARAMETER(DTL.ED_Production_mo_yr_ln_1);
PARAMETER(DTL.ED_Production_mo_yr_ln_2);
PARAMETER(DTL.ED_Booking_Nbr);
PARAMETER(DTL.ED_Document_Date);
PARAMETER(DTL.ED_Packing_Date);
PARAMETER(DTL.ED_Expiration_Date);
PARAMETER(DTL.ED_Packing_Date_To);
PARAMETER(DTL.ED_Unused_Date_2);
PARAMETER(DTL.ED_Print_Kilograms);
PARAMETER(DTL.ED_MPR_Canadian_Province);
PARAMETER(DTL.ED_Container_Nbrs);
PARAMETER(DTL.ED_Slaughter_Date_CofE_2);
PARAMETER(DTL.ED_Submit_Status);
PARAMETER(DTL.EDOH_Unused_Sts_2);
PARAMETER(DTL.EDOH_Unused_Text_1);
PARAMETER(DTL.EDOH_Unused_Text_2);
PARAMETER(DTL.EDOH_Unused_Number_1);
PARAMETER(DTL.EDOH_Unused_Date_1);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
PARAMETER(DTL.Job_Time);
PARAMETER(DTL.User_Id);
PARAMETER(DTL.Job_Name);
PARAMETER(DTL.Job_Date);
PARAMETER(DTL.EDE_Reason_f_Replcmnt_Sts);
PARAMETER(DTL.EDE_Shipment_Type_Sts);
PARAMETER(DTL.EDE_Frozen_Shelf_Life_Sts);
PARAMETER(DTL.EDE_Country_of_Final_Dest);
{
 //?Execute internal function

 //?R16637 DN 09/11/20-Pass In New Consignor/Consignee Fields.
 EXECUTE FUNCTION(Chg Exp Doc Order Hdr  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1523843;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.ED_Export_Document_Type);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.ED_Area_Office);
 PARAMETER(PAR.ED_Destination);
 PARAMETER(PAR.ED_Consignor_Name);
 PARAMETER(PAR.ED_Consignor_Addr_1);
 PARAMETER(PAR.ED_Consignor_Addr_2);
 PARAMETER(PAR.ED_Consignor_Addr_3);
 PARAMETER(*MISSING);
 PARAMETER(PAR.ED_Consignor_State);
 PARAMETER(PAR.ED_Consignor_Postal);
 PARAMETER(PAR.ED_Consignor_Country_Code);
 PARAMETER(PAR.ED_Consignee_Name);
 PARAMETER(PAR.ED_Consignee_Addr_1);
 PARAMETER(PAR.ED_Consignee_Addr_2);
 PARAMETER(PAR.ED_Consignee_Addr_3);
 PARAMETER(PAR.ED_Consignee_Addr_4);
 PARAMETER(PAR.ED_Consignee_State);
 PARAMETER(PAR.ED_Consignee_Postal);
 PARAMETER(PAR.ED_Consignee_Country_Code);
 PARAMETER(PAR.ED_Plant_Location_City);
 PARAMETER(PAR.ED_Plant_Location_State);
 PARAMETER(PAR.ED_Plant_Number);
 PARAMETER(PAR.ED_Processing_Plant_Sts);
 PARAMETER(PAR.ED_Attachment_Subtype);
 PARAMETER(PAR.ED_Attachment_Type_Sts);
 PARAMETER(PAR.ED_Xlate_Desc_to_Country);
 PARAMETER(PAR.ED_Unmarked_Txt);
 PARAMETER(PAR.ED_Shipping_Marks_Txt);
 PARAMETER(PAR.ED_Date_of_Slaughter);
 PARAMETER(PAR.ED_Place_of_Slaughter_Txt);
 PARAMETER(PAR.ED_Date_of_Processing);
 PARAMETER(PAR.ED_Place_of_processing_Tx);
 PARAMETER(PAR.ED_Continue_Comment_Txt);
 PARAMETER(PAR.ED_Remark_Constant_1);
 PARAMETER(PAR.ED_Remark_Constant_2);
 PARAMETER(PAR.ED_Remark_Constant_3);
 PARAMETER(PAR.ED_Remark_Constant_4);
 PARAMETER(PAR.ED_Remark_Constant_5);
 PARAMETER(PAR.ED_Remark_Constant_7);
 PARAMETER(PAR.ED_Remark_Constant_8);
 PARAMETER(PAR.ED_Certify_that_the_meat);
 PARAMETER(PAR.ED_Inspector_Name);
 PARAMETER(PAR.ED_Origin_Country);
 PARAMETER(PAR.ED_Port_of_Loading);
 PARAMETER(PAR.ED_Transportion);
 PARAMETER(PAR.ED_Seal_Number_1);
 PARAMETER(PAR.ED_Seal_Number_2);
 PARAMETER(PAR.ED_Can_Import_Cntrl_Nm);
 PARAMETER(PAR.ED_Can_Import_Cntrl_Ad_1);
 PARAMETER(PAR.ED_Can_Import_Cntrl_Ad_2);
 PARAMETER(PAR.ED_Can_Import_Cntrl_Fax);
 PARAMETER(PAR.ED_Can_Import_Cntrl_Phne);
 PARAMETER(PAR.ED_Seaboard_Plant_Fax);
 PARAMETER(PAR.ED_USDA_Cert_Nbr_US);
 PARAMETER(PAR.ED_USDA_Cert_Nbr_CA);
 PARAMETER(PAR.ED_Can_Port_of_Entry);
 PARAMETER(PAR.ED_Can_Reinsp_Est_Nbr);
 PARAMETER(PAR.ED_Can_Reinsp_Est_Name);
 PARAMETER(PAR.ED_Can_Reinsp_Est_City);
 PARAMETER(PAR.ED_Herm_Sealed_Cntr_Sts);
 PARAMETER(PAR.ED_Herm_Sealed_Cntr_Type);
 PARAMETER(PAR.ED_Herm_Sealed_Cntr_p_Crt);
 PARAMETER(PAR.ED_Whole_Bird_Sts);
 PARAMETER(PAR.ED_Marked_Sts);
 PARAMETER(PAR.ED_Tamper_Evident_Sts);
 PARAMETER(PAR.ED_Plant_Contact_Name);
 PARAMETER(PAR.ED_Plant_Contact_Phone);
 PARAMETER(PAR.ED_Modified_Text);
 PARAMETER(PAR.ED_Issued_Crt_for_Exp_Txt);
 PARAMETER(PAR.ED_Species);
 PARAMETER(PAR.ED_Slaughter_Plant_Name);
 PARAMETER(PAR.ED_Slaughter_Plant_Addr_1);
 PARAMETER(PAR.ED_Slaughter_Plant_Addr_2);
 PARAMETER(PAR.ED_Packaging_Plant_Name);
 PARAMETER(PAR.ED_Packaging_Plant_Addr_1);
 PARAMETER(PAR.ED_Packaging_Plant_Addr_2);
 PARAMETER(PAR.ED_Manufact_Plant_Name);
 PARAMETER(PAR.ED_Manufact_Plant_Addr_1);
 PARAMETER(PAR.ED_Manufact_Plant_Addr_2);
 PARAMETER(PAR.ED_USDA_Name_1);
 PARAMETER(PAR.ED_USDA_Name_2);
 PARAMETER(PAR.ED_USDA_Name_3);
 PARAMETER(PAR.ED_Title_of_Official);
 PARAMETER(PAR.ED_Letter_of_Credit_Nbr);
 PARAMETER(PAR.ED_Unused_prd_mo_yr);
 PARAMETER(PAR.ED_Nbr_of_prods_on_1st_pg);
 PARAMETER(PAR.ED_Importer_Name);
 PARAMETER(PAR.ED_Importer_Addr_1);
 PARAMETER(PAR.ED_Importer_Addr_2);
 PARAMETER(PAR.ED_Purchaser_Name);
 PARAMETER(PAR.ED_Purchaser_Addr_1);
 PARAMETER(PAR.ED_Purchaser_Addr_2);
 PARAMETER(PAR.ED_Place_Drct_Shpmnt_Nm);
 PARAMETER(PAR.ED_Place_Drct_Shpmnt_Ad_1);
 PARAMETER(PAR.ED_Place_Drct_Shpmnt_Ad_2);
 PARAMETER(PAR.ED_Place_Drct_Shpmnt_Ad_3);
 PARAMETER(PAR.ED_Currency);
 PARAMETER(PAR.ED_Conditions_of_Sale);
 PARAMETER(PAR.ED_Total_Unit_Price);
 PARAMETER(PAR.ED_Invoice_Total);
 PARAMETER(PAR.ED_Live_with_PHIS);
 PARAMETER(PAR.ED_Print_Status);
 PARAMETER(PAR.ED_Total_Net_Weight_lbs);
 PARAMETER(PAR.ED_Total_Net_Weight_MT);
 PARAMETER(PAR.ED_Nbr_of_Packages);
 PARAMETER(PAR.ED_Customer_PO_#);
 PARAMETER(PAR.ED_Total_Gross_Weight_lbs);
 PARAMETER(PAR.ED_Total_Gross_Weight_MT);
 PARAMETER(PAR.ED_Plant_Number_Dtl);
 PARAMETER(PAR.ED_Language_Xlate_Desc_2);
 PARAMETER(PAR.ED_Slaughter_Date_CofE_3);
 PARAMETER(PAR.ED_Production_mo_yr_ln_3);
 PARAMETER(PAR.ED_Remark_Constant_6);
 PARAMETER(PAR.ED_Allow_Print_bef_Ship);
 PARAMETER(PAR.ED_Cert_of_Orig_Sbd_addr);
 PARAMETER(PAR.ED_Use_item_label_1_2);
 PARAMETER(PAR.ED_Slg_Proc_Date_Format);
 PARAMETER(PAR.ED_Total_Package_UOM);
 PARAMETER(PAR.ED_Export_Certificate_Nbr);
 PARAMETER(PAR.ED_Sail_Date);
 PARAMETER(PAR.ED_Sworn_on_Date);
 PARAMETER(PAR.ED_Consignee_Address_Nbr);
 PARAMETER(PAR.ED_Form_Identification_Tx);
 PARAMETER(PAR.ED_Cold_Storage_Name);
 PARAMETER(PAR.ED_Cold_Storage_Addr_1);
 PARAMETER(PAR.ED_Cold_Storage_Addr_2);
 PARAMETER(PAR.ED_Cold_Storage_Plant_Nbr);
 PARAMETER(PAR.ED_Slaughter_Date_CofE_1);
 PARAMETER(PAR.ED_Production_mo_yr_ln_1);
 PARAMETER(PAR.ED_Production_mo_yr_ln_2);
 PARAMETER(PAR.ED_Booking_Nbr);
 PARAMETER(PAR.ED_Document_Date);
 PARAMETER(PAR.ED_Packing_Date);
 PARAMETER(PAR.ED_Expiration_Date);
 PARAMETER(PAR.ED_Packing_Date_To);
 PARAMETER(PAR.ED_Unused_Date_2);
 PARAMETER(PAR.ED_Print_Kilograms);
 PARAMETER(PAR.ED_MPR_Canadian_Province);
 PARAMETER(PAR.ED_Container_Nbrs);
 PARAMETER(PAR.ED_Slaughter_Date_CofE_2);
 PARAMETER(PAR.ED_Submit_Status);
 PARAMETER(PAR.EDOH_Unused_Sts_2);
 PARAMETER(PAR.EDOH_Unused_Text_1);
 PARAMETER(PAR.EDOH_Unused_Text_2);
 PARAMETER(PAR.EDOH_Unused_Number_1);
 PARAMETER(PAR.EDOH_Unused_Date_1);
 PARAMETER(PAR.EDI_Status_1);
 PARAMETER(PAR.EDI_Status_2);
 PARAMETER(PAR.EDI_Status_3);
 PARAMETER(PAR.Record_Status);
 PARAMETER(PAR.Job_Time);
 PARAMETER(PAR.User_Id);
 PARAMETER(PAR.Job_Name);
 PARAMETER(PAR.Job_Date);
 {
  //?USER: Processing after Data read

  CASE;

  // IF DB1.ED Export Document Type is MPD
  IF DB1.ED_Export_Document_Type = 'H';

  // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
  OR DB1.ED_Export_Document_Type = 'E';

  //?The H and or the E record are the only records that we would
  //?want to write out the comments records
  //?on the A record even if the consignee or consignor are
  //?changed do not write out these records
  //?R16637 DN 09/10/20-Pass in New Consignor/Consignee Fields.
  // Call program Rtv/Consignor/ConsigneXF.
  CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
  PARAMETER(JOB.*PROGRAM);
  PARAMETER(DB1.ED_Consignor_Name);
  PARAMETER(DB1.ED_Consignor_Addr_1);
  PARAMETER(DB1.ED_Consignor_Addr_2);
  PARAMETER(DB1.ED_Consignor_Addr_3);
  PARAMETER(DB1.ED_Consignor_Addr_4);
  PARAMETER(DB1.ED_Consignor_State);
  PARAMETER(DB1.ED_Consignor_Postal);
  PARAMETER(DB1.ED_Consignor_Country_Code);
  PARAMETER(DB1.ED_Consignee_Name);
  PARAMETER(DB1.ED_Consignee_Addr_1);
  PARAMETER(DB1.ED_Consignee_Addr_2);
  PARAMETER(DB1.ED_Consignee_Addr_3);
  PARAMETER(DB1.ED_Consignee_Addr_4);
  PARAMETER(DB1.ED_Consignee_State);
  PARAMETER(DB1.ED_Consignee_Postal);
  PARAMETER(DB1.ED_Consignee_Country_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.ED_Area_Office);
  PARAMETER(PAR.ED_Destination);
  PARAMETER(PAR.ED_Consignor_Name);
  PARAMETER(PAR.ED_Consignor_Addr_1);
  PARAMETER(PAR.ED_Consignor_Addr_2);
  PARAMETER(PAR.ED_Consignor_Addr_3);
  PARAMETER(PAR.ED_Consignor_Addr_4);
  PARAMETER(PAR.ED_Consignor_State);
  PARAMETER(PAR.ED_Consignor_Postal);
  PARAMETER(PAR.ED_Consignor_Country_Code);
  PARAMETER(PAR.ED_Consignee_Name);
  PARAMETER(PAR.ED_Consignee_Addr_1);
  PARAMETER(PAR.ED_Consignee_Addr_2);
  PARAMETER(PAR.ED_Consignee_Addr_3);
  PARAMETER(PAR.ED_Consignee_Addr_4);
  PARAMETER(PAR.ED_Consignee_State);
  PARAMETER(PAR.ED_Consignee_Postal);
  PARAMETER(PAR.ED_Consignee_Country_Code);

  ENDIF;

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*PROGRAM
   PAR.Job_Name = JOB.*PROGRAM;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 //?Update Doc Date used in H CERT, CERT FOR EXP, AND CUSTOM INV doc types
 EXECUTE FUNCTION(Rtv/Chg Order Hdr Date RT) TYPE(RTVOBJ) FILE(PDMRREP)          AC1669541;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.ED_Export_Document_Type);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.ED_Consignor_Name);
 PARAMETER(PAR.ED_Consignor_Addr_1);
 PARAMETER(PAR.ED_Consignor_Addr_2);
 PARAMETER(PAR.ED_Consignor_Addr_3);
 PARAMETER(PAR.ED_Consignor_Addr_4);
 PARAMETER(PAR.ED_Consignor_State);
 PARAMETER(PAR.ED_Consignor_Postal);
 PARAMETER(PAR.ED_Consignor_Country_Code);
 PARAMETER(PAR.ED_Shipping_Marks_Txt);
 PARAMETER(PAR.ED_USDA_Cert_Nbr_US);
 PARAMETER(PAR.ED_Export_Certificate_Nbr);
 PARAMETER(PAR.ED_Document_Date);
 {
  //?USER: Process Data record

  //?RMC 12/1/21 whd 75298 UNDO updating the consignor fields for now.
  //?RMC 3/11/21 whd 75298 update consignor fields too
  //?RMC 3/11/21 whd 75298 update SHIPPING MARKS
  //?NEW RMC 03/13/07 upd exp cert no too
  CASE;

  // IF PAR.ED Export Certificate Nbr is Entered
  IF PAR.ED_Export_Certificate_Nbr <> *ZERO;

  CASE;

  // IF DB1.ED Export Certificate Nbr is Not Entered
  IF DB1.ED_Export_Certificate_Nbr = *ZERO;

  // WRK.ED Export Certificate Nbr = PAR.ED Export Certificate Nbr
  WRK.ED_Export_Certificate_Nbr = PAR.ED_Export_Certificate_Nbr;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // WRK.ED Export Certificate Nbr = DB1.ED Export Certificate Nbr
  WRK.ED_Export_Certificate_Nbr = DB1.ED_Export_Certificate_Nbr;

  ENDIF;

  //?NEW RMC 03/13/07 upd exp cert no too
  // IF *OTHERWISE
  IF *OTHERWISE;

  // WRK.ED Export Certificate Nbr = DB1.ED Export Certificate Nbr
  WRK.ED_Export_Certificate_Nbr = DB1.ED_Export_Certificate_Nbr;

  ENDIF;

  EXECUTE FUNCTION(Chg Exp Doc Order Hdr  CH) TYPE(CHGOBJ) FILE(PDMRREP)          AC1523843;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(DB1.ED_Area_Office);
  PARAMETER(DB1.ED_Destination);
  PARAMETER(DB1.ED_Consignor_Name);
  PARAMETER(DB1.ED_Consignor_Addr_1);
  PARAMETER(DB1.ED_Consignor_Addr_2);
  PARAMETER(DB1.ED_Consignor_Addr_3);
  PARAMETER(DB1.ED_Consignor_Addr_4);
  PARAMETER(DB1.ED_Consignor_State);
  PARAMETER(DB1.ED_Consignor_Postal);
  PARAMETER(DB1.ED_Consignor_Country_Code);
  PARAMETER(DB1.ED_Consignee_Name);
  PARAMETER(DB1.ED_Consignee_Addr_1);
  PARAMETER(DB1.ED_Consignee_Addr_2);
  PARAMETER(DB1.ED_Consignee_Addr_3);
  PARAMETER(DB1.ED_Consignee_Addr_4);
  PARAMETER(DB1.ED_Consignee_State);
  PARAMETER(DB1.ED_Consignee_Postal);
  PARAMETER(DB1.ED_Consignee_Country_Code);
  PARAMETER(DB1.ED_Plant_Location_City);
  PARAMETER(DB1.ED_Plant_Location_State);
  PARAMETER(DB1.ED_Plant_Number);
  PARAMETER(DB1.ED_Processing_Plant_Sts);
  PARAMETER(DB1.ED_Attachment_Subtype);
  PARAMETER(DB1.ED_Attachment_Type_Sts);
  PARAMETER(DB1.ED_Xlate_Desc_to_Country);
  PARAMETER(DB1.ED_Unmarked_Txt);
  PARAMETER(PAR.ED_Shipping_Marks_Txt);
  PARAMETER(DB1.ED_Date_of_Slaughter);
  PARAMETER(DB1.ED_Place_of_Slaughter_Txt);
  PARAMETER(DB1.ED_Date_of_Processing);
  PARAMETER(DB1.ED_Place_of_processing_Tx);
  PARAMETER(DB1.ED_Continue_Comment_Txt);
  PARAMETER(DB1.ED_Remark_Constant_1);
  PARAMETER(DB1.ED_Remark_Constant_2);
  PARAMETER(DB1.ED_Remark_Constant_3);
  PARAMETER(DB1.ED_Remark_Constant_4);
  PARAMETER(DB1.ED_Remark_Constant_5);
  PARAMETER(DB1.ED_Remark_Constant_7);
  PARAMETER(DB1.ED_Remark_Constant_8);
  PARAMETER(DB1.ED_Certify_that_the_meat);
  PARAMETER(DB1.ED_Inspector_Name);
  PARAMETER(DB1.ED_Origin_Country);
  PARAMETER(DB1.ED_Port_of_Loading);
  PARAMETER(DB1.ED_Transportion);
  PARAMETER(DB1.ED_Seal_Number_1);
  PARAMETER(DB1.ED_Seal_Number_2);
  PARAMETER(DB1.ED_Can_Import_Cntrl_Nm);
  PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_1);
  PARAMETER(DB1.ED_Can_Import_Cntrl_Ad_2);
  PARAMETER(DB1.ED_Can_Import_Cntrl_Fax);
  PARAMETER(DB1.ED_Can_Import_Cntrl_Phne);
  PARAMETER(DB1.ED_Seaboard_Plant_Fax);
  PARAMETER(PAR.ED_USDA_Cert_Nbr_US);
  PARAMETER(DB1.ED_USDA_Cert_Nbr_CA);
  PARAMETER(DB1.ED_Can_Port_of_Entry);
  PARAMETER(DB1.ED_Can_Reinsp_Est_Nbr);
  PARAMETER(DB1.ED_Can_Reinsp_Est_Name);
  PARAMETER(DB1.ED_Can_Reinsp_Est_City);
  PARAMETER(DB1.ED_Herm_Sealed_Cntr_Sts);
  PARAMETER(DB1.ED_Herm_Sealed_Cntr_Type);
  PARAMETER(DB1.ED_Herm_Sealed_Cntr_p_Crt);
  PARAMETER(DB1.ED_Whole_Bird_Sts);
  PARAMETER(DB1.ED_Marked_Sts);
  PARAMETER(DB1.ED_Tamper_Evident_Sts);
  PARAMETER(DB1.ED_Plant_Contact_Name);
  PARAMETER(DB1.ED_Plant_Contact_Phone);
  PARAMETER(DB1.ED_Modified_Text);
  PARAMETER(DB1.ED_Issued_Crt_for_Exp_Txt);
  PARAMETER(DB1.ED_Species);
  PARAMETER(DB1.ED_Slaughter_Plant_Name);
  PARAMETER(DB1.ED_Slaughter_Plant_Addr_1);
  PARAMETER(DB1.ED_Slaughter_Plant_Addr_2);
  PARAMETER(DB1.ED_Packaging_Plant_Name);
  PARAMETER(DB1.ED_Packaging_Plant_Addr_1);
  PARAMETER(DB1.ED_Packaging_Plant_Addr_2);
  PARAMETER(DB1.ED_Manufact_Plant_Name);
  PARAMETER(DB1.ED_Manufact_Plant_Addr_1);
  PARAMETER(DB1.ED_Manufact_Plant_Addr_2);
  PARAMETER(DB1.ED_USDA_Name_1);
  PARAMETER(DB1.ED_USDA_Name_2);
  PARAMETER(DB1.ED_USDA_Name_3);
  PARAMETER(DB1.ED_Title_of_Official);
  PARAMETER(DB1.ED_Letter_of_Credit_Nbr);
  PARAMETER(DB1.ED_Unused_prd_mo_yr);
  PARAMETER(DB1.ED_Nbr_of_prods_on_1st_pg);
  PARAMETER(DB1.ED_Importer_Name);
  PARAMETER(DB1.ED_Importer_Addr_1);
  PARAMETER(DB1.ED_Importer_Addr_2);
  PARAMETER(DB1.ED_Purchaser_Name);
  PARAMETER(DB1.ED_Purchaser_Addr_1);
  PARAMETER(DB1.ED_Purchaser_Addr_2);
  PARAMETER(DB1.ED_Place_Drct_Shpmnt_Nm);
  PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_1);
  PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_2);
  PARAMETER(DB1.ED_Place_Drct_Shpmnt_Ad_3);
  PARAMETER(DB1.ED_Currency);
  PARAMETER(DB1.ED_Conditions_of_Sale);
  PARAMETER(DB1.ED_Total_Unit_Price);
  PARAMETER(DB1.ED_Invoice_Total);
  PARAMETER(DB1.ED_Live_with_PHIS);
  PARAMETER(DB1.ED_Print_Status);
  PARAMETER(DB1.ED_Total_Net_Weight_lbs);
  PARAMETER(DB1.ED_Total_Net_Weight_MT);
  PARAMETER(DB1.ED_Nbr_of_Packages);
  PARAMETER(DB1.ED_Customer_PO_#);
  PARAMETER(DB1.ED_Total_Gross_Weight_lbs);
  PARAMETER(DB1.ED_Total_Gross_Weight_MT);
  PARAMETER(DB1.ED_Plant_Number_Dtl);
  PARAMETER(DB1.ED_Language_Xlate_Desc_2);
  PARAMETER(DB1.ED_Slaughter_Date_CofE_3);
  PARAMETER(DB1.ED_Production_mo_yr_ln_3);
  PARAMETER(DB1.ED_Remark_Constant_6);
  PARAMETER(DB1.ED_Allow_Print_bef_Ship);
  PARAMETER(DB1.ED_Cert_of_Orig_Sbd_addr);
  PARAMETER(DB1.ED_Use_item_label_1_2);
  PARAMETER(DB1.ED_Slg_Proc_Date_Format);
  PARAMETER(DB1.ED_Total_Package_UOM);
  PARAMETER(WRK.ED_Export_Certificate_Nbr);
  PARAMETER(DB1.ED_Sail_Date);
  PARAMETER(DB1.ED_Sworn_on_Date);
  PARAMETER(DB1.ED_Consignee_Address_Nbr);
  PARAMETER(DB1.ED_Form_Identification_Tx);
  PARAMETER(DB1.ED_Cold_Storage_Name);
  PARAMETER(DB1.ED_Cold_Storage_Addr_1);
  PARAMETER(DB1.ED_Cold_Storage_Addr_2);
  PARAMETER(DB1.ED_Cold_Storage_Plant_Nbr);
  PARAMETER(DB1.ED_Slaughter_Date_CofE_1);
  PARAMETER(DB1.ED_Production_mo_yr_ln_1);
  PARAMETER(DB1.ED_Production_mo_yr_ln_2);
  PARAMETER(DB1.ED_Booking_Nbr);
  PARAMETER(PAR.ED_Document_Date);
  PARAMETER(DB1.ED_Packing_Date);
  PARAMETER(DB1.ED_Expiration_Date);
  PARAMETER(DB1.ED_Packing_Date_To);
  PARAMETER(DB1.ED_Unused_Date_2);
  PARAMETER(DB1.ED_Print_Kilograms);
  PARAMETER(DB1.ED_MPR_Canadian_Province);
  PARAMETER(DB1.ED_Container_Nbrs);
  PARAMETER(DB1.ED_Slaughter_Date_CofE_2);
  PARAMETER(DB1.ED_Submit_Status);
  PARAMETER(DB1.EDOH_Unused_Sts_2);
  PARAMETER(DB1.EDOH_Unused_Text_1);
  PARAMETER(DB1.EDOH_Unused_Text_2);
  PARAMETER(DB1.EDOH_Unused_Number_1);
  PARAMETER(DB1.EDOH_Unused_Date_1);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?USER: Processing after Data read

   CASE;

   // IF DB1.ED Export Document Type is MPD
   IF DB1.ED_Export_Document_Type = 'H';

   // OR DB1.ED Export Document Type is 9290/9285/9295/9115/9450
   OR DB1.ED_Export_Document_Type = 'E';

   //?The H and or the E record are the only records that we would
   //?want to write out the comments records
   //?on the A record even if the consignee or consignor are
   //?changed do not write out these records
   //?R16637 DN 09/10/20-Pass in New Consignor/Consignee Fields.
   // Call program Rtv/Consignor/ConsigneXF.
   CALL PROGRAM(Rtv/Consignor/ConsigneXF) ('PNVIXFR');
   PARAMETER(JOB.*PROGRAM);
   PARAMETER(DB1.ED_Consignor_Name);
   PARAMETER(DB1.ED_Consignor_Addr_1);
   PARAMETER(DB1.ED_Consignor_Addr_2);
   PARAMETER(DB1.ED_Consignor_Addr_3);
   PARAMETER(DB1.ED_Consignor_Addr_4);
   PARAMETER(DB1.ED_Consignor_State);
   PARAMETER(DB1.ED_Consignor_Postal);
   PARAMETER(DB1.ED_Consignor_Country_Code);
   PARAMETER(DB1.ED_Consignee_Name);
   PARAMETER(DB1.ED_Consignee_Addr_1);
   PARAMETER(DB1.ED_Consignee_Addr_2);
   PARAMETER(DB1.ED_Consignee_Addr_3);
   PARAMETER(DB1.ED_Consignee_Addr_4);
   PARAMETER(DB1.ED_Consignee_State);
   PARAMETER(DB1.ED_Consignee_Postal);
   PARAMETER(DB1.ED_Consignee_Country_Code);
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Order_Number);
   PARAMETER(PAR.ED_Export_Document_Type);
   PARAMETER(PAR.Country_Code);
   PARAMETER(PAR.ED_Area_Office);
   PARAMETER(PAR.ED_Destination);
   PARAMETER(PAR.ED_Consignor_Name);
   PARAMETER(PAR.ED_Consignor_Addr_1);
   PARAMETER(PAR.ED_Consignor_Addr_2);
   PARAMETER(PAR.ED_Consignor_Addr_3);
   PARAMETER(PAR.ED_Consignor_Addr_4);
   PARAMETER(PAR.ED_Consignor_State);
   PARAMETER(PAR.ED_Consignor_Postal);
   PARAMETER(PAR.ED_Consignor_Country_Code);
   PARAMETER(PAR.ED_Consignee_Name);
   PARAMETER(PAR.ED_Consignee_Addr_1);
   PARAMETER(PAR.ED_Consignee_Addr_2);
   PARAMETER(PAR.ED_Consignee_Addr_3);
   PARAMETER(PAR.ED_Consignee_Addr_4);
   PARAMETER(PAR.ED_Consignee_State);
   PARAMETER(PAR.ED_Consignee_Postal);
   PARAMETER(PAR.ED_Consignee_Country_Code);

   ENDIF;

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

 //?R13074 DN 05/23/18-Create/Update Export Doc Order Hdr Ext.
 EXECUTE FUNCTION(Upd Exp Doc Order Ext RT) TYPE(RTVOBJ) FILE(PUA6CPP)           AC2151367;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Order_Number);
 PARAMETER(PAR.ED_Export_Document_Type);
 PARAMETER(PAR.Country_Code);
 PARAMETER(PAR.EDE_Reason_f_Replcmnt_Sts);
 PARAMETER(PAR.EDE_Shipment_Type_Sts);
 PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
 PARAMETER(PAR.EDE_Country_of_Final_Dest);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Exp Doc Order Ext CR) TYPE(CRTOBJ) FILE(PUA6CPP)           AC2150707;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Order_Number);
  PARAMETER(PAR.ED_Export_Document_Type);
  PARAMETER(PAR.Country_Code);
  PARAMETER(PAR.EDE_Reason_f_Replcmnt_Sts);
  PARAMETER(PAR.EDE_Shipment_Type_Sts);
  PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
  PARAMETER(LCL.EDE_ISO_Alpha_2_code);
  PARAMETER(LCL.EDE_USDA_Export_Mark_Sts);
  PARAMETER(LCL.EDE_Special_Printing_Ctl);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(PAR.EDE_Country_of_Final_Dest);
  PARAMETER(LCL.EDE_I_Certify_Stmt);
  PARAMETER(LCL.EDE_Attachment_Type_Txt);
  PARAMETER(LCL.EDE_Attachment_Sub_Type);
  PARAMETER(LCL.EDE_Transit_Country);
  PARAMETER(LCL.EDE_Container_Number);
  PARAMETER(LCL.EDE_Unused_Text_25);
  PARAMETER(LCL.EDE_Additional_Stmt);
  PARAMETER(LCL.EDE_Maturity_lt_30_Months);
  PARAMETER(LCL.EDE_Seal_Nos);
  PARAMETER(LCL.EDE_IFS_PHIS_Doc_Filename);
  PARAMETER(LCL.EDE_Port_of_Entry);
  PARAMETER(LCL.EDE_Unused_2);
  PARAMETER(LCL.EDE_Unused_3);
  PARAMETER(LCL.EDE_Unused_4);
  PARAMETER(LCL.EDE_Unused_5);
  PARAMETER(LCL.EDE_Consignee_Tele_PHIS);
  PARAMETER(LCL.EDE_Unused_6);
  PARAMETER(LCL.EDE_Unused_7);
  PARAMETER(LCL.EDE_Unused_8);
  PARAMETER(LCL.EDE_Unused_9);
  PARAMETER(LCL.EDE_Unused_10);
  PARAMETER(LCL.EDE_Unused_11);
  PARAMETER(LCL.EDE_Consignor_Tele_PHIS);
  PARAMETER(LCL.EDE_PHIS_Process_Status);
  PARAMETER(LCL.EDE_ETL_Process_Timestamp);
  PARAMETER(LCL.EDE_PHIS_Action);
  PARAMETER(LCL.EDE_Return_Cde_Error);
  PARAMETER(LCL.EDE_Application_UID);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(UPS CRTOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359517;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

  //?USER: Process Data record

  EXECUTE FUNCTION(Chg Exp Doc Order Ext CH) TYPE(CHGOBJ) FILE(PUA6CPP)           AC2150708;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.ED_Export_Document_Type);
  PARAMETER(DB1.Country_Code);
  PARAMETER(PAR.EDE_Reason_f_Replcmnt_Sts);
  PARAMETER(PAR.EDE_Shipment_Type_Sts);
  PARAMETER(PAR.EDE_Frozen_Shelf_Life_Sts);
  PARAMETER(DB1.EDE_ISO_Alpha_2_code);
  PARAMETER(DB1.EDE_USDA_Export_Mark_Sts);
  PARAMETER(DB1.EDE_Special_Printing_Ctl);
  PARAMETER(DB1.EDE_Appl_Billing_First_Nm);
  PARAMETER(DB1.EDE_Appl_Billing_Last_Nm);
  PARAMETER(DB1.EDE_Unused_Date);
  PARAMETER(PAR.EDE_Country_of_Final_Dest);
  PARAMETER(DB1.EDE_I_Certify_Stmt);
  PARAMETER(DB1.EDE_Attachment_Type_Txt);
  PARAMETER(DB1.EDE_Attachment_Sub_Type);
  PARAMETER(DB1.EDE_Transit_Country);
  PARAMETER(DB1.EDE_Container_Number);
  PARAMETER(DB1.EDE_Unused_Text_25);
  PARAMETER(DB1.EDE_Additional_Stmt);
  PARAMETER(DB1.EDE_Maturity_lt_30_Months);
  PARAMETER(DB1.EDE_Seal_Nos);
  PARAMETER(DB1.EDE_IFS_PHIS_Doc_Filename);
  PARAMETER(DB1.EDE_Port_of_Entry);
  PARAMETER(DB1.EDE_Unused_2);
  PARAMETER(DB1.EDE_Unused_3);
  PARAMETER(DB1.EDE_Unused_4);
  PARAMETER(DB1.EDE_Unused_5);
  PARAMETER(DB1.EDE_Consignee_Tele_PHIS);
  PARAMETER(DB1.EDE_Unused_6);
  PARAMETER(DB1.EDE_Unused_7);
  PARAMETER(DB1.EDE_Unused_8);
  PARAMETER(DB1.EDE_Unused_9);
  PARAMETER(DB1.EDE_Unused_10);
  PARAMETER(DB1.EDE_Unused_11);
  PARAMETER(DB1.EDE_Consignor_Tele_PHIS);
  PARAMETER(DB1.EDE_PHIS_Process_Status);
  PARAMETER(DB1.EDE_ETL_Process_Timestamp);
  PARAMETER(DB1.EDE_PHIS_Action);
  PARAMETER(DB1.EDE_Return_Cde_Error);
  PARAMETER(DB1.EDE_Application_UID);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(UPS CHGOBJ Stamp      IF) TYPE(EXCINTFUN)                      AC1359518;
   PARAMETER(DB1.Job_Time);
   PARAMETER(DB1.User_Id);
   PARAMETER(DB1.Job_Name);
   PARAMETER(DB1.Job_Date);
   {
    //?Execute internal function

    // PAR.Job Time = JOB.*Job time
    PAR.Job_Time = JOB.*Job_time;

    // PAR.User Id = JOB.*USER
    PAR.User_Id = JOB.*USER;

    // PAR.Job Name = JOB.*PROGRAM
    PAR.Job_Name = JOB.*PROGRAM;

    // PAR.Job Date = JOB.*Job date
    PAR.Job_Date = JOB.*Job_date;

   }

  }

 }

}


