// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POMFXFR
// ?Date: 14.08.2025 Time: 03:38:06
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?05/12/04 SLM PKTR01 Multi-Company - Order Header TRG Remove Co
//?                                    from Logical View
EXECUTE FUNCTION(UPD Fix Rated Freight RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1628667;
{
 //?USER: Process Data record

 //?The access path selects Shipped or Invoiced loads AND Shipping
 //?Method of Prepaid.
 CASE;

 // IF DB1.Scheduled Ship Date is LT July 1, 2001
 IF DB1.Scheduled_Ship_Date < 1010701;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Export Status is yes
 IF DB1.Export_Status = 'Y';

 //?Calculate Rated Freight & Update Order Files
 // Call program UPD Rated Frt Post Shp XF.
 CALL PROGRAM(UPD Rated Frt Post Shp XF) ('PDJVXFR');
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Company_Number);

 //?Update Sales History
 EXECUTE FUNCTION(Upd Fix Rated Freight RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1628670;
 PARAMETER(DB1.Load_ID);
 {
  //?USER: Initialize routine

  //?05/12/04 SLM PKTR01 Multi-Company - Function was changed
  //?                                    to remove Company RST or Pos
  //?USER: Process Data record

  EXECUTE FUNCTION(Upd Fix Rated Freight RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1628671;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Upd Fix Rated Freight RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1628672;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.Order_Sequence_Number);
   PARAMETER(DB1.Order_Secondary_Line_Seq);
   PARAMETER(DB1.Rated_Freight);
   {
    //?USER: Process Data record

    EXECUTE FUNCTION(Chg Fix Rated Freight CH) TYPE(CHGOBJ) FILE(OMHSTPP)           AC1628674;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Order_Number);
    PARAMETER(DB1.Order_Sequence_Number);
    PARAMETER(DB1.Order_Secondary_Line_Seq);
    PARAMETER(PAR.Rated_Freight);
    {
     //?USER: Processing after Data read

     // DB1.Process Sts for 3C = CND.No
     DB1.Process_Sts_for_3C = 'N';

     // DB1.Data Mart Process Sts = CND.no
     DB1.Data_Mart_Process_Sts = 'N';

     //?USER: Processing before Data update

     EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
     PARAMETER(DB1.Job_Time);
     PARAMETER(DB1.User_Id);
     PARAMETER(DB1.Job_Name);
     PARAMETER(DB1.Job_Date);
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*PROGRAM
      PAR.Job_Name = JOB.*PROGRAM;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

    }

   }

  }

 }

 EXECUTE FUNCTION(Upd Carrier Payment   RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1628703;
 PARAMETER(DB1.Load_ID);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Carrier Payment   RT) TYPE(RTVOBJ) FILE(POBCCPP)           AC1628704;
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Rated_Freight);
  PARAMETER(LCL.Total_Freight_7_2_USR);
  PARAMETER(LCL.Total_Freight_USR);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   // PAR.Total Freight 7.2 USR = PAR.Rated Freight
   PAR.Total_Freight_7_2_USR = PAR.Rated_Freight;

   // PAR.Total Freight USR = PAR.Rated Freight
   PAR.Total_Freight_USR = PAR.Rated_Freight;

   //?USER: Process Data record

   CASE;

   // IF DB1.LFC Act Frt Include Sts is Yes
   IF DB1.LFC_Act_Frt_Include_Sts = 'Y';

   // PAR.Total Freight 7.2 USR = PAR.Total Freight 7.2 USR + DB1.LFC Amount
   PAR.Total_Freight_7_2_USR = PAR.Total_Freight_7_2_USR + DB1.LFC_Amount;

   ENDIF;

   CASE;

   // IF DB1.LFC Tot Freight Inc Sts is Yes
   IF DB1.LFC_Tot_Freight_Inc_Sts = 'Y';

   // PAR.Total Freight USR = PAR.Total Freight USR + DB1.LFC Amount
   PAR.Total_Freight_USR = PAR.Total_Freight_USR + DB1.LFC_Amount;

   ENDIF;

  }

  EXECUTE FUNCTION(Upd Ld ActFrt/CarPay  RT) TYPE(RTVOBJ) FILE(OMFJCPP)           AC1628500;
  PARAMETER(DB1.Load_ID);
  PARAMETER(DB1.Load_Carrier_Pay_Amt);
  PARAMETER(LCL.Total_Freight_USR);
  PARAMETER(DB1.LH_Carrier_Payment_Sts);
  PARAMETER(LCL.Total_Freight_7_2_USR);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Chg Ld ActFrt/CarPay  CH) TYPE(CHGOBJ) FILE(OMFJCPP)           AC1628501;
   PARAMETER(DB1.Load_ID);
   PARAMETER(PAR.Load_Carrier_Pay_Amt);
   PARAMETER(PAR.Load_Total_Freight);
   PARAMETER(PAR.LH_Carrier_Payment_Sts);
   PARAMETER(PAR.Load_Actual_Freight);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

    CASE;

    // IF PAR.LH Carrier Payment Sts is Paid
    IF PAR.LH_Carrier_Payment_Sts = 'P';

    ENDIF;

   }

  }

 }

 ENDIF;

 ENDIF;

}


