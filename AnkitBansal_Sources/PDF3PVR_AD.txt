// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDF3PVR
// ?Date: 14.08.2025 Time: 03:31:47
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E6225 JJH 06/23/16 - RTV Alpha Value Val/Co RT
//?- The parameters were changed on this RTVOBJ to include removing
//?  I RST of the Company Number.
//?- So this RTVOBJ was replace with RTV Alpha Value        RT.
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('OMS');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(WRK.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.PRT Printer Device = CND.Not entered
PAR.PRT_Printer_Device = *BLANK;

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.Company Number Pass   USR = PAR.Company Number
PAR.Company_Number_Pass_USR = PAR.Company_Number;

//?11/30/04 slm Add New Select on Warehouse - By Company/Warehouse
// Call program Rtv User Code Model   XF.
CALL PROGRAM(Rtv User Code Model   XF) ('POYBXFR');
PARAMETER(JOB.*USER);
PARAMETER(LCL.User_Code_Model);

CASE;

// IF LCL.User Code Model is IS
IF LCL.User_Code_Model = 'ISBGUTI';

// OR LCL.User Code Model is Daily's IS
OR LCL.User_Code_Model = 'DLYIS';

// LCL.Output Only 1 USR = CND.no
LCL.Output_Only_1_USR = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Output Only 1 USR = CND.yes
LCL.Output_Only_1_USR = 'Y';

ENDIF;

//?USER: Load screen

// DTL.Usr Sls Realization Repts = CND.Sls Realization Item Grp
DTL.Usr_Sls_Realization_Repts = 1;

// DTL.Company Number = PAR.Company Number
DTL.Company_Number = PAR.Company_Number;

// DTL.Company Number CDE = PAR.Company Number
DTL.Company_Number_CDE = PAR.Company_Number;

EXECUTE FUNCTION(Rtv Plant Co Status   RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1761084;
PARAMETER(DTL.Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Plant Company Sts is Plant Company
IF LCL.Plant_Company_Sts = 'P';

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Name = CON.*all
DTL.Name = *all;

ENDIF;

//?E6225 JJH 06/23/16 - Replace RTVOBJ to get Company Value with
//?  Company Number
EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(DTL.Company_Number_CDE);
PARAMETER('DFTMKT');
PARAMETER(DTL.Commodity_Market_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Active Description RT) TYPE(RTVOBJ) FILE(OMFYREP)          AC1387392;
PARAMETER(DTL.Commodity_Market_Code);
PARAMETER(DTL.Commodity_Market_Desc);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.Export Sales = CND.All Sales
DTL.Export_Sales = 'A';

// DTL.Condition Desc. 1  USR = Condition name of DTL.Export Sales
DTL.Condition_Desc_1_USR = RTVCND(DTL.Export_Sales);

// DTL.USR Detail or Summary = CND.Report Selection 1
DTL.USR_Detail_or_Summary = 1;

// DTL.USR Flag 3 = CND.No
DTL.USR_Flag_3 = 'N';

CASE;

// IF DTL.USR Flag 1 is Blank
IF DTL.USR_Flag_1 = *BLANK;

//?Default was NO before 2/21/02
// DTL.USR Flag 1 = CND.Yes
DTL.USR_Flag_1 = 'Y';

ENDIF;

//?01/20/09 PKD This flag only works for report 1.
// DTL.Actual or Absorbed USR = CND.Absorbed
DTL.Actual_or_Absorbed_USR = 1;

//?USER: Validate fields

// DTL.USR Detail or Summary = DTL.Usr Sls Realization Repts
DTL.USR_Detail_or_Summary = DTL.Usr_Sls_Realization_Repts;

//?Process F4 on Company Number
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Company Number CDE
IF PGM.*Cursor_field = DTL.Company_Number_CDE;

CASE;

// IF PAR.Allow Multi-Company is yes
IF PAR.Allow_Multi_Company = 'Y';

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(DTL.Company_Number);

// DTL.Company Number CDE = DTL.Company Number
DTL.Company_Number_CDE = DTL.Company_Number;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Prompt not allowed on output field.'
ERROR(USR2410);

ENDIF;

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on Ship to customer
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.USR Ship to Customer CD7
AND PGM.*Cursor_field = DTL.USR_Ship_to_Customer_CD7;

//?033104 SLM ADD CUSTOMER SELECT BY SHIP TO CUSTOMER
// Call program SEL Cust/ShpTo Flag 'Y'SR.
CALL PROGRAM(SEL Cust/ShpTo Flag 'Y'SR) ('PDYSSRR');
PARAMETER(DTL.USR_Ship_to_Customer_CD7);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on salesperson
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Salesperson Code
AND PGM.*Cursor_field = DTL.Salesperson_Code;

// Call program SEL Salesperson All    SR.
CALL PROGRAM(SEL Salesperson All    SR) ('PDFASRR');
PARAMETER(DTL.Salesperson_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on warehouse code
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Warehouse Code
AND PGM.*Cursor_field = DTL.Warehouse_Code;

// Call program SEL ShipCo/Warehouse   SR.
CALL PROGRAM(SEL ShipCo/Warehouse   SR) ('PPHQSRR');
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Company_Number_CDE);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on broker
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.SH Broker Code
AND PGM.*Cursor_field = DTL.SH_Unused_was_broker;

// Call program Sel Broker            SL.
CALL PROGRAM(Sel Broker            SL) ('POY6SRR');
PARAMETER(DTL.SH_Unused_was_broker);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?Process F4 on Item Code
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.Item Code
AND PGM.*Cursor_field = DTL.Item_Code;

// Call program SEL Item Default       SR.
CALL PROGRAM(SEL Item Default       SR) ('OMZ8SRR');
PARAMETER(DTL.Item_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

//?CALC: Screen function fields

// DTL.Company Number = CVTVAR(DTL.Company Number CDE)
DTL.Company_Number = CVTVAR(DTL.Company_Number_CDE);

CASE;

// IF LCL.Plant Company Sts is Plant Company
IF LCL.Plant_Company_Sts = 'P';

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(PAR.Company_Number);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Name = CON.*all
DTL.Name = *all;

ENDIF;

CASE;

// IF DTL.USR Through Date LT DTL.USR From Date
IF DTL.USR_Through_Date < DTL.USR_From_Date;

// Send error message - 'Through date cannot occur before the from date'
ERROR(USR2251);
MSGPARM(DTL.USR_Through_Date);

ENDIF;

//?USER: Validate relations

// DTL.Company Number = CVTVAR(DTL.Company Number CDE)
DTL.Company_Number = CVTVAR(DTL.Company_Number_CDE);

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Validate company
CASE;

// IF PGM.*Return code is Company not found
IF PGM.*Return_code = 'USR0003';

// DTL.Name = CON.*BLANK
DTL.Name = *BLANK;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

//?05/10/07 JRB Removed hard coded companys
//?Company zero
CASE;

// IF DTL.Company Number is Equal to zero
IF DTL.Company_Number = *ZERO;

// DTL.Name = CON.*ALL
DTL.Name = *ALL;

ENDIF;

EXECUTE FUNCTION(Rtv Plant Co Status   RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1761084;
PARAMETER(DTL.Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Check for plant company & zero
CASE;

// IF LCL.Plant Company Sts is Plant Company
IF LCL.Plant_Company_Sts = 'P';

// OR DTL.Company Number is Equal to zero
OR DTL.Company_Number = *ZERO;

//?Check for plant company & zero
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Name = CON.*BLANK
DTL.Name = *BLANK;

// Send error message - 'Company Number not found'
ERROR(USR0163);

ENDIF;

//?Validate ship to customer if entered
CASE;

// IF DTL.USR Ship to Customer CD7 is Entered
IF DTL.USR_Ship_to_Customer_CD7 <> *ZERO;

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(DTL.USR_Ship_to_Customer_CD7);
PARAMETER(DTL.Ship_To_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is Company not found
IF PGM.*Return_code = 'USR0003';

// Send error message - 'Customer Master not found.'
ERROR(USR0170);
MSGPARM(DTL.USR_Ship_to_Customer_CD7);

ENDIF;

ENDIF;

//?Validate salesperson if entered
CASE;

// IF DTL.Salesperson Code is entered
IF DTL.Salesperson_Code <> *BLANK;

EXECUTE FUNCTION(RTV Salesperson Name   RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1111501;
PARAMETER(DTL.Salesperson_Code);
PARAMETER(DTL.Salesperson_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is Company not found
IF PGM.*Return_code = 'USR0003';

// Send error message - 'Salesperson not found.'
ERROR(USR0039);
MSGPARM(DTL.Salesperson_Code);

ENDIF;

ENDIF;

//?Validate shipping zone if entered
CASE;

// IF DTL.Shipping Zone Code NE WRK.BLANK
IF DTL.Shipping_Zone_Code <> WRK.BLANK;

// DTL.Description = CON.*BLANK
DTL.Description = *BLANK;

EXECUTE FUNCTION(RTV Shipping Zone Desc RT) TYPE(RTVOBJ) FILE(PDLTREP)          AC1488059;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Shipping_Zone_Code);
PARAMETER(DTL.Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PGM.*Return code is *Record does not exist
IF PGM.*Return_code = 'Y2U0005';

// Send error message - 'Shipping Zone not found.'
ERROR(USR2566);
MSGPARM(DTL.Shipping_Zone_Code);

ENDIF;

ENDIF;

//?Validate warehouse if entered
CASE;

// IF DTL.Warehouse Code is Warehouse Code not Blank
IF DTL.Warehouse_Code <> *BLANK;

EXECUTE FUNCTION(RTV Whse Desc,Ship co RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1705650;
PARAMETER(DTL.Warehouse_Code);
PARAMETER(WRK.Warehouse_Description);
PARAMETER(WRK.Shipping_Company);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Warehouse Description is equal to blank
IF WRK.Warehouse_Description = *BLANK;

// Send error message - 'Warehouse Codes not found.'
ERROR(USR0007);
MSGPARM(DTL.Warehouse_Code);

// IF WRK.Shipping Company NE DTL.Company Number CDE
IF WRK.Shipping_Company <> DTL.Company_Number_CDE;

// DTL.Company Number = DTL.Company Number CDE
DTL.Company_Number = DTL.Company_Number_CDE;

// Send error message - 'Warehouse &1 cannot ship from Company &2'
ERROR(USR3362);
MSGPARM(DTL.Warehouse_Code);
MSGPARM(DTL.Company_Number);

ENDIF;

ENDIF;

// DTL.Condition Desc. 1  USR = Condition name of DTL.Export Sales
DTL.Condition_Desc_1_USR = RTVCND(DTL.Export_Sales);

// LCL.Status - Y or N = CND.no
LCL.Status_Y_or_N = 'N';

//?FTP Report type 1. by group code  for a specific company
CASE;

//?FTP Report type 1. by group code  for a specific company
// IF DTL.USR Detail or Summary is Report Selection 1
IF DTL.USR_Detail_or_Summary = '1';

CASE;

// IF DTL.Document Name USR is Not Entered
IF DTL.Document_Name_USR = *BLANK;

// LCL.Status - Y or N = CND.no
LCL.Status_Y_or_N = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Status - Y or N = CND.yes
LCL.Status_Y_or_N = 'Y';

ENDIF;

ENDIF;

//?11/17/04 slm Broker only allowed on report 6 or 7
//?Broker Code for report 6 or 7 ONLY
CASE;

// IF DTL.USR Detail or Summary is Select 1-5
IF DTL.USR_Detail_or_Summary = '1'/'2'/'3'/'4'/'5';

// DTL.SH Broker Code = CON.*BLANK
DTL.SH_Unused_was_broker = *BLANK;

ENDIF;

//?USER: User defined action

//?Use available fields for passing numeric data
// PAR.Company Number Pass   USR = DTL.Company Number
PAR.Company_Number_Pass_USR = DTL.Company_Number_CDE;

// PAR.From Date Pass        USR = DTL.USR From Date
PAR.From_Date_Pass_USR = DTL.USR_From_Date;

// PAR.Thru Date Pass        USR = DTL.USR Through Date
PAR.Thru_Date_Pass_USR = DTL.USR_Through_Date;

// PAR.Ship to Customer Pass USR = DTL.USR Ship to Customer CD7
PAR.Ship_to_Customer_Pass_USR = DTL.USR_Ship_to_Customer_CD7;

// PAR.Item Code PASS        USR = DTL.Item Code
PAR.Item_Code_PASS_USR = DTL.Item_Code;

// Call program Prt Sls Real ProcessingUP.
CALL PROGRAM(Prt Sls Real ProcessingUP) ('PDJ2UPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('O/M');
PARAMETER('PDGEPCLP');
PARAMETER('Sales Realization Report');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(PAR.From_Date_Pass_USR);
PARAMETER(PAR.Thru_Date_Pass_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.Item_Code_PASS_USR);
PARAMETER(DTL.Export_Sales);
PARAMETER(DTL.USR_Detail_or_Summary);
PARAMETER(DTL.Salesperson_Code);
PARAMETER(PAR.Ship_to_Customer_Pass_USR);
PARAMETER(LCL.Status_Y_or_N);
PARAMETER(DTL.Commodity_Market_Code);
PARAMETER(DTL.Shipping_Zone_Code);
PARAMETER(DTL.USR_Flag_1);
PARAMETER(DTL.USR_Sales_Realiz_Flag);
PARAMETER(DTL.USR_Flag_3);
PARAMETER(DTL.Document_Name_USR);
PARAMETER(DTL.Warehouse_Type);
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Actual_or_Absorbed_USR);
PARAMETER(DTL.SH_Unused_was_broker);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

