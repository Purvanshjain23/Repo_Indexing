      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP344
      * TITLE:       BUILD WORKFILES-DEATHS AND CULL SALES BY
      *              WEEKS IN PHASE REPORT
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     10/10/96
      *
      *  FUNCTION:   THIS BATCH PROGRAM IS CALLED FROM HP444CL.
      *              IT BUILDS THREE WORKFILES:
      *                 HSP344 - GROUP DETAIL
      *                 HSP345 - GROUP TOTAL
      *                 HSP346 - PHASE TOTAL
      *
      *              THE USER'S SUBMISSION CRITERIA ARE PASSED IN THE
      *              LDA FROM HP444.  OPEN QUERIES ARE USED TO MAKE AN
      *              INITIAL SELECTION OF DATA.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 03/04/98  LeAnne Fedor
      *           Recompile only. Added the following fields to the
      *           database for sales movement detail, check detail and
      *           closed hog group files:
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *
      * 04/13/98  LeAnne Fedor
      *           Recompile only. New field 'state' added to farm site file.
      *
      * 01/11/99  LeAnne Fedor
      *           Recompile only. New field 'scheduled kill date' added
      *           to sales movement header file.
      *
      * 08/27/99  LeAnne Fedor
      *           Added logic for 8 additional weeks.  Report will now have
      *           28 weeks instead of 20.
      *
      * 11/03/99  LeAnne Fedor
      *           Building/room were added to the group total file.  Added
      *           logic to populate the fields.
      *
      * 04/12/00  LeAnne Fedor
      *           Recompile only. The 'closed group pounds' field in the
      *           Closed Hog Group file was increased to 11,2.
      *
      * 08/21/00  LeAnne Fedor
      *           Added logic to populate the new workfile field 'adjusted
      *           transfer in head'.  Also, changed dead/cull percent to
      *           used this 'adjusted' value instead of the normal transfer
      *           in head.
      *
      * 10/17/00  LeAnne Fedor
      *           Recompile only. New field 'load type' added to the sales
      *           movement head file.
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE                 (KEY: FSFSCD)
      *
     FHSP033    IF   E           K DISK
      *    CLOSED HOG GROUP          (KEY: CGHGSN CGRPCD)
      *
     FHSP034    IF   E           K DISK
      *    HOG GROUP                 (KEY: HGHGCD)
      *    (RECORDS SELECTED BY OPEN QUERY)
      *
     FHSL068D   IF   E           K DISK
      *    KILLED/DEAD HOGS          (KEY: KDHGSN KDKDDT)
      *
     FHSP074    IF   E           K DISK
      *    TRANSFER MOVEMENT HEADER  (KEY: MHMVSN)
      *
     FHSL075C   IF   E           K DISK
      *    TRANSFER MOVEMENT DETAIL  (KEY: MDORSN)
      *
     FHSP084    IF   E           K DISK
      *    SALES MOVEMENT HEADER     (KEY: SHMVSN)
      *
     FHSL085B   IF   E           K DISK
      *    SALES MOVEMENT DETAIL     (KEY: SGHGSN)
      *
     FHSP344    UF A E           K DISK
      *  WORKFILE FOR GROUP DETAIL   (KEY: WDHGSN WDTYMD)
      *
     FHSP345    O    E           K DISK
      *  WORKFILE FOR GROUP TOTAL    (KEY: WGHGSN)
      *
     FHSL345A   IF   E           K DISK
     F                                     RENAME(WGREC:WGRECA)
      *  WORKFILE FOR GROUP TOTAL    (KEY: WGPPCD WGHGSN)
      *
     FHSP346    O    E           K DISK
      *  WORKFILE FOR PHASE TOTAL    (KEY: WPPPCD)
      *
      /EJECT
      ****************************************************************
      * INPUT SPECS
      ****************************************************************
      *----------------------------------------------------------------
      * LDA - REPORT SELECTIONS
      *----------------------------------------------------------------
      *
     D                UDS
     D  LDFSBO                 1      5
     D  LDFYMD                 6     13  0
     D  LDTYMD                14     21  0
     D  LDPPCD                22     26
     D  LDFSCD                27     31  0
     D  LDBSCD                32     36
     D  LDPTCD                48     52
     D  LDHGSN                53     59  0
     D  LDFMDY                60     65  0
     D  LDTMDY                66     71  0
     D  LDCELL                77     79  0
      *
     D  LDPPFL                81     81
     D  LDTDFL                82     82
     D  LDSDFL                83     83
     D  LDDDFL                84     84
     D  LDCSFL                85     85
      *
     D  LDBODS                86    117
     D  LDPTDS               118    127
     D  LDPPDS               128    157
     D  LDFSNM               158    182
     D  LDHGCD               183    189
     D  LDBSDS               190    209
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412
     D  LDOUTQ               413    422
      *
      *
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               D   datfmt(*iso)
      *
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * READ EACH HOG GROUP SELECTED BY THE OPNQRY
      *
     C     *IN90         DOUEQ     *ON                                          MAIN DO
     C                   READ      HSP034                                 90
     C     *IN90         IFEQ      *OFF                                         IF NOT EOF
     C                   MOVEL     YES           PROCFL
      *
      * RETRIEVE THE FARM SITE NAME AND CELL FOR THE GROUP.
      * IF THE USER ELECTED TO SEE ONLY GROUPS FROM A
      * SPECIFIC CELL, ONLY PROCESS THE GROUP IF IT IS ON A
      * FARM IN THE REQUESTED CELL
      *
     C     HGFSCD        CHAIN     HSP018                             92
     C                   SELECT
     C     *IN92         WHENEQ    *ON
     C                   MOVEL     NO            PROCFL
      *
     C     LDCELL        WHENNE    0
     C     FSCELL        ANDNE     LDCELL
     C                   MOVEL     NO            PROCFL
     C                   OTHER
     C                   MOVEL     FSFSNM        WKFSNM
     C                   ENDSL
      *
     C     PROCFL        IFEQ      YES                                          IF PROCESS
      *
      * THERE ARE SEVERAL STEPS FOR PROCESSING EACH GROUP:
      *  1) FIND THE 'FROM' AND 'TO' DATE RANGES FOR 28
      *     WEEKS FOR THE GROUP STARTING WITH THE OPEN DATE.
      *     WRITE 28 GROUP DETAIL WORKFILE RECORDS--1 FOR EACH WEEK.
      *  2) IF THE USER HAS ELECTED TO INCLUDE THE DAILY DEADS,
      *     FIND THE DAILY DEADS FOR THE GROUP AND SUM THEM
      *     INTO THE APPROPRIATE WEEK RECORD.
      *  3) IF THE USER HAS ELECTED TO INCLUDE THE DOAS FROM
      *     TRANSFERS, RETRIEVE THE DOAS FROM TRANSFERS AND UPDATE
      *     THE APPROPRIATE WEEK RECORD.
      *  4) IF THE USER HAS ELECTED TO INCLUDE THE DOAS FROM
      *     SALES, RETRIEVE THE DOAS FROM SALES AND UPDATE
      *     THE APPROPRIATE WEEK RECORD.
      *  5) IF THE USER HAS ELECTED TO INCLUDE THE CULL SALES,
      *     RETRIEVE THE 'LIVE' HEAD FROM CULL SALES AND UPDATE
      *     THE APPROPRIATE WEEK RECORD.
      *  6) AFTER ALL VALUES ARE ACCUMULATED FOR THE 28 WEEKS,
      *     WRITE ONE TOTAL RECORD FOR THE GROUP.
      *
      *
      * SETUP FROM/TO DATES FOR 28 WEEKS FOR THE GROUP
      *
     C                   EXSR      $28WKS
      *
      * ACCUMULATE THE DAILY DEADS BY WEEK IF THE USER HAS
      * ELECTED TO SEE DAILY DEADS
      *
     C     LDDDFL        IFEQ      'X'
     C                   EXSR      $DEADS
     C                   ENDIF
      *
      * ACCUMULATE THE DOAS FROM TRANSFERS IF THE USER ELECTED
      * TO SEE TRANSFER DOAS
      *
     C     LDTDFL        IFEQ      'X'
     C                   EXSR      $TDOAS
     C                   ENDIF
      *
      * ACCUMULATE THE DOAS FROM SALES IF THE USER ELECTED
      * TO SEE SALES DOAS
      *
     C     LDSDFL        IFEQ      'X'
     C                   EXSR      $SDOAS
     C                   ENDIF
      *
      * ACCUMULATE THE 'LIVE' HEAD FROM CULL SALES IF THE
      * USER ELECTED TO SEE CULL SALES
      *
     C     LDCSFL        IFEQ      'X'
     C                   EXSR      $CULLS
     C                   ENDIF
      *
      * YOU HAVE NOW ACCUMULATED ALL DATA FOR A GROUP IN THE
      * 28 WEEKLY RECORDS IN THE GROUP DETAIL FILE. REREAD THESE
      * RECORDS AND SETUP YOUR TOTAL RECORD FOR THE GROUP.
      *
     C                   EXSR      $GROUP
      *
     C                   ENDIF                                                  IF PROCESS
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  MAIN DO
      *
      *----------------------------------------------------------------
      * EOF PROCESSING
      *----------------------------------------------------------------
      *
      * CREATE PHASE TOTAL WORKFILE RECORDS
      *
     C                   EXSR      $PHASE
      *
     C                   SETON                                        LR
      /EJECT
      *----------------------------------------------------------------
      * $28WKS - FIND THE FROM/TO DATE RANGES FOR 28 WEEKS OF THE GROUP
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE WILL START WITH THE 'OPEN' DATE OF THE GROUP
      * AND CREATE 28 RECORDS IN THE GROUP DETAIL WORKFILE FOR EACH
      * WEEK OF THE GROUP'S LIFE.
      *
     C     $28WKS        BEGSR
      *
      * INTIALIZE FIELDS IN THE WORKFILE DETAIL RECORD
      *
     C                   Z-ADD     HGHGSN        WDHGSN
     C                   Z-ADD     0             WDCDHD
      *
      * DEFAULT THE 'OPEN' DATE FOR THE GROUP TO THE FIRST
      * FROM DATE.
     C                   Z-ADD     HGOPDT        WKFYMD
      *
     C                   DO        28                                           DO 28 WEEKS
      *
      * FIND THE ENDING DATE FOR THE WEEK BY ADDING SIX DAYS
      * TO THE FROM DATE.
     C                   Z-ADD     WKFYMD        PFRM8
     C                   Z-ADD     6             PDAYS
     C                   EXSR      $DATE
     C                   Z-ADD     PFRM8         WDFYMD
     C                   Z-ADD     PTO8          WDTYMD
     C                   WRITE     WDREC
      *
      * FIND THE NEXT FROM DATE BY ADDING SEVEN DAYS TO
      * THE CURRENT FROM DATE.
      *
     C                   Z-ADD     7             PDAYS
     C                   EXSR      $DATE
     C                   Z-ADD     PTO8          WKFYMD
     C                   ENDDO                                                  DO 28 WEEKS
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DEADS - SUM THE DAILY DEADS FOR A GROUP BY WEEK
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE WILL READ ALL THE DAILY DEADS FOR A GROUP AND
      * SUM THEM INTO THE APPROPRIATE WEEK IN THE GROUP DETAIL
      * WORKFILE
      *
     C     $DEADS        BEGSR
      *
     C     HGHGSN        SETLL     HSL068D
      *
     C     *IN91         DOUEQ     *ON                                          DO DEADS
     C     HGHGSN        READE     HSL068D                                91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
     C                   Z-ADD     KDKDDT        WKCYMD
     C                   Z-ADD     KDKDHD        WKHD
     C                   EXSR      $ACCUM
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO DEADS
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $TDOAS - ACCUMULATE THE DOAS FROM TRANSFERS FOR THIS GROUP
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE WILL READ ALL DOAS FROM TRANSFERS FOR A GROUP
      * AND SUM THEM INTO THE APPROPRIATE WEEK IN THE GROUP DETAIL
      * WORKFILE.
      *
      * THE 'RECEIVE DATE' OF THE MOVEMENT WILL BE RETRIEVED AND USED
      * FOR DETERMINING THE 'DATE' OF THE DOA HEAD.
      *
     C     $TDOAS        BEGSR
      *
     C     HGHGSN        SETLL     HSL075C
      *
     C     *IN91         DOUEQ     *ON                                          DO TRAN DOA
     C     HGHGSN        READE     HSL075C                                91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
     C     MDDOHD        ANDNE     0
      *
     C     MDMVSN        CHAIN     HSP074                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     MHRCDT        WKCYMD
     C                   ELSE
     C                   Z-ADD     0             WKCYMD
     C                   ENDIF
      *
     C                   Z-ADD     MDDOHD        WKHD
     C                   EXSR      $ACCUM
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO TRAN DOA
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SDOAS - ACCUMULATE THE DOAS FROM SALES FOR THIS GROUP
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE WILL READ ALL DOAS FROM SALES FOR A GROUP
      * AND SUM THEM INTO THE APPROPRIATE WEEK IN THE GROUP DETAIL
      * WORKFILE
      *
      * THE 'RECEIVE DATE' OF THE MOVEMENT WILL BE RETRIEVED AND USED
      * FOR DETERMINING THE 'DATE' OF THE DOA HEAD.
      *
     C     $SDOAS        BEGSR
      *
     C     HGHGSN        SETLL     HSL085B
      *
     C     *IN91         DOUEQ     *ON                                          DO SALES DOA
     C     HGHGSN        READE     HSL085B                                91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
     C     SGDOHD        ANDNE     0
      *
     C     SGMVSN        CHAIN     HSP084                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     SHRCDT        WKCYMD
     C                   ELSE
     C                   Z-ADD     0             WKCYMD
     C                   ENDIF
      *
     C                   Z-ADD     SGDOHD        WKHD
     C                   EXSR      $ACCUM
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO SALES DOA
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CULLS - ACCUMULATE THE LIVE HEAD FROM CULLS SALES FOR GROUP
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE WILL READ ALL CULL SALES FOR A GROUP AND
      * ACCUMULATE LIVE HEAD IN THE APPROPRIATE WEEK FOR THE GROUP
      * DETAIL WORKFILE
      *
      * THE 'RECEIVE DATE' OF THE MOVEMENT WILL BE RETRIEVED AND USED
      * FOR DETERMINING WHETHER TO INCLUDE THE SALE.
      *
     C     $CULLS        BEGSR
      *
     C     HGHGSN        SETLL     HSL085B
      *
     C     *IN91         DOUEQ     *ON                                          DO CULL SALE
     C                   Z-ADD     0             WKCYMD
     C     HGHGSN        READE     HSL085B                                91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
     C     SGLVHD        ANDNE     0
      *
     C     SGMVSN        CHAIN     HSP084                             92
     C     *IN92         IFEQ      *OFF                                         IF CULL SALE
     C     SHSTCD        ANDEQ     'CULLS'
     C                   Z-ADD     SHRCDT        WKCYMD
     C                   Z-ADD     SGLVHD        WKHD
     C                   EXSR      $ACCUM
     C                   ENDIF                                                  IF CULL SALE
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO CULL SALE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ACCUM - ACCUMULATE DEAD HOGS INTO THE APPROPRIATE WEEK
      *---------------------------------------------------------------
      *
     C     $ACCUM        BEGSR
      *
      * POSITION IN THE FILE USING THE HOG GROUP NUMBER AND DATE.
      *
     C     K1P344        SETLL     HSP344
     C     HGHGSN        READE     HSP344                                 92
     C     *IN92         IFEQ      *OFF                                         IF FOUND WK
     C                   ADD       WKHD          WDCDHD
     C                   UPDATE    WDREC
     C                   ELSE
      *
      * IF YOUR DATE DIDN'T FIT INTO ANY OF THE 28 WEEKS,
      * DUMP THE HEAD INTO WEEK 28
      *
     C     HGHGSN        SETGT     HSP344
     C     HGHGSN        READPE    HSP344                                 92
     C     *IN92         IFEQ      *OFF                                         IF DUMPING
     C                   ADD       WKHD          WDCDHD
     C                   UPDATE    WDREC
     C                   ENDIF                                                  IF DUMPING
     C                   ENDIF                                                  IF FOUND WK
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $GROUP - READ THE GROUP DETAIL RECORDS AND WRITE A TOTAL RECORD
      *----------------------------------------------------------------
      *
      * THIS SUBROUTINE READS THE 28 DETAIL RECORDS FOR THE GROUP
      * AND MOVES THE VALUES INTO A SINGLE TOTAL RECORD WHICH WILL BE
      * PRINTED ON THE REPORT.
      *
      * THE 'PERCENT' FOR EACH WEEK IS ALSO CALCULATED.  THE
      * VALUE IS THE PERCENT OF TOTAL HEAD TRANSFERRED INTO THE GROUP
      * THAT IS REPRESENTED BY THE WEEK'S DEAD AND CULL SALE HEAD.
      *
     C     $GROUP        BEGSR
      *
     C                   CLEAR                   WGREC
      *
     C                   Z-ADD     HGHGSN        WGHGSN
     C                   Z-ADD     HGOPDT        WGOPDT
     C                   MOVEL     HGHGCD        WGHGCD
     C                   MOVEL     HGBLCD        WGBLCD
     C                   MOVEL     HGRMCD        WGRMCD
     C                   MOVEL     HGFSCD        WGFSCD
     C                   MOVEL     HGPPCD        WGPPCD
     C                   MOVEL     WKFSNM        WGFSNM
      *
     C                   Z-ADD     0             COUNT
      *
      * RETRIEVE TOTAL HEAD TRANSFERRED INTO THE GROUP FROM:
      *
     C                   EXSR      $TIHD
      *
      * Retrieve the 'adjusted transferred' in head.
      *
     C                   EXSR      $AJTIHD
      *
      * PROCESS THE 28 DETAIL RECORDS FOR THE GROUP
      *
     C     HGHGSN        SETLL     HSP344
      *
     C     *IN91         DOUEQ     *ON                                          DO WEEKS
     C     HGHGSN        READE     HSP344                                 91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
     C                   ADD       1             COUNT
      *
      * ACCUMULATE DEAD AND CULL SALE HEAD FOR THE GROUP
      *
     C                   ADD       WDCDHD        WGCDHD
      *
      * SETUP DEAD AND CULL SALE HEAD PER WEEK
      *
     C                   SELECT
     C     COUNT         WHENEQ    1
     C                   Z-ADD     WDCDHD        WG01HD
      *
     C     COUNT         WHENEQ    2
     C                   Z-ADD     WDCDHD        WG02HD
      *
     C     COUNT         WHENEQ    3
     C                   Z-ADD     WDCDHD        WG03HD
      *
     C     COUNT         WHENEQ    4
     C                   Z-ADD     WDCDHD        WG04HD
      *
     C     COUNT         WHENEQ    5
     C                   Z-ADD     WDCDHD        WG05HD
      *
     C     COUNT         WHENEQ    6
     C                   Z-ADD     WDCDHD        WG06HD
      *
     C     COUNT         WHENEQ    7
     C                   Z-ADD     WDCDHD        WG07HD
      *
     C     COUNT         WHENEQ    8
     C                   Z-ADD     WDCDHD        WG08HD
      *
     C     COUNT         WHENEQ    9
     C                   Z-ADD     WDCDHD        WG09HD
      *
     C     COUNT         WHENEQ    10
     C                   Z-ADD     WDCDHD        WG10HD
      *
     C     COUNT         WHENEQ    11
     C                   Z-ADD     WDCDHD        WG11HD
      *
     C     COUNT         WHENEQ    12
     C                   Z-ADD     WDCDHD        WG12HD
      *
     C     COUNT         WHENEQ    13
     C                   Z-ADD     WDCDHD        WG13HD
      *
     C     COUNT         WHENEQ    14
     C                   Z-ADD     WDCDHD        WG14HD
      *
     C     COUNT         WHENEQ    15
     C                   Z-ADD     WDCDHD        WG15HD
      *
     C     COUNT         WHENEQ    16
     C                   Z-ADD     WDCDHD        WG16HD
      *
     C     COUNT         WHENEQ    17
     C                   Z-ADD     WDCDHD        WG17HD
      *
     C     COUNT         WHENEQ    18
     C                   Z-ADD     WDCDHD        WG18HD
      *
     C     COUNT         WHENEQ    19
     C                   Z-ADD     WDCDHD        WG19HD
      *
     C     COUNT         WHENEQ    20
     C                   Z-ADD     WDCDHD        WG20HD
      *
     C     COUNT         WHENEQ    21
     C                   Z-ADD     WDCDHD        WG21HD
      *
     C     COUNT         WHENEQ    22
     C                   Z-ADD     WDCDHD        WG22HD
      *
     C     COUNT         WHENEQ    23
     C                   Z-ADD     WDCDHD        WG23HD
      *
     C     COUNT         WHENEQ    24
     C                   Z-ADD     WDCDHD        WG24HD
      *
     C     COUNT         WHENEQ    25
     C                   Z-ADD     WDCDHD        WG25HD
      *
     C     COUNT         WHENEQ    26
     C                   Z-ADD     WDCDHD        WG26HD
      *
     C     COUNT         WHENEQ    27
     C                   Z-ADD     WDCDHD        WG27HD
      *
     C     COUNT         WHENEQ    28
     C                   Z-ADD     WDCDHD        WG28HD
     C                   ENDSL
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO WEEKS
      *
      *
      * CALCULATE PERCENT OF ADJUSTED TRANSFERS IN REPRESENTED
      * FOR EACH WEEK.
      *
     C     WG01HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG01HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG01PR
     C                   ENDIF
      *
     C     WG02HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG02HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG02PR
     C                   ENDIF
      *
     C     WG03HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG03HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG03PR
     C                   ENDIF
      *
     C     WG04HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG04HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG04PR
     C                   ENDIF
      *
     C     WG05HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG05HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG05PR
     C                   ENDIF
      *
     C     WG06HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG06HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG06PR
     C                   ENDIF
      *
     C     WG07HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG07HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG07PR
     C                   ENDIF
      *
     C     WG08HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG08HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG08PR
     C                   ENDIF
      *
     C     WG09HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG09HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG09PR
     C                   ENDIF
      *
     C     WG10HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG10HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG10PR
     C                   ENDIF
      *
     C     WG11HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG11HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG11PR
     C                   ENDIF
      *
     C     WG12HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG12HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG12PR
     C                   ENDIF
      *
     C     WG13HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG13HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG13PR
     C                   ENDIF
      *
     C     WG14HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG14HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG14PR
     C                   ENDIF
      *
     C     WG15HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG15HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG15PR
     C                   ENDIF
      *
     C     WG16HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG16HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG16PR
     C                   ENDIF
      *
     C     WG17HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG17HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG17PR
     C                   ENDIF
      *
     C     WG18HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG18HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG18PR
     C                   ENDIF
      *
     C     WG19HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG19HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG19PR
     C                   ENDIF
      *
     C     WG20HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG20HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG20PR
     C                   ENDIF
      *
     C     WG21HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG21HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG21PR
     C                   ENDIF
      *
     C     WG22HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG22HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG22PR
     C                   ENDIF
      *
     C     WG23HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG23HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG23PR
     C                   ENDIF
      *
     C     WG24HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG24HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG24PR
     C                   ENDIF
      *
     C     WG25HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG25HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG25PR
     C                   ENDIF
      *
     C     WG26HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG26HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG26PR
     C                   ENDIF
      *
     C     WG27HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG27HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG27PR
     C                   ENDIF
      *
     C     WG28HD        IFNE      0
     C     wgajtihd      ANDNE     0
     C     WG28HD        DIV       wgajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WG28PR
     C                   ENDIF
      *
     C                   WRITE     WGREC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $TIHD - RETRIEVE TRANSFERRED IN HEAD
      *---------------------------------------------------------------
      *
      * RETRIEVE THE TRANSFERRED IN HEAD FROM:
      * 1) THE CLOSED GROUP RECORD FOR CLOSED GROUPS, OR
      * 2) THE GENERIC MOVE PROGRAM FOR ALL OTHER GROUPS.
      *
     C     $TIHD         BEGSR
      *
     C                   SELECT
     C     HGGSCD        WHENEQ    'CL'
     C                   MOVEL     'TRANI'       WKRPCD
     C     K2P033        CHAIN     HSP033                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     CGCGHD        WGTIHD
     C                   ENDIF
     C                   OTHER
      *
     C                   z-add     99999999      xxcymd
     C                   call      'HPMOVE'      plist01
     C                   z-add     tinhd         wgtihd
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *------------------------------------------------------------------
      * $ajtihd - Calculate adjusted transferred in head
      *------------------------------------------------------------------
      *
      * Adjusted transferred in head is calculated as the 'transfers
      * in' less the head transferred out during the first 7 days after the
      * group's open date.
      *
     C     $ajtihd       begsr
      *
     C                   select
     C                   when      hggscd = 'CL'
     C                   movel     'TRANA'       wkrpcd
     C     k2p033        chain     hsp033                             92
     C                   if        *in92 = *off
     C                   z-add     cgcghd        wgajtihd
     C                   endif
     C                   other
      *
      * Calculate the 'cut-off' date as 7 days after the group's open date.
      *
     C     *iso          test(d)                 hgopdt                 92
     C                   if        *in92 = *off                                 If good date
     C                   movel     hgopdt        wkcymdiso
     C                   adddur    7:*days       wkcymdiso
     C                   move      wkcymdiso     xxcymd
      *
      * Retrieve the 'transfer out head' as of the above date.
      * Then, calculate the 'adjusted transfer in' head using the
      * returned values from the call.
      *
     C                   call      'HPMOVE'      plist01
     C     wgtihd        sub       touhd         wgajtihd
     C                   endif                                                  If good date
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * $PHASE - READ GROUP TOTAL RECORDS AND CREATE PHASE TOTAL RECORD
      *---------------------------------------------------------------
      *
      * THIS SUBROUTINE READS THE GROUP TOTAL RECORDS FROM THE WORKFILE
      * AND CREATES A TOTAL RECORD FOR EACH PHASE FOR THE 'PHASE TOTAL'
      * WORKFILE.
      *
     C     $PHASE        BEGSR
      *
     C     *LOVAL        SETLL     HSL345A
     C                   MOVEL     YES           FIRST
      *
     C     *IN91         DOUEQ     *ON                                          DO GROUPS
     C                   READ      HSL345A                                91
     C     *IN91         IFEQ      *OFF                                         IF NOT EOF
      *
     C     FIRST         IFEQ      YES
     C                   MOVEL     NO            FIRST
     C                   EXSR      $CLRPP
     C                   ENDIF
      *
     C     SVPPCD        IFNE      WGPPCD                                       IF BREAK
     C                   EXSR      $WRTPP
     C                   EXSR      $CLRPP
     C                   ENDIF                                                  IF BREAK
      *
     C                   ADD       WGTIHD        WPTIHD
     C                   ADD       WGAJTIHD      WPAJTIHD
     C                   ADD       WGCDHD        WPCDHD
     C                   ADD       WG01HD        WP01HD
     C                   ADD       WG02HD        WP02HD
     C                   ADD       WG03HD        WP03HD
     C                   ADD       WG04HD        WP04HD
     C                   ADD       WG05HD        WP05HD
     C                   ADD       WG06HD        WP06HD
     C                   ADD       WG07HD        WP07HD
     C                   ADD       WG08HD        WP08HD
     C                   ADD       WG09HD        WP09HD
     C                   ADD       WG10HD        WP10HD
     C                   ADD       WG11HD        WP11HD
     C                   ADD       WG12HD        WP12HD
     C                   ADD       WG13HD        WP13HD
     C                   ADD       WG14HD        WP14HD
     C                   ADD       WG15HD        WP15HD
     C                   ADD       WG16HD        WP16HD
     C                   ADD       WG17HD        WP17HD
     C                   ADD       WG18HD        WP18HD
     C                   ADD       WG19HD        WP19HD
     C                   ADD       WG20HD        WP20HD
     C                   ADD       WG21HD        WP21HD
     C                   ADD       WG22HD        WP22HD
     C                   ADD       WG23HD        WP23HD
     C                   ADD       WG24HD        WP24HD
     C                   ADD       WG25HD        WP25HD
     C                   ADD       WG26HD        WP26HD
     C                   ADD       WG27HD        WP27HD
     C                   ADD       WG28HD        WP28HD
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO GROUPS
      *
      *  WRITE OUT THE LAST PHASE RECORD
      *
     C     FIRST         IFEQ      NO
     C                   EXSR      $WRTPP
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLRPP - CLEAR FIELDS IN PRODUCTION PHASE TOTAL WORKFILE REC
      *---------------------------------------------------------------
      *
     C     $CLRPP        BEGSR
      *
     C                   CLEAR                   WPREC
      *
     C                   MOVEL     WGPPCD        SVPPCD
     C                   MOVEL     WGPPCD        WPPPCD
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRTPP - WRITE A PRODUCTION PHASE TOTAL
      *---------------------------------------------------------------
      *
     C     $WRTPP        BEGSR
      *
      * CALCULATE PERCENT PER WEEK
      *
     C     WP01HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP01HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP01PR
     C                   ENDIF
      *
     C     WP02HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP02HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP02PR
     C                   ENDIF
      *
     C     WP03HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP03HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP03PR
     C                   ENDIF
      *
     C     WP04HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP04HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP04PR
     C                   ENDIF
      *
     C     WP05HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP05HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP05PR
     C                   ENDIF
      *
     C     WP06HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP06HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP06PR
     C                   ENDIF
      *
     C     WP07HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP07HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP07PR
     C                   ENDIF
      *
     C     WP08HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP08HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP08PR
     C                   ENDIF
      *
     C     WP09HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP09HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP09PR
     C                   ENDIF
      *
     C     WP10HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP10HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP10PR
     C                   ENDIF
      *
     C     WP11HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP11HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP11PR
     C                   ENDIF
      *
     C     WP12HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP12HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP12PR
     C                   ENDIF
      *
     C     WP13HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP13HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP13PR
     C                   ENDIF
      *
     C     WP14HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP14HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP14PR
     C                   ENDIF
      *
     C     WP15HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP15HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP15PR
     C                   ENDIF
      *
     C     WP16HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP16HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP16PR
     C                   ENDIF
      *
     C     WP17HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP17HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP17PR
     C                   ENDIF
      *
     C     WP18HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP18HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP18PR
     C                   ENDIF
      *
     C     WP19HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP19HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP19PR
     C                   ENDIF
      *
     C     WP20HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP20HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP20PR
     C                   ENDIF
      *
     C     WP21HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP21HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP21PR
     C                   ENDIF
      *
     C     WP22HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP22HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP22PR
     C                   ENDIF
      *
     C     WP23HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP23HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP23PR
     C                   ENDIF
      *
     C     WP24HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP24HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP24PR
     C                   ENDIF
      *
     C     WP25HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP25HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP25PR
     C                   ENDIF
      *
     C     WP26HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP26HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP26PR
     C                   ENDIF
      *
     C     WP27HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP27HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP27PR
     C                   ENDIF
      *
     C     WP28HD        IFNE      0
     C     wpajtihd      ANDNE     0
     C     WP28HD        DIV       wpajtihd      WKFLD
     C     WKFLD         MULT(H)   100           WP28PR
     C                   ENDIF
      *
     C                   WRITE     WPREC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   MOVEL     'CYMD'        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   MOVEL     'I'           PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      *
      * Parm Lists
      *
     C     plist01       plist
     C                   parm                    hghgsn
     C                   parm                    xxcymd
      * Head
     C                   parm                    gpihd                          GROUP INV
     C                   parm                    pinhd                          PIG IN
     C                   parm                    tinhd                          TRSF IN
     C                   parm                    tisphd                         SAME PHASE
     C                   parm                    tidphd                         DIFF PHASE
     C                   parm                    pouhd                          PIGS OUT
     C                   parm                    touhd                          TRSF OUT
     C                   parm                    tosphd                         SAME PHASE
     C                   parm                    tosphd                         DIFF PHASE
     C                   parm                    rinhd                          REJECT IN
     C                   parm                    rouhd                          REJECT OUT
     C                   parm                    qinhd                          QUALITY IN
     C                   parm                    qouhd                          QUALITY OUT
     C                   parm                    morhd                          MORTALITY
     C                   parm                    inahd                          INV ADJ
      * Pounds
     C                   parm                    pinlb                          PIG IN
     C                   parm                    tinlb                          TRSF IN
     C                   parm                    tisplb                         SAME PHASE
     C                   parm                    tidplb                         DIFF PHASE
     C                   parm                    poulb                          PIG OUT
     C                   parm                    toulb                          TRSF OUT
     C                   parm                    tosplb                         SAME PHASE
     C                   parm                    todplb                         DIFF PHASE
     C                   parm                    rinlb                          REJECT IN
     C                   parm                    roulb                          REJECT OUT
     C                   parm                    qinlb                          QUALITY IN
     C                   parm                    qoulb                          QUALITY OUT
     C                   parm                    morlb                          MORTALITY
      *
      * KEY LISTS
      *
      * KEY FOR GROUP DETAIL WORK FILE
      *
     C     K1P344        KLIST
     C                   KFLD                    HGHGSN
     C                   KFLD                    WKCYMD
      *
     C     K2P033        KLIST
     C                   KFLD                    HGHGSN
     C                   KFLD                    WKRPCD
      *
      *
      * PARM FIELDS
      *
     C     *LIKE         DEFINE    CGRPCD        WKRPCD
      *
     C     *LIKE         DEFINE    LDTYMD        XXCYMD
      *
      * HEAD
     C                   Z-ADD     0             @@NU50            5 0
     C     *LIKE         DEFINE    @@NU50        GPIHD
     C     *LIKE         DEFINE    @@NU50        PINHD
     C     *LIKE         DEFINE    @@NU50        TINHD
     C     *LIKE         DEFINE    @@NU50        TISPHD
     C     *LIKE         DEFINE    @@NU50        TIDPHD
     C     *LIKE         DEFINE    @@NU50        POUHD
     C     *LIKE         DEFINE    @@NU50        TOUHD
     C     *LIKE         DEFINE    @@NU50        TOSPHD
     C     *LIKE         DEFINE    @@NU50        TODPHD
     C     *LIKE         DEFINE    @@NU50        RINHD
     C     *LIKE         DEFINE    @@NU50        ROUHD
     C     *LIKE         DEFINE    @@NU50        QINHD
     C     *LIKE         DEFINE    @@NU50        QOUHD
     C     *LIKE         DEFINE    @@NU50        MORHD
     C     *LIKE         DEFINE    @@NU50        INAHD
      * POUNDS
     C                   Z-ADD     0             @@NU92            9 2
     C     *LIKE         DEFINE    @@NU92        PINLB
     C     *LIKE         DEFINE    @@NU92        TINLB
     C     *LIKE         DEFINE    @@NU92        TISPLB
     C     *LIKE         DEFINE    @@NU92        TIDPLB
     C     *LIKE         DEFINE    @@NU92        POULB
     C     *LIKE         DEFINE    @@NU92        TOULB
     C     *LIKE         DEFINE    @@NU92        TOSPLB
     C     *LIKE         DEFINE    @@NU92        TODPLB
     C     *LIKE         DEFINE    @@NU92        RINLB
     C     *LIKE         DEFINE    @@NU92        ROULB
     C     *LIKE         DEFINE    @@NU92        QINLB
     C     *LIKE         DEFINE    @@NU92        QOULB
     C     *LIKE         DEFINE    @@NU92        MORLB
      *
      *
      * CONTROL PROCESSING FLAGS AND FIELDS
      *
      *
     C                   MOVEL     YES           FIRST             1
     C                   MOVEL     YES           PROCFL            1
     C                   Z-ADD     0             COUNT             3 0
     C     *LIKE         DEFINE    FSFSCD        SVFSCD
     C     *LIKE         DEFINE    FSPPCD        SVPPCD
      *
      * WORKFIELDS
      *
     C     *LIKE         DEFINE    HGCLDT        WKFYMD
     C     *LIKE         DEFINE    HGCLDT        WKCYMD
     C     *LIKE         DEFINE    KDKDHD        WKHD
     C     *LIKE         DEFINE    FSFSNM        WKFSNM
     C                   Z-ADD     0             WKFLD            15 5
      *
     C                   ENDSR
      /EJECT
