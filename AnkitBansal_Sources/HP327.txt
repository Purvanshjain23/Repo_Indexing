      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: Process Nursery-to-Nursery Transfers
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/15/01
      *
      * FUNCTION:    This function writes records to the nursery-to-nursery transfer workfile.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl034d   if   e           k disk
      *    Hog group
      *
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsj075g   if   e           k disk
      *  Transfer detail + transfer header
      *  (Records selected in open query)
      *
      *
     Fhsp327    if   e           k disk    prefix(p1)
      *  Workfile: Nursery-to-nursery transfers
      *
      *
     Fhsl327a   uf a e           k disk    rename(w3rec:w3reca)
      *  Workfile: Nursery-to-nursery transfers
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * STEP 1: Process all Nursery-to-Nursery transfers from 1999 forward.
      *
     C                   exsr      $step1
      *
      *
      * STEP 2: Read the workfile that you just populated and populate the Catch-22
      *         flag.
     C                   exsr      $step2
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *--------------------------------------------------------------
      * Step 1 - Write nursery-to-nursery transfers to workfile
      *--------------------------------------------------------------
      *
      * Process all Nursery-to-Nursery transfers from 1990 forward that had
      * quality or rejected head.
      * Write each record to the workfile.
      *
     C     $step1        begsr
      *
     C                   dou       *in90 = *on                                  Step 1 loop
     C                   read      hsj075g                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             (mdqlhd <> 0 or mdrjhd <> 0)
      *
     C                   exsr      $wrt327
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 1 loop
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------
      * Step 2 - Populate the Catch-22 flag.
      *--------------------------------------------------------------
      *
      * We can never determine the BGF source farms for nursery groups that
      * are both origin and destination groups on nursery-to-nursery transfers.
      * So, to avoid this catch-22 situation, we want to flag the transfer records
      * where the origin group is a destination group on any other nursery-to-nursery
      * transfer.
      *
      * So, read each record in the workfile.  Using the origin group, chain
      * to the same workfile using the logical file keyed by destination group. If you
      * get a hit, then flag the original record as a catch-22 record.
      *
     C     $step2        begsr
      *
     C     *loval        setll     hsl327a
      *
     C                   dou       *in91 = *on                                  Step 2 loop
     C                   read      hsl327a                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     w3orhgsn      chain     hsp327                             92
     C                   if        *in92 = *off
     C                   move      yes           w322fl
     C                   else
     C                   move      no            w322fl
     C                   endif
      *
     C                   update    w3reca
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Step 1 loop
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------
      * Write a record to the nursery-to-nursery transfer workfile
      *--------------------------------------------------------------
      *
     C     $wrt327       begsr
      *
      * Retrieve destination hog group code
      *
     C     mddnsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   move      hghgcd        w3dnhgcd
     C                   else
     C                   move      *blank        w3dnhgcd
     C                   endif
      *
      * Retrieve origin hog group code
      *
     C     mdorsn        chain     hsl034d                            92
     C                   if        *in92 = *off
     C                   move      hghgcd        w3orhgcd
     C                   else
     C                   move      *blank        w3orhgcd
     C                   endif
      *
      * Retrieve destination farm site cell
      *
     C     mhdnfs        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        w3dncell
     C                   else
     C                   z-add     0             w3dncell
     C                   endif
      *
      * Retrieve origin farm site cell
      *
     C     mhorfs        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   z-add     fscell        w3orcell
     C                   else
     C                   z-add     0             w3orcell
     C                   endif
      *
     C                   z-add     mhrcdt        w3rcdt
     C                   z-add     mhorfs        w3orfscd
     C                   z-add     mdorsn        w3orhgsn
     C                   z-add     mhdnfs        w3dnfscd
     C                   z-add     mddnsn        w3dnhgsn
     C     mdrjhd        add       mdqlhd        w3rchd
      *
     C                   write     w3reca
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /EJECT
