// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPJ5DFR
// ?Date: 14.08.2025 Time: 03:40:53
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Change Log
DO;

//?**************************************************************************
//?S009468 MS 12/03/2024 Added new audit fields in 'AR Claim Department' file
//?As timestamp field is also added, re-compilation was required as the objct
//?was compiled with CVTOPT(*DATETIME) so it was passing blank to timestamp
//?and that's why 'Data Mapping Error' appeared, hence re-compilation was rqd
//?So, we went ahead and added the new fields in CRTOBJ/CHGOBJ as well
//?**************************************************************************
//?** 02/27/2006 LJB
//?** Change the print process for both option 6 and F21 to remove
//?** the sbmjob command and add a new program which will prompt
//?** the user for printer parms and will override the printer to
//?** the selected parameters.
//?*****
//?E4057 JJH 06/22/15 - Price Credit Memo Fixes
//?- Add Selector in CTL for Record Stautus
//?- Default CTL Record Status with an "A"
//?- Modify option 4=Purge to set the Record Staus to a "I", and not
//?  physically remove record.
//?- Pass I Parm to Print the A/R Claim Department by the CTL
//?  Record Status.
ENDDO;

//?*** Setup Security & Company Title ***
// PAR.Application Code = CND.Order Management System
PAR.Application_Code = 'OMS';

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER(PAR.Application_Code);
PARAMETER(LCL.Company_Number);
PARAMETER(LCL.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.System Value Numeric = CON.1
PAR.System_Value_Numeric = 1;

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

//?E4057 JJH 06/22/15 - Add First Time Flag
// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?USER: Initialize subfile control

//?E4057 JJH 06/22/15 - First time, default Record Status with "A"
CASE;

// IF LCL.First Time Flag is Yes
IF LCL.First_Time_Flag = 'Y';

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// LCL.First Time Flag = CND.NO
LCL.First_Time_Flag = 'N';

ENDIF;

//?USER: Process subfile control (Pre-confirm)

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?** Process Command Keys 6 to create & 21 to print
CASE;

// IF CTL.*CMD key is CF06
IF CTL.*CMD_key = '06';

//?Create A/R Claim Department
DO;

// Call program Zzz A/R Claim DepartmntE1.
CALL PROGRAM(Zzz A/R Claim DepartmntE1) ('PPJ8E1R');
PARAMETER(CTL.Claim_Department_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

//?** Process Command Keys 6 to create & 21 to print
// IF CTL.*CMD key is CF21
IF CTL.*CMD_key = '21';

//?** Print listing
//?Print A/R Claim Department
DO;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?** Submit the Report.
DO;

//?** Call the program to prompt for printer options and then to
//?** override the printer file and print the report.   2/27/06 LJB
// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program PRT A/R Claim Dept Rpt UP.
CALL PROGRAM(PRT A/R Claim Dept Rpt UP) ('PPW9UPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(*BLANK);
PARAMETER('PPKBPFR');
PARAMETER(CTL.Record_Status);
PARAMETER('A/R Claim Dept Report');
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.Application_Code);

// Send information message - 'Report has been printed.'
MESSAGE(USR2100 *INFO);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

ENDIF;

ENDDO;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

//?Edit Claim Deplartment
DO;

// Call program Zzz A/R Claim DepartmntE1.
CALL PROGRAM(Zzz A/R Claim DepartmntE1) ('PPJ8E1R');
PARAMETER(RCD.Claim_Department_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

//?E4057 JJH 06/22/15 - Change validation logic to distinguish
//? between Active and Inactive records.
//?Verify the delete of this record
DO;

EXECUTE FUNCTION(Vry A/R Claim ReasonPurRT) TYPE(RTVOBJ) FILE(PPAUREP)          AC1725529;
PARAMETER(RCD.Claim_Department_Code);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

 ENDIF;

 //?USER: Exit processing

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// PGM.*Defer confirm = CND.Proceed to confirm
PGM.*Defer_confirm = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

//?E4057 JJH 06/22/15 - Send new message to indicate that you will
//?  to Purge associated Department Reasons first.
// Send error message - 'Purge not allowed.  You must purge all associated A/R Claim Reason records.
ERROR(USR4798);

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6'/'6';

//?Print A/R Claim Department
DO;

//?** Option 6 to print individual department code
CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

//?Submit the Report.
DO;

//?** Call the program to prompt for printer options and then to
//?** override the printer file and print the report.   2/27/06 LJB
// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program PRT A/R Claim Dept Rpt UP.
CALL PROGRAM(PRT A/R Claim Dept Rpt UP) ('PPW9UPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(RCD.Claim_Department_Code);
PARAMETER('PPKBPFR');
PARAMETER(CTL.Record_Status);
PARAMETER('A/R Claim Dept Report');
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.Application_Code);

// Send information message - 'Report has been printed.'
MESSAGE(USR2100 *INFO);

ENDDO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDDO;

// IF RCD.*SFLSEL is *8
IF RCD.*SFLSEL = '8';

//?Select the A/R Claims Reason WW
DO;

// Call program WW A/R Claim Reason    DF.
CALL PROGRAM(WW A/R Claim Reason    DF) ('PPKHDFR');
PARAMETER(RCD.Claim_Department_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDDO;

ENDIF;

//?USER: Process subfile record (Post-confirm)

CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

//?E4057 JJH 06/22/15 - On 4=Purge, change Record Status to "I", and
//?  do NOT phyiscally Delete record.
//?S009468: Updated new audit fields
EXECUTE FUNCTION(Chg A/R Claim DepartmntCH) TYPE(CHGOBJ) FILE(PPATREP)          AC1721259;
PARAMETER(RCD.Claim_Department_Code);
PARAMETER(RCD.Claim_Department_Desc);
PARAMETER(RCD.Claim_Responsibility);
PARAMETER('I');
PARAMETER(RCD.Updated_By);
PARAMETER(RCD.Updated_Program_Name);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(PAR.Change_Time);
 PARAMETER(PAR.Change_User);
 PARAMETER(PAR.Change_Program);
 PARAMETER(PAR.Change_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

