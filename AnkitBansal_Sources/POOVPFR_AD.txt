// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POOVPFR
// ?Date: 14.08.2025 Time: 12:06:18
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

//?5/13/04  RMC - PKTR01 -  Heading Print Control
// WRK.Print (Yes/No) USR = CND.Yes
WRK.Print_Yes_No_USR = 'Y';

//?***** change log and comments
//?R8827 JJH 01/18/17 - Correct Load Freight Allocation Calculation
//?- Get MG Created Load from Load Header
//?- Modify calculation of Incremental Miles.  If Mercury Gate created
//?  use Miles to next stop from Load Detail, otherwise Increment miles.
//?E000322 LJB 12/17/2009  Write selected records to a new work
//?   file to be downloaded to an excel spreadsheet if requested
//?W262 LJB 11/24/2009  Change Exclude Carrier Paid to Incl/Excl/All
//?   Exclude paid if E, Include Paid Only if I, print all if blanks
//?7/11/08  RMC - E00156 use fuel surch amt 11.2
//?6/11/08  RMC - E001560- Print fuel surch, shorten cust name, add city/st,
//?  hide order nmbr; ADD TOTALS
//?5/13/04  RMC - PKTR01 -  Heading Print Control & sel by company
//?04/21/04 PKD Using Carrier Paid Status instead of Amount.
//?PK0412 2/11/02  Exclude if Carrier Payment has been made
//?USER: Record selection processing

//?Actual Freight Amount = 0
CASE;

// IF PAR.USR Confirm Status (Y/N) is Yes
IF PAR.USR_Confirm_Status_Y_N = 'Y';

// AND DB1.Load Actual Freight is Zero
AND DB1.Load_Actual_Freight = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?04/21/04 PKD Using Carrier Paid Status instead of Amount.
//?Exclude/Include if Carrier Payment parm is passed in   W262 11/24/09
CASE;

// IF PAR.Type Inc/Exc Sts is Exclude
IF PAR.Type_Inc_Exc_Sts = 'E';

CASE;

// IF DB1.LH Carrier Payment Sts is Paid
IF DB1.LH_Carrier_Payment_Sts = 'P';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Exclude/Include if Carrier Payment parm is passed in   W262 11/24/09
// IF PAR.Type Inc/Exc Sts is Include
IF PAR.Type_Inc_Exc_Sts = 'I';

CASE;

// IF DB1.LH Carrier Payment Sts is Not Paid
IF DB1.LH_Carrier_Payment_Sts = *BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?PK0412 2/11/02  Exclude Carrier truck
CASE;

// IF PAR.Exclude Shp Mth is CT STS is Yes
IF PAR.Exclude_Shp_Mth_is_CT_STS = 'Y';

CASE;

// IF DB1.Shipping Method is Collect Truck
IF DB1.Shipping_Method = 'CT';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?pktr01 5/14/04
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

// AND PAR.Company Number NE DB1.Company Number
AND PAR.Company_Number <> DB1.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

CASE;

// IF TOP.Company Number is greater than zero
IF TOP_Company_Number > *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Name = CON.*ALL
TOP_Name = *ALL;

ENDIF;

// TOP.From Date             USR = PAR.USR From Date
TOP_From_Date_USR = PAR.USR_From_Date;

// TOP.To Date               USR = PAR.USR To Date
TOP_To_Date_USR = PAR.USR_To_Date;

// TOP.USR Confirm Status (Y/N) = PAR.USR Confirm Status (Y/N)
TOP_USR_Confirm_Status_Y_N = PAR.USR_Confirm_Status_Y_N;

//?This prints only the detail,so print this      RMC 6/11/08
// TOP.Detail/Summary Report Usr = CND.Detail
TOP_Detail_Summary_Report_Usr = 'D';

//?** Change Exclude Carrier paid to Include paid only, Exclude
//?** paid, or all                                       W262
// TOP.Exclude if Carr Paid STS = PAR.Type Inc/Exc Sts
TOP_Exclude_if_Carr_Paid_STS = PAR.Type_Inc_Exc_Sts;

CASE;

// IF PAR.Type Inc/Exc Sts is Exclude
IF PAR.Type_Inc_Exc_Sts = 'E';

// TOP.Condition Desc. 2  USR = CON.Exclude Paid Carriers
TOP_Condition_Desc_2_USR = 'Exclude Paid Carriers';

// IF PAR.Type Inc/Exc Sts is Include
IF PAR.Type_Inc_Exc_Sts = 'I';

// TOP.Condition Desc. 2  USR = CON.Include Only Paid Carrier
TOP_Condition_Desc_2_USR = 'Include Only Paid Carrier';

// IF PAR.Type Inc/Exc Sts is All
IF PAR.Type_Inc_Exc_Sts = *BLANK;

// TOP.Condition Desc. 2  USR = CON.*All Paid & Unpaid
TOP_Condition_Desc_2_USR = *All Paid & Unpaid;

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Load ID header format

//?USER: On print of detail format

// WRK.Print (Yes/No) USR = CND.No
WRK.Print_Yes_No_USR = 'N';

//?** E000322 Process for work file that will be emailed
// WRK.Carrier Code = DB1.Carrier Code
WRK.Carrier_Code = DB1.Carrier_Code;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Load Frt Cmp Txfrs PO
EXECUTE FUNCTION(PRT Load Frt Cmp Txfrs PO) TYPE(PRTOBJ);
PARAMETER(CUR.Load_ID);
PARAMETER(CUR.Carrier_Code);
PARAMETER(CUR.Rated_Freight);
PARAMETER(CUR.Load_Actual_Freight);
PARAMETER(CUR.Total_Load_Order_Weight);
PARAMETER(NXT.Weight_11_1_USR);
PARAMETER(NXT.USR_Billing_Dtl_Net_Dol_2);
PARAMETER(NXT.USR_Billing_Dtl_Net_Dol_3);
PARAMETER(NXT.USR_Billing_Dtl_Net_Dol_4);
PARAMETER(NXT.USR_Billing_Dtl_Net_Dol_5);
PARAMETER(NXT.Fuel_Surcharge_Amt_11_2);
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


//?USER: Print required level totals

// SUPPRESSED PRINT Load ID totals format

//?USER: On print of final totals format

//?Calculate Freight Rates
CASE;

// IF CUR.Weight 11.1 USR is Greater than Zero
IF CUR.Weight_11_1_USR > *ZERO;

// WRK.USR Work Percent 7/6 = CUR.USR Billing Dtl Net Dol 2 / CUR.Weight 11.1 USR *
WRK.USR_Work_Percent_7_6 = CUR.USR_Billing_Dtl_Net_Dol_2 / CUR.Weight_11_1_USR;

// CUR.USR Work Percent 5.2 = WRK.USR Work Percent 7/6 * CON.100 *Rounded
CUR.USR_Work_Percent_5_2 = WRK.USR_Work_Percent_7_6 * 100 'H';

// WRK.USR Work Percent 7/6 = CUR.USR Billing Dtl Net Dol 3 / CUR.Weight 11.1 USR *
WRK.USR_Work_Percent_7_6 = CUR.USR_Billing_Dtl_Net_Dol_3 / CUR.Weight_11_1_USR;

// CUR.USR Freight Cost = WRK.USR Work Percent 7/6 * CON.100 *Rounded
CUR.USR_Freight_Cost = WRK.USR_Work_Percent_7_6 * 100 'H';

// WRK.USR Work Percent 7/6 = CUR.USR Billing Dtl Net Dol 5 / CUR.Weight 11.1 USR *
WRK.USR_Work_Percent_7_6 = CUR.USR_Billing_Dtl_Net_Dol_5 / CUR.Weight_11_1_USR;

// CUR.Freight Cost Work = WRK.USR Work Percent 7/6 * CON.100 *Rounded
CUR.Freight_Cost_Work = WRK.USR_Work_Percent_7_6 * 100 'H';

ENDIF;

