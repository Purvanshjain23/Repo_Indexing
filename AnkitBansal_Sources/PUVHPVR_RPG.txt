     H/TITLE PMT HPS Mvmnt Log ResndPR Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 12/23/21  Time  : 08:47:39
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FPUVHPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: PMT HPS Mvmnt Log ResndPR Prompt & validate record
      *
      * Days in month for date validation
     E                    @XD    12  12  2 0
      * Long constants
     E                    @CN#    1  07  6   @CN    25
      * Set wdw location allowed?
     E                    YSL         1  1
     E                    YDOW        7  1               *Days of week
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXTCK        DS
      * Time: hours, minutes, seconds
     I                                        1   60XTTIM
     I                                        1   20XTHH
     I                                        3   40XTNN
     I                                        5   60XTSS
      /EJECT
     IXDOFF       DS
      * Cut-off year
     I                                        1   40XOFF
     I                                        3   40XOFFYY
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(HPSMV-    1 256 #S0001
     I              'MNTLR) JOBD(*USRPRF)'
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0001
      * @Numeric 15.2
     I                                    P  81  882ZA0002
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0003
      * @Numeric 15.2
     I                                    P  81  882ZA0004
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0005
      * @Numeric 15.2
     I                                    P  81  882ZA0006
      * Message data for 'Generic Message 80 NBR'
      * Generic Message 80 USR
     I                                        1  80 ZA0007
      * @Numeric 15.2
     I                                    P  81  882ZA0008
      * Message data for 'Generic Message 80 ERR 2'
      * Generic Message 80 USR
     I                                        1  80 ZA0009
      * USR Status (Y/N)
     I                                       81  81 ZA0010
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Reposition window
     C   26                CAS            ZRRPWD
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
     C                     Z-ADD1         YWPNNO  10       Panel number
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
     C                     Z-ADD1         W0WASM  10
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * Prompt for confirmation
     C                     EXSR DHPMCF
      * Quit if not confirmed
     C           *IN99     CABEQ'1'       DAEXIT
      * USER: User defined action
      * LCL.From Date D8# USR = DTL.From Date             USR
     C           #DL9DT    IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0001
     C                     ELSE
     C           #DL9DT    ADD  19000000  YL0001           From Date D8# U
     C                     END
     C                     MOVEL*BLANK    YL0002           From Date TXT U
     C                     MOVELYL0001    YL0002           From Date TXT U
      * LCL.To Date D8# USR = DTL.To Date               USR
     C           #DMADT    IFEQ *ZERO
     C                     Z-ADD*ZERO     YL0003
     C                     ELSE
     C           #DMADT    ADD  19000000  YL0003           To Date D8# USR
     C                     END
     C                     MOVEL*BLANK    YL0004           Thru Date TXT U
     C                     MOVELYL0003    YL0004           Thru Date TXT U
      * SBMJOB: Exc HPS Mvmnt Log ResndCL - /UT User Programs  * 
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'HP4762CL'#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVEL#DFAU1    #SSTR     P      HPS Business Of
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 5         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELYL0002    #SSTR     P      From Date TXT U
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 8         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELYL0004    #SSTR     P      Thru Date TXT U
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 8         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'HP4762CL'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'HP4762CL'W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
     C                     END
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate From Date             USR
      * External date
     C                     Z-ADDVDL9DT    XDEXDT
      * Check date
     C                     EXSR XDCK2
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9931  *
     C                     END
     C                     Z-ADDXDINDT    #DL9DT
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * Must be a 'Sunday' Date from Previous Week.
      * CASE: DTL.From Date             USR is Entered
     C           #DL9DT    IFNE *ZERO                      *IF
     C                     Z-ADD*ZERO     #DMADT           To Date
      * Get Prior Sunday's Date Based on Current Job Date.
      * CASE: *OTHERWISE
      * WRK.Day of Week (SYN) USR = JOB.*Job date *DAY OF WEEK
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     WU
      * CASE: WRK.Day of Week (SYN) USR is Sunday
     C           WU        IFEQ 7                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-7 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-7        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: WRK.Day of Week (SYN) USR is Monday
     C           WU        IFEQ 1                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-8 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-8        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: WRK.Day of Week (SYN) USR is Tuesday
     C           WU        IFEQ 2                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-9 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-9        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: WRK.Day of Week (SYN) USR is Wednesday
     C           WU        IFEQ 3                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-10 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-10       XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: WRK.Day of Week (SYN) USR is Thursday
     C           WU        IFEQ 4                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-11 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-11       XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: WRK.Day of Week (SYN) USR is Friday
     C           WU        IFEQ 5                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-12 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-12       XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     ELSE
      * CASE: WRK.Day of Week (SYN) USR is Saturday
     C           WU        IFEQ 6                          *IF
      * LCL.Date Sun USR = JOB.*Job date + CON.-13 *DAYS
     C           ##JDT     ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-13       XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     YL0005
     C                     ELSE
     C           XDINDT    SUB  1000000   YL0005
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Cannot be Today or Future Date or Sunday's Current Week.
      * CASE: DTL.From Date             USR EQ JOB.*Job date
     C           #DL9DT    IFEQ ##JDT                      *IF
      * Setup message data for message
     C                     MOVEL@CN,001   ZA0001           Generic Message
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  #DL9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     GOTO DBEXIT                     *QUIT
     C                     ELSE
      * CASE: DTL.From Date             USR GT JOB.*Job date
     C           #DL9DT    IFGT ##JDT                      *IF
      * Setup message data for message
     C                     MOVEL@CN,002   ZA0003           Generic Message
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  #DL9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0004
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     GOTO DBEXIT                     *QUIT
     C                     ELSE
      * CASE: *OTHERWISE
      * LCL.Day of Week (SYN) USR = DTL.From Date             USR *DAY OF
     C           #DL9DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C           XDAY1     ADD  3         XDWK1   80
     C                     DIV  7         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     Z-ADD7         XDWK1
     C                     END
     C           XDAY1     SUB  XDWK1     XDAY2   60
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     MOVEL'NONE'    WUDLN  10
     C                     EXSR XDUDY
     C                     MOVE XDURR     YL0006
      * CASE: LCL.Day of Week (SYN) USR is Sunday
     C           YL0006    IFEQ 7                          *IF
      * Date Must Be <= Last Week's Sunday Date.
      * CASE: DTL.From Date             USR LE LCL.Date Sun USR
     C           #DL9DT    IFLE YL0005                     *IF
      * DTL.To Date               USR = DTL.From Date             USR + C
     C           #DL9DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD6         XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL'1111111' XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     #DMADT
     C                     ELSE
     C           XDINDT    SUB  1000000   #DMADT
     C                     END
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD0         ZQ      50
     C           @CN,003   CAT  @CN,004:ZQYL0007    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0007    ZA0005           Generic Message
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  #DL9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0006
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     GOTO DBEXIT                     *QUIT
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
     C                     MOVEL@CN,005   ZA0007           Generic Message
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  #DL9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0008
      * Send message 'Generic Message 80 NBR'
     C                     MOVEL'USR5117' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9931  *
      *
     C                     GOTO DBEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Business Office Must Be IFLIV or OKLIV.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : DTL.HPS Business Office is IFLIV
      *   |- c2    : DTL.HPS Business Office is OKLIV
      *   '-
     C           #DFAU1    IFEQ 'IFLIV'                    *IF
     C           #DFAU1    OREQ 'OKLIV'                    *OR
     C                     ELSE
      * CASE: *OTHERWISE
     C                     Z-ADD1         ZQ      50
     C           @CN,006   CAT  @CN,007:ZQYL0007    P      Generic Message
      * Setup message data for message
     C                     MOVELYL0007    ZA0009           Generic Message
     C                     MOVEL#DFAU1    ZA0010           HPS Business Of
      * Send message 'Generic Message 80 ERR 2'
     C                     MOVEL'USR5085' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9932  *
      *
     C                     GOTO DBEXIT                     *QUIT
     C                     END                             *FI
     C                     END
      * From Date             USR required
     C           #DL9DT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * HPS Business Office required
     C           #DFAU1    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9932  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DHPMCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Update screen time
     C                     TIME           ##TME
      * Refresh screen
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     EXSR ZVCFPM
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#RCDDTL1
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLWR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #DL9DT           From Date
      * Clear external version also
     C                     Z-ADD*ZERO     VDL9DT
     C                     Z-ADD*ZERO     #DMADT           To Date
      * Clear external version also
     C                     Z-ADD*ZERO     VDMADT
     C                     MOVEL*BLANK    #DFAU1           HPS Business Of
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert From Date             USR to display format
      * Convert date
     C           1000000   ADD  #DL9DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDL9DT
      * Convert To Date               USR to display format
      * Convert date
     C           1000000   ADD  #DMADT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDMADT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDCK2     BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
     C                     Z-ADD*ZERO     XDINDT
      * If external date is zero, do not check
     C           XDEXDT    CABEQ*ZERO     XDCK2E
      *................................................................
      * Map external to internal according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDEX02    XDINDD           DD
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDEX02    XDINMM           MM
     C                     Z-ADDXDEX03    XDINDD           DD
     C                     Z-ADDXDEX04    XDINYY           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDEX02    XDINYY           YY
     C                     Z-ADDXDEX03    XDINMM           MM
     C                     Z-ADDXDEX04    XDINDD           DD
     C                     END
     C                     END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C           XDINYY    IFLT XOFFYY
     C                     ADD  100       XDINYY
     C                     END
     C           YPMTFD    CABNE*BLANK    XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C           XDINMM    CABLT1         XDCK2M
     C           XDINMM    CABGT12        XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C           XDINDD    CABLT1         XDCK2M
     C           XDINDD    CABGT@XD,XDINMMXDCK2M
      *................................................................
      * Special case: leap year
     C           XDINMM    IFEQ 2
     C           XDINYY    IFNE *ZERO
     C           XDINYY    ANDNE200
     C           XDINYY    DIV  4         XDWK1   80
     C                     MVR            XDWK1
     C                     ELSE
     C                     Z-ADD1         XDWK1
     C                     END
      * Year is not leap
     C           XDWK1     IFNE *ZERO
     C           XDINDD    CABGT28        XDCK2M
     C                     END
     C                     END
     C                     GOTO XDCK2E
      *................................................................
      * Send error message
     C           XDCK2M    TAG
      * Send message '*Invalid date'
     C                     MOVEL'Y2U0006' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     MOVEL'Y2U0006' W0RTN
      * Disable time portion if timestamp is validated
     C                     Z-ADD*ZERO     XTTIM
      *================================================================
     CSR         XDCK2E    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDUDY     BEGSR
      *================================================================
      * Calculate duration, *DAYS
      *================================================================
     C           XDAY1     IFLT 1
     C           XDAY2     ORLT 1
     C                     Z-ADD0         XDURR
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     GOTO XDUDYE
     C                     END
     C           XDAY1     IFGE XDAY2
      * From date2 to date1
     C                     Z-ADDXDAY2     XABEG   60
     C                     Z-ADDXDAY1     XAEND   60
     C                     ELSE
      * From date1 to date2
     C                     Z-ADDXDAY1     XABEG   60
     C                     Z-ADDXDAY2     XAEND   60
     C                     END
     C           XDWSL     IFEQ 0
      * None days of week selected
     C                     Z-ADD0         XDURR
     C                     GOTO XDUDYC
     C                     END
     C           XAEND     SUB  XABEG     XDURR   80
     C           XDWSL     IFEQ 7
      * All days of week selected
     C                     GOTO XDUDYC
     C                     END
      * Some days of week selected
     C                     DIV  7         XDURR
     C                     MVR            XDLSW   10
     C                     MULT XDWSL     XDURR
     C           XDLSW     IFNE 0
      * Determine day of week of the beginning date
     C           XABEG     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
      * Loop: Increment the date by the last week
     C           XDLSW     DOWGT0
      * Increment the day of week
     C                     ADD  1         YY
     C                     SUB  1         XDLSW
      * Put day of week into the range 1-7
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     END
      * Selected day of the last week has been processed
     C           YDOW,YY   IFEQ XDSEL
      * Increment duration
     C                     ADD  1         XDURR
     C                     END
      * End of loop
     C                     END
     C                     END
     C           XDUDYC    TAG
     C           XDURR     IFEQ 0
      * Return Code: Unable to calculate duration
     C                     MOVEL'Y2U0060' W0RTN   7
     C                     ELSE
     C                     MOVEL*BLANK    W0RTN   7
     C                     END
      *================================================================
     CSR         XDUDYE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         YKDDW1    BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *================================================================
     CSR         YKEXT1    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ##WSR     MULT 256       ZWORK   50
     C                     ADD  ##WSC     ZWORK
     C                     SUB  ZWORK     ZINPOS
     C                     SUB  1         ZINPOS
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           ZHCSRW    SUB  ##WSR     YWPORW  30
     C           ZHCSCL    SUB  ##WSC     YWPOC1  30
     C                     SUB  1         YWPOC1
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*START'  YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM YWPORW    YYRW    50       Row
     C                     PARM YWPOC1    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZRRPWD    BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                     MOVEL'Y'       YSL,1            Set wdw locatio
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
      *
      * Redisplay previous panel
     C                     WRITEASSUME
      *================================================================
     CSR         ZREXIT    ENDSR
      /EJECT
     CSR         ZSSTLC    BEGSR
      *================================================================
      * Set window location
      *================================================================
     C           YSL,1     IFEQ 'Y'                        Set wdw locatio
     C                     MOVEL'*CALC'   YWWDCR           Window referenc
     C                     Z-ADD-3        YWWDRW           Window start ro
     C                     Z-ADD-3        YWWDCL           Window start co
     C                     Z-ADD055       YWWDWD           Window width
     C                     Z-ADD014       YWWDDP           Window depth
     C                     MOVEL'N'       YSL,1            Set wdw locatio
      *
     C                     EXSR ZURTLC                     Retrieve window
     C                     EXSR ZTWDFD                     Move window fie
     C                     END
      *================================================================
     CSR         ZSEXIT    ENDSR
      /EJECT
     CSR         ZTWDFD    BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                     Z-ADDYWWDRW    ##WSR            Window start ro
     C                     Z-ADDYWWDCL    ##WSC            Window start co
     C                     EXSR YKDDW1
      *================================================================
     CSR         ZTEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZVCFPM    BEGSR
      *================================================================
      * Set Confirm Prompt window location
      *================================================================
      *
     C           ##WSR     ADD  014       YWWDRW
     C           ##WSC     ADD  055       YWWDCL
      *
     C                     ADD  1         YWWDCL
     C                     SUB  1         YWWDRW           Window start ro
     C                     SUB  21        YWWDCL           Window start co
     C                     Z-ADD18        YWWDWD           Window width
     C                     Z-ADD2         YWWDDP           Window depth
     C                     MOVEL'*TL  '   YWWDCR           Window referenc
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN           Retrieval Funct
     C                     EXSR ZURTLC                     Retrieve window
     C                     Z-ADDYWWDRW    ##WSRC           *Window start r
     C                     Z-ADDYWWDCL    ##WSCC           *Window start c
      *
      *================================================================
     CSR         ZVEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialise Allow Set Window Location flags
     C                     MOVEA*ALL'Y'   YSL
      * Set display size
     C                     SETOF                         93*
     C           @#SCRW    COMP 27                       93*
      * Initialise window location variables.
     C                     Z-ADD*ZEROS    ##WSR
     C                     Z-ADD*ZEROS    ##WSC
      * Define work field Day of Week (SYN) USR
     C                     Z-ADD*ZERO     WU      10
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local work field From Date D8# USR
     C                     Z-ADD*ZERO     YL0001  80
      * Define local work field From Date TXT USR
     C                     MOVEL*BLANK    YL0002  8
      * Define local work field To Date D8# USR
     C                     Z-ADD*ZERO     YL0003  80
      * Define local work field Thru Date TXT USR
     C                     MOVEL*BLANK    YL0004  8
      * Define local work field Date Sun USR
     C                     Z-ADD*ZERO     YL0005  70
      * Define local work field Day of Week (SYN) USR
     C                     Z-ADD*ZERO     YL0006  10
      * Define local work field Generic Message 80 USR
     C                     MOVEL*BLANK    YL0007 80
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C           *NAMVAR   DEFN Y2CTOFF   XOFF
     C                     IN   XOFF
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
** @XD
312931303130313130313031
** @CN
00001 Cannot be today's date.
00002 Cannot be a future date.
00003 Date must be older than S
00004 unday's current week.
00005 Not a Sunday Date.
00006 Business Office must be
00007 IFLIV or OKLIV.
