// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDVUPFR
// ?Date: 14.08.2025 Time: 12:04:39
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.USR Display field = CND.no
PAR.USR_Display_field = 'N';

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.First Time Flag = CND.Yes
PAR.First_Time_Flag = 'Y';

//?* 03/28/2017 LJB E009707 Recompile only - 2 fields added to work file
//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(X1PG_Company_Number);
PARAMETER(X1PG_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// PAR.First Time Flag = CND.NO
PAR.First_Time_Flag = 'N';

//?USER: Null report processing

// PAR.USR Display field = CND.yes
PAR.USR_Display_field = 'Y';

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

CASE;

IF NEW AR_Customer_Name;
// Print A/R Customer Name header format
PRINT A/R Customer Name header format;

ENDIF;

// SUPPRESSED PRINT A/R Customer Number header format

// SUPPRESSED PRINT Payment/Deposit Date header format

// SUPPRESSED PRINT Invoice Number header format

// SUPPRESSED PRINT Invoice Suffix header format

// SUPPRESSED PRINT A/R Check Number header format

// SUPPRESSED PRINT Adjustment Type Code header format

//?USER: On print of detail format

CASE;

// IF DB1.Adjustment Type Code is Bank Fee
IF DB1.Adjustment_Type_Code = 'FEE';

// PAR.Adjustment Amount = DB1.Transaction Amount
PAR.Adjustment_Amount = DB1.Transaction_Amount;

// PGM.*Print format = CND.Do not print format
PGM.*Print_format = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Debit Amount = PAR.Adjustment Amount
CUR.Debit_Amount = PAR.Adjustment_Amount;

// PAR.Adjustment Amount = CON.*ZERO
PAR.Adjustment_Amount = *ZERO;

ENDIF;

//?USER: Process after print of detail format

CASE;

// IF PGM.*Print format is Print format
IF PGM.*Print_format = 'Y';

NXT.Total_Order_Values = SUM(CUR.Invoice_Amount);

NXT.Total_Transaction_Amount = SUM(CUR.Transaction_Amount);

NXT.Debit_Amount_1 = SUM(CUR.Debit_Amount);

ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Adjustment Type Code totals format

// SUPPRESSED PRINT A/R Check Number totals format

// SUPPRESSED PRINT Invoice Suffix totals format

// SUPPRESSED PRINT Invoice Number totals format

// SUPPRESSED PRINT Payment/Deposit Date totals format

// SUPPRESSED PRINT A/R Customer Number totals format

CASE;

IF NEW AR_Customer_Name;
// Print A/R Customer Name totals format
PRINT A/R Customer Name totals format;

NXT.Total_Order_Values = SUM(CUR.Total_Order_Values);

NXT.Total_Transaction_Amount = SUM(CUR.Total_Transaction_Amount);

NXT.Debit_Amount_1 = SUM(CUR.Debit_Amount_1);

ENDIF;

// SUPPRESSED PRINT Company Number totals format

