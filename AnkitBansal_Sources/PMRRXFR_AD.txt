// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMRRXFR
// ?Date: 14.08.2025 Time: 03:43:51
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(Bld Weekly Quota      RT) TYPE(RTVOBJ) FILE(PMDHREP)           AC1863996;
PARAMETER(PAR.Market_Code);
PARAMETER(PAR.Product_Type_Code);
PARAMETER(PAR.Period_Ending_Date);
PARAMETER(PAR.Accounting_Year);
PARAMETER(PAR.Accounting_Quarter);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(RTV Default Co No App IF) TYPE(EXCINTFUN)                      AC1628378;
 PARAMETER(LCL.Company_Number);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(JOB.*USER);
  PARAMETER(NLL.Allow_Multi_Company);
  PARAMETER(NLL.Default_Printer);
  PARAMETER(NLL.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF LCL.Company Number is Equal to zero
  IF LCL.Company_Number = *ZERO;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV First Default Co  RT) TYPE(RTVOBJ) FILE(CADTREP)           AC1628379;
  PARAMETER(JOB.*USER);
  PARAMETER(PAR.Company_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV First Default Co  RT) TYPE(RTVOBJ) FILE(CADTREP)           AC1628379;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Company_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

  }

  ENDIF;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  ENDIF;

 }

 //?USER: Process Data record

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?SEL: Market Code
 CASE;

 // IF PAR.Market Code is Entered
 IF PAR.Market_Code <> *BLANK;

 CASE;

 // IF DB1.Market Code NE PAR.Market Code
 IF DB1.Market_Code <> PAR.Market_Code;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?SEL: Product Type Code
 CASE;

 // IF PAR.Product Type Code is Entered
 IF PAR.Product_Type_Code <> *BLANK;

 CASE;

 // IF DB1.Product Type Code NE PAR.Product Type Code
 IF DB1.Product_Type_Code <> PAR.Product_Type_Code;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?SEL: Period Ending Date
 CASE;

 // IF PAR.Period Ending Date is entered
 IF PAR.Period_Ending_Date <> *ZERO;

 CASE;

 // IF DB1.Period Ending Date NE PAR.Period Ending Date
 IF DB1.Period_Ending_Date <> PAR.Period_Ending_Date;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?SEL: Accounting Year
 CASE;

 // IF PAR.Accounting Year is Not equal zeros
 IF PAR.Accounting_Year <> *ZERO;

 CASE;

 // IF DB1.Accounting Year NE PAR.Accounting Year
 IF DB1.Accounting_Year <> PAR.Accounting_Year;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?SEL: Accounting Quarter
 CASE;

 // IF PAR.Accounting Quarter is Not equal to zero
 IF PAR.Accounting_Quarter <> *ZERO;

 CASE;

 // IF DB1.Accounting Quarter NE PAR.Accounting Quarter
 IF DB1.Accounting_Quarter <> PAR.Accounting_Quarter;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Process Record
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 EXECUTE FUNCTION(Rtv HPS Qtr B/E Dte   RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1919711;
 PARAMETER(LCL.Company_Number);
 PARAMETER(DB1.Accounting_Year);
 PARAMETER(DB1.Accounting_Quarter);
 PARAMETER(LCL.Period_Beginning_Date);
 PARAMETER(LCL.Period_Ending_Date);
 {
  //?USER: Initialize routine

  // LCL.First Time Flag = CND.Yes
  LCL.First_Time_Flag = 'Y';

  // LCL.Count USR = CON.*ZERO
  LCL.Count_USR = *ZERO;

  // LCL.Day NBR USR = CON.*ZERO
  LCL.Day_NBR_USR = *ZERO;

  // LCL.Accounting Quarter = CON.*ZERO
  LCL.Accounting_Quarter = *ZERO;

  //?USER: Process Data record

  //?FIRST TIME
  CASE;

  // IF LCL.First Time Flag is Yes
  IF LCL.First_Time_Flag = 'Y';

  // LCL.Count USR = CON.1
  LCL.Count_USR = 1;

  // LCL.Day NBR USR = CON.1
  LCL.Day_NBR_USR = 1;

  // LCL.HPS Calendar Week = DB1.HPS Calendar Week
  LCL.HPS_Calendar_Week = DB1.HPS_Calendar_Week;

  // PAR.Period Beginning Date = DB1.Post to G/L Date
  PAR.Period_Beginning_Date = DB1.Post_to_G_L_Date;

  // LCL.First Time Flag = CND.NO
  LCL.First_Time_Flag = 'N';

  ENDIF;

  //?CHG: HPS Calendar Week
  CASE;

  // IF DB1.HPS Calendar Week NE LCL.HPS Calendar Week
  IF DB1.HPS_Calendar_Week <> LCL.HPS_Calendar_Week;

  // LCL.Count USR = LCL.Count USR + CON.1
  LCL.Count_USR = LCL.Count_USR + 1;

  // LCL.Day NBR USR = CON.1
  LCL.Day_NBR_USR = 1;

  // LCL.HPS Calendar Week = DB1.HPS Calendar Week
  LCL.HPS_Calendar_Week = DB1.HPS_Calendar_Week;

  CASE;

  // IF LCL.Count USR is One
  IF LCL.Count_USR = 1;

  // PAR.Period Beginning Date = DB1.Post to G/L Date
  PAR.Period_Beginning_Date = DB1.Post_to_G_L_Date;

  ENDIF;

  //?CHG: HPS Calendar Week
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Day NBR USR = LCL.Day NBR USR + CON.1
  LCL.Day_NBR_USR = LCL.Day_NBR_USR + 1;

  ENDIF;

  //?Last Day of the 13th Week
  CASE;

  // IF LCL.Count USR is Thirteen
  IF LCL.Count_USR = 13;

  // AND LCL.Day NBR USR is Seven
  AND LCL.Day_NBR_USR = 7;

  // LCL.Accounting Quarter = LCL.Accounting Quarter + CON.1
  LCL.Accounting_Quarter = LCL.Accounting_Quarter + 1;

  CASE;

  // IF LCL.Accounting Quarter EQ PAR.Accounting Quarter
  IF LCL.Accounting_Quarter = PAR.Accounting_Quarter;

  // PAR.Period Ending Date = DB1.Post to G/L Date
  PAR.Period_Ending_Date = DB1.Post_to_G_L_Date;

  QUIT;

  ENDIF;

  // LCL.Count USR = CON.*ZERO
  LCL.Count_USR = *ZERO;

  ENDIF;

  //?USER: Exit processing

  // PAR.Period Ending Date = DB1.Post to G/L Date
  PAR.Period_Ending_Date = DB1.Post_to_G_L_Date;

 }

 // Sales Volume Wk Quota USR
 LCL.Sales_Volume_Wk_Quota_USR = DB1.Sales_Volume_Target_Quota / 13 'H';

 // LCL.Sales Volume Quota
 LCL.Sales_Volume_Target_Quota = LCL.Sales_Volume_Wk_Quota_USR * 13 'H';

 // LCL.Weight Adjust = DB1.Sales Volume Quota - LCL.Sales Volume Quota
 LCL.Weight_Adjust = DB1.Sales_Volume_Target_Quota - LCL.Sales_Volume_Target_Quota;

 EXECUTE FUNCTION(Bld Weekly Quota      RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1919722;
 PARAMETER(LCL.Company_Number);
 PARAMETER(DB1.Accounting_Year);
 PARAMETER(LCL.Period_Beginning_Date);
 PARAMETER(DB1.Market_Code);
 PARAMETER(DB1.Product_Type_Code);
 PARAMETER(DB1.Period_Ending_Date);
 PARAMETER(DB1.Accounting_Quarter);
 PARAMETER(LCL.Sales_Volume_Wk_Quota_USR);
 PARAMETER(LCL.Weight_Adjust);
 {
  //?USER: Initialize routine

  // LCL.Weight Adjust = PAR.Weight Adjust
  LCL.Weight_Adjust = PAR.Weight_Adjust;

  // LCL.First Time Flag = CND.Yes
  LCL.First_Time_Flag = 'Y';

  // LCL.Day NBR USR = CON.*ZERO
  LCL.Day_NBR_USR = *ZERO;

  //?USER: Process Data record

  //?QUIT: Reached End Date
  CASE;

  // IF DB1.Post to G/L Date GT PAR.Period Ending Date
  IF DB1.Post_to_G_L_Date > PAR.Period_Ending_Date;

  QUIT;

  ENDIF;

  //?FIRST TIME
  CASE;

  // IF LCL.First Time Flag is Yes
  IF LCL.First_Time_Flag = 'Y';

  // LCL.HPS Calendar Week = DB1.HPS Calendar Week
  LCL.HPS_Calendar_Week = DB1.HPS_Calendar_Week;

  // LCL.First Time Flag = CND.NO
  LCL.First_Time_Flag = 'N';

  ENDIF;

  // LCL.Day NBR USR = LCL.Day NBR USR + CON.1
  LCL.Day_NBR_USR = LCL.Day_NBR_USR + 1;

  //?End of Week
  CASE;

  // IF LCL.Day NBR USR is Seven
  IF LCL.Day_NBR_USR = 7;

  // OR DB1.Post to G/L Date EQ PAR.Period Ending Date
  OR DB1.Post_to_G_L_Date = PAR.Period_Ending_Date;

  CASE;

  // IF LCL.Weight Adjust is GT Zero
  IF LCL.Weight_Adjust > *ZERO;

  // LCL.Sales Volume Quota = PAR.Sales Volume Wk Quota USR + CON.1
  LCL.Sales_Volume_Target_Quota = PAR.Sales_Volume_Wk_Quota_USR + 1;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Sales Volume Quota = PAR.Sales Volume Wk Quota USR
  LCL.Sales_Volume_Target_Quota = PAR.Sales_Volume_Wk_Quota_USR;

  ENDIF;

  // LCL.Weight Adjust = LCL.Weight Adjust - CON.1
  LCL.Weight_Adjust = LCL.Weight_Adjust - 1;

  EXECUTE FUNCTION(Upd Wkly Sales Quota  RT) TYPE(RTVOBJ) FILE(PMDEREP)           AC1864053;
  PARAMETER(PAR.Market_Code);
  PARAMETER(PAR.Product_Type_Code);
  PARAMETER(DB1.Post_to_G_L_Date);
  PARAMETER(PAR.HPS_Calendar_Year);
  PARAMETER(PAR.Accounting_Quarter);
  PARAMETER(DB1.Accounting_Period_Code);
  PARAMETER(DB1.HPS_Calendar_Week);
  PARAMETER(LCL.Sales_Volume_Target_Quota);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Wkly Sales Quota  CR) TYPE(CRTOBJ) FILE(PMDEREP)           AC1864054;
   PARAMETER(PAR.Market_Code);
   PARAMETER(PAR.Product_Type_Code);
   PARAMETER(PAR.Period_Ending_Date);
   PARAMETER(PAR.Accounting_Year);
   PARAMETER(PAR.Accounting_Quarter);
   PARAMETER(PAR.Accounting_Period_Code);
   PARAMETER(PAR.Week_Number);
   PARAMETER(PAR.Sales_Volume_Target_Quota);
   PARAMETER(PAR.Record_Status);
   PARAMETER(PAR.Create_Date);
   PARAMETER(PAR.Create_Time);
   PARAMETER(PAR.Create_User);
   PARAMETER(PAR.Create_Program);
   PARAMETER(PAR.Change_Date);
   PARAMETER(PAR.Change_Time);
   PARAMETER(PAR.Change_User);
   PARAMETER(PAR.Change_Program);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
    PARAMETER(DB1.Record_Status);
    PARAMETER(DB1.Create_Date);
    PARAMETER(DB1.Create_Time);
    PARAMETER(DB1.Create_User);
    PARAMETER(DB1.Create_Program);
    PARAMETER(DB1.Change_Date);
    PARAMETER(DB1.Change_Time);
    PARAMETER(DB1.Change_User);
    PARAMETER(DB1.Change_Program);
    {
     //?Execute internal function

     //?*** Set RECORD STATUS field. ***
     // PAR.Record Status = CND.Active
     PAR.Record_Status = 'A';

     //?*** Set CREATE fields. ***
     // PAR.Create Date = JOB.*Job date
     PAR.Create_Date = JOB.*Job_date;

     // PAR.Create Time = JOB.*Job time
     PAR.Create_Time = JOB.*Job_time;

     // PAR.Create User = JOB.*USER
     PAR.Create_User = JOB.*USER;

     // PAR.Create Program = JOB.*PROGRAM
     PAR.Create_Program = JOB.*PROGRAM;

     //?*** Set CHANGE fields. ***
     // PAR.Change Date = CON.*ZERO
     PAR.Change_Date = *ZERO;

     // PAR.Change Time = CON.*ZERO
     PAR.Change_Time = *ZERO;

     // PAR.Change User = CON.*BLANK
     PAR.Change_User = *BLANK;

     // PAR.Change Program = CON.*BLANK
     PAR.Change_Program = *BLANK;

    }

   }

   //?USER: Process Data record

   EXECUTE FUNCTION(Chg Wkly Sales Quota  CH) TYPE(CHGOBJ) FILE(PMDEREP)           AC1864055;
   PARAMETER(DB1.Market_Code);
   PARAMETER(DB1.Product_Type_Code);
   PARAMETER(DB1.Period_Ending_Date);
   PARAMETER(PAR.Accounting_Year);
   PARAMETER(PAR.Accounting_Quarter);
   PARAMETER(PAR.Accounting_Period_Code);
   PARAMETER(PAR.Week_Number);
   PARAMETER(PAR.Sales_Volume_Target_Quota);
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
    PARAMETER(DB1.Change_Date);
    PARAMETER(DB1.Change_Time);
    PARAMETER(DB1.Change_User);
    PARAMETER(DB1.Change_Program);
    {
     //?Execute internal function

     // PAR.Change Date = JOB.*Job date
     PAR.Change_Date = JOB.*Job_date;

     // PAR.Change Time = JOB.*Job time
     PAR.Change_Time = JOB.*Job_time;

     // PAR.Change User = JOB.*USER
     PAR.Change_User = JOB.*USER;

     // PAR.Change Program = JOB.*PROGRAM
     PAR.Change_Program = JOB.*PROGRAM;

    }

   }

  }

  // LCL.Day NBR USR = CON.*ZERO
  LCL.Day_NBR_USR = *ZERO;

  ENDIF;

 }

 ENDIF;

}


