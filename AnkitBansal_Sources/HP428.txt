      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP428
      * TITLE:       SPECIFY G/L EXPENSE DATA TO COPY TO HPS EDIT FILE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     12/30/97
      *
      * FUNCTION: THIS FUNCTION IS THE INITIAL FUNCTION IN THE
      *           INTERFACE OF EXPENSE DATA FROM THE G/L SYSTEM TO THE
      *           HPS EXPENSE TICKET FILE.
      *
      *           THIS PROGRAM IS CALLED FROM A MENU.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/02/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 03/02/16  Barb Gutierrez  (E5290)
      *           We now have multiple companies using this function.  Added logic
      *           to make sure a company isn't already in progress before the
      *           next company is run.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD428    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
      *
     FHSP061    IF   E           K DISK
      *    CONTROL FILE: EXPENSE INTERFACE FROM G/L TO HPS
      *
      *
     FHSP062    IF   E           K DISK
      *    COMPANY
      *
     FHSl061A   IF   E           K DISK    rename(eirec:eireca) prefix(p1)
      *    Control file:  Expense Interface from G/L to HPS K(EIACYR/EIACPE)
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      * COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  DEFINITION FOR EXTERNAL DATA AREA 'DAAPER' WHICH HOLDS
      *  THE "CURRENT" ACCOUNTING PERIOD
      *---------------------------------------------------------------
     D                 DS
     D  DAAPER                 1     24
     D  DACCYY                 1      4  0
     D  DAPER                  5      6  0
     D  DABPDT                 7     14  0
     D  DAEPDT                15     22  0
     D  DAPGFL                23     23
     D  DAPPFL                24     24
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  LOCAL DATA AREA
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDBPDT                 1     08  0
     D  LDEPDT                 9     16  0
     D  LDPER                 17     18  0
     D  LDCCYY                19     22  0
     D  LDCOCD                23     25
     D  LDBMDY                60     66  0
     D  LDEMDY                70     76  0
     D  LDERFL                80     80
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP428K1
     C                   WRITE     HP428EC
     C                   EXFMT     HP428R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'UTWRKSPL'
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN08         WHENEQ    *ON                                          F8-SUBMIT
     C                   MOVEL     EDIT1         ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * BRING IN THE CURRENT ACCOUNTING PERIOD EACH TIME SO THAT
      * YOU CAN CHECK THE FLAG THAT INDICATES WHETHER THE PERIOD
      * CLOSE FUNCTION IS IN PROGRESS.
      *
     C                   EXSR      $APER
      *
      * THIS FUNCTION CAN NEVER BE SUBMITTED IF THE 'PERIOD CLOSE'
      * FUNCTION IS IN PROGRESS.
      *
     C     DAPPFL        IFNE      *BLANK
     C                   SETON                                        32
     C                   SETOFF                                       44
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09033'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      *
      * VALIDATE COMPANY
     C                   EXSR      $COCD
      *
      *
      * IF COMPANY IS VALID, THEN VALIDATE THE INTERFACE STATUS
      *
     C     *IN33         IFEQ      *OFF
     C                   EXSR      $ISCD
     C                   ENDIF
      *
      * This function cannot be run in the night job queue. Issue message if
      * user has elected to run this function at night.
      *
     C                   if        xxnite = yes
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09133'     MGID(E)
     C                   ENDIF
     C                   endif
      *
      * IF THERE ARE NO ERRORS OR THE ONLY ERROR IS THE WARNING MESAGE,
      * EXECUTE THE SUBROUTINE TO PROCESS THE USER'S REQUEST.
      *
     C     ERROR         IFEQ      0
     C     ERROR         OREQ      1
     C     MGID(1)       ANDEQ     'HS09035'
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $COCD - VALIDATE COMPANY
      *---------------------------------------------------------------
      *
      * COMPANY VALIDATIONS:
      *   1) REQUIRED
      *   2) MUST EXIST IN THE HPS COMPANY MASTER FILE
      *
      *
     C     $COCD         BEGSR
      *
     C                   MOVE      *BLANK        DFCONM
      *
     C                   SELECT
     C     DFCOCD        WHENEQ    *BLANK
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   OTHER
      *
     C     DFCOCD        CHAIN     HSP062                             92
     C     *IN92         IFEQ      *OFF                                         IF GOOD COMPANY
     C                   MOVEL(P)  COCONM        DFCONM
     C                   ELSE
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00169'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFCOCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF GOOD COMPANY
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ISCD - VALIDATE INTERFACE STATUS FOR THIS COMPANY/PERIOD
      *---------------------------------------------------------------
      *
     C     $ISCD         BEGSR
      *
      * check to see that no other company is in progress of posting.
      * If there is, issue message.
      *
     C     key02         setll     hsl061a
     C                   dou       *in93 = *on
     C     key02         reade     hsl061a                                93
     C                   if        *in93 = *off                                 If not EOF
     C                   if        p1eicocd <> dfcocd and
     C                             p1eiiscd <> 'C'
     C                   seton                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09245'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     p1eicocd      MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   endif
      *
     C                   endif
     C                   endif
     C                   enddo
      *
     C     KEY01         CHAIN     HSP061                             92
     C                   SELECT
      *
      * NO INTERFACE HAS BEEN INITIATED FOR THIS YEAR/PERIOD.
      * SO, THERE IS NO ERROR.
      *
     C     *IN92         WHENEQ    *ON
      *
      *
      * THE INITIAL COPY OF DATA HAS ALREADY BEEN SUBMITTED
      * THE USER MUST WAIT UNTIL THE COPY COMPLETES.
      *
     C     EIISCD        WHENEQ    'S'
     C                   SETOFF                                       44
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09034'     MGID(E)
     C                   ENDIF
      *
      * INTERFACE DATA HAS ALREADY BEEN COPIED OVER TO THE
      * EDIT FILE. ISSUE THE WARNING MESSAGE THAT THE USER
      * WILL OVERLAY THE DATA.
      *
     C     EIISCD        WHENEQ    'E'
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09035'     MGID(E)
     C                   ENDIF
      *
      * A POST OF INTERFACE DATA HAS BEEN SUBMITTED
      *
     C     EIISCD        WHENEQ    'P'
     C                   SETOFF                                       44
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09036'     MGID(E)
     C                   ENDIF
      *
      * THE ENTIRE INTERFACE PROCESS HAS ALREADY BEEN COMPLETED
      * FOR THIS ACCOUNTING YEAR/PERIOD. THEY CANNOT INTERFACE
      * THIS YEAR/PERIOD A SECOND TIME.
      *
     C     EIISCD        WHENEQ    'C'
     C                   SETOFF                                       44
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09037'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVE      *BLANK        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $APER - BRING IN THE ACCOUNTING PERIOD DATA AREA
      *---------------------------------------------------------------
      *
     C     $APER         BEGSR
      *
      * BRING IN THE DATA AREA THAT CONTAINS THE CURRENT ACCOUNTING
      * PERIOD.    MOVE THE DATA AREA VALUES TO THE SCREEN AFTER
      * FLIPPING THE DATES.
      *
     C     *DTAARA       DEFINE                  DAAPER
     C                   IN        daaper
     C                   Z-ADD     DAPER         DFPER
      *
      * BEGINNING PERIOD DATE
      *
     C                   Z-ADD     DABPDT        PFRM8
     C                   MOVEL     'CYMD'        PFRFMT
     C                   MOVEL     'MDY '        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
     C     PRTRN         IFEQ      *BLANK                                       IF OK
     C                   Z-ADD     PTO8          DFBMDY
     C                   ENDIF                                                  IF OK
      *
      * ENDING PERIOD DATE
     C                   Z-ADD     DAEPDT        PFRM8
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
     C     PRTRN         IFEQ      *BLANK                                       IF OK
     C                   Z-ADD     PTO8          DFEMDY
     C                   ENDIF                                                  IF OK
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      *
      * UPDATE THE INTERFACE CONTROL FILE WITH A 'SUBMITTED'
      * STATUS
      *
     C                   CALL      'HP229'
     C                   PARM                    DFCOCD
     C                   PARM      DACCYY        XXACYR
     C                   PARM                    DFPER
     C                   PARM      'S'           XXISCD
      *
      *
      * PLACE OPTIONS INTO LOCAL DATA AREA AND OUTPUT AREA
      *
     C                   MOVEL     DFCOCD        LDCOCD
     C                   Z-ADD     DABPDT        LDBPDT
     C                   Z-ADD     DAEPDT        LDEPDT
     C                   Z-ADD     DAPER         LDPER
     C                   Z-ADD     DACCYY        LDCCYY
     C                   Z-ADD     DFBMDY        LDBMDY
     C                   Z-ADD     DFEMDY        LDEMDY
     C                   MOVEL     NO            LDERFL
      *
     C                   OUT       LDA
      *
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING THE CORRECT REPORT.
      *
     C                   MOVEA     XXJOBQ        CMD(52)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * CLEAR MESSAGES (REQUIRED IF THE WARNING MESSAGE WAS ISSUED);
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   EXSR      $CLMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * COMPANY
      *
     C     FLD           WHENEQ    'DFCOCD'
     C                   MOVE      *BLANK        XXCOCD
     C                   MOVE      *BLANK        XXCONM
     C                   CALL      'HP5006'
     C                   PARM                    XXCOCD
     C                   PARM                    XXCONM
     C                   SETON                                        53
     C     XXCOCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXCOCD        DFCOCD
     C                   MOVEL     XXCONM        DFCONM
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *
     C     KEY01         KLIST
     C                   KFLD                    DFCOCD
     C                   KFLD                    DACCYY
     C                   KFLD                    DAPER
      *
     C     key02         KLIST
     C                   KFLD                    daccyy
     C                   KFLD                    daper
      *
      * PARM LISTS
      *     NONE
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize numeric LDA fields
      *
     C                   z-add     0             ldbpdt
     C                   z-add     0             ldepdt
     C                   z-add     0             ldper
     C                   z-add     0             ldccyy
     C                   z-add     0             ldbmdy
     C                   z-add     0             ldemdy
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * ALPHA PARM FIELDS
      *
     C     *LIKE         DEFINE    DFCOCD        XXCOCD
     C     *LIKE         DEFINE    DFCONM        XXCONM
     C     *LIKE         DEFINE    EIISCD        XXISCD
     C     *LIKE         DEFINE    EIACYR        XXACYR
      *
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      *
      * BRING IN THE CURRENT ACCOUNTING PERIOD
      *
     C                   EXSR      $APER
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  'HP428'       WKFNCD           10
     C                   EXSR      $SEC
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP428CL)) JOB(GLEXPINTER) JOBQ(__________)
