      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP223 - RETRIEVE NEXT ACCOUNTING PERIOD FROM
      *                      CALENDAR FILE IN ORDER MANAGEMENT SYSTEM
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     12/30/96
      *
      * FUNCTION: THIS PROGRAM ACCESSES THE CALENDAR FILE IN THE
      *           ORDER MANAGEMENT SYSTEM TO DETERMINE AND RETRIEVE
      *           THE 'NEXT' ACCOUNTING PERIOD.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 01/15/01  LeAnne Fedor
      *           Recompile only as instructed by Rose Centonze. Rose has
      *           added fields to the OMS Calendar file.
      *
      * 01/05/07  LeAnne Ramsey
      *           The logical of the Calendar file was keyed with "Day of Week"
      *           which caused us to pick up Saturday 12/30/06 (day=7) instead of
      *           Sunday 12/31/06 (day=1) for the Period End Date for Period 12 of
      *           2006. So, we changed the program to use a different LF.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FCAAFREL5  IF   E           K DISK
      *    CALENDAR FILE
      *     KEY: AFAIC3  COMPANY
      *          AFESNB  ACCOUNTING YEAR
      *          AFETNB  ACCOUNTING PERIOD
      *          AFBZNB  OM WEEK
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *
     D                 DS
     D  DUMMYD                 1      1
      *  THE PRECEDING DUMMY DATA STRUCTURE IS ONLY TO KEEP THE I-SPEC
      *  INFO FROM RUNNING OVER INTO THE 'CALC SPECS' ON THE COMPILE
      *  LISTING.  IT SERVES NO OTHER PURPOSE AND CAN BE DELETED
      *  AT ANY TIME!!!
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * RETRIEVE THE FIRST RECORD IN THE CALENDAR FILE THAT
      * IS GREATER THAN THE CURRENT PERIOD AND IS FOR THE
      * REQUESTED COMPANY.
      *
     C     KEY1          SETGT     CAAFREL5
     C     XXCOCD        READE     CAAFREL5                               92
     C     *IN92         IFEQ      *OFF                                         IF GOOD BEGIN
     C     XXCOCD        ANDEQ     AFAIC3
      *
      * THIS RECORD HOLDS:
      *   A) THE NEXT ACCOUNTING YEAR
      *   B) THE NEXT ACCOUNTING PERIOD
      *   C) THE BEGINNING DATE OF THE NEXT PERIOD IN JULIAN FORMAT
      *
     C                   Z-ADD     AFESNB        XXNYR
     C                   Z-ADD     AFETNB        XXNPER
      *
      * FLIP JULIAN DATE TO CCYYMMDD FORMAT USING STANDARD DATE
      * ROUTINE.
      *
     C                   Z-ADD     AFCQNB        PFRM8
     C                   EXSR      $DATE
      *
      * IF A VALID BEGINNING DATE WAS FOUND, MOVE IT TO THE
      * OUTPUT PARM AND PROCEED TO FIND THE ENDING PERIOD
      * DATE.
      *
     C     PRTRN         IFEQ      *BLANK                                       IF VALID BEGIN
     C                   Z-ADD     PTO8          XXBDT
      *
      * POSITION IN THE CALENDAR FILE WITH THE 'NEXT'
      * PERIOD VALUES THAT YOU JUST RETRIEVED AND READ
      * THE PRIOR RECORD TO FIND THE ENDING DATE.
      *
     C     KEY2          SETGT     CAAFREL5
     C     XXCOCD        READPE    CAAFREL5                               92
     C     *IN92         IFEQ      *OFF                                         IF GOOD END
     C     XXCOCD        ANDEQ     AFAIC3
      *
      * FLIP JULIAN DATE TO CCYYMMDD FORMAT
      *
     C                   Z-ADD     AFCQNB        PFRM8
     C                   EXSR      $DATE
     C     PRTRN         IFEQ      *BLANK                                       IF VALID END
     C                   Z-ADD     PTO8          XXEDT
     C                   ENDIF                                                  IF VALID END
      *
     C                   ENDIF                                                  IF GOOD END
     C                   ENDIF                                                  IF VALID BEGIN
     C                   ENDIF                                                  IF GOOD BEGIN
      *
      *---------------------------------------------------------------
      * EOF PROCESSING
      *---------------------------------------------------------------
      *
     C                   SETON                                        LR
      /EJECT
      *---------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'JUL '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY LISTS
      *
     C     KEY1          KLIST
     C                   KFLD                    XXCOCD
     C                   KFLD                    XXCYR
     C                   KFLD                    XXCPER
      *
     C     KEY2          KLIST
     C                   KFLD                    XXCOCD
     C                   KFLD                    XXNYR
     C                   KFLD                    XXNPER
      *
      *
      *
     C     *ENTRY        PLIST
      *
      * INCOMING PARMS
      *  1) COMPANY
      *  2) CURRENT ACCOUNTING PERIOD YEAR (CCYY)
      *  3) CURRENT ACCOUNTING PERIOD
      *
     C                   PARM                    XXCOCD            3 0
     C                   PARM                    XXCYR             4 0
     C                   PARM                    XXCPER            2 0
      * OUTGOING PARMS
      *  4) NEXT ACCOUNTING PERIOD YEAR (CCYY)
      *  5) NEXT ACCOUNTING PERIOD
      *  6) BEGINNING DATE OF NEXT ACCOUNTING PERIOD
      *  7) ENDING DATE OF NEXT ACCOUNTING PERIOD
      *
     C                   PARM                    XXNYR             4 0
     C                   PARM                    XXNPER            2 0
     C                   PARM                    XXBDT             8 0
     C                   PARM                    XXEDT             8 0
      *
     C                   ENDSR
      /EJECT
