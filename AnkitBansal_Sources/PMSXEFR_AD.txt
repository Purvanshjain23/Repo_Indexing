// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMSXEFR
// ?Date: 14.08.2025 Time: 03:44:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile record (existing record)

EXECUTE FUNCTION(RTV Wk Start/End      RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1598657;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Accounting_Year_Code);
PARAMETER(RCD.Week_Number);
PARAMETER(RCD.Date_To_USR);
PARAMETER(NLL.Date_Tue_USR);
PARAMETER(NLL.Date_Wed_USR);
PARAMETER(NLL.Date_Thu_USR);
PARAMETER(NLL.Date_Fri_USR);
PARAMETER(RCD.Date_To_USR);
PARAMETER(RCD.Date_From_USR);
PARAMETER('Y');
{
 //?USER: Initialize routine

 CASE;

 // IF PAR.First Time Flag is Yes
 IF PAR.First_Time_Flag = 'Y';

 MOVE *ALL (To: PAR From: CON);

 ENDIF;

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Date Sun USR = DB1.Post to G/L Date
 PAR.Date_Sun_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Monday
 IF DB1.Day_of_Week = '2';

 // PAR.Date Mon USR = DB1.Post to G/L Date
 PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Tuesday
 IF DB1.Day_of_Week = '3';

 // PAR.Date Tue USR = DB1.Post to G/L Date
 PAR.Date_Tue_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Wednesday
 IF DB1.Day_of_Week = '4';

 // PAR.Date Wed USR = DB1.Post to G/L Date
 PAR.Date_Wed_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Thursday
 IF DB1.Day_of_Week = '5';

 // PAR.Date Thu USR = DB1.Post to G/L Date
 PAR.Date_Thu_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Friday
 IF DB1.Day_of_Week = '6';

 // PAR.Date Fri USR = DB1.Post to G/L Date
 PAR.Date_Fri_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Date Sat USR = DB1.Post to G/L Date
 PAR.Date_Sat_USR = DB1.Post_to_G_L_Date;

 ENDIF;

}


EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(RCD.Company_Name_DRV);
PARAMETER(RCD.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(Clc Avg Cold Wgt      IF) TYPE(EXCINTFUN)                      AC1871875;
PARAMETER(RCD.PHW_Avg_Live_Weight);
PARAMETER(RCD.PHW_Carcass_Yield_Percent);
PARAMETER(RCD.PHW_Cooler_Shrink_Percent);
PARAMETER(RCD.Average_Cold_Weight);
{
 //?Execute internal function

 CASE;

 // IF PAR.PHW Avg Live Weight is GT Zero
 IF PAR.PHW_Avg_Live_Weight > *ZERO;

 // AND PAR.PHW Carcass Yield % is entered
 AND PAR.PHW_Carcass_Yield_Percent <> *ZERO;

 // AND PAR.PHW Cooler Shrink % is entered
 AND PAR.PHW_Cooler_Shrink_Percent <> *ZERO;

 // PAR.Average Cold Weight
 PAR.Average_Cold_Weight = ( PAR.PHW_Avg_Live_Weight * ( PAR.PHW_Carcass_Yield_Percent
 / 100 'H' ) 'H' ) * ( 1 - ( PAR.PHW_Cooler_Shrink_Percent / 100 'H' ) ) 'H';

 ENDIF;

}


//?USER: Validate subfile record fields

EXECUTE FUNCTION(Clc Avg Cold Wgt      IF) TYPE(EXCINTFUN)                      AC1871875;
PARAMETER(RCD.PHW_Avg_Live_Weight);
PARAMETER(RCD.PHW_Carcass_Yield_Percent);
PARAMETER(RCD.PHW_Cooler_Shrink_Percent);
PARAMETER(RCD.Average_Cold_Weight);
{
 //?Execute internal function

 CASE;

 // IF PAR.PHW Avg Live Weight is GT Zero
 IF PAR.PHW_Avg_Live_Weight > *ZERO;

 // AND PAR.PHW Carcass Yield % is entered
 AND PAR.PHW_Carcass_Yield_Percent <> *ZERO;

 // AND PAR.PHW Cooler Shrink % is entered
 AND PAR.PHW_Cooler_Shrink_Percent <> *ZERO;

 // PAR.Average Cold Weight
 PAR.Average_Cold_Weight = ( PAR.PHW_Avg_Live_Weight * ( PAR.PHW_Carcass_Yield_Percent
 / 100 'H' ) 'H' ) * ( 1 - ( PAR.PHW_Cooler_Shrink_Percent / 100 'H' ) ) 'H';

 ENDIF;

}


//?7=Upd Kill Plan Cold Weight
CASE;

// IF RCD.*SFLSEL is Option 7
IF RCD.*SFLSEL = '7'/'7';

// Call program Upd Proj ColdWgt 2HPE XF.
CALL PROGRAM(Upd Proj ColdWgt 2HPE XF) ('PLLTXFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Date_From_USR);
PARAMETER(RCD.Date_To_USR);
PARAMETER(RCD.Average_Cold_Weight);

ENDIF;

//?CALC: Subfile record function fields

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(RCD.Company_Name_DRV);
PARAMETER(RCD.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(RTV Wk Start/End      RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1598657;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Accounting_Year_Code);
PARAMETER(RCD.Week_Number);
PARAMETER(RCD.Date_To_USR);
PARAMETER(NLL.Date_Tue_USR);
PARAMETER(NLL.Date_Wed_USR);
PARAMETER(NLL.Date_Thu_USR);
PARAMETER(NLL.Date_Fri_USR);
PARAMETER(RCD.Date_To_USR);
PARAMETER(RCD.Date_From_USR);
PARAMETER('Y');
{
 //?USER: Initialize routine

 CASE;

 // IF PAR.First Time Flag is Yes
 IF PAR.First_Time_Flag = 'Y';

 MOVE *ALL (To: PAR From: CON);

 ENDIF;

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Date Sun USR = DB1.Post to G/L Date
 PAR.Date_Sun_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Monday
 IF DB1.Day_of_Week = '2';

 // PAR.Date Mon USR = DB1.Post to G/L Date
 PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Tuesday
 IF DB1.Day_of_Week = '3';

 // PAR.Date Tue USR = DB1.Post to G/L Date
 PAR.Date_Tue_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Wednesday
 IF DB1.Day_of_Week = '4';

 // PAR.Date Wed USR = DB1.Post to G/L Date
 PAR.Date_Wed_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Thursday
 IF DB1.Day_of_Week = '5';

 // PAR.Date Thu USR = DB1.Post to G/L Date
 PAR.Date_Thu_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Friday
 IF DB1.Day_of_Week = '6';

 // PAR.Date Fri USR = DB1.Post to G/L Date
 PAR.Date_Fri_USR = DB1.Post_to_G_L_Date;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Date Sat USR = DB1.Post to G/L Date
 PAR.Date_Sat_USR = DB1.Post_to_G_L_Date;

 ENDIF;

}


//?USER: Create DBF record

EXECUTE FUNCTION(Crt Proj Hog Wgt      CR) TYPE(CRTOBJ) FILE(PMDMCPP)           AC1871813;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Accounting_Year_Code);
PARAMETER(RCD.Week_Number);
PARAMETER(RCD.PHW_Avg_Live_Weight);
PARAMETER(RCD.PHW_Carcass_Yield_Percent);
PARAMETER(RCD.PHW_Cooler_Shrink_Percent);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
PARAMETER(RCD.Date_From_USR);
PARAMETER(RCD.Date_To_USR);
PARAMETER(RCD.Average_Cold_Weight);
{
 //?USER: Processing after Data update

 // Call program Upd Proj ColdWgt 2HPE XF.
 CALL PROGRAM(Upd Proj ColdWgt 2HPE XF) ('PLLTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Date_From_USR);
 PARAMETER(PAR.Date_To_USR);
 PARAMETER(PAR.Average_Cold_Weight);

}


//?USER: Delete DBF record

EXECUTE FUNCTION(Del Proj Hog Wgt      IF) TYPE(EXCINTFUN) FILE(PMDMCPP)        AC1871907;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Accounting_Year_Code);
PARAMETER(RCD.Week_Number);
PARAMETER(RCD.Date_From_USR);
PARAMETER(RCD.Date_To_USR);
{
 //?Execute internal function

 // Call program Upd Proj ColdWgt 2HPE XF.
 CALL PROGRAM(Upd Proj ColdWgt 2HPE XF) ('PLLTXFR');
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Date_From_USR);
 PARAMETER(PAR.Date_To_USR);
 PARAMETER(*ZERO);

 EXECUTE FUNCTION(Del Proj Hog Wgt      DL) TYPE(DLTOBJ) FILE(PMDMCPP)           AC1871815;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Week_Number);
}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg Proj Hog Wgt      CH) TYPE(CHGOBJ) FILE(PMDMCPP)           AC1871814;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Accounting_Year_Code);
PARAMETER(RCD.Week_Number);
PARAMETER(RCD.PHW_Avg_Live_Weight);
PARAMETER(RCD.PHW_Carcass_Yield_Percent);
PARAMETER(RCD.PHW_Cooler_Shrink_Percent);
PARAMETER(RCD.Record_Status);
PARAMETER(RCD.Create_Date);
PARAMETER(RCD.Create_Time);
PARAMETER(RCD.Create_User);
PARAMETER(RCD.Create_Program);
PARAMETER(RCD.Change_Date);
PARAMETER(RCD.Change_Time);
PARAMETER(RCD.Change_User);
PARAMETER(RCD.Change_Program);
PARAMETER(RCD.Date_From_USR);
PARAMETER(RCD.Date_To_USR);
PARAMETER(RCD.Average_Cold_Weight);
{
 //?USER: Processing after Data update

 // Call program Upd Proj ColdWgt 2HPE XF.
 CALL PROGRAM(Upd Proj ColdWgt 2HPE XF) ('PLLTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(PAR.Date_From_USR);
 PARAMETER(PAR.Date_To_USR);
 PARAMETER(PAR.Average_Cold_Weight);

}


