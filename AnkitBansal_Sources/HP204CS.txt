      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP204CS - Build JDE Upload file: HPS Cull Sales Dollars
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     10/16/01
      *
      * FUNCTION: This program builds an upload file of current period
      *           data that will be interfaced to JDE.
      *
      *           This program is called from HP204CLCS which is called
      *           from the upload driver CL HP404CL..which is submitted from
      *           HP404.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/06/05  LeAnne Fedor
      *           Recompile only. Received Date was added as a key field on
      *           HSL084C.
      *
      * 01/17/13  LeAnne Ramsey (E2405)
      *           Recompile only. Added NEWBAT, NEWDOC, OFFSET as key fields
      *           on HSL204B.  This is in prep for MTECH.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 02/26/16  Barb Gutierrez(E5290)
      *           Added logic to handle new company Iowa Farms.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl018i   if   e           k disk
      *    Farm site
      *
      *
     Fhsl084c   if   e           k disk
      *    Sales movement header
      *    (records selected in open query)
      *
      *
     Fhsl064c   if   e           k disk
      *    Check detail
      *
      *
     Fhsl065c   if   e           k disk
      *    Hog check adjustments
      *
      *
     Fhsp204    uf a e           k disk
      *    HPS to JDE upload file
      *
      *
     Fhsl204b   uf a e           k disk    rename(hjrec:hjrecb) prefix(p1)
      *    HPS to JDE upload file
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      *---------------------------------------------------------------
      * STANDALONE FIELDS
      *---------------------------------------------------------------
      *
      * Control fields
      *
     D first           s              1
     D svexa           s                   like(hjexa)
     D svcocd          s                   like(hjcocd)
      *
      *
      * Workfields for accumulating
      *
     D wkcuam          s                   like(hjhpsval)
     D wkalphfscd      s              5
      *
     D wkhpsval        s                   like(hjhpsval)
     D wkjdeval        s                   like(hjjdeval)
      *
      *  workfield
      *
     D wkmcu           s                   like(hjmcu)
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldacyr                 1      4  0
     D  ldacpe                 5      6  0
     D  ldbpdt                 7     14  0
     D  ldepdt                15     22  0
     D  ldhucd                23     24
      *
     D  ldhuds               100    129
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Process each farm accumulating cull sale dollars for the farm and
      * writing upload records for each farm that has cull sale dollars.
      *
     C     *loval        setll     hsl018i
      *
     C                   dou       *in90 = *on                                  Do farms
     C                   read      hsl018i                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   exsr      $sales
      *
     C                   if        wkcuam <> 0                                  If cull $
     C                   exsr      $write204
     C                   endif                                                  If cull $
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do farms
      * LR processing
      *
      * Set 'new batch number' and 'new document number' flags for last record
      *
     C                   exsr      $flags
      *
      * Write offsetting entries
      *
     C                   exsr      $offset
      *
     C                   seton                                        lr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Retrieve cull sales dollars for the farm
      *--------------------------------------------------------------------------------------
      *
     C     $sales        begsr
      *
     C                   z-add     0             wkcuam
      *
     C     fsfscd        setll     hsl084c
      *
     C                   dou       *in91 = *on                                  Do sales
     C     fsfscd        reade     hsl084c                                91
     C                   if        *in91 = *off                                 If EOF
      *
      * Accumulate Gross Amounts for this movement from the Check Detail file.
      *
     C     shmvsn        setll     hsl064c
     C                   dou       *in93 = *on                                  Do checks
     C     shmvsn        reade     hsl064c                                93
     C                   if        *in93 = *off                                 If more
      *
     C                   add       cdgram        wkcuam
      *
      * Accumulate Check Adjustment amounts for this Check Detail record.
      *
     C     key01         setll     hsl065c
      *
     C                   dou       *in92 = *on                                  Do adjusts
     C     key01         reade     hsl065c                                92
     C                   if        *in92 = *off
     C                   add       cjcjam        wkcuam
     C                   endif
     C                   enddo                                                  Do adjusts
     C*
     C                   endif                                                  If more
     C                   enddo                                                  Do checks
      *
     C                   endif                                                  If EOF
     C                   enddo                                                  Do sales
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Write record to interface file
      *--------------------------------------------------------------------------------------
      *
     C     $write204     begsr
      *
      * Move farm site number to an alpha field and strip the leading zeros.
      *
     C                   move      fsfscd        wkalphfscd
     C                   if        %subst(wkalphfscd:1:1) = '0'                 If position 1
     C                   eval      %subst(wkalphfscd:1:1) = *blank
     C                   if        %subst(wkalphfscd:2:1) = '0'                 If position 2
     C                   eval      %subst(wkalphfscd:2:1) = *blank
     C                   if        %subst(wkalphfscd:3:1) = '0'                 If position 3
     C                   eval      %subst(wkalphfscd:3:1) = *blank
     C                   if        %subst(wkalphfscd:4:1) = '0'                 If position 4
     C                   eval      %subst(wkalphfscd:4:1) = *blank
     C                   endif                                                  If position 4
     C                   endif                                                  If position 3
     C                   endif                                                  If position 2
     C                   endif                                                  If position 1
      *
     C                   eval      hjdesc = 'Cull Sale - Farm ' +
     C                                      %trim(wkalphfscd)
      *
      * Set up Explanation field based on the production phase of the farm.
      *
     C                   select
     C                   when      fsppcd = 'BGF  '
     C                   eval      hjexa = %trim(ldhuds) + ' - BGF'
      *
     C                   when      fsppcd = 'GF   ' or fsppcd = 'NUR  '
     C                   eval      hjexa = %trim(ldhuds) + ' - No BGF'
     C                   endsl
      *
      * These records should be written as 'credit' records; so, flip the sign
      * on the amount.
      *
     C                   z-add     wkcuam        hjhpsval
     C                   mult      -1            hjhpsval
     C     100           mult      wkcuam        hjjdeval
     C                   mult      -1            hjjdeval
      *
     C                   eval      hjobj = '7970'
     C                   move      *blank        hjsub
     C                   move      fscjd         hjmcu
     C                   move      'AA'          hjtype
     C                   move      no            hjoffset
     C                   z-add     0             hjbatval
     C                   z-add     ldacyr        hjacyr
     C                   z-add     ldacpe        hjacpe
     C                   move      fscocd        hjcocd
      *
     C                   write     hjrec
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process interface records and populate 'new batch number' and 'new doc number' flags
      *--------------------------------------------------------------------------------------
      *
      * The interface file is used by several HPS programs. But, we have written only 1 JDE
      * program to read the file and write its records into JDE. And, each 'upload' seems to
      * have different requirements on the number of 'batches' and 'documents'. So, we
      * customize the 'flag' logic here so that the JDE program can be 'generic'.
      *
      * For the HPS upload of 'Cull Sales' to JDE, we will ultimately:
      *    1) create a new JDE batch for each unique 'explanation' per company
      *    2) retrieve a new JDE 'document' number for each unique 'explanation'
      *
      *
     C     $flags        begsr
      *
     C                   move      *blank        svexa
     C                   move      *blanks       svcocd
     C     *loval        setll     hsl204b
      *
     C                   dou       *in91 = *on                                  Do flag loop
     C                   read      hsl204b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      svexa <> p1hjexa or
     C                             svcocd <> p1hjcocd
     C                   move      p1hjexa       svexa
     C                   move      p1hjcocd      svcocd
     C                   move      yes           p1hjnewbat
     C                   move      yes           p1hjnewdoc
     C                   other
     C                   move      no            p1hjnewbat
     C                   move      no            p1hjnewdoc
     C                   endsl
      *
     C                   update    hjrecb
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do flag loop
      *
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Process interface records and write offsetting records
      *--------------------------------------------------------------------------------------
      *
     C     $offset       begsr
      *
     C                   move      yes           first
     C     *loval        setll     hsl204b
      *
     C                   dou       *in91 = *on                                  Do offsets
     C                   read      hsl204b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   if        first = yes
     C                   move      no            first
     C                   move      p1hjexa       svexa
     C                   move      p1hjcocd      svcocd
     C                   endif
      *
      * Control break on explanation
      *   a) write offsetting record to interface file
      *   b) clear accumulator and save explanation
      *
     C                   if        svexa <> p1hjexa or
     C                             svcocd <> p1hjcocd
     C                   exsr      $writeoff
     C                   endif
      *
      * Detail processing
     C                   add       p1hjhpsval    wkhpsval
     C                   add       p1hjjdeval    wkjdeval
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do offsets
      *
      *  Write offsetting record for last 'Explanation'
      *
     C                   if        first = no
     C                   exsr      $writeoff
     C                   endif
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Write offset records to interface file
      *--------------------------------------------------------------------------------------
      *
     C     $writeoff     begsr
      *
     C                   move      no            hjnewbat
     C                   move      no            hjnewdoc
      *
     C                   eval      hjdesc = 'Cull Sale - Offset'
     C                   z-add     ldacyr        hjacyr
     C                   z-add     ldacpe        hjacpe
     C                   move      'AA'          hjtype
     C                   move      svcocd        wkmcu
     C                   eval      hjmcu = wkmcu
     C                   eval      hjobj = '1505'
     C                   move      *blank        hjsub
     C                   move      yes           hjoffset
     C                   move      svcocd        hjcocd
      *
     C                   move      svexa         hjexa
     C     -1            mult      wkhpsval      hjhpsval
     C     -1            mult      wkjdeval      hjjdeval
      *
      * Populate the 'batch header value' field with the 'offset' value. Force the
      * number to be positive.
      *
     C                   select
     C                   when      hjjdeval >= 0
     C                   z-add     hjjdeval      hjbatval
     C                   other
     C     -1            mult      hjjdeval      hjbatval
     C                   endsl
      *
     C                   write     hjrec
      *
     C                   z-add     0             wkhpsval
     C                   z-add     0             wkjdeval
     C                   move      p1hjexa       svexa
     C                   move      p1hjcocd      svcocd
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------------------------------
      * Initialization subroutine
      *--------------------------------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C     key01         klist
     C                   kfld                    cdchdt
     C                   kfld                    cdcvno
     C                   kfld                    cdchno
     C                   kfld                    cdlnno
      *
     C                   endsr
      /EJECT
