// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POHPPFR
// ?Date: 14.08.2025 Time: 12:06:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Process before print of first page format

MOVE *ALL (To: 1PG From: PAR);

CASE;

// IF 1PG.Component Item Code is Entered
IF X1PG_Component_Item_Code <> *ZERO;

EXECUTE FUNCTION(Rtv Item Info f/Usage RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1647227;
PARAMETER(X1PG_Component_Item_Code);
PARAMETER(X1PG_Item_Description);
PARAMETER(X1PG_Unit_Weight);
PARAMETER(X1PG_Number_Cases_On_A_Pallet);
PARAMETER(X1PG_Piece_Count_Item);
PARAMETER(LCL.Pieces_Per_Bag);
PARAMETER(LCL.Bags_Per_Unit);
PARAMETER(NLL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Pieces /Unit
X1PG_Pieces_Need_USR = LCL.Pieces_Per_Bag * LCL.Bags_Per_Unit 'H';

// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Description = CON.*ALL
X1PG_Item_Description = *ALL;

ENDIF;

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// Print Company Number header format
PRINT Company Number header format;

ENDIF;

CASE;

IF NEW Component_Item_Code;
// Print Component Item Code header format
PRINT Component Item Code header format;

ENDIF;

// SUPPRESSED PRINT Item Code header format

//?USER: Process before print of detail format

EXECUTE FUNCTION(Rtv Item Info f/Usage RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1647227;
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Description);
PARAMETER(CUR.Unit_Weight);
PARAMETER(CUR.Number_Cases_On_A_Pallet);
PARAMETER(CUR.Piece_Count_Item);
PARAMETER(LCL.Pieces_Per_Bag);
PARAMETER(LCL.Bags_Per_Unit);
PARAMETER(CUR.Record_Status_1_Usr);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Pieces /Unit
CUR.Pieces_Need_USR = LCL.Pieces_Per_Bag * LCL.Bags_Per_Unit 'H';

// Call program Rtv Item Prod Yield   XF.
CALL PROGRAM(Rtv Item Prod Yield   XF) ('POQWXFR');
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Production_Yield);
PARAMETER(LCL.Record_Found_USR);

//?USER: Print required level totals

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Component Item Code totals format

// SUPPRESSED PRINT Company Number totals format

