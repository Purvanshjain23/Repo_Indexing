// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBVHPFR
// ?Date: 14.08.2025 Time: 12:03:32
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
//?E3882SS JJH 01/27/15 - D/P Sales Structure
//?- Recompile to allow Company Customer file to be updated when the
//?  Sales Sold To Salesperson changes.
MOVE *ALL (To: PAR From: CON);

// PAR.Sales Sold To Code USR = CON.1000
PAR.Sales_Sold_To_Code_USR = 1000;

// LCL.First Time Flag = CND.Yes
LCL.First_Time_Flag = 'Y';

//?USER: Record selection processing

CASE;

// IF DB1.Parent Number is equal to zero
IF DB1.Parent_Number = *ZERO;

// OR DB1.Parent Number is EQ 1
OR DB1.Parent_Number = 1;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Ship To Sales Channel header format

// SUPPRESSED PRINT SC Territory Code header format

// SUPPRESSED PRINT Market Code header format

// SUPPRESSED PRINT Sales Route Code header format

// SUPPRESSED PRINT Parent Number header format

// SUPPRESSED PRINT Ship To Customer header format

//?USER: On print of detail format

EXECUTE FUNCTION(Customer Name DRV) TYPE(DRVFLD)                                AC1631131;
PARAMETER(CUR.Customer_Name_DRV);
PARAMETER(CUR.Parent_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Customer_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(RTV Cust Name/Addr/Ph  RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1332483;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Ship_To_Name);
PARAMETER(LCL.Address_Line_1);
PARAMETER(LCL.Address_Line_2);
PARAMETER(LCL.Address_Line_3);
PARAMETER(CUR.Ship_To_City);
PARAMETER(CUR.Ship_To_State_Code);
PARAMETER(LCL.Zip_Postal_Code);
PARAMETER(LCL.Telephone_Number_FF);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Description        RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1270614;
PARAMETER(CUR.Sales_Route_Code);
PARAMETER(CUR.Sales_Route_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?CHG:
CASE;

// IF PAR.Parent Number NE CUR.Parent Number
IF PAR.Parent_Number <> CUR.Parent_Number;

// OR PAR.Ship To Sales Channel NE CUR.Ship To Sales Channel
OR PAR.Ship_To_Sales_Channel <> CUR.Ship_To_Sales_Channel;

// OR PAR.SC Territory Code NE CUR.SC Territory Code
OR PAR.SC_Territory_Code <> CUR.SC_Territory_Code;

// OR PAR.Market Code NE CUR.Market Code
OR PAR.Market_Code <> CUR.Market_Code;

// OR PAR.Sales Route Code NE CUR.Sales Route Code
OR PAR.Sales_Route_Code <> CUR.Sales_Route_Code;

// PAR.Sales Sold To Code USR = PAR.Sales Sold To Code USR + CON.1
PAR.Sales_Sold_To_Code_USR = PAR.Sales_Sold_To_Code_USR + 1;

CASE;

// IF PAR.Create Requested is Yes
IF PAR.Create_Requested = 'Y';

EXECUTE FUNCTION(Crt Sales Sold To     CR) TYPE(CRTOBJ) FILE(PBB5REP)           AC2110627;
PARAMETER(PAR.Sales_Sold_To_Code_USR);
PARAMETER(CUR.Customer_Name_DRV);
PARAMETER(CUR.DP_Classification_ABC);
PARAMETER(*MISSING);
PARAMETER(CUR.Sales_Route_Code);
PARAMETER(CUR.Ship_To_Sales_Channel);
PARAMETER(CUR.Market_Code);
PARAMETER('A');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

 //?USER: Processing after Data update

 EXECUTE FUNCTION(Upd SoldTo SalesRoute RT) TYPE(RTVOBJ) FILE(PBB6REP)           AC2118419;
 PARAMETER(DB1.Sales_Sold_To_Code);
 PARAMETER(DB1.Sales_Sold_To_Salesperson);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Upd SoldTo SalesRoute RT) TYPE(RTVOBJ) FILE(CAEOREP)           AC2118385;
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(PAR.Sales_Route_Code);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(Chg SoldTo SalesRoute CH) TYPE(CHGOBJ) FILE(CAEOREP)           AC2118406;
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Ship_To_Customer);
   PARAMETER(PAR.Sales_Route_Code);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Record Stamp CHGOB IF) TYPE(EXCINTFUN)                     AC1283156;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*PROGRAM
     PAR.Job_Name = JOB.*PROGRAM;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

  }

 }

}


ENDIF;

// PAR.Parent Number = CUR.Parent Number
PAR.Parent_Number = CUR.Parent_Number;

// PAR.Ship To Sales Channel = CUR.Ship To Sales Channel
PAR.Ship_To_Sales_Channel = CUR.Ship_To_Sales_Channel;

// PAR.SC Territory Code = CUR.SC Territory Code
PAR.SC_Territory_Code = CUR.SC_Territory_Code;

// PAR.Market Code = CUR.Market Code
PAR.Market_Code = CUR.Market_Code;

// PAR.Sales Route Code = CUR.Sales Route Code
PAR.Sales_Route_Code = CUR.Sales_Route_Code;

ENDIF;

// CUR.Sales Sold To Code = PAR.Sales Sold To Code USR
CUR.Sales_Sold_To_Code = PAR.Sales_Sold_To_Code_USR;

CASE;

// IF PAR.Create Requested is Yes
IF PAR.Create_Requested = 'Y';

EXECUTE FUNCTION(Crt Sales Cst Sold To CR) TYPE(CRTOBJ) FILE(PBB6REP)           AC2113553;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Sales_Sold_To_Code);
PARAMETER('A');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
 PARAMETER(DB1.Record_Status);
 PARAMETER(DB1.Create_Date);
 PARAMETER(DB1.Create_Time);
 PARAMETER(DB1.Create_User);
 PARAMETER(DB1.Create_Program);
 PARAMETER(DB1.Change_Date);
 PARAMETER(DB1.Change_Time);
 PARAMETER(DB1.Change_User);
 PARAMETER(DB1.Change_Program);
 {
  //?Execute internal function

  //?*** Set RECORD STATUS field. ***
  // PAR.Record Status = CND.Active
  PAR.Record_Status = 'A';

  //?*** Set CREATE fields. ***
  // PAR.Create Date = JOB.*Job date
  PAR.Create_Date = JOB.*Job_date;

  // PAR.Create Time = JOB.*Job time
  PAR.Create_Time = JOB.*Job_time;

  // PAR.Create User = JOB.*USER
  PAR.Create_User = JOB.*USER;

  // PAR.Create Program = JOB.*PROGRAM
  PAR.Create_Program = JOB.*PROGRAM;

  //?*** Set CHANGE fields. ***
  // PAR.Change Date = CON.*ZERO
  PAR.Change_Date = *ZERO;

  // PAR.Change Time = CON.*ZERO
  PAR.Change_Time = *ZERO;

  // PAR.Change User = CON.*BLANK
  PAR.Change_User = *BLANK;

  // PAR.Change Program = CON.*BLANK
  PAR.Change_Program = *BLANK;

 }

}


ENDIF;

//?USER: Print required level totals

// SUPPRESSED PRINT Ship To Customer totals format

// SUPPRESSED PRINT Parent Number totals format

// SUPPRESSED PRINT Sales Route Code totals format

// SUPPRESSED PRINT Market Code totals format

// SUPPRESSED PRINT SC Territory Code totals format

// SUPPRESSED PRINT Ship To Sales Channel totals format

