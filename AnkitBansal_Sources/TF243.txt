     h option(*SRCSTMT:*NODEBUGIO)
      *
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      TF Fees & Payments
      * PROGRAM:     Margin: Update Standard Costs/Yields in Revenue Detail
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     10/02/06
      *
      * Function: Before running the Margin Adjustment function, we want to update
      *           the Standard Costs/Yields fields in the Revenue Detail file for the
      *           Week.
      *
      *           NOTE: In July 2008 we moved the call to this program into the Meat
      *                 Costing function...we needed the updated Cost/Yields for the
      *                 ByProduct Mix logic that is in the Meat Costing flow.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/13/06  LeAnne Ramsey
      *           Changed LDA positions.
      *
      * 01/12/07  LeAnne Ramsey
      *           Added some program documentation.
      *
      * 02/14/07  LeAnne Ramsey
      *           The field AXEGPR-STD RM Pkg Cost/CW in POAXCPP-Item Standard Cost
      *           will now hold "OTHER" cost. So, we will now populate our new
      *           "STD Other Cost" field in TFP010-Weekly Product Revenue Detail with
      *           AXEGPR. Prior to this, AXEGPR was added into our Packaging Cost.
      *
      * 04/16/07  LeAnne Ramsey
      *           Recompile only. Fields were added/changed in the Weekly
      *           Product Revenue file.
      *           Added:   Byproduct Mix Flag
      *                    Meat Cost Group Code
      *           Changed: Exclude from Mix Flag     to  Mix Flag
      *                    Exclude from Volume Flag  to  Volume Flag
      *                    Capability Flag           to  Inventory Flag
      *
      * 05/18/07  LeAnne Ramsey
      *           Recompile only. Fields were added to the Weekly Product Revenue
      *           Detail file:
      *              TF Percent Owned
      *              Co-owned Flag
      *              Producing Company
      *
      * 08/27/07  LeAnne Ramsey
      *           We have added 'Item Type' to the Weekly Product Revenue Detail file.
      *           We are now putting Work-in-Process records into the Weekly Product
      *           Revenue Detail file (We do this in TF206.)
      *           We will add logic here to calculate "produced value amounts" for
      *           these WP records. (This is the first place where we have the 'cost' for
      *           making the calculation.)
      *
      * 03/18/08  LeAnne Ramsey
      *           Recompile only. Synon file POAXCPP was recompiled.
      *
      * 07/24/08  LeAnne Ramsey
      *           In July 2008 we moved the call to this program into the Meat
      *           Costing function...we needed the updated Cost/Yields for the
      *           ByProduct Mix logic that is in the Meat Costing flow.
      *           So, I changed the LDA postions in this program to match the
      *           Meat Costing function positions.
      *
      * 07/30/08  LeAnne Ramsey
      *           Now, we have to call this from BOTH the Meat Costing and
      *           the Margin Close. So, I had to go to *entry parms instead
      *           of the LDA.
      *
      * 09/11/08  LeAnne Ramsey
      *           Recompile only. Export/Domestic Flag was added to TFP010-
      *           Weekly Product Revenue Detail file.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Added 25 STF fields to TFP010 file.
      *           Calculate prxpuam - STF Produced Value Amt.
      *
      * 10/04/19  Rose Centonze  WHD 52709 - TFS R15570 (scan)
      *           Dont output Other Cost to TFP010 per Damon Ginther
      *
      * 05/06/22  Danny Nguyen  (DO2484 - WI479 STF Variance Reporting)
      *           DBFC on TFP010 file. Added the following fields:
      *             PRXYPC   - STF STD YIELD PERCENT
      *             PRXPMPPC - STF PUMP PERCENT
      *           Added Item Bill of Material (pdiorel4) file to
      *           calculate/populate STF Yield % & Pump % and update TFP010.
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Ftfl010a   uf   e           k disk
      *  Weekly Product Revenue Detail
      *
      *
     Fpoaxcpl1  if   e           k disk
      *  Item standard cost
      *
      *
2484 fpdiorel4  if   e           k disk
      *  Item bill of material
      *  (LF selects Active/Produced Items)
      *
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
     D wkcocd          s              3  0              inz(360)
2484 D wkcocd2         s              3  0              inz(440)
      *
     D xxwedt          s              8  0
     D xxwesyn         s              7  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C     xxwedt        setll     tfl010a
      *
     C                   dou       *in90 = *on                                  Main do
     C     xxwedt        reade     tfl010a                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Retrieve Standard Costs/Yields
      * (Note: This "chain" IS THE CORRECT LOGIC! The date field in
      * POAXCPL1 is called "effective date"--which makes you think that
      * you should SETGT and READPE. BUT, there will be a weekly record for
      * every Product.  So, AMB says "chain" is what she wants here.)
      *
     C     key01         chain     poaxcpl1                           92
     C                   if        *in92 = *off                                 If hit
      * Yield %
     C                   eval(h)   prypc = axfcpc * 100
      * Pump Yield %
     C                   eval(h)   prpumppc = axgepc * 100
      *
      * Packaging cost
     C                   eval(h)   prkco = (axedpr/100)
      * Labor cost
     C                   eval(h)   prlco = (axeepr/100)
      * Ingredient cost
     C                   eval(h)   prico = (axefpr/100)
      * Meat cost
     C                   eval(h)   prmco = (axfrpr/100)
      * Other cost
     C** R15570          eval(h)   proco = (axegpr/100)
     C                   eval      proco = 0
      * Product cost
     C                   eval(h)   prpco = prlco + prico + prkco + prmco + proco
      *
      * For WP items only, calculate:
      *   1) Produced value amounts (SBF, TF, Aggregate)
      *
     C                   if        pritycd = 'WP '
     C     prspulb       mult(h)   prpco         prspuam
     C     prtpulb       mult(h)   prpco         prtpuam
12011C     prxpulb       mult(h)   prpco         prxpuam
     C     prspuam       add       prtpuam       prapuam
     C                   endif
      *
     C                   endif                                                  If hit
      *
2484  * DO2484 - Retrieve STF Standard Costs/Yields to Calc STF Yield % & Pump %.
  |   *
  |  C     key02         chain     pdiorel4
  |  C                   if        %found(pdiorel4)
  |   * STF Yield %
  |  C                   eval(h)   prxypc = iobopr
  |   * STF Pump Yield %
  |  C                   eval(h)   prxpmppc = iobmy2
  |   *
  |  C                   else
  |   *
  |  C                   eval      prxypc = 0
  |  C                   eval      prxpmppc = 0
2484 C                   endif
      *
     C                   update    prrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C     *entry        plist
     C                   parm                    xxwedt
     C                   parm                    xxwesyn
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkcocd
     C                   kfld                    prprcd
     C                   kfld                    xxwesyn
      *
2484 C     key02         klist
  |  C                   kfld                    wkcocd2
  |  C                   kfld                    prprcd
2484 C                   kfld                    prprcd
      *
     C                   endsr
      /eject
