     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *****************  RPG PROGRAM HEADING  ************************
      *                                                              *
      * PROGRAM NUMBER...... - CCSELW                                *
      *          DATE....... -  3/13/2020                            *
      *          AUTHOR..... - Brad Baden                            *
      *          DESCRIPTION - THIS PROGRAM IS CALLED FROM THE HPE   *
      *                        (HOG PROCUREMENT) SYSTEM.  IT IS      *
      *                        USED TO SELECT A COST CENTER FROM A   *
      *                        SUBFILE WITHIN A WINDOW.              *
      ****************************************************************
      *  REVISIONS                                                   *
      ****************************************************************
      *                                                              *
      *  REV # - 00     DATE - MM/DD/YY     PROGRAMMER - XXX         *
      *                                                              *
      *  CHANGES MADE -        08/15/95     BARB GUTIERREZ           *
      *                        MAKE SURE COST CENTER IS ACTIVE       *
      *  CHANGES MADE -        06/29/96     BARB GUTIERREZ           *
      *                        RECOMPILED FOR JDE RELEASE A7.1 ONLY  *
      *                                                              *
      *  3/12/2020 JBB E16169 - JDE World to JDE Enterprise 1        *
      *        Project SDN465   CVTRPGSRC for JFOODCUST/QRPGSRC for  *
      *                         member CCSEL to E1IDEVGEN/QRPGLESEC  *
      *                         member CCSELW.  Replaced CCDSEL with *
      *                         CCDSELW.                             *
      *                                                              *
      ****************************************************************
      /EJECT
      ****************************************************************
      *   F :             FILE SPECIFICATIONS                        *
      ****************************************************************
      /SPACE 2
     FF0006CA   IF   E           K DISK
      * JDE COST CENTER MASTER (KEY: MCCO, MCDL01)
     FCCDSELW   CF   E             WORKSTN INFDS(WSDS)
     F                                     SFILE(CCS1:SFLRN)
      * COST CENTER SELECTION DISPLAY FILE
      *
      ****************************************************************
      *   I :             INPUT SPECIFICATIONS                        *
      ****************************************************************
      *
      * NAMED HEXADECIMAL CONSTANTS FOR FUNCTION KEYS
      *
     D @F03            C                   CONST(X'33')
     D @PAGDN          C                   CONST(X'F5')
      *
      * STANDARD CONSTANTS
      *
     D NO              C                   CONST('0')
     D YES             C                   CONST('1')
      *
     D WSDS            DS
      *                Identifies the key pressed
     D  KEY                  369    369
      *                Identifies the subfile page rrn
     D  PAGRRN               378    379B 0
      *
      ****************************************************************
      *   C :             CALC SPECIFICATIONS                        *
      ****************************************************************
      *
      *==============================================================*
      * Input/Output Parameter List                                  *
      *==============================================================*
      *
     C     *ENTRY        PLIST
     C                   PARM                    RETRN             7
     C                   PARM                    CO                3
     C                   PARM                    CC               12
     C                   PARM                    NAME             30
      *
      *==============================================================*
      * Reset variables and clear subfile                            *
      *  in case program called again after *INLR = *OFF             *
      *  ensures that program starts again properly                  *
      *==============================================================*
      *
     C                   RESET                   @EXIT
     C                   RESET                   SFMODE
      *
     C                   EXSR      @RESET
      *
      *==============================================================*
      *  PROGRAM MAINLINE                                            *
      *==============================================================*
      *
     C                   EXSR      @LOAD
      *
      * Perform until exit requested using F03
     C     @EXIT         DOUEQ     YES
      *
     C                   WRITE     CCR1
     C                   WRITE     CCK1
     C                   EXFMT     CCC1
      *
     C                   Z-ADD     PAGRRN        SFLPS
      *
      * Process response
      *
     C     KEY           CASEQ     @F03          @F03SR                         F03 EXIT
     C     KEY           CASEQ     @PAGDN        @PGDN                          PAGE DOWN
     C                   CAS                     @ENTKY                         ENTER
     C                   ENDCS
      *
     C                   ENDDO
      *
      * End of program
     C                   MOVE      *ON           *INLR
     C                   RETURN
      *
      *==============================================================*
      *  SUBROUTINE SECTION                                          *
      *==============================================================*
      *
      *==============================================================*
      * Load Subfile                                                 *
      *==============================================================*
      *
     C     @LOAD         BEGSR
     C                   Z-ADD     0             CNT
      *
      * Read a page of records or until EOF
      *
     C     K006          SETLL     I0006
     C     CNT           DOUEQ     10
     C     WKCO          READE     I0006                                  99
      *
     C     *IN99         IFEQ      *ON
     C                   LEAVE
     C                   ELSE
      *
      * Move data fields to display fields
      *
     C     MCPECC        IFNE      'N'                                          INACTIVE
     C                   MOVEL(P)  MCMCU         DFCC
     C                   MOVEL(P)  MCDL01        DFNAME
      *
     C                   ADD       1             SFLRN
     C                   WRITE     CCS1
     C                   ADD       1             CNT               4 0
     C                   ENDIF                                                  INACTIVE
     C                   ENDIF
      *
     C                   ENDDO
      *
      * If not EOF, read one more record to make sure
      *
     C     *IN99         IFEQ      *OFF
     C     WKCO          READE     I0006                                  99
     C                   ENDIF
      *
      * Set endkey values
      *
     C                   MOVEL     MCDL01        ENDNAM
     C                   MOVE      MCMCU         ENDCC
     C                   Z-ADD     SFLRN         ENDRN
      *
      * If no records were added to subfile, set error indicators
      *
     C     SFLRN         IFEQ      *ZEROS
     C                   MOVE      *OFF          *IN42
     C                   ELSE
      *
      * Else, set indicators to display subfile
      *
     C                   MOVE      *ON           *IN42
      *
      * Set subfile position to page just added
      *
     C                   Z-ADD     SFLRN         SFLPS
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Clear/Reset Subfile                                          *
      *==============================================================*
      *
     C     @RESET        BEGSR
      *
      * Clear subfile and reset subfile display indicator
      *
     C                   MOVE      *ON           *IN40
     C                   WRITE     CCC1
     C                   MOVE      *OFF          *IN40
     C                   MOVE      *OFF          *IN42
      *
      * Reset subfile record number and subfile position fields
      *
     C                   RESET                   SFLRN
     C                   RESET                   ENDRN
     C                   RESET                   SFLPS
      *
     C                   ENDSR
      *
      *==============================================================*
      * Reposition File                                              *
      *==============================================================*
      *
     C     @REPOS        BEGSR
      *
      * Clear subfile
     C                   EXSR      @RESET
      *
      * Reposition file by search value
      *
     C     K006          SETLL     I0006
     C     SFLRN         DOUEQ     10
     C     WKCO          READE     I0006                                  99
      *
     C     *IN99         IFEQ      *ON
     C                   LEAVE
     C                   ELSE
      *
      * Translate search pattern for text field if active cost center
      *
     C     MCPECC        IFNE      'N'                                          INACTIVE
     C                   MOVEL     'QSYST'       TRNTBL           10
     C                   MOVE      'RNTBL'       TRNTBL
     C                   CALL      'QDCXLATE'
     C                   PARM      40            BUFLEN            5 0          &BUFLEN
     C                   PARM      DFSRCH        BUFFER           20            &BUFFER
     C                   PARM      TRNTBL        TABLE            10            &SBCSTBLN
     C                   PARM      'QSYS'        TLIBR            10            &SBCSTBLL
      *
      * Scan Name field to determine if it contains search value
     C                   CALL      'QCLSCAN'
     C                   PARM                    MCDL01                         &STRING
     C                   PARM      40            STRLEN            3 0          &STRLEN
     C                   PARM      1             STRPOS            3 0          &STRPOS
     C                   PARM                    BUFFER                         &PATTERN
     C                   PARM      20            PATLEN            3 0          &PATLEN
     C                   PARM      '1'           TRNSLT            1            &TRANSLATE
     C                   PARM      '1'           TRIM              1            &TRIM
     C                   PARM      '?'           WILD              1            &WILD
     C                   PARM                    RESULT            3 0          &RESULT
      *
      * If search value is found anywhere within name field, load
      *   record into subfile
      *
     C     RESULT        IFGE      1
      *
      * Move data fields to display fields
      *
     C                   MOVEL(P)  MCMCU         DFCC
     C                   MOVEL(P)  MCDL01        DFNAME
      *
     C                   ADD       1             SFLRN
     C                   WRITE     CCS1
     C                   ENDIF
     C                   ENDIF                                                  INACTIVE
     C                   ENDIF
      *
     C                   ENDDO
     C                   MOVE      *BLANKS       DFSRCH
      *
      * If not EOF, read one more record to make sure
      *
     C     *IN99         IFEQ      *OFF
     C     WKCO          READE     I0006                                  99
     C                   ENDIF
      *
      * Set endkey values
      *
     C                   MOVEL     MCDL01        ENDNAM
     C                   MOVE      MCMCU         ENDCC
     C                   Z-ADD     SFLRN         ENDRN
      *
      * If no records were added to subfile, set error indicators
      *
     C     SFLRN         IFEQ      *ZEROS
     C                   MOVE      *OFF          *IN42
     C                   ELSE
      *
      * Else, set indicators to display subfile
      *
     C                   MOVE      *ON           *IN42
      *
      * Set subfile position to page just added
      *
     C                   Z-ADD     SFLRN         SFLPS
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Subfile page down                                            *
      *==============================================================*
      *
     C     @PGDN         BEGSR
      *
     C     *IN99         IFEQ      *OFF
      *
      * Continue with record after the last one read
      *
     C     K006          SETGT     I0006
     C                   Z-ADD     ENDRN         SFLRN
     C                   EXSR      @LOAD
      *
      * Page down beyond end of subfile
      *
     C                   ELSE
     C                   MOVE      *ON           *IN60
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Process enter key after subfile display                      *
      *==============================================================*
      *
     C     @ENTKY        BEGSR
      *
      * User request position to new name
      *
     C     DFSRCH        IFNE      *BLANKS
     C                   MOVEL(P)  DFSRCH        ENDNAM
     C                   EXSR      @REPOS
      *
      * or process subfile changed records
      *
     C                   ELSE
     C                   EXSR      @SFLRD
     C                   ENDIF
      *
     C                   ENDSR
      *
      *==============================================================*
      * Read changed records in subfile to check for selection       *
      *==============================================================*
      *
     C     @SFLRD        BEGSR
      *
      * Did user make a selection?
      *
     C                   READC     CCS1                                   98
      *
      * If user made no selection,
      *
     C     *IN98         IFEQ      *ON
      *
      * reset name to blanks and reload subfile
      *
     C                   MOVE      *BLANKS       ENDNAM
     C                   EXSR      @RESET
     C                   EXSR      @LOAD
     C                   ENDIF
      *
     C     *IN98         DOWEQ     *OFF
      *
      * If user made selection,
      *   initialize output variable with user selection
      *   and force end of program.
      *
     C     DFSEL         IFEQ      '1'
     C                   MOVE      *BLANKS       RETRN
     C                   MOVE      DFCC          CC
     C                   MOVEL(P)  DFNAME        NAME
     C                   MOVE      YES           @EXIT
     C                   LEAVE
     C                   ENDIF
      *
     C                   READC     CCS1                                   98
     C                   ENDDO
      *
     C                   ENDSR
      *
      *==============================================================*
      * F03 key subroutine                                           *
      *==============================================================*
      *
     C     @F03SR        BEGSR
      *
      * set exit program flag
      *
     C                   MOVE      YES           @EXIT
     C                   MOVEL     'ERR'         RETRN
      *
     C                   ENDSR
      *
      *==============================================================*
      * Initialization Subroutine                                    *
      *==============================================================*
      *
     C     *INZSR        BEGSR
      *
     C     *LIKE         DEFINE    MCDL01        ENDNAM
     C     *LIKE         DEFINE    DFCC          ENDCC
      *
      * Move 3A company into 5A company with leading zeros
      *
     C                   MOVE      *ZEROS        WKCO              5
     C                   MOVE      CO            WKCO
      *
      * Create program exit flag and set value to NO
      *
     C                   MOVE      NO            @EXIT             1
      *
      * Miscellaneous subfile program variables
      *
     C                   Z-ADD     0             SFLRN             4 0
     C                   Z-ADD     0             ENDRN             4 0
     C                   Z-ADD     1             SFLPS
      *
      * End key for repositioning subfile
      *
     C     K006          KLIST
     C                   KFLD                    WKCO
     C                   KFLD                    ENDNAM
     C                   KFLD                    ENDCC
      *
     C                   ENDSR
