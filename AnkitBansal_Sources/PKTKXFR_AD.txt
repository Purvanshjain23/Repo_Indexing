// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKTKXFR
// ?Date: 14.08.2025 Time: 02:50:27
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modifications and Comments
DO;

//?E10812 JJH 02/28/18 - Market Hog OTC
//?- Add additional logic to setting the Posted to HPS Flag = R.
//?- The Tattoo Header must have a Qty GT 0 for one of these 3 fields:
//?  - TH Head Received
//?  - TH Dead on Arrival
//?  - TH Head EUT/KOA  (TH Unused Date 4)
//?E10812 JJH 02/13/18 - Market Hog OTC
//?- Use Company Value HEPHPSAUTO - Turn on HPS Automation (Y/N)
//?- This allows the OTC Project to continue with the HPS side, but
//?  does not flag the TH Posted to HPS Flag = R until this feature
//?  has been turned on.
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

//?E10812 - Retrieve Company Value = HPEHPSAUTO
// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER('HPEHPSAUTO');
PARAMETER(LCL.Turn_on_HPS_Automation);

//?pk0118 -- update th actual check date
EXECUTE FUNCTION(Rtv Payment Processing RT) TYPE(RTVOBJ) FILE(PKC4REP)          AB1147409;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(LCL.Pmt_Current_Payment_Date);
PARAMETER(NLL.Pmt_Current_Payment_Step);
PARAMETER(NLL.PP_Commission_Paym_Error);
PARAMETER(NLL.PP_Payment_Error);
PARAMETER(NLL.PP_Unused_Nbr_1);
PARAMETER(NLL.PP_Repayment_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?E10812 -- HPS Automate if so change the HPS status = R
EXECUTE FUNCTION(Rtv/Chg Th Vchr Info  RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1148865;
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_AP_Voucher_Document#);
PARAMETER(LCL.Pmt_Current_Payment_Date);
PARAMETER(JOB.*Job_date);
PARAMETER(LCL.Turn_on_HPS_Automation);
{
 //?USER: Process Data record

 //?HPS Automation   11/30/2017
 DO;

 //?11/30/2017  slm e10812
 //?    Set the TH Posted to HPS Flag as a R if true
 //?If we are posting and the Producer Ext has been selected
 //?for a HPS Automation = Y  set the HPS post flag to the value
 //?of a R = Ready for HPS to select their Payment processing.
 //?When the HPS has completed their process then this flag
 //?will be updated as "Y"
 ENDDO;

 EXECUTE FUNCTION(Rtv HPS Automation    RT) TYPE(RTVOBJ) FILE(PLAOREP)           AB1342216;
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(WRK.HPS_Automation_Y_N);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // WRK.TH Payment Sts = DB1.TH Payment Sts
 WRK.TH_Payment_Sts = DB1.TH_Payment_Sts;

 // WRK.TH Posted to HPS Flag = DB1.TH Posted to HPS Flag
 WRK.TH_Posted_to_HPS_Flag = DB1.TH_Posted_to_HPS_Flag;

 //?E10812 - Add Head Received, DOA, and KOA
 // Total Head Rcvd+KOA+DOA
 LCL.Total_Head_Rcvd_KOA_DOA = ( DB1.TH_Head_Received + DB1.TH_Dead_On_Arrival )
 + DB1.TH_Head_EUT_KOA;

 //?E10812 - Turn on HPS Automation
 //?Set payment sts to PAID - live, carcass, intrnl live, or intrnl carc
 CASE;

 // IF DB1.TH Payment Sts is Mark Live Payment
 IF DB1.TH_Payment_Sts = 'ML';

 // OR DB1.TH Payment Sts is Select Live
 OR DB1.TH_Payment_Sts = 'SL';

 // WRK.TH Payment Sts = CND.Paid Live
 WRK.TH_Payment_Sts = 'PL';

 CASE;

 // IF WRK.HPS Automation (Y/N) is Yes
 IF WRK.HPS_Automation_Y_N = 'Y';

 // AND PAR.Turn on HPS Automation is Yes
 AND PAR.Turn_on_HPS_Automation = 'Y';

 // AND LCL.Total Head Rcvd-KOA-DOA is GT Zero
 AND LCL.Total_Head_Rcvd_KOA_DOA > *ZERO;

 // WRK.TH Posted to HPS Flag = CND.Ready for HPS
 WRK.TH_Posted_to_HPS_Flag = 'R';

 ENDIF;

 //?Set payment sts to PAID - live, carcass, intrnl live, or intrnl carc
 // IF DB1.TH Payment Sts is Sl Carcass Merit
 IF DB1.TH_Payment_Sts = 'SC';

 // WRK.TH Payment Sts = CND.PD Carcass Merit
 WRK.TH_Payment_Sts = 'PC';

 CASE;

 // IF WRK.HPS Automation (Y/N) is Yes
 IF WRK.HPS_Automation_Y_N = 'Y';

 // AND PAR.Turn on HPS Automation is Yes
 AND PAR.Turn_on_HPS_Automation = 'Y';

 // AND LCL.Total Head Rcvd-KOA-DOA is GT Zero
 AND LCL.Total_Head_Rcvd_KOA_DOA > *ZERO;

 // WRK.TH Posted to HPS Flag = CND.Ready for HPS
 WRK.TH_Posted_to_HPS_Flag = 'R';

 ENDIF;

 //?Set payment sts to PAID - live, carcass, intrnl live, or intrnl carc
 // IF DB1.TH Payment Sts is Sl Int Carc
 IF DB1.TH_Payment_Sts = 'IC';

 // WRK.TH Payment Sts = CND.Post Int Carc
 WRK.TH_Payment_Sts = 'NC';

 CASE;

 // IF WRK.HPS Automation (Y/N) is Yes
 IF WRK.HPS_Automation_Y_N = 'Y';

 // AND PAR.Turn on HPS Automation is Yes
 AND PAR.Turn_on_HPS_Automation = 'Y';

 // AND LCL.Total Head Rcvd-KOA-DOA is GT Zero
 AND LCL.Total_Head_Rcvd_KOA_DOA > *ZERO;

 // WRK.TH Posted to HPS Flag = CND.Ready for HPS
 WRK.TH_Posted_to_HPS_Flag = 'R';

 ENDIF;

 //?Set payment sts to PAID - live, carcass, intrnl live, or intrnl carc
 // IF DB1.TH Payment Sts is Sl Int Live
 IF DB1.TH_Payment_Sts = 'IL';

 // WRK.TH Payment Sts = CND.Post Int Live
 WRK.TH_Payment_Sts = 'NL';

 CASE;

 // IF WRK.HPS Automation (Y/N) is Yes
 IF WRK.HPS_Automation_Y_N = 'Y';

 // AND PAR.Turn on HPS Automation is Yes
 AND PAR.Turn_on_HPS_Automation = 'Y';

 // AND LCL.Total Head Rcvd-KOA-DOA is GT Zero
 AND LCL.Total_Head_Rcvd_KOA_DOA > *ZERO;

 // WRK.TH Posted to HPS Flag = CND.Ready for HPS
 WRK.TH_Posted_to_HPS_Flag = 'R';

 ENDIF;

 ENDIF;

 //?** OLD:  Chg Tattoo Header   CH * Tattoo Header ** (PKP)
 EXECUTE FUNCTION(Chg TH Vchr Info      CH) TYPE(CHGOBJ) FILE(PKA1CPP)           AB1190747;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(PAR.TH_AP_Voucher_Document#);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(PAR.TH_Voucher_Payment_Date);
 PARAMETER(PAR.TH_Actual_Check_Date);
 PARAMETER(WRK.TH_Posted_to_HPS_Flag);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

  EXECUTE FUNCTION(Chg/Crt Tatto/Spc Flds IF) TYPE(EXCINTFUN)                     AB1189848;
  PARAMETER(DB1.TH_Payment_Sts);
  PARAMETER(DB1.TH_Payment_Type);
  {
   //?Execute internal function

   EXECUTE FUNCTION(HPE056 Payment Type) TYPE(EXCINTFUN)                           AB1189849;
   {
    //?Execute internal function

    //?1/10/96  HPE056   Allow payment type to be update based on
    //?                  what the payment status is at the time this
    //?                  tattoo is being updated
   }

   //?Function Description:  If there are any fields that need to be
   //?Changed/Created during the Change functions or Create function
   //?Presently: Payment Type
   //?Add this routine to all of the change objects and create object
   //?that update the Payment Type
   CASE;

   // IF PAR.TH Payment Sts is Live anything
   IF PAR.TH_Payment_Sts = 'ML'/'PL'/'NL'/'SL'/'IL';

   // PAR.TH Payment Type = CND.Live
   PAR.TH_Payment_Type = 'L';

   // IF *OTHERWISE
   IF *OTHERWISE;

   // PAR.TH Payment Type = CND.Carcass Merit
   PAR.TH_Payment_Type = 'C';

   ENDIF;

  }

 }

 EXECUTE FUNCTION(Rtv/Chg Tatto D/A Sts RT) TYPE(RTVOBJ) FILE(PKCDCPP)           AB1186786;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(WRK.TH_Payment_Sts);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Change Tattoo Deduction) TYPE(CHGOBJ) FILE(PKCDCPP)            AB1107818;
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(DB1.BOH_Buy_Order_Number);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(DB1.TH_Tattoo_Number);
  PARAMETER(DB1.TH_Kill_Date);
  PARAMETER(DB1.DED_D_A_Code);
  PARAMETER(DB1.THD_Unit_Amt);
  PARAMETER(DB1.THD_Ded_Add_Amount);
  PARAMETER(DB1.THD_Unit_Amt_Sign);
  PARAMETER(DB1.THD_UOM);
  PARAMETER(DB1.THD_Transaction_Created);
  PARAMETER(DB1.THD_GL_Code);
  PARAMETER(DB1.THD_Contra_Gl_Code);
  PARAMETER(DB1.THD_Re_imbursement_Head);
  PARAMETER(PAR.THD_Payment_Sts);
  PARAMETER(DB1.THD_Expense_Paid_by);
  PARAMETER(DB1.THD_Expense_Type);
  PARAMETER(DB1.THD_Reserve_Account_Upd);
  PARAMETER(DB1.THD_Commission_Deduction);
  PARAMETER(DB1.THD_Deferred_Payment);
  PARAMETER(DB1.THD_Status_4);
  PARAMETER(DB1.THD_Status_5);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

 }

 // Call program Crt Tattoo Action Comm XF.
 CALL PROGRAM(Crt Tattoo Action Comm XF) ('PKV4XFR');
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.TH_AP_Voucher_Document#);
 PARAMETER(PAR.TH_Voucher_Payment_Date);
 PARAMETER('PV');
 PARAMETER(*BLANK);

}


