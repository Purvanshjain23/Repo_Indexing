// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMDQPFR
// ?Date: 14.08.2025 Time: 12:05:29
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?SEL: Company Number
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

CASE;

// IF DB1.Company Number NE PAR.Company Number
IF DB1.Company_Number <> PAR.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?OMT: Production Date < Job Date
CASE;

// IF DB1.Production Date LT JOB.*Job date
IF DB1.Production_Date < JOB.*Job_date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?OMT: Adjustment Type <> Override
CASE;

// IF DB1.PS Adjustment Type is Not Override
IF DB1.PS_Adjustment_Type = 'FC'/'OT'/'PR'/'SC';

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

MOVE *ALL (To: TOP From: PAR);

//?Company
CASE;

// IF PAR.Company Number is Equal to zero
IF PAR.Company_Number = *ZERO;

// TOP.Company Name DRV = CON.*ALL
TOP_Company_Name_DRV = *ALL;

//?Company
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(TOP_Company_Name_DRV);
PARAMETER(TOP_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
//?Company
CASE;

// IF PAR.Accounting Company Number is Equal to zero
IF PAR.Company_Number = *ZERO;

//?Company
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DB1.Accounting Company Number NE PAR.Accounting Company Number
IF DB1.Company_Number <> PAR.Company_Number;

QUIT;

ENDIF;

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// SUPPRESSED PRINT Accounting Company Number header format

ENDIF;

CASE;

IF NEW Production_Date;
// SUPPRESSED PRINT Production Date header format

ENDIF;

// SUPPRESSED PRINT Item Code header format

// SUPPRESSED PRINT Warehouse Code header format

// SUPPRESSED PRINT PS Adjustment Type header format

//?USER: Process before print of detail format

//?Company
CASE;

// IF PAR.Accounting Company Number is Equal to zero
IF PAR.Company_Number = *ZERO;

//?Company
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF DB1.Accounting Company Number NE PAR.Accounting Company Number
IF DB1.Company_Number <> PAR.Company_Number;

QUIT;

ENDIF;

ENDIF;

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Condition Name 10 USR = Condition name of CUR.PS Adjustment Status
CUR.Condition_Name_10_USR = RTVCND(CUR.PS_Adjustment_Status);

//?USER: Print required level totals

// SUPPRESSED PRINT PS Adjustment Type totals format

// SUPPRESSED PRINT Warehouse Code totals format

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Production Date totals format

// SUPPRESSED PRINT Accounting Company Number totals format

