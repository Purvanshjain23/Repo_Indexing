      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      ****************************************************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF225 - Eopfees: Create Freight Variance Records
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     04/13/05
      *
      * Function:    This program creates the Freight Variance records.
      *
      ****************************************************************************************
      * MODIFICATIONS:
      ****************************************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Recompile only. "Floor" produced pounds and amount were added
      *           to file TFP010.
      *
      * 03/23/06  LeAnne Fedor
      *           Removed 'Estimated Freight Payable Balance' column.
      *           Rewrote to allocate/print at the Product level.
      *           Added logic for new field: Prior Period Paid Freight Amount
      *
      * 04/04/06  LeAnne Ramsey
      *           Added logic to calc the SBF and Triumph Variance Amount when no pounds of
      *           a Product were sold in the Period.
      *
      * 04/25/06  LeAnne Ramsey
      *           Removed the "print" logic. The listing originally printed from this
      *           program is now printed in TF621.
      *
      * 09/19/06  LeAnne Ramsey
      *           Recompile only. Synon file PPAOREP was changed.
      *
      * 10/23/06  LeAnne Ramsey
      *           We removed the "if no sold pounds" logic which was based on the
      *           "SJ Capability FLag"-- which we no longer have. So, we now have a
      *           single calc for the "amount" of the Freight Variance for SBF and TF.
      *
      * 11/22/06  LeAnne Ramsey
      *           Changed field name/text for "actual freight amount" to
      *           "allocated actual freight amount" in the workfile.
      *
      * 12/28/06  LeAnne Ramsey
      *           We now have 3 different "Methods" for splitting the Freight Dollars
      *           between Seaboard and Triumph.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 04/16/07  LeAnne Ramsey
      *           Field "Exclude from Mix Flag' was renamed to Mix Flag in the
      *           Freight Variance file. Changed code to use the new field name
      *           and logic.
      *
      * 05/04/07  Alice Brownfield
      *           Changed logic to determine method to use because we added a
      *           new ByProduct TF Class Group code (BP).  All BP's will be Method 2.
      *
      * 05/14/07  LeAnne Ramsey
      *           Added 'Mix Flag' field/logic to TFP028-Freight Variance Totals.
      *
      * 05/14/07  LeAnne Ramsey
      *           Recompile only. "Co-owner" fields were added to file TFP010.
      *           By the time we get to this program, the TFP010 values will
      *           already be split for co-owner products.
      *
      * 08/13/07  LeAnne Ramsey
      *           Recompile only. "Item Type Code" field was added to file TFP010.
      *
      * 07/16/08  LeAnne Ramsey
      *           Recompile only. Two fields in Workfile TFP317 were renamed.
      *           From: W1UAACTAM-Unpaid Allocated Actual Amount
      *             To: W1UALFAM -Unpaid Allocated Load Total Amount
      *           From: W1PAACTAM-Paid Allocated Actual Amount
      *             To: W1PALFAM -Paid Allocated Load Total Amount
      *
      * 09/11/08  LeAnne Ramsey
      *           Recompile only. Export/Domestic Flag was added to TFP010-
      *           Weekly Product Revenue Detail file.
      *
      * 11/25/08  LeAnne Ramsey
      *           Recompile only.
      *           We reverted back/undid the change pf 07/16/08 above.
      *           Two fields in Workfile TFP317 were renamed.
      *               From: W1UALFAM -Unpaid Allocated Load Total Amount
      *                 To: W1UAACTAM-Unpaid Allocated Actual Amount
      *               From: W1PALFAM -Paid Allocated Load Total Amount
      *                 To: W1PAACTAM-Paid Allocated Actual Amount
      *
      * 08/15/11  LeAnne Ramsey (E1689)
      *           Dan Marlow (TF) requested and Tom Dye approved the following
      *           change for Method 3.
      *             WHEN Aggregate Prepaid Freight Pounds = 0 AND Item is CoOwned
      *                       Split the Amount between SBD/TF based on the CoOwned%s.
      *
      * 01/25/17  Brad Baden
      *           Check if a record exists in file TFL029, and if so, put the freight
      *           in FVFBAM.
      *
      * 05/01/17  Brad Baden
      *           Fixed fields name for Preliminary/Final code.  Changed from FEPREFNL
      *           to FEPFCD to match the field reference file.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 02/08/22  Danny Nguyen   - DO2484 - WI479 STF Variance Reporting
      *           Recompile only due to TFP014 DBF change.
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *
      /eject
      ****************************************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************************************
      *
     Fombyrel1  if   e           k disk
      *    Item default
      *
      *
     Fpkcwrel1  if   e           k disk
      *    G/L Account codes
      *
      *
     Fppaorel1  if   e           k disk
      *  TF margin adjustment group detail
      *
      *
     Ftfp010    if   e           k disk
      *    Weekly product revenue detail
      *
      *
     Ftfl317a   if   e           k disk
      *    Workfile: Freight Variance--Product Level
      *
      *
     Ftfl017b   uf a e           k disk
      *  Freight variance
      *
      *
     Ftfl017c   if   e           k disk    rename(fvrec:fvrecc)
      *  Freight variance
      *
      *
     Ftfl029    if   e           k disk
      *  Freight balances
      *
      *
     Ftfp028    o    e           k disk
      *  Freight variance totals
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     d first           s              1
      *
     d svtfcgcd        s                   like(fvtfcgcd)
     d svtfclcd        s                   like(fvtfclcd)
     d svistycd        s                   like(fvistycd)
     d svisgrcd        s                   like(fvisgrcd)
     d svisclcd        s                   like(fvisclcd)
     d svmixfl         s                   like(fvmixfl)
      *
      *
      * Workfields
      *
     D wkrate          s              9  6
     D wkpump          s              9  6
     D wktownpc        s                   like(prtownpc)
      *
     D wkmethod        s                   like(fvmethod)
      *
     D wkcono          s                   like(cwhonb) inz(360)
     D wkcode          s                   like(cwdmcd) inz('OMFRTBAL')
      *
     d wkefbam         s                   like(w1udiffam)
     d wkevam          s             11  2
     d wkevampc        s              7  4
      *
     d wkslb           s                   like(fvspflb)
     d wktlb           s                   like(fvtpflb)
     d wkalb           s                   like(fvapflb)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Parms
      *
     D xxaid           s              8
     D xxyr            s              4  0
     D xxfrompe        s              2  0
     D xxtope          s              2  0
     D xxam            s             15  2
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldpfcd                 1      1
     D  ldcyr                  2      5  0
     D  ldcpe                  6      7  0
      *
     D  ldcbdt                 8     15  0
     D  ldcbmdy               16     21  0
     D  ldcbsyn               22     28  0
      *
     D  ldcedt                29     36  0
     D  ldcemdy               37     42  0
     D  ldcesyn               43     49  0
      *
     D  ldledt                50     57  0
     D  ldlemdy               58     63  0
     D  ldlesyn               64     70  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Read each record in the Workfile; process each record that has a Variance
      * and write a corresponding Product record to the Freight Variance file.
      *
     C     *loval        setll     tfl317a
      *
     C                   dou       *in91 = *on                                  Do loop
     C                   read      tfl317a                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             (w1udiffam <> 0 or w1pdiffam <> 0)
     C                   exsr      $wrt017
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      * We will now reread the records just written to the Freight Variance
      * file by "Method" creating the "total" records for each "level" break
      * within that Method.
      * The Level Breaks for Methods 1 and 3 are the same.
      * Method 2 has a different level break.
      *
     C                   z-add     1             wkmethod
     C                   exsr      $method
      *
     C                   z-add     2             wkmethod
     C                   exsr      $method2
      *
     C                   z-add     3             wkmethod
     C                   exsr      $method
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Create Freight Variance records
      *---------------------------------------------------------------
      *
     C     $wrt017       begsr
      *
      * Set up 'Structure Level' fields
      *
     C                   z-add     w1prcd        fvprcd
     C                   move      w1tfcgcd      fvtfcgcd
     C                   move      w1tfclcd      fvtfclcd
     C                   z-add     w1istycd      fvistycd
     C                   z-add     w1isgrcd      fvisgrcd
     C                   z-add     w1isclcd      fvisclcd
      *
      * Retrieve the "Mix Flag" value from the TF Margin Adjustment Group
      * Detail file using a key of:
      *    TF Classification Code
      *    Item Structure Type Code
      *    Item Structure Group Code
      *    Item Structure Class Code
      *
     C     key03         chain     ppaorel1                           92
     C                   if        *in92 = *off
     C                   move      aoswsx        fvmixfl
     C                   else
     C                   move      *blank        fvmixfl
     C                   endif
      *
      * Retrieve the "Credit Item Status" value from the Item Default file
      *
     C     fvprcd        chain     ombyrel1                           92
     C                   if        *in92 = *off
     C                   move      byvmst        fvcritst
     C                   else
     C                   move      *blank        fvcritst
     C                   endif
      *
      * Estimated Variance ("difference" for Paid Loads)
      *
     C                   z-add     w1pdiffam     fvevam
     C                   add       fvevam        wkevam
      *
      * Estimated Outstanding Freight Payable ("difference" for Unpaid Loads)
      *
     C                   z-add     w1udiffam     fvfoam
      *
      * Determine the Freight Allocation Method to use:
      *
     C                   select
     C                   when      fvmixfl = yes and fvtfcgcd <> 'BP'
     C                   z-add     1             fvmethod
      *
     C                   when      fvtfcgcd = 'BP'
     C                   z-add     2             fvmethod
      *
     C                   when      fvmixfl = no and
     C                             (fvcritst = yes or
     C                              fvtfclcd = 'CVZ' or
     C                              fvtfclcd = 'NVZ' or
     C                              fvtfclcd = 'OFF' or
     C                              fvtfcgcd = 'DF')
     C                   z-add     2             fvmethod
     C                   other
      *
     C                   z-add     3             fvmethod
     C                   endsl
      *
      * Retrieve all TFP010 records for this Product/Period to populate
      * Prepaid Freight pounds.
      *
     C                   if        fvmethod = 1
     C                   move      yes           first
     C                   endif
      *
     C                   z-add     0             fvspflb
     C                   z-add     0             fvtpflb
     C                   z-add     0             fvapflb
      *
     C                   z-add     0             fvypc
     C                   z-add     0             fvpumppc
     C                   z-add     0             wkrate
     C                   z-add     0             wkpump
     C                   z-add     0             wktownpc
      *
     C     key02         setll     tfp010
     C                   dou       *in93 = *on or prwedt > ldcedt               Do loop
     C     fvprcd        reade     tfp010                                 93
     C                   if        *in93 = *off and                             If not EOF
     C                             prwedt <= ldcedt
     C                   add       prspflb       fvspflb
     C                   add       prtpflb       fvtpflb
     C                   add       prapflb       fvapflb
      *
     C                   if        first = yes and fvmethod = 1
     C                   z-add     prypc         fvypc
     C                   eval      wkrate = fvypc / 100
     C                   z-add     prpumppc      fvpumppc
     C                   eval      wkpump = (fvpumppc / 100) + 1
     C                   move      no            first
     C                   endif
      *
      * As of 08/2011: For CoOwned Items with NO prepaid pounds for the period,
      *    we will now calc SBD/TF percents/amounts using the CoOwned %s. So,
      *    save the TF CoOwned% from the last TFP010 record....just in case we
      *    need it.
     C                   if        fvmethod = 3
     C                   z-add     prtownpc      wktownpc
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do loop
      *
      *
      * For Method 1, you will need "starting" Prepaid Freight Pounds;
      * For Methods 2 and 3, we will be using the Prepaid Freight Pounds for
      * our calcs.
     C                   z-add     0             fvspfslb
     C                   z-add     0             fvtpfslb
     C                   z-add     0             fvapfslb
     C                   z-add     0             wkalb
     C                   z-add     0             wkslb
      *
     C                   select
     C                   when      fvmethod = 2 or fvmethod = 3
     C                   z-add     fvapflb       wkalb
     C                   z-add     fvspflb       wkslb
      *
     C                   when      fvmethod = 1
      *
      *            Prepaid Freight Start Pounds
      *                  (prepaid freight pounds / yield rate) / pump rate
      *
     C                   if        wkrate <> 0 and wkpump <> 0                  If not zero
     C                   eval      fvapfslb = (fvapflb / wkrate) / wkpump
     C                   eval      fvspfslb = (fvspflb / wkrate) / wkpump
     C                   eval      fvtpfslb = fvapfslb - fvspfslb
     C                   z-add     fvapfslb      wkalb
     C                   z-add     fvspfslb      wkslb
     C                   endif                                                  If not zero
      *
     C                   endsl
      *
      *
      *-----------------------------------------------------------------------
      * Now that you have Pounds, calc Prepaid Freight Percents:
      * (We expect there to always be some prepaid freight pounds; BUT, we
      * have coded here for the "unexpected".)
      *
      * Initialize SBF and TF percents of prepaid freight pounds.
      *
     C                   z-add     0             fvspflbpc
     C                   z-add     0             fvtpflbpc
      *
      * When you have Aggregate Pounds
      *
     C                   select
     C                   when      wkalb <> 0
      *
      *           SBF Percent of Aggregate Prepaid Freight Pounds:
      *              SBF prepaid freight lbs / Aggregate prepaid freight lbs
      *              Then, multiply the result times 100 to get the value into % format
      *
     C                   eval(h)   fvspflbpc = (wkslb / wkalb) * 100
      *
      *           TF Percent of Aggregate Prepaid Freight Pounds:
      *              100 - SBF Percent of Aggregate Prepaid Freight Pounds
      *              (If SBF's % is zero, give it all to TF.)
      *
     C                   if        fvspflbpc = 0
     C                   z-add     100           fvtpflbpc
     C                   else
     C     100           sub       fvspflbpc     fvtpflbpc
     C                   endif
      *
      * When there were NO pounds
      *      AND it is Method 3 AND the Item is CoOwned,
      *          set up the SBD/TF %s using the TF CoOwned %
      *
     C                   when      fvmethod = 3 and wktownpc <> 0
     C                   z-add     wktownpc      fvtpflbpc
     C     100           sub       fvtpflbpc     fvspflbpc
     C                   endsl
      *
      *-----------------------------------------------------------------------
      * If you are on the last record, you have to just plop any/all
      * leftover amounts into this record.
      *
     C                   select                                                 Select logic
     C                   when      wkevam    = fvaevam
     C                   eval      fvevampc  = 100 - wkevampc
     C                   add       fvevampc      wkevampc
     C                   eval      fvefbam   = fvfbam - wkefbam
     C                   other
      *
      * Percent of Total Estimated Variance:
      *   Estimated Variance / Total Estimated Variance
      *   Then, multiply the result times 100 to get the value into % format
      *
     C                   z-add     0             fvevampc
      *
     C                   if        fvaevam <> 0
     C                   eval(h)   fvevampc = (fvevam / fvaevam)  * 100
     C                   add       fvevampc      wkevampc
     C                   endif
      *
      * Estimated Freight Payable Balance:
      *  Total Freight Payable Balance  *  % of Total Estimated Variance
      *
     C                   eval      wkrate = fvevampc / 100
     C                   eval(h)   fvefbam = fvfbam * wkrate
     C                   endsl                                                  Select logic
      *
      * Accumulate
     C                   add       fvefbam       wkefbam
      *
      *------------------------------------------------------------------------
      *
      * Aggregate Freight Variance Amount:
      *     Total Freight Variance Amount * (% of Tot Estimated Variance / 100)
      *
     C                   eval      wkrate  = fvevampc / 100
     C                   eval(h)   fvafvam = fvfvam * wkrate
      *
      * If this is a Method 3 record, calculate the SBF and TF Variance Amounts
      *
     C                   if        fvmethod = 3                                 If method 3
      *
      *         Get % into a "Rate" field: SBF % of Prepaid Freight Lbs / 100
      *
     C                   eval      wkrate = fvspflbpc / 100
      *
      *         SBF Freight Variance Amount:
      *         Total Freight Variance Amount * (SBF % of Prepaid Freight Lbs / 100)
      *
     C                   eval(h)   fvsfvam = wkrate * fvafvam
      *
      *         TF Freight Variance Amount:
      *             Total Freight Variance Amount - SBF Freight Variance Amount
      *
     C     fvafvam       sub       fvsfvam       fvtfvam
     C                   else
     C                   z-add     0             fvsfvam
     C                   z-add     0             fvtfvam
     C                   endif                                                  If method 3
      *
      * Write Freight Variance record
      *
     C                   write     fvrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Logic for Method 1 and Method 3
      *---------------------------------------------------------------
      *
     C     $method       begsr
      *
      * Process each record just written to the Freight Variance
      * file writing a "total" record for each unique:
      *    TF Class Group Code
      *    TF Classification Code
      *    Item Structure Code
      *
     C                   move      yes           first
     C                   z-add     0             svisgrcd
     C                   z-add     0             svisclcd
     C                   move      *blank        svmixfl
      *
     C     key04         setll     tfl017b
      *
     C                   dou       *in91 = *on                                  Do method
     C     key04         reade(n)  tfl017b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   move      fvtfcgcd      svtfcgcd
     C                   move      fvtfclcd      svtfclcd
     C                   z-add     fvistycd      svistycd
     C                   move      fvmixfl       svmixfl
      *
     C                   when      fvtfcgcd <> svtfcgcd or
     C                             fvtfclcd <> svtfclcd or
     C                             fvistycd <> svistycd
     C                   exsr      $wrt028
     C                   move      fvtfcgcd      svtfcgcd
     C                   move      fvtfclcd      svtfclcd
     C                   z-add     fvistycd      svistycd
     C                   move      fvmixfl       svmixfl
     C                   endsl
      *
     C                   exsr      $accum017
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do method
      *
      * Write out last record
      *
     C                   if        first = no
     C                   exsr      $wrt028
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Method 2 logic
      *---------------------------------------------------------------
      *
     C     $method2      begsr
      *
      * Process each "Method 2" record just written to the Freight Variance
      * file writing a "total" record for each unique:
      *    TF Class Group Code
      *    TF Classification Code
      *    Item Structure Code
      *
     C                   move      yes           first
     C                   move      *blank        svtfcgcd
     C                   move      *blank        svtfclcd
     C                   move      *blank        svmixfl
      *
     C     key04         setll     tfl017c
      *
     C                   dou       *in91 = *on                                  Do method 2
     C     key04         reade(n)  tfl017c                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     fvistycd      svistycd
     C                   z-add     fvisgrcd      svisgrcd
     C                   z-add     fvisclcd      svisclcd
     C                   move      fvmixfl       svmixfl
      *
     C                   when      fvistycd <> svistycd or
     C                             fvisgrcd <> svisgrcd or
     C                             fvisclcd <> svisclcd
     C                   exsr      $wrt028
     C                   z-add     fvistycd      svistycd
     C                   z-add     fvisgrcd      svisgrcd
     C                   z-add     fvisclcd      svisclcd
     C                   move      fvmixfl       svmixfl
     C                   endsl
      *
     C                   exsr      $accum017
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do method 2
      *
      * Write out last record
      *
     C                   if        first = no
     C                   exsr      $wrt028
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Accumulate values from the Freight Variance file for the "totals" record
      *---------------------------------------------------------------------------
      *
     C     $accum017     begsr
      *
     C                   add       fvspfslb      ftspfslb
     C                   add       fvtpfslb      fttpfslb
     C                   add       fvapfslb      ftapfslb
      *
     C                   add       fvspflb       ftspflb
     C                   add       fvtpflb       fttpflb
     C                   add       fvapflb       ftapflb
      *
     C                   add       fvevam        ftevam
     C                   add       fvevampc      ftevampc
      *
     C                   add       fvafvam       ftafvam
      *
     C                   if        fvmethod = 3
     C                   add       fvsfvam       ftsfvam
     C                   add       fvtfvam       fttfvam
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Freight Variance "Totals" record
      *---------------------------------------------------------------
      *
     C     $wrt028       begsr
      *
     C                   z-add     ldcbdt        ftpbdt
     C                   z-add     ldcedt        ftpedt
     C                   z-add     ldcyr         ftyr
     C                   z-add     ldcpe         ftpe
     C                   move      wkmethod      ftmethod
      *
     C                   z-add     svistycd      ftistycd
     C                   z-add     svisgrcd      ftisgrcd
     C                   z-add     svisclcd      ftisclcd
     C                   move      svtfcgcd      fttfcgcd
     C                   move      svtfclcd      fttfclcd
     C                   move      svmixfl       ftmixfl
      *
      * Calculate Percents for Freight Pounds
      *
     C                   z-add     0             wkalb
     C                   z-add     0             wkslb
     C                   z-add     0             wktlb
      *
     C                   if        wkmethod = 1
     C                   z-add     ftapfslb      wkalb
     C                   z-add     ftspfslb      wkslb
     C                   z-add     fttpfslb      wktlb
     C                   else
     C                   z-add     ftapflb       wkalb
     C                   z-add     ftspflb       wkslb
     C                   z-add     fttpflb       wktlb
     C                   endif
      *
     C                   select
     C                   when      wkalb = 0
      * 100% to Seaboard
     C                   when      wktlb = 0
     C                   z-add     100           ftspflbpc
      * 100% to Triumph
     C                   when      wkslb = 0
     C                   z-add     100           fttpflbpc
      * Both SBF and TF
     C                   when      wkalb <> 0
     C                   eval(h)   ftspflbpc = (wkslb / wkalb) * 100
     C                   eval      fttpflbpc = 100 - ftspflbpc
     C                   endsl
      *
      * Calculate SBF and TF share of Variance Amount for Methods 1 and 2
      *
     C                   if        wkmethod = 1 or wkmethod = 2
     C                   eval(h)   ftsfvam = ftafvam * (ftspflbpc / 100)
     C     ftafvam       sub       ftsfvam       fttfvam
     C                   endif
      *
     C                   write     ftrec
     C                   clear                   ftrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Accumulate some totals for detail calcs
      *---------------------------------------------------------------
      *
     C     $accum317     begsr
      *
     C     *loval        setll     tfl317a
      *
     C                   dou       *in91 = *on                                  Do accum
     C                   read      tfl317a                                91
     C                   if        *in91 = *off and                             If not EOF
     C                             (w1udiffam <> 0 or w1pdiffam <> 0)
      *
      * Unpaid Loads: Estimated Outstanding Freight Payable
      *
     C                   add       w1udiffam     fvafoam
      *
      * Paid Loads: Total Estimated Variance
      *
     C                   add       w1pdiffam     fvaevam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do accum
      *
      *
      * Total Freight Variance Amount:
      *     Total Freight Payable Balance less
      *            Total Estimated Outstanding Freight Payable
      *
     C     fvfbam        sub       fvafoam       fvfvam
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkcono
     C                   kfld                    wkcode
      *
     C     key02         klist
     C                   kfld                    fvprcd
     C                   kfld                    ldcbdt
      *
     C     key03         klist
     C                   kfld                    w1tfclcd
     C                   kfld                    w1istycd
     C                   kfld                    w1isgrcd
     C                   kfld                    w1isclcd
      *
     C     key04         klist
     C                   kfld                    ldcedt
     C                   kfld                    wkmethod
      *
     C     key05         klist
     C                   kfld                    fttfclcd
     C                   kfld                    ftistycd
     C                   kfld                    ftisgrcd
     C                   kfld                    ftisclcd
      *
     C     key06         klist
     C                   kfld                    wkcono
     C                   kfld                    fvyr
     C                   kfld                    fvpe
      *
      * Populate the Freight Variance Week Beginning/Ending dates with
      * LDA values.
      *
     C                   z-add     ldcbdt        fvpbdt
     C                   z-add     ldcedt        fvpedt
     C                   z-add     ldcyr         fvyr
     C                   z-add     ldcpe         fvpe
      *
      * Retrieve Total Freight Payable Balance:
      * 1) Retrieve the Account ID from the Synon GL Account Codes file.
      * 2) Retrieve the Balance for this account from the JDE Account Balance
      *    file. (Flip the sign on the retrieved value.)
      *
     C     key01         chain     pkcwrel1                           92
     C                   if        *in92 = *off                                 If ID hit
      *
      * Retrive freight balance from TFL029 and add to fvfbam
      *
     C                   z-add     cwj1a1        wkcono
      *
     C     key06         chain     tfl029
     C                   if        %found(tfl029)
     C                   add       fefrtbal      fvfbam
      *
     C                   else
     C                   call      'ACTBAL'
     C                   parm      cwdocd        xxaid
     C                   parm      ldcyr         xxyr
     C                   parm      ldcpe         xxfrompe
     C                   parm      ldcpe         xxtope
     C                   parm      0             xxam
      *
     C     -1            mult      xxam          fvfbam
     C                   endif                                                  if %found(tfl029)
     C                   endif                                                  If ID hit
      *
      * For calculations, we will need some totals. So, read all the
      * workfile records and accumulate.
      *
     C                   exsr      $accum317
      *
      * Populate time stamp
      *
     C                   time                    fvuptm
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     fvupdt
      *
     C                   endsr
      /eject
