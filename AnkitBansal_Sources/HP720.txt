      *****************  RPG PROGRAM HEADING  ***********************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP720
      * TITLE:       VIEW FEED REFERENCE TICKET
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     05/10/94
      *
      * FUNCTION: THIS PROGRAM USES A SUBFILE TO VIEW RECORDS
      *           IN THE FEED DETAIL FILE FOR THE REFERENCE TICKET
      *           SELECTED BY THE USER.
      *
      *           THE PROGRAM WILL DISPLAY RECORDS FOR A PARTICULAR
      *           REFERENCE TICKET FOR A SPECIFIC FEED MILL BUSINESS
      *           OFFICE.
      *
      *           IT LOADS THE ENTIRE SUBFILE AT ONE TIME SO THAT THE
      *           TOTAL FIELDS IN THE CONTROL RECORD ARE ACCURATE.
      *
      *           THIS PROGRAM IS CALLED FROM HP420-WORK WITH FEED
      *           TICKETS.
      *
      *           IT DOES NOT HAVE SELECTORS OR POSITIONERS.
      *           IT DOES NOT HAVE F4-PROMPT LOGIC.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/12/94  LEANNE FEDOR
      *           REMOVED THE FOLLOWING TIME FIELDS FROM THE FEED
      *           TICKET HEADER AND DETAIL FILE.
      *                 COSTED TIME
      *                 ALLOCATED TIME
      *                 G/L POST TIME
      *                 EOP POST TIME
      *
      * 12/14/94  LEANNE FEDOR
      *           FIELD WERE CHANGED IN THE FEED TICKET DETAIL FILE.
      *
      * 01/13/95  LEANNE FEDOR
      *           RECOMPILE ONLY. SEX ADDED TO HOG GROUP FILE.
      *
      * 03/13/95  LEANNE FEDOR
      *           RECOMPILE ONLY. ORIGIN BGF FARM SITE AND ORIGIN
      *           NURSERY FARM SITE ADDED TO HOG GROUP FILE.
      *
      * 04/20/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC
      *
      * 05/01/95  LEANNE FEDOR
      *           ADDED FARM SITE FROM THE FEED DETAIL RECORD TO THE
      *           SUBFILE. THIS WAS REQUIRED SINCE PICKUP TICKETS CAN
      *           NOW BE DELIVERED TO A DIFFERENT FARM SITE THAN THE
      *           PICKUP FARM SITE.
      *
      * 11/01/95  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'GROUP TYPE' ADDED TO
      *           HOG GROUP FILE.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 06/25/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'COST THROUGH SYSTEM FLAG'
      *           ADDED TO FEED TICKET HEADER.
      *
      * 03/09/98  LEANNE FEDOR
      *           RECOMPILE ONLY. FEED POUNDS AND FEED AMOUNT FIELDS
      *           INCREASED IN SIZE PER NATHAN MALONE.
      *
      * 04/13/98  LeAnne Fedor
      *           Recompile only. New field 'state' added to farm site file.
      *
      * 01/30/01  LeAnne Fedor
      *           Production type was removed from the feed ticket files.
      *
      * 06/05/01  LeAnne Fedor
      *           Recompile only. New field 'multisite' added to Farm Site file.
      *
      * 06/28/01  LeAnne Fedor
      *           Recompile only.
      *           Three fields (manager/supervisor/multisite) renamed in Farm Site file.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 09/04/01  LeAnne Fedor
      *           Recompile only. New 'square feet' fields added to Farm Site file.
      *
      * 04/23/09  LeAnne Ramsey
      *           Recompile only. Costed Time/User added to Feed Ticket Header.
      *
      * 05/12/09  LeAnne Ramsey
      *           Recompile only. PickUp Ticket Type added to Feed Ticket Header.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 09/21/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Upload Date' to Feed Ticket Header.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      * 03/26/20  Danny Nguyen - P405 - Farm Number Increase
      *           Recompile only. Increased Bin Code (@@BNCD) in HSPREF file from 5A to 6A.
      *
      * 05/10/22 Eric L SDN736 Recompiled ticket nbr increase (TKNO & RTNO 7.0 TO 9.0)
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD720    CF   E             WORKSTN SFILE(HP720S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP009    IF   E           K DISK
      *    Business office
      *
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
      *
     FHSL034D   IF   E           K DISK
      *  HOG GROUPS
      *
      *
     FHSL037E   IF   E           K DISK    INFDS(DBFEED)
      *  FEED TICKET HEADER
      *
      *
     FHSP038    IF   E           K DISK
      *  FEED TICKET DETAIL
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'. ALSO DEFINE CURSOR LOCATION FIELDS.
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      * VERIFY THAT THE REFERENCE TICKET THAT THE USER SELECTED STILL
      * EXISTS.
      *
     C     K1L037        CHAIN     HSL037E                            90
     C     *IN90         IFEQ      *ON                                          IF NOT FOUND
     C                   MOVEL     YES           NOTFLG
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00311'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     C1RTNO        XXTKNO
     C                   MOVEA     XXTKNO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT FOUND
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      *  WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP720K1
     C                   WRITE     HP720EC
     C                   EXFMT     HP720C1
      *
      * SET THE 'RESET' FLAG TO NO.  THIS FLAG IS USED TO DETERMINE
      * WHETHER TO REPOSITION THE USER TO A PARTICULAR PLACE IN THE
      * SUBFILE (RESET=YES) OR TO PLACE THE USER AT THE BEGINNNING OF
      * THE SUBFILE (RESET=NO)
      *
     C                   MOVEL     NO            RESET
      *
      * RETRIEVE THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) AND MOVE IT TO A WORK FIELD.  THIS VALUE
      * WILL BE USED LATER TO CONTROL THE REPOSITIONING OF THE SUBFILE.
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR ALL MESSAGES
      *
     C                   EXSR      $CLMSG
      *
      * INITIALIZE THE RETURN CODE
      *
     C                   MOVEL     '00'          RTNCD
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     '03'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN12         WHENEQ    *ON                                          F12-PREVIOUS
     C                   MOVEL     '12'          RTNCD
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER PRESSED 'ENTER'
      *
     C                   MOVEL     EXIT          ROUTNE
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             C1AM
     C                   Z-ADD     0             C1FDLB
      *
     C                   CLEAR                   HP720S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP720C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      *  IF THE REFERENCE TICKET SELECTED BY THE USER WAS DELETED
      *  OUT FROM UNDER THE USER, THEN SET *IN90 BACK ON TO
      *  CONTROL AVAILABLE FUNCTION KEYS AND INPUT FIELDS.
      *  (*IN90 WAS SET OFF ABOVE WHEN THE SUBFILE WAS CLEARED)
      *
     C     NOTFLG        IFEQ      YES                                          IF NOT FOUND
     C                   SETON                                        90
     C                   ENDIF                                                  IF NOT FOUND
      *
      * SET POSITION IN DATABASE FILE HSL037E-FEED TICKET HEADER
      * ALWAYS LOAD THE ENTIRE SUBFILE.  DO NOT LOAD A PAGE AT A TIME.
      *
     C     K1L037        SETLL     HSL037E
      *
     C     *IN82         DOUEQ     *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1 - SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * READ EACH HEADER RECORD FOR THE REFERENCE TICKET NUMBER PASSED
      * IN AS A PARM. FILL THE SUBFILE UNTIL EOF.
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
      *
     C     K1L037        READE     HSL037E                                82
     C     *IN82         IFEQ      *OFF                                          IF FOUND
      *
     C                   Z-ADD     FHTKNO        DFTKNO
     C                   MOVEL     FHTRCD        DFTRCD
     C                   MOVEL     FHTSCD        DFTSCD
      *
      * FLIP TICKET DATE
      *
     C                   Z-ADD     FHTKDT        WKCYMD
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
     C                   Z-ADD     WKMDY         DFMDY
      *
      * RETRIEVE THE DETAIL RECORDS FOR THIS TICKET NUMBER
      *
     C                   EXSR      $DET
      *
     C                   ENDIF                                                  IF FOUND
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD ERROR MESSAGE OF NO DATA FOUND.
      *
     C     HDRRN1        IFEQ      0
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
      * SET THE PAGE OF THE SUBFILE TO DISPLAY TO THE USER
      *
     C     RESET         IFEQ      YES
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   ELSE
     C                   Z-ADD     1             HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DET - RETRIEVE DETAIL FEED RECORDS
      *----------------------------------------------------------------
      *
     C     $DET          BEGSR
      *
     C     K2P038        SETLL     HSP038
      *
     C     *IN92         DOUEQ     *ON                                          DO FILL LOOP
     C     K2P038        READE     HSP038                                 92
     C     *IN92         IFEQ      *OFF                                         IF NOT EOF
      *
     C                   Z-ADD     0             DFAM
     C                   Z-ADD     FDFSCD        DFFSCD
     C                   MOVEL     FDBNCD        DFBNCD
     C                   MOVEL     FDRNCD        DFRNCD
     C                   MOVEL     FDADCD        DFADCD
     C                   Z-ADD     FDFDLB        DFFDLB
     C                   ADD       FDFDLB        C1FDLB
      *
     C                   ADD       FDINAM        DFAM
     C                   ADD       FDMDAM        DFAM
     C                   ADD       FDMFAM        DFAM
     C                   ADD       DFAM          C1AM
      *
      * RETRIEVE THE ALPHA HOG GROUP CODE TO DISPLAY
      *
     C     FDHGSN        CHAIN     HSL034D                            94
     C     *IN94         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGCD
     C                   ELSE
     C                   MOVE      *BLANK        DFHGCD
     C                   ENDIF
      *
     C                   ADD       1             HDRRN1
     C                   WRITE     HP720S1
     C                   SETON                                        81
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO FILL LOOP
      *
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * KEY FOR FILE HSL037E-FEED TICKET HEADING
      *
     C     K1L037        KLIST
     C                   KFLD                    C1FMBO
     C                   KFLD                    C1RTNO
      *
      * KEY FOR FILE HSP038-FEED TICKET DETAIL
      *
     C     K2P038        KLIST
     C                   KFLD                    C1FMBO
     C                   KFLD                    FHTKNO
     C                   KFLD                    FHTRCD
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    C1FMBO
     C                   PARM                    C1FSCD
     C                   PARM                    C1RTNO
     C                   PARM                    C1VINO
     C                   PARM                    RTNCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            ERRFLG            1
     C                   MOVEL     NO            NOTFLG            1
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    IDFLOW        WKFLOW                         SFL POSITION
      *
      * ALPHA FIELDS FOR USE AS PARMS
      *
     C                   MOVE      *BLANK        XXTKNO            7
      *
      *  RETRIEVE THE NAME OF THE FARM TO DISPLAY
      *
     C     C1FSCD        CHAIN     HSP018                             91
     C     *IN91         IFEQ      *OFF
     C                   MOVEL     FSFSNM        C1FSNM
     C                   ELSE
     C                   MOVEL     'UNKNOWN'     C1FSNM
     C                   ENDIF
      *
      *  RETRIEVE THE NAME OF THE FEED MILL BUSINESS OFFICE
      *
     C     C1FMBO        CHAIN     HSP009                             91
     C     *IN91         IFEQ      *OFF
     C                   MOVEL     BOBODS        C1BODS
     C                   ELSE
     C                   MOVEL     'UNKNOWN'     C1BODS
     C                   ENDIF
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
     C                   ENDSR
      /EJECT
