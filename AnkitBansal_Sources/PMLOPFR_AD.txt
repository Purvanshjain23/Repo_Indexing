// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMLOPFR
// ?Date: 14.08.2025 Time: 12:05:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
//?E3422 JJH 09/30/14 - Print Customer Purchase Order Nbr from the
//? Order Header TRG file on the Customer Accrual Statement.
//? Changed the report from Portrait to Landscape
EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.Page Number USR = CON.*ZERO
PAR.Page_Number_USR = *ZERO;

// PAR.New Customer Status = CND.yes
PAR.New_Customer_Status = 'Y';

//?USER: Process top of page

CASE;

// IF PAR.New Customer Status is yes
IF PAR.New_Customer_Status = 'Y';

// TOP.Page Number USR = CON.1
TOP_Page_Number_USR = 1;

// PAR.New Customer Status = CND.no
PAR.New_Customer_Status = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Page Number USR = PAR.Page Number USR + CON.1
TOP_Page_Number_USR = PAR.Page_Number_USR + 1;

ENDIF;

// PAR.Page Number USR = TOP.Page Number USR
PAR.Page_Number_USR = TOP_Page_Number_USR;

// TOP.Accounting Period = PAR.Accounting Period
TOP_Accounting_Period = PAR.Accounting_Period;

// TOP.Accounting Year = PAR.Accounting Year
TOP_Accounting_Year = PAR.Accounting_Year;

// TOP.Accrual Type = PAR.Accrual Type
TOP_Accrual_Type = PAR.Accrual_Type;

// TOP.Condition Desc. 1  USR = Condition name of TOP.Accrual Type
TOP_Condition_Desc_1_USR = RTVCND(TOP_Accrual_Type);

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(TOP_Company_Name_DRV);
PARAMETER(TOP_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(Rtv Period Start/End  RT) TYPE(RTVOBJ) FILE(CAATREP)           AC1666753;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Accounting_Year);
PARAMETER(TOP_Accounting_Period);
PARAMETER(TOP_Period_Beginning_Date);
PARAMETER(TOP_Period_Ending_Date);
{
 //?USER: Initialize routine

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // PAR.Period Beginning Date = DB1.Period Beginning Date
 PAR.Period_Beginning_Date = DB1.Period_Beginning_Date;

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 ENDIF;

 // PAR.Period Ending Date = DB1.Period Ending Date
 PAR.Period_Ending_Date = DB1.Period_Ending_Date;

}


//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

CASE;

IF NEW Ship_To_Customer;
EXECUTE FUNCTION(RTV Name.Address,Fax   RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1449132;
PARAMETER(CUR.Ship_To_Customer);
PARAMETER(CUR.Customer_Name);
PARAMETER(CUR.Address_Line_1);
PARAMETER(CUR.Address_Line_2);
PARAMETER(CUR.City);
PARAMETER(CUR.State_Code);
PARAMETER(CUR.Zip_Postal_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CUR.Condition Desc. 1  USR = Condition name of CUR.Accrual Type
CUR.Condition_Desc_1_USR = RTVCND(CUR.Accrual_Type);

// Print Ship To Customer header format
PRINT Ship To Customer header format;

ENDIF;

// SUPPRESSED PRINT HDA Actual Ship Date header format

// SUPPRESSED PRINT Order Number header format

// SUPPRESSED PRINT Order Sequence Number header format

// SUPPRESSED PRINT Order Secondary Line Seq header format

// SUPPRESSED PRINT Sequence Number header format

//?USER: On print of detail format

// CUR.USR Weight Billed = CUR.Weight Billed
CUR.USR_Weight_Billed = CUR.Weight_Billed;

EXECUTE FUNCTION(Rtv Qty/Invoice       RT) TYPE(RTVOBJ) FILE(OMHSTPP)           AC1858103;
PARAMETER(NXT.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Order_Sequence_Number);
PARAMETER(CUR.Order_Secondary_Line_Seq);
PARAMETER(CUR.USR_Quantity_Ordered);
PARAMETER(CUR.Invoice_Number);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?E3422 JJH 09/30/14 - Print Customer Purchase Order Nbr from the
//? Order Header TRG file on the Customer Accrual Statement.
EXECUTE FUNCTION(RTV All Header Fields  RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1326885;
PARAMETER(NXT.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(NLL.Order_Type_Sales);
PARAMETER(NLL.AR_Customer_Number);
PARAMETER(NLL.Ship_To_Customer);
PARAMETER(NLL.Ship_To_Name);
PARAMETER(NLL.Ship_To_Address_Line_1);
PARAMETER(NLL.Ship_To_Address_Line_2);
PARAMETER(NLL.Ship_To_Address_Line_3);
PARAMETER(NLL.Ship_To_City);
PARAMETER(NLL.Ship_To_State_Code);
PARAMETER(NLL.Ship_To_Zip_Postal_Code);
PARAMETER(NLL.Bill_to_Customer);
PARAMETER(NLL.Bill_to_Name);
PARAMETER(NLL.Bill_to_Address_Line_1);
PARAMETER(NLL.Bill_to_Address_Line_2);
PARAMETER(NLL.Bill_to_Address_Line_3);
PARAMETER(NLL.Bill_to_City);
PARAMETER(NLL.Bill_to_State_Code);
PARAMETER(NLL.Bill_to_Zip_Postal_Code);
PARAMETER(CUR.Customer_Purchase_Order_#);
PARAMETER(NLL.Order_Date);
PARAMETER(NLL.Requested_Ship_Date);
PARAMETER(NLL.Actual_Shipped_Date);
PARAMETER(NLL.Cancel_Date);
PARAMETER(NLL.Terms_Code);
PARAMETER(NLL.Special_Instructions);
PARAMETER(NLL.Special_Instructions_2);
PARAMETER(NLL.Carrier_Code);
PARAMETER(NLL.Comment_Print_Acknowledge);
PARAMETER(NLL.Comment_Print_Inv_Cr_Memo);
PARAMETER(NLL.Comment_Print_Pick_Slip);
PARAMETER(NLL.Comment_Print_Ship_Doc);
PARAMETER(NLL.Reason_Code);
PARAMETER(NLL.Order_in_Use);
PARAMETER(NLL.Header_Status);
PARAMETER(NLL.Header_Status_Last);
PARAMETER(NLL.Order_Type_Print_Status);
PARAMETER(NLL.Scheduled_Ship_Date);
PARAMETER(NLL.User_Original_Entry);
PARAMETER(NLL.Date_of_Original_Entry);
PARAMETER(NLL.Order_Value_Total);
PARAMETER(NLL.Order_Weight_Total);
PARAMETER(NLL.Credit_Hold);
PARAMETER(NLL.Production_Hold);
PARAMETER(NLL.New_Customer_Hold);
PARAMETER(NLL.Requested_Delivery_Date);
PARAMETER(NLL.Requested_Delivery_Time);
PARAMETER(NLL.Accounts_Receiv_Ent_1);
PARAMETER(NLL.Accounts_Receiv_Ent_2);
PARAMETER(NLL.Load_ID);
PARAMETER(NLL.Absorbed_Freight_Rate_CWT);
PARAMETER(NLL.Rated_Freight);
PARAMETER(NLL.LTL_Flag);
PARAMETER(NLL.Price_Audit);
PARAMETER(NLL.Price_Status);
PARAMETER(NLL.Shipping_Method);
PARAMETER(NLL.Export_Status);
PARAMETER(NLL.Palletize);
PARAMETER(NLL.Shrink_Wrap);
PARAMETER(NLL.Slip_Sheet);
PARAMETER(NLL.Age_Code);
PARAMETER(NLL.Reefer_Temperature);
PARAMETER(NLL.Load_Type);
PARAMETER(NLL.Attach_to_Invoice_Number);
PARAMETER(NLL.Load_Plan_Order);
PARAMETER(NLL.Print_Pick_Slip);
PARAMETER(NLL.Resell_Reference_Number);
PARAMETER(NLL.Special_Comment_1);
PARAMETER(NLL.Special_Comment_2);
PARAMETER(NLL.Affect_Auto_Accruals);
PARAMETER(NLL.Sales_Route_Code);
PARAMETER(NLL.Manager_Level_Code);
PARAMETER(NLL.VP_Level_Code);
PARAMETER(NLL.Attach_to_Order_Number);
PARAMETER(NLL.Reason_for_Price_Audit);
PARAMETER(NLL.Invoice_Number);
PARAMETER(NLL.Invoice_Suffix);
PARAMETER(NLL.Invoice_Date);
PARAMETER(NLL.Event_Code);
PARAMETER(NLL.Trans_Contol_AS400_Plant);
PARAMETER(NLL.Modified_Flag);
PARAMETER(NLL.A_R_order_Value_Total);
PARAMETER(NLL.Billing_Activity_Type);
PARAMETER(NLL.Block_Order_Flag);
PARAMETER(NLL.Order_Certification_Flag);
PARAMETER(NLL.EDI_Status_1);
PARAMETER(NLL.EDI_Status_2);
PARAMETER(NLL.EDI_Status_3);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Process after print of detail format

NXT.Extended_amount_SUM = SUM(CUR.Extended_Amount);

//?USER: Print required level totals

// SUPPRESSED PRINT Sequence Number totals format

// SUPPRESSED PRINT Order Secondary Line Seq totals format

// SUPPRESSED PRINT Order Sequence Number totals format

// SUPPRESSED PRINT Order Number totals format

// SUPPRESSED PRINT HDA Actual Ship Date totals format

CASE;

IF NEW Ship_To_Customer;
// PAR.New Customer Status = CND.yes
PAR.New_Customer_Status = 'Y';

// Print Ship To Customer totals format
PRINT Ship To Customer totals format;

ENDIF;

// SUPPRESSED PRINT Company Number totals format

