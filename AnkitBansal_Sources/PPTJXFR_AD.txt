// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPTJXFR
// ?Date: 14.08.2025 Time: 03:41:53
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Change the "to" company number to the newly created company
//?Read the customer and then Company 360, & then create 363 & 364
EXECUTE FUNCTION(Cnv Comp Cust  -  Co new) TYPE(RTVOBJ) FILE(CABBREP)           AC1753443;
{
 //?USER: Process Data record

 //?Reading the Customer and now go after the company customer - 360
 // LCL.Company Number = CON.360
 LCL.Company_Number = 360;

 EXECUTE FUNCTION(Cnv Co/Customer 360-newRT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1753344;
 PARAMETER(LCL.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Customer_Name);
 PARAMETER(DB1.Address_Line_1);
 PARAMETER(DB1.Address_Line_2);
 PARAMETER(DB1.Address_Line_3);
 PARAMETER(DB1.City);
 PARAMETER(DB1.State_Code);
 PARAMETER(DB1.County_Code);
 PARAMETER(DB1.Zip_Postal_Code);
 PARAMETER(DB1.Telephone_Number_FF);
 PARAMETER(DB1.Fax_Number_FF);
 PARAMETER(DB1.Alpha_Search);
 PARAMETER(DB1.Federal_Tax_Id);
 PARAMETER(DB1.New_Customer_Status);
 PARAMETER(DB1.SIC_Number);
 PARAMETER(DB1.D_B_Number);
 PARAMETER(DB1.D_B_Rating);
 PARAMETER(DB1.Date_of_D_B_Rating);
 PARAMETER(DB1.Credit_Line_Expire_Date);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Parent_Customer);
 PARAMETER(DB1.Credit_Check_AR_Customer);
 PARAMETER(DB1.Credit_Check_Parent_Cust);
 PARAMETER(DB1.Country_Code);
 PARAMETER(DB1.EDI_Invoice_Sts);
 PARAMETER(DB1.Order_Entry_Hold);
 PARAMETER(DB1.Parent_Credit_Limit);
 PARAMETER(DB1.AR_Credit_Limit);
 PARAMETER(DB1.Order_Entry_Hold_Date);
 PARAMETER(DB1.Ship_To_Customer_Flag);
 PARAMETER(DB1.Field_vs_In_House_flag);
 PARAMETER(DB1.Email_When_Order_Shipped);
 PARAMETER(DB1.Print_Invoice_Sts);
 PARAMETER(DB1.Item_Reference_Status);
 PARAMETER(DB1.Statement_Print_Frequency);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Rtv Account info-Co/ShpRT) TYPE(RTVOBJ) FILE(OMGZCPP)          AC1708801;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(WRK.Extra_Amount_1);
  PARAMETER(WRK.Extra_Number_1);
  PARAMETER(WRK.Extra_Status_1);
  PARAMETER(WRK.SH_Expense_Bucket);
  PARAMETER(WRK.G_L_Sub_Account);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   // PAR.G/L Account for Dr = CON.*BLANK
   PAR.SH_Expense_Bucket = *BLANK;

   // PAR.G/L Sub Acount for Dr = CON.*BLANK
   PAR.G_L_Sub_Account = *BLANK;

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Read 360 and now see if we need to create 362 and if so create 362
  //?** Missoula
  // WRK.Company Number = CON.363
  WRK.Company_Number = 363;

  // WRK.Warehouse Code = CON.MS1
  WRK.Warehouse_Code = 'MS1';

  // WRK.Default Shipping Co Sts = CND.No
  WRK.Default_Shipping_Co_Sts = 'N';

  // WRK.Absorbed Freight Rate = CON.*ZERO
  WRK.Absorbed_Freight_Rate_CWT = *ZERO;

  EXECUTE FUNCTION(Cnv Company Cust new) TYPE(RTVOBJ) FILE(CAEOREP)               AC1753446;
  PARAMETER(WRK.Company_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Broker);
  PARAMETER(DB1.P_O_Required_Flag);
  PARAMETER(DB1.Deliver_after_time);
  PARAMETER(DB1.Deliver_before_time);
  PARAMETER(DB1.Alt_Remittance_Flag);
  PARAMETER(DB1.Type_Code);
  PARAMETER(WRK.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Mileage_To_Customer);
  PARAMETER(DB1.Co_Cust_Overage_Rate_CWT);
  PARAMETER(DB1.Age_Code);
  PARAMETER(WRK.Warehouse_Code);
  PARAMETER(DB1.Outside_Warehouse_Flag);
  PARAMETER(DB1.Customer_Group_Code);
  PARAMETER(DB1.Customer_Group_Code_2);
  PARAMETER(DB1.G_L_Code);
  PARAMETER(DB1.Commodity_Market_Code);
  PARAMETER(DB1.Credit_Contact_Name);
  PARAMETER(DB1.Credit_Contact_Telephone);
  PARAMETER(DB1.Credit_Contact_Bus_Title);
  PARAMETER(DB1.Credit_Contact_Fax_Number);
  PARAMETER(DB1.Allow_Man_Qt_WO_Approval);
  PARAMETER(DB1.Fax_Invoice_Flag);
  PARAMETER(DB1.Fax_Invoice_Fax_Number);
  PARAMETER(DB1.Fax_Invoice_Contact_Name);
  PARAMETER(DB1.Distributor);
  PARAMETER(WRK.Default_Shipping_Co_Sts);
  PARAMETER(DB1.Ord_Ent_Default_Sls_Rte);
  PARAMETER(DB1.Bypass_DDt_Delay_w_Invcng);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(PAR.AR_Customer_Number);
  PARAMETER(WRK.Extra_Amount_1);
  PARAMETER(WRK.Extra_Number_1);
  PARAMETER(WRK.Extra_Status_1);
  PARAMETER(WRK.SH_Expense_Bucket);
  PARAMETER(WRK.G_L_Sub_Account);
  {
   //?USER: Processing if Data record not found

   //?Have created this RTV to only create record
   EXECUTE FUNCTION(CRT Co/Cust w/G/L PlnCVCR) TYPE(CRTOBJ) FILE(CAEOREP)          AC1753472;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Ship_To_Customer);
   PARAMETER(PAR.Terms_Code);
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(PAR.Special_Instructions_2);
   PARAMETER(PAR.Special_Instructions);
   PARAMETER(PAR.Carrier_Code);
   PARAMETER(PAR.Broker);
   PARAMETER(PAR.P_O_Required_Flag);
   PARAMETER(PAR.Deliver_after_time);
   PARAMETER(PAR.Deliver_before_time);
   PARAMETER(PAR.Alt_Remittance_Flag);
   PARAMETER(PAR.Type_Code);
   PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
   PARAMETER(PAR.Mileage_To_Customer);
   PARAMETER(PAR.Co_Cust_Overage_Rate_CWT);
   PARAMETER(PAR.Age_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Outside_Warehouse_Flag);
   PARAMETER(PAR.Customer_Group_Code);
   PARAMETER(PAR.Customer_Group_Code_2);
   PARAMETER(PAR.G_L_Code);
   PARAMETER(PAR.Commodity_Market_Code);
   PARAMETER(PAR.Credit_Contact_Name);
   PARAMETER(PAR.Credit_Contact_Telephone);
   PARAMETER(PAR.Credit_Contact_Bus_Title);
   PARAMETER(PAR.Credit_Contact_Fax_Number);
   PARAMETER(PAR.Allow_Man_Qt_WO_Approval);
   PARAMETER(PAR.Fax_Invoice_Flag);
   PARAMETER(PAR.Fax_Invoice_Fax_Number);
   PARAMETER(PAR.Fax_Invoice_Contact_Name);
   PARAMETER(PAR.Distributor);
   PARAMETER(PAR.Default_Shipping_Co_Sts);
   PARAMETER(PAR.Ord_Ent_Default_Sls_Rte);
   PARAMETER(PAR.Bypass_DDt_Delay_w_Invcng);
   PARAMETER(PAR.EDI_Status_1);
   PARAMETER(PAR.EDI_Status_2);
   PARAMETER(PAR.EDI_Status_3);
   PARAMETER(PAR.Record_Status);
   PARAMETER(PAR.Extra_Amount_1);
   PARAMETER(PAR.Extra_Number_1);
   PARAMETER(PAR.Extra_Status_1);
   PARAMETER(PAR.SH_Expense_Bucket);
   PARAMETER(PAR.G_L_Sub_Account);
   {
    //?USER: Processing before Data update

    // DB1.Age Code = CND.Blank
    DB1.Age_Code = *BLANK;

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

    // LCL.A/R Customer Number = CND.equal to zero
    LCL.AR_Customer_Number = *ZERO;

    //?USER: Processing after Data update

    EXECUTE FUNCTION(CHG OM Company/Cust    CH) TYPE(CHGOBJ) FILE(OMGZCPP)          AC1214274;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Ship_To_Customer);
    PARAMETER(PAR.Extra_Amount_1);
    PARAMETER(PAR.Extra_Number_1);
    PARAMETER(PAR.Extra_Status_1);
    PARAMETER(PAR.SH_Expense_Bucket);
    PARAMETER(PAR.G_L_Sub_Account);
    PARAMETER(DB1.EDI_Status_1);
    PARAMETER(DB1.EDI_Status_2);
    PARAMETER(DB1.EDI_Status_3);
    {
     //?USER: Processing before Data read

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

     //?USER: Processing if Data record not found

     EXECUTE FUNCTION(CRT OM Company/Cust    CR) TYPE(CRTOBJ) FILE(OMGZCPP)          AC1214273;
     PARAMETER(PAR.Company_Number);
     PARAMETER(PAR.Ship_To_Customer);
     PARAMETER(PAR.Extra_Amount_1);
     PARAMETER(PAR.Extra_Number_1);
     PARAMETER(PAR.Extra_Status_1);
     PARAMETER(PAR.SH_Expense_Bucket);
     PARAMETER(PAR.G_L_Sub_Account);
     PARAMETER(PAR.EDI_Status_1);
     PARAMETER(PAR.EDI_Status_2);
     PARAMETER(PAR.EDI_Status_3);
     {
      //?USER: Processing before Data update

      EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
      {
       //?Execute internal function

       // PAR.Job Time = JOB.*Job time
       PAR.Job_Time = JOB.*Job_time;

       // PAR.User Id = JOB.*USER
       PAR.User_Id = JOB.*USER;

       // PAR.Job Name = JOB.*JOB
       PAR.Job_Name = JOB.*JOB;

       // PAR.Job Date = JOB.*Job date
       PAR.Job_Date = JOB.*Job_date;

      }

     }

    }

   }

   //?Automatically create A/R Summary after new Company/Customer
   // WRK.Current Month = JOB.*Job date *MONTH
   WRK.Current_Month = DATEDTLS(JOB.*Job_date 'MO' 1111111 'NONE' 'N' 1);

   EXECUTE FUNCTION(RTV Salesman Code      RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1284971;
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(LCL.Salesperson_Code);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?Create A/R Summary for A/R Customers only
   CASE;

   // IF PAR.Ship To Customer EQ PAR.A/R Customer Number
   IF PAR.Ship_To_Customer = PAR.AR_Customer_Number;

   EXECUTE FUNCTION(CRT A/R Summary        CR) TYPE(CRTOBJ) FILE(ARBCREP)          AC1109013;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Ship_To_Customer);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(LCL.Salesperson_Code);
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(WRK.Current_Month);
   PARAMETER(PAR.EDI_Status_1);
   PARAMETER(PAR.EDI_Status_2);
   PARAMETER(PAR.EDI_Status_3);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   ENDIF;

   //?USER: Process Data record

   //?if the record does not exits - this will stop error on record
   //?exits
   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   QUIT;

  }

  //?** Salt Lake City
  // WRK.Company Number = CON.364
  WRK.Company_Number = 364;

  // WRK.Warehouse Code = CON.SL1
  WRK.Warehouse_Code = 'SL1';

  // WRK.Default Shipping Co Sts = CND.No
  WRK.Default_Shipping_Co_Sts = 'N';

  // WRK.Absorbed Freight Rate = CON.*ZERO
  WRK.Absorbed_Freight_Rate_CWT = *ZERO;

  EXECUTE FUNCTION(Cnv Company Cust new) TYPE(RTVOBJ) FILE(CAEOREP)               AC1753446;
  PARAMETER(WRK.Company_Number);
  PARAMETER(DB1.Ship_To_Customer);
  PARAMETER(DB1.Terms_Code);
  PARAMETER(DB1.Sales_Route_Code);
  PARAMETER(DB1.Special_Instructions_2);
  PARAMETER(DB1.Special_Instructions);
  PARAMETER(DB1.Carrier_Code);
  PARAMETER(DB1.Broker);
  PARAMETER(DB1.P_O_Required_Flag);
  PARAMETER(DB1.Deliver_after_time);
  PARAMETER(DB1.Deliver_before_time);
  PARAMETER(DB1.Alt_Remittance_Flag);
  PARAMETER(DB1.Type_Code);
  PARAMETER(WRK.Absorbed_Freight_Rate_CWT);
  PARAMETER(DB1.Mileage_To_Customer);
  PARAMETER(DB1.Co_Cust_Overage_Rate_CWT);
  PARAMETER(DB1.Age_Code);
  PARAMETER(WRK.Warehouse_Code);
  PARAMETER(DB1.Outside_Warehouse_Flag);
  PARAMETER(DB1.Customer_Group_Code);
  PARAMETER(DB1.Customer_Group_Code_2);
  PARAMETER(DB1.G_L_Code);
  PARAMETER(DB1.Commodity_Market_Code);
  PARAMETER(DB1.Credit_Contact_Name);
  PARAMETER(DB1.Credit_Contact_Telephone);
  PARAMETER(DB1.Credit_Contact_Bus_Title);
  PARAMETER(DB1.Credit_Contact_Fax_Number);
  PARAMETER(DB1.Allow_Man_Qt_WO_Approval);
  PARAMETER(DB1.Fax_Invoice_Flag);
  PARAMETER(DB1.Fax_Invoice_Fax_Number);
  PARAMETER(DB1.Fax_Invoice_Contact_Name);
  PARAMETER(DB1.Distributor);
  PARAMETER(WRK.Default_Shipping_Co_Sts);
  PARAMETER(DB1.Ord_Ent_Default_Sls_Rte);
  PARAMETER(DB1.Bypass_DDt_Delay_w_Invcng);
  PARAMETER(DB1.EDI_Status_1);
  PARAMETER(DB1.EDI_Status_2);
  PARAMETER(DB1.EDI_Status_3);
  PARAMETER(DB1.Record_Status);
  PARAMETER(PAR.AR_Customer_Number);
  PARAMETER(WRK.Extra_Amount_1);
  PARAMETER(WRK.Extra_Number_1);
  PARAMETER(WRK.Extra_Status_1);
  PARAMETER(WRK.SH_Expense_Bucket);
  PARAMETER(WRK.G_L_Sub_Account);
  {
   //?USER: Processing if Data record not found

   //?Have created this RTV to only create record
   EXECUTE FUNCTION(CRT Co/Cust w/G/L PlnCVCR) TYPE(CRTOBJ) FILE(CAEOREP)          AC1753472;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Ship_To_Customer);
   PARAMETER(PAR.Terms_Code);
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(PAR.Special_Instructions_2);
   PARAMETER(PAR.Special_Instructions);
   PARAMETER(PAR.Carrier_Code);
   PARAMETER(PAR.Broker);
   PARAMETER(PAR.P_O_Required_Flag);
   PARAMETER(PAR.Deliver_after_time);
   PARAMETER(PAR.Deliver_before_time);
   PARAMETER(PAR.Alt_Remittance_Flag);
   PARAMETER(PAR.Type_Code);
   PARAMETER(PAR.Absorbed_Freight_Rate_CWT);
   PARAMETER(PAR.Mileage_To_Customer);
   PARAMETER(PAR.Co_Cust_Overage_Rate_CWT);
   PARAMETER(PAR.Age_Code);
   PARAMETER(PAR.Warehouse_Code);
   PARAMETER(PAR.Outside_Warehouse_Flag);
   PARAMETER(PAR.Customer_Group_Code);
   PARAMETER(PAR.Customer_Group_Code_2);
   PARAMETER(PAR.G_L_Code);
   PARAMETER(PAR.Commodity_Market_Code);
   PARAMETER(PAR.Credit_Contact_Name);
   PARAMETER(PAR.Credit_Contact_Telephone);
   PARAMETER(PAR.Credit_Contact_Bus_Title);
   PARAMETER(PAR.Credit_Contact_Fax_Number);
   PARAMETER(PAR.Allow_Man_Qt_WO_Approval);
   PARAMETER(PAR.Fax_Invoice_Flag);
   PARAMETER(PAR.Fax_Invoice_Fax_Number);
   PARAMETER(PAR.Fax_Invoice_Contact_Name);
   PARAMETER(PAR.Distributor);
   PARAMETER(PAR.Default_Shipping_Co_Sts);
   PARAMETER(PAR.Ord_Ent_Default_Sls_Rte);
   PARAMETER(PAR.Bypass_DDt_Delay_w_Invcng);
   PARAMETER(PAR.EDI_Status_1);
   PARAMETER(PAR.EDI_Status_2);
   PARAMETER(PAR.EDI_Status_3);
   PARAMETER(PAR.Record_Status);
   PARAMETER(PAR.Extra_Amount_1);
   PARAMETER(PAR.Extra_Number_1);
   PARAMETER(PAR.Extra_Status_1);
   PARAMETER(PAR.SH_Expense_Bucket);
   PARAMETER(PAR.G_L_Sub_Account);
   {
    //?USER: Processing before Data update

    // DB1.Age Code = CND.Blank
    DB1.Age_Code = *BLANK;

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

    // LCL.A/R Customer Number = CND.equal to zero
    LCL.AR_Customer_Number = *ZERO;

    //?USER: Processing after Data update

    EXECUTE FUNCTION(CHG OM Company/Cust    CH) TYPE(CHGOBJ) FILE(OMGZCPP)          AC1214274;
    PARAMETER(DB1.Company_Number);
    PARAMETER(DB1.Ship_To_Customer);
    PARAMETER(PAR.Extra_Amount_1);
    PARAMETER(PAR.Extra_Number_1);
    PARAMETER(PAR.Extra_Status_1);
    PARAMETER(PAR.SH_Expense_Bucket);
    PARAMETER(PAR.G_L_Sub_Account);
    PARAMETER(DB1.EDI_Status_1);
    PARAMETER(DB1.EDI_Status_2);
    PARAMETER(DB1.EDI_Status_3);
    {
     //?USER: Processing before Data read

     EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
     {
      //?Execute internal function

      // PAR.Job Time = JOB.*Job time
      PAR.Job_Time = JOB.*Job_time;

      // PAR.User Id = JOB.*USER
      PAR.User_Id = JOB.*USER;

      // PAR.Job Name = JOB.*JOB
      PAR.Job_Name = JOB.*JOB;

      // PAR.Job Date = JOB.*Job date
      PAR.Job_Date = JOB.*Job_date;

     }

     //?USER: Processing if Data record not found

     EXECUTE FUNCTION(CRT OM Company/Cust    CR) TYPE(CRTOBJ) FILE(OMGZCPP)          AC1214273;
     PARAMETER(PAR.Company_Number);
     PARAMETER(PAR.Ship_To_Customer);
     PARAMETER(PAR.Extra_Amount_1);
     PARAMETER(PAR.Extra_Number_1);
     PARAMETER(PAR.Extra_Status_1);
     PARAMETER(PAR.SH_Expense_Bucket);
     PARAMETER(PAR.G_L_Sub_Account);
     PARAMETER(PAR.EDI_Status_1);
     PARAMETER(PAR.EDI_Status_2);
     PARAMETER(PAR.EDI_Status_3);
     {
      //?USER: Processing before Data update

      EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
      {
       //?Execute internal function

       // PAR.Job Time = JOB.*Job time
       PAR.Job_Time = JOB.*Job_time;

       // PAR.User Id = JOB.*USER
       PAR.User_Id = JOB.*USER;

       // PAR.Job Name = JOB.*JOB
       PAR.Job_Name = JOB.*JOB;

       // PAR.Job Date = JOB.*Job date
       PAR.Job_Date = JOB.*Job_date;

      }

     }

    }

   }

   //?Automatically create A/R Summary after new Company/Customer
   // WRK.Current Month = JOB.*Job date *MONTH
   WRK.Current_Month = DATEDTLS(JOB.*Job_date 'MO' 1111111 'NONE' 'N' 1);

   EXECUTE FUNCTION(RTV Salesman Code      RT) TYPE(RTVOBJ) FILE(PDJEREP)          AC1284971;
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(LCL.Salesperson_Code);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   //?Create A/R Summary for A/R Customers only
   CASE;

   // IF PAR.Ship To Customer EQ PAR.A/R Customer Number
   IF PAR.Ship_To_Customer = PAR.AR_Customer_Number;

   EXECUTE FUNCTION(CRT A/R Summary        CR) TYPE(CRTOBJ) FILE(ARBCREP)          AC1109013;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Ship_To_Customer);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(*ZERO);
   PARAMETER(LCL.Salesperson_Code);
   PARAMETER(PAR.Sales_Route_Code);
   PARAMETER(WRK.Current_Month);
   PARAMETER(PAR.EDI_Status_1);
   PARAMETER(PAR.EDI_Status_2);
   PARAMETER(PAR.EDI_Status_3);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
    PARAMETER(DB1.Job_Time);
    PARAMETER(DB1.User_Id);
    PARAMETER(DB1.Job_Name);
    PARAMETER(DB1.Job_Date);
    {
     //?Execute internal function

     // PAR.Job Time = JOB.*Job time
     PAR.Job_Time = JOB.*Job_time;

     // PAR.User Id = JOB.*USER
     PAR.User_Id = JOB.*USER;

     // PAR.Job Name = JOB.*JOB
     PAR.Job_Name = JOB.*JOB;

     // PAR.Job Date = JOB.*Job date
     PAR.Job_Date = JOB.*Job_date;

    }

   }

   ENDIF;

   //?USER: Process Data record

   //?if the record does not exits - this will stop error on record
   //?exits
   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   QUIT;

  }

 }

}


