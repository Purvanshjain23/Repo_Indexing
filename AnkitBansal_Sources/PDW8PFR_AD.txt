// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDW8PFR
// ?Date: 14.08.2025 Time: 12:04:42
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('A/R');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.USR Work Amount 1 = CND.Eq *Zero
PAR.USR_Work_Amount_1 = *ZERO;

//?USER: Record selection processing

CASE;

// IF DB1.Invoice Suffix is On Account Cash
IF DB1.Invoice_Suffix = 'OA';

// PGM.*Record selected = CND.*YES
PGM.*Record_selected = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

EXECUTE FUNCTION(Rtv A/R Header OA Tm  RT) TYPE(RTVOBJ) FILE(PPA4CPP)           AC1728766;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Invoice_Number);
PARAMETER(DB1.Invoice_Suffix);
PARAMETER(WRK.Deposit_Time);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Deposit Time NE PAR.Deposit Time
IF WRK.Deposit_Time <> PAR.Deposit_Time;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Print required level headings

CASE;

IF NEW Bank_Code;
EXECUTE FUNCTION(RTV Bank Description   RT) TYPE(RTVOBJ) FILE(CAEBREP)          AC1333216;
PARAMETER(CUR.Bank_Code);
PARAMETER(CUR.Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Print Bank Code header format
PRINT Bank Code header format;

ENDIF;

CASE;

IF NEW Last_Payment_Date;
// CUR.Deposit Time = PAR.Deposit Time
CUR.Deposit_Time = PAR.Deposit_Time;

// Print Last Payment Date header format
PRINT Last Payment Date header format;

ENDIF;

CASE;

IF NEW AR_Customer_Number;
EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(CUR.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Print A/R Customer Number header format
PRINT A/R Customer Number header format;

ENDIF;

// SUPPRESSED PRINT A/R Check Number header format

//?USER: Process before print of detail format

// CUR.Remaining Balance Due = PAR.USR Work Amount 1 - CUR.Remaining Balance Due
CUR.Remaining_Balance_Due = PAR.USR_Work_Amount_1 - CUR.Remaining_Balance_Due;

//?USER: On print of detail format

// CUR.USR Amount Applied = CUR.Adjustment Amount + CUR.Amount Paid
CUR.USR_Amount_Applied = CUR.Adjustment_Amount + CUR.Amount_Paid;

// NXT.USR Customer Total = NXT.USR Customer Total + CUR.Remaining Balance Due
NXT.USR_Customer_Total = NXT.USR_Customer_Total + CUR.Remaining_Balance_Due;

//?USER: Print required level totals

// SUPPRESSED PRINT A/R Check Number totals format

CASE;

IF NEW AR_Customer_Number;
// NXT.USR Final Total = NXT.USR Final Total + CUR.USR Customer Total
NXT.USR_Final_Total = NXT.USR_Final_Total + CUR.USR_Customer_Total;

// Print A/R Customer Number totals format
PRINT A/R Customer Number totals format;

ENDIF;

// SUPPRESSED PRINT Last Payment Date totals format

// SUPPRESSED PRINT Bank Code totals format

