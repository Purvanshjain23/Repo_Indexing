// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POT3DFR
// ?Date: 14.08.2025 Time: 03:39:01
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?modification history
DO;

//?RMC PFS019 8/31/06 print new prod schedule pla9pfr
//?RMC PFS019 9/14/06 put pgm name in print sched prompt
//?** 09/01/06 LJB L60831A - Pass the company# & whs code to
//?**   WW Product Availability
//?**
//?** 11/21/06 slm E00243  Replace f21 prompt with new prompt
//?that will create the belly & trim if user selects report
//?in addition the selection of the other reports
//?**
//?SLM fp1054 2/11/09 Rewrite PA, - Production Warehouse
//?key to file changed.
//?**
ENDDO;

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('P/S');
PARAMETER(WRK.Company_Number);
PARAMETER(CTL.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PGM.*Scan limit = CON.2000
PGM.*Scan_limit = 2000;

// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// WRK.Consumed Item Code = CTL.Consumed Item Code
WRK.Consumed_Item_Code = CTL.Consumed_Item_Code;

// CTL.PS Print On Schedule = CND.yes
CTL.PS_Print_On_Schedule = 'Y';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

ENDIF;

//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
PARAMETER(RCD.Company_Number);
PARAMETER('FRZTRMPROD');
PARAMETER(PAR.System_Value_Alpha);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// CTL.Base Frozen    USR = PAR.System Value Alpha
CTL.Base_Frozen_USR = PAR.System_Value_Alpha;

EXECUTE FUNCTION(Rtv Prd Sch Info   PS RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1294543;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Item_Description);
PARAMETER(RCD.UOM_Primary);
PARAMETER(PAR.Unit_Weight);
PARAMETER(WRK.Item_Structure_Class_Code);
PARAMETER(WRK.Item_Structure_Group_Code);
PARAMETER(WRK.Item_Structure_Type_Code);
PARAMETER(WRK.Item_Type_Code);
PARAMETER(WRK.Default_Warehouse);
PARAMETER(PAR.Fresh_Chilling_Time);
PARAMETER(WRK.Base_Conv_Loss_Item);
PARAMETER(WRK.Variety_Rendered_Cut);
PARAMETER(WRK.Credit_Item_Status);
PARAMETER(WRK.Std_Weight_Head_Var_Ren);
PARAMETER(WRK.Pieces_Per_Head);
PARAMETER(RCD.Department_Code);
PARAMETER(WRK.Group_for_Packaging);
PARAMETER(WRK.Seconds_Item);
PARAMETER(PAR.Piece_Count_Item);
PARAMETER(PAR.Pieces_Per_Bag);
PARAMETER(PAR.Bags_Per_Unit);
PARAMETER(RCD.PS_Export_Domestic);
PARAMETER(RCD.PS_Print_On_Schedule);
PARAMETER(WRK.Fresh_Inv_Allocation_Seq);
PARAMETER(WRK.Fresh_Sched_As_Ordered);
PARAMETER(WRK.Frozen_Inv_Allocation_Seq);
PARAMETER(RCD.Primal_Group_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(RTV Day and Week No.   RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1235065;
PARAMETER(RCD.Company_Number);
PARAMETER(CTL.Production_Date);
PARAMETER(WRK.Accounting_Period_Code);
PARAMETER(PAR.Day_of_Week);
PARAMETER(WRK.Week_Number);
{
 //?USER: Process Data record

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

 MOVE *ALL (To: PAR From: DB1);

}


//?If day of week is friday & no prod/no kill add sat ords to total
CASE;

// IF PAR.Day of Week is Friday
IF PAR.Day_of_Week = '6';

// WRK.Date Sat USR = CTL.Production Date + CON.1 *DAYS
WRK.Date_Sat_USR = DATEINCR(CTL.Production_Date 1 'DY' 1111111 'NONE' 'N' 1);

EXECUTE FUNCTION(Rtv Kill/Prod Day Sts RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1461011;
PARAMETER(RCD.Company_Number);
PARAMETER(WRK.Date_Sat_USR);
PARAMETER(PAR.Kill_Day_Status);
PARAMETER(PAR.Production_Day_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF PAR.Kill Day Status is no
IF PAR.Kill_Day_Status = 'N';

// AND PAR.Production Day Status is no
AND PAR.Production_Day_Status = 'N';

EXECUTE FUNCTION(RTV Order Qty & Wght 2 RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1495225;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Quantity_Ordered_USR);
PARAMETER(WRK.Weight_Ordered);
PARAMETER(CTL.Production_Date);
PARAMETER(WRK.Date_Sat_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Hdr Sts,BillActTy RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1946282;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Billing_Activity_Type);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF DB1.Scheduled Ship Date GT PAR.Date Sat USR
 IF DB1.Scheduled_Ship_Date > PAR.Date_Sat_USR;

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.Billing Activity Type is Invoice or Transfer
 IF LCL.Billing_Activity_Type = '1'/'4';

 // PAR.Quantity Ordered = PAR.Quantity Ordered + DB1.Quantity Ordered
 PAR.Quantity_Ordered = PAR.Quantity_Ordered + DB1.Quantity_Ordered;

 // PAR.Weight Ordered = PAR.Weight Ordered + DB1.Weight Ordered
 PAR.Weight_Ordered = PAR.Weight_Ordered + DB1.Weight_Ordered;

 ENDIF;

 ENDIF;

}


// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Order Qty & Weight RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1482221;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Quantity_Ordered_USR);
PARAMETER(WRK.Weight_Ordered);
PARAMETER(CTL.Production_Date);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Hdr Sts,BillActTy RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1946282;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Billing_Activity_Type);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Billing Activity Type is Invoice or Transfer
 IF LCL.Billing_Activity_Type = '1'/'4';

 // PAR.Quantity Ordered = PAR.Quantity Ordered + DB1.Quantity Ordered
 PAR.Quantity_Ordered = PAR.Quantity_Ordered + DB1.Quantity_Ordered;

 // PAR.Weight Ordered = PAR.Weight Ordered + DB1.Weight Ordered
 PAR.Weight_Ordered = PAR.Weight_Ordered + DB1.Weight_Ordered;

 ENDIF;

}


ENDIF;

//?If day of week is friday & no prod/no kill add sat ords to total
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(RTV Order Qty & Weight RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1482221;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Quantity_Ordered_USR);
PARAMETER(WRK.Weight_Ordered);
PARAMETER(CTL.Production_Date);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Hdr Sts,BillActTy RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1946282;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Header_Status);
 PARAMETER(LCL.Billing_Activity_Type);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.Billing Activity Type is Invoice or Transfer
 IF LCL.Billing_Activity_Type = '1'/'4';

 // PAR.Quantity Ordered = PAR.Quantity Ordered + DB1.Quantity Ordered
 PAR.Quantity_Ordered = PAR.Quantity_Ordered + DB1.Quantity_Ordered;

 // PAR.Weight Ordered = PAR.Weight Ordered + DB1.Weight Ordered
 PAR.Weight_Ordered = PAR.Weight_Ordered + DB1.Weight_Ordered;

 ENDIF;

}


ENDIF;

//?Remove Department, UOM, PA Quantity and Weight.  PPS073
// Weight Scheduled
RCD.Weight_Sched_Prod_USR = ( DB1.PS_Weight_Standard + DB1.PS_Weight_Prod_Adj )                    +
- DB1.PS_Weight_Converted;

// Pieces Scheduled
RCD.Pieces_Scheduled = ( DB1.PS_Pieces_Standard + DB1.PS_Pieces_Prod_Adj )                         +
- DB1.PS_Pieces_Converted;

//?Quantity Production
CASE;

// IF PAR.Piece Count Item is yes
IF PAR.Piece_Count_Item = 'Y';

// Quantity Production
RCD.Quantity_Production_USR = RCD.Pieces_Scheduled / ( PAR.Pieces_Per_Bag                          +
* PAR.Bags_Per_Unit 'H' ) 'H';

//?Quantity Production
// IF *OTHERWISE
IF *OTHERWISE;

// Quantity Production
RCD.Quantity_Production_USR = RCD.Weight_Sched_Prod_USR / PAR.Unit_Weight 'H';

ENDIF;

//?Add Actual Inventory, Actual Production and Position PPS073
EXECUTE FUNCTION(RTV On Hand Qty       RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC1517668;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Quantity_Inventory_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.On Hand U/M1 Summary = PAR.On Hand U/M1 Summary + DB1.On Hand U/M1 Summary
 PAR.On_Hand_UOM1_Summary = PAR.On_Hand_UOM1_Summary + DB1.On_Hand_UOM1_Summary;

}


EXECUTE FUNCTION(Rtv Actual Production RT) TYPE(RTVOBJ) FILE(CAB7CPP)           AC1377968;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Production_Date);
PARAMETER(WRK.Production_Weight_USR);
PARAMETER(RCD.Actual_Production_6_1_USR);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Production Weight USR = PAR.Production Weight USR + DB1.Transaction Weight
 PAR.Production_Weight_USR = PAR.Production_Weight_USR + DB1.Transaction_Weight;

 // PAR.Production Quantity USR = PAR.Production Quantity USR + DB1.Transaction Quantity
 PAR.Production_Quantity_USR = PAR.Production_Quantity_USR + DB1.Transaction_Quantity;

}


//?If sched prod GE Actual then subtract Actual from Sched, else zero
CASE;

// IF RCD.Quantity Production USR GE RCD.Actual Production 6.1 USR
IF RCD.Quantity_Production_USR >= RCD.Actual_Production_6_1_USR;

// PAR.Quantity Production USR = RCD.Quantity Production USR - RCD.Actual Productio
PAR.Quantity_Production_USR = RCD.Quantity_Production_USR                                          +
- RCD.Actual_Production_6_1_USR;

//?If sched prod GE Actual then subtract Actual from Sched, else zero
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Quantity Production USR = CON.*ZERO
PAR.Quantity_Production_USR = *ZERO;

ENDIF;

// Compute Position quantity
RCD.Quantity_Position_6_1_USR = ( RCD.Quantity_Inventory_USR                                       +
+ PAR.Quantity_Production_USR ) - RCD.Quantity_Ordered_USR;

//?If production and order quantity are zero then don't display item
CASE;

// IF RCD.Quantity Production USR is EQ Zero
IF RCD.Quantity_Production_USR = *ZERO;

// AND RCD.Quantity Ordered USR is EQ Zero
AND RCD.Quantity_Ordered_USR = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Print on Schedule selection
CASE;

// IF CTL.PS Print On Schedule is yes
IF CTL.PS_Print_On_Schedule = 'Y';

//?If item is marked as print on schedule "N"o then don't display
CASE;

// IF RCD.PS Print On Schedule is yes
IF RCD.PS_Print_On_Schedule = 'Y';

//?If item is marked as print on schedule "N"o then don't display
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Print on Schedule selection
// IF CTL.PS Print On Schedule is no
IF CTL.PS_Print_On_Schedule = 'N';

//?If item is marked as Do not Print schedule select N or blank
CASE;

// IF RCD.PS Print On Schedule is Not Yes
IF RCD.PS_Print_On_Schedule = *BLANK/'N';

//?If item is marked as Do not Print schedule select N or blank
// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?Print on Schedule selection
// IF *OTHERWISE
IF *OTHERWISE;

//?Ctl print on schedul is no value,  so do not check
ENDIF;

//?Consumed (Get the first Consumed Item Number)
DO;

// Call program Rtv First Consumed Itm XF.
CALL PROGRAM(Rtv First Consumed Itm XF) ('POP1XFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Consumed_Item_Code);

CASE;

// IF RCD.Consumed Item Code EQ RCD.Item Code
IF RCD.Consumed_Item_Code = RCD.Item_Code;

// RCD.Consumed Item Code = CON.*ZERO
RCD.Consumed_Item_Code = *ZERO;

ENDIF;

CASE;

// IF CTL.Consumed Item Code is Not Entered
IF CTL.Consumed_Item_Code = *ZERO;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF CTL.Consumed Item Code EQ RCD.Consumed Item Code
IF CTL.Consumed_Item_Code = RCD.Consumed_Item_Code;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

ENDDO;

//?USER: Process subfile control (Pre-confirm)

//?New selection screen E00243
//?Print List
CASE;

// IF CTL.*CMD key is *Print List
IF CTL.*CMD_key = '21';

CASE;

// IF CTL.Production Type is *ALL values
IF CTL.Production_Type = 'P'/'S'/'X'/'B'/'L'/'G'/'C';

// AND CTL.Production Date is entered
AND CTL.Production_Date <> *ZERO;

// PAR.Production Date USR = CTL.Production Date
PAR.Production_Date_USR = CTL.Production_Date;

// PAR.Warehouse Code PASS   USR = CTL.Warehouse Code
PAR.Warehouse_Code_PASS_USR = CTL.Warehouse_Code;

// LCL.PRT Night Queue Run Sts = CND.no
LCL.PRT_Night_Queue_Run_Sts = 'N';

// PAR.Display Prt Opt Pmt USR = CND.*YES
PAR.Display_Prt_Opt_Pmt_USR = *YES;

// Call program Prt Prd Schedule Rpts PV.
CALL PROGRAM(Prt Prd Schedule Rpts PV) ('PMAQPVR');
PARAMETER(PAR.Production_Date_USR);
PARAMETER(PAR.Warehouse_Code_PASS_USR);
PARAMETER(PAR.Display_Prt_Opt_Pmt_USR);
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Production_Type);
PARAMETER('Production Items');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(LCL.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Application_Code);
PARAMETER(1);

// IF *OTHERWISE
IF *OTHERWISE;

//?Error Messages
CASE;

// IF CTL.Production Type EQ WRK.BLANK
IF CTL.Production_Type = WRK.BLANK;

// Send error message - 'Production Type is required.'
ERROR(USR2023);
MSGPARM(CTL.Production_Type);

//?Error Messages
// IF CTL.Production Date is not entered
IF CTL.Production_Date = *ZERO;

// Send error message - 'Date must be entered.'
ERROR(USR0231);
MSGPARM(CTL.Production_Date);

ENDIF;

ENDIF;

ENDIF;

//?Consumed Break reload subfile
DO;

CASE;

// IF CTL.Consumed Item Code NE WRK.Consumed Item Code
IF CTL.Consumed_Item_Code <> WRK.Consumed_Item_Code;

// WRK.Consumed Item Code = CTL.Consumed Item Code
WRK.Consumed_Item_Code = CTL.Consumed_Item_Code;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDDO;

//?WW PA
CASE;

// IF CTL.*CMD key is CF16
IF CTL.*CMD_key = '16';

//?** Pass the company# & whs code         09/01/06 LJB workin
// Call program WW Product Availablty DF.
CALL PROGRAM(WW Product Availablty DF) ('PDFPDFR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Warehouse_Code);

ENDIF;

//?Refresh
CASE;

// IF CTL.*CMD key is CF05
IF CTL.*CMD_key = '05';

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

EXECUTE FUNCTION(RTV Company Name Only  RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1100959;
PARAMETER(RCD.Company_Number);
PARAMETER(WRK.Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Display Detail
CASE;

// IF RCD.*SFLSEL is *5
IF RCD.*SFLSEL = '5';

// Call program Dsp Production Detail DR.
CALL PROGRAM(Dsp Production Detail DR) ('PDDHD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Production_Type);
PARAMETER(RCD.Production_Date);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);

ENDIF;

//?Edit Comments
CASE;

// IF RCD.*SFLSEL is *7
IF RCD.*SFLSEL = '7';

// Call program Zzz Prod Sched Comm   EF.
CALL PROGRAM(Zzz Prod Sched Comm   EF) ('PDFPEFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Production_Type);
PARAMETER(RCD.Production_Date);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(WRK.Name);
PARAMETER(RCD.Item_Description);

ENDIF;

//?Display Orders
CASE;

// IF RCD.*SFLSEL is *8
IF RCD.*SFLSEL = '8';

// Call program Zzz Item Orders       DF.
CALL PROGRAM(Zzz Item Orders       DF) ('PDO7DFR');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Production_Date);
PARAMETER(WRK.Name);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(WRK.*Initial_call);
PARAMETER(RCD.Warehouse_Type);

ENDIF;

//?WW PA Detail
CASE;

// IF RCD.*SFLSEL is Option 10
IF RCD.*SFLSEL = '10';

// PAR.Week Number = CON.1
PAR.Week_Number = 1;

EXECUTE FUNCTION(RTV Mon-Sat Dates      IF) TYPE(EXCINTFUN)                     AC1386891;
PARAMETER(RCD.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(WRK.Accounting_Year_Code);
PARAMETER(WRK.Week_Number);
PARAMETER(PAR.Date_Mon_USR);
PARAMETER(WRK.Date_Tue_USR);
PARAMETER(WRK.Date_Wed_USR);
PARAMETER(WRK.Date_Thu_USR);
PARAMETER(WRK.Date_Fri_USR);
PARAMETER(WRK.Date_Sat_USR);
PARAMETER(WRK.Date_Sun_USR);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Week Number       RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1386894;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Post_to_G_L_Date);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Week_Number);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Mon-Sat w/Wk#      RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1386902;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(PAR.Week_Number);
 PARAMETER(PAR.Date_Mon_USR);
 PARAMETER(PAR.Date_Tue_USR);
 PARAMETER(PAR.Date_Wed_USR);
 PARAMETER(PAR.Date_Thu_USR);
 PARAMETER(PAR.Date_Fri_USR);
 PARAMETER(PAR.Date_Sat_USR);
 PARAMETER(PAR.Date_Sun_USR);
 PARAMETER('Y');
 {
  //?USER: Initialize routine

  CASE;

  // IF PAR.First Time Flag is Yes
  IF PAR.First_Time_Flag = 'Y';

  MOVE *ALL (To: PAR From: CON);

  ENDIF;

  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week is Sunday
  IF DB1.Day_of_Week = '1';

  // PAR.Date Sun USR = DB1.Post to G/L Date
  PAR.Date_Sun_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Monday
  IF DB1.Day_of_Week = '2';

  // PAR.Date Mon USR = DB1.Post to G/L Date
  PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Tuesday
  IF DB1.Day_of_Week = '3';

  // PAR.Date Tue USR = DB1.Post to G/L Date
  PAR.Date_Tue_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Wednesday
  IF DB1.Day_of_Week = '4';

  // PAR.Date Wed USR = DB1.Post to G/L Date
  PAR.Date_Wed_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Thursday
  IF DB1.Day_of_Week = '5';

  // PAR.Date Thu USR = DB1.Post to G/L Date
  PAR.Date_Thu_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Friday
  IF DB1.Day_of_Week = '6';

  // PAR.Date Fri USR = DB1.Post to G/L Date
  PAR.Date_Fri_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Saturday
  IF DB1.Day_of_Week = '7';

  // PAR.Date Sat USR = DB1.Post to G/L Date
  PAR.Date_Sat_USR = DB1.Post_to_G_L_Date;

  ENDIF;

 }

 CASE;

 // IF PAR.Date Mon USR EQ WRK.ZERO
 IF PAR.Date_Mon_USR = WRK.ZERO;

 // OR PAR.Date Tue USR EQ WRK.ZERO
 OR PAR.Date_Tue_USR = WRK.ZERO;

 // OR PAR.Date Wed USR EQ WRK.ZERO
 OR PAR.Date_Wed_USR = WRK.ZERO;

 // OR PAR.Date Thu USR EQ WRK.ZERO
 OR PAR.Date_Thu_USR = WRK.ZERO;

 // OR PAR.Date Fri USR EQ WRK.ZERO
 OR PAR.Date_Fri_USR = WRK.ZERO;

 // OR PAR.Date Sat USR EQ WRK.ZERO
 OR PAR.Date_Sat_USR = WRK.ZERO;

 //?And the Week is 52 or 53
 CASE;

 // IF PAR.Week Number is Year End
 IF PAR.Week_Number >= 52;
 AND PAR.Week_Number <= 53;

 // PAR.Accounting Year Code = PAR.Accounting Year Code + CON.1
 PAR.Accounting_Year_Code = PAR.Accounting_Year_Code + 1;

 EXECUTE FUNCTION(RTV Mon-Sat w/Wk#      RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1386902;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(1);
 PARAMETER(PAR.Date_Mon_USR);
 PARAMETER(PAR.Date_Tue_USR);
 PARAMETER(PAR.Date_Wed_USR);
 PARAMETER(PAR.Date_Thu_USR);
 PARAMETER(PAR.Date_Fri_USR);
 PARAMETER(PAR.Date_Sat_USR);
 PARAMETER(PAR.Date_Sun_USR);
 PARAMETER('N');
 {
  //?USER: Initialize routine

  CASE;

  // IF PAR.First Time Flag is Yes
  IF PAR.First_Time_Flag = 'Y';

  MOVE *ALL (To: PAR From: CON);

  ENDIF;

  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week is Sunday
  IF DB1.Day_of_Week = '1';

  // PAR.Date Sun USR = DB1.Post to G/L Date
  PAR.Date_Sun_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Monday
  IF DB1.Day_of_Week = '2';

  // PAR.Date Mon USR = DB1.Post to G/L Date
  PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Tuesday
  IF DB1.Day_of_Week = '3';

  // PAR.Date Tue USR = DB1.Post to G/L Date
  PAR.Date_Tue_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Wednesday
  IF DB1.Day_of_Week = '4';

  // PAR.Date Wed USR = DB1.Post to G/L Date
  PAR.Date_Wed_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Thursday
  IF DB1.Day_of_Week = '5';

  // PAR.Date Thu USR = DB1.Post to G/L Date
  PAR.Date_Thu_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Friday
  IF DB1.Day_of_Week = '6';

  // PAR.Date Fri USR = DB1.Post to G/L Date
  PAR.Date_Fri_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Saturday
  IF DB1.Day_of_Week = '7';

  // PAR.Date Sat USR = DB1.Post to G/L Date
  PAR.Date_Sat_USR = DB1.Post_to_G_L_Date;

  ENDIF;

 }

 //?And the Week is 52 or 53
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Accounting Year Code = PAR.Accounting Year Code + CON.-1
 PAR.Accounting_Year_Code = PAR.Accounting_Year_Code + -1;

 EXECUTE FUNCTION(RTV Mon-Sat w/Wk#      RT) TYPE(RTVOBJ) FILE(CAAFREP)          AC1386902;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Accounting_Year_Code);
 PARAMETER(53);
 PARAMETER(PAR.Date_Mon_USR);
 PARAMETER(PAR.Date_Tue_USR);
 PARAMETER(PAR.Date_Wed_USR);
 PARAMETER(PAR.Date_Thu_USR);
 PARAMETER(PAR.Date_Fri_USR);
 PARAMETER(PAR.Date_Sat_USR);
 PARAMETER(PAR.Date_Sun_USR);
 PARAMETER('N');
 {
  //?USER: Initialize routine

  CASE;

  // IF PAR.First Time Flag is Yes
  IF PAR.First_Time_Flag = 'Y';

  MOVE *ALL (To: PAR From: CON);

  ENDIF;

  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF DB1.Day of Week is Sunday
  IF DB1.Day_of_Week = '1';

  // PAR.Date Sun USR = DB1.Post to G/L Date
  PAR.Date_Sun_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Monday
  IF DB1.Day_of_Week = '2';

  // PAR.Date Mon USR = DB1.Post to G/L Date
  PAR.Date_Mon_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Tuesday
  IF DB1.Day_of_Week = '3';

  // PAR.Date Tue USR = DB1.Post to G/L Date
  PAR.Date_Tue_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Wednesday
  IF DB1.Day_of_Week = '4';

  // PAR.Date Wed USR = DB1.Post to G/L Date
  PAR.Date_Wed_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Thursday
  IF DB1.Day_of_Week = '5';

  // PAR.Date Thu USR = DB1.Post to G/L Date
  PAR.Date_Thu_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Friday
  IF DB1.Day_of_Week = '6';

  // PAR.Date Fri USR = DB1.Post to G/L Date
  PAR.Date_Fri_USR = DB1.Post_to_G_L_Date;

  // IF DB1.Day of Week is Saturday
  IF DB1.Day_of_Week = '7';

  // PAR.Date Sat USR = DB1.Post to G/L Date
  PAR.Date_Sat_USR = DB1.Post_to_G_L_Date;

  ENDIF;

 }

 ENDIF;

 ENDIF;

}


EXECUTE FUNCTION(Rtv PA Shipdate-21+SunRT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1621622;
PARAMETER(RCD.Company_Number);
PARAMETER(PAR.Date_Mon_USR);
PARAMETER(WRK.Generic_Heading_1);
PARAMETER(WRK.Generic_Heading_2);
PARAMETER(WRK.Generic_Heading_3);
PARAMETER(WRK.Generic_Heading_4);
PARAMETER(WRK.Generic_Heading_5);
PARAMETER(WRK.Generic_Heading_6);
PARAMETER(WRK.Generic_Heading_7);
PARAMETER(WRK.Generic_Heading_8);
PARAMETER(WRK.Generic_Heading_9);
PARAMETER(WRK.Generic_Heading_10);
PARAMETER(WRK.Generic_Heading_11);
PARAMETER(WRK.Generic_Heading_12);
PARAMETER(WRK.Generic_Heading_13);
PARAMETER(WRK.Generic_Heading_14);
PARAMETER(WRK.Generic_Heading_15);
PARAMETER(WRK.Generic_Heading_16);
PARAMETER(PAR.Avail_Ship_Date_1_USR);
PARAMETER(PAR.Avail_Ship_Date_2_USR);
PARAMETER(PAR.Avail_Ship_Date_3_USR);
PARAMETER(PAR.Avail_Ship_Date_4_USR);
PARAMETER(PAR.Avail_Ship_Date_5_USR);
PARAMETER(PAR.Avail_Ship_Date_6_USR);
PARAMETER(PAR.Avail_Ship_Date_7_USR);
PARAMETER(PAR.Avail_Ship_Date_8_USR);
PARAMETER(PAR.Avail_Ship_Date_9_USR);
PARAMETER(PAR.Avail_Ship_Date_10_USR);
PARAMETER(PAR.Avail_Ship_Date_11_USR);
PARAMETER(PAR.Avail_Ship_Date_12_USR);
PARAMETER(PAR.Avail_Ship_Date_13_USR);
PARAMETER(PAR.Avail_Ship_Date_14_USR);
PARAMETER(PAR.Avail_Ship_Date_15_USR);
PARAMETER(PAR.Avail_Ship_Date_16_USR);
PARAMETER(PAR.Avail_Ship_Date_17_USR);
PARAMETER(PAR.Avail_Ship_Date_18_USR);
PARAMETER(PAR.Avail_Ship_Date_19_USR);
PARAMETER(PAR.Avail_Ship_Date_20_USR);
PARAMETER(PAR.Avail_Ship_Date_21_USR);
{
 //?USER: Initialize routine

 // WRK.Count USR = CON.1
 WRK.Count_USR = 1;

 //?USER: Process Data record

 CASE;

 // IF WRK.Count USR is GT 21
 IF WRK.Count_USR > 21;

 QUIT;

 // IF *OTHERWISE
 IF *OTHERWISE;

 //?Move Date
 CASE;

 // IF WRK.Count USR is One
 IF WRK.Count_USR = 1;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 1 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_1 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 1 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_1_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 2 = CON.Total
 PAR.Generic_Heading_2 = 'Total';

 // PAR.Avail Ship Date 2 USR = CON.*ZERO
 PAR.Avail_Ship_Date_2_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Two
 IF WRK.Count_USR = 2;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 2 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_2 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 2 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_2_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 3 = CON.Total
 PAR.Generic_Heading_3 = 'Total';

 // PAR.Avail Ship Date 3 USR = CON.*ZERO
 PAR.Avail_Ship_Date_3_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Three
 IF WRK.Count_USR = 3;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 3 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_3 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 3 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_3_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 4 = CON.Total
 PAR.Generic_Heading_4 = 'Total';

 // PAR.Avail Ship Date 4 USR = CON.*ZERO
 PAR.Avail_Ship_Date_4_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Four
 IF WRK.Count_USR = 4;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 4 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_4 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 4 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_4_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 5 = CON.Total
 PAR.Generic_Heading_5 = 'Total';

 // PAR.Avail Ship Date 5 USR = CON.*ZERO
 PAR.Avail_Ship_Date_5_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Five
 IF WRK.Count_USR = 5;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 5 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_5 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 5 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_5_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 6 = CON.Total
 PAR.Generic_Heading_6 = 'Total';

 // PAR.Avail Ship Date 6 USR = CON.*ZERO
 PAR.Avail_Ship_Date_6_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Six
 IF WRK.Count_USR = 6;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 6 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_6 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 6 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_6_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 7 = CON.Total
 PAR.Generic_Heading_7 = 'Total';

 // PAR.Avail Ship Date 7 USR = CON.*ZERO
 PAR.Avail_Ship_Date_7_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Seven
 IF WRK.Count_USR = 7;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 7 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_7 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 7 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_7_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 8 = CON.Total
 PAR.Generic_Heading_8 = 'Total';

 // PAR.Avail Ship Date 8 USR = CON.*ZERO
 PAR.Avail_Ship_Date_8_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Eight
 IF WRK.Count_USR = 8;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 8 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_8 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 8 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_8_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 9 = CON.Total
 PAR.Generic_Heading_9 = 'Total';

 // PAR.Avail Ship Date 9 USR = CON.*ZERO
 PAR.Avail_Ship_Date_9_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Nine
 IF WRK.Count_USR = 9;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 9 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_9 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 9 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_9_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 10 = CON.Total
 PAR.Generic_Heading_10 = 'Total';

 // PAR.Avail Ship Date 10 USR = CON.*ZERO
 PAR.Avail_Ship_Date_10_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Ten
 IF WRK.Count_USR = 10;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 10 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_10 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 10 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_10_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 11 = CON.Total
 PAR.Generic_Heading_11 = 'Total';

 // PAR.Avail Ship Date 11 USR = CON.*ZERO
 PAR.Avail_Ship_Date_11_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Eleven
 IF WRK.Count_USR = 11;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 11 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_11 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 11 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_11_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 12 = CON.Total
 PAR.Generic_Heading_12 = 'Total';

 // PAR.Avail Ship Date 12 USR = CON.*ZERO
 PAR.Avail_Ship_Date_12_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Twelve
 IF WRK.Count_USR = 12;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 12 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_12 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 12 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_12_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 13 = CON.Total
 PAR.Generic_Heading_13 = 'Total';

 // PAR.Avail Ship Date 13 USR = CON.*ZERO
 PAR.Avail_Ship_Date_13_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Thirteen
 IF WRK.Count_USR = 13;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 13 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_13 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 13 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_13_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 14 = CON.Total
 PAR.Generic_Heading_14 = 'Total';

 // PAR.Avail Ship Date 14 USR = CON.*ZERO
 PAR.Avail_Ship_Date_14_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Fourteen
 IF WRK.Count_USR = 14;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 14 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_14 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 14 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_14_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 15 = CON.Total
 PAR.Generic_Heading_15 = 'Total';

 // PAR.Avail Ship Date 15 USR = CON.*ZERO
 PAR.Avail_Ship_Date_15_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Fifteen
 IF WRK.Count_USR = 15;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 15 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_15 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 15 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_15_USR = DB1.Post_to_G_L_Date;

 CASE;

 // IF DB1.Day of Week is Sunday
 IF DB1.Day_of_Week = '1';

 // PAR.Generic Heading 16 = CON.Total
 PAR.Generic_Heading_16 = 'Total';

 // PAR.Avail Ship Date 16 USR = CON.*ZERO
 PAR.Avail_Ship_Date_16_USR = *ZERO;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

 //?Move Date
 // IF WRK.Count USR is Sixteen
 IF WRK.Count_USR = 16;

 EXECUTE FUNCTION(CNV cyymmdd to mmddyy) TYPE(EXCINTFUN)                         AC1563472;
 PARAMETER(DB1.Post_to_G_L_Date);
 PARAMETER(WRK.@Calc_60);
 {
  //?Execute internal function

  //?convert numeric date to character date.
  // PAR.Date (Alpha) USR = CVTVAR(PAR.Date In  (7,0) USR)
  PAR.Date_Alpha_USR = CVTVAR(PAR.Date_In_70_USR);

  //?extract month, day, and year.
  // PAR.Year  (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.2,CON.2)
  PAR.Year_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:2:2);

  // PAR.Month (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.4,CON.2)
  PAR.Month_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:4:2);

  // PAR.Day   (Char) USR = SUBSTRING(PAR.Date (Alpha) USR,CON.6,CON.2)
  PAR.Day_Char_USR = SUBSTRING(PAR.Date_Alpha_USR:6:2);

  //?reconstruct date in mmddyy format.
  // PAR.Date (Char-6) USR = CONCAT(PAR.Month (Char) USR,PAR.Day   (Char) USR,CON.*ZE
  PAR.Date_Char_6_USR = PAR.Month_Char_USR + PAR.Day_Char_USR (*ZERO);

  // PAR.Date (Char-6) USR = CONCAT(PAR.Date (Char-6) USR,PAR.Year  (Char) USR,CON.*Z
  PAR.Date_Char_6_USR = PAR.Date_Char_6_USR + PAR.Year_Char_USR (*ZERO);

  //?convert character date to numeric date.
  // PAR.Date Out (6,0) USR = CVTVAR(PAR.Date (Char-6) USR)
  PAR.Date_Out_60_USR = CVTVAR(PAR.Date_Char_6_USR);

 }

 // PAR.Generic Heading 16 = CVTVAR(WRK.@Calc 6,0)
 PAR.Generic_Heading_16 = CVTVAR(WRK.@Calc_60);

 // PAR.Avail Ship Date 16 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_16_USR = DB1.Post_to_G_L_Date;

 //?Move Date
 // IF WRK.Count USR is Seventeen
 IF WRK.Count_USR = 17;

 // PAR.Avail Ship Date 17 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_17_USR = DB1.Post_to_G_L_Date;

 //?Move Date
 // IF WRK.Count USR is Eighteen
 IF WRK.Count_USR = 18;

 // PAR.Avail Ship Date 18 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_18_USR = DB1.Post_to_G_L_Date;

 //?Move Date
 // IF WRK.Count USR is Nineteen
 IF WRK.Count_USR = 19;

 // PAR.Avail Ship Date 19 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_19_USR = DB1.Post_to_G_L_Date;

 //?Move Date
 // IF WRK.Count USR is Twenty
 IF WRK.Count_USR = 20;

 // PAR.Avail Ship Date 20 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_20_USR = DB1.Post_to_G_L_Date;

 //?Move Date
 // IF WRK.Count USR is Twenty One
 IF WRK.Count_USR = 21;

 // PAR.Avail Ship Date 21 USR = DB1.Post to G/L Date
 PAR.Avail_Ship_Date_21_USR = DB1.Post_to_G_L_Date;

 ENDIF;

 // WRK.Count USR = WRK.Count USR + CON.1
 WRK.Count_USR = WRK.Count_USR + 1;

 ENDIF;

}


// Call program Dsp Product Availblty D1.
CALL PROGRAM(Dsp Product Availblty D1) ('PDGND1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(WRK.Name);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.Warehouse_Description);
PARAMETER(RCD.Warehouse_Type);
PARAMETER('P');
PARAMETER(42000);
PARAMETER(PAR.Avail_Ship_Date_1_USR);
PARAMETER(PAR.Avail_Ship_Date_2_USR);
PARAMETER(PAR.Avail_Ship_Date_3_USR);
PARAMETER(PAR.Avail_Ship_Date_4_USR);
PARAMETER(PAR.Avail_Ship_Date_5_USR);
PARAMETER(PAR.Avail_Ship_Date_6_USR);
PARAMETER(PAR.Avail_Ship_Date_7_USR);
PARAMETER(PAR.Week_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?Update Company/Item values in the Production Schedule
CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

EXECUTE FUNCTION(Upd Prd Sch w/Itm Dfn CH) TYPE(CHGOBJ) FILE(PDI8CPP)           AC1481444;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Production_Type);
PARAMETER(RCD.Production_Date);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Warehouse_Code);
PARAMETER(RCD.PS_Export_Domestic);
PARAMETER(RCD.PS_Print_On_Schedule);
PARAMETER(RCD.Department_Code);
PARAMETER(RCD.Primal_Group_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

