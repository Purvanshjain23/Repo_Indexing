// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POWDPVR
// ?Date: 14.08.2025 Time: 03:39:19
// ?------------------------------------------------------------------------------------------------

//?USER: Load screen

MOVE *ALL (To: DTL From: PAR);

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(DTL.Company_Name_DRV);
PARAMETER(DTL.Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?Department Description
CASE;

// IF DTL.Department Code is Entered
IF DTL.Department_Code <> *BLANK;

EXECUTE FUNCTION(Department Desc DRV) TYPE(DRVFLD)                              AC1666904;
PARAMETER(DTL.Department_Desc_DRV);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Prod Dept Name    RT) TYPE(RTVOBJ) FILE(PDI5REP)           AC1286709;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Department_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

//?Production Line Description
CASE;

// IF DTL.Production Line Code is Entered
IF DTL.Production_Line_Code <> *BLANK;

EXECUTE FUNCTION(Production Line Desc DRV) TYPE(DRVFLD)                         AC1666905;
PARAMETER(DTL.Production_Line_Desc_DRV);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
PARAMETER(DTL.Production_Line_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Prod Line Desc    RT) TYPE(RTVOBJ) FILE(POCMREP)           AC1666906;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Production_Line_Code);
 PARAMETER(PAR.Production_Line_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


ENDIF;

//?*--------------------------------------------------------------*
//?- Yield Reporting Options -
// LCL.USR Display field = CND.yes
LCL.USR_Display_field = 'Y';

//?- Head Cut & Cold Weight Entry -
// LCL.Display Flag = CND.No
LCL.Display_Flag = 'N';

//?- Converting Start Weight Entry -
// LCL.Display Flag 1 USR = CND.no
LCL.Display_Flag_1_USR = 'N';

//?- Converting Start Weight Entry -
//?Reset Flags
CASE;

// IF PAR.User Department is Accounting
IF PAR.User_Department = 'AC';

// LCL.Display Flag = CND.Yes
LCL.Display_Flag = 'Y';

// LCL.Display Flag 1 USR = CND.yes
LCL.Display_Flag_1_USR = 'Y';

//?Reset Flags
// IF PAR.User Department is Main Break
IF PAR.User_Department = 'MB';

// LCL.USR Display field = CND.no
LCL.USR_Display_field = 'N';

// LCL.Display Flag = CND.Yes
LCL.Display_Flag = 'Y';

// LCL.Display Flag 1 USR = CND.no
LCL.Display_Flag_1_USR = 'N';

//?Reset Flags
// IF PAR.User Department is Converting
IF PAR.User_Department = 'CV';

// LCL.USR Display field = CND.no
LCL.USR_Display_field = 'N';

// LCL.Display Flag = CND.No
LCL.Display_Flag = 'N';

// LCL.Display Flag 1 USR = CND.yes
LCL.Display_Flag_1_USR = 'Y';

ENDIF;

//?*--------------------------------------------------------------*
//?USER: Validate fields

//?SEL:  Department/Production Line
CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> DTL.Department Code
IF PGM.*Cursor_field = DTL.Department_Code;

// Call program Sel Prod. Department  SR.
CALL PROGRAM(Sel Prod. Department  SR) ('PDCXSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> DTL.Production Line Code
IF PGM.*Cursor_field = DTL.Production_Line_Code;

// Call program Sel Production Line   SR.
CALL PROGRAM(Sel Production Line   SR) ('POUXSRR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
PARAMETER(DTL.Production_Line_Code);

ENDIF;

ENDIF;

//?VAL: Department Code
CASE;

// IF DTL.Department Code is Entered
IF DTL.Department_Code <> *BLANK;

EXECUTE FUNCTION(Department Desc DRV) TYPE(DRVFLD)                              AC1666904;
PARAMETER(DTL.Department_Desc_DRV);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Prod Dept Name    RT) TYPE(RTVOBJ) FILE(PDI5REP)           AC1286709;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Department_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF DTL.Department Desc DRV is equal to blank
IF DTL.Department_Desc_DRV = *BLANK;

// Send error message - 'Production Department not found.'
ERROR(USR1757);
MSGPARM(DTL.Department_Code);

ENDIF;

ENDIF;

//?VAL: Production Line Code
CASE;

// IF DTL.Production Line Code is Entered
IF DTL.Production_Line_Code <> *BLANK;

EXECUTE FUNCTION(Production Line Desc DRV) TYPE(DRVFLD)                         AC1666905;
PARAMETER(DTL.Production_Line_Desc_DRV);
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Department_Code);
PARAMETER(DTL.Production_Line_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Prod Line Desc    RT) TYPE(RTVOBJ) FILE(POCMREP)           AC1666906;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Department_Code);
 PARAMETER(PAR.Production_Line_Code);
 PARAMETER(PAR.Production_Line_Desc_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF DTL.Production Line Desc DRV is equal to blank
IF DTL.Production_Line_Desc_DRV = *BLANK;

// Send error message - 'Production Department/Line Not Found'
ERROR(USR3211);
MSGPARM(DTL.Department_Code);
MSGPARM(DTL.Production_Line_Code);

ENDIF;

ENDIF;

//?USER: User defined action

MOVE *ALL (To: PAR From: DTL);

// PAR.Yld Program USR = CND.Exit
PAR.Yld_Program_USR = 'EX';

CASE;

// IF DTL.Sel Value 1 USR is Select
IF DTL.Sel_Value_1_USR = 'X';

// PAR.Yld Program USR = CND.Production Review
PAR.Yld_Program_USR = 'PR';

RETURN;

// IF DTL.Sel Value 2 USR is Select
IF DTL.Sel_Value_2_USR = 'X';

// PAR.Yld Program USR = CND.Inventory Reconcile
PAR.Yld_Program_USR = 'IR';

RETURN;

// IF DTL.Sel Value 3 USR is Select
IF DTL.Sel_Value_3_USR = 'X';

// PAR.Yld Program USR = CND.Dept Head/Wgt Entry
PAR.Yld_Program_USR = 'DE';

RETURN;

// IF DTL.Sel Value 4 USR is Select
IF DTL.Sel_Value_4_USR = 'X';

// PAR.Yld Program USR = CND.Conv Start Wgt Entry
PAR.Yld_Program_USR = 'SW';

RETURN;

// IF DTL.Sel Value 5 USR is Select
IF DTL.Sel_Value_5_USR = 'X';

// PAR.Yld Program USR = CND.Yield Calculation
PAR.Yld_Program_USR = 'YC';

RETURN;

// IF DTL.Sel Value 6 USR is Select
IF DTL.Sel_Value_6_USR = 'X';

// PAR.Yld Program USR = CND.Yield Review
PAR.Yld_Program_USR = 'YR';

RETURN;

ENDIF;

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is BACK
IF DTL.*CMD_key = '07';

// PAR.Yld Program USR = CND.Exit
PAR.Yld_Program_USR = 'EX';

ENDIF;

