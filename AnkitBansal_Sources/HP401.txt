      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP401
      * TITLE:       WORK WITH EQUIPMENT TYPE
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     3/8/94
      *
      * FUNCTION: THIS IS A WORK WITH THAT DISPLAYS THE RECORDS
      *           IN THE EQUIPMENT TYPE MASTER FILE.
      *
      *           IT DOES NOT HAVE SELECTORS OR POSITIONERS.
      *           IT DOES NOT HAVE F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      * 01/20/94  LEANNE FEDOR
      *           REMOVED DATE/TIME STAMP FROM SCREEN.
      *
      * 04/25/95  LEANNE FEDOR
      *           CORRECTED TO READ FILE INSTEAD OF RECORD FORMAT.
      *
      * 06/13/97  LEANNE FEDOR
      *           ADDED LOGIC TO ALLOW USER TO SELECT PRINT OPTIONS BY
      *           TAKING A FUNCTION KEY AND ENTERING SELECTIONS.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD401    CF   E             WORKSTN
     F                                     SFILE(HP401S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS                 (KEY: FNFNCD)
      *
     FHSP021    IF   E           K DISK
     F                                     INFDS(DBFEED)
      *    EQUIPMENT TYPE         (KEY: ETETCD)
      *
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      * STANDARD SUBFILE OPTION CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      *---------------------------------------------------------------
      *  LDA
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  FILL THE SUBFILE
      *
     C     TERMFL        IFEQ      NO
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
     C                   ENDIF
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP401K1
     C                   WRITE     HP401EC
     C                   EXFMT     HP401C1
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES
      * AND PROGRAM MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C                   MOVEL     EXIT          ROUTNE
      *
      *  USER FAILED THE INITIAL SECURITY CHECKS
      *
     C     TERMFL        WHENEQ    YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN06         WHENEQ    *ON                                          F6-CREATE
     C                   MOVEL(P)  'HP101'       WKFNCD
     C                   EXSR      $SEC
     C     SECFL         IFEQ      NO
     C                   EXSR      $CREAT
     C                   ENDIF
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN07         WHENEQ    *ON                                          F7-LISTING
     C                   MOVEL(P)  'HP601'       WKFNCD
     C                   EXSR      $SEC
     C     SECFL         IFEQ      NO
     C                   EXSR      $LIST1
     C                   ENDIF
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'UTWRKSPL'
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO REREAD AND PROCESS
      * THE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN AND ERRORS TO USER
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP401S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP401C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN FILE
      *
     C     *LOVAL        SETLL     HSP021
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
      *
      * DON'T TRY TO REPOSITION THE USER, JUST START THE SUBFILE OVER
      *
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1- SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                           DO FILL
     C     COUNT         ORGE      WKPLIN
      *
      * READ EQUIPMENT TYPE MASTER FILE BY CODE
      *
     C                   READ      HSP021                                 82
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFOPT
     C                   MOVEL     ETETCD        DFETCD
     C                   MOVEL     ETETDS        DFETDS
     C                   WRITE     HP401S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                   IF READ
     C                   ENDDO                                                   DO FILL
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   MOVEL     YES           NORECS
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CREAT - SUBROUTINE TO CALL THE MAINTENANCE PROGRAM WHEN THE
      *          USER TAKES F6=CREATE
      *---------------------------------------------------------------
      *
     C     $CREAT        BEGSR
      *
     C                   MOVEL     '00'          RTNCD
     C                   MOVEL     CREATE        MODE
     C                   MOVE      *BLANK        DFETCD
     C                   CALL      'HP101'
     C                   PARM                    MODE
     C                   PARM                    DFETCD
     C                   PARM                    RTNCD
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EDOP1 - SUBROUTINE TO READ CHANGED SUBFILE RECORDS AND EDIT
      *          FOR VALID SUBFILE OPTIONS ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READC
     C                   READC     HP401S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANKS       WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZERO                                        IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 2'
     C     DFOPT         ANDNE     ' 4'
     C     DFOPT         ANDNE     ' 7'
     C     DFOPT         ANDNE     ' 8'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        3085
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   ENDIF
     C                   EXSR      $ERR1
     C                   ELSE
      *
      * IF THE OPTION IS VALID, CHECK THE USER'S AUTHORITY TO THE
      * FUNCTION.
      *
     C     DFOPT         IFNE      '  '                                         IF DFOPT
      *
     C                   SELECT
     C     DFOPT         WHENEQ    ' 2'
     C                   MOVEL(P)  'HP101'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 4'
     C                   MOVEL(P)  'HP101'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 7'
     C                   MOVEL(P)  'HP103'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 8'
     C                   MOVEL(P)  'HP702'       WKFNCD
     C                   ENDSL
      *
      * CHECK SECURITY
     C                   EXSR      $SEC
      *
     C     SECFL         IFEQ      YES                                          IF RESTRICT
     C                   SETON                                        30
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF RESTRICT
      *
      * REWRITE THE SUBFILE RECORD WITH THE MODIFIED DATA TAG ON SO
      * IT WILL BE REREAD AND PROCESSED IN THE SUBROUTINE $PROC1.
      *
     C                   SETON                                        85
     C                   ELSE
     C                   SETOFF                                       85
     C                   ENDIF                                                  IF DFOPT
     C                   ENDIF                                                  IF BAD OPT
      *
     C                   UPDATE    HP401S1
     C                   SETOFF                                       8530
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS PROCESSING THE SUBFILE
      * SELECTION
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP401S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      * IF USER SELECTED OPTION 2=REVISE,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE
      *
     C     DFOPT         IFEQ      ' 2'
     C                   MOVEL     YES           RESET
     C                   MOVEL     REVISE        MODE
     C                   CALL      'HP101'
     C                   PARM                    MODE
     C                   PARM                    DFETCD
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 4=DELETE,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE
      *
     C     DFOPT         IFEQ      ' 4'
     C                   MOVEL     YES           RESET
     C                   MOVEL     DELETE        MODE
     C                   CALL      'HP101'
     C                   PARM                    MODE
     C                   PARM                    DFETCD
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 7=MAINTAIN EQUIPMENT,
      * SET THE FLAG "RESET" TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE
      *
     C     DFOPT         IFEQ      ' 7'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP103'
     C                   PARM                    DFETCD
     C                   PARM                    DFETDS
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 8=VIEW EQUIPMENT.
      * SET THE FLAG "RESET" TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE
      *
     C     DFOPT         IFEQ      ' 8'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP702'
     C                   PARM                    DFETCD
     C                   PARM                    DFETDS
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * UPON RETURNING FROM THE CALLED PROGRAM,
      * CLEAR THE SUBFILE OPTION SELECTOR ENTERED BY THE USER AND
      * REWRITE THE SUBFILE RECORD
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   UPDATE    HP401S1
     C                   ENDIF                                                  IF REC READ
      *
     C                   ENDDO                                                  DO PROCESS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LIST1 - PRINT A LISTING OF THE MASTER FILE FROM SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LIST1        BEGSR
      *
      * SET UP THE LDA FIELDS
      *
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO AN
      * 80-CHARACTER FIELD FOR PASSING AS A PARM WITH QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $ERR1  - SUBROUTINE TO SET THE SUBFILE TO REDISPLAY AT
      *          THE FIRST PAGE THAT HAS ERRORS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANKS       MGI
     C                   PARM      *BLANKS       MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD           10
     C                   MOVE      *BLANK        INBOBO            5
      *
     C                   MOVE      *BLANK        OUBOBO            5
     C                   MOVE      *BLANK        OUBODS           30
     C                   MOVE      *BLANK        OUDVCD            5
     C                   MOVEL     NO            TERMFL            1
     C                   MOVEL     NO            INDVFL            1
     C                   MOVEL     NO            INBOFL            1
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR
     C                   PARM                    INFNCD
     C                   PARM                    INBOBO
     C                   PARM                    INDVFL                         CHECK DIV?
     C                   PARM                    INBOFL                         CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO
     C                   PARM                    OUBODS
     C                   PARM                    OUDVCD
     C                   PARM                    SECFL             1
     C                   PARM                    OUBOFL            1
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *----------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *   NONE
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              6            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
      *
      *  INITIALIZE RETURN CODE
      *
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
      *
      * INITIALIZE LDA FIELDS
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL(P)  '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     15            WKPLIN            2 0          SFLPAG(0015)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   EXSR      $SEC
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVE      YES           TERMFL
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP401CL)) JOB(EQUIPTYPE) JOBQ(__________)
