// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUO5XFR
// ?Date: 14.08.2025 Time: 03:51:01
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Modification history
DO;

//?11/19/2019 JBB E15814 - Transportation Extract Source from Whs
//?                        Function created.  This function is called
//?                        from program SH250.  It reads all of the
//?                        Orders for the incoming Load ID.  The
//?                        Warehouse Types for all orders are read.
//?                        Based on the Warehouse Types on the Load,
//?                        the program will return external, internal,
//?                        or mixed to the calling program.
ENDDO;

EXECUTE FUNCTION(RTV Order Type - SalesRT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2127312;
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Order_Type_Sales);
{
 //?USER: Initialize routine

 // PAR.Order Type - Sales = CON.*BLANK
 PAR.Order_Type_Sales = *BLANK;

 //?USER: Process Data record

 // PAR.Order Type - Sales = DB1.Order Type - Sales
 PAR.Order_Type_Sales = DB1.Order_Type_Sales;

 QUIT;

}


//?If not a transfer order, continue
CASE;

// IF LCL.Order Type - Sales is Not a Transfer Order
IF LCL.Order_Type_Sales <> 'TR';

EXECUTE FUNCTION(Rtv Whs Loc for Load  RT) TYPE(RTVOBJ) FILE(OMFLCPP)           AC2179059;
PARAMETER(PAR.Load_ID);
PARAMETER(PAR.Stop_Drop);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Warehouse_Location_E_I_M);
{
 //?USER: Initialize routine

 // PAR.Warehouse Location E-I-M = CND.not entered
 PAR.Warehouse_Location_E_I_M = *BLANK;

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 //?USER: Process Data record

 EXECUTE FUNCTION(RTV Order Type - SalesRT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2127312;
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Order_Type_Sales);
 {
  //?USER: Initialize routine

  // PAR.Order Type - Sales = CON.*BLANK
  PAR.Order_Type_Sales = *BLANK;

  //?USER: Process Data record

  // PAR.Order Type - Sales = DB1.Order Type - Sales
  PAR.Order_Type_Sales = DB1.Order_Type_Sales;

  QUIT;

 }

 //?If Order Type - Sales is not a Transfer, continue
 CASE;

 // IF LCL.Order Type - Sales is Not a Transfer Order
 IF LCL.Order_Type_Sales <> 'TR';

 EXECUTE FUNCTION(RTV Whse/Non Cancelled RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1428700;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Warehouse_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  //?C2748:  Changed RTV Warehouse Code RT to exclude Cancelled lines.
  CASE;

  // IF DB1.Detail Line Status is Cancelled
  IF DB1.Detail_Line_Status = 'X';

  // IF *OTHERWISE
  IF *OTHERWISE;

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

 }

 //?If Warehouse code found, retrieve Warehouse Location
 CASE;

 // IF LCL.Warehouse Code is Not Blanks
 IF LCL.Warehouse_Code <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Location RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1564246;
 PARAMETER(LCL.Warehouse_Code);
 PARAMETER(LCL.Warehouse_Location);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  QUIT;

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?Determine if external, internal, or mixed
 CASE;

 // IF NOT PGM.*Return code is *Normal
 IF ! PGM.*Return_code = *BLANK;

 // PAR.Warehouse Location E-I-M = CND.not entered
 PAR.Warehouse_Location_E_I_M = *BLANK;

 //?Determine if external, internal, or mixed
 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // PAR.Warehouse Location E-I-M = LCL.Warehouse Location
 PAR.Warehouse_Location_E_I_M = LCL.Warehouse_Location;

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 //?Determine if external, internal, or mixed
 // IF LCL.Warehouse Location is External
 IF ( LCL.Warehouse_Location = 'E';

 // AND PAR.Warehouse Location E-I-M is Internal
 AND PAR.Warehouse_Location_E_I_M = 'I' );

 // OR LCL.Warehouse Location is Internal (Plant)
 OR ( LCL.Warehouse_Location = 'I';

 // AND PAR.Warehouse Location E-I-M is External
 AND PAR.Warehouse_Location_E_I_M = 'E' );

 // PAR.Warehouse Location E-I-M = CND.Mixed
 PAR.Warehouse_Location_E_I_M = 'M';

 QUIT;

 //?Determine if external, internal, or mixed
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Warehouse Location E-I-M = LCL.Warehouse Location
 PAR.Warehouse_Location_E_I_M = LCL.Warehouse_Location;

 ENDIF;

 //?If Warehouse code found, retrieve Warehouse Location
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PAR.Warehouse Location E-I-M = CND.not entered
 PAR.Warehouse_Location_E_I_M = *BLANK;

 ENDIF;

 ENDIF;

}


ENDIF;

