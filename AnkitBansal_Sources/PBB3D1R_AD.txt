// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBB3D1R
// ?Date: 14.08.2025 Time: 03:47:24
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// KEY.Company Number = PAR.Company Number
KEY.Company_Number = PAR.Company_Number;

// KEY.Invoice Number = PAR.Invoice Number
KEY.Invoice_Number = PAR.Invoice_Number;

// KEY.Invoice Suffix = PAR.Invoice Suffix
KEY.Invoice_Suffix = PAR.Invoice_Suffix;

//?USER: Load detail screen from DBF record

EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(DB1.AR_Customer_Number);
PARAMETER(DTL.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DB1.Company_Number);
PARAMETER(DTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Bank Description   RT) TYPE(RTVOBJ) FILE(CAEBREP)          AC1333216;
PARAMETER(DB1.Bank_Code);
PARAMETER(DTL.Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.USR Amount Applied = DB1.Adjustment Amount + DB1.Amount Paid
DTL.USR_Amount_Applied = DB1.Adjustment_Amount + DB1.Amount_Paid;

EXECUTE FUNCTION(Rtv Note Exists       RT) TYPE(RTVOBJ) FILE(PMEDCPP)           AC1899753;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Invoice_Number);
PARAMETER(DB1.Invoice_Suffix);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// DTL.Text USR 12 = CON.NOTES EXIST
DTL.Text_USR_12 = 'NOTES EXIST';

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Text USR 12 = CON.*BLANK
DTL.Text_USR_12 = *BLANK;

ENDIF;

//?USER: Validate detail screen

//?This request is to only allow certain option for a user selection
//?this FUNCTION was copied from PDC0D1R and all not want is * out
CASE;

// IF DTL.*CMD key is CF16
IF DTL.*CMD_key = '16';

//?OA/CM Transaction.
DO;

// Call program DSP OA/CM Transactions DF.
CALL PROGRAM(DSP OA/CM Transactions DF) ('PDYRDFR');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Invoice_Number);
PARAMETER(DTL.Invoice_Suffix);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDDO;

// IF DTL.*CMD key is CF19
IF DTL.*CMD_key = '19';

//?Display Attach To.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Dsp A/R Header Ext    DR.
CALL PROGRAM(Dsp A/R Header Ext    DR) ('PBYMD1R');
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Invoice_Number);
PARAMETER(DTL.Invoice_Suffix);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

ENDIF;

ENDIF;

