     H/TITLE Edt Enter Transfer Dtl EF Edit file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     W* Warning: This program does not set on the LR indicator
      *
     H* SYNOPSIS :
     H* - Maintain database file using subfile display
     H* - Existing records may be updated
     H* - Key changes are not allowed
     H* - New records cannot be added
      *
     H* Generated by CA 2E release 8.7.1 (1635)
     H* Function type : Edit file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 01/26/24  Time  : 12:30:33
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCAVLLSL0IF  E           K        DISK
      * Values list details file
      *
     FOMHEEFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: Edt Enter Transfer Dtl EF Edit file
      *
     FCAB1REL0IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Item Balance Detail       Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse Codes           Active records only
      *
     FCAAMREL1IF  E           K        DISK
      * RTV : Unit of Measure           Retrieval index       NV
      *
     FCAAFREL1IF  E           K        DISK
      * RTV : Calendar                  Retrieval index       NV
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FPUC6REL1IF  E           K        DISK
      * RTV : OMS Transformation Ctl    Retrieval index
      *
     FCABZREL1IF  E           K        DISK
      * RTV : Company Item              Retrieval index       NV
      *
     FCAB7CPLEIF  E           K        DISK
      * RSQ : Item Transaction Detail   Normal KEY Sequence (D)
      *
     FCAADREL1IF  E           K        DISK
      * RTV : Warehouse Codes           Retrieval index       NV
      *
     FCAB1REL4IF  E           K        DISK
      * RTV : Item Balance Detail       Active only
      *
     FPDL2REL0IF  E           K        DISK
      * RTV : Warehouse Location        Retrieval index
      *
     FCAB0RELJIF  E           K        DISK
      * RTV : Item Balance              Acitve records only
      *
     FCAB7CPL1IF  E           K        DISK
      * RTV : Item Transaction Detail   Retrieval index       NV
      *
     FCAB0REL1IF  E           K        DISK
      * RTV : Item Balance              Retrieval index       NV
      *
     FCADPREL1IF  E           K        DISK
      * RTV : System Values             Retrieval index       NV
      *
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCAB7CPL0IF  E           K        DISK                      A
      * UPD : Item Transaction Detail   Update index
      *
     FCAB1REL1UF  E           K        DISK                      A
      * UPD : Item Balance Detail       Update index
      *
     FCAB0REL0UF  E           K        DISK                      A
      * UPD : Item Balance              Update index
      *
     E                    #L7         7  1
     E                    #L3         3  1
     E                    UCT        40  1               CENTER TABLE
      * Long constants
     E                    @CN#    1  11  6   @CN    25
     I@B7CPJZ
      * Item Transaction Detail   Update index
      * Renamed input format fields
     I              B7AIC3                          WAAIC3
     I              B7HGCD                          WAHGCD
     I              B7AJCD                          WAAJCD
     I              B7W9ST                          WAW9ST
     I              B7BSST                          WABSST
     I              B7B4DT                          WAB4DT
     I              B7C4NY                          WAC4NY
     I              B7DXNB                          WADXNB
     I              B7ELDT                          WAELDT
     I              B7HVCD                          WAHVCD
     I              B7F1ST                          WAF1ST
     I              B7AUNA                          WAAUNA
     I              B7A5QT                          WAA5QT
     I              B7AHWG                          WAAHWG
     I              B7AKCS                          WAAKCS
     I              B7CGCD                          WACGCD
     I              B7AYVA                          WAAYVA
     I              B7BJNA                          WABJNA
     I              B7CKNB                          WACKNB
     I              B7BMST                          WABMST
     I              B7CQCD                          WACQCD
     I              B7DTCD                          WADTCD
     I              B7MGNA                          WAMGNA
     I              B7TRBN                          WATRBN
     I              B7TRBS                          WATRBS
     I              B7C4NB                          WAC4NB
     I              B7RINB                          WARINB
     I              B7RHNB                          WARHNB
     I              B7RGNB                          WARGNB
     I              B7M3NA                          WAM3NA
     I              B7AWTM                          WAAWTM
     I              B7XLCD                          WAXLCD
     I              B7K7DT                          WAK7DT
     I              B7UVST                          WAUVST
     I              B7UWST                          WAUWST
     I              B7UXST                          WAUXST
     I              B7VSST                          WAVSST
     I              B7AATM                          WAAATM
     I              B7AYNA                          WAAYNA
     I              B7A0NA                          WAA0NA
     I              B7AXDT                          WAAXDT
      *
     I@ADREAO
      * Warehouse Codes           Retrieval index       NV
      * Renamed input format fields
     I              ADAJCD                          WBAJCD
     I              ADF8NA                          WBF8NA
     I              ADACNA                          WBACNA
     I              ADADNA                          WBADNA
     I              ADAENA                          WBAENA
     I              ADAJNA                          WBAJNA
     I              ADBTTX                          WBBTTX
     I              ADAOCD                          WBAOCD
     I              ADBGCD                          WBBGCD
     I              ADVHST                          WBVHST
     I              ADMPNA                          WBMPNA
     I              ADWPST                          WBWPST
     I              ADXUST                          WBXUST
     I              ADT0ST                          WBT0ST
     I              ADT1ST                          WBT1ST
     I              ADDBNB                          WBDBNB
     I              ADT2ST                          WBT2ST
     I              ADT3ST                          WBT3ST
     I              ADT4ST                          WBT4ST
     I              ADT6ST                          WBT6ST
     I              ADBWC3                          WBBWC3
     I              ADBTC3                          WBBTC3
     I              ADBUC3                          WBBUC3
     I              ADBVC3                          WBBVC3
     I              ADFCAA                          WBFCAA
     I              ADRQSX                          WBRQSX
     I              ADRRSX                          WBRRSX
     I              ADRSSX                          WBRSSX
     I              ADRTSX                          WBRTSX
     I              ADT7ST                          WBT7ST
     I              ADT8ST                          WBT8ST
     I              ADRNSX                          WBRNSX
     I              ADROSX                          WBROSX
     I              ADRPSX                          WBRPSX
     I              ADUVST                          WBUVST
     I              ADUWST                          WBUWST
     I              ADUXST                          WBUXST
     I              ADVSST                          WBVSST
     I              ADAATM                          WBAATM
     I              ADAYNA                          WBAYNA
     I              ADA0NA                          WBA0NA
     I              ADAXDT                          WBAXDT
      *
     ICAB1RL4
      * Item Balance Detail       Active only
      * Renamed input format fields
     I              B1AIC3                          WCAIC3
     I              B1HGCD                          WCHGCD
     I              B1AJCD                          WCAJCD
     I              B1ELDT                          WCELDT
     I              B1ABWG                          WCABWG
     I              B1AGQT                          WCAGQT
     I              B1AHQT                          WCAHQT
     I              B1AIQT                          WCAIQT
     I              B1CTST                          WCCTST
     I              B1ACWG                          WCACWG
     I              B1ARQT                          WCARQT
     I              B1ASQT                          WCASQT
     I              B1ATQT                          WCATQT
     I              B1HDQT                          WCHDQT
     I              B1HEQT                          WCHEQT
     I              B1F6ST                          WCF6ST
     I              B1BMWG                          WCBMWG
     I              B1DSQT                          WCDSQT
     I              B1DTQT                          WCDTQT
     I              B1DUQT                          WCDUQT
     I              B1DHDT                          WCDHDT
     I              B1AGCS                          WCAGCS
     I              B1AECS                          WCAECS
     I              B1IDVA                          WCIDVA
     I              B1K7DT                          WCK7DT
     I              B1RINB                          WCRINB
     I              B1RHNB                          WCRHNB
     I              B1RGNB                          WCRGNB
     I              B1UVST                          WCUVST
     I              B1UWST                          WCUWST
     I              B1UXST                          WCUXST
     I              B1VSST                          WCVSST
     I              B1AATM                          WCAATM
     I              B1AYNA                          WCAYNA
     I              B1A0NA                          WCA0NA
     I              B1AXDT                          WCAXDT
      *
     I@B0REYY
      * Item Balance              Acitve records only
      * Renamed input format fields
     I              B0AIC3                          WDAIC3
     I              B0HGCD                          WDHGCD
     I              B0AJCD                          WDAJCD
     I              B0AGCS                          WDAGCS
     I              B0AECS                          WDAECS
     I              B0BACS                          WDBACS
     I              B0BBCS                          WDBBCS
     I              B0CBPR                          WDCBPR
     I              B0GUDT                          WDGUDT
     I              B0XYST                          WDXYST
     I              B0CTPR                          WDCTPR
     I              B0G4DT                          WDG4DT
     I              B0BOWG                          WDBOWG
     I              B0DDQT                          WDDDQT
     I              B0DEQT                          WDDEQT
     I              B0DFQT                          WDDFQT
     I              B0HDQT                          WDHDQT
     I              B0HEQT                          WDHEQT
     I              B0AJQT                          WDAJQT
     I              B0AQQT                          WDAQQT
     I              B0AUQT                          WDAUQT
     I              B0EMQT                          WDEMQT
     I              B0DOQT                          WDDOQT
     I              B0ATNA                          WDATNA
     I              B0AKDT                          WDAKDT
     I              B0ANDT                          WDANDT
     I              B0IDVA                          WDIDVA
     I              B0JVST                          WDJVST
     I              B0BZPC                          WDBZPC
     I              B0DGQT                          WDDGQT
     I              B0DIDT                          WDDIDT
     I              B0ALCD                          WDALCD
     I              B0BFDY                          WDBFDY
     I              B0DJDT                          WDDJDT
     I              B0BGDY                          WDBGDY
     I              B0DKDT                          WDDKDT
     I              B0J2ST                          WDJ2ST
     I              B0DJQT                          WDDJQT
     I              B0BNWG                          WDBNWG
     I              B0DLDT                          WDDLDT
     I              B0DPQT                          WDDPQT
     I              B0DQQT                          WDDQQT
     I              B0DMDT                          WDDMDT
     I              B0M0ST                          WDM0ST
     I              B0J9ST                          WDJ9ST
     I              B0KBST                          WDKBST
     I              B0AKC8                          WDAKC8
     I              B0RINB                          WDRINB
     I              B0RHNB                          WDRHNB
     I              B0RGNB                          WDRGNB
     I              B0UVST                          WDUVST
     I              B0UWST                          WDUWST
     I              B0UXST                          WDUXST
     I              B0VSST                          WDVSST
     I              B0AATM                          WDAATM
     I              B0AYNA                          WDAYNA
     I              B0A0NA                          WDA0NA
     I              B0AXDT                          WDAXDT
      *
     IRB7CPJ3
      * Item Transaction Detail   Retrieval index       NV
      * Renamed input format fields
     I              B7AIC3                          WEAIC3
     I              B7HGCD                          WEHGCD
     I              B7AJCD                          WEAJCD
     I              B7W9ST                          WEW9ST
     I              B7BSST                          WEBSST
     I              B7B4DT                          WEB4DT
     I              B7C4NY                          WEC4NY
     I              B7DXNB                          WEDXNB
     I              B7ELDT                          WEELDT
     I              B7HVCD                          WEHVCD
     I              B7F1ST                          WEF1ST
     I              B7AUNA                          WEAUNA
     I              B7A5QT                          WEA5QT
     I              B7AHWG                          WEAHWG
     I              B7AKCS                          WEAKCS
     I              B7CGCD                          WECGCD
     I              B7AYVA                          WEAYVA
     I              B7BJNA                          WEBJNA
     I              B7CKNB                          WECKNB
     I              B7BMST                          WEBMST
     I              B7CQCD                          WECQCD
     I              B7DTCD                          WEDTCD
     I              B7MGNA                          WEMGNA
     I              B7TRBN                          WETRBN
     I              B7TRBS                          WETRBS
     I              B7C4NB                          WEC4NB
     I              B7RINB                          WERINB
     I              B7RHNB                          WERHNB
     I              B7RGNB                          WERGNB
     I              B7M3NA                          WEM3NA
     I              B7AWTM                          WEAWTM
     I              B7XLCD                          WEXLCD
     I              B7K7DT                          WEK7DT
     I              B7UVST                          WEUVST
     I              B7UWST                          WEUWST
     I              B7UXST                          WEUXST
     I              B7VSST                          WEVSST
     I              B7AATM                          WEAATM
     I              B7AYNA                          WEAYNA
     I              B7A0NA                          WEA0NA
     I              B7AXDT                          WEAXDT
      *
     I@B0REJX
      * Item Balance              Retrieval index       NV
      * Renamed input format fields
     I              B0AIC3                          WFAIC3
     I              B0HGCD                          WFHGCD
     I              B0AJCD                          WFAJCD
     I              B0AGCS                          WFAGCS
     I              B0AECS                          WFAECS
     I              B0BACS                          WFBACS
     I              B0BBCS                          WFBBCS
     I              B0CBPR                          WFCBPR
     I              B0GUDT                          WFGUDT
     I              B0XYST                          WFXYST
     I              B0CTPR                          WFCTPR
     I              B0G4DT                          WFG4DT
     I              B0BOWG                          WFBOWG
     I              B0DDQT                          WFDDQT
     I              B0DEQT                          WFDEQT
     I              B0DFQT                          WFDFQT
     I              B0HDQT                          WFHDQT
     I              B0HEQT                          WFHEQT
     I              B0AJQT                          WFAJQT
     I              B0AQQT                          WFAQQT
     I              B0AUQT                          WFAUQT
     I              B0EMQT                          WFEMQT
     I              B0DOQT                          WFDOQT
     I              B0ATNA                          WFATNA
     I              B0AKDT                          WFAKDT
     I              B0ANDT                          WFANDT
     I              B0IDVA                          WFIDVA
     I              B0JVST                          WFJVST
     I              B0BZPC                          WFBZPC
     I              B0DGQT                          WFDGQT
     I              B0DIDT                          WFDIDT
     I              B0ALCD                          WFALCD
     I              B0BFDY                          WFBFDY
     I              B0DJDT                          WFDJDT
     I              B0BGDY                          WFBGDY
     I              B0DKDT                          WFDKDT
     I              B0J2ST                          WFJ2ST
     I              B0DJQT                          WFDJQT
     I              B0BNWG                          WFBNWG
     I              B0DLDT                          WFDLDT
     I              B0DPQT                          WFDPQT
     I              B0DQQT                          WFDQQT
     I              B0DMDT                          WFDMDT
     I              B0M0ST                          WFM0ST
     I              B0J9ST                          WFJ9ST
     I              B0KBST                          WFKBST
     I              B0AKC8                          WFAKC8
     I              B0RINB                          WFRINB
     I              B0RHNB                          WFRHNB
     I              B0RGNB                          WFRGNB
     I              B0UVST                          WFUVST
     I              B0UWST                          WFUWST
     I              B0UXST                          WFUXST
     I              B0VSST                          WFVSST
     I              B0AATM                          WFAATM
     I              B0AYNA                          WFAYNA
     I              B0A0NA                          WFA0NA
     I              B0AXDT                          WFAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I@1DBRC    E DSCAB1REL1
      * UPD : Item Balance Detail       Update index
      * Current/previous master file format fields for change control
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
     IQCAB71    E DSCAB7CPL0
      * UPD : Item Transaction Detail   Update index
      * Renamed input format fields
     I              B7AIC3                          WAAIC3
     I              B7HGCD                          WAHGCD
     I              B7AJCD                          WAAJCD
     I              B7W9ST                          WAW9ST
     I              B7BSST                          WABSST
     I              B7B4DT                          WAB4DT
     I              B7C4NY                          WAC4NY
     I              B7DXNB                          WADXNB
     I              B7ELDT                          WAELDT
     I              B7HVCD                          WAHVCD
     I              B7F1ST                          WAF1ST
     I              B7AUNA                          WAAUNA
     I              B7A5QT                          WAA5QT
     I              B7AHWG                          WAAHWG
     I              B7AKCS                          WAAKCS
     I              B7CGCD                          WACGCD
     I              B7AYVA                          WAAYVA
     I              B7BJNA                          WABJNA
     I              B7CKNB                          WACKNB
     I              B7BMST                          WABMST
     I              B7CQCD                          WACQCD
     I              B7DTCD                          WADTCD
     I              B7MGNA                          WAMGNA
     I              B7TRBN                          WATRBN
     I              B7TRBS                          WATRBS
     I              B7C4NB                          WAC4NB
     I              B7RINB                          WARINB
     I              B7RHNB                          WARHNB
     I              B7RGNB                          WARGNB
     I              B7M3NA                          WAM3NA
     I              B7AWTM                          WAAWTM
     I              B7XLCD                          WAXLCD
     I              B7K7DT                          WAK7DT
     I              B7UVST                          WAUVST
     I              B7UWST                          WAUWST
     I              B7UXST                          WAUXST
     I              B7VSST                          WAVSST
     I              B7AATM                          WAAATM
     I              B7AYNA                          WAAYNA
     I              B7A0NA                          WAA0NA
     I              B7AXDT                          WAAXDT
      *
     IYARDCS      DS                            163
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
     IQCAB01    E DSCAB0REL0
      * UPD : Item Balance              Update index
      *
     IYBRDCS      DS                            245
     IYCRDCS      DS                            245
     IYDRDCS      DS                            163
      * Outward parameters
     IPARC        DS                            157
      * RCD : PAR API WIM Inv Shipping2
      * I :  Company Number
     I                                    P   1   20PAAIC3
      * I :  Item Code
     I                                    P   3   60PAHGCD
      * I :  Ship From Warehouse
     I                                        7   9 PAVPCD
      * I :  WIM Inventory Trans ID
     I                                       10  12 PANOSC
      * I :  WIM Inventory Trans Type
     I                                       13  15 PANPSC
      * I :  Transaction Date
     I                                    P  16  190PAA9DT
      * I :  Production Date
     I                                    P  20  230PAELDT
      * I :  Item Transaction Source
     I                                       24  25 PAF1ST
      * I :  Transaction Description
     I                                       26  55 PAVQNA
      * I :  Transaction Reason Code
     I                                       56  58 PAA1AB
      * I :  Order Number
     I                                    P  59  620PAC4NB
      * I :  Shift Number
     I                                       63  63 PAXLCD
      * I :  Ship To Warehouse
     I                                       64  66 PAL9AA
      * I :  Transaction Weight
     I                                    P  67  722PAAHWG
      * I :  Transaction Quantity
     I                                    P  73  782PAA5QT
      * I :  USR Unship Flag
     I                                       79  79 PAUSST
      * I :  Inter-Plant Transfer USR
     I                                       80  80 PAA5TX
      * O :  API EccResult-MsgId U
     I                                       81  87 PACLAB
      * O :  API EccResult-MsgDesc U
     I                                       88 137 PAVGU1
      * B :  API Request Key U
     I                                      138 147 PACKAB
      * I :  API Mode U
     I                                      148 157 PACJAB
      *
      * Outward parameters
     IPBRC        DS                              9
      * KEY : Item Balance              Co/Whse/Item
      * I : RST Company Number
     I                                    P   1   20PBAIC3
      * I : RST Warehouse Code
     I                                        3   5 PBAJCD
      * B : MAP Item Code
     I                                    P   6   90PBHGCD
      *
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Item Transaction Detail
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Item Code
     I                                    P   3   60P1HGCD
      * I : RST Warehouse Code
     I                                        7   9 P1AJCD
      * I :  Inventory Trans ID
     I                                       10  10 P1W9ST
      * I :  Inventory Trans Type
     I                                       11  12 P1BSST
      * I :  Transaction Date Code
     I                                    P  13  160P1B4DT
      * I : MAP Production Date
     I                                    P  17  200P1ELDT
      * I : MAP UOM Transaction
     I                                       21  22 P1HVCD
      * N :  Item Transaction Source
     I                                       23  24 P1F1ST
      * I : MAP Description
     I                                       25  54 P1AUNA
      * N :  Transaction Quantity
     I                                    P  55  602P1A5QT
      * N :  Transaction Weight
     I                                    P  61  662P1AHWG
      * N :  USR Transaction_Unit Cost
     I                                    P  67  724P1AKCS
      * I :  UOM Cost
     I                                       73  74 P1CGCD
      * N :  Extended Amount
     I                                    P  75  802P1AYVA
      * I :  Reason Code
     I                                       81  83 P1CQCD
      * I :  Transfer Batch Number
     I                                    P  84  870P1TRBN
      * B :  Transfer Batch Sequence
     I                                    P  88  890P1TRBS
      * I : MAP Shift Number
     I                                       90  90 P1XLCD
     IP2PARM      DS
      * FLD: Company Item
      * I : MAP Description Line One
     I                                        1  30 P2AVNA
      * I :  UOM Primary
     I                                       31  32 P2ADCD
      * I :  Conversion Factor 1
     I                                    P  33  374P2AWPC
      * I :  Operation Factor 1
     I                                       38  38 P2LXST
      * I :  UOM Second
     I                                       39  40 P2AECD
      * I :  Conversion Factor 2
     I                                    P  41  454P2AXPC
      * I :  Operation Factor 2
     I                                       46  46 P2LYST
      * I :  UOM Third
     I                                       47  48 P2AFCD
      * I :  Unit Weight
     I                                    P  49  542P2AIWG
      * I :  Production Date Control
     I                                       55  55 P2FZST
      * I :  Catch Weight Status
     I                                       56  56 P2AVST
     IP3PARM      DS
      * FLD: Warehouse Codes
      * I : MAP Warehouse Description
     I                                        1  30 P3F8NA
     IP4PARM      DS
      * FLD: *Arrays
      * I : MAP USR Warehouse Code
     I                                        1   3 P4CPCD
      * I : MAP Name
     I                                        4  33 P4ADTX
      * I : MAP Condition Desc. 1  USR
     I                                       34  58 P4HLTX
      * I : MAP USR Hold Description
     I                                       59  88 P4CUNA
     IP5PARM      DS
      * FLD: Item Balance
      * I :  Unit Cost Per Pound
     I                                    P   1   64P5AGCS
     IP6PARM      DS
      * I :  Unit Cost - Detail
     I                                    P   1   64P6ARCS
     IP7PARM      DS
      * I :  Lot Number
     I                                    P   1   30P7LXNM
     IP8PARM      DS
      * I :  Lot Number USR
     I                                    P   1   30P8LTNT
     IP9PARM      DS
      * FLD: *Arrays
      * O :  Inventory Updated USR
     I                                        1   1 P9ORSC
     I            DS
     I                                        1 132 ZAMSDA
      * Message data for 'Quantity cannot be neg.'
      * Message data for 'Quantity is required'
      * Message data for 'Catch weight must be +'
      * Message data for 'Catch weight is required'
      * Message data for 'Prod Date must be entered'
      * Production Date
     I                                    P   1   40ZA0001
      * Message data for 'Prod Date must be blank'
      * Production Date
     I                                    P   1   40ZA0002
      * Message data for 'Last item not processed'
      * @Item Code
     I                                        1   7 ZA0003
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1HGCD    PARM           WP0002  70       Item Code
     C           P1AJCD    PARM           WP0003  3        Warehouse Code
     C           P1W9ST    PARM           WP0004  1        Inventory Trans
     C           P1BSST    PARM           WP0005  2        Inventory Trans
     C           P1B4DT    PARM           WP0006  70       Transaction Dat
     C           P1ELDT    PARM           WP0007  70       Production Date
     C           P1HVCD    PARM           WP0008  2        UOM Transaction
     C           P1AUNA    PARM           WP0009 30        Description
     C           P1CGCD    PARM           WP0010  2        UOM Cost
     C           P1CQCD    PARM           WP0011  3        Reason Code
     C           P1TRBN    PARM           WP0012  70       Transfer Batch
     C           P1TRBS    PARM P1TRBS    WP0013  30       Transfer Batch
     C           P1XLCD    PARM           WP0014  1        Shift Number
     C           P2AVNA    PARM           WP0015 30        Description Lin
     C           P2ADCD    PARM           WP0016  2        UOM Primary
     C           P2AWPC    PARM           WP0017  94       Conversion Fact
     C           P2LXST    PARM           WP0018  1        Operation Facto
     C           P2AECD    PARM           WP0019  2        UOM Second
     C           P2AXPC    PARM           WP0020  94       Conversion Fact
     C           P2LYST    PARM           WP0021  1        Operation Facto
     C           P2AFCD    PARM           WP0022  2        UOM Third
     C           P2AIWG    PARM           WP0023 112       Unit Weight
     C           P2FZST    PARM           WP0024  1        Production Date
     C           P2AVST    PARM           WP0025  1        Catch Weight St
     C           P3F8NA    PARM           WP0026 30        Warehouse Descr
     C           P4CPCD    PARM           WP0027  3        USR Warehouse C
     C           P4ADTX    PARM           WP0028 30        Name
     C           P4HLTX    PARM           WP0029 25        Condition Desc.
     C           P4CUNA    PARM           WP0030 30        USR Hold Descri
     C           P5AGCS    PARM           WP0031 114       Unit Cost Per P
     C           P6ARCS    PARM           WP0032 114       Unit Cost - Det
     C           P7LXNM    PARM           WP0033  50       Lot Number
     C           P8LTNT    PARM           WP0034  50       Lot Number USR
     C                     PARM P9ORSC    WP0035  1        Inventory Updat
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise and load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END
     C                     END
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise & load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
     C           YPMTFD    IFEQ *BLANKS
      * USER: Initialize subfile header
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SARVGN
      * Rtv UOM Description    RT - Unit of Measure  * 
     C                     EXSR SBRVGN
     C                     END
      *................................................................
      * Position file
     C           KPOS      KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
      * Setup key
     C                     Z-ADD#2AIC3    B1AIC3
     C                     Z-ADD#2HGCD    B1HGCD
     C                     MOVEL#2AJCD    B1AJCD
     C                     Z-ADD#2ELDT    B1ELDT
      * 82=EOF
     C           KPOS      SETLL@B1REJ0              82    *
      * 82=EOF
     C           KRST      KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    B1AIC3
     C                     Z-ADD#2HGCD    B1HGCD
     C                     MOVEL#2AJCD    B1AJCD
     C  N82      KRST      READE@B1REJ0                9182*
      * Load subfile page
     C                     EXSR BBLDSF
      *................................................................
      * If no records found, display error message
     C   82      ##RR      IFEQ *ZERO                      IF
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
      *
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
     C                     SETOF                     84    No SFLNXTCHG
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@B1REJ0                  90*
     C  N82                READ @B1REJ0                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVE *ALL'0'   WKIND0  2
     C                     MOVE *ALL'1'   WKIND1  2
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
     C                     Z-ADD*ZERO     ##RROK  50
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next subfile page
     C  N82      ##RROK    DOWLT##SFLN                     DO
     C                     ADD  1         ##RR
     C                     MOVEAWKIND0    *IN,31
     C                     SETOF                     87    *
      * Clear subfile fields
     C                     EXSR MAIZ#1
      * Load SFL fields
     C                     EXSR MBFL#1
      * Record will be selected unless overridden
     C                     MOVEL'Y'       W0RSL   1
      * USER: Initialize subfile record (existing record)
      * CASE: WRK.First Time Flag EQ WRK.BLANK
     C           WUTAST    IFEQ WUGSTX                     *IF
      * *Set Cursor: RCD.USR Quantity  (*Override=*NO)
     C                     Z-ADD##RR      W0RR0
     C           ##RR      DIV  ##SFPG    W0ROW0
     C                     MVR            W0ROW0
     C           W0ROW0    IFEQ 0
     C           ##SFPG    SUB  1         W0ROW0
     C                     ELSE
     C                     SUB  1         W0ROW0
     C                     END
     C                     ADD  013       W0ROW0
     C                     Z-ADD024       W0COL0
     C                     MOVEL'0'       W0OVR0           *NO
     C                     MOVEL'Y'       WUTAST           First Time Flag
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0001 112       Quantity based
     C                     Z-ADD*ZERO     WN0002 112       Quantity based
     C                     Z-ADD*ZERO     WN0003 112       Quantity based
      *
      * Clc Consolidate On Hnd IF
      * Calculate unit of measure 2 equivalent for unit of measure 3
      * CASE: PAR.Quantity on Hand - U/M3 is not equal zero
     C           B1ATQT    IFNE 0                          *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P2AXPC    IFNE 0                          *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P2LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P2AXPC    IFNE 0                          *IF
     C           B1ATQT    DIV  P2AXPC    WN0002    H      Quantity based
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P2LYST    IFEQ 'D'                        *IF
     C           B1ATQT    MULT P2AXPC    WN0002    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  B1ATQT    WN0002           Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  B1ASQT    WN0002           Quantity based
      * Calculate unit of measure 1 equivalent for unit of measure 2
      * CASE: PAR.Quantity based on U/M2 S is not equal zero
     C           WN0002    IFNE 0                          *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P2AWPC    IFNE 0                          *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P2LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P2AWPC    IFNE 0                          *IF
     C           WN0002    DIV  P2AWPC    WN0001    H      Quantity based
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P2LXST    IFEQ 'D'                        *IF
     C           WN0002    MULT P2AWPC    WN0001    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     ADD  WN0002    WN0001           Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     ADD  B1ARQT    WN0001           Quantity based
     C                     Z-ADDWN0001    #RBQQT           Quantity Total
      * Skip records for non-matching production date or zero balance
      * CASE: PAR.Production Date is entered
     C           P1ELDT    IFNE *ZERO                      *IF
      * CASE: PAR.Production Date NE DB1.Production Date
     C           P1ELDT    IFNE B1ELDT                     *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE:
      *  - c1 AND c2
      *   |- c1    : RCD.On Hand is Equal to zero
      *   |- c2    : PAR.Production Date Control is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           #RBQQT    IFEQ *ZERO                      *IF
     C           P2FZST    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             *FI
      * Default to production date to from production date
      * CASE: PAR.Production Date Control is yes
     C           P2FZST    IFEQ 'Y'                        *IF
     C                     Z-ADD#1ELDT    #RGXDT           Production Date
     C                     END                             *FI
      * If record dropped...
     C                     SUB  1         ##RR
     C           W0RSL     CABNE'Y'       BB020
     C                     ADD  1         ##RR
      * Validate subfile record and calculate derived fields
     C                     EXSR DFV2RC
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Output to subfile
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * 82=EOF
     C           KRST      READE@B1REJ0                  82*
     C  N82                END
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Convert fields to external form
     C  N30N27             EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Quit if reload requested
     C           W0RSF     CABEQ'Y'       DAEXIT
      *
     C   81                DO
      * No data entered as yet
     C                     MOVEL'N'       WKIPIN  1
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Process subfile records
     C                     EXSR DBPRSF
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * If data entered
     C           WKIPIN    IFEQ 'Y'
      * Prompt for confirmation
     C                     EXSR DHPRCF
      * Exit if not confirmed
     C           *IN99     IFEQ '1'
     C                     SETOF                     99
     C                     GOTO DAEXIT
     C                     END
      * Update DBF from subfile
     C                     EXSR EAPRSF
      * If error during update, exit:
     C           *IN99     CABEQ'1'       DAEXIT
     C                     END                             WKIPIN
     C                     END
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
     C                     EXSR DCPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
     C                     SETOF                     87    *
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,31
      * No errors
     C                     SETOF                     98
      * Data entered
     C                     MOVEL'Y'       WKIPIN
      * SFLNXTCHG
     C                     SETON                     84
      * Validate subfile record
     C                     EXSR DEV1RC
      * If SFLRCD invalid, note the fact
     C   98N99             Z-ADD##RR      ##SFRC     99    *
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         DEV1RC    BEGSR
      *================================================================
      * Validate subfile record
      *================================================================
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate subfile record fields
      * If weight is zero, calculate weight
      * CASE: RCD.USR Weight is Equal to zero
     C           #RASWG    IFEQ *ZERO                      *IF
      * Clc Convert Weight     XF
     C                     Z-ADD*ZERO     WUBHWG           USR Weight base
     C                     Z-ADD*ZERO     WUBIWG           USR Weight base
     C                     Z-ADD*ZERO     WUBJWG           USR Weight base
     C                     Z-ADDP2AIWG    WUBHWG           USR Weight base
      * Process entered U/M2
      * CASE: PAR.U/M - Second is Entered
     C           P2AECD    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P2LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P2AWPC    IFNE 0                          *IF
     C           P2AIWG    DIV  P2AWPC    WUASWG    H      USR Weight
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P2LXST    IFEQ 'D'                        *IF
     C           P2AIWG    MULT P2AWPC    WUASWG    H      USR Weight
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWUASWG    WUBIWG           USR Weight base
     C                     END                             *FI
      * Process entered U/M3
      * CASE: PAR.U/M - Third is Entered
     C           P2AFCD    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P2LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P2AXPC    IFNE 0                          *IF
     C           WUASWG    DIV  P2AXPC    WUBJWG    H      USR Weight base
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P2LYST    IFEQ 'D'                        *IF
     C           WUASWG    MULT P2AXPC    WUBJWG    H      USR Weight base
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * CASE: CTL.U/M - Transaction EQ PAR.U/M - Primary
     C           #PHVCD    IFEQ P2ADCD                     *IF
     C           #RBAQT    MULT WUBHWG    #RASWG    H      USR Weight
     C                     END                             *FI
      * CASE: CTL.U/M - Transaction EQ PAR.U/M - Second
     C           #PHVCD    IFEQ P2AECD                     *IF
     C           #RBAQT    MULT WUBIWG    #RASWG    H      USR Weight
     C                     END                             *FI
      * CASE: CTL.U/M - Transaction EQ PAR.U/M - Third
     C           #PHVCD    IFEQ P2AFCD                     *IF
     C           #RBAQT    MULT WUBJWG    #RASWG    H      USR Weight
     C                     END                             *FI
     C                     END                             *FI
      * Quantity may not be less than or equal to zero
      * CASE: RCD.USR Quantity is Less than zero
     C           #RBAQT    IFLT *ZERO                      *IF
      * Setup message data for message
      * Send message 'Quantity cannot be neg.'
     C                     MOVEL'USR0416' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9831  *
      *
     C                     ELSE
      * CASE: RCD.USR Quantity is Equal to zero
     C           #RBAQT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Send message 'Quantity is required'
     C                     MOVEL'USR0394' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9831  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * Weight must be greater than zero
      * CASE: RCD.USR Weight is Less than zero
     C           #RASWG    IFLT *ZERO                      *IF
      * Setup message data for message
      * Send message 'Catch weight must be +'
     C                     MOVEL'USR0414' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9832  *
      *
     C                     ELSE
      * CASE: RCD.USR Weight is Equal to zero
     C           #RASWG    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Send message 'Catch weight is required'
     C                     MOVEL'USR0395' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     9832  *
      *
     C                     END                             *FI
     C                     END                             *FI
      * If item is production date control yes, then to prod date must be
      * CASE: PAR.Production Date Control is yes
     C           P2FZST    IFEQ 'Y'                        *IF
      * CASE: RCD.Production Date USR is Not Entered
     C           #RGXDT    IFEQ *ZERO                      *IF
      * Setup message data for message
      * Convert Production Date USR to display format
      * Convert date
     C           1000000   ADD  #RGXDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0001
      * Send message 'Prod Date must be entered'
     C                     MOVEL'USR1916' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: RCD.Production Date USR is Entered
     C           #RGXDT    IFNE *ZERO                      *IF
      * Setup message data for message
      * Convert Production Date USR to display format
      * Convert date
     C           1000000   ADD  #RGXDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    ZA0002
      * Send message 'Prod Date must be blank'
     C                     MOVEL'USR1917' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     98    *
      *
     C                     END                             *FI
     C                     END                             *FI
     C                     END
      * Validate subfile record relations
     C                     EXSR DFV2RC
      * USR Quantity required
     C           #RBAQT    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9831  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      * USR Weight required
     C           #RASWG    IFEQ *ZERO                      IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9832  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DEEXIT    ENDSR
      /EJECT
     CSR         DFV2RC    BEGSR
      *================================================================
      * Validate subfile record relations
      *================================================================
      * Check reference to Calendar
     C                     EXSR VACKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      * Check reference to Calendar
     C                     EXSR VBCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      * Check reference to Item Structure Class
     C                     EXSR VCCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      * Check reference to Item Structure Group
     C                     EXSR VDCKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      * Check reference to Item Structure Type
     C                     EXSR VECKRL
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     SETON                     98    *
     C                     END
      *================================================================
     CSR         DFEXIT    ENDSR
      /EJECT
     CSR         DHPRCF    BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                     EXSR MOCV#2
      * Set screen conditioning indicators
     C                     EXSR GBDSA2
      * Update screen time
     C                     TIME           ##TME
     C                     MOVEL*BLANK    ##CFCD
     C                     MOVEL'N'       ##CFCD
      * Save CMD keys
     C                     MOVEA*IN       WN30   30
     C                     SETOF                     29    *
      * Generate internal/external key list
     C           KINEX     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2INVL
      * Convert *CONFIRM to external value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2INVL
     C                     MOVEL##CFCD    Y2INVL           *CONFIRM
     C           KINEX     CHAIN@Y2INEX              90    *
     C  N90                MOVELY2EXVL    V#CFCD           *CONFIRM
      *
     C           W0HLP     DOUEQ'N'
     C           *IN29     ANDEQ'0'
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     WRITE#SFLCTL
     C                     EXFMT#CONFIRM
     C           *IN29     IFEQ '1'
     C                     SETON                     99
     C                     GOTO DHEXIT
     C                     END
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
      * Validate *CONFIRM
     C                     MOVEL*BLANK    W0RTN
     C                     MOVELV#CFCD    W0NSRQ  1        *CONFIRM
      * Name search required?
     C           W0NSRQ    IFEQ '?'
     C           'V#CFCD'  OREQ YPMTFD
     C                     CALL 'CAVLLSR'              90  *
     C                     PARM           W0RTN   7
     C                     PARM 1001713   Y2LSNO  70
     C           V#CFCD    PARM V#CFCD    W0EXVL 25        *CONFIRM
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C           W0NSRQ    IFNE '?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
     C                     END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C           KEXIN     KLIST
     C                     KFLD           Y2LSNO
     C                     KFLD           Y2EXVL
      * Convert *CONFIRM to internal value
     C                     Z-ADD1001713   Y2LSNO
     C                     MOVEL*BLANK    Y2EXVL
     C                     MOVELV#CFCD    Y2EXVL           *CONFIRM
     C           KEXIN     CHAIN@Y2EXIN              90    *
     C           *IN90     IFEQ '1'
     C                     MOVEL*BLANK    ##CFCD
     C           YPMTFD    IFEQ *BLANK
     C                     SETON                     96    *
     C                     WRITE#CONFIRM
     C                     SETOF                     96    *
     C                     END
     C                     ELSE
     C                     MOVELY2INVL    ##CFCD           *CONFIRM
     C                     END
      *
     C   90                SETON                     29    *
     C  N90                SETOF                     29    *
     C                     END
      * Restore CMD keys
     C                     MOVEAWN30      *IN
      * Update job time
     C                     TIME           ##JTM
     C           ##CFCD    IFEQ 'Y'
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     END
     C           ##CFCD    COMP 'Y'                  9999  *
      * Not confirmed
      *================================================================
     CSR         DHEXIT    ENDSR
      /EJECT
     CSR         EAPRSF    BEGSR
      *================================================================
      * Update DBF from subfile
      *================================================================
      * Initialise subfile reload flag
     C                     MOVEL'N'       W0RSF
      * Process all modified subfile records
     C                     READC#SFLRCD                  92*
     C           *IN92     DOWEQ'0'
      * Process modified subfile record
     C                     EXSR EBPRSR
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      * If any errors, cancel reload
     C           *IN99     IFEQ '1'
     C                     MOVEL'N'       W0RSF   1
     C                     END
      *================================================================
     CSR         EAEXIT    ENDSR
      /EJECT
     CSR         EBPRSR    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Set off error indicators
     C                     MOVEAWKIND0    *IN,31
     C                     SETOF                     98
      *
      * Process change request
     C                     EXSR EECHRQ
      * If error occurred on update, note the fact
     C           *IN98     IFEQ '1'
     C           *IN99     IFEQ '0'
     C                     Z-ADD##RR      ##SFRC     99    *
     C                     END
     C                     ELSE
      * USER: Extra processing after DBF update
      * 09/29/23 DN WI517-Send Info Msg Based on Inventory was Updated or
      * CASE: *OTHERWISE
     C                     MOVELYL0001    P9ORSC           Inventory Updat
      * CASE: LCL.Inventory Updated USR is Yes
     C           YL0001    IFEQ 'Y'                        *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Setup message data for message
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1HGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    ZA0003           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    ZA0003           CD7 Ext Numeric
     C                     END                             *FI
      * Send message 'Last item not processed'
     C                     MOVEL'USR0399' ZAMSID
     C                     MOVEL'*INFO  ' ZAMSTP           Message type
     C                     EXSR ZASNMS
      *
     C                     END                             *FI
      * Clear the entry fields
     C                     Z-ADD*ZERO     #RBAQT           USR Quantity
     C                     Z-ADD*ZERO     #RASWG           USR Weight
     C                     Z-ADD*ZERO     #RGXDT           Production Date
      * Signal subfile reload if record processed
     C                     MOVEL'Y'       W0RSF            *Reload subfile
     C                     END
      *================================================================
     CSR         EBEXIT    ENDSR
      /EJECT
     CSR         EECHRQ    BEGSR
      *================================================================
      * Process update request
      *================================================================
      * USER: Change DBF record
      *
     C                     Z-ADD*ZERO     WN0004  30       Item Structure
     C                     Z-ADD*ZERO     WN0005  30       Item Structure
     C                     Z-ADD*ZERO     WN0006  30       Item Structure
     C                     Z-ADD*ZERO     WN0007  50       ITD Sequence Nu
     C                     Z-ADD*ZERO     WN0008  30       Sequence Number
     C                     Z-ADD*ZERO     WN0009 114       USR Transaction
     C                     Z-ADD*ZERO     WN0010 112       Extended Amount
     C                     Z-ADD*ZERO     WN0011 112       Quantity based
     C                     Z-ADD*ZERO     WN0012 112       Quantity based
     C                     Z-ADD*ZERO     WN0013 112       Quantity based
     C                     Z-ADD*ZERO     WN0014 112       On Hand Weight
     C                     Z-ADD*ZERO     WN0015 112       On Hand UOM1 Su
     C                     Z-ADD*ZERO     WN0016 112       Value of On Han
     C                     Z-ADD*ZERO     WN0017  70       Production Date
     C                     Z-ADD*ZERO     WN0018  70       Label Date  USR
     C                     MOVEL*BLANK    WN0019  3        USR Reason Code
      *
      * UPD Balances Transfer  IF
      * NOTES: WI517 DN 10/09/23-Per Business (Ace C./Ryan H.), we will N
      *        pass in the 'negative' Qty/Wgt when processing the WIM API
      *        WIM API logic will handle this scenario.
      * WI517 DN 07/05/23-Get WIM Module Release Status.
      * Rtv Module Release Sts RT - OMS Transformation Ctl  * 
     C                     EXSR SCRVGN
     C                     MOVEL'N'       YL0001           Inventory Updat
     C                     MOVEL'N'       YN0001           API was Called?
      * WI517 DN 10/09/23-Save Original Transaction Qty/Wgt in LCL contex
      * CASE: *OTHERWISE
     C                     Z-ADD#RBAQT    YL0003           Transaction Qua
     C                     Z-ADD#RASWG    YL0004           Transaction Wei
      * 08/10/23 DN WI517-Call Existing Legacy Process.
      * CASE: *OTHERWISE
     C                     MOVELP1CQCD    WN0019           USR Reason Code
      * Error if FROM unit cost = 0
      * CASE: PAR.Unit Cost Pricing U/M EQ WRK.ZERO
     C           P5AGCS    IFEQ WUW0NB                     *IF
     C                     MOVEL'ERR'     WN0019           USR Reason Code
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0020 112       Quantity based
     C                     Z-ADD*ZERO     WN0021 112       Quantity based
     C                     Z-ADD*ZERO     WN0022 112       Quantity based
      *
      * Clc Convert Quantity   IF
      * Clear output parameters
     C                     Z-ADD*ZERO     WN0011           USR Qty based o
     C                     Z-ADD*ZERO     WN0012           USR Qty based o
     C                     Z-ADD*ZERO     WN0013           USR Qty based o
      * Process based on transaction U/M
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Transaction
     C           P2ADCD    IFEQ #PHVCD                     *IF
     C                     Z-ADD#RBAQT    WN0011           USR Qty based o
      * Process entered U/M2
      * CASE: PAR.U/M - Second is Entered
     C           P2AECD    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P2LXST    IFEQ 'M'                        *IF
     C           #RBAQT    MULT P2AWPC    WN0021    H      Quantity based
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P2LXST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P2AWPC    IFNE 0                          *IF
     C           #RBAQT    DIV  P2AWPC    WN0021    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0021    WN0012           USR Qty based o
     C                     END                             *FI
      * Process entered U/M3
      * CASE: PAR.U/M - Third is Entered
     C           P2AFCD    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P2LYST    IFEQ 'M'                        *IF
     C           WN0021    MULT P2AXPC    WN0022    H      Quantity based
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P2LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P2AXPC    IFNE 0                          *IF
     C           WN0021    DIV  P2AXPC    WN0022    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0022    WN0013           USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Transaction
     C           P2AECD    IFEQ #PHVCD                     *IF
     C                     Z-ADD#RBAQT    WN0012           USR Qty based o
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P2LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P2AWPC    IFNE 0                          *IF
     C           #RBAQT    DIV  P2AWPC    WN0011    H      USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P2LXST    IFEQ 'D'                        *IF
     C           #RBAQT    MULT P2AWPC    WN0011    H      USR Qty based o
     C                     END                             *FI
     C                     END                             *FI
      * Process entered U/M3
      * CASE: PAR.U/M - Third is Entered
     C           P2AFCD    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P2LYST    IFEQ 'M'                        *IF
     C           #RBAQT    MULT P2AXPC    WN0022    H      Quantity based
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P2LYST    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P2AXPC    IFNE 0                          *IF
     C           #RBAQT    DIV  P2AXPC    WN0022    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0022    WN0013           USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Transaction
     C           P2AFCD    IFEQ #PHVCD                     *IF
     C                     Z-ADD#RBAQT    WN0013           USR Qty based o
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           P2LYST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           P2AXPC    IFNE 0                          *IF
     C           #RBAQT    DIV  P2AXPC    WN0021    H      Quantity based
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           P2LYST    IFEQ 'D'                        *IF
     C           #RBAQT    MULT P2AXPC    WN0021    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0021    WN0012           USR Qty based o
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           P2LXST    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           P2AWPC    IFNE 0                          *IF
     C           WN0021    DIV  P2AWPC    WN0011    H      USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           P2LXST    IFEQ 'D'                        *IF
     C           WN0021    MULT P2AWPC    WN0011    H      USR Qty based o
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           P5AGCS    MULT #RASWG    WN0010    H      Extended Amount
      * Adjust sign of transaction based on transaction type
      * CASE: PAR.Inventory Trans. Type is Transfer Warehouse
     C           P1BSST    IFEQ 'TW'                       *IF
     C                     ADD  1         P1TRBS           Transfer Batch
     C                     Z-ADD#RASWG    WUAHWG           Transaction Wei
     C                     Z-ADD#RBAQT    WUA5QT           Transaction Qua
      * CASE: PAR.USR Unship Flag is yes
     C           'N'       IFEQ 'Y'                        *IF
      * if this is an Unship, reverse the TO whse qty/wgt (neg rct)
     C           *ZERO     SUB  WUA5QT    WUA5QT           Transaction Qua
     C           *ZERO     SUB  WUAHWG    WUAHWG           Transaction Wei
     C                     ELSE
      * CASE: *OTHERWISE
      * if this is NOT an Unship, reverse the FROM whse qty, wgt (reverse
     C           *ZERO     SUB  #RBAQT    #RBAQT           Transaction Qua
     C           *ZERO     SUB  WN0011    WN0011           Quantity based
     C           *ZERO     SUB  #RASWG    #RASWG           Transaction Wei
     C           *ZERO     SUB  WN0010    WN0010           Extended Amount
     C                     END                             *FI
     C                     END                             *FI
      * 08/10/23 DN WI517-Call Legacy Process if Not Live or Parallel.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Module Release Status is Not Live
      *   |- c2    : LCL.Module Release Status is Parallel
      *   '-
     C           YL0002    IFEQ 'N'                        *IF
     C           YL0002    OREQ 'P'                        *OR
      * 09/26/23 DN WI517-Set 'Inventory Updated USR' Flag.
     C                     MOVEL'Y'       YL0001           Inventory Updat
      * *****************************************************************
      * The following block of code will update Item Balance,
      * Item Balance Detail and Transaction Detail for the FROM ITEM
      * *****************************************************************
      * Rtv Item Typ/Grp/Cls  RT - Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0001           Company Number
     C                     Z-ADD#1HGCD    WL0002           Item Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WN0004           Item Structure
     C                     Z-ADDWL0004    WN0005           Item Structure
     C                     Z-ADDWL0005    WN0006           Item Structure
      * Rtv Next Sequence No.  RT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0006           Company Number
     C                     Z-ADD#1HGCD    WL0007           Item Code
     C                     MOVEL#1AJCD    WL0008    P      Warehouse Code
     C                     MOVELP1W9ST    WL0009    P      Inventory Trans
     C                     MOVELP1BSST    WL0010    P      Inventory Trans
     C                     Z-ADDP1B4DT    WL0011           Transaction Dat
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    WN0007           ITD Sequence Nu
      * Crt IC Trans. W/SystDt CR - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0013           Company Number
     C                     Z-ADD#1HGCD    WL0014           Item Code
     C                     MOVEL#1AJCD    WL0015    P      Warehouse Code
     C                     MOVELP1W9ST    WL0016    P      Inventory Trans
     C                     MOVELP1BSST    WL0017    P      Inventory Trans
     C                     Z-ADDP1B4DT    WL0018           Transaction Dat
     C                     Z-ADDWN0007    WL0019           ITD Sequence Nu
     C                     Z-ADD*ZERO     WL0020           Sequence Number
     C                     Z-ADD#1ELDT    WL0021           Production Date
     C                     MOVEL#PHVCD    WL0022    P      UOM Transaction
     C                     MOVELP1F1ST    WL0023    P      Item Transactio
     C                     MOVEL#PAUNA    WL0024    P      Description
     C                     Z-ADD#RBAQT    WL0025           Transaction Qua
     C                     Z-ADD#RASWG    WL0026           Transaction Wei
     C                     Z-ADD*ZERO     WL0027           USR Transaction
     C                     MOVELP1CGCD    WL0028    P      UOM Cost
     C                     Z-ADDWN0010    WL0029           Extended Amount
     C                     MOVEL*BLANK    WL0030           Ticket Number
     C                     Z-ADD*ZERO     WL0031           GL Document Num
     C                     MOVEL'N'       WL0032    P      GL Update Statu
     C                     MOVELWN0019    WL0033    P      Reason Code
     C                     MOVEL*BLANK    WL0034           Reference Numbe
     C                     MOVEL*BLANK    WL0035           Lot ID
     C                     Z-ADDP1TRBN    WL0036           Transfer Batch
     C                     Z-ADDP1TRBS    WL0037           Transfer Batch
     C                     Z-ADD*ZERO     WL0038           Order Number
     C                     Z-ADDWN0004    WL0039           Item Structure
     C                     Z-ADDWN0005    WL0040           Item Structure
     C                     Z-ADDWN0006    WL0041           Item Structure
     C                     MOVEL*BLANK    WL0042           Employee Badge
     C                     Z-ADD*ZERO     WL0043           Production Time
     C                     MOVELP1XLCD    WL0044    P      Shift Number
     C                     Z-ADD#1K7DT    WL0045           Label Date
     C                     MOVEL*BLANK    WL0046           EDI Status 1
     C                     MOVEL*BLANK    WL0047           EDI Status 2
     C                     MOVEL*BLANK    WL0048           EDI Status 3
     C                     MOVEL'A'       WL0049    P      Record Status
     C                     EXSR SFCRRC
      * CHG Value/Qty/Wgt      CH - IC Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0050           Company Number
     C                     Z-ADD#1HGCD    WL0051           Item Code
     C                     MOVEL#1AJCD    WL0052    P      Warehouse Code
     C                     Z-ADD#1ELDT    WL0053           Production Date
     C                     Z-ADDWN0004    WL0054           Item Structure
     C                     Z-ADDWN0005    WL0055           Item Structure
     C                     Z-ADDWN0006    WL0056           Item Structure
     C                     MOVELP2ADCD    WL0057    P      UOM Primary
     C                     Z-ADDP2AWPC    WL0058           Conversion Fact
     C                     MOVELP2LXST    WL0059    P      Operation Facto
     C                     MOVELP2AECD    WL0060    P      UOM Second
     C                     Z-ADDP2AXPC    WL0061           Conversion Fact
     C                     MOVELP2LYST    WL0062    P      Operation Facto
     C                     MOVELP2AFCD    WL0063    P      UOM Third
     C                     MOVELP2FZST    WL0064    P      Production Date
     C                     MOVELP2AVST    WL0065    P      Catch Weight St
     C                     MOVELP1W9ST    WL0066    P      Inventory Trans
     C                     MOVELP1BSST    WL0067    P      Inventory Trans
     C                     Z-ADDP1B4DT    WL0068           Transaction Dat
     C                     MOVEL#PHVCD    WL0069    P      UOM Transaction
     C                     Z-ADDWN0011    WL0070           Transaction Qua
     C                     Z-ADD#RASWG    WL0071           Transaction Wei
     C                     Z-ADD*ZERO     WL0072           USR Transaction
     C                     MOVELP1CGCD    WL0073    P      UOM Cost
     C                     Z-ADDWN0010    WL0074           Extended Amount
     C                     Z-ADD#1K7DT    WL0075           Label Date  USR
     C                     EXSR SGCHRC
      * 11/25/09 PKD Comment out until we know what we need to do here.
      * RTV Sum Act Qty,Wgt,ValRT - IC Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0114           Company Number
     C                     Z-ADD#1HGCD    WL0115           Item Code
     C                     MOVEL#1AJCD    WL0116    P      Warehouse Code
     C                     Z-ADDWN0014    WL0117           Quantity on Han
     C                     Z-ADDWN0015    WL0118           Quantity on Han
     C                     Z-ADDWUNFNN    WL0119           Quantity on Han
     C                     Z-ADDWUNFNN    WL0120           Quantity on Han
     C                     Z-ADDWN0016    WL0121           Value of On Han
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0117    WN0014           Quantity on Han
     C                     Z-ADDWL0118    WN0015           Quantity on Han
     C                     Z-ADDWL0119    WUNFNN           Quantity on Han
     C                     Z-ADDWL0120    WUNFNN           Quantity on Han
     C                     Z-ADDWL0121    WN0016           Value of On Han
      * Chg Val/Qty/Wgt        Ch - IC Item Balance  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD#1AIC3    WL0122           Company Number
     C                     Z-ADD#1HGCD    WL0123           Item Code
     C                     MOVEL#1AJCD    WL0124    P      Warehouse Code
     C                     Z-ADDWN0014    WL0125           On Hand Weight
     C                     Z-ADDWN0015    WL0126           On Hand UOM1 Su
     C                     Z-ADDWN0016    WL0127           Value of On Han
     C                     EXSR SLCHRC
      * ** FP1127:
      * ** Update location quantity on hand for External warehouse that
      * ** is lot controlled and not Carlisle controlled
      * ** Optional Lot number is passed in from the calling program
      * RTV Warehouse Info     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#1AJCD    WL0128    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0129    YN0002    P      Warehouse Descr
     C                     MOVELWL0130    YN0003    P      Address Line 1
     C                     MOVELWL0131    YN0004    P      Address Line 2
     C                     MOVELWL0132    YN0005    P      Address Line 3
     C                     MOVELWL0133    YN0006    P      City
     C                     MOVELWL0134    YN0007    P      Zip Postal Code
     C                     MOVELWL0135    YN0008    P      Production Ware
     C                     MOVELWL0136    YN0009    P      State Code
     C                     MOVELWL0137    YL0005    P      Lot Tracking Fl
     C                     MOVELWL0138    YN0010    P      Default Printer
     C                     MOVELWL0139    YN0011    P      Warehouse Type
     C                     MOVELWL0140    YN0012    P      Trans Contol AS
     C                     MOVELWL0141    YL0006    P      Warehouse Locat
     C                     MOVELWL0142    YN0013    P      Warehouse Std C
     C                     Z-ADDWL0143    YN0014           Warehouse Chill
     C                     MOVELWL0144    YN0015    P      Include in Auto
     C                     MOVELWL0145    YN0016    P      Default Manifes
     C                     MOVELWL0146    YN0017    P      Default Load Se
     C                     MOVELWL0147    YN0018    P      WHS Slotting Li
     C                     Z-ADDWL0148    YN0019           Shipping Compan
     C                     Z-ADDWL0149    YN0020           Accounting Comp
     C                     Z-ADDWL0150    YN0021           WHS Sched Prod
     C                     Z-ADDWL0151    YN0022           WHS Inventory C
     C                     MOVELWL0152    YN0023    P      Parent Warehous
     C                     MOVELWL0153    YN0024    P      Default Shippin
     C                     MOVELWL0154    YL0007    P      WHS Live with C
     C                     MOVELWL0155    YN0025    P      WHS PFS Interfa
     C                     MOVELWL0156    YN0026    P      WHS Req Meter R
     C                     MOVELWL0157    YN0027    P      WHS Default Loa
     C                     MOVELWL0158    YN0028    P      WHS TMS Plannin
     C                     MOVELWL0159    YN0029    P      Default Carrier
     C                     MOVELWL0160    YN0030    P      Inventory Logic
     C                     MOVELWL0161    YN0031    P      WHS Auto Inv Re
     C                     MOVELWL0162    YN0032    P      EDI Status 1
     C                     MOVELWL0163    YN0033    P      EDI Status 2
     C                     MOVELWL0164    YN0034    P      EDI Status 3
     C                     MOVELWL0165    YN0035    P      Record Status
     C                     Z-ADDWL0166    YN0036           Job Time
     C                     MOVELWL0167    YN0037    P      User Id
     C                     MOVELWL0168    YN0038    P      Job Name
     C                     Z-ADDWL0169    YN0039           Job Date
      * ** Process lot tracking if External, not Carlisle, Lot trk=Y
      * CASE: Process lots if External, not Carlisle, Lot trk=Y
      *  - c1 AND c2 AND c3
      *   |- c1    : LCL.Warehouse Location is External
      *   |- c2    : LCL.WHS Live w/Carlisle is *No/Blank
      *   |- c3    : LCL.Lot Tracking Flag is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0006    IFEQ 'E'                        *IF
     C           YL0007    IFEQ *BLANK                     *IF
     C           YL0007    OREQ 'N'
     C           YL0005    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * RTV Whse Location Info RT - Warehouse Location  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#1AJCD    WL0170    P      Warehouse Code
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0171    WUYMCD    P      Location Code
     C                     MOVELWL0172    YL0008    P      Location Aisle
     C                     Z-ADDWL0173    YL0009           Location Bay
     C                     Z-ADDWL0174    YL0010           Loc Unused Chil
      * ** Lot # will be the "from warehouse" lot# or zeros    FP1127
      * UPD Auto-Loc TR Ord ItmXF - Item Lot Location  * 
     C                     CALL 'PMBVXFR'              90  UPD Auto-Loc TR
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0059  30       Company Number
     C                     PARM #1HGCD    WQ0060  70       Item Code
     C                     PARM #1AJCD    WQ0061  3        Warehouse Code
     C                     PARM #1ELDT    WQ0062  70       Production Date
     C                     PARM P7LXNM    WQ0063  50       Lot Number
     C                     PARM WUYMCD    WQ0064  4        Location Code
     C                     PARM WUYNCD    WQ0065  20       Location Level
     C                     PARM #RBAQT    WQ0066  70       Quantity Loc Tr
     C                     PARM *ZERO     WQ0067  70       Order Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMBVXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     9831  *
     C                     END
     C                     END                             *FI
      * *****************************************************************
      * The following block of code will update Item Balance,
      * Item Balance Detail and Transaction Detail for the TO ITEM
      * *****************************************************************
      * ** 12/05/2008 LJB FP1127 Update Auto-Locate Whse inventory
      * ** Only process auto-locate if not a Carlisle Controlled warehous
      * ** and lot tracking has been turned on.
      * 12/04/06 PKD PK0040 Only add inventory to the To Warehouse
      *              if the Inter-Plant Transfer is No.  If the Inter-Pla
      *              Transfer is Yes, then the receiving plant's receivin
      *              process will add the inventory to the To Warehouse.
      * RTV Shipping Co        RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PCPCD    WL0175    P      Warehouse Code
     C                     EXSR SORVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0176    YL0011           Shipping Compan
      * CASE: PAR.Inter-Plant Transfer USR is No
     C           'N'       IFEQ 'N'                        *IF
      * Validate that Item Balance for TO Whse exists; if not, create it
      * Val Item Balance       RT - Item Balance  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0011    WL0177           Company Number
     C                     Z-ADD#1HGCD    WL0178           Item Code
     C                     MOVEL#PCPCD    WL0179    P      Warehouse Code
     C                     EXSR SPRVGN
      * Create item balance if none exists
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
     C                     ELSE
      * CASE: *OTHERWISE
      * Crt Item Balance       CR - Item Balance  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0011    WL0180           Company Number
     C                     Z-ADD#1HGCD    WL0181           Item Code
     C                     MOVEL#PCPCD    WL0182    P      Warehouse Code
     C                     Z-ADDP6ARCS    WL0183           Unit Cost Per P
     C                     Z-ADD*ZERO     WL0184           Last Cost
     C                     Z-ADD*ZERO     WL0185           Cost per Primar
     C                     Z-ADD*ZERO     WL0186           Cost per Pricin
     C                     Z-ADD*ZERO     WL0187           Revaluation Cos
     C                     Z-ADD*ZERO     WL0188           Revaluation Eff
     C                     MOVELWUGSTX    WL0189    P      Revaluation Cos
     C                     Z-ADD*ZERO     WL0190           Last Revaluatio
     C                     Z-ADD*ZERO     WL0191           Last Revaluatio
     C                     Z-ADD*ZERO     WL0192           On Hand Weight
     C                     Z-ADD*ZERO     WL0193           On Hand UOM1 Su
     C                     Z-ADD*ZERO     WL0194           On Hand UOM2 Su
     C                     Z-ADD*ZERO     WL0195           On Hand UOM3 Su
     C                     Z-ADD*ZERO     WL0196           Quantity In Chi
     C                     Z-ADD*ZERO     WL0197           Weight In Chill
     C                     Z-ADD*ZERO     WL0198           Quantity Schedu
     C                     Z-ADD*ZERO     WL0199           Quantity on Sal
     C                     Z-ADD*ZERO     WL0200           Quantity on Pur
     C                     Z-ADD*ZERO     WL0201           Quantity on Tra
     C                     Z-ADD*ZERO     WL0202           Quantity Avail
     C                     MOVEL*BLANK    WL0203           Cycle Count Cod
     C                     Z-ADD*ZERO     WL0204           Date of Last Or
     C                     Z-ADD*ZERO     WL0205           Date of Last Sh
     C                     Z-ADD*ZERO     WL0206           Value of On Han
     C                     MOVELWUGSTX    WL0207    P      Inventory Plann
     C                     Z-ADD*ZERO     WL0208           Safety Allowanc
     C                     Z-ADD*ZERO     WL0209           Safety Allowanc
     C                     Z-ADD*ZERO     WL0210           Stock Out Date
     C                     MOVEL*BLANK    WL0211           Buyer Code
     C                     Z-ADD*ZERO     WL0212           Lead Time Last
     C                     Z-ADD*ZERO     WL0213           Lead Time Date
     C                     Z-ADD*ZERO     WL0214           Lead Time Next
     C                     Z-ADD*ZERO     WL0215           Lead Time Date
     C                     MOVEL'N'       WL0216    P      Lead Time Excep
     C                     Z-ADD*ZERO     WL0217           Usage Qty per C
     C                     Z-ADD*ZERO     WL0218           Usage Weight pe
     C                     Z-ADD*ZERO     WL0219           Inventory Manag
     C                     Z-ADD*ZERO     WL0220           Minimum Quantit
     C                     Z-ADD*ZERO     WL0221           Maximum Quantit
     C                     Z-ADD*ZERO     WL0222           Last Physical C
     C                     MOVELWUGSTX    WL0223    P      Requisition Mod
     C                     MOVELWUGSTX    WL0224    P      Cost Update Pen
     C                     MOVELWUGSTX    WL0225    P      Post GL Status
     C                     Z-ADD*ZERO     WL0226           Vendor Item_Whs
     C                     Z-ADDWN0004    WL0227           Item Structure
     C                     Z-ADDWN0005    WL0228           Item Structure
     C                     Z-ADDWN0006    WL0229           Item Structure
     C                     MOVELWUUVST    WL0230    P      EDI Status 1
     C                     MOVELWUUWST    WL0231    P      EDI Status 2
     C                     MOVELWUUXST    WL0232    P      EDI Status 3
     C                     MOVEL'A'       WL0233    P      Record Status
     C                     EXSR SQCRRC
     C                     END                             *FI
      * Error if unit cost = 0
      * CASE: PAR.Unit Cost - Detail EQ WRK.ZERO
     C           P6ARCS    IFEQ WUW0NB                     *IF
     C                     MOVEL'ERR'     WN0019           USR Reason Code
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVELP1CQCD    WN0019           USR Reason Code
     C                     END                             *FI
      * Rtv Item Typ/Grp/Cls  RT - Company Item  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0011    WL0001           Company Number
     C                     Z-ADD#1HGCD    WL0002           Item Code
     C                     EXSR SDRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0003    WN0004           Item Structure
     C                     Z-ADDWL0004    WN0005           Item Structure
     C                     Z-ADDWL0005    WN0006           Item Structure
     C           P6ARCS    MULT WUAHWG    WN0010    H      Extended Amount
      * Rtv Next Sequence No.  RT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0011    WL0006           Company Number
     C                     Z-ADD#1HGCD    WL0007           Item Code
     C                     MOVEL#PCPCD    WL0008    P      Warehouse Code
     C                     MOVELP1W9ST    WL0009    P      Inventory Trans
     C                     MOVELP1BSST    WL0010    P      Inventory Trans
     C                     Z-ADDP1B4DT    WL0011           Transaction Dat
     C                     EXSR SERVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0012    WN0007           ITD Sequence Nu
      * Reset Production/Label Date if Lot Tracking warehouse.
     C                     EXSR UASUBR                     Reset Productio
      * Crt IC Trans. W/SystDt CR - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0011    WL0013           Company Number
     C                     Z-ADD#1HGCD    WL0014           Item Code
     C                     MOVEL#PCPCD    WL0015    P      Warehouse Code
     C                     MOVELP1W9ST    WL0016    P      Inventory Trans
     C                     MOVELP1BSST    WL0017    P      Inventory Trans
     C                     Z-ADDP1B4DT    WL0018           Transaction Dat
     C                     Z-ADDWN0007    WL0019           ITD Sequence Nu
     C                     Z-ADD*ZERO     WL0020           Sequence Number
     C                     Z-ADDWN0017    WL0021           Production Date
     C                     MOVEL#PHVCD    WL0022    P      UOM Transaction
     C                     MOVELP1F1ST    WL0023    P      Item Transactio
     C                     MOVEL#PAUNA    WL0024    P      Description
     C                     Z-ADDWUA5QT    WL0025           Transaction Qua
     C                     Z-ADDWUAHWG    WL0026           Transaction Wei
     C                     Z-ADD*ZERO     WL0027           USR Transaction
     C                     MOVELP1CGCD    WL0028    P      UOM Cost
     C                     Z-ADDWN0010    WL0029           Extended Amount
     C                     MOVEL*BLANK    WL0030           Ticket Number
     C                     Z-ADD*ZERO     WL0031           GL Document Num
     C                     MOVEL*BLANK    WL0032           GL Update Statu
     C                     MOVELWN0019    WL0033    P      Reason Code
     C                     MOVEL*BLANK    WL0034           Reference Numbe
     C                     MOVEL*BLANK    WL0035           Lot ID
     C                     Z-ADDP1TRBN    WL0036           Transfer Batch
     C                     Z-ADDP1TRBS    WL0037           Transfer Batch
     C                     Z-ADD*ZERO     WL0038           Order Number
     C                     Z-ADDWN0004    WL0039           Item Structure
     C                     Z-ADDWN0005    WL0040           Item Structure
     C                     Z-ADDWN0006    WL0041           Item Structure
     C                     MOVEL*BLANK    WL0042           Employee Badge
     C                     Z-ADD*ZERO     WL0043           Production Time
     C                     MOVELP1XLCD    WL0044    P      Shift Number
     C                     Z-ADDWN0018    WL0045           Label Date
     C                     MOVEL*BLANK    WL0046           EDI Status 1
     C                     MOVEL*BLANK    WL0047           EDI Status 2
     C                     MOVEL*BLANK    WL0048           EDI Status 3
     C                     MOVEL'A'       WL0049    P      Record Status
     C                     EXSR SFCRRC
      * 11/25/09 PKD Comment out until we know what we need to do here.
      * * Post transaction to Item Balance & Item Balance Detail
      * Prc Create Dtl Receipt IF
      * Prc Create Dtl Receipt RT - Item Transaction Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDYL0011    WL0234           Company Number
     C                     Z-ADD#1HGCD    WL0235           Item Code
     C                     MOVEL#PCPCD    WL0236    P      Warehouse Code
     C                     MOVELP1W9ST    WL0237    P      Inventory Trans
     C                     MOVELP1BSST    WL0238    P      Inventory Trans
     C                     Z-ADDP1B4DT    WL0239           Transaction Dat
     C                     Z-ADDWN0007    WL0240           ITD Sequence Nu
     C                     Z-ADD*ZERO     WL0241           Sequence Number
     C                     MOVELP1XLCD    WL0242    P      Shift Number
     C                     Z-ADDWN0018    WL0243           Label Date
     C                     EXSR SRRVGN
      * ** Process Auto-Locate Whse inventory             FP1127
      * RTV Warehouse Info     RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PCPCD    WL0128    P      Warehouse Code
     C                     EXSR SMRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0129    YN0002    P      Warehouse Descr
     C                     MOVELWL0130    YN0003    P      Address Line 1
     C                     MOVELWL0131    YN0004    P      Address Line 2
     C                     MOVELWL0132    YN0005    P      Address Line 3
     C                     MOVELWL0133    YN0006    P      City
     C                     MOVELWL0134    YN0007    P      Zip Postal Code
     C                     MOVELWL0135    YN0008    P      Production Ware
     C                     MOVELWL0136    YN0009    P      State Code
     C                     MOVELWL0137    YL0005    P      Lot Tracking Fl
     C                     MOVELWL0138    YN0010    P      Default Printer
     C                     MOVELWL0139    YN0011    P      Warehouse Type
     C                     MOVELWL0140    YN0012    P      Trans Contol AS
     C                     MOVELWL0141    YL0006    P      Warehouse Locat
     C                     MOVELWL0142    YN0013    P      Warehouse Std C
     C                     Z-ADDWL0143    YN0014           Warehouse Chill
     C                     MOVELWL0144    YN0015    P      Include in Auto
     C                     MOVELWL0145    YN0016    P      Default Manifes
     C                     MOVELWL0146    YN0017    P      Default Load Se
     C                     MOVELWL0147    YN0018    P      WHS Slotting Li
     C                     Z-ADDWL0148    YN0019           Shipping Compan
     C                     Z-ADDWL0149    YN0020           Accounting Comp
     C                     Z-ADDWL0150    YN0021           WHS Sched Prod
     C                     Z-ADDWL0151    YN0022           WHS Inventory C
     C                     MOVELWL0152    YN0023    P      Parent Warehous
     C                     MOVELWL0153    YN0024    P      Default Shippin
     C                     MOVELWL0154    YL0007    P      WHS Live with C
     C                     MOVELWL0155    YN0025    P      WHS PFS Interfa
     C                     MOVELWL0156    YN0026    P      WHS Req Meter R
     C                     MOVELWL0157    YN0027    P      WHS Default Loa
     C                     MOVELWL0158    YN0028    P      WHS TMS Plannin
     C                     MOVELWL0159    YN0029    P      Default Carrier
     C                     MOVELWL0160    YN0030    P      Inventory Logic
     C                     MOVELWL0161    YN0031    P      WHS Auto Inv Re
     C                     MOVELWL0162    YN0032    P      EDI Status 1
     C                     MOVELWL0163    YN0033    P      EDI Status 2
     C                     MOVELWL0164    YN0034    P      EDI Status 3
     C                     MOVELWL0165    YN0035    P      Record Status
     C                     Z-ADDWL0166    YN0036           Job Time
     C                     MOVELWL0167    YN0037    P      User Id
     C                     MOVELWL0168    YN0038    P      Job Name
     C                     Z-ADDWL0169    YN0039           Job Date
      * ** Process lot tracking if External, not Carlisle, Lot trk=Y
      * CASE: Process lots if External, not Carlisle, Lot trk=Y
      *  - c1 AND c2 AND c3
      *   |- c1    : LCL.Warehouse Location is External
      *   |- c2    : LCL.WHS Live w/Carlisle is *No/Blank
      *   |- c3    : LCL.Lot Tracking Flag is yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0006    IFEQ 'E'                        *IF
     C           YL0007    IFEQ *BLANK                     *IF
     C           YL0007    OREQ 'N'
     C           YL0005    IFEQ 'Y'                        *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * ** Lot Number is passed in and is optional
      * RTV Whse Location Info RT - Warehouse Location  * 
      * Move input parameters to subroutine local variables.
     C                     MOVEL#PCPCD    WL0170    P      Warehouse Code
     C                     EXSR SNRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0171    WUYMCD    P      Location Code
     C                     MOVELWL0172    YL0008    P      Location Aisle
     C                     Z-ADDWL0173    YL0009           Location Bay
     C                     Z-ADDWL0174    YL0010           Loc Unused Chil
      * ** Lot# will be the "to warehouse" lot# or zeros    FP1127
      * UPD Auto-Loc TR Ord ItmXF - Item Lot Location  * 
     C                     CALL 'PMBVXFR'              90  UPD Auto-Loc TR
     C                     PARM *BLANK    W0RTN   7
     C                     PARM #1AIC3    WQ0082  30       Company Number
     C                     PARM #1HGCD    WQ0083  70       Item Code
     C                     PARM #PCPCD    WQ0084  3        Warehouse Code
     C                     PARM P1B4DT    WQ0085  70       Production Date
     C                     PARM P8LTNT    WQ0086  50       Lot Number
     C                     PARM WUYMCD    WQ0087  4        Location Code
     C                     PARM WUYNCD    WQ0088  20       Location Level
     C                     PARM WUA5QT    WQ0089  70       Quantity Loc Tr
     C                     PARM *ZERO     WQ0090  70       Order Number
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PMBVXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * *****************************************************************
      * 08/10/23 DN WI517-Call WIM API if Live or Parallel.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.Module Release Status is Is Live
      *   |- c2    : LCL.Module Release Status is Parallel
      *   '-
     C           YL0002    IFEQ 'Y'                        *IF
     C           YL0002    OREQ 'P'                        *OR
     C                     MOVEL'Y'       YN0001           API was Called?
     C                     MOVEL*BLANK    YL0012           API EccResult-M
     C                     MOVEL*BLANK    YL0013           API EccResult-M
     C                     MOVEL*BLANK    YL0014           API Request Key
     C                     Z-ADD*ZERO     ZQ      50
     C           @CN,002   CAT  'ry':ZQ   YL0015    P      API Name
      * RTV Numeric Value      RT - System Values  * 
     C                     EXSR SXRVGN
      * Call API Wrapper Program for wim.ordershipping.inventory API.
      * 1/6/24 DN SR08283-Added 'API Request Key U' & 'API Mode U' Parms.
      * API WIM Inv Shipping   UP - WIM Item Trans Detail  * 
     C                     CLEARPARC
     C                     Z-ADD#1AIC3    PAAIC3           Company Number
     C                     Z-ADD#1HGCD    PAHGCD           Item Code
     C                     MOVEL#1AJCD    PAVPCD    P      Ship From Wareh
     C                     MOVELP1W9ST    PANOSC    P      WIM Inventory T
     C                     MOVELP1BSST    PANPSC    P      WIM Inventory T
     C                     Z-ADDP1B4DT    PAA9DT           Transaction Dat
     C                     Z-ADD#1ELDT    PAELDT           Production Date
     C                     MOVELP1F1ST    PAF1ST    P      Item Transactio
     C                     MOVEL#PAUNA    PAVQNA    P      Transaction Des
     C                     MOVEL*BLANK    PAA1AB    P      Transaction Rea
     C                     Z-ADD*ZERO     PAC4NB           Order Number
     C                     MOVELP1XLCD    PAXLCD    P      Shift Number
     C                     MOVEL#PCPCD    PAL9AA    P      Ship To Warehou
     C                     Z-ADDYL0004    PAAHWG           Transaction Wei
     C                     Z-ADDYL0003    PAA5QT           Transaction Qua
     C                     MOVEL'N'       PAUSST    P      USR Unship Flag
     C                     MOVEL'N'       PAA5TX    P      Inter-Plant Tra
     C                     MOVELYL0014    PACKAB    P      API Request Key
     C                     MOVEL'*SNDRCV' PACJAB    P      API Mode U
      *
     C                     CALL 'PVAYUPR'              90  API WIM Inv Shi
     C                     PARM YL0016    WQ0091  50       API Wait Time U
     C                     PARM           PARC             RCD: *Arrays
      *
     C                     MOVELPACLAB    YL0012           API EccResult-M
     C                     MOVELPAVGU1    YL0013           API EccResult-M
     C                     MOVELPACKAB    YL0014           API Request Key
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PVAYUPR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     98    *
     C                     END
      * API Call Successful? If Not, Create Log & Send Email.
      * CASE:
      *  - c1 OR c2
      *   |- c1    : LCL.API EccResult-MsgId U is Success
      *   |- c2    : LCL.API EccResult-MsgId U is Timeout
      *   '-
     C           YL0012    IFEQ @CN,004                    *IF
     C           YL0012    OREQ @CN,005                    *OR
     C                     MOVEL'Y'       YL0001           Inventory Updat
      * 01/06/24 DN SR08283-Create Log Record for Timeout Transaction.
      * CASE: LCL.API EccResult-MsgId U is Timeout
     C           YL0012    IFEQ @CN,005                    *IF
      * Crt WIM API Failure LogXF - WIM API Failure Log  * Timeout Failur
     C                     CALL 'PVA8XFR'              90  Crt WIM API Fai
     C                     PARM *BLANK    W0RTN   7
     C                     PARM YL0015    WQ0092 45        API Name
     C                     PARM YL0012    WQ0093  7        API EccResult M
     C                     PARM YL0013    WQ0094 50        API EccResult-M
     C                     PARM YL0014    WQ0095 10        API Request Key
     C                     PARM @CN,001   WQ0096 10        Called From Pro
     C                     PARM #1AIC3    WQ0097  30       Company Number
     C                     PARM #1HGCD    WQ0098  70       Item Code
     C                     PARM #1AJCD    WQ0099  3        Ship From Wareh
     C                     PARM P1W9ST    WQ0100  3        WIM Inventory T
     C                     PARM P1BSST    WQ0101  3        WIM Inventory T
     C                     PARM P1B4DT    WQ0102  70       Transaction Dat
     C                     PARM #1ELDT    WQ0103  70       Production Date
     C                     PARM P1F1ST    WQ0104  2        Item Transactio
     C                     PARM #PAUNA    WQ0105 30        Transaction Des
     C                     PARM *BLANK    WQ0106  3        Transaction Rea
     C                     PARM *ZERO     WQ0107  70       Order Number
     C                     PARM P1XLCD    WQ0108  1        Shift Number
     C                     PARM #PCPCD    WQ0109  3        Ship To Warehou
     C                     PARM YL0004    WQ0110 112       Transaction Wei
     C                     PARM YL0003    WQ0111 112       Transaction Qua
     C                     PARM 'N'       WQ0112  1        Unship Flag
     C                     PARM 'N'       WQ0113  1        Inter Plant Tra
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PVA8XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
      * SR07943 DN 12/21/23-Added 'API EccResult-MsgId U is Entered' Cond
      * CASE: LCL.API EccResult-MsgId U is Entered
     C           YL0012    IFNE *BLANK                     *IF
     C                     MOVEL'N'       YL0001           Inventory Updat
      * 1/6/24 DN SR08283-Added 'API Request Key' as Input Parm.
      * Crt WIM API Failure LogXF - WIM API Failure Log  * Hardstop Failu
     C                     CALL 'PVA8XFR'              90  Crt WIM API Fai
     C                     PARM *BLANK    W0RTN   7
     C                     PARM YL0015    WQ0114 45        API Name
     C                     PARM YL0012    WQ0115  7        API EccResult M
     C                     PARM YL0013    WQ0116 50        API EccResult-M
     C                     PARM YL0014    WQ0117 10        API Request Key
     C                     PARM @CN,001   WQ0118 10        Called From Pro
     C                     PARM #1AIC3    WQ0119  30       Company Number
     C                     PARM #1HGCD    WQ0120  70       Item Code
     C                     PARM #1AJCD    WQ0121  3        Ship From Wareh
     C                     PARM P1W9ST    WQ0122  3        WIM Inventory T
     C                     PARM P1BSST    WQ0123  3        WIM Inventory T
     C                     PARM P1B4DT    WQ0124  70       Transaction Dat
     C                     PARM #1ELDT    WQ0125  70       Production Date
     C                     PARM P1F1ST    WQ0126  2        Item Transactio
     C                     PARM #PAUNA    WQ0127 30        Transaction Des
     C                     PARM *BLANK    WQ0128  3        Transaction Rea
     C                     PARM *ZERO     WQ0129  70       Order Number
     C                     PARM P1XLCD    WQ0130  1        Shift Number
     C                     PARM #PCPCD    WQ0131  3        Ship To Warehou
     C                     PARM YL0004    WQ0132 112       Transaction Wei
     C                     PARM YL0003    WQ0133 112       Transaction Qua
     C                     PARM 'N'       WQ0134  1        Unship Flag
     C                     PARM 'N'       WQ0135  1        Inter Plant Tra
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PVA8XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
      * Keep Track of Batch Processing Functions so Email will NOT be Sen
      * CASE:
      *  - c1 OR c2 OR c3 OR c4 OR c5 OR c6
      *   |- c1    : PAR.Called From Program is Exc Upd EDI 944 Trsn   XF
      *   |- c2    : PAR.Called From Program is EDT Confirm Ship Detl  DF
      *   |- c3    : PAR.Called From Program is ADD Ready to Confirm  XL
      *   |- c4    : PAR.Called From Program is Exc Upd EDI 945 Trsn   XF
      *   |- c5    : PAR.Called From Program is PFS Reopen Order      XL
      *   |- c6    : PAR.Called From Program is WW Unship Orders       DF
      *   '-
     C           @CN,001   IFEQ @CN,006                    *IF
     C           @CN,001   OREQ @CN,007                    *OR
     C           @CN,001   OREQ @CN,008                    *OR
     C           @CN,001   OREQ @CN,009                    *OR
     C           @CN,001   OREQ @CN,010                    *OR
     C           @CN,001   OREQ @CN,011                    *OR
     C                     ELSE
      * CASE: *OTHERWISE
      * Send Email to Business & IT.
      * Prc Eml Shipping & IT  XF - WIM API Failure Log  * 
     C                     CALL 'PVA9XFR'              90  Prc Eml Shippin
     C                     PARM *BLANK    W0RTN   7
     C                     PARM @CN,001   WQ0136 10        Called From Pro
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PVA9XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * *****************************************************************
     C           W0RTN     IFNE *BLANK
      * Data update error
      * Screen errors
     C                     MOVEAWKIND1    *IN,31
      * Format error
     C                     SETON                     98    *
      * Enable entry
     C                     SETOF                     87    *
      * SFLNXTCHG
     C                     SETON                     84    *
      * Reset subfile record if changed record
     C           W0RTN     CASEQ'Y2U0007' MBFL#1           IF
     C                     END
     C                     ELSE
      * DBF update successful
      * Enable entry
     C                     SETOF                     87    *
      * No SFLNXTCHG
     C                     SETOF                     84    *
     C                     END
      *================================================================
     CSR         EEEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         GADSA1    BEGSR
      *================================================================
      * Set display attributes for Subfile record
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
      * Protect keys if change mode or updated record
     C                     SETON                     88    *
     C   89N87             SETOF                     88    *
      *================================================================
     CSR         GAEXIT    ENDSR
      /EJECT
     CSR         GBDSA2    BEGSR
      *================================================================
      * Set display attributes for Subfile control
      *================================================================
     C           W0PMD     COMP 'ADD'                    89*
     C                     MOVEL'0'       *IN79
     C           P1BSST    IFEQ 'A'                        *IF
     C           P1BSST    OREQ 'I'
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      *================================================================
     CSR         GBEXIT    ENDSR
      /EJECT
     CSR         MAIZ#1    BEGSR
      *================================================================
      * Initialise subfile record
      *================================================================
      * Previous values
     C                     MOVEL*BLANK    #1DBRC
     C                     Z-ADDP1AIC3    #1AIC3           Company Number
     C                     Z-ADDP1HGCD    #1HGCD           Item Code
     C                     MOVELP1AJCD    #1AJCD           Warehouse Code
     C                     Z-ADD*ZERO     #1ABWG           Physical Count
     C                     Z-ADD*ZERO     #1AGQT           Physical Count
     C                     Z-ADD*ZERO     #1AHQT           Physical Count
     C                     Z-ADD*ZERO     #1AIQT           Physical Count
     C                     MOVEL*BLANK    #1CTST           Physical Count
     C                     Z-ADD*ZERO     #1ARQT           Quantity on Han
     C                     Z-ADD*ZERO     #1ASQT           Quantity on Han
     C                     Z-ADD*ZERO     #1ATQT           Quantity on Han
     C                     Z-ADD*ZERO     #1HDQT           Quantity In Chi
     C                     Z-ADD*ZERO     #1HEQT           Weight In Chill
     C                     Z-ADD*ZERO     #RGXDT           Production Date
     C                     MOVEL*BLANK    #1F6ST           Update Exceptio
     C                     Z-ADD*ZERO     #1BMWG           Physical Start
     C                     Z-ADD*ZERO     #1DSQT           Physical Start
     C                     Z-ADD*ZERO     #1DTQT           Physical Start
     C                     Z-ADD*ZERO     #1DUQT           Physical Start
     C                     Z-ADD*ZERO     #1DHDT           Physical Start
     C                     Z-ADD*ZERO     #1AGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     #1AECS           Last Cost
     C                     Z-ADD*ZERO     #1IDVA           Value of On Han
     C                     Z-ADD*ZERO     #1RINB           Item Structure
     C                     Z-ADD*ZERO     #1RHNB           Item Structure
     C                     Z-ADD*ZERO     #1RGNB           Item Structure
     C                     MOVEL*BLANK    #1UVST           EDI Status 1
     C                     MOVEL*BLANK    #1UWST           EDI Status 2
     C                     MOVEL*BLANK    #1UXST           EDI Status 3
     C                     MOVEL*BLANK    #1VSST           Record Status
     C                     Z-ADD*ZERO     #1AATM           Job Time
     C                     MOVEL*BLANK    #1AYNA           User Id
     C                     MOVEL*BLANK    #1A0NA           Job Name
     C                     Z-ADD*ZERO     #1AXDT           Job Date
     C                     Z-ADDP1ELDT    #1ELDT           Production Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1ELDT
     C                     Z-ADD*ZERO     #1K7DT           Label Date
      * Clear external version also
     C                     Z-ADD*ZERO     V1K7DT
     C                     Z-ADD*ZERO     #RBAQT           USR Quantity
     C                     Z-ADD*ZERO     #RBQQT           On Hand
     C                     Z-ADD*ZERO     #RASWG           USR Weight
     C                     Z-ADD*ZERO     #1ACWG           Quantity on Han
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @B1REJ0 fields to subfile
      *================================================================
     C                     Z-ADDB1AIC3    #1AIC3           Company Number
     C                     Z-ADDB1HGCD    #1HGCD           Item Code
     C                     MOVELB1AJCD    #1AJCD           Warehouse Code
     C                     Z-ADDB1ABWG    #1ABWG           Physical Count
     C                     Z-ADDB1AGQT    #1AGQT           Physical Count
     C                     Z-ADDB1AHQT    #1AHQT           Physical Count
     C                     Z-ADDB1AIQT    #1AIQT           Physical Count
     C                     MOVELB1CTST    #1CTST           Physical Count
     C                     Z-ADDB1ARQT    #1ARQT           Quantity on Han
     C                     Z-ADDB1ASQT    #1ASQT           Quantity on Han
     C                     Z-ADDB1ATQT    #1ATQT           Quantity on Han
     C                     Z-ADDB1HDQT    #1HDQT           Quantity In Chi
     C                     Z-ADDB1HEQT    #1HEQT           Weight In Chill
     C                     MOVELB1F6ST    #1F6ST           Update Exceptio
     C                     Z-ADDB1BMWG    #1BMWG           Physical Start
     C                     Z-ADDB1DSQT    #1DSQT           Physical Start
     C                     Z-ADDB1DTQT    #1DTQT           Physical Start
     C                     Z-ADDB1DUQT    #1DUQT           Physical Start
     C                     Z-ADDB1DHDT    #1DHDT           Physical Start
     C                     Z-ADDB1AGCS    #1AGCS           Unit Cost Per P
     C                     Z-ADDB1AECS    #1AECS           Last Cost
     C                     Z-ADDB1IDVA    #1IDVA           Value of On Han
     C                     Z-ADDB1RINB    #1RINB           Item Structure
     C                     Z-ADDB1RHNB    #1RHNB           Item Structure
     C                     Z-ADDB1RGNB    #1RGNB           Item Structure
     C                     MOVELB1UVST    #1UVST           EDI Status 1
     C                     MOVELB1UWST    #1UWST           EDI Status 2
     C                     MOVELB1UXST    #1UXST           EDI Status 3
     C                     MOVELB1VSST    #1VSST           Record Status
     C                     Z-ADDB1AATM    #1AATM           Job Time
     C                     MOVELB1AYNA    #1AYNA           User Id
     C                     MOVELB1A0NA    #1A0NA           Job Name
     C                     Z-ADDB1AXDT    #1AXDT           Job Date
     C                     Z-ADDB1ELDT    #1ELDT           Production Date
     C                     Z-ADDB1K7DT    #1K7DT           Label Date
     C                     Z-ADDB1ACWG    #1ACWG           Quantity on Han
      * Hold current record image for change detection
     C                     MOVEL@1DBRC    #1DBRC
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADDP1ELDT    #2ELDT           Production Date
     C                     MOVELP1AUNA    #PAUNA           Description
     C                     Z-ADDP1AIC3    #2AIC3           Company Number
      * Clear external version also
     C                     MOVEL*BLANK    V2AIC3
     C                     MOVELP4ADTX    #PADTX           Name
     C                     MOVELP4HLTX    #PHLTX           Condition Desc.
     C                     MOVELP4CUNA    #PCUNA           USR Hold Descri
     C                     MOVELP1AJCD    #2AJCD           Warehouse Code
     C                     MOVELP3F8NA    #PF8NA           Warehouse Descr
     C                     Z-ADDP1HGCD    #2HGCD           Item Code
      * Clear external version also
     C                     MOVEL*BLANK    V2HGCD
     C                     MOVELP2AVNA    #PAVNA           Description Lin
     C                     MOVELP1XLCD    #PXLCD           Shift Number
     C                     MOVELP1HVCD    #PHVCD           UOM Transaction
     C                     MOVEL*BLANK    #CDL01           Description. .
     C                     MOVELP4CPCD    #PCPCD           USR Warehouse C
     C                     MOVEL*BLANK    #CCCNA           USR Warehouse d
      * Check restriction within
     C                     EXSR VFCKRL
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert subfile fields into external form
      *================================================================
      * Convert Production Date to display format
      * Convert date
     C           1000000   ADD  #1ELDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1ELDT
      * Convert Label Date to display format
      * Convert date
     C           1000000   ADD  #1K7DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1K7DT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         MOCV#2    BEGSR
      *================================================================
      * Convert control fields into external form
      *================================================================
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           #2AIC3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL#2AIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    V2AIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2AIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #2HGCD    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#2HGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V2HGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V2HGCD           CD7 Ext Numeric
     C                     END                             *FI
      *================================================================
     CSR         MOEXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL#PCPCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSA     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #CCCNA           Warehouse Descr
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    #CCCNA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv UOM Description    RT - Unit of Measure  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           AMHHCD           UOM Primary Dft
      * Setup key
     C                     MOVELP1HVCD    AMHHCD           UOM Primary Dft
      * Establish starting position
     C           KRSSB     CHAIN@AMREB0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0033' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    #CDL01           Description
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     MOVELAMAUNA    #CDL01           Description
     C                     ENDIF
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv Module Release Sts RT - OMS Transformation Ctl  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0002           Module Release
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           C6B3AB           Module ID
     C                     KFLD           C6HUNZ           Release Number
      * Setup key
     C                     MOVEL'WIM'     C6B3AB           Module ID
     C                     Z-ADD1         C6HUNZ           Release Number
      * Establish starting position
     C           KRSSC     CHAIN@C6REMK              90    *
      * Data record not found
     C   90                MOVEL'USR5307' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * CASE: DB1.Record Status is Active
     C           C6VSST    IFEQ 'A'                        *IF
      * PAR = DB1 By name
     C                     MOVELC6OCSC    YL0002           Module Release
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Item Typ/Grp/Cls  RT - Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWL0001    BZAIC3           Company Number
     C                     Z-ADDWL0002    BZHGCD           Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BZREJU              90    *
      * Data record not found
     C   90                MOVEL'USR0326' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBZRINB    WL0003           Item Structure
     C                     Z-ADDBZRHNB    WL0004           Item Structure
     C                     Z-ADDBZRGNB    WL0005           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Next Sequence No.  RT - Item Transaction Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN B7AIC3    WQSE01           Company Number
     C           *LIKE     DEFN B7HGCD    WQSE02           Item Code
     C           *LIKE     DEFN B7AJCD    WQSE03           Warehouse Code
     C           *LIKE     DEFN B7W9ST    WQSE04           Inventory Trans
     C           *LIKE     DEFN B7BSST    WQSE05           Inventory Trans
     C           *LIKE     DEFN B7B4DT    WQSE06           Transaction Dat
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           Company Number
     C                     KFLD           WQSE02           Item Code
     C                     KFLD           WQSE03           Warehouse Code
     C                     KFLD           WQSE04           Inventory Trans
     C                     KFLD           WQSE05           Inventory Trans
     C                     KFLD           WQSE06           Transaction Dat
      * Setup key
     C                     Z-ADDWL0006    WQSE01           Company Number
     C                     Z-ADDWL0007    WQSE02           Item Code
     C                     MOVELWL0008    WQSE03           Warehouse Code
     C                     MOVELWL0009    WQSE04           Inventory Trans
     C                     MOVELWL0010    WQSE05           Inventory Trans
     C                     Z-ADDWL0011    WQSE06           Transaction Dat
      * Establish starting position
     C           KRSSE     SETLL@B7CPZA                    *
     C           KRSSE     READE@B7CPZA                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0344' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD1         WL0012           ITD Sequence Nu
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C           B7C4NY    ADD  1         WL0012           ITD Sequence Nu
     C                     GOTO SEEXIT                     *QUIT
     C           KRSSE     READE@B7CPZA                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFCRRC    BEGSR
      *================================================================
      * Crt IC Trans. W/SystDt CR - Item Transaction Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0023  60       Job Time
     C                     MOVEL*BLANK    WN0024 10        User Id
     C                     MOVEL*BLANK    WN0025 10        Job Name
     C                     Z-ADD*ZERO     WN0026  70       Job Date
     C                     Z-ADD*ZERO     WN0027  20       Production Hour
     C                     Z-ADD*ZERO     WN0028 112       Production Weig
     C                     Z-ADD*ZERO     WN0029  50       Production Quan
     C                     Z-ADD*ZERO     WN0030  70       Production Piec
     C                     MOVEL*BLANK    WN0031  1        Export_Domestic
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B7CPJZ
     C                     Z-ADDWL0013    WAAIC3           Company Number
     C                     Z-ADDWL0014    WAHGCD           Item Code
     C                     MOVELWL0015    WAAJCD           Warehouse Code
     C                     MOVELWL0016    WAW9ST           Inventory Trans
     C                     MOVELWL0017    WABSST           Inventory Trans
     C                     Z-ADDWL0018    WAB4DT           Transaction Dat
     C                     Z-ADDWL0019    WAC4NY           ITD Sequence Nu
     C                     Z-ADDWL0020    WADXNB           Sequence Number
     C                     Z-ADDWL0021    WAELDT           Production Date
     C                     MOVELWL0022    WAHVCD           UOM Transaction
     C                     MOVELWL0023    WAF1ST           Item Transactio
     C                     MOVELWL0024    WAAUNA           Description
     C                     Z-ADDWL0025    WAA5QT           Transaction Qua
     C                     Z-ADDWL0026    WAAHWG           Transaction Wei
     C                     Z-ADDWL0027    WAAKCS           USR Transaction
     C                     MOVELWL0028    WACGCD           UOM Cost
     C                     Z-ADDWL0029    WAAYVA           Extended Amount
     C                     MOVELWL0030    WABJNA           Ticket Number
     C                     Z-ADDWL0031    WACKNB           GL Document Num
     C                     MOVELWL0032    WABMST           GL Update Statu
     C                     MOVELWL0033    WACQCD           Reason Code
     C                     MOVELWL0034    WADTCD           Reference Numbe
     C                     MOVELWL0035    WAMGNA           Lot ID
     C                     Z-ADDWL0036    WATRBN           Transfer Batch
     C                     Z-ADDWL0037    WATRBS           Transfer Batch
     C                     Z-ADDWL0038    WAC4NB           Order Number
     C                     Z-ADDWL0039    WARINB           Item Structure
     C                     Z-ADDWL0040    WARHNB           Item Structure
     C                     Z-ADDWL0041    WARGNB           Item Structure
     C                     MOVELWL0042    WAM3NA           Employee Badge
     C                     Z-ADDWL0043    WAAWTM           Production Time
     C                     MOVELWL0044    WAXLCD           Shift Number
     C                     Z-ADDWL0045    WAK7DT           Label Date
     C                     MOVELWL0046    WAUVST           EDI Status 1
     C                     MOVELWL0047    WAUWST           EDI Status 2
     C                     MOVELWL0048    WAUXST           EDI Status 3
     C                     MOVELWL0049    WAVSST           Record Status
      *
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     WAAATM           Job Time
     C                     MOVEL##USR     WAAYNA           User Id
     C                     MOVEL##JOB     WAA0NA           Job Name
     C                     Z-ADD##JDT     WAAXDT           Job Date
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                     CALL 'PDGFUPC'              90  RTV System Date
     C           WAAXDT    PARM *ZERO     WQ0004 155       Current System
     C           WAAATM    PARM *ZERO     WQ0005 155       Current System
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGFUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     98    *
     C                     END
     C           KLCRSF    KLIST
     C                     KFLD           WAAIC3           Company Number
     C                     KFLD           WAHGCD           Item Code
     C                     KFLD           WAAJCD           Warehouse Code
     C                     KFLD           WAW9ST           Inventory Trans
     C                     KFLD           WABSST           Inventory Trans
     C                     KFLD           WAB4DT           Transaction Dat
     C                     KFLD           WAC4NY           ITD Sequence Nu
     C                     KFLD           WADXNB           Sequence Number
      * Check for duplicate primary key
     C           KLCRSF    SETLL@B7CPJZ                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR0345' W0RTN   7
      * Send message 'Item Transaction Detai EX'
     C                     MOVEL'USR0345' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C                     WRITE@B7CPJZ                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      * USER: Processing after Data update
      * Crt Export Rate Dtl   XF - Item Transaction Detail  * 
     C                     CALL 'POO5XFR'              90  Crt Export Rate
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WAAIC3    WQ0006  30       Company Number
     C                     PARM WAHGCD    WQ0007  70       Item Code
     C                     PARM WAAJCD    WQ0008  3        Warehouse Code
     C                     PARM WAW9ST    WQ0009  1        Inventory Trans
     C                     PARM WABSST    WQ0010  2        Inventory Trans
     C                     PARM WAB4DT    WQ0011  70       Transaction Dat
     C                     PARM WADXNB    WQ0012  30       Sequence Number
     C                     PARM WAELDT    WQ0013  70       Production Date
     C                     PARM WAHVCD    WQ0014  2        UOM Transaction
     C                     PARM WAF1ST    WQ0015  2        Item Transactio
     C                     PARM WAAUNA    WQ0016 30        Description
     C                     PARM WAA5QT    WQ0017 112       Transaction Qua
     C                     PARM WAAHWG    WQ0018 112       Transaction Wei
     C                     PARM WAAKCS    WQ0019 114       USR Transaction
     C                     PARM WACGCD    WQ0020  2        UOM Cost
     C                     PARM WAAYVA    WQ0021 112       Extended Amount
     C                     PARM WABJNA    WQ0022  6        Ticket Number
     C                     PARM WACKNB    WQ0023  80       GL Document Num
     C                     PARM WABMST    WQ0024  1        GL Update Statu
     C                     PARM WACQCD    WQ0025  3        Reason Code
     C                     PARM WADTCD    WQ0026 15        Reference Numbe
     C                     PARM WAMGNA    WQ0027 10        Lot ID
     C                     PARM WATRBN    WQ0028  70       Transfer Batch
     C                     PARM WATRBS    WQ0029  30       Transfer Batch
     C                     PARM WAC4NB    WQ0030  70       Order Number
     C                     PARM WARINB    WQ0031  30       Item Structure
     C                     PARM WARHNB    WQ0032  30       Item Structure
     C                     PARM WARGNB    WQ0033  30       Item Structure
     C                     PARM WAM3NA    WQ0034 10        Employee Badge
     C                     PARM WAAWTM    WQ0035  60       Production Time
     C                     PARM WAXLCD    WQ0036  1        Shift Number
     C                     PARM WAK7DT    WQ0037  70       Label Date
     C                     PARM WAVSST    WQ0038  1        Record Status
     C                     PARM WAAATM    WQ0039  60       Job Time
     C                     PARM WAAXDT    WQ0040  70       Job Date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'POO5XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCHRC    BEGSR
      *================================================================
      * CHG Value/Qty/Wgt      CH - IC Item Balance Detail  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0032 112       Physical Count
     C                     Z-ADD*ZERO     WN0033 112       Physical Count
     C                     Z-ADD*ZERO     WN0034 112       Physical Count
     C                     Z-ADD*ZERO     WN0035 112       Physical Count
     C                     MOVEL*BLANK    WN0036  1        Physical Count
     C                     Z-ADD*ZERO     WN0037 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0038 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0039 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0040 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0041 112       Quantity In Chi
     C                     Z-ADD*ZERO     WN0042 112       Weight In Chill
     C                     MOVEL*BLANK    WN0043  1        Update Exceptio
     C                     Z-ADD*ZERO     WN0044 112       Physical Start
     C                     Z-ADD*ZERO     WN0045 112       Physical Start
     C                     Z-ADD*ZERO     WN0046 112       Physical Start
     C                     Z-ADD*ZERO     WN0047 112       Physical Start
     C                     Z-ADD*ZERO     WN0048  70       Physical Start
     C                     Z-ADD*ZERO     WN0049 114       Unit Cost Per P
     C                     Z-ADD*ZERO     WN0050 114       Last Cost
     C                     Z-ADD*ZERO     WN0051 112       Value of On Han
     C                     Z-ADD*ZERO     WN0052  70       Label Date
     C                     MOVEL*BLANK    WN0053  1        EDI Status 1
     C                     MOVEL*BLANK    WN0054  1        EDI Status 2
     C                     MOVEL*BLANK    WN0055  1        EDI Status 3
     C                     MOVEL*BLANK    WN0056  1        Record Status
     C                     Z-ADD*ZERO     WN0057  60       Job Time
     C                     MOVEL*BLANK    WN0058 10        User Id
     C                     MOVEL*BLANK    WN0059 10        Job Name
     C                     Z-ADD*ZERO     WN0060  70       Job Date
     C                     MOVEL*BLANK    WN0061  1        Shift Number
     C                     MOVEL*BLANK    WN0062  1        Lot Tracking Fl
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Processing before Data read
     C                     MOVEL'1'       WN0061           Shift Number
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @B1REJ1
     C                     Z-ADDWL0050    B1AIC3           Company Number
     C                     Z-ADDWL0051    B1HGCD           Item Code
     C                     MOVELWL0052    B1AJCD    P      Warehouse Code
     C                     Z-ADDWL0053    B1ELDT           Production Date
      *
     C           KLCHSG    KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
     C           KLCHSG    CHAIN@B1REJ1              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
      * USER: Processing if Data record not found
      * Crt Item Bal. Detail   CR - Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDWL0050    WL0076           Company Number
     C                     Z-ADDWL0051    WL0077           Item Code
     C                     MOVELWL0052    WL0078    P      Warehouse Code
     C                     Z-ADDWL0053    WL0079           Production Date
     C                     Z-ADD*ZERO     WL0080           Physical Count
     C                     Z-ADD*ZERO     WL0081           Physical Count
     C                     Z-ADD*ZERO     WL0082           Physical Count
     C                     Z-ADD*ZERO     WL0083           Physical Count
     C                     MOVEL*BLANK    WL0084           Physical Count
     C                     Z-ADDWL0071    WL0085           Quantity on Han
     C                     Z-ADDWL0070    WL0086           Quantity on Han
     C                     Z-ADD*ZERO     WL0087           Quantity on Han
     C                     Z-ADD*ZERO     WL0088           Quantity on Han
     C                     Z-ADD*ZERO     WL0089           Quantity In Chi
     C                     Z-ADD*ZERO     WL0090           Weight In Chill
     C                     MOVEL'N'       WL0091    P      Update Exceptio
     C                     Z-ADD*ZERO     WL0092           Physical Start
     C                     Z-ADD*ZERO     WL0093           Physical Start
     C                     Z-ADD*ZERO     WL0094           Physical Start
     C                     Z-ADD*ZERO     WL0095           Physical Start
     C                     Z-ADD*ZERO     WL0096           Physical Start
     C                     Z-ADD*ZERO     WL0097           Unit Cost Per P
     C                     Z-ADD*ZERO     WL0098           Last Cost
     C                     Z-ADDWL0074    WL0099           Value of On Han
     C                     Z-ADDWL0075    WL0100           Label Date
     C                     Z-ADDWL0054    WL0101           Item Structure
     C                     Z-ADDWL0055    WL0102           Item Structure
     C                     Z-ADDWL0056    WL0103           Item Structure
     C                     MOVEL*BLANK    WL0104           EDI Status 1
     C                     MOVEL*BLANK    WL0105           EDI Status 2
     C                     MOVEL*BLANK    WL0106           EDI Status 3
     C                     MOVEL'A'       WL0107    P      Record Status
     C                     EXSR SHCRRC
     C           W0RTN     IFNE *BLANK                     IF
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'CAB1REL1'MDACP
     C                     MOVEL'@B1REJ1' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     ENDIF
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE @1DBRC    YARDCS
      * Move non-key fields to @B1REJ1
     C                     Z-ADDWL0054    B1RINB           Item Structure
     C                     Z-ADDWL0055    B1RHNB           Item Structure
     C                     Z-ADDWL0056    B1RGNB           Item Structure
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * USER: Processing before Data update
     C                     MOVEL'Y'       YARDC            *Record Data Ch
     C                     ADD  WL0070    B1ARQT           Quantity on Han
     C                     ADD  WL0071    B1ACWG           Quantity on Han
     C                     ADD  WL0074    B1IDVA           Value of On Han
      * If quantity is zero, so are weight, value of inventory
      * CASE: DB1.Quantity on Hand - U/M1 EQ WRK.ZERO
     C           B1ARQT    IFEQ WUW0NB                     *IF
      * UPD Create Weight Adj. XF - Item Transaction Detail  * 
     C                     CALL 'PDMYXFR'              90  UPD Create Weig
     C                     PARM *BLANK    W0RTN   7
     C                     PARM B1AIC3    WQ0043  30       Company Number
     C                     PARM B1HGCD    WQ0044  70       Item Code
     C                     PARM B1AJCD    WQ0045  3        Warehouse Code
     C                     PARM WL0068    WQ0046  70       Transaction Dat
     C                     PARM B1ELDT    WQ0047  70       Production Date
     C                     PARM WL0069    WQ0048  2        UOM Transaction
     C                     PARM B1ACWG    WQ0049 112       Transaction Wei
     C                     PARM WL0072    WQ0050 114       USR Transaction
     C                     PARM WL0073    WQ0051  2        UOM Cost
     C                     PARM B1RINB    WQ0052  30       Item Structure
     C                     PARM B1RHNB    WQ0053  30       Item Structure
     C                     PARM B1RGNB    WQ0054  30       Item Structure
     C                     PARM WN0061    WQ0055  1        Shift Number
     C                     PARM B1K7DT    WQ0056  70       Label Date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMYXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     Z-ADD*ZERO     B1ACWG           Quantity on Han
     C                     Z-ADD*ZERO     B1IDVA           Value of On Han
     C                     END                             *FI
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     B1AATM           Job Time
     C                     MOVEL##USR     B1AYNA           User Id
     C                     MOVEL##JOB     B1A0NA           Job Name
     C                     Z-ADD##JDT     B1AXDT           Job Date
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                     CALL 'PDGFUPC'              90  RTV System Date
     C           B1AXDT    PARM *ZERO     WQ0057 155       Current System
     C           B1AATM    PARM *ZERO     WQ0058 155       Current System
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGFUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     98    *
     C                     END
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@B1REJ1                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCAB1REL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
      * USER: Processing after Data update
      * CASE: DB1.Quantity on Hand - U/M1 EQ WRK.ZERO
     C           B1ARQT    IFEQ WUW0NB                     *IF
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELB1AJCD    WL0108    P      Warehouse Code
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0109    WN0062    P      Lot Tracking Fl
      * CASE: PAR.Lot Tracking Flag is Not Yes
     C           WN0062    IFEQ *BLANK                     *IF
     C           WN0062    OREQ 'N'
      * DLT Item Bal. Detail   DL - Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB1AIC3    WL0110           Company Number
     C                     Z-ADDB1HGCD    WL0111           Item Code
     C                     MOVELB1AJCD    WL0112    P      Warehouse Code
     C                     Z-ADDB1ELDT    WL0113           Production Date
     C                     EXSR SJDLRC
     C                     END                             *FI
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHCRRC    BEGSR
      *================================================================
      * Crt Item Bal. Detail   CR - Item Balance Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0063  60       Job Time
     C                     MOVEL*BLANK    WN0064 10        User Id
     C                     MOVEL*BLANK    WN0065 10        Job Name
     C                     Z-ADD*ZERO     WN0066  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B1REJ1
     C                     Z-ADDWL0076    B1AIC3           Company Number
     C                     Z-ADDWL0077    B1HGCD           Item Code
     C                     MOVELWL0078    B1AJCD           Warehouse Code
     C                     Z-ADDWL0079    B1ELDT           Production Date
     C                     Z-ADDWL0080    B1ABWG           Physical Count
     C                     Z-ADDWL0081    B1AGQT           Physical Count
     C                     Z-ADDWL0082    B1AHQT           Physical Count
     C                     Z-ADDWL0083    B1AIQT           Physical Count
     C                     MOVELWL0084    B1CTST           Physical Count
     C                     Z-ADDWL0085    B1ACWG           Quantity on Han
     C                     Z-ADDWL0086    B1ARQT           Quantity on Han
     C                     Z-ADDWL0087    B1ASQT           Quantity on Han
     C                     Z-ADDWL0088    B1ATQT           Quantity on Han
     C                     Z-ADDWL0089    B1HDQT           Quantity In Chi
     C                     Z-ADDWL0090    B1HEQT           Weight In Chill
     C                     MOVELWL0091    B1F6ST           Update Exceptio
     C                     Z-ADDWL0092    B1BMWG           Physical Start
     C                     Z-ADDWL0093    B1DSQT           Physical Start
     C                     Z-ADDWL0094    B1DTQT           Physical Start
     C                     Z-ADDWL0095    B1DUQT           Physical Start
     C                     Z-ADDWL0096    B1DHDT           Physical Start
     C                     Z-ADDWL0097    B1AGCS           Unit Cost Per P
     C                     Z-ADDWL0098    B1AECS           Last Cost
     C                     Z-ADDWL0099    B1IDVA           Value of On Han
     C                     Z-ADDWL0100    B1K7DT           Label Date
     C                     Z-ADDWL0101    B1RINB           Item Structure
     C                     Z-ADDWL0102    B1RHNB           Item Structure
     C                     Z-ADDWL0103    B1RGNB           Item Structure
     C                     MOVELWL0104    B1UVST           EDI Status 1
     C                     MOVELWL0105    B1UWST           EDI Status 2
     C                     MOVELWL0106    B1UXST           EDI Status 3
     C                     MOVELWL0107    B1VSST           Record Status
      *
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     B1AATM           Job Time
     C                     MOVEL##USR     B1AYNA           User Id
     C                     MOVEL##JOB     B1A0NA           Job Name
     C                     Z-ADD##JDT     B1AXDT           Job Date
      * RTV System Date/Time   UP - /UT User Programs  * 
     C                     CALL 'PDGFUPC'              90  RTV System Date
     C           B1AXDT    PARM *ZERO     WQ0041 155       Current System
     C           B1AATM    PARM *ZERO     WQ0042 155       Current System
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGFUPC' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     SETON                     98    *
     C                     END
     C           KLCRSH    KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
      * Check for duplicate primary key
     C           KLCRSH    SETLL@B1REJ1                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR0331' W0RTN   7
      * Send message 'Item Balance Detail    EX'
     C                     MOVEL'USR0331' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C                     WRITE@B1REJ1                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         SIRVGN    BEGSR
      *================================================================
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSI     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0108    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSI     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0109           Lot Tracking Fl
     C                     GOTO SIEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBVHST    WL0109           Lot Tracking Fl
     C                     ENDIF
      *================================================================
     CSR         SIEXIT    ENDSR
      /EJECT
     CSR         SJDLRC    BEGSR
      *================================================================
      * DLT Item Bal. Detail   DL - Item Balance Detail  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move key fields to @B1REJ1
     C                     Z-ADDWL0110    B1AIC3           Company Number
     C                     Z-ADDWL0111    B1HGCD           Item Code
     C                     MOVELWL0112    B1AJCD           Warehouse Code
     C                     Z-ADDWL0113    B1ELDT           Production Date
      *
     C           KLDLSJ    KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
     C           KLDLSJ    CHAIN@B1REJ1              9091  *
     C           *IN90     IFEQ '1'
      * Record already deleted
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'CAB1REL1'MDACP
     C                     MOVEL'@B1REJ1' MDFMT
     C                     MOVEL'*DLT'    MDACT
      * Record not found label: LBL002.
     C                     MOVEL'LBL002'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SJEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SJEXIT
     C                     ENDIF
      *
      *................................................................
     C                     DELET@B1REJ1                91  *
     C           *IN91     IFEQ '1'
      * Delete error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         SJEXIT    ENDSR
      /EJECT
     CSR         SKRVGN    BEGSR
      *================================================================
      * RTV Sum Act Qty,Wgt,ValRT - IC Item Balance Detail  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     Z-ADD*ZERO     WL0117           Quantity on Han
     C                     Z-ADD*ZERO     WL0118           Quantity on Han
     C                     Z-ADD*ZERO     WL0119           Quantity on Han
     C                     Z-ADD*ZERO     WL0120           Quantity on Han
     C                     Z-ADD*ZERO     WL0121           Value of On Han
      * Declare restrictor key work fields
     C           *LIKE     DEFN WCAIC3    WQSK01           Company Number
     C           *LIKE     DEFN WCHGCD    WQSK02           Item Code
     C           *LIKE     DEFN WCAJCD    WQSK03           Warehouse Code
      * Define keylist
     C           KRSSK     KLIST
     C                     KFLD           WQSK01           Company Number
     C                     KFLD           WQSK02           Item Code
     C                     KFLD           WQSK03           Warehouse Code
      * Setup key
     C                     Z-ADDWL0114    WQSK01           Company Number
     C                     Z-ADDWL0115    WQSK02           Item Code
     C                     MOVELWL0116    WQSK03           Warehouse Code
      * Establish starting position
     C           KRSSK     SETLLCAB1RL4                    *
     C           KRSSK     READECAB1RL4                  90*
      * Data record not found
     C   90                MOVEL'USR0330' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     ADD  WCACWG    WL0117           Quantity on Han
     C                     ADD  WCARQT    WL0118           Quantity on Han
     C                     ADD  WCASQT    WL0119           Quantity on Han
     C                     ADD  WCATQT    WL0120           Quantity on Han
     C                     ADD  WCIDVA    WL0121           Value of On Han
     C           KRSSK     READECAB1RL4                  90*
     C                     ENDDO
      *================================================================
     CSR         SKEXIT    ENDSR
      /EJECT
     CSR         SLCHRC    BEGSR
      *================================================================
      * Chg Val/Qty/Wgt        Ch - IC Item Balance  * 
      *================================================================
      * This is a shared subroutine
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0067 114       Unit Cost Per P
     C                     Z-ADD*ZERO     WN0068 114       Last Cost
     C                     Z-ADD*ZERO     WN0069 114       Cost per Primar
     C                     Z-ADD*ZERO     WN0070 114       Cost per Pricin
     C                     Z-ADD*ZERO     WN0071 114       Revaluation Cos
     C                     Z-ADD*ZERO     WN0072  70       Revaluation Eff
     C                     MOVEL*BLANK    WN0073  1        Revaluation Cos
     C                     Z-ADD*ZERO     WN0074 114       Last Revaluatio
     C                     Z-ADD*ZERO     WN0075  70       Last Revaluatio
     C                     Z-ADD*ZERO     WN0076 112       On Hand UOM2 Su
     C                     Z-ADD*ZERO     WN0077 112       On Hand UOM3 Su
     C                     Z-ADD*ZERO     WN0078 112       Quantity In Chi
     C                     Z-ADD*ZERO     WN0079 112       Weight In Chill
     C                     Z-ADD*ZERO     WN0080 112       Quantity Schedu
     C                     Z-ADD*ZERO     WN0081 112       Quantity on Sal
     C                     Z-ADD*ZERO     WN0082 112       Quantity on Pur
     C                     Z-ADD*ZERO     WN0083 112       Quantity on Tra
     C                     Z-ADD*ZERO     WN0084 112       Quantity Avail
     C                     MOVEL*BLANK    WN0085  3        Cycle Count Cod
     C                     Z-ADD*ZERO     WN0086  70       Date of Last Or
     C                     Z-ADD*ZERO     WN0087  70       Date of Last Sh
     C                     MOVEL*BLANK    WN0088  1        Inventory Plann
     C                     Z-ADD*ZERO     WN0089  52       Safety Allowanc
     C                     Z-ADD*ZERO     WN0090 112       Safety Allowanc
     C                     Z-ADD*ZERO     WN0091  70       Stock Out Date
     C                     MOVEL*BLANK    WN0092  3        Buyer Code
     C                     Z-ADD*ZERO     WN0093  30       Lead Time Last
     C                     Z-ADD*ZERO     WN0094  70       Lead Time Date
     C                     Z-ADD*ZERO     WN0095  30       Lead Time Next
     C                     Z-ADD*ZERO     WN0096  70       Lead Time Date
     C                     MOVEL*BLANK    WN0097  1        Lead Time Excep
     C                     Z-ADD*ZERO     WN0098 112       Usage Qty per C
     C                     Z-ADD*ZERO     WN0099 112       Usage Weight pe
     C                     Z-ADD*ZERO     WN0100  70       Inventory Manag
     C                     Z-ADD*ZERO     WN0101 112       Minimum Quantit
     C                     Z-ADD*ZERO     WN0102 112       Maximum Quantit
     C                     Z-ADD*ZERO     WN0103  70       Last Physical C
     C                     MOVEL*BLANK    WN0104  1        Requisition Mod
     C                     MOVEL*BLANK    WN0105  1        Cost Update Pen
     C                     MOVEL*BLANK    WN0106  1        Post GL Status
     C                     Z-ADD*ZERO     WN0107  80       Vendor Item_Whs
     C                     Z-ADD*ZERO     WN0108  30       Item Structure
     C                     Z-ADD*ZERO     WN0109  30       Item Structure
     C                     Z-ADD*ZERO     WN0110  30       Item Structure
     C                     MOVEL*BLANK    WN0111  1        EDI Status 1
     C                     MOVEL*BLANK    WN0112  1        EDI Status 2
     C                     MOVEL*BLANK    WN0113  1        EDI Status 3
     C                     MOVEL*BLANK    WN0114  1        Record Status
     C                     Z-ADD*ZERO     WN0115  60       Job Time
     C                     MOVEL*BLANK    WN0116 10        User Id
     C                     MOVEL*BLANK    WN0117 10        Job Name
     C                     Z-ADD*ZERO     WN0118  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YBRDC   1
      *
      * Move key fields to @B0REJT
     C                     Z-ADDWL0122    B0AIC3           Company Number
     C                     Z-ADDWL0123    B0HGCD           Item Code
     C                     MOVELWL0124    B0AJCD    P      Warehouse Code
      *
     C           KLCHSL    KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
     C           KLCHSL    CHAIN@B0REJT              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'CAB0REL0'MDACP
     C                     MOVEL'@B0REJT' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL003.
     C                     MOVEL'LBL003'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SLEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SLEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QCAB01    YBRDCS
      * Move non-key fields to @B0REJT
     C                     Z-ADDWL0125    B0BOWG           On Hand Weight
     C                     Z-ADDWL0126    B0DDQT           On Hand UOM1 Su
     C                     Z-ADDWL0127    B0IDVA           Value of On Han
      *
      * Set PGM.*Record Data Changed flag
     C           QCAB01    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * USER: Processing before Data update
     C                     MOVEL'Y'       YBRDC            *Record Data Ch
      * Refresh the available to sell quantity
     C                     Z-ADDB0DDQT    B0DOQT           Quantity Avail
     C                     SUB  B0AQQT    B0DOQT           Quantity Avail
     C                     SUB  B0AUQT    B0DOQT           Quantity Avail
     C                     SUB  B0EMQT    B0DOQT           Quantity Avail
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     B0AATM           Job Time
     C                     MOVEL##USR     B0AYNA           User Id
     C                     MOVEL##JOB     B0A0NA           Job Name
     C                     Z-ADD##JDT     B0AXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QCAB01    IFNE YBRDCS
     C           YBRDC     ANDNE'N'
     C                     MOVE 'Y'       YBRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YBRDC     IFEQ 'Y'
     C                     UPDAT@B0REJT                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCAB0REL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SLEXIT    ENDSR
      /EJECT
     CSR         SMRVGN    BEGSR
      *================================================================
      * RTV Warehouse Info     RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       W0RSL            *Record selecte
      * Define keylist
     C           KRSSM     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0128    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSM     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0129           Warehouse Descr
     C                     MOVEL*BLANK    WL0130           Address Line 1
     C                     MOVEL*BLANK    WL0131           Address Line 2
     C                     MOVEL*BLANK    WL0132           Address Line 3
     C                     MOVEL*BLANK    WL0133           City
     C                     MOVEL*BLANK    WL0134           Zip Postal Code
     C                     MOVEL*BLANK    WL0135           Production Ware
     C                     MOVEL*BLANK    WL0136           State Code
     C                     MOVEL*BLANK    WL0137           Lot Tracking Fl
     C                     MOVEL*BLANK    WL0138           Default Printer
     C                     MOVEL*BLANK    WL0139           Warehouse Type
     C                     MOVEL*BLANK    WL0140           Trans Contol AS
     C                     MOVEL*BLANK    WL0141           Warehouse Locat
     C                     MOVEL*BLANK    WL0142           Warehouse Std C
     C                     Z-ADD*ZERO     WL0143           Warehouse Chill
     C                     MOVEL*BLANK    WL0144           Include in Auto
     C                     MOVEL*BLANK    WL0145           Default Manifes
     C                     MOVEL*BLANK    WL0146           Default Load Se
     C                     MOVEL*BLANK    WL0147           WHS Slotting Li
     C                     Z-ADD*ZERO     WL0148           Shipping Compan
     C                     Z-ADD*ZERO     WL0149           Accounting Comp
     C                     Z-ADD*ZERO     WL0150           WHS Sched Prod
     C                     Z-ADD*ZERO     WL0151           WHS Inventory C
     C                     MOVEL*BLANK    WL0152           Parent Warehous
     C                     MOVEL*BLANK    WL0153           Default Shippin
     C                     MOVEL*BLANK    WL0154           WHS Live with C
     C                     MOVEL*BLANK    WL0155           WHS PFS Interfa
     C                     MOVEL*BLANK    WL0156           WHS Req Meter R
     C                     MOVEL*BLANK    WL0157           WHS Default Loa
     C                     MOVEL*BLANK    WL0158           WHS TMS Plannin
     C                     MOVEL*BLANK    WL0159           Default Carrier
     C                     MOVEL*BLANK    WL0160           Inventory Logic
     C                     MOVEL*BLANK    WL0161           WHS Auto Inv Re
     C                     MOVEL*BLANK    WL0162           EDI Status 1
     C                     MOVEL*BLANK    WL0163           EDI Status 2
     C                     MOVEL*BLANK    WL0164           EDI Status 3
     C                     MOVEL*BLANK    WL0165           Record Status
     C                     Z-ADD*ZERO     WL0166           Job Time
     C                     MOVEL*BLANK    WL0167           User Id
     C                     MOVEL*BLANK    WL0168           Job Name
     C                     Z-ADD*ZERO     WL0169           Job Date
     C                     GOTO SMEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBF8NA    WL0129           Warehouse Descr
     C                     MOVELWBACNA    WL0130           Address Line 1
     C                     MOVELWBADNA    WL0131           Address Line 2
     C                     MOVELWBAENA    WL0132           Address Line 3
     C                     MOVELWBAJNA    WL0133           City
     C                     MOVELWBBTTX    WL0134           Zip Postal Code
     C                     MOVELWBAOCD    WL0135           Production Ware
     C                     MOVELWBBGCD    WL0136           State Code
     C                     MOVELWBVHST    WL0137           Lot Tracking Fl
     C                     MOVELWBMPNA    WL0138           Default Printer
     C                     MOVELWBWPST    WL0139           Warehouse Type
     C                     MOVELWBXUST    WL0140           Trans Contol AS
     C                     MOVELWBT0ST    WL0141           Warehouse Locat
     C                     MOVELWBT1ST    WL0142           Warehouse Std C
     C                     Z-ADDWBDBNB    WL0143           Warehouse Chill
     C                     MOVELWBT2ST    WL0144           Include in Auto
     C                     MOVELWBT3ST    WL0145           Default Manifes
     C                     MOVELWBT4ST    WL0146           Default Load Se
     C                     MOVELWBT6ST    WL0147           WHS Slotting Li
     C                     Z-ADDWBBWC3    WL0148           Shipping Compan
     C                     Z-ADDWBBTC3    WL0149           Accounting Comp
     C                     Z-ADDWBBUC3    WL0150           WHS Sched Prod
     C                     Z-ADDWBBVC3    WL0151           WHS Inventory C
     C                     MOVELWBFCAA    WL0152           Parent Warehous
     C                     MOVELWBRQSX    WL0153           Default Shippin
     C                     MOVELWBRRSX    WL0154           WHS Live with C
     C                     MOVELWBRSSX    WL0155           WHS PFS Interfa
     C                     MOVELWBRTSX    WL0156           WHS Req Meter R
     C                     MOVELWBT7ST    WL0157           WHS Default Loa
     C                     MOVELWBT8ST    WL0158           WHS TMS Plannin
     C                     MOVELWBRNSX    WL0159           Default Carrier
     C                     MOVELWBROSX    WL0160           Inventory Logic
     C                     MOVELWBRPSX    WL0161           WHS Auto Inv Re
     C                     MOVELWBUVST    WL0162           EDI Status 1
     C                     MOVELWBUWST    WL0163           EDI Status 2
     C                     MOVELWBUXST    WL0164           EDI Status 3
     C                     MOVELWBVSST    WL0165           Record Status
     C                     Z-ADDWBAATM    WL0166           Job Time
     C                     MOVELWBAYNA    WL0167           User Id
     C                     MOVELWBA0NA    WL0168           Job Name
     C                     Z-ADDWBAXDT    WL0169           Job Date
     C                     MOVEL'Y'       W0RSL            *Record selecte
     C                     ENDIF
      *================================================================
     CSR         SMEXIT    ENDSR
      /EJECT
     CSR         SNRVGN    BEGSR
      *================================================================
      * RTV Whse Location Info RT - Warehouse Location  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN L2AJCD    WQSN01           Warehouse Code
      * Define keylist
     C           KRSSN     KLIST
     C                     KFLD           WQSN01           Warehouse Code
      * Setup key
     C                     MOVELWL0170    WQSN01           Warehouse Code
      * Establish starting position
     C           KRSSN     SETLL@L2RESM                    *
     C           KRSSN     READE@L2RESM                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2628' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0171           Location Code
     C                     MOVEL*BLANK    WL0172           Location Aisle
     C                     Z-ADD*ZERO     WL0173           Location Bay
     C                     Z-ADD*ZERO     WL0174           Loc Unused Chil
     C                     GOTO SNEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELL2YMCD    WL0171           Location Code
     C                     MOVELL2YPCD    WL0172           Location Aisle
     C                     Z-ADDL2LCBY    WL0173           Location Bay
     C                     Z-ADDL2LCCT    WL0174           Loc Unused Chil
     C                     GOTO SNEXIT                     *QUIT
     C           KRSSN     READE@L2RESM                  90*
     C                     ENDDO
      *================================================================
     CSR         SNEXIT    ENDSR
      /EJECT
     CSR         SORVGN    BEGSR
      *================================================================
      * RTV Shipping Co        RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSO     KLIST
     C                     KFLD           WBAJCD           Warehouse Code
      * Setup key
     C                     MOVELWL0175    WBAJCD           Warehouse Code
      * Establish starting position
     C           KRSSO     CHAIN@ADREAO              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WL0176           Shipping Compan
     C                     GOTO SOEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWBBWC3    WL0176           Shipping Compan
     C                     ENDIF
      *================================================================
     CSR         SOEXIT    ENDSR
      /EJECT
     CSR         SPRVGN    BEGSR
      *================================================================
      * Val Item Balance       RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSP     KLIST
     C                     KFLD           WDAIC3           Company Number
     C                     KFLD           WDHGCD           Item Code
     C                     KFLD           WDAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWL0177    WDAIC3           Company Number
     C                     Z-ADDWL0178    WDHGCD           Item Code
     C                     MOVELWL0179    WDAJCD           Warehouse Code
      * Establish starting position
     C           KRSSP     CHAIN@B0REYY              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SPEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
     C                     ENDIF
      *================================================================
     CSR         SPEXIT    ENDSR
      /EJECT
     CSR         SQCRRC    BEGSR
      *================================================================
      * Crt Item Balance       CR - Item Balance  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0119  60       Job Time
     C                     MOVEL*BLANK    WN0120 10        User Id
     C                     MOVEL*BLANK    WN0121 10        Job Name
     C                     Z-ADD*ZERO     WN0122  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @B0REJT
     C                     Z-ADDWL0180    B0AIC3           Company Number
     C                     Z-ADDWL0181    B0HGCD           Item Code
     C                     MOVELWL0182    B0AJCD           Warehouse Code
     C                     Z-ADDWL0183    B0AGCS           Unit Cost Per P
     C                     Z-ADDWL0184    B0AECS           Last Cost
     C                     Z-ADDWL0185    B0BACS           Cost per Primar
     C                     Z-ADDWL0186    B0BBCS           Cost per Pricin
     C                     Z-ADDWL0187    B0CBPR           Revaluation Cos
     C                     Z-ADDWL0188    B0GUDT           Revaluation Eff
     C                     MOVELWL0189    B0XYST           Revaluation Cos
     C                     Z-ADDWL0190    B0CTPR           Last Revaluatio
     C                     Z-ADDWL0191    B0G4DT           Last Revaluatio
     C                     Z-ADDWL0192    B0BOWG           On Hand Weight
     C                     Z-ADDWL0193    B0DDQT           On Hand UOM1 Su
     C                     Z-ADDWL0194    B0DEQT           On Hand UOM2 Su
     C                     Z-ADDWL0195    B0DFQT           On Hand UOM3 Su
     C                     Z-ADDWL0196    B0HDQT           Quantity In Chi
     C                     Z-ADDWL0197    B0HEQT           Weight In Chill
     C                     Z-ADDWL0198    B0AJQT           Quantity Schedu
     C                     Z-ADDWL0199    B0AQQT           Quantity on Sal
     C                     Z-ADDWL0200    B0AUQT           Quantity on Pur
     C                     Z-ADDWL0201    B0EMQT           Quantity on Tra
     C                     Z-ADDWL0202    B0DOQT           Quantity Avail
     C                     MOVELWL0203    B0ATNA           Cycle Count Cod
     C                     Z-ADDWL0204    B0AKDT           Date of Last Or
     C                     Z-ADDWL0205    B0ANDT           Date of Last Sh
     C                     Z-ADDWL0206    B0IDVA           Value of On Han
     C                     MOVELWL0207    B0JVST           Inventory Plann
     C                     Z-ADDWL0208    B0BZPC           Safety Allowanc
     C                     Z-ADDWL0209    B0DGQT           Safety Allowanc
     C                     Z-ADDWL0210    B0DIDT           Stock Out Date
     C                     MOVELWL0211    B0ALCD           Buyer Code
     C                     Z-ADDWL0212    B0BFDY           Lead Time Last
     C                     Z-ADDWL0213    B0DJDT           Lead Time Date
     C                     Z-ADDWL0214    B0BGDY           Lead Time Next
     C                     Z-ADDWL0215    B0DKDT           Lead Time Date
     C                     MOVELWL0216    B0J2ST           Lead Time Excep
     C                     Z-ADDWL0217    B0DJQT           Usage Qty per C
     C                     Z-ADDWL0218    B0BNWG           Usage Weight pe
     C                     Z-ADDWL0219    B0DLDT           Inventory Manag
     C                     Z-ADDWL0220    B0DPQT           Minimum Quantit
     C                     Z-ADDWL0221    B0DQQT           Maximum Quantit
     C                     Z-ADDWL0222    B0DMDT           Last Physical C
     C                     MOVELWL0223    B0M0ST           Requisition Mod
     C                     MOVELWL0224    B0J9ST           Cost Update Pen
     C                     MOVELWL0225    B0KBST           Post GL Status
     C                     Z-ADDWL0226    B0AKC8           Vendor Item_Whs
     C                     Z-ADDWL0227    B0RINB           Item Structure
     C                     Z-ADDWL0228    B0RHNB           Item Structure
     C                     Z-ADDWL0229    B0RGNB           Item Structure
     C                     MOVELWL0230    B0UVST           EDI Status 1
     C                     MOVELWL0231    B0UWST           EDI Status 2
     C                     MOVELWL0232    B0UXST           EDI Status 3
     C                     MOVELWL0233    B0VSST           Record Status
      *
      * USER: Processing before Data update
      * Set Date/Time Stamp.PgmIF
     C                     Z-ADD##JTM     B0AATM           Job Time
     C                     MOVEL##USR     B0AYNA           User Id
     C                     MOVEL##PGM     B0A0NA           Job Name
     C                     Z-ADD##JDT     B0AXDT           Job Date
     C           KLCRSQ    KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
      * Check for duplicate primary key
     C           KLCRSQ    SETLL@B0REJT                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR0329' W0RTN   7
      * Send message 'Item Balance           EX'
     C                     MOVEL'USR0329' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SQEXIT
     C                     ENDIF
      *
     C                     WRITE@B0REJT                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SQEXIT    ENDSR
      /EJECT
     CSR         SRRVGN    BEGSR
      *================================================================
      * Prc Create Dtl Receipt RT - Item Transaction Detail  * 
      *================================================================
      *
     C                     MOVEL*BLANK    WN0123  2        UOM Cost
     C                     Z-ADD*ZERO     WN0124 112       Extended Amount
     C                     MOVEL*BLANK    WN0125  1        GL Update Statu
     C                     MOVEL*BLANK    WN0126 30        Description Lin
     C                     MOVEL*BLANK    WN0127  2        UOM Primary
     C                     Z-ADD*ZERO     WN0128  94       Conversion Fact
     C                     MOVEL*BLANK    WN0129  1        Operation Facto
     C                     MOVEL*BLANK    WN0130  2        UOM Second
     C                     Z-ADD*ZERO     WN0131  94       Conversion Fact
     C                     MOVEL*BLANK    WN0132  1        Operation Facto
     C                     MOVEL*BLANK    WN0133  2        UOM Third
     C                     MOVEL*BLANK    WN0134  2        UOM Pricing
     C                     Z-ADD*ZERO     WN0135 112       Unit Weight
     C                     MOVEL*BLANK    WN0136  1        Production Date
     C                     MOVEL*BLANK    WN0137  1        Catch Weight St
     C                     Z-ADD*ZERO     WN0138  30       Item Structure
     C                     Z-ADD*ZERO     WN0139  30       Item Structure
     C                     Z-ADD*ZERO     WN0140  30       Item Structure
     C                     Z-ADD*ZERO     WN0141 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0142 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0143 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0144 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0145 114       Unit Cost Per P
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSR     KLIST
     C                     KFLD           WEAIC3           Company Number
     C                     KFLD           WEHGCD           Item Code
     C                     KFLD           WEAJCD           Warehouse Code
     C                     KFLD           WEW9ST           Inventory Trans
     C                     KFLD           WEBSST           Inventory Trans
     C                     KFLD           WEB4DT           Transaction Dat
     C                     KFLD           WEC4NY           ITD Sequence Nu
     C                     KFLD           WEDXNB           Sequence Number
      * Setup key
     C                     Z-ADDWL0234    WEAIC3           Company Number
     C                     Z-ADDWL0235    WEHGCD           Item Code
     C                     MOVELWL0236    WEAJCD           Warehouse Code
     C                     MOVELWL0237    WEW9ST           Inventory Trans
     C                     MOVELWL0238    WEBSST           Inventory Trans
     C                     Z-ADDWL0239    WEB4DT           Transaction Dat
     C                     Z-ADDWL0240    WEC4NY           ITD Sequence Nu
     C                     Z-ADDWL0241    WEDXNB           Sequence Number
      * Establish starting position
     C           KRSSR     CHAINRB7CPJ3              90    *
      * Data record not found
     C   90                MOVEL'USR0344' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Rtv Base Values        RT - Company Item  * 
     C                     EXSR SSRVGN
      * Rtv Quantity/Dollars   RT - Item Balance  * 
     C                     EXSR STRVGN
      * UPD Value/Qty/Wgt      CH - Item Balance  * 
     C                     EXSR SUCHRC
     C                     ENDIF
      *================================================================
     CSR         SREXIT    ENDSR
      /EJECT
     CSR         SSRVGN    BEGSR
      *================================================================
      * Rtv Base Values        RT - Company Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSS     KLIST
     C                     KFLD           BZAIC3           Company Number
     C                     KFLD           BZHGCD           Item Code
      * Setup key
     C                     Z-ADDWEAIC3    BZAIC3           Company Number
     C                     Z-ADDWEHGCD    BZHGCD           Item Code
      * Establish starting position
     C           KRSSS     CHAIN@BZREJU              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WN0126           Description Lin
     C                     MOVEL*BLANK    WUAWNA           Description Lin
     C                     MOVEL*BLANK    WN0127           UOM Primary
     C                     Z-ADD*ZERO     WN0128           Conversion Fact
     C                     MOVEL*BLANK    WN0129           Operation Facto
     C                     MOVEL*BLANK    WN0130           UOM Second
     C                     Z-ADD*ZERO     WN0131           Conversion Fact
     C                     MOVEL*BLANK    WN0132           Operation Facto
     C                     MOVEL*BLANK    WN0133           UOM Third
     C                     MOVEL*BLANK    WUAICD           UOM Pricing
     C                     Z-ADD*ZERO     WN0135           Unit Weight
     C                     MOVEL*BLANK    WN0136           Production Date
     C                     MOVEL*BLANK    WN0137           Catch Weight St
     C                     Z-ADD*ZERO     WUCHTM           Fresh Chilling
     C                     GOTO SSEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    WN0126           Description Lin
     C                     MOVELBZAWNA    WUAWNA           Description Lin
     C                     MOVELBZADCD    WN0127           UOM Primary
     C                     Z-ADDBZAWPC    WN0128           Conversion Fact
     C                     MOVELBZLXST    WN0129           Operation Facto
     C                     MOVELBZAECD    WN0130           UOM Second
     C                     Z-ADDBZAXPC    WN0131           Conversion Fact
     C                     MOVELBZLYST    WN0132           Operation Facto
     C                     MOVELBZAFCD    WN0133           UOM Third
     C                     MOVELBZAICD    WUAICD           UOM Pricing
     C                     Z-ADDBZAIWG    WN0135           Unit Weight
     C                     MOVELBZFZST    WN0136           Production Date
     C                     MOVELBZAVST    WN0137           Catch Weight St
     C                     Z-ADDBZCHTM    WUCHTM           Fresh Chilling
     C                     ENDIF
      *================================================================
     CSR         SSEXIT    ENDSR
      /EJECT
     CSR         STRVGN    BEGSR
      *================================================================
      * Rtv Quantity/Dollars   RT - Item Balance  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSST     KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFHGCD           Item Code
     C                     KFLD           WFAJCD           Warehouse Code
      * Setup key
     C                     Z-ADDWEAIC3    WFAIC3           Company Number
     C                     Z-ADDWEHGCD    WFHGCD           Item Code
     C                     MOVELWEAJCD    WFAJCD           Warehouse Code
      * Establish starting position
     C           KRSST     CHAIN@B0REJX              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0328' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0145           Unit Cost Per P
     C                     Z-ADD*ZERO     WN0141           On Hand Weight
     C                     Z-ADD*ZERO     WN0142           On Hand UOM1 Su
     C                     Z-ADD*ZERO     WN0143           On Hand UOM2 Su
     C                     Z-ADD*ZERO     WN0144           On Hand UOM3 Su
     C                     Z-ADD*ZERO     WUIDVA           Value of On Han
     C                     GOTO STEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDWFAGCS    WN0145           Unit Cost Per P
     C                     Z-ADDWFBOWG    WN0141           On Hand Weight
     C                     Z-ADDWFDDQT    WN0142           On Hand UOM1 Su
     C                     Z-ADDWFDEQT    WN0143           On Hand UOM2 Su
     C                     Z-ADDWFDFQT    WN0144           On Hand UOM3 Su
     C                     Z-ADDWFIDVA    WUIDVA           Value of On Han
     C                     ENDIF
      *================================================================
     CSR         STEXIT    ENDSR
      /EJECT
     CSR         SUCHRC    BEGSR
      *================================================================
      * UPD Value/Qty/Wgt      CH - Item Balance  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0146 112       Quantity based
     C                     Z-ADD*ZERO     WN0147 112       Quantity based
     C                     Z-ADD*ZERO     WN0148 112       Quantity based
     C                     Z-ADD*ZERO     WN0149 114       Cost based on U
     C                     Z-ADD*ZERO     WN0150 114       Cost based on U
     C                     Z-ADD*ZERO     WN0151 114       Cost based on U
     C                     Z-ADD*ZERO     WN0152 112       Quantity Total
     C                     Z-ADD*ZERO     WN0153 112       Quantity Total
     C                     Z-ADD*ZERO     WN0154 112       Cost Replace Do
     C                     Z-ADD*ZERO     WN0155 112       USR Allocated P
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Processing before Data read
      *
     C                     Z-ADD*ZERO     WN0156 114       Cost based on U
     C                     Z-ADD*ZERO     WN0157 114       Cost based on U
     C                     Z-ADD*ZERO     WN0158 114       Cost based on U
      *
      * Clc Convert Cost       IF
      * Initialize parameter values
     C                     Z-ADD*ZERO     WN0149           Cost based on U
     C                     Z-ADD*ZERO     WN0150           Cost based on U
     C                     Z-ADD*ZERO     WN0151           Cost based on U
      * Process based on Unit of Measure entered
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Cost
     C           WN0127    IFEQ WECGCD                     *IF
     C                     Z-ADDWN0145    WN0149           Cost based on U
      * Process second U/M if entered
      * CASE: PAR.U/M - Second is Entered
     C           WN0130    IFNE *BLANK                     *IF
      * Convert based on operation code
      * CASE: PAR.Operation Factor 1 is Multiply
     C           WN0129    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           WN0128    IFNE 0                          *IF
     C           WN0145    DIV  WN0128    WN0157    H      Cost based on U
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           WN0129    IFEQ 'D'                        *IF
     C           WN0145    MULT WN0128    WN0157    H      Cost based on U
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0157    WN0150           Cost based on U
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           WN0133    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           WN0132    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           WN0131    IFNE 0                          *IF
     C           WN0157    DIV  WN0131    WN0151    H      Cost based on U
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           WN0132    IFEQ 'D'                        *IF
     C           WN0157    MULT WN0131    WN0151    H      Cost based on U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Cost
     C           WN0130    IFEQ WECGCD                     *IF
     C                     Z-ADDWN0145    WN0150           Cost based on U
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           WN0129    IFEQ 'M'                        *IF
     C           WN0145    MULT WN0128    WN0149    H      Cost based on U
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           WN0129    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           WN0128    IFNE 0                          *IF
     C           WN0145    DIV  WN0128    WN0149    H      Cost based on U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Process third U/M if entered
      * CASE: PAR.U/M - Third is Entered
     C           WN0133    IFNE *BLANK                     *IF
      * CASE: PAR.Operation Factor 2 is Multiply
     C           WN0132    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           WN0131    IFNE 0                          *IF
     C           WN0145    DIV  WN0131    WN0151    H      Cost based on U
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           WN0132    IFEQ 'D'                        *IF
     C           WN0145    MULT WN0131    WN0151    H      Cost based on U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Cost
     C           WN0133    IFEQ WECGCD                     *IF
     C                     Z-ADDWN0145    WN0151           Cost based on U
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           WN0132    IFEQ 'M'                        *IF
     C           WN0145    MULT WN0131    WN0157    H      Cost based on U
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           WN0132    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           WN0131    IFNE 0                          *IF
     C           WN0145    DIV  WN0131    WN0157    H      Cost based on U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0157    WN0150           Cost based on U
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           WN0129    IFEQ 'M'                        *IF
     C           WN0157    MULT WN0128    WN0149    H      Cost based on U
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           WN0129    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           WN0128    IFNE 0                          *IF
     C           WN0157    DIV  WN0128    WN0149    H      Cost based on U
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      *
     C                     Z-ADD*ZERO     WN0159 112       Quantity based
     C                     Z-ADD*ZERO     WN0160 112       Quantity based
     C                     Z-ADD*ZERO     WN0161 112       Quantity based
      *
      * Clc Convert Quantity   IF
      * Clear output parameters
     C                     Z-ADD*ZERO     WN0146           USR Qty based o
     C                     Z-ADD*ZERO     WN0147           USR Qty based o
     C                     Z-ADD*ZERO     WN0148           USR Qty based o
      * Process based on transaction U/M
      * CASE: PAR.U/M - Primary EQ PAR.U/M - Transaction
     C           WN0127    IFEQ WEHVCD                     *IF
     C                     Z-ADDWEA5QT    WN0146           USR Qty based o
      * Process entered U/M2
      * CASE: PAR.U/M - Second is Entered
     C           WN0130    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           WN0129    IFEQ 'M'                        *IF
     C           WEA5QT    MULT WN0128    WN0160    H      Quantity based
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           WN0129    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           WN0128    IFNE 0                          *IF
     C           WEA5QT    DIV  WN0128    WN0160    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0160    WN0147           USR Qty based o
     C                     END                             *FI
      * Process entered U/M3
      * CASE: PAR.U/M - Third is Entered
     C           WN0133    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           WN0132    IFEQ 'M'                        *IF
     C           WN0160    MULT WN0131    WN0161    H      Quantity based
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           WN0132    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           WN0131    IFNE 0                          *IF
     C           WN0160    DIV  WN0131    WN0161    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0161    WN0148           USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Second EQ PAR.U/M - Transaction
     C           WN0130    IFEQ WEHVCD                     *IF
     C                     Z-ADDWEA5QT    WN0147           USR Qty based o
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           WN0129    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           WN0128    IFNE 0                          *IF
     C           WEA5QT    DIV  WN0128    WN0146    H      USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           WN0129    IFEQ 'D'                        *IF
     C           WEA5QT    MULT WN0128    WN0146    H      USR Qty based o
     C                     END                             *FI
     C                     END                             *FI
      * Process entered U/M3
      * CASE: PAR.U/M - Third is Entered
     C           WN0133    IFNE *BLANK                     *IF
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           WN0132    IFEQ 'M'                        *IF
     C           WEA5QT    MULT WN0131    WN0161    H      Quantity based
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           WN0132    IFEQ 'D'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           WN0131    IFNE 0                          *IF
     C           WEA5QT    DIV  WN0131    WN0161    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0161    WN0148           USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.U/M - Third EQ PAR.U/M - Transaction
     C           WN0133    IFEQ WEHVCD                     *IF
     C                     Z-ADDWEA5QT    WN0148           USR Qty based o
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 2 is Multiply
     C           WN0132    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 2 is Entered
     C           WN0131    IFNE 0                          *IF
     C           WEA5QT    DIV  WN0131    WN0160    H      Quantity based
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 2 is Divide
     C           WN0132    IFEQ 'D'                        *IF
     C           WEA5QT    MULT WN0131    WN0160    H      Quantity based
     C                     END                             *FI
     C                     END                             *FI
     C                     Z-ADDWN0160    WN0147           USR Qty based o
      * Convert based on operation factor
      * CASE: PAR.Operation Factor 1 is Multiply
     C           WN0129    IFEQ 'M'                        *IF
      * CASE: PAR.Conversion Factor 1 is Entered
     C           WN0128    IFNE 0                          *IF
     C           WN0160    DIV  WN0128    WN0146    H      USR Qty based o
     C                     END                             *FI
     C                     ELSE
      * CASE: PAR.Operation Factor 1 is Divide
     C           WN0129    IFEQ 'D'                        *IF
     C           WN0160    MULT WN0128    WN0146    H      USR Qty based o
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YCRDC   1
      *
      * Move key fields to @B0REJT
     C                     Z-ADDWEAIC3    B0AIC3           Company Number
     C                     Z-ADDWEHGCD    B0HGCD           Item Code
     C                     MOVELWEAJCD    B0AJCD    P      Warehouse Code
      *
     C           KLCHSU    KLIST
     C                     KFLD           B0AIC3           Company Number
     C                     KFLD           B0HGCD           Item Code
     C                     KFLD           B0AJCD           Warehouse Code
     C           KLCHSU    CHAIN@B0REJT              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'CAB0REL0'MDACP
     C                     MOVEL'@B0REJT' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL004.
     C                     MOVEL'LBL004'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SUEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SUEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QCAB01    YCRDCS
      *
      * Set PGM.*Record Data Changed flag
     C           QCAB01    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * USER: Processing before Data update
     C                     MOVEL'Y'       YCRDC            *Record Data Ch
      * (Creates IB if not found or updates if it exists)
      * Update IC Item Balance Detail
      * UPD Value/Qty          RT - IC Item Balance Detail  * 
     C                     EXSR SVRVGN
      * Update the quantity/weight on hand in the item balance file
      * RTV Sum Act Qty,Wgt,ValRT - IC Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0114           Company Number
     C                     Z-ADDB0HGCD    WL0115           Item Code
     C                     MOVELB0AJCD    WL0116    P      Warehouse Code
     C                     Z-ADDB0BOWG    WL0117           Quantity on Han
     C                     Z-ADDB0DDQT    WL0118           Quantity on Han
     C                     Z-ADDWUNFNN    WL0119           Quantity on Han
     C                     Z-ADDWUNFNN    WL0120           Quantity on Han
     C                     Z-ADDB0IDVA    WL0121           Value of On Han
     C                     EXSR SKRVGN
      * Move subroutine local variables to output parameters.
     C                     Z-ADDWL0117    B0BOWG           Quantity on Han
     C                     Z-ADDWL0118    B0DDQT           Quantity on Han
     C                     Z-ADDWL0119    WUNFNN           Quantity on Han
     C                     Z-ADDWL0120    WUNFNN           Quantity on Han
     C                     Z-ADDWL0121    B0IDVA           Value of On Han
     C                     Z-ADD*ZERO     B0DOQT           Available Prima
      * Available Primary U/M
     C           B0DDQT    SUB  B0AJQT    B0DOQT           Available Prima
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DB1) B0AATM' defaulted for 'Job Time'.
      * Field '(DB1) B0AYNA' defaulted for 'User Id'.
      * Field '(DB1) B0A0NA' defaulted for 'Job Name'.
      * Field '(DB1) B0AXDT' defaulted for 'Job Date'.
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     B0AATM           Job Time
     C                     MOVEL##USR     B0AYNA           User Id
     C                     MOVEL##JOB     B0A0NA           Job Name
     C                     Z-ADD##JDT     B0AXDT           Job Date
      * Set PGM.*Record Data Changed flag
     C           QCAB01    IFNE YCRDCS
     C           YCRDC     ANDNE'N'
     C                     MOVE 'Y'       YCRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YCRDC     IFEQ 'Y'
     C                     UPDAT@B0REJT                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCAB0REL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SUEXIT    ENDSR
      /EJECT
     CSR         SVRVGN    BEGSR
      *================================================================
      * UPD Value/Qty          RT - IC Item Balance Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0162 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0163 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0164 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0165 112       Quantity on Han
     C                     Z-ADD*ZERO     WN0166 114       Unit Cost Per P
     C                     Z-ADD*ZERO     WN0167 114       Last Cost
     C                     Z-ADD*ZERO     WN0168 112       Value of On Han
     C                     MOVEL*BLANK    WN0169  1        Lot Tracking Fl
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSV     KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
      * Setup key
     C                     Z-ADDB0AIC3    B1AIC3           Company Number
     C                     Z-ADDB0HGCD    B1HGCD           Item Code
     C                     MOVELB0AJCD    B1AJCD           Warehouse Code
     C                     Z-ADDWEELDT    B1ELDT           Production Date
      * Establish starting position
     C           KRSSV     CHAIN@B1REJ0              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0330' W0RTN   7
      * USER: Processing if Data record not found
      * CASE: PAR.Quantity based on U/M1 S EQ WRK.ZERO
     C           WN0146    IFEQ WUW0NB                     *IF
      * Crt Item Bal. Detail   CR - IC Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0076           Company Number
     C                     Z-ADDB0HGCD    WL0077           Item Code
     C                     MOVELB0AJCD    WL0078    P      Warehouse Code
     C                     Z-ADDWEELDT    WL0079           Production Date
     C                     Z-ADD*ZERO     WL0080           Physical Count
     C                     Z-ADD*ZERO     WL0081           Physical Count
     C                     Z-ADD*ZERO     WL0082           Physical Count
     C                     Z-ADD*ZERO     WL0083           Physical Count
     C                     MOVEL*BLANK    WL0084           Physical Count
     C                     Z-ADD*ZERO     WL0085           Quantity on Han
     C                     Z-ADDWN0146    WL0086           Quantity on Han
     C                     Z-ADD*ZERO     WL0087           Quantity on Han
     C                     Z-ADD*ZERO     WL0088           Quantity on Han
     C                     Z-ADD*ZERO     WL0089           Quantity In Chi
     C                     Z-ADD*ZERO     WL0090           Weight In Chill
     C                     MOVEL'N'       WL0091    P      Update Exceptio
     C                     Z-ADD*ZERO     WL0092           Physical Start
     C                     Z-ADD*ZERO     WL0093           Physical Start
     C                     Z-ADD*ZERO     WL0094           Physical Start
     C                     Z-ADD*ZERO     WL0095           Physical Start
     C                     Z-ADD*ZERO     WL0096           Physical Start
     C                     Z-ADD*ZERO     WL0097           Unit Cost Per P
     C                     Z-ADD*ZERO     WL0098           Last Cost
     C                     Z-ADD*ZERO     WL0099           Value of On Han
     C                     Z-ADDWEK7DT    WL0100           Label Date
     C                     Z-ADDB0RINB    WL0101           Item Structure
     C                     Z-ADDB0RHNB    WL0102           Item Structure
     C                     Z-ADDB0RGNB    WL0103           Item Structure
     C                     MOVEL*BLANK    WL0104           EDI Status 1
     C                     MOVEL*BLANK    WL0105           EDI Status 2
     C                     MOVEL*BLANK    WL0106           EDI Status 3
     C                     MOVEL'A'       WL0107    P      Record Status
     C                     EXSR SHCRRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Crt Item Bal. Detail   CR - IC Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB0AIC3    WL0076           Company Number
     C                     Z-ADDB0HGCD    WL0077           Item Code
     C                     MOVELB0AJCD    WL0078    P      Warehouse Code
     C                     Z-ADDWEELDT    WL0079           Production Date
     C                     Z-ADD*ZERO     WL0080           Physical Count
     C                     Z-ADD*ZERO     WL0081           Physical Count
     C                     Z-ADD*ZERO     WL0082           Physical Count
     C                     Z-ADD*ZERO     WL0083           Physical Count
     C                     MOVEL*BLANK    WL0084           Physical Count
     C                     Z-ADDWEAHWG    WL0085           Quantity on Han
     C                     Z-ADDWN0146    WL0086           Quantity on Han
     C                     Z-ADD*ZERO     WL0087           Quantity on Han
     C                     Z-ADD*ZERO     WL0088           Quantity on Han
     C                     Z-ADD*ZERO     WL0089           Quantity In Chi
     C                     Z-ADD*ZERO     WL0090           Weight In Chill
     C                     MOVEL'N'       WL0091    P      Update Exceptio
     C                     Z-ADD*ZERO     WL0092           Physical Start
     C                     Z-ADD*ZERO     WL0093           Physical Start
     C                     Z-ADD*ZERO     WL0094           Physical Start
     C                     Z-ADD*ZERO     WL0095           Physical Start
     C                     Z-ADD*ZERO     WL0096           Physical Start
     C                     Z-ADD*ZERO     WL0097           Unit Cost Per P
     C                     Z-ADD*ZERO     WL0098           Last Cost
     C                     Z-ADDWEAYVA    WL0099           Value of On Han
     C                     Z-ADDWEK7DT    WL0100           Label Date
     C                     Z-ADDB0RINB    WL0101           Item Structure
     C                     Z-ADDB0RHNB    WL0102           Item Structure
     C                     Z-ADDB0RGNB    WL0103           Item Structure
     C                     MOVEL*BLANK    WL0104           EDI Status 1
     C                     MOVEL*BLANK    WL0105           EDI Status 2
     C                     MOVEL*BLANK    WL0106           EDI Status 3
     C                     MOVEL'A'       WL0107    P      Record Status
     C                     EXSR SHCRRC
     C                     END                             *FI
     C                     GOTO SVEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * Calculate new On Hand Value
      * CASE: PAR.Inventory Trans. Type is Adjustment Cycle Count
     C           WEBSST    IFEQ 'AC'                       *IF
     C           B1IDVA    ADD  WEAYVA    WN0168           Value of On Han
     C                     ELSE
      * CASE: PAR.Inventory Trans. Type is Quantity based Avg. Cost
     C           WEBSST    IFEQ 'R'                        *IF
     C           WEBSST    OREQ 'RP'
     C           WEBSST    OREQ 'S'
     C           WEBSST    OREQ 'TW'
     C           WEBSST    OREQ 'RW'
     C           WEBSST    OREQ 'RR'
     C           B1IDVA    ADD  WEAYVA    WN0168           Value of On Han
     C                     END                             *FI
     C                     END                             *FI
     C           WEAHWG    ADD  B1ACWG    WN0162           Quantity on Han
     C           B1ARQT    ADD  WN0146    WN0163           Quantity on Han
      * If quantity goes TO exactly 0, wgt and value to go 0
      * CASE: PAR.Quantity on Hand - U/M1 EQ WRK.ZERO
     C           WN0163    IFEQ WUW0NB                     *IF
      * UPD Create Weight Adj. XF - IC Transaction Detail  * 
     C                     CALL 'PDMYXFR'              90  UPD Create Weig
     C                     PARM *BLANK    W0RTN   7
     C                     PARM B1AIC3    WQ0068  30       Company Number
     C                     PARM B1HGCD    WQ0069  70       Item Code
     C                     PARM B1AJCD    WQ0070  3        Warehouse Code
     C                     PARM WEB4DT    WQ0071  70       Transaction Dat
     C                     PARM B1ELDT    WQ0072  70       Production Date
     C                     PARM WEHVCD    WQ0073  2        UOM Transaction
     C                     PARM WN0162    WQ0074 112       Transaction Wei
     C                     PARM WN0166    WQ0075 114       USR Transaction
     C                     PARM WECGCD    WQ0076  2        UOM Cost
     C                     PARM B1RINB    WQ0077  30       Item Structure
     C                     PARM B1RHNB    WQ0078  30       Item Structure
     C                     PARM B1RGNB    WQ0079  30       Item Structure
     C                     PARM WL0242    WQ0080  1        Shift Number
     C                     PARM B1K7DT    WQ0081  70       Label Date
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDMYXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     Z-ADD*ZERO     WN0162           Quantity on Han
     C                     Z-ADD*ZERO     WN0168           Value of On Han
     C                     END                             *FI
      * Rtv Lot Tracking Flag RT - Warehouse  * 
      * Move input parameters to subroutine local variables.
     C                     MOVELB1AJCD    WL0108    P      Warehouse Code
     C                     EXSR SIRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0109    WN0169    P      Lot Tracking Fl
      * CASE: Qty = 0 & production date <> 0 & Lot Trk=N
      *  - c1 AND c2 AND c3
      *   |- c1    : PAR.Quantity on Hand - U/M1 EQ WRK.ZERO
      *   |- c2    : DB1.Production Date NE WRK.ZERO
      *   |- c3    : PAR.Lot Tracking Flag is Not Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WN0163    IFEQ WUW0NB                     *IF
     C           B1ELDT    IFNE WUW0NB                     *IF
     C           WN0169    IFEQ *BLANK                     *IF
     C           WN0169    OREQ 'N'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Dlt Item Bal. Detail   DL - IC Item Balance Detail  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADDB1AIC3    WL0110           Company Number
     C                     Z-ADDB1HGCD    WL0111           Item Code
     C                     MOVELB1AJCD    WL0112    P      Warehouse Code
     C                     Z-ADDB1ELDT    WL0113           Production Date
     C                     EXSR SJDLRC
     C                     ELSE
      * CASE: *OTHERWISE
      * Chg Item Bal. Detail   CH - IC Item Balance Detail  * 
     C                     EXSR SWCHRC
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SVEXIT    ENDSR
      /EJECT
     CSR         SWCHRC    BEGSR
      *================================================================
      * Chg Item Bal. Detail   CH - IC Item Balance Detail  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0170  70       Label Date
     C                     MOVEL*BLANK    WN0171  1        EDI Status 1
     C                     MOVEL*BLANK    WN0172  1        EDI Status 2
     C                     MOVEL*BLANK    WN0173  1        EDI Status 3
     C                     MOVEL*BLANK    WN0174  1        Record Status
     C                     Z-ADD*ZERO     WN0175  60       Job Time
     C                     MOVEL*BLANK    WN0176 10        User Id
     C                     MOVEL*BLANK    WN0177 10        Job Name
     C                     Z-ADD*ZERO     WN0178  70       Job Date
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YDRDC   1
      *
      * Move key fields to @B1REJ1
      *
     C           KLCHSW    KLIST
     C                     KFLD           B1AIC3           Company Number
     C                     KFLD           B1HGCD           Item Code
     C                     KFLD           B1AJCD           Warehouse Code
     C                     KFLD           B1ELDT           Production Date
     C           KLCHSW    CHAIN@B1REJ1              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'CAB1REL1'MDACP
     C                     MOVEL'@B1REJ1' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL005.
     C                     MOVEL'LBL005'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SWEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SWEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE @1DBRC    YDRDCS
      * Move non-key fields to @B1REJ1
     C                     Z-ADDWN0162    B1ACWG           Quantity on Han
     C                     Z-ADDWN0163    B1ARQT           Quantity on Han
     C                     Z-ADDWN0168    B1IDVA           Value of On Han
      *
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * USER: Processing before Data update
      * Set Date/Time Stamp   IF
     C                     Z-ADD##JTM     B1AATM           Job Time
     C                     MOVEL##USR     B1AYNA           User Id
     C                     MOVEL##JOB     B1A0NA           Job Name
     C                     Z-ADD##JDT     B1AXDT           Job Date
     C                     MOVEL##PGM     B1A0NA           Job Name
      * Set PGM.*Record Data Changed flag
     C           @1DBRC    IFNE YDRDCS
     C           YDRDC     ANDNE'N'
     C                     MOVE 'Y'       YDRDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YDRDC     IFEQ 'Y'
     C                     UPDAT@B1REJ1                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKCAB1REL1               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SWEXIT    ENDSR
      /EJECT
     CSR         SXRVGN    BEGSR
      *================================================================
      * RTV Numeric Value      RT - System Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSX     KLIST
     C                     KFLD           DPDOCD           System Value Co
      * Setup key
     C                     MOVEL@CN,003   DPDOCD           System Value Co
      * Establish starting position
     C           KRSSX     CHAIN@DPRETD              90    *
      * Data record not found
     C   90                MOVEL'USR0759' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     Z-ADDDPM8NB    YL0016           System Value Nu
     C                     GOTO SXEXIT                     *QUIT
     C                     ENDIF
      *================================================================
     CSR         SXEXIT    ENDSR
      /EJECT
     CSR         SYRVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSY01           Application Cod
      * Define keylist
     C           KRSSY     KLIST
     C                     KFLD           WQSY01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSY01           Application Cod
     C                     MOVEL'I/C'     WQSY01           Application Cod
      * Establish starting position
     C           KRSSY     SETLL@DNRESF                    *
     C           KRSSY     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SZRVGN
     C                     END                             *FI
     C           KRSSY     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SYEXIT    ENDSR
      /EJECT
     CSR         SZRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSZ01           Application Cod
      * Define keylist
     C           KRSSZ     KLIST
     C                     KFLD           WQSZ01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSZ01           Application Cod
      * Establish starting position
     C           KRSSZ     SETLL@DNRESF                    *
     C           KRSSZ     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SZEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSZ     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SZEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Reset Production/Label Date if Lot Tracking warehouse.
      *================================================================
     C                     Z-ADD#RGXDT    WN0017           Production Date
     C                     Z-ADD#1K7DT    WN0018           Label Date  USR
      * Determine the Lot Tracking Flag for From Warehouse.
      * If the From Warehouse Lot Tracking Flag is "N", then perform the
      * following "Clc" to determine if the To Warehouse Lot Tracking
      * Flag is "Y" and replace the Production Date with Job Date if it
      * is "Y".
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         VACKRL    BEGSR
      *================================================================
      * Check reference to Calendar
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * If all low order keys not entered, exit
     C           #1ELDT    IFEQ *ZERO                      Post to G/L Dat
     C                     GOTO VAEXIT
     C                     END
      *
     C           KLVAAF    KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADD#1AIC3    AFAIC3
     C                     Z-ADD#1ELDT    AFBCDT
     C           KLVAAF    CHAIN@AFREBE              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VAEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VAEXIT
     C                     END
      * Send message 'Calendar not found'
     C                     MOVEL'USR0018' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0018' W0RTN
      *================================================================
     CSR         VAEXIT    ENDSR
      /EJECT
     CSR         VBCKRL    BEGSR
      *================================================================
      * Check reference to Calendar
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * If all low order keys not entered, exit
     C           #1DHDT    IFEQ *ZERO                      Post to G/L Dat
     C                     GOTO VBEXIT
     C                     END
      *
     C           KLVBAF    KLIST
     C                     KFLD           AFAIC3           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Setup key
     C                     Z-ADD#1AIC3    AFAIC3
     C                     Z-ADD#1DHDT    AFBCDT
     C           KLVBAF    CHAIN@AFREBE              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VBEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VBEXIT
     C                     END
      * Send message 'Calendar not found'
     C                     MOVEL'USR0018' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR0018' W0RTN
      *================================================================
     CSR         VBEXIT    ENDSR
      /EJECT
     CSR         VCCKRL    BEGSR
      *================================================================
      * Check reference to Item Structure Class
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1RINB'
     C           ##RR      ANDEQYPMRRN
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(RCD) #1RINB' defaulted for 'Item Structure Class Code'.
     C                     CALL 'PDELSRR'              90  SEL Item Class
     C                     PARM *BLANK    W0RTN   7
     C           #1RINB    PARM #1RINB    WQ0001  30       Item Structure
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDELSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     98    *
     C                     END
      *
     C           #1RINB    IFNE *ZERO                      Item Structure
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VCEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1RINB    IFEQ *ZERO                      Item Structure
     C                     GOTO VCEXIT
     C                     END
      *
     C           KLVCFA    KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD#1RINB    FARINB
     C           KLVCFA    CHAIN@FAREBE              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VCEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VCEXIT
     C                     END
      * Send message 'Item Structure Class   NF'
     C                     MOVEL'USR1170' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1170' W0RTN
      *================================================================
     CSR         VCEXIT    ENDSR
      /EJECT
     CSR         VDCKRL    BEGSR
      *================================================================
      * Check reference to Item Structure Group
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1RHNB'
     C           ##RR      ANDEQYPMRRN
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(RCD) #1RHNB' defaulted for 'Item Structure Group Code'.
     C                     CALL 'PDEMSRR'              90  SEL Item Group
     C                     PARM *BLANK    W0RTN   7
     C           #1RHNB    PARM #1RHNB    WQ0002  30       Item Structure
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDEMSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     98    *
     C                     END
      *
     C           #1RHNB    IFNE *ZERO                      Item Structure
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VDEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1RHNB    IFEQ *ZERO                      Item Structure
     C                     GOTO VDEXIT
     C                     END
      *
     C           KLVDE9    KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADD#1RHNB    E9RHNB
     C           KLVDE9    CHAIN@E9REA8              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VDEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VDEXIT
     C                     END
      * Send message 'Item Structure Group   NF'
     C                     MOVEL'USR1168' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1168' W0RTN
      *================================================================
     CSR         VDEXIT    ENDSR
      /EJECT
     CSR         VECKRL    BEGSR
      *================================================================
      * Check reference to Item Structure Type
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Name search required?
     C           YPMTFD    IFEQ '#1RGNB'
     C           ##RR      ANDEQYPMRRN
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(RCD) #1RGNB' defaulted for 'Item Structure Type Code'.
     C                     CALL 'PDENSRR'              90  SEL Item Type A
     C                     PARM *BLANK    W0RTN   7
     C           #1RGNB    PARM #1RGNB    WQ0003  30       Item Structure
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDENSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     98    *
     C                     END
      *
     C           #1RGNB    IFNE *ZERO                      Item Structure
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VEEXIT
     C                     END
     C                     END
      *................................................................
      * If all low order keys not entered, exit
     C           #1RGNB    IFEQ *ZERO                      Item Structure
     C                     GOTO VEEXIT
     C                     END
      *
     C           KLVEE8    KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADD#1RGNB    E8RGNB
     C           KLVEE8    CHAIN@E8REBB              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VEEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VEEXIT
     C                     END
      * Send message 'Item Structure Type    NF'
     C                     MOVEL'USR1166' ZAMSID
     C                     EXSR ZASNMS
     C                     MOVEL'USR1166' W0RTN
      *================================================================
     CSR         VEEXIT    ENDSR
      /EJECT
     CSR         VFCKRL    BEGSR
      *================================================================
      * Check restriction within
      *================================================================
      * Name search required?
     C                     MOVELV2AIC3    WK1X01  1
     C                     MOVELV2HGCD    WK1X02  1
     C                     MOVEL#2AJCD    WK1X03  1
     C           WK1X01    IFEQ '?'                        Company Number
     C           YPMTFD    OREQ '#2AIC3'
     C           WK1X02    OREQ '?'                        Item Code
     C           YPMTFD    OREQ '#2HGCD'
     C           WK1X03    OREQ '?'                        Warehouse Code
     C           YPMTFD    OREQ '#2AJCD'
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(CTL) #2AIC3' defaulted for 'Company Number'.
      * Field '(CTL) #2AJCD' defaulted for 'Warehouse Code'.
      * Field '(CTL) #2HGCD' defaulted for 'Item Code'.
     C                     CLEARPBRC
     C                     Z-ADD#2AIC3    PBAIC3           Company Number
     C                     MOVEL#2AJCD    PBAJCD    P      Warehouse Code
     C                     Z-ADD#2HGCD    PBHGCD           Item Code
      *
     C                     CALL 'PNMPSRR'              90  Sel Item
     C                     PARM *BLANK    W0RTN   7
     C                     PARM           PBRC             KEY: Item Balan
      *
     C                     Z-ADDPBHGCD    #2HGCD           Item Code
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PNMPSRR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C           W0RTN     ANDNE'Y2U0016'
     C                     SETON                     99    *
     C                     END
      *
     C           #2AIC3    IFNE *ZERO                      Company Number
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X01    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2HGCD    IFNE *ZERO                      Item Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X02    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           #2AJCD    IFNE *BLANK                     Warehouse Code
     C           YPMTFD    ANDNE*BLANK
     C           W0RTN     ANDEQ*BLANK
     C           WK1X03    ANDNE'?'
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
      * No value selected, exit
     C           W0RTN     IFNE *BLANK
     C           YPMTFD    ANDEQ*BLANK
     C                     GOTO VF999
     C                     END
     C                     END
      *................................................................
      *
     C           KLVFWF    KLIST
     C                     KFLD           WFAIC3           Company Number
     C                     KFLD           WFHGCD           Item Code
     C                     KFLD           WFAJCD           Warehouse Code
      * Setup key
     C                     Z-ADD#2AIC3    WFAIC3
     C                     Z-ADD#2HGCD    WFHGCD
     C                     MOVEL#2AJCD    WFAJCD
     C           KLVFWF    CHAIN@B0REJX              9091  *
     C           *IN90     IFEQ '0'
      * Record found - move back any virtuals
     C                     GOTO VFEXIT
     C                     END
     C           YPMTFD    IFNE *BLANK
     C                     SETOF                     9091
     C                     GOTO VFEXIT
     C                     END
     C           VF999     TAG
      * Restrictor relation not satisfied
      * Send message 'Item Balance           NF'
     C                     MOVEL'USR0328' ZAMSID
     C                     MOVEL'*PRV '   ZAPGRL           Rel queue
     C                     EXSR ZASNMS
     C                     MOVEL'USR0328' P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         VFEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
     C           *IN25     IFEQ '0'
      * Bypass when help done
     C                     SETOF                     94    *
     C           W0OVR0    IFEQ '1'
     C           W0OVR0    OREQ '0'
     C           *IN99     ANDEQ'0'
      * If override or no error
     C                     SETON                     94    *
     C           W0RR0     IFNE *ZERO
     C           W0RR0     IFGT ##RRMX
     C                     Z-ADD##RRMX    ##SFRC
     C                     ELSE
     C                     Z-ADDW0RR0     ##SFRC
     C                     END
     C                     END
     C                     Z-ADDW0ROW0    ZZCSRW
     C                     Z-ADDW0COL0    ZZCSCL
     C                     END
     C                     END
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
     C                     SETOF                     94    *
     C                     Z-ADD0         W0RR0   40
     C                     Z-ADD0         W0ROW0  30
     C                     Z-ADD0         W0COL0  30
     C                     MOVE '2'       W0OVR0  1
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD13        ZHSTRW  40
     C                     Z-ADD21        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
      *
     C           YPMRRN    IFGT *ZERO
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
      * Set screen conditioning indicators
     C                     EXSR GADSA1
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
     C                     END
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              9292  *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM 'OMHEEFRH'W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      *
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1F1ST           Item Transactio
     C                     Z-ADD*ZERO     P1A5QT           Transaction Qua
     C                     Z-ADD*ZERO     P1AHWG           Transaction Wei
     C                     Z-ADD*ZERO     P1AKCS           USR Transaction
     C                     Z-ADD*ZERO     P1AYVA           Extended Amount
      *
      * Initialise indicators for re-entry
     C                     MOVE '0'       *IN
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field First Time Flag
     C                     MOVEL*BLANK    WUTAST  1
      * Define work field BLANK
     C                     MOVEL*BLANK    WUGSTX256
      * Define work field UOM Transaction
     C                     MOVEL*BLANK    WUHVCD  2
      * Define work field USR Weight based on U/M1
     C                     Z-ADD*ZERO     WUBHWG 112
      * Define work field USR Weight based on U/M2
     C                     Z-ADD*ZERO     WUBIWG 112
      * Define work field USR Weight based on U/M3
     C                     Z-ADD*ZERO     WUBJWG 112
      * Define work field USR Weight
     C                     Z-ADD*ZERO     WUASWG 112
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field ZERO
     C                     Z-ADD*ZERO     WUW0NB 305
      * Define work field Transaction Weight
     C                     Z-ADD*ZERO     WUAHWG 112
      * Define work field Transaction Quantity
     C                     Z-ADD*ZERO     WUA5QT 112
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIC3           Company Number
     C                     Z-ADD*ZERO     WAHGCD           Item Code
     C                     Z-ADD*ZERO     WAB4DT           Transaction Dat
     C                     Z-ADD*ZERO     WAC4NY           ITD Sequence Nu
     C                     Z-ADD*ZERO     WADXNB           Sequence Number
     C                     Z-ADD*ZERO     WAELDT           Production Date
     C                     Z-ADD*ZERO     WAA5QT           Transaction Qua
     C                     Z-ADD*ZERO     WAAHWG           Transaction Wei
     C                     Z-ADD*ZERO     WAAKCS           USR Transaction
     C                     Z-ADD*ZERO     WAAYVA           Extended Amount
     C                     Z-ADD*ZERO     WACKNB           GL Document Num
     C                     Z-ADD*ZERO     WATRBN           Transfer Batch
     C                     Z-ADD*ZERO     WATRBS           Transfer Batch
     C                     Z-ADD*ZERO     WAC4NB           Order Number
     C                     Z-ADD*ZERO     WARINB           Item Structure
     C                     Z-ADD*ZERO     WARHNB           Item Structure
     C                     Z-ADD*ZERO     WARGNB           Item Structure
     C                     Z-ADD*ZERO     WAAWTM           Production Time
     C                     Z-ADD*ZERO     WAK7DT           Label Date
     C                     Z-ADD*ZERO     WAAATM           Job Time
     C                     Z-ADD*ZERO     WAAXDT           Job Date
      * Clear all neither parameters
      * Crt Item Bal. Detail   CR - Item Balance Detail  * 
     C                     Z-ADD*ZERO     B1AATM           Job Time
     C                     Z-ADD*ZERO     B1AXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBDBNB           Warehouse Chill
     C                     Z-ADD*ZERO     WBBWC3           Shipping Compan
     C                     Z-ADD*ZERO     WBBTC3           Accounting Comp
     C                     Z-ADD*ZERO     WBBUC3           WHS Sched Prod
     C                     Z-ADD*ZERO     WBBVC3           WHS Inventory C
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Define work field Numeric Field Not Needed
     C                     Z-ADD*ZERO     WUNFNN  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCAIC3           Company Number
     C                     Z-ADD*ZERO     WCHGCD           Item Code
     C                     Z-ADD*ZERO     WCELDT           Production Date
     C                     Z-ADD*ZERO     WCABWG           Physical Count
     C                     Z-ADD*ZERO     WCAGQT           Physical Count
     C                     Z-ADD*ZERO     WCAHQT           Physical Count
     C                     Z-ADD*ZERO     WCAIQT           Physical Count
     C                     Z-ADD*ZERO     WCACWG           Quantity on Han
     C                     Z-ADD*ZERO     WCARQT           Quantity on Han
     C                     Z-ADD*ZERO     WCASQT           Quantity on Han
     C                     Z-ADD*ZERO     WCATQT           Quantity on Han
     C                     Z-ADD*ZERO     WCHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WCHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WCBMWG           Physical Start
     C                     Z-ADD*ZERO     WCDSQT           Physical Start
     C                     Z-ADD*ZERO     WCDTQT           Physical Start
     C                     Z-ADD*ZERO     WCDUQT           Physical Start
     C                     Z-ADD*ZERO     WCDHDT           Physical Start
     C                     Z-ADD*ZERO     WCAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WCAECS           Last Cost
     C                     Z-ADD*ZERO     WCIDVA           Value of On Han
     C                     Z-ADD*ZERO     WCK7DT           Label Date
     C                     Z-ADD*ZERO     WCRINB           Item Structure
     C                     Z-ADD*ZERO     WCRHNB           Item Structure
     C                     Z-ADD*ZERO     WCRGNB           Item Structure
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Define work field Location Code
     C                     MOVEL*BLANK    WUYMCD  4
      * Define work field Location Level
     C                     Z-ADD*ZERO     WUYNCD  20
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WDAIC3           Company Number
     C                     Z-ADD*ZERO     WDHGCD           Item Code
     C                     Z-ADD*ZERO     WDAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     WDAECS           Last Cost
     C                     Z-ADD*ZERO     WDBACS           Cost per Primar
     C                     Z-ADD*ZERO     WDBBCS           Cost per Pricin
     C                     Z-ADD*ZERO     WDCBPR           Revaluation Cos
     C                     Z-ADD*ZERO     WDGUDT           Revaluation Eff
     C                     Z-ADD*ZERO     WDCTPR           Last Revaluatio
     C                     Z-ADD*ZERO     WDG4DT           Last Revaluatio
     C                     Z-ADD*ZERO     WDBOWG           On Hand Weight
     C                     Z-ADD*ZERO     WDDDQT           On Hand UOM1 Su
     C                     Z-ADD*ZERO     WDDEQT           On Hand UOM2 Su
     C                     Z-ADD*ZERO     WDDFQT           On Hand UOM3 Su
     C                     Z-ADD*ZERO     WDHDQT           Quantity In Chi
     C                     Z-ADD*ZERO     WDHEQT           Weight In Chill
     C                     Z-ADD*ZERO     WDAJQT           Quantity Schedu
     C                     Z-ADD*ZERO     WDAQQT           Quantity on Sal
     C                     Z-ADD*ZERO     WDAUQT           Quantity on Pur
     C                     Z-ADD*ZERO     WDEMQT           Quantity on Tra
     C                     Z-ADD*ZERO     WDDOQT           Quantity Avail
     C                     Z-ADD*ZERO     WDAKDT           Date of Last Or
     C                     Z-ADD*ZERO     WDANDT           Date of Last Sh
     C                     Z-ADD*ZERO     WDIDVA           Value of On Han
     C                     Z-ADD*ZERO     WDBZPC           Safety Allowanc
     C                     Z-ADD*ZERO     WDDGQT           Safety Allowanc
     C                     Z-ADD*ZERO     WDDIDT           Stock Out Date
     C                     Z-ADD*ZERO     WDBFDY           Lead Time Last
     C                     Z-ADD*ZERO     WDDJDT           Lead Time Date
     C                     Z-ADD*ZERO     WDBGDY           Lead Time Next
     C                     Z-ADD*ZERO     WDDKDT           Lead Time Date
     C                     Z-ADD*ZERO     WDDJQT           Usage Qty per C
     C                     Z-ADD*ZERO     WDBNWG           Usage Weight pe
     C                     Z-ADD*ZERO     WDDLDT           Inventory Manag
     C                     Z-ADD*ZERO     WDDPQT           Minimum Quantit
     C                     Z-ADD*ZERO     WDDQQT           Maximum Quantit
     C                     Z-ADD*ZERO     WDDMDT           Last Physical C
     C                     Z-ADD*ZERO     WDAKC8           Vendor Item_Whs
     C                     Z-ADD*ZERO     WDRINB           Item Structure
     C                     Z-ADD*ZERO     WDRHNB           Item Structure
     C                     Z-ADD*ZERO     WDRGNB           Item Structure
     C                     Z-ADD*ZERO     WDAATM           Job Time
     C                     Z-ADD*ZERO     WDAXDT           Job Date
      * Define work field EDI Status 1
     C                     MOVEL*BLANK    WUUVST  1
      * Define work field EDI Status 2
     C                     MOVEL*BLANK    WUUWST  1
      * Define work field EDI Status 3
     C                     MOVEL*BLANK    WUUXST  1
      * Clear all neither parameters
      * Crt Item Balance       CR - Item Balance  * 
     C                     Z-ADD*ZERO     B0AATM           Job Time
     C                     Z-ADD*ZERO     B0AXDT           Job Date
      * Define work field Description Line Two
     C                     MOVEL*BLANK    WUAWNA 30
      * Define work field UOM Pricing
     C                     MOVEL*BLANK    WUAICD  2
      * Define work field Fresh Chilling Time
     C                     Z-ADD*ZERO     WUCHTM  52
      * Define work field Value of On Hand Inventor
     C                     Z-ADD*ZERO     WUIDVA 112
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize *SET CURSOR data
     C                     MOVE 'Y'       YSETCS  1
     C                     EXSR Y9CLR
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL@CN,1     @CN,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SDRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     Z-ADD*ZERO     WL0002  70
     C                     Z-ADD*ZERO     WL0003  30
     C                     Z-ADD*ZERO     WL0004  30
     C                     Z-ADD*ZERO     WL0005  30
      * Define local variables for subroutine SERVGN.
     C                     Z-ADD*ZERO     WL0006  30
     C                     Z-ADD*ZERO     WL0007  70
     C                     MOVEL*BLANK    WL0008  3
     C                     MOVEL*BLANK    WL0009  1
     C                     MOVEL*BLANK    WL0010  2
     C                     Z-ADD*ZERO     WL0011  70
     C                     Z-ADD*ZERO     WL0012  50
      * Define local variables for subroutine SFCRRC.
     C                     Z-ADD*ZERO     WL0013  30
     C                     Z-ADD*ZERO     WL0014  70
     C                     MOVEL*BLANK    WL0015  3
     C                     MOVEL*BLANK    WL0016  1
     C                     MOVEL*BLANK    WL0017  2
     C                     Z-ADD*ZERO     WL0018  70
     C                     Z-ADD*ZERO     WL0019  50
     C                     Z-ADD*ZERO     WL0020  30
     C                     Z-ADD*ZERO     WL0021  70
     C                     MOVEL*BLANK    WL0022  2
     C                     MOVEL*BLANK    WL0023  2
     C                     MOVEL*BLANK    WL0024 30
     C                     Z-ADD*ZERO     WL0025 112
     C                     Z-ADD*ZERO     WL0026 112
     C                     Z-ADD*ZERO     WL0027 114
     C                     MOVEL*BLANK    WL0028  2
     C                     Z-ADD*ZERO     WL0029 112
     C                     MOVEL*BLANK    WL0030  6
     C                     Z-ADD*ZERO     WL0031  80
     C                     MOVEL*BLANK    WL0032  1
     C                     MOVEL*BLANK    WL0033  3
     C                     MOVEL*BLANK    WL0034 15
     C                     MOVEL*BLANK    WL0035 10
     C                     Z-ADD*ZERO     WL0036  70
     C                     Z-ADD*ZERO     WL0037  30
     C                     Z-ADD*ZERO     WL0038  70
     C                     Z-ADD*ZERO     WL0039  30
     C                     Z-ADD*ZERO     WL0040  30
     C                     Z-ADD*ZERO     WL0041  30
     C                     MOVEL*BLANK    WL0042 10
     C                     Z-ADD*ZERO     WL0043  60
     C                     MOVEL*BLANK    WL0044  1
     C                     Z-ADD*ZERO     WL0045  70
     C                     MOVEL*BLANK    WL0046  1
     C                     MOVEL*BLANK    WL0047  1
     C                     MOVEL*BLANK    WL0048  1
     C                     MOVEL*BLANK    WL0049  1
      * Define local variables for subroutine SGCHRC.
     C                     Z-ADD*ZERO     WL0050  30
     C                     Z-ADD*ZERO     WL0051  70
     C                     MOVEL*BLANK    WL0052  3
     C                     Z-ADD*ZERO     WL0053  70
     C                     Z-ADD*ZERO     WL0054  30
     C                     Z-ADD*ZERO     WL0055  30
     C                     Z-ADD*ZERO     WL0056  30
     C                     MOVEL*BLANK    WL0057  2
     C                     Z-ADD*ZERO     WL0058  94
     C                     MOVEL*BLANK    WL0059  1
     C                     MOVEL*BLANK    WL0060  2
     C                     Z-ADD*ZERO     WL0061  94
     C                     MOVEL*BLANK    WL0062  1
     C                     MOVEL*BLANK    WL0063  2
     C                     MOVEL*BLANK    WL0064  1
     C                     MOVEL*BLANK    WL0065  1
     C                     MOVEL*BLANK    WL0066  1
     C                     MOVEL*BLANK    WL0067  2
     C                     Z-ADD*ZERO     WL0068  70
     C                     MOVEL*BLANK    WL0069  2
     C                     Z-ADD*ZERO     WL0070 112
     C                     Z-ADD*ZERO     WL0071 112
     C                     Z-ADD*ZERO     WL0072 114
     C                     MOVEL*BLANK    WL0073  2
     C                     Z-ADD*ZERO     WL0074 112
     C                     Z-ADD*ZERO     WL0075  70
      * Define local variables for subroutine SHCRRC.
     C                     Z-ADD*ZERO     WL0076  30
     C                     Z-ADD*ZERO     WL0077  70
     C                     MOVEL*BLANK    WL0078  3
     C                     Z-ADD*ZERO     WL0079  70
     C                     Z-ADD*ZERO     WL0080 112
     C                     Z-ADD*ZERO     WL0081 112
     C                     Z-ADD*ZERO     WL0082 112
     C                     Z-ADD*ZERO     WL0083 112
     C                     MOVEL*BLANK    WL0084  1
     C                     Z-ADD*ZERO     WL0085 112
     C                     Z-ADD*ZERO     WL0086 112
     C                     Z-ADD*ZERO     WL0087 112
     C                     Z-ADD*ZERO     WL0088 112
     C                     Z-ADD*ZERO     WL0089 112
     C                     Z-ADD*ZERO     WL0090 112
     C                     MOVEL*BLANK    WL0091  1
     C                     Z-ADD*ZERO     WL0092 112
     C                     Z-ADD*ZERO     WL0093 112
     C                     Z-ADD*ZERO     WL0094 112
     C                     Z-ADD*ZERO     WL0095 112
     C                     Z-ADD*ZERO     WL0096  70
     C                     Z-ADD*ZERO     WL0097 114
     C                     Z-ADD*ZERO     WL0098 114
     C                     Z-ADD*ZERO     WL0099 112
     C                     Z-ADD*ZERO     WL0100  70
     C                     Z-ADD*ZERO     WL0101  30
     C                     Z-ADD*ZERO     WL0102  30
     C                     Z-ADD*ZERO     WL0103  30
     C                     MOVEL*BLANK    WL0104  1
     C                     MOVEL*BLANK    WL0105  1
     C                     MOVEL*BLANK    WL0106  1
     C                     MOVEL*BLANK    WL0107  1
      * Define local variables for subroutine SIRVGN.
     C                     MOVEL*BLANK    WL0108  3
     C                     MOVEL*BLANK    WL0109  1
      * Define local variables for subroutine SJDLRC.
     C                     Z-ADD*ZERO     WL0110  30
     C                     Z-ADD*ZERO     WL0111  70
     C                     MOVEL*BLANK    WL0112  3
     C                     Z-ADD*ZERO     WL0113  70
      * Define local variables for subroutine SKRVGN.
     C                     Z-ADD*ZERO     WL0114  30
     C                     Z-ADD*ZERO     WL0115  70
     C                     MOVEL*BLANK    WL0116  3
     C                     Z-ADD*ZERO     WL0117 112
     C                     Z-ADD*ZERO     WL0118 112
     C                     Z-ADD*ZERO     WL0119 112
     C                     Z-ADD*ZERO     WL0120 112
     C                     Z-ADD*ZERO     WL0121 112
      * Define local variables for subroutine SLCHRC.
     C                     Z-ADD*ZERO     WL0122  30
     C                     Z-ADD*ZERO     WL0123  70
     C                     MOVEL*BLANK    WL0124  3
     C                     Z-ADD*ZERO     WL0125 112
     C                     Z-ADD*ZERO     WL0126 112
     C                     Z-ADD*ZERO     WL0127 112
      * Define local variables for subroutine SMRVGN.
     C                     MOVEL*BLANK    WL0128  3
     C                     MOVEL*BLANK    WL0129 30
     C                     MOVEL*BLANK    WL0130 30
     C                     MOVEL*BLANK    WL0131 30
     C                     MOVEL*BLANK    WL0132 30
     C                     MOVEL*BLANK    WL0133 20
     C                     MOVEL*BLANK    WL0134 11
     C                     MOVEL*BLANK    WL0135  3
     C                     MOVEL*BLANK    WL0136  2
     C                     MOVEL*BLANK    WL0137  1
     C                     MOVEL*BLANK    WL0138 10
     C                     MOVEL*BLANK    WL0139  2
     C                     MOVEL*BLANK    WL0140  1
     C                     MOVEL*BLANK    WL0141  1
     C                     MOVEL*BLANK    WL0142  1
     C                     Z-ADD*ZERO     WL0143  52
     C                     MOVEL*BLANK    WL0144  1
     C                     MOVEL*BLANK    WL0145  1
     C                     MOVEL*BLANK    WL0146  1
     C                     MOVEL*BLANK    WL0147  1
     C                     Z-ADD*ZERO     WL0148  30
     C                     Z-ADD*ZERO     WL0149  30
     C                     Z-ADD*ZERO     WL0150  30
     C                     Z-ADD*ZERO     WL0151  30
     C                     MOVEL*BLANK    WL0152  3
     C                     MOVEL*BLANK    WL0153  1
     C                     MOVEL*BLANK    WL0154  1
     C                     MOVEL*BLANK    WL0155  1
     C                     MOVEL*BLANK    WL0156  1
     C                     MOVEL*BLANK    WL0157  2
     C                     MOVEL*BLANK    WL0158  2
     C                     MOVEL*BLANK    WL0159  3
     C                     MOVEL*BLANK    WL0160  3
     C                     MOVEL*BLANK    WL0161  3
     C                     MOVEL*BLANK    WL0162  1
     C                     MOVEL*BLANK    WL0163  1
     C                     MOVEL*BLANK    WL0164  1
     C                     MOVEL*BLANK    WL0165  1
     C                     Z-ADD*ZERO     WL0166  60
     C                     MOVEL*BLANK    WL0167 10
     C                     MOVEL*BLANK    WL0168 10
     C                     Z-ADD*ZERO     WL0169  70
      * Define local variables for subroutine SNRVGN.
     C                     MOVEL*BLANK    WL0170  3
     C                     MOVEL*BLANK    WL0171  4
     C                     MOVEL*BLANK    WL0172  2
     C                     Z-ADD*ZERO     WL0173  20
     C                     Z-ADD*ZERO     WL0174  52
      * Define local variables for subroutine SORVGN.
     C                     MOVEL*BLANK    WL0175  3
     C                     Z-ADD*ZERO     WL0176  30
      * Define local variables for subroutine SPRVGN.
     C                     Z-ADD*ZERO     WL0177  30
     C                     Z-ADD*ZERO     WL0178  70
     C                     MOVEL*BLANK    WL0179  3
      * Define local variables for subroutine SQCRRC.
     C                     Z-ADD*ZERO     WL0180  30
     C                     Z-ADD*ZERO     WL0181  70
     C                     MOVEL*BLANK    WL0182  3
     C                     Z-ADD*ZERO     WL0183 114
     C                     Z-ADD*ZERO     WL0184 114
     C                     Z-ADD*ZERO     WL0185 114
     C                     Z-ADD*ZERO     WL0186 114
     C                     Z-ADD*ZERO     WL0187 114
     C                     Z-ADD*ZERO     WL0188  70
     C                     MOVEL*BLANK    WL0189  1
     C                     Z-ADD*ZERO     WL0190 114
     C                     Z-ADD*ZERO     WL0191  70
     C                     Z-ADD*ZERO     WL0192 112
     C                     Z-ADD*ZERO     WL0193 112
     C                     Z-ADD*ZERO     WL0194 112
     C                     Z-ADD*ZERO     WL0195 112
     C                     Z-ADD*ZERO     WL0196 112
     C                     Z-ADD*ZERO     WL0197 112
     C                     Z-ADD*ZERO     WL0198 112
     C                     Z-ADD*ZERO     WL0199 112
     C                     Z-ADD*ZERO     WL0200 112
     C                     Z-ADD*ZERO     WL0201 112
     C                     Z-ADD*ZERO     WL0202 112
     C                     MOVEL*BLANK    WL0203  3
     C                     Z-ADD*ZERO     WL0204  70
     C                     Z-ADD*ZERO     WL0205  70
     C                     Z-ADD*ZERO     WL0206 112
     C                     MOVEL*BLANK    WL0207  1
     C                     Z-ADD*ZERO     WL0208  52
     C                     Z-ADD*ZERO     WL0209 112
     C                     Z-ADD*ZERO     WL0210  70
     C                     MOVEL*BLANK    WL0211  3
     C                     Z-ADD*ZERO     WL0212  30
     C                     Z-ADD*ZERO     WL0213  70
     C                     Z-ADD*ZERO     WL0214  30
     C                     Z-ADD*ZERO     WL0215  70
     C                     MOVEL*BLANK    WL0216  1
     C                     Z-ADD*ZERO     WL0217 112
     C                     Z-ADD*ZERO     WL0218 112
     C                     Z-ADD*ZERO     WL0219  70
     C                     Z-ADD*ZERO     WL0220 112
     C                     Z-ADD*ZERO     WL0221 112
     C                     Z-ADD*ZERO     WL0222  70
     C                     MOVEL*BLANK    WL0223  1
     C                     MOVEL*BLANK    WL0224  1
     C                     MOVEL*BLANK    WL0225  1
     C                     Z-ADD*ZERO     WL0226  80
     C                     Z-ADD*ZERO     WL0227  30
     C                     Z-ADD*ZERO     WL0228  30
     C                     Z-ADD*ZERO     WL0229  30
     C                     MOVEL*BLANK    WL0230  1
     C                     MOVEL*BLANK    WL0231  1
     C                     MOVEL*BLANK    WL0232  1
     C                     MOVEL*BLANK    WL0233  1
      * Define local variables for subroutine SRRVGN.
     C                     Z-ADD*ZERO     WL0234  30
     C                     Z-ADD*ZERO     WL0235  70
     C                     MOVEL*BLANK    WL0236  3
     C                     MOVEL*BLANK    WL0237  1
     C                     MOVEL*BLANK    WL0238  2
     C                     Z-ADD*ZERO     WL0239  70
     C                     Z-ADD*ZERO     WL0240  50
     C                     Z-ADD*ZERO     WL0241  30
     C                     MOVEL*BLANK    WL0242  1
     C                     Z-ADD*ZERO     WL0243  70
      * Define local work field Inventory Updated USR
     C                     MOVEL*BLANK    YL0001  1
      * Define null work field API was Called? U
     C                     MOVEL*BLANK    YN0001  1
      * Define local work field Module Release Status
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Transaction Quantity
     C                     Z-ADD*ZERO     YL0003 112
      * Define local work field Transaction Weight
     C                     Z-ADD*ZERO     YL0004 112
      * Define null work field Warehouse Description
     C                     MOVEL*BLANK    YN0002 30
      * Define null work field Address Line 1
     C                     MOVEL*BLANK    YN0003 30
      * Define null work field Address Line 2
     C                     MOVEL*BLANK    YN0004 30
      * Define null work field Address Line 3
     C                     MOVEL*BLANK    YN0005 30
      * Define null work field City
     C                     MOVEL*BLANK    YN0006 20
      * Define null work field Zip Postal Code
     C                     MOVEL*BLANK    YN0007 11
      * Define null work field Production Warehouse Code
     C                     MOVEL*BLANK    YN0008  3
      * Define null work field State Code
     C                     MOVEL*BLANK    YN0009  2
      * Define local work field Lot Tracking Flag
     C                     MOVEL*BLANK    YL0005  1
      * Define null work field Default Printer
     C                     MOVEL*BLANK    YN0010 10
      * Define null work field Warehouse Type
     C                     MOVEL*BLANK    YN0011  2
      * Define null work field Trans Contol AS400_Plant
     C                     MOVEL*BLANK    YN0012  1
      * Define local work field Warehouse Location
     C                     MOVEL*BLANK    YL0006  1
      * Define null work field Warehouse Std Chill Time
     C                     MOVEL*BLANK    YN0013  1
      * Define null work field Warehouse Chill Time
     C                     Z-ADD*ZERO     YN0014  52
      * Define null work field Include in Auto Pre Pick
     C                     MOVEL*BLANK    YN0015  1
      * Define null work field Default Manifest Copies
     C                     MOVEL*BLANK    YN0016  1
      * Define null work field Default Load Sequence
     C                     MOVEL*BLANK    YN0017  1
      * Define null work field WHS Slotting Limit Type
     C                     MOVEL*BLANK    YN0018  1
      * Define null work field Shipping Company
     C                     Z-ADD*ZERO     YN0019  30
      * Define null work field Accounting Company
     C                     Z-ADD*ZERO     YN0020  30
      * Define null work field WHS Sched Prod Max Days
     C                     Z-ADD*ZERO     YN0021  30
      * Define null work field WHS Inventory Chill Time
     C                     Z-ADD*ZERO     YN0022  30
      * Define null work field Parent Warehouse
     C                     MOVEL*BLANK    YN0023  3
      * Define null work field Default Shipping Whs
     C                     MOVEL*BLANK    YN0024  1
      * Define local work field WHS Live with Carlisle
     C                     MOVEL*BLANK    YL0007  1
      * Define null work field WHS PFS Interface
     C                     MOVEL*BLANK    YN0025  1
      * Define null work field WHS Req Meter Reading Shp
     C                     MOVEL*BLANK    YN0026  1
      * Define null work field WHS Default Load Type
     C                     MOVEL*BLANK    YN0027  2
      * Define null work field WHS TMS Planning Region
     C                     MOVEL*BLANK    YN0028  2
      * Define null work field Default Carrier Code
     C                     MOVEL*BLANK    YN0029  3
      * Define null work field Inventory Logic Version
     C                     MOVEL*BLANK    YN0030  3
      * Define null work field WHS Auto Inv Restoration
     C                     MOVEL*BLANK    YN0031  3
      * Define null work field EDI Status 1
     C                     MOVEL*BLANK    YN0032  1
      * Define null work field EDI Status 2
     C                     MOVEL*BLANK    YN0033  1
      * Define null work field EDI Status 3
     C                     MOVEL*BLANK    YN0034  1
      * Define null work field Record Status
     C                     MOVEL*BLANK    YN0035  1
      * Define null work field Job Time
     C                     Z-ADD*ZERO     YN0036  60
      * Define null work field User Id
     C                     MOVEL*BLANK    YN0037 10
      * Define null work field Job Name
     C                     MOVEL*BLANK    YN0038 10
      * Define null work field Job Date
     C                     Z-ADD*ZERO     YN0039  70
      * Define local work field Location Aisle
     C                     MOVEL*BLANK    YL0008  2
      * Define local work field Location Bay
     C                     Z-ADD*ZERO     YL0009  20
      * Define local work field Loc Unused Chill Time
     C                     Z-ADD*ZERO     YL0010  52
      * Define local work field Shipping Company
     C                     Z-ADD*ZERO     YL0011  30
      * Define local work field API EccResult-MsgId U
     C                     MOVEL*BLANK    YL0012  7
      * Define local work field API EccResult-MsgDesc U
     C                     MOVEL*BLANK    YL0013 50
      * Define local work field API Request Key U
     C                     MOVEL*BLANK    YL0014 10
      * Define local work field API Name
     C                     MOVEL*BLANK    YL0015 45
      * Define local work field API Wait Time U
     C                     Z-ADD*ZERO     YL0016  50
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
      *
     C                     Z-ADD09        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
      * Set to *CHANGE mode
     C                     MOVEL'CHG'     W0PMD   3
     C                     MOVEL*BLANK    W0GRP   1
      * USER: Initialize program
      * VAL Rtv and Center Hdg IF
      * SET Screen Headings    IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SYRVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * CLC Center Txt Str 40  US - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc-Co Head  US - /UT User Source  * 
     C                     MOVE WUDE40    ##CMP  40
     C                     MOVEL'IC'      P1F1ST           Item Transactio
      * Prc Reset Field CAIN89 US - /UT User Source  * Turn off PUTOVR
      *  SETON INDICATOR 89 TO MAKE SURE PUTOVR IS TURNED OFF
     C                     MOVEL'1'       CAIN89  1
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 OMHEEFR
00002 wim.ordershipping.invento
00003 APIWAITTME
00004 ECC0000
00005 TIMEOUT
00006 PUDLXFR
00007 PDL8DFR
00008 PNTKXFR
00009 PUEJXFR
00010 PNTWXFR
00011 PDMLDFR
