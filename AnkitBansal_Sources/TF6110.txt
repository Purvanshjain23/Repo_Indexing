      *****************  RPG PROGRAM HEADING  ************************
      *‚********* THIS PROGRAM WAS CLONED FROM TF608.     ************
      *‚********* ANY CHANGES TO THIS PROGRAM SHOULD ALSO ************
      *‚********* CONSIDER CHANGING TF611.                ************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF611
      * TITLE:       Weekly Product Revenue Report - ALL
      * PROGRAMMER:  Danny Nguyen
      * CREATED:     12/05/2017
      *
      * FUNCTION:    Batch program to print weekly revenue values for a selected date range.
      *              (Includes STF data.)
      *
      *              This 'report' can be generated as:
      *                    1) detail or summary
      *                    2) sort/print by Item Structure or TF Structure
      *                    3) on-demand or from the Weekly Revenue Close process
      *
      *            To make this fit on the line we went with whole numbers for all pounds and
      *            dollars fields for printing; BUT, the underlying accumulations and calcs
      *            use decimal postions. Sooooo, adding the columns DOWN with an adding
      *            machine WILL NOT give the same totals that we print on the report.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Recompile only. "Floor" produced pounds and amount were added
      *           to file TFP010.
      *
      * 04/25/06  LeAnne Fedor
      *           The From/To Dates printing in the headings were different. We printed:
      *             From/to Week-Ending Dates when the report was generated on-demand
      *             From/to Dates for the week when the report was generated in the post
      *           So, we conditioned the 'text' that prints with the From/To dates.
      *
      * 09/19/06  LeAnne Ramsey
      *           Recompile only. Synon file PPAMREP was changed.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 04/16/07  LeAnne Ramsey
      *           Recompile only. Fields were added/changed in the Weekly
      *           Product Revenue file.
      *           Added:   Byproduct Mix Flag
      *                    Meat Cost Group Code
      *           Changed: Exclude from Mix Flag     to  Mix Flag
      *                    Exclude from Volume Flag  to  Volume Flag
      *                    Capability Flag           to  Inventory Flag
      *
      * 05/21/07  LeAnne Ramsey
      *           "Co-owner" fields were added to file TFP010. And, the users
      *           can now elect to generate this report for:
      *              Only CoOwned Products
      *              Only NOT CoOwned Products
      *              Both CoOwned and Not CoOwned Products
      *
      * 08/14/07  LeAnne Ramsey
      *           Added field: Item Type Code to TFP010
      *           For this report, we will include only FG Items.
      *
      * 08/29/07  LeAnne Ramsey
      *           On the detail line, we do not print some fields when the Item is
      *           Exempt. For Co-Owned Items, we will now print all fields on the detail
      *           line--regardless of whether the record is Exempt or Not Exempt.
      *
      * 09/11/08  LeAnne Ramsey
      *           Added new Export/Domestic Flag to layout; shortened Item Description by
      *           3 characters to make room.
      *
      * 09/12/08  LeAnne Ramsey
      *           Added a new selection on the Export/Domestic Flag.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Program cloned from TF611.
      *           Added 25 STF fields to TFP010 file.
      *           Print the STF fields on report on legal size paper.
      *           STF Shipped Pounds will be added to the AGG Shipped Pounds.
      *           STF Net Prod Rev Amt will be added to the AGG Net Prod Rev Amt.
      *           Calculate the AGG for all 3 companies on the fly:
      *             - Shipped LBS & Net Prod Rev Amt.
      *             - NOTE: Existing AGG fields already have the sum of SEB & TF values.
      *           Re-Calculate each company Net Prod Price/LBS.
      *           Re-Calculate each company Net Prod Rev %.
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 01/21/21  ISE            TSN593
      *           Replaced *loval with *start
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES PRANPRPR IN TFP010
      *           CHANGE PRINT fields to 6.2: l1spr, l1tpr, l2apr, l2spr, l2tpr,t3apr,t3spr,t3tpr
      *                                  8.4: L1ANPRPR
      *
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fombyrel0  if   e           k disk
      *    Synon file OMBYREP: Product
      *
      *
     Fome8rel0  if   e           k disk
      *    Synon file OME8REP: Product type
      *
      *
     Fome9rel0  if   e           k disk
      *    Synon file OME9REP: Product group
      *
      *
     Fomfarel1  if   e           k disk
      *    Synon file OMFAREP: Product class
      *
      *
     Fppamrel1  if   e           k disk
      *    Synon file PPAMREP: TF Classification
      *
      *
     Ftfl010b   if   e           k disk
      *    Weekly product revenue detail
      *    (Records selected, file keyed in open query)
      *
      *
12011F**print198  o    f  198        printer oflind(*inof)
12011Fprint198  o    f  257        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
12011D dash            s            256    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
      *
     D svrcexfl        s                   like(prrcexfl)
     D svprexfl        s                   like(prprexfl)
      *
     D svistycd        s                   like(pristycd)
     D svisgrcd        s                   like(prisgrcd)
     D svisclcd        s                   like(prisclcd)
     D svtfclcd        s                   like(prtfclcd)
     D svtfcgcd        s                   like(prtfcgcd)
     D svprcd          s                   like(prprcd)
     D svedfl          s                   like(predfl)
      *
      *
      * Array index
      *
     d x               s              1  0
      *
      *
      * Parms
      *
     D xxtfcgcd        s                   like(prtfcgcd)
     D xxtfcgds        s             15
      *
      *
      * Workfields
      *
     D wkpc            s             15  9
12011D wkprxnprpr      s                   like(pranprpr)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      * Print fields
      *
     d h1demand        s             25
     d h1rcexds        s             18
     d h1ieds          s             10
     d h1cods          s             11
     d h1edds          s              8
      *
     d h2prexds        s             20
      *
     d h2isclds        s                   like(fadetx)
     d h2isgrds        s                   like(e9ddtx)
     d h2istyds        s                   like(e8dctx)
      *
     d h2tfclds        s                   like(amq0na)
     d h2tfcgds        s             15
      *
      *
     d l1prds          s             24
     d l1wemdy         s              6  0
     d l1asllb         s              9  0
     d l1ssllb         s              9  0
     d l1tsllb         s              9  0
12011d l1xsllb         s              9  0
     d l1anpram        s             10  0
     d*l1anprpr        s              7  4
     d l1anprpr        s              8  4
     d l1snsam         s             10  0
     d l1snpram        s             10  0
     d l1tnsam         s             10  0
12011d l1xnsam         s             10  0
     d l1tnpram        s             10  0
12011d l1xnpram        s             10  0
     d*l1spr           s              5  2
     d*l1tpr           s              5  2
12011d*l1xpr           s              5  2
     d l1spr           s              6  2
     d l1tpr           s              6  2
12011d l1xpr           s              6  2
     d l1snprpc        s              5  2
     d l1tnprpc        s              5  2
12011d l1xnprpc        s              5  2
      *
     d l2prds          s             24
     d l2asllb         s             10  0
     d l2tsllb         s             10  0
     d l2ssllb         s             10  0
12011d l2xsllb         s             10  0
     d l2snsam         s             10  0
     d l2tnsam         s             10  0
12011d l2xnsam         s             10  0
     d l2anpram        s             10  0
     d l2snpram        s             10  0
     d l2tnpram        s             10  0
12011d l2xnpram        s             10  0
     d*l2apr           s              7  4
     d*l2spr           s              5  2
     d*l2tpr           s              5  2
12011d*l2xpr           s              5  2
     d l2apr           s              8  4
     d l2spr           s              6  2
     d l2tpr           s              6  2
12011d l2xpr           s              6  2
     d l2snprpc        s              5  2
     d l2tnprpc        s              5  2
12011d l2xnprpc        s              5  2
      *
     d t2rcexds        s             24
     d t2prexds        s             24
      *
     d t3asllb         s             10  0
     d t3ssllb         s             10  0
     d t3tsllb         s             10  0
12011d t3xsllb         s             10  0
     d t3snsam         s             10  0
     d t3tnsam         s             10  0
12011d t3xnsam         s             10  0
     d t3anpram        s             10  0
     d t3snpram        s             10  0
     d t3tnpram        s             10  0
12011d t3xnpram        s             10  0
     d*t3apr           s              7  4
     d*t3spr           s              5  2
     d*t3tpr           s              5  2
12011d*t3xpr           s              5  2
     d t3apr           s              8  4
     d t3spr           s              6  2
     d t3tpr           s              6  2
12011d t3xpr           s              6  2
     d t3snprpc        s              5  2
     d t3tnprpc        s              5  2
12011d t3xnprpc        s              5  2
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arasllb         s             11  1 dim(7)
     D arssllb         s             11  1 dim(7)
     D artsllb         s             11  1 dim(7)
12011D arxsllb         s             11  1 dim(7)
      *
     D arsnsam         s             12  2 dim(7)
     D artnsam         s             12  2 dim(7)
12011D arxnsam         s             12  2 dim(7)
      *
     D aragpram        s             12  2 dim(7)
      *
     D aranpram        s             12  2 dim(7)
     D arsnpram        s             12  2 dim(7)
     D artnpram        s             12  2 dim(7)
12011D arxnpram        s             12  2 dim(7)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
      * Do not use the first 38 LDA positions. We have to generate this from the Revenue
      * Close function as well as on-demand from this program. So, the LDAs have to
      * match up (The Revenue Close function is already using the first 38 positions.)
      * EXCEPT, put blanks in position 37 (prelimary/final code) to match TF410.
      *
     D  ldpfcd                37     37
     D  ldfmdy                39     44  0
     D  ldtmdy                45     50  0
     D  ldfcymd               52     59  0
     D  ldtcymd               60     67  0
      *
     D  lddsfl                71     71
     D  lddsds                73     82
      *
     D  ldistycd              83     85  0
     D  ldistyds              86    115
     D  ldisgrcd             116    118  0
     D  ldisgrds             119    148
     D  ldisclcd             149    151  0
     D  ldisclds             152    181
     D  ldprcd               182    188  0
     D  ldprds               189    218
      *
     D  ldtfcgcd             219    220
     D  ldtfcgds             221    235
     D  ldtfclcd             236    238
     D  ldtfclds             239    268
      *
     D  ldver                269    269
     D  ldverds              270    299
      *
     D  lddemand             300    300
      *
     D  ldiecd               301    301
     D  ldieds               302    327
     D  ldcofl               329    329
      *
     D  ldedfl               349    349
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *****************************************************************************************
      * MAINLINE
      *****************************************************************************************
      *
      * Read each record selected by the open query from the Weekly Product
      * Revenue Detail file. Some records in the file have only "Claim" data;
      * we will not process these records. So, only process records that have
      * data in a "non-claim" field. Also, only process Finished Goods items.
      *
593  C*    *loval        setll     tfl010b
593  C     *start        setll     tfl010b
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      tfl010b                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             pritycd = 'FG ' and
     C                             (prasllb <> 0 or
     C                              prssllb <> 0 or
     C                              prtsllb <> 0 or
12011C                              prxsllb <> 0 or
     C                              pranpram <> 0 or
     C                              prsnpram <> 0 or
     C                              prtnpram <> 0 or
12011C                              prxnpram <> 0 or
     C                              prsnsam  <> 0 or
     C                              prtnsam  <> 0 or
12011C                              prxnsam  <> 0 or
     C                              pragpram <> 0)
      * Control breaks
     C                   select
     C                   when      first = yes
     C                   exsr      $first
      *
     C                   when      ldver = '1' and
     C                             (svrcexfl  <> prrcexfl or
     C                              svprexfl  <> prprexfl or
     C                              svistycd  <> pristycd or
     C                              svisgrcd  <> prisgrcd or
     C                              svisclcd  <> prisclcd or
     C                              svprcd    <> prprcd)
     C                   exsr      $break1
      *
     C                   when      ldver = '2' and
     C                             (svrcexfl  <> prrcexfl or
     C                              svprexfl  <> prprexfl or
     C                              svtfcgcd  <> prtfcgcd or
     C                              svtfclcd  <> prtfclcd or
     C                              svistycd  <> pristycd or
     C                              svprcd    <> prprcd)
     C                   exsr      $break2
     C                   endsl
      *
      *
      * Detail Processing:
      *         Accumulate record values into total arrays
      *         Print detail line if this is the 'Detail' version
      *
     C                   exsr      $accum
      *
     C                   if        lddsfl = 'D'
     C                   exsr      $l1dtl
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *---------------------------------------------------------------
      * EOF processing
      *---------------------------------------------------------------
      * If the file was empty, print the standard 'no data...' message
      *
     C                   if        first = yes
     C                   except    h1hdr
     C                   except    nodata
     C                   else
      *
      * Print total for last product
      *
     C                   exsr      $prodtot
      *
      * Print last Item Structure totals
      *
     C                   select
     C                   when      ldver = '1'
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
      *
      * Print last Triumph Structure totals
      *
     C                   when      ldver = '2'
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   endsl
      *
      * Print last Exempt/Non-Exempt Product Total
      *
     C                   exsr      $prextot
      *
      * Print last Exempt/Non-Exempt Record Total
      *
     C                   exsr      $rcextot
      * Report total
     C                   exsr      $reporttot
     C                   endif
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Accumulate detail line values into total arrays
      *---------------------------------------------------------------
      *
     C     $accum        begsr
      *
      *
      * Note: Typically, we do not add into totals the following columns when the
      *       record is EXEMPT. BUT, we will add in for all columns when it is
      *       CoOwend--regardless of whether the Item is Exempt/Not Exempt.
      *            1) all aggregate columns
      *            2) Net Product Revenue Amount for both SBF and TF
12011 *            3) Add STF to all AGG columns. NOTE: Existing AGG columns already
12011 *               contains both SBF & TF values.
      *
     C                   if        prrcexfl = no or prcoownfl = yes
     C                   add       prasllb       arasllb
12011C                   add       prxsllb       arasllb
     C                   add       pranpram      aranpram
12011C                   add       prxnpram      aranpram
     C                   add       prsnpram      arsnpram
     C                   add       prtnpram      artnpram
12011C                   add       prxnpram      arxnpram
     C                   endif
      *
      * For both Exempt and Not-Exempt Records:
      *
     C                   add       prssllb       arssllb
     C                   add       prtsllb       artsllb
12011C                   add       prxsllb       arxsllb
      *
     C                   add       prsnsam       arsnsam
     C                   add       prtnsam       artnsam
12011C                   add       prxnsam       arxnsam
      *
     C                   add       pragpram      aragpram
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print product line for the 'Detail' version
      *---------------------------------------------------------------
      *
     C     $l1dtl        begsr
      *
      * Retrieve Product Description
      *
     C     prprcd        chain     ombyrel0                           92
     C                   if        *in92 = *off                                 If ok
     C                   movel(p)  byavna        l1prds
     C                   else
     C                   move      *blank        l1prds
     C                   endif
      *
      * Flip Week-ending Date from CCYYMMDD to MMDDYY
      *
     C     *iso          test(d)                 prwedt                 92
     C                   if        *in92 = *off                                 If OK
     C                   move      prwedt        wkisodate
     C     *mdy          move      wkisodate     l1wemdy
     C                   endif                                                  If OK
      *
      *
      * Set up print fields:
      *   Move Pounds and Dollars values to whole-number print fields.
      *   Move Price Per Pounds value from a 9,6 to a 7,4 print field.
      *
      * Note: Typically, we do not want to print the following columns for
      *       EXEMPT items. BUT, we will print all columns when it is CoOwned--
      *       regardless of whether the Item is Exempt/Not Exempt.
      *            1) all aggregate columns
      *            2) Net Product Revenue Amount for both SBF and TF
      *            3) Net Product Revenue Percent for both SBF and TF
12011 *            4) Add STF Shipped Pounds, Net Prod Rev Amt & Net Prod Price/Lbs
12011 *               to AGG columns.
      *
     C                   if        prrcexfl = no or prcoownfl = yes             If printing
     C                   z-add(h)  prasllb       l1asllb
12011C                   add(h)    prxsllb       l1asllb
     C                   z-add(h)  pranpram      l1anpram
12011C                   add(h)    prxnpram      l1anpram
     C                   z-add(h)  pranprpr      l1anprpr
12011 *   R12011-Re-Calculate AGG Net Prod Price/Lb for all 3 companies.
  |  C                   if        l1asllb <> 0
  |  C     l1anpram      div(h)    l1asllb       l1anprpr
12011C                   endif
      *
     C                   z-add(h)  prsnpram      l1snpram
     C                   z-add(h)  prtnpram      l1tnpram
12011C                   z-add(h)  prxnpram      l1xnpram
      *
      *        Put Net Product Revenue Percents into 5,2 fields
      *        (We force the sum of SBF + TF to come out to 100%.)
      *
     C                   select
12011C**                 when      prsnprpc = 0 and prtnprpc = 0
12011C                   when      prsnprpc=0 and prtnprpc=0 and prxnprpc=0
      *
12011C**                 when      prsnprpc <> 0 and prtnprpc = 0
12011C                   when      prsnprpc<>0 and prtnprpc=0 and prxnprpc=0
     C                   z-add(h)  prsnprpc      l1snprpc
      *
12011C**                 when      prsnprpc = 0 and prtnprpc <> 0
12011C                   when      prsnprpc=0 and prtnprpc<>0 and prxnprpc=0
     C                   z-add(h)  prtnprpc      l1tnprpc
      *
12011C                   when      prsnprpc=0 and prtnprpc=0 and prxnprpc<>0
12011C                   z-add(h)  prxnprpc      l1xnprpc
      *
12011C                   when      prsnprpc<>0 and prtnprpc<>0 and prxnprpc=0
  |  C                   z-add(h)  prsnprpc      l1snprpc
  |  C                   z-add(h)  prtnprpc      l1tnprpc
  |   *
  |  C                   when      prsnprpc<>0 and prtnprpc=0 and prxnprpc<>0
  |  C                   z-add(h)  prsnprpc      l1snprpc
  |  C                   z-add(h)  prxnprpc      l1xnprpc
  |   *
  |  C                   when      prsnprpc=0 and prtnprpc<>0 and prxnprpc<>0
  |  C                   z-add(h)  prtnprpc      l1tnprpc
  |  C                   z-add(h)  prxnprpc      l1xnprpc
  |   *
  |  C**                 when      prsnprpc <> 0 and prtnprpc <> 0
12011C                   when      prsnprpc<>0 and prtnprpc<>0 and prxnprpc<>0
     C                   z-add(h)  prsnprpc      l1snprpc
12011C**   100           sub       l1snprpc      l1tnprpc
  |  C                   z-add(h)  prtnprpc      l1tnprpc
  |  C     prsnprpc      add       prtnprpc      l1xnprpc
12011C     100           sub       l1xnprpc      l1xnprpc
     C                   endsl
     C                   endif                                                  If printing
      *
      *
      * Logic for both Exempt and Non-Exempt records:
      *
     C                   z-add(h)  prssllb       l1ssllb
     C                   z-add(h)  prtsllb       l1tsllb
12011C                   z-add(h)  prxsllb       l1xsllb
      *
     C                   z-add(h)  prsnsam       l1snsam
     C                   z-add(h)  prtnsam       l1tnsam
12011C                   z-add(h)  prxnsam       l1xnsam
      *
      * Calc Average Net Price Per Pound for both 1) Seaboard and 2) Triumph & 3) STF.
      *
     C                   if        prssllb <> 0
     C     prsnsam       div(h)    prssllb       l1spr
     C                   endif
      *
     C                   if        prtsllb <> 0
     C     prtnsam       div(h)    prtsllb       l1tpr
     C                   endif
      *
12011C                   if        prxsllb <> 0
  |  C     prxnsam       div(h)    prxsllb       l1xpr
12011C                   endif
      *
      *  Print line
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   endif
      *
     C                   except    l1dtl
     C                   setoff                                       83
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print detail line for the 'Summary' version
      *---------------------------------------------------------------
      *
     C     $l2dtl        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   endif
      *
      *
      * Retrieve Product Description
      *
     C     svprcd        chain     ombyrel0                           92
     C                   if        *in92 = *off
     C                   movel(p)  byavna        l2prds
     C                   else
     C                   move      *blank        l2prds
     C                   endif
      *
      * Set array index
     C                   z-add     1             x
      *
      * Get array values into whole-number print fields.
      *
     C                   z-add(h)  arasllb  (x)  l2asllb
     C                   z-add(h)  arssllb  (x)  l2ssllb
     C                   z-add(h)  artsllb  (x)  l2tsllb
12011C                   z-add(h)  arxsllb  (x)  l2xsllb
      *
     C                   z-add(h)  aranpram (x)  l2anpram
     C                   z-add(h)  arsnsam  (x)  l2snsam
     C                   z-add(h)  arsnpram (x)  l2snpram
     C                   z-add(h)  artnsam  (x)  l2tnsam
     C                   z-add(h)  artnpram (x)  l2tnpram
12011C                   z-add(h)  arxnsam  (x)  l2xnsam
12011C                   z-add(h)  arxnpram (x)  l2xnpram
      *
      * Calc 'net product revenue percents' for total line.
      *
     C                   if        aranpram(x) <> 0                             If agg rev
     C                   eval      wkpc = (arsnpram(x) / aranpram(x)) * 100
     C                   z-add(h)  wkpc          l2snprpc
12011 *   R12011-Replaced calculation for TF.
  |  C                   if        arxnpram(x) = 0
  |  C     100           sub       l2snprpc      l2tnprpc
  |  C                   else
  |  C                   eval      wkpc = (artnpram(x) / aranpram(x)) * 100
  |  C                   z-add(h)  wkpc          l2tnprpc
  |  C                   endif
  |   *   R12011-Calculation for STF.
  |  C                   if        arxnpram(x) > 0
  |  C                   eval      wkpc = 100 - (l2snprpc + l2tnprpc)
  |  C                   z-add(h)  wkpc          l2xnprpc
12011C                   endif
     C                   endif                                                  If agg rev
      *
      * Calc 'price per pound values' for total line.
      *
     C                   if        arasllb(x) <> 0
     C     aranpram(x)   div(h)    arasllb(x)    l2apr
     C                   endif
      *
     C                   if        arssllb(x) <> 0
     C     arsnsam(x)    div(h)    arssllb(x)    l2spr
     C                   endif
      *
     C                   if        artsllb(x) <> 0
     C     artnsam(x)    div(h)    artsllb(x)    l2tpr
     C                   endif
      *
12011C                   if        arxsllb(x) <> 0
  |  C     arxnsam(x)    div(h)    arxsllb(x)    l2xpr
12011C                   endif
      *
     C                   except    l2dtl
      *
      * Clear the arrays for this occurrence.
      *
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print report heading
      *---------------------------------------------------------------
      *
     C     $h1hdr        begsr
      *
     C                   if        svrcexfl = yes
     C                   eval      h1rcexds = 'EXEMPT RECORDS'
     C                   else
     C                   eval      h1rcexds = 'NON-EXEMPT RECORDS'
     C                   endif
      *
     C                   except    h1hdr
      *
     C                   seton                                        77
     C                   seton                                        808182
     C                   seton                                        83
      *
     C                   endsr
      *
      *---------------------------------------------------------------
      * Print Item Structure Header
      *---------------------------------------------------------------
      *
     C     $h2hdr        begsr
      *
     C                   if        *inof = *on or *in77 = *on
     C                   exsr      $h1hdr
     C                   else
     C                   except    blank
     C                   endif
      *
      * If you are in the "Exempt" section, set up the 'Product Exempt
      * Description'
     C                   move      *blank        h2prexds
     C                   if        svrcexfl = yes
      *
     C                   select
     C                   when      svprexfl = yes
     C                   eval      h2prexds = 'EXEMPT PRODUCTS'
     C                   other
     C                   eval      h2prexds = 'NON-EXEMPT PRODUCTS'
     C                   endsl
      *
     C                   endif
      *
      * I was trying to make this BOLD, so I print it twice!
      *
     C                   except    h2hdr
     C                   except    h2hdr
      *
     C                   except    blank
     C                   except    blank
      *
     C                   setoff                                       77
     C                   setoff                                       808182
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print 'Product' total
      *-----------------------------------------------------------------------------
      *
     C     $prodtot      begsr
      *
     C                   select
     C                   when      lddsfl = 'S'
     C                   exsr      $l2dtl
      *
     C                   when      lddsfl = 'D'
     C                   z-add     1             x
     C                   seton                                        8485
     C                   exsr      $total
     C                   setoff                                       8485
     C                   endsl
      *
     C                   z-add     prprcd        svprcd
     C                   move      predfl        svedfl
     C                   seton                                        83
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Item Structure Class total
      *-----------------------------------------------------------------------------
      *
     C     $iscltot      begsr
      *
     C                   if        lddsfl = 'S'
     C                   seton                                        84
     C                   endif
      *
     C                   z-add     2             x
      *
     C                   seton                                        86
     C                   exsr      $total
     C                   setoff                                       86
      *
     C                   z-add     prisclcd      svisclcd
     C                   exsr      $isclds
      *
     C                   if        lddsfl = 'S'
     C                   setoff                                       84
     C                   endif
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Item Structure Group total
      *-----------------------------------------------------------------------------
      *
     C     $isgrtot      begsr
      *
     C                   z-add     3             x
      *
     C                   seton                                        87
     C                   exsr      $total
     C                   setoff                                       87
      *
     C                   z-add     prisgrcd      svisgrcd
     C                   exsr      $isgrds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Item Structure Type Total for Version 1
      *-----------------------------------------------------------------------------
      *
     C     $istytot      begsr
      *
      * Set array index value and print control indicators based on:
      *   1) Sort/print by Item Structure
      *   2) Sort/print by TF Structure
      *
     C                   select
     C                   when      ldver = '1'
     C                   z-add     4             x
     C                   seton                                        88
      *
     C                   when      ldver = '2'
     C                   z-add     2             x
     C                   seton                                        86
     C                   if        lddsfl = 'S'
     C                   seton                                        84
     C                   endif
     C                   endsl
      *
      * For both sort versions
      *
     C                   exsr      $total
      *
      *
      * Set off print control indicators based on:
      *   1) Sort/print by Item Structure
      *   2) Sort/print by TF Structure
      *
     C                   select
     C                   when      ldver = '1'
     C                   setoff                                       88
      *
     C                   when      ldver = '2'
     C                   setoff                                       86
     C                   if        lddsfl = 'S'
     C                   setoff                                       84
     C                   endif
     C                   endsl
      *
      * Retrieve description for next heading line
      *
     C                   z-add     pristycd      svistycd
     C                   exsr      $istyds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print TF Structure Classification total
      *-----------------------------------------------------------------------------
      *
     C     $tfcltot      begsr
      *
     C                   z-add     3             x
      *
     C                   seton                                        87
     C                   exsr      $total
     C                   setoff                                       87
      *
     C                   move      prtfclcd      svtfclcd
     C                   exsr      $tfclds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print TF Class Group total
      *-----------------------------------------------------------------------------
      *
     C     $tfcgtot      begsr
      *
     C                   z-add     4             x
      *
     C                   seton                                        88
     C                   exsr      $total
     C                   setoff                                       88
      *
     C                   move      prtfcgcd      svtfcgcd
     C                   exsr      $tfcgds
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Exempt/Non-Exempt Product Total
      *-----------------------------------------------------------------------------
      *
     C     $prextot      begsr
      *
     C                   z-add     5             x
      *
      * If you are processing "Exempt" records, we print;
      * otherwise, we will just clear the arrays.
      *
     C                   select
     C                   when      svrcexfl = no
     C                   exsr      $clear
     C                   other
      *
     C                   if        svprexfl = yes
     C                   eval      t2prexds = '   Exempt Products *****'
     C                   else
     C                   eval      t2prexds = 'NonExempt Products *****'
     C                   endif
      *
     C                   seton                                        78
     C                   exsr      $total
     C                   setoff                                       78
     C                   endsl
      *
     C                   move      prprexfl      svprexfl
     C                   seton                                        77
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Exempt/Non-Exempt Record Total
      *-----------------------------------------------------------------------------
      *
     C     $rcextot      begsr
      *
     C                   z-add     6             x
      *
     C                   if        svrcexfl = yes
     C                   eval      t2rcexds = '    Exempt Records *****'
     C                   else
     C                   eval      t2rcexds = 'Non-Exempt Records *****'
     C                   endif
      *
     C                   seton                                        79
     C                   exsr      $total
     C                   setoff                                       79
      *
     C                   move      prrcexfl      svrcexfl
     C                   seton                                        of
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print Report total
      *-----------------------------------------------------------------------------
      *
     C     $reporttot    begsr
      *
     C                   setoff                                       of
     C                   z-add     7             x
      *
     C                   seton                                        89
     C                   exsr      $total
     C                   setoff                                       89
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Control break logic for the version Sorted/Printed by Item Structure
      *-----------------------------------------------------------------------------
      *
     C     $break1       begsr
      *
     C                   select
     C                   when      prrcexfl <> svrcexfl
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
     C                   exsr      $prextot
     C                   exsr      $rcextot
     C                   exsr      $h2hdr
      *
     C                   when      prprexfl <> svprexfl
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
     C                   exsr      $prextot
     C                   exsr      $h2hdr
      *
     C                   when      pristycd <> svistycd
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $istytot
     C                   exsr      $h2hdr
      *
     C                   when      prisgrcd <> svisgrcd
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $isgrtot
     C                   exsr      $h2hdr
      *
     C                   when      prisclcd <> svisclcd
     C                   exsr      $prodtot
     C                   exsr      $iscltot
     C                   exsr      $h2hdr
      *
     C                   when      prprcd <> svprcd
     C                   exsr      $prodtot
     C                   except    blank
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Control break logic for the version Sorted/Printed by TF Structure
      *-----------------------------------------------------------------------------
      *
     C     $break2       begsr
      *
     C                   select
     C                   when      prrcexfl <> svrcexfl
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   exsr      $prextot
     C                   exsr      $rcextot
     C                   exsr      $h2hdr
      *
     C                   when      prprexfl <> svprexfl
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   exsr      $prextot
     C                   exsr      $h2hdr
      *
     C                   when      prtfcgcd <> svtfcgcd
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $tfcgtot
     C                   exsr      $h2hdr
      *
     C                   when      prtfclcd <> svtfclcd
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $tfcltot
     C                   exsr      $h2hdr
      *
     C                   when      pristycd <> svistycd
     C                   exsr      $prodtot
     C                   exsr      $istytot
     C                   exsr      $h2hdr
      *
     C                   when      prprcd <> svprcd
     C                   exsr      $prodtot
     C                   except    blank
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-----------------------------------------------------------------------------
      * Print totals line
      *-----------------------------------------------------------------------------
      *
     C     $total        begsr
      *
      * Print the dashed underscore...unless you have hit page break.
      *
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   else
     C                   except    t1tot
     C                   endif
      *
      * Get array values into whole-number print fields.
      *
     C                   z-add(h)  arasllb  (x)  t3asllb
     C                   z-add(h)  arssllb  (x)  t3ssllb
     C                   z-add(h)  artsllb  (x)  t3tsllb
12011C                   z-add(h)  arxsllb  (x)  t3xsllb
      *
     C                   z-add(h)  aranpram (x)  t3anpram
     C                   z-add(h)  arsnsam  (x)  t3snsam
     C                   z-add(h)  arsnpram (x)  t3snpram
     C                   z-add(h)  artnsam  (x)  t3tnsam
     C                   z-add(h)  artnpram (x)  t3tnpram
12011C                   z-add(h)  arxnsam  (x)  t3xnsam
12011C                   z-add(h)  arxnpram (x)  t3xnpram
      *
      * Calc 'net product revenue percents' for total line.
      *
     C                   if        aranpram(x) <> 0                             If agg rev
     C                   eval      wkpc = (arsnpram(x) / aranpram(x)) * 100
     C                   z-add(h)  wkpc          t3snprpc
12011 *   R12011-Replaced calculation for TF.
  |  C                   if        arxnpram(x) = 0
  |  C     100           sub       t3snprpc      t3tnprpc
  |  C                   else
  |  C                   eval      wkpc = (artnpram(x) / aranpram(x)) * 100
  |  C                   z-add(h)  wkpc          t3tnprpc
  |  C                   endif
  |   *   R12011-Calculation for STF.
  |  C                   if        arxnpram(x) > 0
  |  C                   eval      wkpc = 100 - (t3snprpc + t3tnprpc)
  |  C                   z-add(h)  wkpc          t3xnprpc
12011C                   endif
     C                   endif                                                  If agg rev
      *
      * Calc some 'price per pound values' for total line.
      *
     C                   if        arasllb(x) <> 0
     C     aranpram(x)   div(h)    arasllb(x)    t3apr
     C                   endif
      *
     C                   if        arssllb(x) <> 0
     C     arsnsam(x)    div(h)    arssllb(x)    t3spr
     C                   endif
      *
     C                   if        artsllb(x) <> 0
     C     artnsam(x)    div(h)    artsllb(x)    t3tpr
     C                   endif
      *
12011C                   if        arxsllb(x) <> 0
  |  C     arxnsam(x)    div(h)    arxsllb(x)    t3xpr
12011C                   endif
      *
      * Print header line
      *
     C                   if        *inof = *on
     C                   exsr      $h2hdr
     C                   endif
      *
      * Print the total line twice to make the text bold.
      *
     C                   except    t2tot
     C                   except    t2tot
      *
      * Print this line once without spacing.
      *
     C                   except    t3tot
      *
      * Clear the arrays for this occurrence.
      *
     C                   exsr      $clear
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Item Structure Class description
      *---------------------------------------------------------------
      *
     C     $isclds       begsr
      *
     C     svisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      h2isclds = fadetx
     C                   else
     C                   eval      h2isclds = 'Unassigned'
     C                   endif
      *
     C                   seton                                        80
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Item Structure Group description
      *---------------------------------------------------------------
      *
     C     $isgrds       begsr
      *
     C     svisgrcd      chain     ome9rel0                           92
     C                   if        *in92 = *off
     C                   eval      h2isgrds  = e9ddtx
     C                   else
     C                   eval      h2isgrds = 'Unassigned'
     C                   endif
      *
     C                   seton                                        81
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Item Structure Type description
      *---------------------------------------------------------------
      *
     C     $istyds       begsr
      *
     C     svistycd      chain     ome8rel0                           92
     C                   if        *in92 = *off
     C                   eval      h2istyds  = e8dctx
     C                   else
     C                   eval      h2istyds  = 'Unassigned'
     C                   endif
      *
     C                   select
     C                   when      ldver = '1'
     C                   seton                                        82
      *
     C                   when      ldver = '2'
     C                   seton                                        80
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve TF Classification description
      *---------------------------------------------------------------
      *
     C     $tfclds       begsr
      *
     C     prtfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *off                                 If ok
     C                   eval      h2tfclds  = amq0na
     C                   else
     C                   eval      h2tfclds = 'Unassigned'
     C                   endif                                                  If ok
      *
     C                   seton                                        81
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve TF Class Group description
      *---------------------------------------------------------------
      *
     C     $tfcgds       begsr
      *
     C                   call      'TF804'
     C                   parm      prtfcgcd      xxtfcgcd
     C                   parm      *blank        xxtfcgds
      *
     C                   if        xxtfcgds = *blank                            If bad
     C                   eval      h2tfcgds = 'Unassigned'
     C                   else
     C                   eval      h2tfcgds = xxtfcgds
     C                   endif                                                  If bad
      *
     C                   seton                                        82
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Clear occurrence in arrays
      *---------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             arasllb  (x)
     C                   z-add     0             arssllb  (x)
     C                   z-add     0             artsllb  (x)
12011C                   z-add     0             arxsllb  (x)
      *
     C                   z-add     0             aranpram (x)
     C                   z-add     0             arsnsam  (x)
     C                   z-add     0             arsnpram (x)
     C                   z-add     0             artnsam  (x)
     C                   z-add     0             artnpram (x)
12011C                   z-add     0             arxnsam  (x)
12011C                   z-add     0             arxnpram (x)
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * First time subroutine
      *---------------------------------------------------------------
      *
     C     $first        begsr
      *
     C                   move      no            first
      *
     C                   z-add     prprcd        svprcd
     C                   move      predfl        svedfl
     C                   move      prrcexfl      svrcexfl
     C                   move      prprexfl      svprexfl
      *
      *
      * When sorting/printing by Item Structure
      *
     C                   select
     C                   when      ldver = '1'
     C                   z-add     prisclcd      svisclcd
     C                   z-add     prisgrcd      svisgrcd
     C                   z-add     pristycd      svistycd
     C                   exsr      $isclds
     C                   exsr      $isgrds
     C                   exsr      $istyds
      *
      * When sorting/printing by TF Strucuture
      *
     C                   when      ldver = '2'
     C                   move      prtfcgcd      svtfcgcd
     C                   move      prtfclcd      svtfclcd
     C                   z-add     pristycd      svistycd
     C                   exsr      $istyds
     C                   exsr      $tfclds
     C                   exsr      $tfcgds
     C                   endsl
      *
      * Print Headings
      *
     C                   seton                                        of
     C                   exsr      $h2hdr
     C                   seton                                        83
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Retrieve time for report heading.
      *
     C                   time                    rtime
      *
     C                   if        ldistycd = 0
     C                   seton                                        96
     C                   endif
      *
     C                   if        ldisgrcd = 0
     C                   seton                                        97
     C                   endif
      *
     C                   if        ldisclcd = 0
     C                   seton                                        98
     C                   endif
      *
     C                   if        ldprcd = 0
     C                   seton                                        99
     C                   endif
      *
     C                   if        ldtfcgcd = *blank
     C                   seton                                        94
     C                   endif
      *
     C                   if        ldtfclcd = *blank
     C                   seton                                        95
     C                   endif
      *
      * Set indicators for the sort/print version the user selected.
      *
     C                   select
     C                   when      ldver = '1'
     C                   seton                                        71
      *
     C                   when      ldver = '2'
     C                   seton                                        72
     C                   endsl
      *
      * Exempt selection
     C                   select
     C                   when      ldiecd = 'E'
     C                   movel     'Exempt'      h1ieds
      *
     C                   when      ldiecd = 'N'
     C                   movel     'Non-Exempt'  h1ieds
      *
     C                   when      ldiecd = 'B'
     C                   movel     'Both'        h1ieds
     C                   endsl
      *
      * Co-Owned selection
     C                   select
     C                   when      ldcofl = 'C'
     C                   eval      h1cods = 'CoOwned'
      *
     C                   when      ldcofl = 'N'
     C                   eval      h1cods = 'Not CoOwned'
      *
     C                   when      ldcofl = 'B'
     C                   eval      h1cods = 'Both'
     C                   endsl
      *
      * Export/Domestic
     C                   select
     C                   when      ldedfl = 'E'
     C                   eval      h1edds = 'Export'
      *
     C                   when      ldedfl = 'D'
     C                   eval      h1edds = 'Domestic'
      *
     C                   when      ldedfl = 'B'
     C                   eval      h1edds = 'Both'
     C                   endsl
      *
      * This report is generated on-demand and also from the submitted
      * Weekly Revenue Close function.
      *
     C                   select
     C                   when      lddemand = yes
     C                   eval      h1demand = '        On-Demand        '
     C                   seton                                        91
      *
     C                   when      ldpfcd = 'F'
     C                   eval      h1demand = '   Final Revenue Close   '
      *
     C                   when      ldpfcd = 'P'
     C                   eval      h1demand = 'Preliminary Revenue Close'
     C                   endsl
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
12011Oprint198  e            h1hdr          1 01
     O                       sdpgm               10
     O                                          100 'WEEKLY PRODUCT REVENUE'
     O                                          107 'REPORT'
12011O                                          113 ' - ALL'
12011O                                          246 'DATE'
12011O                       udate         y    256
      *
      *
     O          e            h1hdr          0
     O                       lddsds              98
      *
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                       lddsds              98
12011O                                          246 'TIME'
12011O                       rtime              256 '  :  :  '
      *
      *
     O          e            h1hdr          0
12011O                                          246 'PAGE'
12011O                       page          z    256
      *
     O                       ldverds            108
      *
      *
     O          e            h1hdr          1
      *
     O                       ldverds            108
      *
      *
     O          e            h1hdr          0
     O                       h1demand           105
      *
      *
     O          e            h1hdr          2
     O                       h1demand           105
      *
      *
     O          e            h1hdr          1
     O               91                          23 'From week-ending date :'
     O              n91                          23 'From date ............:'
     O                       ldfmdy              33 '  /  /  '
      *
     O                                           63 'Item structure type code :'
     O               96                          68 'All'
     O              n96      ldistycd      z     68
     O              n96      ldistyds           100
      *
     O                                          130 'TF class group code ..:'
     O               94                         135 'All'
     O              n94      ldtfcgcd           138
     O              n94      ldtfcgds           155
      *
     O          e            h1hdr          1
     O               91                          23 'To week-ending date ..:'
     O              n91                          23 'To date ..............:'
     O                       ldtmdy              33 '  /  /  '
      *
     O                                           63 'Item structure group code:'
     O               97                          68 'All'
     O              n97      ldisgrcd      z     68
     O              n97      ldisgrds           100
      *
      *
     O                                          130 'TF classification code:'
     O               95                         135 'All'
     O              n95      ldtfclcd           138
     O              n95      ldtfclds           170
      *
      *
     O          e            h1hdr          1
     O                                           23 'Exempt/Non-Exempt/Both:'
     O                       h1ieds              35
     O                                           63 'Item structure class code:'
     O               98                          68 'All'
     O              n98      ldisclcd      z     68
     O              n98      ldisclds           100
      *
     O                                          130 'Product code .........:'
     O               99                         135 'All'
     O              n99      ldprcd        z    138
     O              n99      ldprds             170
      *
      *
     O          e            h1hdr          1
     O                                           23 'CoOwned/Not CoOwn/Both:'
     O                       h1cods              36
      *
      *
     O          e            h1hdr          3
     O                                           23 'Export/Domestic/Both .:'
     O                       h1edds              33
      *
      *-------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------
      *
     O          e            h1hdr          0
     O                       h1rcexds            18
      *
     O          e            h1hdr          1
     O                       h1rcexds            18
     O                                           35 'Ex'
     O                                           43 'Week'
     O                                           67 '------------ Aggregate'
     O                                           81 '-------------'
      *
     O                                          109 '------------------------- '
     O                                          117 'Seaboard'
     O                                          140 ' ----------------------'
      *
     O                                          169 '--------------------------'
     O                                          177 ' Triumph'
     O                                          198 ' --------------------'
      *
12011O                                          220 '------------------'
  |  O                                          243 ' Seaboard Triumph Foods'
12011O                                          257 ' -------------'
      *
     O          e            h1hdr          1
     O                                           32 'Product'
     O                                           35 'Dm'
     O                                           43 'Ending'
      * Aggregate
     O                                           56 'Shipped'
     O                                           71 'Net Prod'
     O                                           81 'Net Prod'
      * Seaboard
     O                                           94 'Shipped'
     O                                          109 'Net Sales'
     O                                          118 'NetSale'
     O                                          132 'Net Prod'
     O                                          140 'NetProd'
      * Triumph
     O                                          153 'Shipped'
     O                                          168 'Net Sales'
     O                                          177 'NetSale'
     O                                          190 'Net Prod'
     O                                          198 'NetProd'
      *
12011 * Seaboard Triumph Foods
  |  O                                          212 'Shipped'
  |  O                                          227 'Net Sales'
  |  O                                          236 'NetSale'
  |  O                                          248 'Net Prod'
12011O                                          256 'NetProd'
      *
      *
     O          e            h1hdr          1
     O                                           19 'Product Description'
     O                                           32 'Code'
     O                                           35 'Fl'
     O                                           43 'Date'
      * Aggregate
     O                                           56 'Pounds'
     O                                           71 'Rev Amt'
     O                                           81 'Price/Lb'
      * Seaboard
     O                                           94 'Pounds'
     O                                          109 'Amount'
     O                                          117 'Prc/Lb'
     O                                          132 'Rev Amt'
     O                                          140 'Rev %'
      * Triumph
     O                                          153 'Pounds'
     O                                          168 'Amount'
     O                                          176 'Prc/Lb'
     O                                          190 'Rev Amt'
     O                                          198 'Rev %'
12011 * Seaboard Triumph Foods
  |  O                                          212 'Pounds'
  |  O                                          227 'Amount'
  |  O                                          235 'Prc/Lb'
  |  O                                          248 'Rev Amt'
12011O                                          256 'Rev %'
      *
     O          e            h1hdr          1
12011O                       dash               257
      *
      *
      *-------------------------------------------------------------
      * Item structure heading
      *-------------------------------------------------------------
      *
      *
     O          e    71      h2hdr       0  0
     O               77      h2prexds            20
      *
     O               82                          30 'Type:'
     O               82      svistycd      z     35
     O               82      h2istyds            67
      *
     O               81                          81 'Group:'
     O               81      svisgrcd      z     86
     O               81      h2isgrds           118
      *
     O               80                         131 'Class:'
     O               80      svisclcd      z    136
     O               80      h2isclds           168
      *
      *-------------------------------------------------------------
      * TF structure heading
      *-------------------------------------------------------------
      *
     O          e    72      h2hdr       0  0
     O               77      h2prexds            20
      *
     O               82                          40 'TF Class Group:'
     O               82      svtfcgcd            44
     O               82      h2tfcgds            61
      *
     O               81                          85 'TF Classification:'
     O               81      svtfclcd            90
     O               81      h2tfclds           122
      *
     O               80                         146 'Item Structure Type:'
     O               80      svistycd      z    151
     O               80      h2istyds           183
      *
      *-------------------------------------------------------------
      * Detail line for product when 'detail' version selected
      *-------------------------------------------------------------
      *
     O          e            l1dtl          1
     O               83      l1prds              24
     O               83      prprcd        z     32
     O               83      predfl              35
     O                       l1wemdy        b    44 '  /  /  '
      * Aggregate
     O                       l1asllb       kb    57
     O                       l1anpram      kb    72
     O                       l1anprpr      mb    82
      * Seaboard
     O                       l1ssllb       kb    95
     O                       l1snsam       kb   110
     O                       l1spr         mb   118
     O                       l1snpram      kb   133
     O                       l1snprpc      kb   141
      * Triumph
     O                       l1tsllb       kb   154
     O                       l1tnsam       kb   169
     O                       l1tpr         mb   177
     O                       l1tnpram      kb   191
     O                       l1tnprpc      kb   198
12011 * Seaboard Triumph Foods
  |  O                       l1xsllb       kb   213
  |  O                       l1xnsam       kb   228
  |  O                       l1xpr         mb   236
  |  O                       l1xnpram      kb   249
12011O                       l1xnprpc      kb   256
      *
      *-------------------------------------------------------------
      * Summary line for product when 'summary' version selected
      *-------------------------------------------------------------
      *
     O          e            l2dtl          1
      *
     O                       l2prds              24
     O                       svprcd        z     32
     O                       svedfl              35
      *
     O                       l2asllb       kb    57
     O                       l2anpram      kb    72
     O                       l2apr         mb    82
      *
     O                       l2ssllb       kb    95
     O                       l2snsam       kb   110
     O                       l2spr         mb   118
     O                       l2snpram      kb   133
     O                       l2snprpc      kb   141
      *
     O                       l2tsllb       kb   154
     O                       l2tnsam       kb   169
     O                       l2tpr         mb   177
     O                       l2tnpram      kb   191
     O                       l2tnprpc      kb   198
      *
12011O                       l2xsllb       kb   213
  |  O                       l2xnsam       kb   228
  |  O                       l2xpr         mb   236
  |  O                       l2xnpram      kb   249
12011O                       l2xnprpc      kb   256
      *
      *
      *-------------------------------------------------------------
      * Total lines
      *-------------------------------------------------------------
      *
     O          e    84      t1tot          1
      * Aggregate
     O                                           56 '-----------'
     O                                           71 '-------------'
     O                                           81 '--------'
      * Seaboard
     O                                           94 '-----------'
     O                                          109 '-------------'
     O                                          117 '-------'
     O                                          132 '-------------'
     O                                          140 '------'
      * Triumph
     O                                          153 '-------------'
     O                                          168 '-------------'
     O                                          176 '-------'
     O                                          190 '-------------'
     O                                          197 '------'
      *
12011 * Seaboard Triumph Foods
  |  O                                          212 '-------------'
  |  O                                          227 '-------------'
  |  O                                          235 '------'
  |  O                                          248 '-------------'
12011O                                          254 '------'
      *
     O          e    71      t2tot       0  0
     O               85                          24 'Product     *'
     O               86                          24 '  Class    **'
     O               87                          24 '  Group   ***'
     O               88                          24 '   Type  ****'
     O               78      t2prexds            24
     O               79      t2rcexds            24
     O               89                          24 'Report Total'
      *
     O          e    72      t2tot       0  0
     O               85                          24 '       Product     *'
     O               86                          24 '          Type    **'
     O               87                          24 'Classification   ***'
     O               88                          24 '   Class Group  ****'
     O               78      t2prexds            24
     O               79      t2rcexds            24
     O               89                          24 'Report Total'
      *
      *
     O          e            t3tot          1
     O                  85   svprcd        z     32
     O               71 86   svisclcd            32
     O               71 87   svisgrcd            32
     O               71 88   svistycd            32
      *
     O               72 86   svistycd            32
     O               72 87   svtfclcd            32
     O               72 88   svtfcgcd            32
      *
     O                       t3asllb       kb    57
     O                       t3anpram      kb    72
     O                       t3apr         mb    82
      *
     O                       t3ssllb       kb    95
     O                       t3snsam       kb   110
     O                       t3spr         mb   118
     O                       t3snpram      kb   133
     O                       t3snprpc      kb   141
      *
     O                       t3tsllb       kb   154
     O                       t3tnsam       kb   169
     O                       t3tpr         mb   177
     O                       t3tnpram      kb   191
     O                       t3tnprpc      kb   198
      *
12011O                       t3xsllb       kb   213
  |  O                       t3xnsam       kb   228
  |  O                       t3xpr         mb   236
  |  O                       t3xnpram      kb   249
12011O                       t3xnprpc      kb   256
      *
      *-------------------------------------------------------------
      * Blank line
      *-------------------------------------------------------------
      *
     O          e            blank       1
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      1
     O                                           19 'No data meets your'
     O                                           39 'selection criteria.'
