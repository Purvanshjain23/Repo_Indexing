      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Sireline: Update Hog Group with Origin Data
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     12/04/01
      *
      *
      *  FUNCTION:   This function updates the group info in the Hog Group
      *              master file with:
      *                  a) the sire line for the group
      *                  b) the origin BGF farm
      *                  c) the origin Nursery farm
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/03/03  LeAnne Fedor
      *           Changed the rules for determining a 'mixed' Sire Line.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl034d   uf   e           k disk
      *  Hog group
      *
      *
     Fhsp327    if   e           k disk
      *  Workfile: Nursery-to-Nursery transfers
      *
      *
     Fhsp329    if   e           k disk
      *  Workfile: Grow finish groups--nursery sources
      *
      *
     Fhsp336    if   e           k disk
      *  Workfile: Nursery groups--BGF source total
      *
      *
     Fhsp340    if   e           k disk
      *  Workfile: Nursery groups--sire line total
      *
      *
     Fhsp350    if   e           k disk
      *  Workfile: Grow finish groups--sire line total
      *
      *
     Fhsp356    if   e           k disk
      *  Workfile: Grow Finish groups--BGF source total
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
     D arrfscd         s              5p 0 dim(500)
     D arrgg0          s              5    dim(500)
     D arrhdpr         s              5  2 dim(500)
      *
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svhgsn          s                   like(w5dnhgsn)
      *
      *
      * Workfields
      *
     D wkonfs          s                   like(w5dnfscd)
     D wkobfs          s                   like(w5dnfscd)
     D wksicd          s                   like(wasicd)
     D wkhdpr          s                   like(wahdpr)
     D wkgg0           s                   like(wagg0)
      *
      *
      * Counters
      *
     D cntobfs         s              3  0
     D cntonfs         s              3  0
     D cntsicd         s              3  0
      *
      * Array indexes
      *
     D x               s              3  0
     D y               s              3  0
      *
     D w               s              3  0
     D z               s              3  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Step 1: Process Grow Finish Groups
      *
     C                   exsr      $gf
      *
      * Step 2: Process Nursery Groups
      *
     C                   exsr      $nur
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /eject
      *----------------------------------------------------------------
      * Process Grow Finish groups
      *----------------------------------------------------------------
      *
     C     $gf           begsr
      *
     C                   move      yes           first
     C     *loval        setll     hsp350
      *
      * Process each grow finish group that ended up with 'sire line' data.
      *
     C                   dou       *in90 = *on                                  Do GF loop
     C                   read      hsp350                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   z-add     wahgsn        svhgsn
     C                   move      no            first
      *
     C                   when      wahgsn <> svhgsn
     C                   exsr      $gfonfs
     C                   exsr      $gfobfs
     C                   exsr      $upd034
     C                   exsr      $clear
     C                   z-add     wahgsn        svhgsn
     C                   endsl
      *
      * Count 'sire lines'
      *
     C                   add       1             cntsicd
      *
      * You will, ultimately, need this sire line if it represents 85% or more of
      * the doses for this group. If no single sire line represents 85% or more, then
      * we will ultimately be trying to find a Cognos Report Grouping that represents
      * 85% or more. So, if you have no sire line that meets the rule, load the
      * percent and Cognos Grouping into arrays for processing at the end of the group.
      *
     C                   if        wahdpr >= 85
     C                   move      wasicd        wksicd
     C                   endif
      *
     C                   if        wksicd = *blank
     C                   move      wagg0         wkgg0
     C                   z-add     wahdpr        wkhdpr
     C                   exsr      $updcognos
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do GF loop
      *
      * Process last GF group
      *
     C                   if        first = no
     C                   exsr      $gfonfs
     C                   exsr      $gfobfs
     C                   exsr      $upd034
     C                   exsr      $clear
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Update the Cognos Report Grouping and associated Head Percent arrays
      *---------------------------------------------------------------------------
      *
     C     $updcognos    begsr
      *
     C                   z-add     1             w
     C     wkgg0         lookup    arrgg0(w)                              92
     C                   if        *in92 = *on                                  If exists
     C                   add       wkhdpr        arrhdpr(w)
     C                   else
     C                   add       1             z
     C                   move      wkgg0         arrgg0(z)
     C                   z-add     wkhdpr        arrhdpr(z)
     C                   endif                                                  If exists
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Read the Cognos Report Grouping and Head Percent arrays
      *---------------------------------------------------------------------------
      *
      * In this subroutine, we are looking for any Cognos Report Grouping whose
      * associated head was 85% or more.
      *
     C     $getcognos    begsr
      *
     C                   do        z             w
      *
     C                   if        arrhdpr(w) >= 85.00
     C                   move      arrgg0(w)     wksicd                   92
     C                   endif
      *
     C                   enddo
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Determine how many Nursery farms delivered pigs to this Grow Finish group
      *---------------------------------------------------------------------------
      *
     C     $gfonfs       begsr
      *
      * Clear farm array
     C                   exsr      $clearfarm
      *
     C     svhgsn        setll     hsp329
      *
     C                   dou       *in91 = *on                                  Do GF/Nur
     C     svhgsn        reade     hsp329                                 91
     C                   if        *in91 = *off and w5orfscd <> 0               If not EOF
      *
     C                   z-add     1             x
     C     w5orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If not there
     C                   add       1             y
     C                   z-add     w5orfscd      arrfscd(y)
     C                   endif                                                  If not there
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do GF/Nur
      *
      * Use the array index as your count of nursery farm sites
      *
     C                   z-add     y             cntonfs
      *
      * If you only had 1 nursery farm, then populate your workfield with
      * that value from the array.
      *
     C                   if        y = 1
     C                   z-add     arrfscd(y)    wkonfs
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Determine how many BGF farms delivered pigs to this Grow Finish group
      *---------------------------------------------------------------------------
      *
     C     $gfobfs       begsr
      *
      * Clear farm array
     C                   exsr      $clearfarm
      *
     C     svhgsn        setll     hsp356
      *
     C                   dou       *in91 = *on                                  Do GF/BGF
     C     svhgsn        reade     hsp356                                 91
     C                   if        *in91 = *off and wborfscd <> 0               If not EOF
      *
     C                   z-add     1             x
     C     wborfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If not there
     C                   add       1             y
     C                   z-add     wborfscd      arrfscd(y)
     C                   endif                                                  If not there
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do GF/BGF
      *
      * Use the array index as your count of BGF farm sites
      *
     C                   z-add     y             cntobfs
      *
      * If you only had 1 BGF farm, then populate your workfield with
      * that value from the array.
      *
     C                   if        y = 1
     C                   z-add     arrfscd(y)    wkobfs
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Process nursery groups
      *----------------------------------------------------------------
      *
     C     $nur          begsr
      *
     C                   move      yes           first
     C     *loval        setll     hsp340
      *
      * Process each nursery group that ended up with 'sire line' data.
      *
     C                   dou       *in90 = *on                                  Do nursery
     C                   read      hsp340                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   z-add     w0hgsn        svhgsn
     C                   move      no            first
      *
     C                   when      w0hgsn <> svhgsn
     C                   exsr      $nuronfs
     C                   exsr      $nurobfs
     C                   exsr      $upd034
     C                   exsr      $clear
     C                   z-add     w0hgsn        svhgsn
     C                   endsl
      *
      * Detail procesing
      *   1) count sire lines
      *
     C                   add       1             cntsicd
      *
      * You will, ultimately, need this sire line if it represents 85% or more of
      * the doses for this group. If no single sire line represents 85% or more, then
      * we will ultimately be trying to find a Cognos Report Grouping that represents
      * 85% or more. So, if you have no sire line that meets the rule, load the
      * percent and Cognos Grouping into arrays for processing at the end of the group.
      *
     C                   if        w0hdpr >= 85
     C                   move      w0sicd        wksicd
     C                   endif
      *
     C                   if        wksicd = *blank
     C                   move      w0gg0         wkgg0
     C                   z-add     w0hdpr        wkhdpr
     C                   exsr      $updcognos
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do nursery
      *
      *
      * Process last Nursery gorup
      *
     C                   if        first = no
     C                   exsr      $gfonfs
     C                   exsr      $gfobfs
     C                   exsr      $upd034
     C                   exsr      $clear
     C                   endif
      *
     C                   endsr
      /eject
      *------------------------------------------------------------------------
      * Determine how many Nursery farms delivered pigs to this Nursery group
      *------------------------------------------------------------------------
      *
     C     $nuronfs      begsr
      *
      * Clear farm array
     C                   exsr      $clearfarm
      *
      *
     C     svhgsn        setll     hsp327
      *
     C                   dou       *in91 = *on                                  Do Nur/Nur
     C     svhgsn        reade     hsp327                                 91
     C                   if        *in91 = *off and w3orfscd <> 0               If not EOF
      *
     C                   z-add     1             x
     C     w3orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If not there
     C                   add       1             y
     C                   z-add     w3orfscd      arrfscd(y)
     C                   endif                                                  If not there
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do Nur/Nur
      *
      * Use the array index as your count of nursery farm sites
      *
     C                   z-add     y             cntonfs
      *
      * If you only had 1 nursery farm, then populate your workfield with
      * that value from the array.
      *
     C                   if        y = 1
     C                   z-add     arrfscd(y)    wkonfs
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Determine how many BGF farms delivered pigs to this Nursery group
      *---------------------------------------------------------------------------
      *
     C     $nurobfs      begsr
      *
      * Clear farm array
     C                   exsr      $clearfarm
      *
      *
     C     svhgsn        setll     hsp336
      *
     C                   dou       *in91 = *on                                  Do Nur/BGF
     C     svhgsn        reade     hsp336                                 91
     C                   if        *in91 = *off and w9orfscd <> 0               If not EOF
      *
     C                   z-add     1             x
     C     w9orfscd      lookup    arrfscd(x)                             92
     C                   if        *in92 = *off                                 If not there
     C                   add       1             y
     C                   z-add     w9orfscd      arrfscd(y)
     C                   endif                                                  If not there
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do Nur/BGF
      *
      * Use the array index as your count of BGF farm sites
      *
     C                   z-add     y             cntobfs
      *
      * If you only had 1 nursery farm, then populate your workfield with
      * that value from the array.
      *
     C                   if        y = 1
     C                   z-add     arrfscd(y)    wkobfs
     C                   endif
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Update Hog Group master
      *----------------------------------------------------------------
      *
     C     $upd034       begsr
      *
     C     svhgsn        chain     hsl034d                            92
     C                   if        *in92 = *off                                 If group hit
      *
      * Sire line
     C                   select
     C                   when      cntsicd = 0
     C                   move      'UNK??'       hggncd
      *
     C                   when      wksicd <> *blank
     C                   move      wksicd        hggncd
     C                   other
      *
      * Determine if you have any 'cognos report grouping' that represents 85% or
      * more of the head for this group in the grouping arrays.
      *
     C                   exsr      $getcognos
      *
     C                   if        wksicd = *blank
     C                   move      'MIXED'       hggncd
     C                   else
     C                   move      wksicd        hggncd
     C                   endif
      *
     C                   endsl
      *
      *
      * Origin nursery farm
      *
     C                   select
     C                   when      cntonfs = 0
     C                   z-add     0             hgonfs
      *
     C                   when      cntonfs = 1
     C                   z-add     wkonfs        hgonfs
      *
     C                   when      cntonfs > 1
     C                   z-add     0             hgonfs
     C                   endsl
      *
      *
      * Origin BGF farm
      *
     C                   select
     C                   when      cntobfs = 0
     C                   z-add     0             hgobfs
      *
     C                   when      cntobfs = 1
     C                   z-add     wkobfs        hgobfs
      *
     C                   when      cntobfs > 1
     C                   z-add     0             hgobfs
     C                   endsl
      *
     C                   update    hgrec
      *
     C                   endif                                                  If group hit
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear accumulators for each group
      *----------------------------------------------------------------
      *
     C     $clear        begsr
      *
     C                   z-add     0             cntonfs
     C                   z-add     0             cntobfs
     C                   z-add     0             cntsicd
      *
     C                   z-add     0             wkonfs
     C                   z-add     0             wkobfs
     C                   move      *blank        wksicd
     C                   move      *blank        wkgg0
     C                   z-add     0             wkhdpr
      *
     C                   move      *blank        arrgg0
     C                   z-add     0             arrhdpr
     C                   z-add     0             w
     C                   z-add     0             z
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear farm array
      *----------------------------------------------------------------
      *
     C     $clearfarm    begsr
      *
     C                   z-add     0             arrfscd
     C                   z-add     0             x
     C                   z-add     0             y
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /EJECT
