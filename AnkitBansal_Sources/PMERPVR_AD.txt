// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMERPVR
// ?Date: 14.08.2025 Time: 03:44:52
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// LCL.Post Flag USR = CND.No
LCL.Post_Flag_USR = 'N';

//?USER: Validate fields

//?Effective Date >= to Job date
CASE;

// IF DTL.Effective Date GE JOB.*Job date
IF DTL.Effective_Date >= JOB.*Job_date;

//?Effective Date >= to Job date
// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - '&1 entered must be equal to or greater than &2.'
ERROR(USR2018);
MSGPARM(DTL.Effective_Date);
MSGPARM(JOB.*Job_date);

ENDIF;

//?Validate ISC  By Effective date
CASE;

// IF DTL.*CMD key is CF11
IF DTL.*CMD_key = '11';

EXECUTE FUNCTION(VAL Existance by Date RT) TYPE(RTVOBJ) FILE(POAXCPP)           AC1923798;
PARAMETER(DTL.Effective_Date);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Not Found
IF LCL.Record_Found_USR = 'N';

// Send error message - 'Item Standard Cost/Date Record Not Found'
ERROR(USR4114);

ENDIF;

//?Validate ISC  By Effective date
// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(VAL Existance by Date RT) TYPE(RTVOBJ) FILE(POAXCPP)           AC1923798;
PARAMETER(DTL.Effective_Date);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// Send error message - 'Item Standard Cost/Date record already exists.'
ERROR(USR4115);

ENDIF;

ENDIF;

// LCL.Day of Week (SYN) USR = DTL.Effective Date *DAY OF WEEK
LCL.Day_of_Week_SYN_USR = DATEDTLS(DTL.Effective_Date 'DW' 1111111 'NONE' 'N' 1);

CASE;

// IF LCL.Day of Week (SYN) USR is Sunday
IF LCL.Day_of_Week_SYN_USR = 7;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Date entered must be a Sunday'
ERROR(USR2170);
MSGPARM(DTL.Effective_Date);

ENDIF;

//?USER: User defined action

//?If Command 11 to delete
CASE;

// IF DTL.*CMD key is CF11
IF DTL.*CMD_key = '11';

//?Delete records
// Call program DLT Prod Cost Rcds    CL.
SBMJOB;
CALL PROGRAM(DLT Prod Cost Rcds    CL) ('PMFDUPC');
PARAMETER(DTL.Effective_Date);
SBMJOBOVR JOB(DLTPRDCST);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

// LCL.Post Flag USR = CND.Yes
LCL.Post_Flag_USR = 'Y';

//?If Command 11 to delete
// IF *OTHERWISE
IF *OTHERWISE;

//?Create the records
// Call program Zzz Prod Cost Rcds    CL.
SBMJOB;
CALL PROGRAM(Zzz Prod Cost Rcds    CL) ('PMEYUPC');
PARAMETER(DTL.Effective_Date);
SBMJOBOVR JOB(BLDPRDCST);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

// LCL.Post Flag USR = CND.Yes
LCL.Post_Flag_USR = 'Y';

ENDIF;

