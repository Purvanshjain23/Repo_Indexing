// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMSAPVR
// ?Date: 14.08.2025 Time: 03:43:55
// ?------------------------------------------------------------------------------------------------

//?USER: Load screen

// DTL.Yes/No Selection      USR = CND.Yes
DTL.Yes_No_Selection_USR = 'Y';

//?USER: Validate relations

CASE;

// IF DTL.Yes/No Selection      USR is *yes/no
IF DTL.Yes_No_Selection_USR = 'N'/'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Value Required.'
ERROR(USR2808);
MSGPARM(DTL.Yes_No_Selection_USR);

ENDIF;

//?USER: User defined action

//?** Print claim report if selection is "Yes"
CASE;

// IF DTL.Yes/No Selection      USR is Yes
IF DTL.Yes_No_Selection_USR = 'Y';

//?** 02/22/2008 LJB E00094 Email Change of Product notice to Triumph Foods
//?Update the System Notes tht trigger this action as completed
//?** Email the claim with message text to distro list
DO;

// LCL.Approval Person Email = PAR.Approval Claim Audit Eml
LCL.Approval_Person_Email = PAR.Approval_Claim_Audit_Eml;

//?** Default Hold & Save to Yes for emailing. Default jobq to *jobd
//?** Default printer values. This report isn't printed so don't prompt.
// PAR.PRT Hold Output Sts = CND.*YES
PAR.PRT_Hold_Output_Sts = *YES;

// PAR.PRT Save Output Sts = CND.*YES
PAR.PRT_Save_Output_Sts = *YES;

// PAR.PRT Night Queue = CND.JOBD
PAR.PRT_Night_Queue = *JOBD;

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Number of Copies = CON.1
PAR.PRT_Number_of_Copies = 1;

EXECUTE FUNCTION(Rtv Default Print Opt RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1277460;
PARAMETER(JOB.*USER);
PARAMETER(PAR.PRT_Printer_Device);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Select the Report.
DO;

//?Dynamically override the SBMJOB command
//?with the job queue from the Print Options screen.
// PGM.*Sbmjob override string = CONCAT(CON.JOBQ(,PAR.PRT Night Queue,CND.*None)
PGM.*Sbmjob_override_string = 'JOBQ(' + PAR.PRT_Night_Queue (*ZERO);

// PGM.*Sbmjob override string = CONCAT(PGM.*Sbmjob override string,CON.),CND.*None)
PGM.*Sbmjob_override_string = PGM.*Sbmjob_override_string + ')' (*ZERO);

// Call program Prt Claim-Claim All   XF.
SBMJOB;
CALL PROGRAM(Prt Claim-Claim All   XF) ('PPL7XFR');
PARAMETER(PAR.Claim_Number);
PARAMETER(PAR.Claim_Company_Number);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER('N');
PARAMETER('N');
PARAMETER('E');
PARAMETER(*BLANK);
PARAMETER(*ZERO);
PARAMETER(LCL.Approval_Person_Email);
PARAMETER(PAR.Claim_Audit_Selection_Usr);
PARAMETER(PAR.Claim_Audit_Co_Value_Usr);
PARAMETER(PAR.Approval_Claim_Audit_Eml);
PARAMETER(*YES);
PARAMETER(*NO);
PARAMETER('A');
SBMJOBOVR JOB(PRTCLMEMAL);
SBMJOBEND;

//?** Send submit message to user.
// Send information message - 'Report has been emailed'
MESSAGE(USR3896 *INFO);

// Call program Crt A/R Claim ExpComSG XF.
CALL PROGRAM(Crt A/R Claim ExpComSG XF) ('PMTNXFR');
PARAMETER(PAR.Claim_Number);
PARAMETER('Claim has been emailed');
PARAMETER('S');
PARAMETER('CLMPRINT');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER('CAR');

ENDDO;

ENDDO;

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

//?** Print claim report if selection is "Yes"
// IF *OTHERWISE
IF *OTHERWISE;

//?Send system note that claim was not emailed
// Call program Crt A/R Claim ExpComSG XF.
CALL PROGRAM(Crt A/R Claim ExpComSG XF) ('PMTNXFR');
PARAMETER(PAR.Claim_Number);
PARAMETER('Claim was not emailed');
PARAMETER('S');
PARAMETER('CLMPRINT');
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*Job_time);
PARAMETER('CAR');

//?Update the System Notes tht trigger this action as completed
EXECUTE FUNCTION(Chg Claim ExpSysActCmplRT) TYPE(RTVOBJ) FILE(PDMNCPP)          AC1878486;
PARAMETER(PAR.Claim_Number);
PARAMETER('CLMCHANGE');
{
 //?USER: Process Data record

 EXECUTE FUNCTION(CHG A/R Claim Explan   CH) TYPE(CHGOBJ) FILE(PDMNCPP)          AC1523481;
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.Claim_Explanation_Line_No);
 PARAMETER(DB1.Claim_Explanation_Text);
 PARAMETER(DB1.Claim_Exp_Usr_Seq_Number);
 PARAMETER(DB1.Claim_Expl_Note_Date);
 PARAMETER(DB1.Claim_Expl_Type_of_Note);
 PARAMETER(DB1.Claim_Expl_Action);
 PARAMETER(JOB.*Job_date);
 PARAMETER(JOB.*Job_time);
 PARAMETER(DB1.Claim_Department_Group);
 PARAMETER(DB1.Record_Status);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

}


ENDIF;

//?USER: Exit program processing

CASE;

// IF DTL.*CMD key is *Exit
IF DTL.*CMD_key = '03';

PGM.*Return_code = 'Y2U9999';

RETURN;

ENDIF;

