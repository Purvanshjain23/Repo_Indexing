// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBLKXFR
// ?Date: 14.08.2025 Time: 03:48:26
// ?------------------------------------------------------------------------------------------------

//?Execute user function

// LCL.Accounting Year = PAR.Year Code - CON.1
LCL.Accounting_Year = PAR.Year_Code - 1;

EXECUTE FUNCTION(Bld Prior Yr Sls Vol  RT) TYPE(RTVOBJ) FILE(PMDHREP)           AC2080994;
PARAMETER(LCL.Accounting_Year);
PARAMETER(PAR.Year_Code);
{
 //?USER: Initialize routine

 EXECUTE FUNCTION(RTV default Company    IF) TYPE(EXCINTFUN)                     AC1592222;
 PARAMETER(LCL.Company_Number);
 {
  //?Execute internal function

  EXECUTE FUNCTION(Rtv Profile Model     RT) TYPE(RTVOBJ) FILE(CADRREP)           AC1445577;
  PARAMETER(JOB.*USER);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Default Co   RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143068;
  PARAMETER(JOB.*USER);
  PARAMETER('P/S');
  PARAMETER(PAR.Company_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Default Co   RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143068;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER('P/S');
  PARAMETER(PAR.Company_Number);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

 }

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Acct Qtr B/E Dte  RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC2101740;
 PARAMETER(LCL.Company_Number);
 PARAMETER(PAR.Year_Code);
 PARAMETER(DB1.Accounting_Quarter);
 PARAMETER(LCL.Period_Beginning_Date);
 PARAMETER(LCL.Period_Ending_Date);
 {
  //?USER: Initialize routine

  // LCL.First Time Flag = CND.Yes
  LCL.First_Time_Flag = 'Y';

  // LCL.Count USR = CON.*ZERO
  LCL.Count_USR = *ZERO;

  // LCL.Day NBR USR = CON.*ZERO
  LCL.Day_NBR_USR = *ZERO;

  // LCL.Accounting Quarter = CON.*ZERO
  LCL.Accounting_Quarter = *ZERO;

  //?USER: Process Data record

  //?FIRST TIME
  CASE;

  // IF LCL.First Time Flag is Yes
  IF LCL.First_Time_Flag = 'Y';

  // LCL.Count USR = CON.1
  LCL.Count_USR = 1;

  // LCL.Day NBR USR = CON.1
  LCL.Day_NBR_USR = 1;

  // LCL.HPS Calendar Week = DB1.HPS Calendar Week
  LCL.HPS_Calendar_Week = DB1.HPS_Calendar_Week;

  // PAR.Period Beginning Date = DB1.Post to G/L Date
  PAR.Period_Beginning_Date = DB1.Post_to_G_L_Date;

  // LCL.First Time Flag = CND.NO
  LCL.First_Time_Flag = 'N';

  ENDIF;

  //?CHG: HPS Calendar Week
  CASE;

  // IF DB1.HPS Calendar Week NE LCL.HPS Calendar Week
  IF DB1.HPS_Calendar_Week <> LCL.HPS_Calendar_Week;

  // LCL.Count USR = LCL.Count USR + CON.1
  LCL.Count_USR = LCL.Count_USR + 1;

  // LCL.Day NBR USR = CON.1
  LCL.Day_NBR_USR = 1;

  // LCL.HPS Calendar Week = DB1.HPS Calendar Week
  LCL.HPS_Calendar_Week = DB1.HPS_Calendar_Week;

  CASE;

  // IF LCL.Count USR is One
  IF LCL.Count_USR = 1;

  // PAR.Period Beginning Date = DB1.Post to G/L Date
  PAR.Period_Beginning_Date = DB1.Post_to_G_L_Date;

  ENDIF;

  //?CHG: HPS Calendar Week
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Day NBR USR = LCL.Day NBR USR + CON.1
  LCL.Day_NBR_USR = LCL.Day_NBR_USR + 1;

  ENDIF;

  //?Last Day of the 13th Week
  CASE;

  // IF LCL.Count USR is Thirteen
  IF LCL.Count_USR = 13;

  // AND LCL.Day NBR USR is Seven
  AND LCL.Day_NBR_USR = 7;

  // LCL.Accounting Quarter = LCL.Accounting Quarter + CON.1
  LCL.Accounting_Quarter = LCL.Accounting_Quarter + 1;

  CASE;

  // IF LCL.Accounting Quarter EQ PAR.Accounting Quarter
  IF LCL.Accounting_Quarter = PAR.Accounting_Quarter;

  // PAR.Period Ending Date = DB1.Post to G/L Date
  PAR.Period_Ending_Date = DB1.Post_to_G_L_Date;

  QUIT;

  ENDIF;

  // LCL.Count USR = CON.*ZERO
  LCL.Count_USR = *ZERO;

  ENDIF;

  //?USER: Exit processing

  // PAR.Period Ending Date = DB1.Post to G/L Date
  PAR.Period_Ending_Date = DB1.Post_to_G_L_Date;

 }

 // Call program Zzz Mkt SlsVol b/FcsGp XF.
 CALL PROGRAM(Zzz Mkt SlsVol b/FcsGp XF) ('PBLFXFR');
 PARAMETER(LCL.Company_Number);
 PARAMETER(DB1.Market_Code);
 PARAMETER(DB1.Product_Type_Code);
 PARAMETER(PAR.Year_Code);
 PARAMETER(DB1.Accounting_Quarter);
 PARAMETER(LCL.Prior_Year_Actual_Volume);

 EXECUTE FUNCTION(Crt Prior Yr Sls Vol  RT) TYPE(RTVOBJ) FILE(PMDHREP)           AC2081199;
 PARAMETER(DB1.Market_Code);
 PARAMETER(DB1.Product_Type_Code);
 PARAMETER(LCL.Period_Ending_Date);
 PARAMETER(PAR.Year_Code);
 PARAMETER(DB1.Accounting_Quarter);
 PARAMETER(LCL.Prior_Year_Actual_Volume);
 PARAMETER(LCL.Sales_Quota_Type_NOT_USED);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt SM Qtrly Quota    CR) TYPE(CRTOBJ) FILE(PMDHREP)           AC1863984;
  PARAMETER(PAR.Market_Code);
  PARAMETER(PAR.Product_Type_Code);
  PARAMETER(PAR.Period_Ending_Date);
  PARAMETER(PAR.Accounting_Year);
  PARAMETER(PAR.Accounting_Quarter);
  PARAMETER(PAR.Prior_Year_Actual_Volume);
  PARAMETER(PAR.Sales_Quota_Type_NOT_USED);
  PARAMETER(PAR.Percent_of_Prior_Yr_Vol);
  PARAMETER(PAR.Sales_Volume_Target_Quota);
  PARAMETER(LCL.Record_Status);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*BLANK);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

   //?USER: Processing after Data update

   // Call program Bld Weekly Quota      XF.
   CALL PROGRAM(Bld Weekly Quota      XF) ('PMRRXFR');
   PARAMETER(PAR.Market_Code);
   PARAMETER(PAR.Product_Type_Code);
   PARAMETER(PAR.Period_Ending_Date);
   PARAMETER(PAR.Accounting_Year);
   PARAMETER(PAR.Accounting_Quarter);

  }

  //?USER: Process Data record

  // PGM.*Return code = CND.*Normal
  PGM.*Return_code = *BLANK;

 }

}


