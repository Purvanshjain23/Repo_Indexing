     H/TITLE Chk for Pricing Error XF  Execute external functio
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H*  Perform user function
     H*  As defined by action diagram
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Execute external function
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISDREDD
     H* Date          : 12/17/20  Time  : 01:46:00
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKA1CPLPIF  E           K        DISK
      * RSQ : Tattoo Header
      *
      * Long constants
     E                    @CN#    1  04  6   @CN    25
     I@A1CPQB
      * Tattoo Header
      * Renamed input format fields
     I              A1HMNB                          WAHMNB
     I              A1BNNB                          WABNNB
     I              A1BONB                          WABONB
     I              A1CVNB                          WACVNB
     I              A1B0DT                          WAB0DT
     I              A1AWDT                          WAAWDT
     I              A1BICD                          WABICD
     I              A1CPST                          WACPST
     I              A1ACPR                          WAACPR
     I              A1B9PR                          WAB9PR
     I              A1CAPR                          WACAPR
     I              A1C4ST                          WAC4ST
     I              A1AIPR                          WAAIPR
     I              A1A6DT                          WAA6DT
     I              A1C2ST                          WAC2ST
     I              A1CXNB                          WACXNB
     I              A1CWNB                          WACWNB
     I              A1FCNB                          WAFCNB
     I              A1H9NB                          WAH9NB
     I              A1FDNB                          WAFDNB
     I              A1FENB                          WAFENB
     I              A1HENB                          WAHENB
     I              A1HFNB                          WAHFNB
     I              A1CYNB                          WACYNB
     I              A1LRNB                          WALRNB
     I              A1E0NB                          WAE0NB
     I              A1A5PC                          WAA5PC
     I              A1FBNB                          WAFBNB
     I              A1A4PC                          WAA4PC
     I              A1F7NB                          WAF7NB
     I              A1HDNB                          WAHDNB
     I              A1F5NB                          WAF5NB
     I              A1F4NB                          WAF4NB
     I              A1F3NB                          WAF3NB
     I              A1F2NB                          WAF2NB
     I              A1AVPC                          WAAVPC
     I              A1AWPC                          WAAWPC
     I              A1CWPC                          WACWPC
     I              A1A8PC                          WAA8PC
     I              A1A7PC                          WAA7PC
     I              A1B8PR                          WAB8PR
     I              A1AMPR                          WAAMPR
     I              A1ANPR                          WAANPR
     I              A1AYVA                          WAAYVA
     I              A1AWVA                          WAAWVA
     I              A1AOPR                          WAAOPR
     I              A1AXVA                          WAAXVA
     I              A1APPR                          WAAPPR
     I              A1ASPR                          WAASPR
     I              A1A4VA                          WAA4VA
     I              A1ATPR                          WAATPR
     I              A1A5VA                          WAA5VA
     I              A1CBPR                          WACBPR
     I              A1CCPR                          WACCPR
     I              A1LPNB                          WALPNB
     I              A1CDPR                          WACDPR
     I              A1A7VA                          WAA7VA
     I              A1A2PR                          WAA2PR
     I              A1JWST                          WAJWST
     I              A1CWST                          WACWST
     I              A1D7ST                          WAD7ST
     I              A1D8ST                          WAD8ST
     I              A1DWST                          WADWST
     I              A1D6ST                          WAD6ST
     I              A1GHNB                          WAGHNB
     I              A1BYDT                          WABYDT
     I              A1E0ST                          WAE0ST
     I              A1E1ST                          WAE1ST
     I              A1E2ST                          WAE2ST
     I              A1BSDT                          WABSDT
     I              A1BTDT                          WABTDT
     I              A1BUDT                          WABUDT
     I              A1HGNB                          WAHGNB
     I              A1HHNB                          WAHHNB
     I              A1HINB                          WAHINB
     I              A1A3PR                          WAA3PR
     I              A1A4PR                          WAA4PR
     I              A1A6PR                          WAA6PR
     I              A1J9NB                          WAJ9NB
     I              A1D6PR                          WAD6PR
     I              A1D7PR                          WAD7PR
     I              A1D8PR                          WAD8PR
     I              A1D9PR                          WAD9PR
     I              A1EAPR                          WAEAPR
     I              A1EBPR                          WAEBPR
     I              A1ECPR                          WAECPR
     I              A1EDPR                          WAEDPR
     I              A1EEPR                          WAEEPR
     I              A1EFPR                          WAEFPR
     I              A1EGPR                          WAEGPR
     I              A1EHPR                          WAEHPR
     I              A1KAST                          WAKAST
     I              A1J7ST                          WAJ7ST
     I              A1J9ST                          WAJ9ST
     I              A1OXNB                          WAOXNB
     I              A1LKST                          WALKST
     I              A1LLST                          WALLST
     I              A1J8ST                          WAJ8ST
     I              A1LIST                          WALIST
     I              A1LJST                          WALJST
     I              A1NZTX                          WANZTX
     I              A1HJCD                          WAHJCD
     I              A1R4ST                          WAR4ST
     I              A1R5ST                          WAR5ST
     I              A1R6ST                          WAR6ST
     I              A1R7ST                          WAR7ST
     I              A1THWT                          WATHWT
     I              A1T2WT                          WAT2WT
     I              A1THHD                          WATHHD
     I              A1T2HD                          WAT2HD
     I              A1OBPR                          WAOBPR
     I              A1KOER                          WAKOER
     I              A1OPIR                          WAOPIR
     I              A1OPEM                          WAOPEM
     I              A1IORP                          WAIORP
     I              A1OWEO                          WAOWEO
     I              A1OQET                          WAOQET
     I              A1URST                          WAURST
     I              A1USST                          WAUSST
     I              A1HHPC                          WAHHPC
     I              A1S9PR                          WAS9PR
     I              A1TAPR                          WATAPR
     I              A1TBPR                          WATBPR
     I              A1JFUR                          WAJFUR
     I              A1KRIF                          WAKRIF
     I              A1KORF                          WAKORF
     I              A1KAPR                          WAKAPR
     I              A1KROT                          WAKROT
     I              A1OTJG                          WAOTJG
     I              A1IRJG                          WAIRJG
     I              A1IMJF                          WAIMJF
     I              A1IRGF                          WAIRGF
     I              A1KRJF                          WAKRJF
     I              A1OJRF                          WAOJRF
     I              A1KFOR                          WAKFOR
     I              A1ORJK                          WAORJK
     I              A1OMVJ                          WAOMVJ
     I              A1MVNF                          WAMVNF
     I              A1MCNF                          WAMCNF
     I              A1NCNF                          WANCNF
     I              A1NCHF                          WANCHF
     I              A1IGIR                          WAIGIR
     I              A1KFJR                          WAKFJR
     I              A1EADT                          WAEADT
     I              A1EBDT                          WAEBDT
     I              A1ECDT                          WAECDT
     I              A1EDDT                          WAEDDT
     I              A1EEDT                          WAEEDT
     I              A1U4ST                          WAU4ST
     I              A1U5ST                          WAU5ST
     I              A1U6ST                          WAU6ST
     I              A1U7ST                          WAU7ST
     I              A1U8ST                          WAU8ST
     I              A1U9ST                          WAU9ST
     I              A1VAST                          WAVAST
     I              A1VBST                          WAVBST
     I              A1BDCD                          WABDCD
     I              A1CSCD                          WACSCD
     I              A1ABCD                          WAABCD
     I              A1AECD                          WAAECD
     I              A1ACCD                          WAACCD
     I              A1AGCD                          WAAGCD
     I              A1BECD                          WABECD
     I              A1AAVN                          WAAAVN
     I              A1AADT                          WAAADT
     I              A1AMTM                          WAAMTM
     I              A1AJST                          WAAJST
     I              A1AHVN                          WAAHVN
     I              A1AGVN                          WAAGVN
     I              A1ABVN                          WAABVN
     I              A1ABDT                          WAABDT
     I              A1ABTM                          WAABTM
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Tattoo Header
      * I :  BOH Company Number
     I                                    P   1   20P1HMNB
      * I :  TH Kill Date
     I                                    P   3   60P1B0DT
      * I :  TH Source Type
     I                                        7   7 P1KAST
     IP2PARM      DS
      * I :  @Status Edit/Post
     I                                        1   1 P2J2ST
     IP3PARM      DS
      * I :  @Status Unpaid/All Usr
     I                                        1   1 P3J4ST
     IP4PARM      DS
      * B :  Pricing Error
     I                                        1   1 P4LCSS
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1HMNB    PARM           WP0001  30       BOH Company Num
     C           P1B0DT    PARM           WP0002  70       TH Kill Date
     C           P1KAST    PARM           WP0003  1        TH Source Type
     C           P2J2ST    PARM           WP0004  1        @Status Edit/Po
     C           P3J4ST    PARM           WP0005  1        @Status Unpaid/
     C           P4LCSS    PARM P4LCSS    WP0006  1        Pricing Error
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Chk for Pricing Error XF
      * Modification history
     C                     EXSR UASUBR                     Modification hi
      * Rtv Price Err Comp Val IF
      * Modification history
     C                     EXSR UBSUBR                     Modification hi
      * Rtv Company Values    XF - STR Order Management Sys  * HPEPYPRERR
     C                     CALL 'PDGKXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0001  30       BOH Company Num
     C                     PARM @CN,001   WQ0002 10        Company Value C
     C           YL0004    PARM *BLANK    WQ0003 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Break out individual values from the Company Value record
      * CASE: *OTHERWISE
     C                     Z-ADD1         YRSW00
     C                     Z-ADD7         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0001    P  90  Co Chks for Pri
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD18        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0002    P  90  Error Level - W
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD26        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0003    P  90  Error Level - P
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * If Company checks for Pricing Errors
      * CASE: LCL.Co Chks for Price Errors is Yes
     C           YL0001    IFEQ 'Y'                        *IF
      * Initially, set the Company Value for Pricing Error to N
     C                     MOVEL'N'       YL0003           Error Level - P
      * Upd Price Err Comp Val IF
      * Retrieve existing values.
      * Rtv Price Err Comp Val IF
      * Modification history
     C                     EXSR UCSUBR                     Modification hi
      * Rtv Company Values    XF - STR Order Management Sys  * HPEPYPRERR
     C                     CALL 'PDGKXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0004  30       BOH Company Num
     C                     PARM @CN,001   WQ0005 10        Company Value C
     C           YL0004    PARM *BLANK    WQ0006 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Break out individual values from the Company Value record
      * CASE: *OTHERWISE
     C                     Z-ADD1         YRSW00
     C                     Z-ADD7         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0005    P  90  Co Chks for Pri
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD18        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0006    P  90  Error Level - W
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD26        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0007    P  90  Error Level - P
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * Does company run Pricing Errors report
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.Co Chks for Price Errors is Blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0001    IFEQ *BLANK                     *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVELYL0001    YL0005           Co Chks for Pri
     C                     END                             *FI
     C                     Z-ADD*ZEROS    ZQ      50
     C           @CN,002   CAT  YL0005:ZQ YL0008    P      System Value Al
      * What is the highest level of error allowed. W=Warning and H=Hard
      * CASE: PAR.Error Level - Warn/Hard is *ALL values
     C           YL0002    IFEQ 'N'                        *IF
     C           YL0002    OREQ 'H'
     C           YL0002    OREQ 'W'
     C                     MOVELYL0002    YL0006           Error Level - W
     C                     END                             *FI
     C                     Z-ADD1         ZQ      50
     C           YL0008    CAT  @CN,003:ZQYL0008    P      System Value Al
     C                     Z-ADD*ZEROS    ZQ      50
     C           YL0008    CAT  YL0006:ZQ YL0008    P      System Value Al
      * What is the highest level of error detected
      * CASE: PAR.Error Level - Pricing is *ALL values
     C           YL0003    IFEQ 'N'                        *IF
     C           YL0003    OREQ 'H'
     C           YL0003    OREQ 'W'
     C                     MOVELYL0003    YL0007           Error Level - P
     C                     END                             *FI
     C                     Z-ADD1         ZQ      50
     C           YL0008    CAT  @CN,004:ZQYL0008    P      System Value Al
     C                     Z-ADD*ZEROS    ZQ      50
     C           YL0008    CAT  YL0007:ZQ YL0008    P      System Value Al
      * Upd Repayment Backup  XF - STR Order Management Sys  * HPEPYPRCER
     C                     CALL 'PUKMXFR'              90  Upd Repayment B
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0007  30       Company Number
     C                     PARM @CN,001   WQ0008 10        Company Value C
     C                     PARM YL0008    WQ0009 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUKMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Chk for Pricing Error RT - Tattoo Header  * 
     C                     EXSR SARVGN
      * Set Pricing Error parameter based on Error Level - Pricing value
      * CASE: LCL.Error Level - Pricing is None
     C           YL0003    IFEQ 'N'                        *IF
     C                     MOVEL'N'       P4LCSS           Pricing Error
     C                     ELSE
      * CASE: *OTHERWISE
      * Update the Company Value with the highest error level detected
      * Upd Price Err Comp Val IF
      * Retrieve existing values.
      * Rtv Price Err Comp Val IF
      * Modification history
     C                     EXSR UDSUBR                     Modification hi
      * Rtv Company Values    XF - STR Order Management Sys  * HPEPYPRERR
     C                     CALL 'PDGKXFR'              90  Rtv Company Val
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0010  30       BOH Company Num
     C                     PARM @CN,001   WQ0011 10        Company Value C
     C           YL0004    PARM *BLANK    WQ0012 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDGKXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * Break out individual values from the Company Value record
      * CASE: *OTHERWISE
     C                     Z-ADD1         YRSW00
     C                     Z-ADD7         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0005    P  90  Co Chks for Pri
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD18        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0006    P  90  Error Level - W
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD1         YRSW00
     C                     Z-ADD26        ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00040
     C           ZQ        ORGT 00040
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTYL0004:ZQ YL0007    P  90  Error Level - P
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
      * Does company run Pricing Errors report
      * CASE:
      *  - NOTc1
      *   |- c1    : PAR.Co Chks for Price Errors is Blank
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0001    IFEQ *BLANK                     *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVELYL0001    YL0005           Co Chks for Pri
     C                     END                             *FI
     C                     Z-ADD*ZEROS    ZQ      50
     C           @CN,002   CAT  YL0005:ZQ YL0008    P      System Value Al
      * What is the highest level of error allowed. W=Warning and H=Hard
      * CASE: PAR.Error Level - Warn/Hard is *ALL values
     C           YL0002    IFEQ 'N'                        *IF
     C           YL0002    OREQ 'H'
     C           YL0002    OREQ 'W'
     C                     MOVELYL0002    YL0006           Error Level - W
     C                     END                             *FI
     C                     Z-ADD1         ZQ      50
     C           YL0008    CAT  @CN,003:ZQYL0008    P      System Value Al
     C                     Z-ADD*ZEROS    ZQ      50
     C           YL0008    CAT  YL0006:ZQ YL0008    P      System Value Al
      * What is the highest level of error detected
      * CASE: PAR.Error Level - Pricing is *ALL values
     C           YL0003    IFEQ 'N'                        *IF
     C           YL0003    OREQ 'H'
     C           YL0003    OREQ 'W'
     C                     MOVELYL0003    YL0007           Error Level - P
     C                     END                             *FI
     C                     Z-ADD1         ZQ      50
     C           YL0008    CAT  @CN,004:ZQYL0008    P      System Value Al
     C                     Z-ADD*ZEROS    ZQ      50
     C           YL0008    CAT  YL0007:ZQ YL0008    P      System Value Al
      * Upd Repayment Backup  XF - STR Order Management Sys  * HPEPYPRCER
     C                     CALL 'PUKMXFR'              90  Upd Repayment B
     C                     PARM *BLANK    W0RTN   7
     C                     PARM P1HMNB    WQ0013  30       Company Number
     C                     PARM @CN,001   WQ0014 10        Company Value C
     C                     PARM YL0008    WQ0015 40        System Value Al
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PUKMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
     C                     MOVEL'Y'       P4LCSS           Pricing Error
     C                     END                             *FI
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       P4LCSS           Pricing Error
     C                     END                             *FI
      *----------------------------------------------------------------
      * Exit program
     C           AAEXIT    TAG
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Chk for Pricing Error RT - Tattoo Header  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'N'       YL0009           Error Level - P
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAHMNB    WQSA01           BOH Company Num
     C           *LIKE     DEFN WAKAST    WQSA02           TH Source Type
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           BOH Company Num
     C                     KFLD           WQSA02           TH Source Type
      * Setup key
     C                     Z-ADDP1HMNB    WQSA01           BOH Company Num
     C                     MOVELP1KAST    WQSA02           TH Source Type
      * Establish starting position
     C           KRSSA     SETLL@A1CPQB                    *
     C           KRSSA     READE@A1CPQB                  90*
      * Data record not found
     C   90                MOVEL'PRK0061' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * If record Kill Date <= Current Payment Date (PAR.Kill Date)
      * CASE: DB1.TH Kill Date LE PAR.TH Kill Date
     C           WAB0DT    IFLE P1B0DT                     *IF
      * Check Held Overs
      * CASE: Held Over <> 0 AND Held Over Completed Date = 0
      *  - NOTc1 AND c2
      *   |- c1    : DB1.TH Held Over is *Zeros
      *   |- c2    : DB1.TH Held/Ovr Completed Dte is EQ Zero
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           WAH9NB    IFEQ 0                          *IF
     C                     ELSE
     C           WABSDT    IFEQ 0                          *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ELSE
      * CASE: DB1.TH Head Killed is Not Zero
     C           WAFENB    IFNE 0                          *IF
      * Check for Price errors if Payment Type = Carcass Merit
      * CASE: DB1.TH Payment Type is Carcass Merit
     C           WAJ9ST    IFEQ 'C'                        *IF
      * Check Base Market Amt, Gross, Net Payment, & Base Carcass Val
      * CASE: Base Market Amount = 0 OR Base Carcass Value = 0
      *  - c1 OR c4
      *   |- c1    : DB1.TH CM Base Mkt Price Amt is Zeros
      *   |- c4    : DB1.TH CM Base Carcass Value is Zeros
      *   '-
     C           WAANPR    IFEQ 0                          *IF
     C           WAAOPR    OREQ 0                          *OR
      * If no Hard errors detected, set Error Level to Warning
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Error Level - Pricing is Hard
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0009    IFEQ 'H'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'W'       YL0009           Error Level - P
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.TH Payment Gross is Less/Equal Zeros
     C           WACBPR    IFLE 0                          *IF
      * If no Hard errors detected, set Error Level to Warning
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Error Level - Pricing is Hard
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0009    IFEQ 'H'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'W'       YL0009           Error Level - P
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Th Payment Net Amt is Zeros
     C           WACCPR    IFEQ 0                          *IF
      * If no Hard errors detected, set Error Level to Warning
      * CASE:
      *  - NOTc1
      *   |- c1    : LCL.Error Level - Pricing is Hard
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           YL0009    IFEQ 'H'                        *IF
     C                     ELSE
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'W'       YL0009           Error Level - P
     C                     END                             *FI
     C                     ELSE
      * CASE: DB1.Th Payment Net Amt is Less Than Zeros
     C           WACCPR    IFLT 0                          *IF
     C                     MOVEL'H'       YL0009           Error Level - P
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSA     READE@A1CPQB                  90*
     C                     ENDDO
      * USER: Exit processing
      * Determine Error Level - Pricing value
      * CASE: LCL.Error Level - Pricing is None
     C           YL0009    IFEQ 'N'                        *IF
     C                     MOVEL'N'       YL0003           Error Level - P
     C                     ELSE
      * CASE: PAR.Error Level - Warn/Hard is Hard
     C           YL0002    IFEQ 'H'                        *IF
     C                     MOVELYL0009    YL0003           Error Level - P
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'W'       YL0003           Error Level - P
     C                     END                             *FI
     C                     END                             *FI
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         UASUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  1/08/2019 JBB E14281 - Print Payment Errors Report
      * - Function created.  This function first determines if the Compan
      *   does Price Checking.  If yes, the program checks if there are a
      *   Tattoo Header records that are in the process of being paid (SC
      *   where the Base Market Price Amt = 0, Gross Amount = 0, or the N
      *   Payment Amount <= 0, or the Base Carcass Value <= 0. If any
      *   records are found, set the Pricing Error flag to Yes.
      *   the Company Value HPEPYPCERR = N.
      * 11/04/2020 ISE H16853 - Recompiled due to change in Buy Order Num
      *================================================================
     CSR         UAEXIT    ENDSR
      /EJECT
     CSR         UBSUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  2/07/2019 JBB E14281 - Zero Prices on BOL
      *                         Function created.  This function retrieve
      *                         the Company Value record for HPEPYPRCERR.
      *                         Within the retrieved record, there are
      *                         three fields.  This function passes back
      *                         the three values.
      *                         Position  7 - Does the Company print the
      *                                       Price Errors report during
      *                                       the Payment Edit process.
      *                         Position 18 - What is the highest error
      *                                       level that will be checked.
      *                         Position 26 - What is the highest error
      *                                       level found during the
      *                                       Payment Edit process.
      *================================================================
     CSR         UBEXIT    ENDSR
      /EJECT
     CSR         UCSUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  2/07/2019 JBB E14281 - Zero Prices on BOL
      *                         Function created.  This function retrieve
      *                         the Company Value record for HPEPYPRCERR.
      *                         Within the retrieved record, there are
      *                         three fields.  This function passes back
      *                         the three values.
      *                         Position  7 - Does the Company print the
      *                                       Price Errors report during
      *                                       the Payment Edit process.
      *                         Position 18 - What is the highest error
      *                                       level that will be checked.
      *                         Position 26 - What is the highest error
      *                                       level found during the
      *                                       Payment Edit process.
      *================================================================
     CSR         UCEXIT    ENDSR
      /EJECT
     CSR         UDSUBR    BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  2/07/2019 JBB E14281 - Zero Prices on BOL
      *                         Function created.  This function retrieve
      *                         the Company Value record for HPEPYPRCERR.
      *                         Within the retrieved record, there are
      *                         three fields.  This function passes back
      *                         the three values.
      *                         Position  7 - Does the Company print the
      *                                       Price Errors report during
      *                                       the Payment Edit process.
      *                         Position 18 - What is the highest error
      *                                       level that will be checked.
      *                         Position 26 - What is the highest error
      *                                       level found during the
      *                                       Payment Edit process.
      *================================================================
     CSR         UDEXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program: Normal
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAHMNB           BOH Company Num
     C                     Z-ADD*ZERO     WABNNB           BOH Buy Order N
     C                     Z-ADD*ZERO     WABONB           BOL Load Number
     C                     Z-ADD*ZERO     WACVNB           TH Tattoo Numbe
     C                     Z-ADD*ZERO     WAB0DT           TH Kill Date
     C                     Z-ADD*ZERO     WAAWDT           TH Purchase Dat
     C                     Z-ADD*ZERO     WAACPR           TH Live Purchas
     C                     Z-ADD*ZERO     WAB9PR           TH Live Gross A
     C                     Z-ADD*ZERO     WACAPR           TH LIve Net Amt
     C                     Z-ADD*ZERO     WAAIPR           TH Recalc Live
     C                     Z-ADD*ZERO     WAA6DT           TH Pricing Date
     C                     Z-ADD*ZERO     WACXNB           TH Dead On Arri
     C                     Z-ADD*ZERO     WACWNB           TH Head Receive
     C                     Z-ADD*ZERO     WAFCNB           TH Yard Deads
     C                     Z-ADD*ZERO     WAH9NB           TH Held Over
     C                     Z-ADD*ZERO     WAFDNB           TH Head Condemn
     C                     Z-ADD*ZERO     WAFENB           TH Head Killed
     C                     Z-ADD*ZERO     WAHENB           TH Head Adds
     C                     Z-ADD*ZERO     WAHFNB           TH Head Accepte
     C                     Z-ADD*ZERO     WACYNB           TH Live Wgt
     C                     Z-ADD*ZERO     WALRNB           TH Adj Live Wgt
     C                     Z-ADD*ZERO     WAE0NB           TH Hot Wgt
     C                     Z-ADD*ZERO     WAA5PC           TH Tot Loin Eye
     C                     Z-ADD*ZERO     WAFBNB           TH Tot Backfat
     C                     Z-ADD*ZERO     WAA4PC           TH Tot Light Re
     C                     Z-ADD*ZERO     WAF7NB           TH Avg Live Wgt
     C                     Z-ADD*ZERO     WAHDNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     WAF5NB           TH Avg Light Re
     C                     Z-ADD*ZERO     WAF4NB           TH Avg Lean Per
     C                     Z-ADD*ZERO     WAF3NB           TH Avg Loin Eye
     C                     Z-ADD*ZERO     WAF2NB           TH Avg Backfat
     C                     Z-ADD*ZERO     WAAVPC           TH Std Yield Pe
     C                     Z-ADD*ZERO     WAAWPC           TH Actual Yield
     C                     Z-ADD*ZERO     WACWPC           TH Adj Actual Y
     C                     Z-ADD*ZERO     WAA8PC           TH Yield Differ
     C                     Z-ADD*ZERO     WAA7PC           TH Recalc Live
     C                     Z-ADD*ZERO     WAB8PR           TH CM Market Pr
     C                     Z-ADD*ZERO     WAAMPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     WAANPR           TH CM Base Mkt
     C                     Z-ADD*ZERO     WAAYVA           TH CM Sort Disc
     C                     Z-ADD*ZERO     WAAWVA           TH CM Yield Gai
     C                     Z-ADD*ZERO     WAAOPR           TH CM Base Carc
     C                     Z-ADD*ZERO     WAAXVA           TH CM LN AddOn/
     C                     Z-ADD*ZERO     WAAPPR           TH CM Carcass G
     C                     Z-ADD*ZERO     WAASPR           TH Deduction Am
     C                     Z-ADD*ZERO     WAA4VA           TH Total Net WO
     C                     Z-ADD*ZERO     WAATPR           TH Carcass Net
     C                     Z-ADD*ZERO     WAA5VA           TH Additions Am
     C                     Z-ADD*ZERO     WACBPR           TH Payment Gros
     C                     Z-ADD*ZERO     WACCPR           Th Payment Net
     C                     Z-ADD*ZERO     WALPNB           TH AP Voucher/D
     C                     Z-ADD*ZERO     WACDPR           TH Freight Amou
     C                     Z-ADD*ZERO     WAA7VA           TH Accrual Amou
     C                     Z-ADD*ZERO     WAA2PR           TH Fixed Cost A
     C                     Z-ADD*ZERO     WAGHNB           TH Commission A
     C                     Z-ADD*ZERO     WABYDT           TH Voucher Paym
     C                     Z-ADD*ZERO     WABSDT           TH Held/Ovr Com
     C                     Z-ADD*ZERO     WABTDT           TH Commission P
     C                     Z-ADD*ZERO     WABUDT           TH Actual Check
     C                     Z-ADD*ZERO     WAHGNB           TH Shipped Weig
     C                     Z-ADD*ZERO     WAHHNB           TH Avg Hot Wgt
     C                     Z-ADD*ZERO     WAHINB           TH FFLI
     C                     Z-ADD*ZERO     WAA3PR           TH Kill Product
     C                     Z-ADD*ZERO     WAA4PR           TH Cut Product
     C                     Z-ADD*ZERO     WAA6PR           TH Render Produ
     C                     Z-ADD*ZERO     WAJ9NB           TH Head Exclude
     C                     Z-ADD*ZERO     WAD6PR           TH CM Bse Mkt L
     C                     Z-ADD*ZERO     WAD7PR           TH CM Bse Mkt C
     C                     Z-ADD*ZERO     WAD8PR           TH CM Srt Dsc L
     C                     Z-ADD*ZERO     WAD9PR           TH CM Srt Dsc C
     C                     Z-ADD*ZERO     WAEAPR           TH CM Yld G/L L
     C                     Z-ADD*ZERO     WAEBPR           TH CM Yld G/L C
     C                     Z-ADD*ZERO     WAECPR           TH CM Crc Val L
     C                     Z-ADD*ZERO     WAEDPR           TH CM Crc Val C
     C                     Z-ADD*ZERO     WAEEPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     WAEFPR           TH CM Lean Prem
     C                     Z-ADD*ZERO     WAEGPR           TH CM Gross Liv
     C                     Z-ADD*ZERO     WAEHPR           TH CM Gross Car
     C                     Z-ADD*ZERO     WAOXNB           TH HPS Movement
     C                     Z-ADD*ZERO     WATHWT           TH DOA Weight
     C                     Z-ADD*ZERO     WAT2WT           TH Avg Lean % E
     C                     Z-ADD*ZERO     WATHHD           TH HPS Farm Sit
     C                     Z-ADD*ZERO     WAT2HD           TH Shift Held O
     C                     Z-ADD*ZERO     WAOBPR           TH Sorting Amou
     C                     Z-ADD*ZERO     WAKOER           TH Head Identif
     C                     Z-ADD*ZERO     WAOPIR           TH Percent Iden
     C                     Z-ADD*ZERO     WAOPEM           TH Percent Acce
     C                     Z-ADD*ZERO     WAIORP           TH Head Adjuste
     C                     Z-ADD*ZERO     WAOWEO           TH PHA Head Add
     C                     Z-ADD*ZERO     WAHHPC           TH PHA Yield Pe
     C                     Z-ADD*ZERO     WAS9PR           TH PHA Lean Prm
     C                     Z-ADD*ZERO     WATAPR           TH VC Gross Val
     C                     Z-ADD*ZERO     WATBPR           TH Excluded Gro
     C                     Z-ADD*ZERO     WAJFUR           TH Avg Lean %
     C                     Z-ADD*ZERO     WAKRIF           TH Broken Back
     C                     Z-ADD*ZERO     WAKORF           TH Hot Scl Uplo
     C                     Z-ADD*ZERO     WAKAPR           TH Unused Nbr 4
     C                     Z-ADD*ZERO     WAKROT           TH Excluded Car
     C                     Z-ADD*ZERO     WAOTJG           TH Excluded Pre
     C                     Z-ADD*ZERO     WAIRJG           TH Unused Nbr 7
     C                     Z-ADD*ZERO     WAIMJF           TH Unused Nbr 8
     C                     Z-ADD*ZERO     WAIRGF           TH Unused Nbr 9
     C                     Z-ADD*ZERO     WAKRJF           TH Unused Nbr 1
     C                     Z-ADD*ZERO     WAOJRF           TH Break Even P
     C                     Z-ADD*ZERO     WAKFOR           TH Meat Value F
     C                     Z-ADD*ZERO     WAORJK           TH Yld Parm Adj
     C                     Z-ADD*ZERO     WAOMVJ           TH PHA Sort Dis
     C                     Z-ADD*ZERO     WAMVNF           TH Avg Loin Eye
     C                     Z-ADD*ZERO     WAMCNF           TH Avg Backfat
     C                     Z-ADD*ZERO     WANCNF           TH HITCH Old Pa
     C                     Z-ADD*ZERO     WANCHF           TH MPR Sort Los
     C                     Z-ADD*ZERO     WAIGIR           TH Unused Nbr 1
     C                     Z-ADD*ZERO     WAKFJR           TH Unused Nbr 2
     C                     Z-ADD*ZERO     WAEADT           TH Cold Scl Upl
     C                     Z-ADD*ZERO     WAEBDT           TH Cold Scl Upl
     C                     Z-ADD*ZERO     WAECDT           TH Head LFT
     C                     Z-ADD*ZERO     WAEDDT           TH Head EUT/KOA
     C                     Z-ADD*ZERO     WAEEDT           TH Unused Date
     C                     Z-ADD*ZERO     WAAADT           RS Date Changed
     C                     Z-ADD*ZERO     WAAMTM           RS Time Changed
     C                     Z-ADD*ZERO     WAABDT           RS Date Added
     C                     Z-ADD*ZERO     WAABTM           RS Time Added
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Co Chks for Price Errors
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Error Level - Warn/Hard
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Error Level - Pricing
     C                     MOVEL*BLANK    YL0003  1
      * Define local work field System Value Alpha    USR
     C                     MOVEL*BLANK    YL0004 40
      * Define local work field Co Chks for Price Errors
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Error Level - Warn/Hard
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Error Level - Pricing
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field System Value Alpha    USR
     C                     MOVEL*BLANK    YL0008 40
      * Define local work field Error Level - Pricing
     C                     MOVEL*BLANK    YL0009  1
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 HPEPYPRERR
00002 CHECK=
00003 HIERRLVL=
00004 ERROR=
