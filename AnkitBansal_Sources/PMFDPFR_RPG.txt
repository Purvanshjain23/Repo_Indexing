     H/TITLE Prt Bld ISC Trans Sum PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.6 (1547)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISDNGUY
     H* Date          : 06/26/17  Time  : 16:25:16
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPMAKCPL1IF  E           K        DISK
      * RTV : WF ISC Trans Detail Total Retrieval index
      *
     FPMALCPL1IF  E           K        DISK
      * RTV : WF ISC Trans Sum/Pkg Var  Retrieval index
      *
     FCAAFREL6IF  E           K        DISK
      * RSQ : Calendar                  RSQ Co/Date Descending
      *
     FPPBSCPL1IF  E           K        DISK
      * RTV : Inventory Stock Closing   Retrieval index
      *
     FPPBSCPL3IF  E           K        DISK
      * RSQ : Inventory Stock Closing   WeekEnd/Item
      *
     FPMALCPL0IF  E           K        DISK                      A
      * UPD : WF ISC Trans Sum/Pkg Var  Update index
      *
     FPMFDPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Bld ISC Trans Sum PF  Print file
      *
     E                    #L7         7  1
     E                    #L3         3  1
     I@BSCPBJ
      * Inventory Stock Closing   WeekEnd/Item
      * Renamed input format fields
     I              BSAIDX                          WAAIDX
     I              BSB2C3                          WAB2C3
     I              BSGRAA                          WAGRAA
     I              BSEJC7                          WAEJC7
     I              BSV8SX                          WAV8SX
     I              BSGPAA                          WAGPAA
     I              BSGQAA                          WAGQAA
     I              BSW1SX                          WAW1SX
     I              BSF3PR                          WAF3PR
     I              BSBSNY                          WABSNY
     I              BSBTNY                          WABTNY
     I              BSBUNY                          WABUNY
     I              BSGSAA                          WAGSAA
     I              BSGTAA                          WAGTAA
     I              BSOEQT                          WAOEQT
     I              BSMQWG                          WAMQWG
     I              BSOFQT                          WAOFQT
     I              BSMRWG                          WAMRWG
     I              BSOGQT                          WAOGQT
     I              BSMXWG                          WAMXWG
     I              BSOHQT                          WAOHQT
     I              BSMSWG                          WAMSWG
     I              BSOWQT                          WAOWQT
     I              BSNAWG                          WANAWG
     I              BSOIQT                          WAOIQT
     I              BSMTWG                          WAMTWG
     I              BSOJQT                          WAOJQT
     I              BSMUWG                          WAMUWG
     I              BSOKQT                          WAOKQT
     I              BSMVWG                          WAMVWG
     I              BSOLQT                          WAOLQT
     I              BSMWWG                          WAMWWG
     I              BSFQVL                          WAFQVL
     I              BSOMQT                          WAOMQT
     I              BSMYWG                          WAMYWG
     I              BSONQT                          WAONQT
     I              BSMZWG                          WAMZWG
     I              BSOOQT                          WAOOQT
     I              BSM0WG                          WAM0WG
     I              BSDGVN                          WADGVN
     I              BSP9DT                          WAP9DT
     I              BSCTTM                          WACTTM
     I              BSOPQT                          WAOPQT
     I              BSM1WG                          WAM1WG
     I              BSOQQT                          WAOQQT
     I              BSM2WG                          WAM2WG
     I              BSORQT                          WAORQT
     I              BSM3WG                          WAM3WG
     I              BSOSQT                          WAOSQT
     I              BSM4WG                          WAM4WG
     I              BSRCNA                          WARCNA
     I              BSDFVN                          WADFVN
     I              BSP8DT                          WAP8DT
     I              BSCSTM                          WACSTM
     I              BSOTQT                          WAOTQT
     I              BSM5WG                          WAM5WG
     I              BSF4PR                          WAF4PR
     I              BSWBSX                          WAWBSX
     I              BSWNSX                          WAWNSX
     I              BSWOSX                          WAWOSX
     I              BSOUQT                          WAOUQT
     I              BSM6WG                          WAM6WG
     I              BSOVQT                          WAOVQT
     I              BSM7WG                          WAM7WG
     I              BSWCSX                          WAWCSX
     I              BSQADT                          WAQADT
     I              BSWDSX                          WAWDSX
     I              BSVSST                          WAVSST
     I              BSMJDT                          WAMJDT
     I              BSBETM                          WABETM
     I              BSCCVN                          WACCVN
     I              BSCDVN                          WACDVN
     I              BSMKDT                          WAMKDT
     I              BSBFTM                          WABFTM
     I              BSCEVN                          WACEVN
     I              BSCFVN                          WACFVN
      *
     I@ALCPJB
      * WF ISC Trans Sum/Pkg Var  Update index
      * Renamed input format fields
     I              ALAIDX                          WBAIDX
     I              ALB2C3                          WBB2C3
     I              ALGRAA                          WBGRAA
     I              ALEJC7                          WBEJC7
     I              ALMQWG                          WBMQWG
     I              ALM5WG                          WBM5WG
     I              ALOEQT                          WBOEQT
     I              ALOTQT                          WBOTQT
     I              ALM2WG                          WBM2WG
     I              ALOQQT                          WBOQQT
     I              ALM1WG                          WBM1WG
     I              ALOPQT                          WBOPQT
     I              ALNOWG                          WBNOWG
     I              ALOYQT                          WBOYQT
     I              ALNPWG                          WBNPWG
     I              ALOZQT                          WBOZQT
     I              ALNQWG                          WBNQWG
     I              ALNRWG                          WBNRWG
     I              ALNSWG                          WBNSWG
     I              ALNTWG                          WBNTWG
     I              ALNUWG                          WBNUWG
     I              ALNVWG                          WBNVWG
     I              ALO4QT                          WBO4QT
     I              ALO0QT                          WBO0QT
     I              ALO5QT                          WBO5QT
     I              ALO1QT                          WBO1QT
     I              ALO2QT                          WBO2QT
     I              ALO3QT                          WBO3QT
     I              ALNWWG                          WBNWWG
     I              ALO6QT                          WBO6QT
     I              ALNXWG                          WBNXWG
     I              ALO7QT                          WBO7QT
     I              ALNYWG                          WBNYWG
     I              ALO8QT                          WBO8QT
     I              ALNZWG                          WBNZWG
     I              ALO9QT                          WBO9QT
     I              ALN0WG                          WBN0WG
     I              ALPAQT                          WBPAQT
     I              ALN1WG                          WBN1WG
     I              ALPBQT                          WBPBQT
     I              ALN2WG                          WBN2WG
     I              ALPCQT                          WBPCQT
     I              ALN3WG                          WBN3WG
     I              ALPDQT                          WBPDQT
     I              ALN4WG                          WBN4WG
     I              ALPEQT                          WBPEQT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
     IQPMAL1    E DSPMALCPL0
      * UPD : WF ISC Trans Sum/Pkg Var  Update index
      * Renamed input format fields
     I              ALAIDX                          WBAIDX
     I              ALB2C3                          WBB2C3
     I              ALGRAA                          WBGRAA
     I              ALEJC7                          WBEJC7
     I              ALMQWG                          WBMQWG
     I              ALM5WG                          WBM5WG
     I              ALOEQT                          WBOEQT
     I              ALOTQT                          WBOTQT
     I              ALM2WG                          WBM2WG
     I              ALOQQT                          WBOQQT
     I              ALM1WG                          WBM1WG
     I              ALOPQT                          WBOPQT
     I              ALNOWG                          WBNOWG
     I              ALOYQT                          WBOYQT
     I              ALNPWG                          WBNPWG
     I              ALOZQT                          WBOZQT
     I              ALNQWG                          WBNQWG
     I              ALNRWG                          WBNRWG
     I              ALNSWG                          WBNSWG
     I              ALNTWG                          WBNTWG
     I              ALNUWG                          WBNUWG
     I              ALNVWG                          WBNVWG
     I              ALO4QT                          WBO4QT
     I              ALO0QT                          WBO0QT
     I              ALO5QT                          WBO5QT
     I              ALO1QT                          WBO1QT
     I              ALO2QT                          WBO2QT
     I              ALO3QT                          WBO3QT
     I              ALNWWG                          WBNWWG
     I              ALO6QT                          WBO6QT
     I              ALNXWG                          WBNXWG
     I              ALO7QT                          WBO7QT
     I              ALNYWG                          WBNYWG
     I              ALO8QT                          WBO8QT
     I              ALNZWG                          WBNZWG
     I              ALO9QT                          WBO9QT
     I              ALN0WG                          WBN0WG
     I              ALPAQT                          WBPAQT
     I              ALN1WG                          WBN1WG
     I              ALPBQT                          WBPBQT
     I              ALN2WG                          WBN2WG
     I              ALPCQT                          WBPCQT
     I              ALN3WG                          WBN3WG
     I              ALPDQT                          WBPDQT
     I              ALN4WG                          WBN4WG
     I              ALPEQT                          WBPEQT
      *
      /EJECT
     IXDI8T       DS
      * Internal date
     I                                        1   80XDI8DT
     I                                        1   40XDI8CY
     I                                        1   10XDI8CC
     I                                        2   40XDI8YY
     I                                        5   60XDI8MM
     I                                        7   80XDI8DD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: WF ISC Trans Sum/Pkg Var
      * I :  ISC Week Ending Date
     I                                    P   1   50P1AIDX
      * I :  ISC Warehouse Company
     I                                    P   6   70P1B2C3
      * I :  ISC Warehouse Code
     I                                        8  10 P1GRAA
      * N :  WF Trans Total type A
     I                                    P  11  162P1NQWG
      * N :  WF Trans total Type AW
     I                                    P  17  222P1NRWG
      * N :  WF Trans Total type AP
     I                                    P  23  282P1NSWG
      * N :  WF Trans total Type IO
     I                                    P  29  342P1NTWG
      * N :  WF Trans Total type RR
     I                                    P  35  402P1NUWG
      * N :  WF Trans total Type TW
     I                                    P  41  462P1NVWG
      * N :  WF Trans Total type RR qt
     I                                    P  47  522P1O4QT
      * N :  WF Trans Total type A qty
     I                                    P  53  582P1O0QT
      * N :  WF Trans total Type TW qt
     I                                    P  59  642P1O5QT
      * N :  WF Trans total Type AW qt
     I                                    P  65  702P1O1QT
      * N :  WF Trans Total type AP qt
     I                                    P  71  762P1O2QT
      * N :  WF Trans total Type IO qt
     I                                    P  77  822P1O3QT
      * N :  WF Trans Total type R Wgt
     I                                    P  83  882P1N2WG
      * N :  WF Trans Total type R qty
     I                                    P  89  942P1PCQT
      * N :  WF Trans Total type I Wgt
     I                                    P  95 1002P1N3WG
      * N :  WF Trans Total type I qty
     I                                    P 101 1062P1PDQT
     IP2PARM      DS
      * I :  Status - Y or N
     I                                        1   1 P2B8ST
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIDX    PARM           WP0001  80       ISC Week Ending
     C           P1B2C3    PARM           WP0002  30       ISC Warehouse C
     C           P1GRAA    PARM           WP0003  3        ISC Warehouse C
     C           P2B8ST    PARM           WP0004  1        Status - Y or N
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Bld ISC Trans Sum PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$JENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Bld ISC Trans Sum PF: Mainline
      *================================================================
      * Establish starting position
     C           *LOVAL    SETLL@AKCPI8                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        ISC Week Ending
     C                     MOVEL'Y'       W0AL01  1        ISC Warehouse C
     C                     MOVEL'Y'       W0AL02  1        ISC Warehouse C
     C                     MOVEL'Y'       W0AL03  1        ISC Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDAKAIDX    $HAIDX           ISC Week Ending
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDAKAIDX    $GAIDX           ISC Week Ending
     C                     Z-ADDAKB2C3    $GB2C3           ISC Warehouse C
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDAKAIDX    $FAIDX           ISC Week Ending
     C                     Z-ADDAKB2C3    $FB2C3           ISC Warehouse C
     C                     MOVELAKGRAA    $FGRAA           ISC Warehouse C
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDAKAIDX    $EAIDX           ISC Week Ending
     C                     Z-ADDAKB2C3    $EB2C3           ISC Warehouse C
     C                     MOVELAKGRAA    $EGRAA           ISC Warehouse C
     C                     Z-ADDAKEJC7    $EEJC7           ISC Item Code
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDAKAIDX    $DAIDX           ISC Week Ending
     C                     Z-ADDAKB2C3    $DB2C3           ISC Warehouse C
     C                     MOVELAKGRAA    $DGRAA           ISC Warehouse C
     C                     Z-ADDAKEJC7    $DEJC7           ISC Item Code
     C                     MOVELAKBSST    $DBSST           Inventory Trans
     C                     Z-ADDAKA5QT    $DA5QT           Transaction Qua
     C                     Z-ADDAKAHWG    $DAHWG           Transaction Wei
     C                     Z-ADDAKF6NY    $DF6NY           Transaction Pie
     C                     Z-ADDAKAWPC    $DAWPC           Conversion Fact
     C                     MOVELAKHHCD    $DHHCD           U/M - Primary D
     C                     Z-ADDAKAIWG    $DAIWG           Unit Weight
     C                     Z-ADDAKNMWG    $DNMWG           ISC Production
     C                     Z-ADDAKNNWG    $DNNWG           ISC Weight Diff
     C                     Z-ADDAKA5PR    $DA5PR           Commodity Marke
     C                     Z-ADDAKAYVA    $DAYVA           Extended Amount
     C                     MOVELAKAVNA    $DAVNA           Description Lin
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN AKAIDX    WZA001           ISC Week Ending
     C                     Z-ADDAKAIDX    WZA001
     C           *LIKE     DEFN AKB2C3    WZA002           ISC Warehouse C
     C                     Z-ADDAKB2C3    WZA002
     C           *LIKE     DEFN AKGRAA    WZA003           ISC Warehouse C
     C                     MOVELAKGRAA    WZA003
     C           *LIKE     DEFN AKEJC7    WZA004           ISC Item Code
     C                     Z-ADDAKEJC7    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C                     READ @AKCPI8                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        ISC Week Ending
     C                     MOVEL*BLANK    W0AL01  1        ISC Warehouse C
     C                     MOVEL*BLANK    W0AL02  1        ISC Warehouse C
     C                     MOVEL*BLANK    W0AL03  1        ISC Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        ISC Week Ending
     C                     MOVEL'Y'       W0AL01  1        ISC Warehouse C
     C                     MOVEL'Y'       W0AL02  1        ISC Warehouse C
     C                     MOVEL'Y'       W0AL03  1        ISC Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           AKAIDX    IFNE WZA001                     ISC Week Ending
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           AKB2C3    IFNE WZA002                     ISC Warehouse C
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           AKGRAA    IFNE WZA003                     ISC Warehouse C
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           AKEJC7    IFNE WZA004                     ISC Item Code
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of ISC Item Code format
      * Rtv Chg/Crt ISC TranSm RT - WF ISC Trans Summary  * 
     C                     EXSR SARVGN
     C                     Z-ADD*ZERO     P1NQWG           WF Trans Total
     C                     Z-ADD*ZERO     P1NSWG           WF Trans Total
     C                     Z-ADD*ZERO     P1NRWG           WF Trans total
     C                     Z-ADD*ZERO     P1NTWG           WF Trans total
     C                     Z-ADD*ZERO     P1NUWG           WF Trans Total
     C                     Z-ADD*ZERO     P1NVWG           WF Trans total
     C                     Z-ADD*ZERO     P1O0QT           WF Trans Total
     C                     Z-ADD*ZERO     P1O2QT           WF Trans Total
     C                     Z-ADD*ZERO     P1O1QT           WF Trans total
     C                     Z-ADD*ZERO     P1O3QT           WF Trans total
     C                     Z-ADD*ZERO     P1O4QT           WF Trans Total
     C                     Z-ADD*ZERO     P1O5QT           WF Trans total
     C                     Z-ADD*ZERO     P1PDQT           WF Trans Total
     C                     Z-ADD*ZERO     P1PCQT           WF Trans Total
     C                     Z-ADD*ZERO     P1N3WG           WF Trans Total
     C                     Z-ADD*ZERO     P1N2WG           WF Trans Total
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert ISC Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $EEJC7    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$EEJC7    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VEEJC7           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VEEJC7           CD7 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$EKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$FKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert ISC Warehouse Company to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $GB2C3    IFNE 0                          *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$GB2C3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VGB2C3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VGB2C3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$GKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert ISC Week Ending Date to display format
      * Convert date
     C                     Z-ADD$HAIDX    XDI8DT
     C                     EXSR XDV84T
     C                     Z-ADDXDEXDT    VHAIDX
      * Print format
     C                     WRITE$HKEYTTL
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Print format
     C                     WRITE$IFINTTL
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Bld ISC Trans Sum PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Bld ISC Trans Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
      * Print format
     C                     WRITE$C1STPAG
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print ISC Week Ending Date of Prt Bld ISC Trans Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print ISC Warehouse Company of Prt Bld ISC Trans Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print ISC Warehouse Code of Prt Bld ISC Trans Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print ISC Item Code of Prt Bld ISC Trans Sum PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt Bld ISC Trans Sum PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * CASE: DB1.Inventory Trans. Type is Adjustment Quantity
     C           AKBSST    IFEQ 'A'                        *IF
     C                     Z-ADDAKAHWG    P1NQWG           WF Trans Total
     C                     Z-ADDAKA5QT    P1O0QT           WF Trans Total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Adjustment Physical
     C           AKBSST    IFEQ 'AP'                       *IF
     C                     Z-ADDAKAHWG    P1NSWG           WF Trans Total
     C                     Z-ADDAKA5QT    P1O2QT           WF Trans Total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Adjustment Weight
     C           AKBSST    IFEQ 'AW'                       *IF
     C                     Z-ADDAKAHWG    P1NRWG           WF Trans total
     C                     Z-ADDAKA5QT    P1O1QT           WF Trans total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Issue Order Process
     C           AKBSST    IFEQ 'IO'                       *IF
     C                     Z-ADDAKAHWG    P1NTWG           WF Trans total
     C                     Z-ADDAKA5QT    P1O3QT           WF Trans total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Transfer Warehouse
     C           AKBSST    IFEQ 'TW'                       *IF
     C                     Z-ADDAKAHWG    P1NVWG           WF Trans total
     C                     Z-ADDAKA5QT    P1O5QT           WF Trans total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Receipt Production
     C           AKBSST    IFEQ 'RR'                       *IF
     C                     Z-ADDAKAHWG    P1NUWG           WF Trans Total
     C                     Z-ADDAKA5QT    P1O4QT           WF Trans Total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Receipt Miscellaneous
     C           AKBSST    IFEQ 'R'                        *IF
     C                     Z-ADDAKAHWG    P1N2WG           WF Trans Total
     C                     Z-ADDAKA5QT    P1PCQT           WF Trans Total
     C                     ELSE
      * CASE: DB1.Inventory Trans. Type is Issue Miscellaneous
     C           AKBSST    IFEQ 'I'                        *IF
     C                     Z-ADDAKAHWG    P1N3WG           WF Trans Total
     C                     Z-ADDAKA5QT    P1PDQT           WF Trans Total
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Bld ISC Trans Sum PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  2         W0FSUM
     C                     END                             FI
      *
      * * ISC Week Ending Date of Prt Bld ISC Trans Sum PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * ISC Warehouse Company of Prt Bld ISC Trans Sum PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * ISC Warehouse Code of Prt Bld ISC Trans Sum PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * ISC Item Code of Prt Bld ISC Trans Sum PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Bld ISC Trans Sum PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD1         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD4         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * Rtv Chg/Crt ISC TranSm RT - WF ISC Trans Summary  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001 112       ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WN0002 112       ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0003 112       ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WN0004 112       ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0005 112       ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0006 112       ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0007 112       ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0008 112       ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0009 112       WF Estimated En
     C                     Z-ADD*ZERO     WN0010 112       WF Estimated En
     C                     Z-ADD*ZERO     WN0011 112       WF ISC Part/Rej
     C                     Z-ADD*ZERO     WN0012 112       WF ISC Part/Rej
     C                     Z-ADD*ZERO     WN0013 112       WF ISC Floor Pr
     C                     Z-ADD*ZERO     WN0014 112       WF ISC Floor Pr
     C                     Z-ADD*ZERO     WN0015 112       WF ISC Part/Rej
     C                     Z-ADD*ZERO     WN0016 112       WF ISC Part/Rej
     C                     Z-ADD*ZERO     WN0017 112       WF ISC End Inv
     C                     Z-ADD*ZERO     WN0018 112       WF ISC End Inv
     C                     Z-ADD*ZERO     WN0019 112       WF Lst End Inv
     C                     Z-ADD*ZERO     WN0020 112       WF Lst End Inv
     C                     Z-ADD*ZERO     WN0021 112       WF Lst Sun Shp
     C                     Z-ADD*ZERO     WN0022 112       WF Lst Sun Shp
     C                     Z-ADD*ZERO     WN0023 112       WF Lst Unsh/Shi
     C                     Z-ADD*ZERO     WN0024 112       WF Lst Unsh/Shi
     C                     Z-ADD*ZERO     WN0025  70       Weight Sales us
     C                     Z-ADD*ZERO     WN0026  70       Weight End Inv
     C                     Z-ADD*ZERO     WN0027  70       Weight Prod usr
     C                     Z-ADD*ZERO     WN0028  70       Weight Beg Inv
     C                     Z-ADD*ZERO     WN0029  70       Weight Profit/l
     C                     Z-ADD*ZERO     WN0030  80       Last Week Endin
      *
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * RMC Rtv Prior week ending date to get ISC Lst End Inv Adj
      * R9083 06/26/17 DN-Update date conversion due to Synon version dif
     C                     Z-ADD$EAIDX    YL0001           Date Out (8,0)
     C                     MOVELYL0001    WUGWT1           Date (Char-8) U
     C                     Z-ADD6         YRSW00
     C                     Z-ADD3         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00008
     C           ZQ        ORGT 00008
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUGWT1:ZQ WUT7TX    P  90  Date (Char-6) U
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD*ZEROS    ZQ      50
     C           '1'       CAT  WUT7TX:ZQ WUR4TX    P      Date (Alpha) US
     C                     MOVE WUR4TX    WUMADT           To Date
      * Rtv Prior Saturday    RT - Calendar  * 
     C                     EXSR SBRVGN
     C                     MOVEL*BLANK    WUR4TX           Date (Alpha) US
     C                     MOVELWUKDDT    WUR4TX           Date (Alpha) US
     C                     Z-ADD6         YRSW00
     C                     Z-ADD2         ZQ      50
     C           YRSW00    IFLT 1
     C           ZQ        ORLT 1
     C           YRSW00    ORGT 00007
     C           ZQ        ORGT 00007
     C                     MOVEL'Y2U0510' W0RTN
     C                     ELSE
     C           YRSW00    SUBSTWUR4TX:ZQ WUT7TX    P  90  Date (Char-6) U
     C   90                MOVEL'Y2U0510' W0RTN
     C                     END
     C                     Z-ADD0         ZQ      50
     C           '20'      CAT  WUT7TX:ZQ YL0003    P      Date (Char-8) U
     C                     MOVE YL0003    WN0030           Last Week Endin
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           ALAIDX           ISC Week Ending
     C                     KFLD           ALB2C3           ISC Warehouse C
     C                     KFLD           ALGRAA           ISC Warehouse C
     C                     KFLD           ALEJC7           ISC Item Code
      * Setup key
     C                     Z-ADD$EAIDX    ALAIDX           ISC Week Ending
     C                     Z-ADD$EB2C3    ALB2C3           ISC Warehouse C
     C                     MOVEL$EGRAA    ALGRAA           ISC Warehouse C
     C                     Z-ADD$EEJC7    ALEJC7           ISC Item Code
      * Establish starting position
     C           KRSSA     CHAIN@ALCPJC              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3695' W0RTN   7
      * USER: Processing if Data record not found
      * CASE:
      *  - c1ANDc2
      *   |- c1    : PAR.ISC Warehouse Code is Warehouse Code not Blank
      *   |- c2    : PAR.Status - Y or N is Not Yes
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           $EGRAA    IFNE *BLANK                     *IF
     C           P2B8ST    IFEQ *BLANK                     *IF
     C           P2B8ST    OREQ 'N'
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
      * Rtv for WF ISC Dwnld  RT - Inventory Stock Closing  * 
     C                     EXSR SCRVGN
      * Rtv Last Week End Inv RT - Inventory Stock Closing  * 
     C                     EXSR SDRVGN
     C                     ELSE
      * CASE: *OTHERWISE
      * Combine Warehouses
      * Rtv for WF ISC DwnCMB RT - Inventory Stock Closing  * 
     C                     EXSR SERVGN
      * Rtv Last Week EndI-CM RT - Inventory Stock Closing  * 
     C                     EXSR SFRVGN
     C                     END                             *FI
      * RMC take WF ISC Floor Prod Adj Lbs off of compute.theyre in the "
      * RMC add this week's WF ISC End Inv Adj & last week's-rev sign of
     C           0         SUB  WN0019    WN0019           WF Lst End Inv
     C           0         SUB  WN0020    WN0020           WF Lst End Inv
     C           0         SUB  WN0021    WN0021           WF Lst Sun Shp
     C           0         SUB  WN0022    WN0022           WF Lst Sun Shp
     C           0         SUB  WN0023    WN0023           WF Lst Unsh/Shi
     C           0         SUB  WN0024    WN0024           WF Lst Unsh/Shi
     C           0         SUB  WN0011    WN0011           WF ISC Part/Rej
     C           0         SUB  WN0012    WN0012           WF ISC Part/Rej
      * Compute:Est End Inv Lbs
      * PAR.WF Estimated End Inv Lbs =
      *    *COMPUTE (x1 + x2 +x3 +x4 +x5 +x6 +x7+x8+x9+x10+x11+x12+x13+x
      *    14+x15)
      * x1    : PAR.ISC Beg Inv Final Lbs
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.WF Trans Total type A
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.WF Trans total Type AW
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.WF Trans Total type AP
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.WF Trans Total type RR
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.WF Trans total Type TW
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.WF Trans total Type IO
      * +     : PGM.*Synon (17,7) work field
      * x8    : PAR.WF ISC End Inv Adj Lbs
      * +     : PGM.*Synon (17,7) work field
      * x9    : PAR.WF Lst End Inv Adj Lbs
      * +     : PGM.*Synon (17,7) work field
      * x10   : PAR.WF ISC Part/Rej Curr Lbs
      * +     : PGM.*Synon (17,7) work field
      * x11   : PAR.WF ISC Part/Rej Last Lbs
      * +     : PGM.*Synon (17,7) work field
      * x12   : PAR.WF Lst Unsh/Ship Inv Lbs
      * +     : PGM.*Synon (17,7) work field
      * x13   : PAR.WF Lst Sun Shp Inv Adj Lb
      * +     : PGM.*Synon (17,7) work field
      * x14   : PAR.ISC Unsh/Ship Inv Adj Lbs
      * +     : PGM.*Synon (17,7) work field
      * x15   : PAR.ISC Sun Shp Inv Adj Lbs
     C           WN0001    ADD  P1NQWG    W0WD13           *Synon (17,7) w
     C           W0WD13    ADD  P1NRWG    W0WD12           *Synon (17,7) w
     C           W0WD12    ADD  P1NSWG    W0WD11           *Synon (17,7) w
     C           W0WD11    ADD  P1NUWG    W0WD10           *Synon (17,7) w
     C           W0WD10    ADD  P1NVWG    W0WD09           *Synon (17,7) w
     C           W0WD09    ADD  P1NTWG    W0WD08           *Synon (17,7) w
     C           W0WD08    ADD  WN0017    W0WD07           *Synon (17,7) w
     C           W0WD07    ADD  WN0019    W0WD06           *Synon (17,7) w
     C           W0WD06    ADD  WN0015    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  WN0011    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WN0023    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WN0021    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WN0005    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WN0007    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0009           WF Estimated En
      * Compute:Est End Inv Qty
      * PAR.WF Estimated End Inv Qty =
      *    *COMPUTE (x1 + x2 +x3 +x4 +x5 +x6 +x7+x8+x9 +x10+x11+x12+x13+
      *    x14+x15)
      * x1    : PAR.ISC Beg Inv Final Qty
      * +     : PGM.*Synon (17,7) work field
      * x2    : PAR.WF Trans Total type A qty
      * +     : PGM.*Synon (17,7) work field
      * x3    : PAR.WF Trans total Type AW qt
      * +     : PGM.*Synon (17,7) work field
      * x4    : PAR.WF Trans Total type AP qt
      * +     : PGM.*Synon (17,7) work field
      * x5    : PAR.WF Trans Total type RR qt
      * +     : PGM.*Synon (17,7) work field
      * x6    : PAR.WF Trans total Type TW qt
      * +     : PGM.*Synon (17,7) work field
      * x7    : PAR.WF Trans total Type IO qt
      * +     : PGM.*Synon (17,7) work field
      * x8    : PAR.WF ISC End Inv Adj Qty
      * +     : PGM.*Synon (17,7) work field
      * x9    : PAR.WF Lst End Inv Adj Qty
      * +     : PGM.*Synon (17,7) work field
      * x10   : PAR.WF ISC Part/Rej Curr Qty
      * +     : PGM.*Synon (17,7) work field
      * x11   : PAR.WF ISC Part/Rej Last Qty
      * +     : PGM.*Synon (17,7) work field
      * x12   : PAR.WF Lst Sun Shp Inv Adj Qt
      * +     : PGM.*Synon (17,7) work field
      * x13   : PAR.WF Lst Unsh/Ship Inv Qty
      * +     : PGM.*Synon (17,7) work field
      * x14   : PAR.ISC Unsh/Ship Inv Adj Qty
      * +     : PGM.*Synon (17,7) work field
      * x15   : PAR.ISC Sun Shp Inv Adj Qty
     C           WN0003    ADD  P1O0QT    W0WD13           *Synon (17,7) w
     C           W0WD13    ADD  P1O1QT    W0WD12           *Synon (17,7) w
     C           W0WD12    ADD  P1O2QT    W0WD11           *Synon (17,7) w
     C           W0WD11    ADD  P1O4QT    W0WD10           *Synon (17,7) w
     C           W0WD10    ADD  P1O5QT    W0WD09           *Synon (17,7) w
     C           W0WD09    ADD  P1O3QT    W0WD08           *Synon (17,7) w
     C           W0WD08    ADD  WN0018    W0WD07           *Synon (17,7) w
     C           W0WD07    ADD  WN0020    W0WD06           *Synon (17,7) w
     C           W0WD06    ADD  WN0016    W0WD05           *Synon (17,7) w
     C           W0WD05    ADD  WN0012    W0WD04           *Synon (17,7) w
     C           W0WD04    ADD  WN0022    W0WD03           *Synon (17,7) w
     C           W0WD03    ADD  WN0024    W0WD02           *Synon (17,7) w
     C           W0WD02    ADD  WN0006    W0WD01           *Synon (17,7) w
     C           W0WD01    ADD  WN0008    W0WD00           *Synon (17,7) w
     C                     Z-ADDW0WD00    WN0010           WF Estimated En
      * RMC dont calc these two fields 05/16/07
      * Crt WF ISC Trans Sum  CR - WF ISC Trans Sum/Pkg Var  * 
     C                     EXSR SGCRRC
     C                     GOTO SAEXIT
     C                     ENDIF
      *
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * Rtv Prior Saturday    RT - Calendar  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
     C                     MOVEL'Y'       YL0002           First Time Flag
      * Declare restrictor key work fields
     C           *LIKE     DEFN AFAIC3    WQSB01           Company Number
      * Define keylist
     C           KPSSB     KLIST
     C                     KFLD           WQSB01           Company Number
     C                     KFLD           AFBCDT           Post to G/L Dat
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Company Number
      * Setup key
     C                     Z-ADD$EB2C3    WQSB01           Company Number
     C                     Z-ADDWUMADT    AFBCDT           Post to G/L Dat
      * Establish starting position
     C           KPSSB     SETLL@AFREPU                    *
     C           KRSSB     READE@AFREPU                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0018' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUKDDT           Date Out
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: LCL.First Time Flag is Yes
     C           YL0002    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       YL0002           First Time Flag
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.Day of Week is Saturday
     C           AFA9ST    IFEQ '7'                        *IF
     C                     Z-ADDAFBCDT    WUKDDT           Date Out
     C                     GOTO SBEXIT                     *QUIT
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSB     READE@AFREPU                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * Rtv for WF ISC Dwnld  RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           BSAIDX           ISC Week Ending
     C                     KFLD           BSB2C3           ISC Warehouse C
     C                     KFLD           BSGRAA           ISC Warehouse C
     C                     KFLD           BSEJC7           ISC Item Code
      * Setup key
     C                     Z-ADD$EAIDX    BSAIDX           ISC Week Ending
     C                     Z-ADD$EB2C3    BSB2C3           ISC Warehouse C
     C                     MOVEL$EGRAA    BSGRAA           ISC Warehouse C
     C                     Z-ADD$EEJC7    BSEJC7           ISC Item Code
      * Establish starting position
     C           KRSSC     CHAIN@BSCPA6              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3529' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0003           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WN0001           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WN0014           ISC Floor Prod
     C                     Z-ADD*ZERO     WN0013           ISC Floor Prod
     C                     Z-ADD*ZERO     WN0008           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0007           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0006           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0005           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0016           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0015           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0018           ISC End Inv Adj
     C                     Z-ADD*ZERO     WN0017           ISC End Inv Adj
     C                     Z-ADD*ZERO     WN0004           ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0002           ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0025           Weight Sales us
     C                     Z-ADD*ZERO     WN0026           Weight End Inv
     C                     Z-ADD*ZERO     WN0027           Weight Prod usr
     C                     Z-ADD*ZERO     WN0028           Weight Beg Inv
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBSOEQT    WN0003           ISC Beg Inv Fin
     C                     Z-ADDBSMQWG    WN0001           ISC Beg Inv Fin
     C                     Z-ADDBSOWQT    WN0014           ISC Floor Prod
     C                     Z-ADDBSNAWG    WN0013           ISC Floor Prod
     C                     Z-ADDBSOPQT    WN0008           ISC Sun Shp Inv
     C                     Z-ADDBSM1WG    WN0007           ISC Sun Shp Inv
     C                     Z-ADDBSOQQT    WN0006           ISC Unsh/Ship I
     C                     Z-ADDBSM2WG    WN0005           ISC Unsh/Ship I
     C                     Z-ADDBSORQT    WN0016           ISC End Inv Par
     C                     Z-ADDBSM3WG    WN0015           ISC End Inv Par
     C                     Z-ADDBSOSQT    WN0018           ISC End Inv Adj
     C                     Z-ADDBSM4WG    WN0017           ISC End Inv Adj
     C                     Z-ADDBSOTQT    WN0004           ISC End Inv Fin
     C                     Z-ADDBSM5WG    WN0002           ISC End Inv Fin
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.ISC Item U/M - Pricing is Head Set
      *   |- c2    : DB1.ISC Item U/M - Pricing is Each
      *   '-
     C           BSGTAA    IFEQ 'HS'                       *IF
     C           BSGTAA    OREQ 'EA'                       *OR
      * For Casings -- use qty
      * Compute: qty    sales usr
      * PAR.Weight Sales usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Shipment Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSOLQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0025    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0025           Weight Sales us
      * Compute: qty    End inv
      * PAR.Weight End Inv usr =
      *    *COMPUTE ((x2 * x4)+x1)
      * x2    : DB1.ISC End Inv Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
      * +     : PGM.*Synon (15,0) work field
      * x1    : PAR.Weight End Inv usr
     C           BSOTQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    ADD  WN0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Weight End Inv
      * Compute: Qty    prod usr
      * PAR.Weight Prod usr =
      *    *COMPUTE (x1 + ((x2 + x3) * x4))
      * x1    : PAR.Weight Prod usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Floor Production Qty
      * +     : PGM.*Synon (17,7) work field
      * x3    : DB1.ISC Floor Prod Adj Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
     C           BSOHQT    ADD  BSOWQT    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Weight Prod usr
      * Compute: Qty   beg inv us
      * PAR.Weight Beg Inv usr =
      *    *COMPUTE (x1 +( x2 * x3))
      * x1    : PAR.Weight Beg Inv usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Beg Inv Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSOEQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Weight Beg Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute: weight sales usr
      * PAR.Weight Sales usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Shipment Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSMWWG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0025    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0025           Weight Sales us
      * Compute: weight End inv
      * PAR.Weight End Inv usr =
      *    *COMPUTE ((x2 * x4)+x3)
      * x2    : DB1.ISC End Inv Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.Weight End Inv usr
     C           BSM5WG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    ADD  WN0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Weight End Inv
      * Compute: Weight prod usr
      * PAR.Weight Prod usr =
      *    *COMPUTE (x1 + ((x2 + x3) * x4))
      * x1    : PAR.Weight Prod usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Floor Production Lbs
      * +     : PGM.*Synon (17,7) work field
      * x3    : DB1.ISC Floor Prod Adj Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
     C           BSMSWG    ADD  BSNAWG    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Weight Prod usr
      * Compute weight beg inv us
      * PAR.Weight Beg Inv usr =
      *    *COMPUTE (x1 +( x2 * x3))
      * x1    : PAR.Weight Beg Inv usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Beg Inv Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           BSMQWG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Weight Beg Inv
     C                     END                             *FI
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Last Week End Inv RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           BSAIDX           ISC Week Ending
     C                     KFLD           BSB2C3           ISC Warehouse C
     C                     KFLD           BSGRAA           ISC Warehouse C
     C                     KFLD           BSEJC7           ISC Item Code
      * Setup key
     C                     Z-ADDWN0030    BSAIDX           ISC Week Ending
     C                     Z-ADD$EB2C3    BSB2C3           ISC Warehouse C
     C                     MOVEL$EGRAA    BSGRAA           ISC Warehouse C
     C                     Z-ADD$EEJC7    BSEJC7           ISC Item Code
      * Establish starting position
     C           KRSSD     CHAIN@BSCPA6              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3529' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0022           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0021           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0024           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0023           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0012           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0011           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0020           ISC End Inv Adj
     C                     Z-ADD*ZERO     WN0019           ISC End Inv Adj
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBSOPQT    WN0022           ISC Sun Shp Inv
     C                     Z-ADDBSM1WG    WN0021           ISC Sun Shp Inv
     C                     Z-ADDBSOQQT    WN0024           ISC Unsh/Ship I
     C                     Z-ADDBSM2WG    WN0023           ISC Unsh/Ship I
     C                     Z-ADDBSORQT    WN0012           ISC End Inv Par
     C                     Z-ADDBSM3WG    WN0011           ISC End Inv Par
     C                     Z-ADDBSOSQT    WN0020           ISC End Inv Adj
     C                     Z-ADDBSM4WG    WN0019           ISC End Inv Adj
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv for WF ISC DwnCMB RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0001           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WN0002           ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0003           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WN0004           ISC End Inv Fin
     C                     Z-ADD*ZERO     WN0005           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0006           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0007           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0008           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0013           WF ISC Floor Pr
     C                     Z-ADD*ZERO     WN0014           WF ISC Floor Pr
     C                     Z-ADD*ZERO     WN0015           WF ISC Part/Rej
     C                     Z-ADD*ZERO     WN0016           WF ISC Part/Rej
     C                     Z-ADD*ZERO     WN0017           WF ISC End Inv
     C                     Z-ADD*ZERO     WN0018           WF ISC End Inv
     C                     Z-ADD*ZERO     WN0025           Weight Sales us
     C                     Z-ADD*ZERO     WN0026           Weight End Inv
     C                     Z-ADD*ZERO     WN0027           Weight Prod usr
     C                     Z-ADD*ZERO     WN0028           Weight Beg Inv
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIDX    WQSE01           ISC Week Ending
     C           *LIKE     DEFN WAEJC7    WQSE02           ISC Item Code
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           WQSE01           ISC Week Ending
     C                     KFLD           WQSE02           ISC Item Code
      * Setup key
     C                     Z-ADD$EAIDX    WQSE01           ISC Week Ending
     C                     Z-ADD$EEJC7    WQSE02           ISC Item Code
      * Establish starting position
     C           KRSSE     SETLL@BSCPBJ                    *
     C           KRSSE     READE@BSCPBJ                  90*
      * Data record not found
     C   90                MOVEL'USR3529' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.ISC Warehouse Company EQ PAR.ISC Warehouse Company
     C           WAB2C3    IFEQ $EB2C3                     *IF
     C                     ADD  WAMQWG    WN0001           ISC Beg Inv Fin
     C                     ADD  WAOEQT    WN0003           ISC Beg Inv Fin
     C                     ADD  WAM5WG    WN0002           ISC End Inv Fin
     C                     ADD  WAOTQT    WN0004           ISC End Inv Fin
     C                     ADD  WAM2WG    WN0005           ISC Unsh/Ship I
     C                     ADD  WAOQQT    WN0006           ISC Unsh/Ship I
     C                     ADD  WAM1WG    WN0007           ISC Sun Shp Inv
     C                     ADD  WAM1WG    WN0008           ISC Sun Shp Inv
     C                     ADD  WANAWG    WN0013           WF ISC Floor Pr
     C                     ADD  WAOWQT    WN0014           WF ISC Floor Pr
     C                     ADD  WAM4WG    WN0017           WF ISC End Inv
     C                     ADD  WAOSQT    WN0018           WF ISC End Inv
     C                     ADD  WAM3WG    WN0015           WF ISC Part/Rej
     C                     ADD  WAORQT    WN0016           WF ISC Part/Rej
      * CASE:
      *  - c1ORc2
      *   |- c1    : DB1.ISC Item U/M - Pricing is Head Set
      *   |- c2    : DB1.ISC Item U/M - Pricing is Each
      *   '-
     C           WAGTAA    IFEQ 'HS'                       *IF
     C           WAGTAA    OREQ 'EA'                       *OR
      * For Casings -- use qty
      * Compute: qty    sales usr
      * PAR.Weight Sales usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Shipment Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           WAOLQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0025    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0025           Weight Sales us
      * Compute: qty    End inv
      * PAR.Weight End Inv usr =
      *    *COMPUTE ((x2 * x4)+x1)
      * x2    : DB1.ISC End Inv Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
      * +     : PGM.*Synon (15,0) work field
      * x1    : PAR.Weight End Inv usr
     C           WAOTQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    ADD  WN0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Weight End Inv
      * Compute: Qty    prod usr
      * PAR.Weight Prod usr =
      *    *COMPUTE (x1 + ((x2 + x3) * x4))
      * x1    : PAR.Weight Prod usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Floor Production Qty
      * +     : PGM.*Synon (17,7) work field
      * x3    : DB1.ISC Floor Prod Adj Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
     C           WAOHQT    ADD  WAOWQT    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Weight Prod usr
      * Compute: Qty   beg inv us
      * PAR.Weight Beg Inv usr =
      *    *COMPUTE (x1 +( x2 * x3))
      * x1    : PAR.Weight Beg Inv usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Beg Inv Final Qty
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           WAOEQT    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Weight Beg Inv
     C                     ELSE
      * CASE: *OTHERWISE
      * Compute: weight sales usr
      * PAR.Weight Sales usr =
      *    *COMPUTE (x1 + (x2 * x3))
      * x1    : PAR.Weight Sales usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Shipment Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           WAMWWG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0025    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0025           Weight Sales us
      * Compute: weight End inv
      * PAR.Weight End Inv usr =
      *    *COMPUTE ((x2 * x4)+x3)
      * x2    : DB1.ISC End Inv Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
      * +     : PGM.*Synon (15,0) work field
      * x3    : PAR.Weight End Inv usr
     C           WAM5WG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           W0WJ01    ADD  WN0026    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0026           Weight End Inv
      * Compute: Weight prod usr
      * PAR.Weight Prod usr =
      *    *COMPUTE (x1 + ((x2 + x3) * x4))
      * x1    : PAR.Weight Prod usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Floor Production Lbs
      * +     : PGM.*Synon (17,7) work field
      * x3    : DB1.ISC Floor Prod Adj Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x4    : CON.1
     C           WAMSWG    ADD  WANAWG    W0WD02           *Synon (17,7) w
     C           W0WD02    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0027    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0027           Weight Prod usr
      * Compute weight beg inv us
      * PAR.Weight Beg Inv usr =
      *    *COMPUTE (x1 +( x2 * x3))
      * x1    : PAR.Weight Beg Inv usr
      * +     : PGM.*Synon (15,0) work field
      * x2    : DB1.ISC Beg Inv Final Lbs
      * *     : PGM.*Synon (15,0) work field *Rounded
      * x3    : CON.1
     C           WAMQWG    MULT 1         W0WJ01    H      *Synon (15,0) w
     C           WN0028    ADD  W0WJ01    W0WJ00           *Synon (15,0) w
     C                     Z-ADDW0WJ00    WN0028           Weight Beg Inv
     C                     END                             *FI
     C                     END                             *FI
     C           KRSSE     READE@BSCPBJ                  90*
     C                     ENDDO
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * Rtv Last Week EndI-CM RT - Inventory Stock Closing  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * USER: Initialize routine
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0022           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0021           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0024           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0023           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0012           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0011           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0020           ISC End Inv Adj
     C                     Z-ADD*ZERO     WN0019           ISC End Inv Adj
      * Declare restrictor key work fields
     C           *LIKE     DEFN WAAIDX    WQSF01           ISC Week Ending
     C           *LIKE     DEFN WAEJC7    WQSF02           ISC Item Code
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           WQSF01           ISC Week Ending
     C                     KFLD           WQSF02           ISC Item Code
      * Setup key
     C                     Z-ADDWN0030    WQSF01           ISC Week Ending
     C                     Z-ADD$EEJC7    WQSF02           ISC Item Code
      * Establish starting position
     C           KRSSF     SETLL@BSCPBJ                    *
     C           KRSSF     READE@BSCPBJ                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR3529' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     WN0022           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0021           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WN0024           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0023           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WN0012           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0011           ISC End Inv Par
     C                     Z-ADD*ZERO     WN0020           ISC End Inv Adj
     C                     Z-ADD*ZERO     WN0019           ISC End Inv Adj
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: PAR.ISC Warehouse Company EQ DB1.ISC Warehouse Company
     C           $EB2C3    IFEQ WAB2C3                     *IF
     C                     ADD  WAM4WG    WN0019           ISC End Inv Adj
     C                     ADD  WAOSQT    WN0020           ISC End Inv Adj
     C                     ADD  WAM3WG    WN0011           ISC End Inv Par
     C                     ADD  WAORQT    WN0012           ISC End Inv Par
     C                     ADD  WAOPQT    WN0022           ISC Sun Shp Inv
     C                     ADD  WAM1WG    WN0021           ISC Sun Shp Inv
     C                     ADD  WAOQQT    WN0024           ISC Unsh/Ship I
     C                     ADD  WAM2WG    WN0023           ISC Unsh/Ship I
     C                     END                             *FI
     C           KRSSF     READE@BSCPBJ                  90*
     C                     ENDDO
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGCRRC    BEGSR
      *================================================================
      * Crt WF ISC Trans Sum  CR - WF ISC Trans Sum/Pkg Var  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Move all fields to @ALCPJB
     C                     Z-ADD$EAIDX    WBAIDX           ISC Week Ending
     C                     Z-ADD$EB2C3    WBB2C3           ISC Warehouse C
     C                     MOVEL$EGRAA    WBGRAA           ISC Warehouse C
     C                     Z-ADD$EEJC7    WBEJC7           ISC Item Code
     C                     Z-ADDWN0001    WBMQWG           ISC Beg Inv Fin
     C                     Z-ADDWN0002    WBM5WG           ISC End Inv Fin
     C                     Z-ADDWN0003    WBOEQT           ISC Beg Inv Fin
     C                     Z-ADDWN0004    WBOTQT           ISC End Inv Fin
     C                     Z-ADDWN0005    WBM2WG           ISC Unsh/Ship I
     C                     Z-ADDWN0006    WBOQQT           ISC Unsh/Ship I
     C                     Z-ADDWN0007    WBM1WG           ISC Sun Shp Inv
     C                     Z-ADDWN0008    WBOPQT           ISC Sun Shp Inv
     C                     Z-ADDWN0009    WBNOWG           WF Estimated En
     C                     Z-ADDWN0010    WBOYQT           WF Estimated En
     C                     Z-ADDWN0011    WBNPWG           WF ISC Part/Rej
     C                     Z-ADDWN0012    WBOZQT           WF ISC Part/Rej
     C                     Z-ADDP1NQWG    WBNQWG           WF Trans Total
     C                     Z-ADDP1NRWG    WBNRWG           WF Trans total
     C                     Z-ADDP1NSWG    WBNSWG           WF Trans Total
     C                     Z-ADDP1NTWG    WBNTWG           WF Trans total
     C                     Z-ADDP1NUWG    WBNUWG           WF Trans Total
     C                     Z-ADDP1NVWG    WBNVWG           WF Trans total
     C                     Z-ADDP1O4QT    WBO4QT           WF Trans Total
     C                     Z-ADDP1O0QT    WBO0QT           WF Trans Total
     C                     Z-ADDP1O5QT    WBO5QT           WF Trans total
     C                     Z-ADDP1O1QT    WBO1QT           WF Trans total
     C                     Z-ADDP1O2QT    WBO2QT           WF Trans Total
     C                     Z-ADDP1O3QT    WBO3QT           WF Trans total
     C                     Z-ADDWN0013    WBNWWG           WF ISC Floor Pr
     C                     Z-ADDWN0014    WBO6QT           WF ISC Floor Pr
     C                     Z-ADDWN0015    WBNXWG           WF ISC Part/Rej
     C                     Z-ADDWN0016    WBO7QT           WF ISC Part/Rej
     C                     Z-ADDWN0017    WBNYWG           WF ISC End Inv
     C                     Z-ADDWN0018    WBO8QT           WF ISC End Inv
     C                     Z-ADDWN0019    WBNZWG           WF Lst End Inv
     C                     Z-ADDWN0020    WBO9QT           WF Lst End Inv
     C                     Z-ADDWN0021    WBN0WG           WF Lst Sun Shp
     C                     Z-ADDWN0022    WBPAQT           WF Lst Sun Shp
     C                     Z-ADDWN0023    WBN1WG           WF Lst Unsh/Shi
     C                     Z-ADDWN0024    WBPBQT           WF Lst Unsh/Shi
     C                     Z-ADDP1N2WG    WBN2WG           WF Trans Total
     C                     Z-ADDP1PCQT    WBPCQT           WF Trans Total
     C                     Z-ADDP1N3WG    WBN3WG           WF Trans Total
     C                     Z-ADDP1PDQT    WBPDQT           WF Trans Total
     C                     Z-ADD0         WBN4WG           WF Unused Lbs 3
     C                     Z-ADD0         WBPEQT           WF Unused Qty 3
      *
     C           KLCRSG    KLIST
     C                     KFLD           WBAIDX           ISC Week Ending
     C                     KFLD           WBB2C3           ISC Warehouse C
     C                     KFLD           WBGRAA           ISC Warehouse C
     C                     KFLD           WBEJC7           ISC Item Code
      * Check for duplicate primary key
     C           KLCRSG    SETLL@ALCPJB                  90*
     C           *IN90     IFEQ '1'
     C                     MOVEL'USR3696' W0RTN   7
      * Send message 'WF ISC Trans Sum/Pkg V EX'
     C                     MOVEL'USR3696' ZAMSID
     C                     EXSR ZASNMS
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C                     WRITE@ALCPJB                91  *
      *
     C           *IN91     IFEQ '1'
      * Write error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
     C                     ENDIF
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         XDV84T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDI8DD    XDEX01           DD
     C                     Z-ADDXDI8MM    XDEX02           MM
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDI8MM    XDEX01           MM
     C                     Z-ADDXDI8DD    XDEX02           DD
     C           1000      MULT XDI8CC    XDEY02           Y
     C                     ADD  XDI8YY    XDEY02            YYY
     C                     ELSE
      * YMD format
     C           1000      MULT XDI8CC    XDEY01           Y
     C                     ADD  XDI8YY    XDEY01            YYY
     C                     Z-ADDXDI8MM    XDEX03           MM
     C                     Z-ADDXDI8DD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDV84E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P1NQWG           WF Trans Total
     C                     Z-ADD*ZERO     P1NRWG           WF Trans total
     C                     Z-ADD*ZERO     P1NSWG           WF Trans Total
     C                     Z-ADD*ZERO     P1NTWG           WF Trans total
     C                     Z-ADD*ZERO     P1NUWG           WF Trans Total
     C                     Z-ADD*ZERO     P1NVWG           WF Trans total
     C                     Z-ADD*ZERO     P1O4QT           WF Trans Total
     C                     Z-ADD*ZERO     P1O0QT           WF Trans Total
     C                     Z-ADD*ZERO     P1O5QT           WF Trans total
     C                     Z-ADD*ZERO     P1O1QT           WF Trans total
     C                     Z-ADD*ZERO     P1O2QT           WF Trans Total
     C                     Z-ADD*ZERO     P1O3QT           WF Trans total
     C                     Z-ADD*ZERO     P1N2WG           WF Trans Total
     C                     Z-ADD*ZERO     P1PCQT           WF Trans Total
     C                     Z-ADD*ZERO     P1N3WG           WF Trans Total
     C                     Z-ADD*ZERO     P1PDQT           WF Trans Total
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    AKAIDX           ISC Week Ending
     C                     MOVEL*LOVAL    AKB2C3           ISC Warehouse C
     C                     MOVEL*LOVAL    AKGRAA           ISC Warehouse C
     C                     MOVEL*LOVAL    AKEJC7           ISC Item Code
     C                     MOVEL*LOVAL    AKBSST           Inventory Trans
      * Define work field Date (Char-8) USR
     C                     MOVEL*BLANK    WUGWT1  8
      * Define work field Date (Char-6) USR
     C                     MOVEL*BLANK    WUT7TX  6
      * Define work field Date (Alpha) USR
     C                     MOVEL*BLANK    WUR4TX  7
      * Define work field To Date               USR
     C                     Z-ADD*ZERO     WUMADT  70
      * Define work field Date Out
     C                     Z-ADD*ZERO     WUKDDT  70
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WAAIDX           ISC Week Ending
     C                     Z-ADD*ZERO     WAB2C3           ISC Warehouse C
     C                     Z-ADD*ZERO     WAEJC7           ISC Item Code
     C                     Z-ADD*ZERO     WAF3PR           ISC Item Market
     C                     Z-ADD*ZERO     WABSNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABTNY           ISC Item Struct
     C                     Z-ADD*ZERO     WABUNY           ISC Item Struct
     C                     Z-ADD*ZERO     WAOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WAOFQT           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAMRWG           ISC Beg Inv Adj
     C                     Z-ADD*ZERO     WAOGQT           ISC Beg Inv Qty
     C                     Z-ADD*ZERO     WAMXWG           ISC Beg Inv Lbs
     C                     Z-ADD*ZERO     WAOHQT           ISC Floor Produ
     C                     Z-ADD*ZERO     WAMSWG           ISC Floor Produ
     C                     Z-ADD*ZERO     WAOWQT           ISC Floor Prod
     C                     Z-ADD*ZERO     WANAWG           ISC Floor Prod
     C                     Z-ADD*ZERO     WAOIQT           ISC Sales Produ
     C                     Z-ADD*ZERO     WAMTWG           ISC Sales Produ
     C                     Z-ADD*ZERO     WAOJQT           ISC Inventory S
     C                     Z-ADD*ZERO     WAMUWG           ISC Inventory S
     C                     Z-ADD*ZERO     WAOKQT           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAMVWG           ISC Ord Dtl Shi
     C                     Z-ADD*ZERO     WAOLQT           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAMWWG           ISC Shipment Fi
     C                     Z-ADD*ZERO     WAFQVL           ISC FOB Gross A
     C                     Z-ADD*ZERO     WAOMQT           ISC Inventory T
     C                     Z-ADD*ZERO     WAMYWG           ISC Inventory T
     C                     Z-ADD*ZERO     WAONQT           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAMZWG           ISC Misc Invntr
     C                     Z-ADD*ZERO     WAOOQT           ISC Ending Inve
     C                     Z-ADD*ZERO     WAM0WG           ISC Ending Inve
     C                     Z-ADD*ZERO     WAP9DT           ISC End Inv Dat
     C                     Z-ADD*ZERO     WACTTM           ISC End Inv Tim
     C                     Z-ADD*ZERO     WAOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WAOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAM2WG           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WAORQT           ISC End Inv Par
     C                     Z-ADD*ZERO     WAM3WG           ISC End Inv Par
     C                     Z-ADD*ZERO     WAOSQT           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAM4WG           ISC End Inv Adj
     C                     Z-ADD*ZERO     WAP8DT           ISC Ending Inv
     C                     Z-ADD*ZERO     WACSTM           ISC Ending Inv
     C                     Z-ADD*ZERO     WAOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WAF4PR           ISC Warehouse P
     C                     Z-ADD*ZERO     WAOUQT           ISC Commission
     C                     Z-ADD*ZERO     WAM6WG           ISC Unused Lbs
     C                     Z-ADD*ZERO     WAOVQT           ISC TF Exempt N
     C                     Z-ADD*ZERO     WAM7WG           ISC TF Exempt L
     C                     Z-ADD*ZERO     WAQADT           ISC Unused Date
     C                     Z-ADD*ZERO     WAMJDT           Create Date
     C                     Z-ADD*ZERO     WABETM           Create Time
     C                     Z-ADD*ZERO     WAMKDT           Change Date
     C                     Z-ADD*ZERO     WABFTM           Change Time
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBAIDX           ISC Week Ending
     C                     Z-ADD*ZERO     WBB2C3           ISC Warehouse C
     C                     Z-ADD*ZERO     WBEJC7           ISC Item Code
     C                     Z-ADD*ZERO     WBMQWG           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WBM5WG           ISC End Inv Fin
     C                     Z-ADD*ZERO     WBOEQT           ISC Beg Inv Fin
     C                     Z-ADD*ZERO     WBOTQT           ISC End Inv Fin
     C                     Z-ADD*ZERO     WBM2WG           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WBOQQT           ISC Unsh/Ship I
     C                     Z-ADD*ZERO     WBM1WG           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WBOPQT           ISC Sun Shp Inv
     C                     Z-ADD*ZERO     WBNOWG           WF Estimated En
     C                     Z-ADD*ZERO     WBOYQT           WF Estimated En
     C                     Z-ADD*ZERO     WBNPWG           WF ISC Part/Rej
     C                     Z-ADD*ZERO     WBOZQT           WF ISC Part/Rej
     C                     Z-ADD*ZERO     WBNQWG           WF Trans Total
     C                     Z-ADD*ZERO     WBNRWG           WF Trans total
     C                     Z-ADD*ZERO     WBNSWG           WF Trans Total
     C                     Z-ADD*ZERO     WBNTWG           WF Trans total
     C                     Z-ADD*ZERO     WBNUWG           WF Trans Total
     C                     Z-ADD*ZERO     WBNVWG           WF Trans total
     C                     Z-ADD*ZERO     WBO4QT           WF Trans Total
     C                     Z-ADD*ZERO     WBO0QT           WF Trans Total
     C                     Z-ADD*ZERO     WBO5QT           WF Trans total
     C                     Z-ADD*ZERO     WBO1QT           WF Trans total
     C                     Z-ADD*ZERO     WBO2QT           WF Trans Total
     C                     Z-ADD*ZERO     WBO3QT           WF Trans total
     C                     Z-ADD*ZERO     WBNWWG           WF ISC Floor Pr
     C                     Z-ADD*ZERO     WBO6QT           WF ISC Floor Pr
     C                     Z-ADD*ZERO     WBNXWG           WF ISC Part/Rej
     C                     Z-ADD*ZERO     WBO7QT           WF ISC Part/Rej
     C                     Z-ADD*ZERO     WBNYWG           WF ISC End Inv
     C                     Z-ADD*ZERO     WBO8QT           WF ISC End Inv
     C                     Z-ADD*ZERO     WBNZWG           WF Lst End Inv
     C                     Z-ADD*ZERO     WBO9QT           WF Lst End Inv
     C                     Z-ADD*ZERO     WBN0WG           WF Lst Sun Shp
     C                     Z-ADD*ZERO     WBPAQT           WF Lst Sun Shp
     C                     Z-ADD*ZERO     WBN1WG           WF Lst Unsh/Shi
     C                     Z-ADD*ZERO     WBPBQT           WF Lst Unsh/Shi
     C                     Z-ADD*ZERO     WBN2WG           WF Trans Total
     C                     Z-ADD*ZERO     WBPCQT           WF Trans Total
     C                     Z-ADD*ZERO     WBN3WG           WF Trans Total
     C                     Z-ADD*ZERO     WBPDQT           WF Trans Total
     C                     Z-ADD*ZERO     WBN4WG           WF Unused Lbs 3
     C                     Z-ADD*ZERO     WBPEQT           WF Unused Qty 3
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define *Synon program work fields
     C                     Z-ADD*ZEROS    YRSW00  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    YRSW01  50       *Synon (5,0) wo
     C                     Z-ADD*ZEROS    W0WJ01 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WJ00 150       *Synon (15,0) w
     C                     Z-ADD*ZEROS    W0WD02 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD13 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD12 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD11 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD10 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD09 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD08 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD07 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD06 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD05 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD04 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD03 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD01 177       *Synon (17,7) w
     C                     Z-ADD*ZEROS    W0WD00 177       *Synon (17,7) w
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Define local work field Date Out (8,0) USR
     C                     Z-ADD*ZERO     YL0001  80
      * Define local work field First Time Flag
     C                     MOVEL*BLANK    YL0002  1
      * Define local work field Date (Char-8) USR
     C                     MOVEL*BLANK    YL0003  8
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
