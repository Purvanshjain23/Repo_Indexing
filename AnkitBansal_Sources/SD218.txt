      *****************  RPG PROGRAM HEADING  ************************
     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Margin Management
      * PROGRAM:     SD218 - Signal Demand: Item Costs
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     03/06/08
      *
      * FUNCTION: This program builds the Item Costs file.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * Date      Programmer
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fpoaxcpl1  if   e           k disk
      *   Item standard costs
      *
      *
     Fsdp218    o    e           k disk
      *    Signal Demand: Item bill of material
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------
      *  Standalone fields
      *---------------------------------------------------------------
      *
      * Workfields
      *
     D wkcono          s                   like(axaic3) inz(360)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
      *
      *
      ****************************************************************
      * Data Structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * Mainline
      ***************************************************************************************
      *
      * Read/process each active Item Standard Cost record for Company 360.
      * (We anticipate that, later on, we will change our logic to only
      *  send records that have been added/changed since the last send to
      *  Signal Demand.)
      *
     C     wkcono        setll     poaxcpl1
      *
     C                   dou       *in90 = *on                                  Main do
     C     wkcono        reade     poaxcpl1                               90
     C                   if        *in90 = *off and axvsst = 'A'                If not EOF
      *
     C                   z-add     axhgcd        icitcd
     C                   z-add     axedpr        icspco
     C                   z-add     axfupr        icslco
     C                   z-add     axefpr        icsico
     C                   z-add     axfrpr        icsmco
      *
      * Get Synon Effective Date into CCYYMMDD format
      *
     C     *cymd         test(d)                 axaudt                 92
     C                   if        *in92 = *off
     C     *cymd         move      axaudt        wkisodate
     C     *iso          move      wkisodate     icefdt
     C                   endif
      *
     C                   write     icrec
     C                   clear                   icrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C                   endsr
      /EJECT
