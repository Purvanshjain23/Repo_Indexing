// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POH4PFR
// ?Date: 14.08.2025 Time: 12:06:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.USR Display 1 = CND.No
PAR.USR_Display_1 = 'N';

//?USER: Record selection processing

CASE;

// IF PAR.Item Code is Entered
IF PAR.Item_Code <> *ZERO;

// AND PAR.Item Code NE DB1.Item Code
AND PAR.Item_Code <> DB1.Item_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

// TOP.Item Code = PAR.Item Code
TOP_Item_Code = PAR.Item_Code;

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF TOP.Item Code is Entered
IF TOP_Item_Code <> *ZERO;

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Item_Code);
PARAMETER(TOP_Description_Line_One);
PARAMETER(NLL.Description_Line_Two);
PARAMETER(NLL.UOM_Primary);
PARAMETER(NLL.UOM_Second);
PARAMETER(NLL.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Description Line One = CON.All
TOP_Description_Line_One = 'All';

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// PAR.USR Display 1 = CND.Yes
PAR.USR_Display_1 = 'Y';

//?USER: Print required level headings

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number header format

ENDIF;

// SUPPRESSED PRINT Item Code header format

//?USER: On print of detail format

// CUR.Minimum Wgt Per Case USR = CUR.Minimum Weight Per Case
CUR.Minimum_Wgt_Per_Case_USR = CUR.Minimum_Weight_Per_Case;

// CUR.Maximum Wgt Per Case USR = CUR.Maximum Weight Per Case
CUR.Maximum_Wgt_Per_Case_USR = CUR.Maximum_Weight_Per_Case;

EXECUTE FUNCTION(RTV BOX ID FOR ITEM    RT) TYPE(RTVOBJ) FILE(PDIOREP)          AC1396535;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Box_iD);
PARAMETER(CUR.Box_Weight);
PARAMETER(CUR.Box_Description);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // WRK.Unit Weight = CON.*ZERO
 WRK.Unit_Weight = *ZERO;

 EXECUTE FUNCTION(RTV Item Type & PckCD  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1396536;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Component_Item_Code);
 PARAMETER(WRK.Description_Line_One);
 PARAMETER(WRK.Unit_Weight);
 PARAMETER(WRK.Item_Type_Code);
 PARAMETER(PAR.Package_Type_Code);
 PARAMETER(WRK.Pallet_Tare_Weight);
 PARAMETER(WRK.Misc_Tare_Weight);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Package Type Code is Box
 IF PAR.Package_Type_Code = 'B';

 // PAR.Box Description = WRK.Description Line One
 PAR.Box_Description = WRK.Description_Line_One;

 // PAR.Unit Weight = WRK.Unit Weight
 PAR.Unit_Weight = WRK.Unit_Weight;

 // PAR.Box iD = DB1.Component Item Code * CON.1 *
 PAR.Box_iD = DB1.Component_Item_Code * 1;

 QUIT;

 ENDIF;

}


// CUR.Total Tare USR = CUR.Misc Tare Weight + CUR.Box Weight
CUR.Total_Tare_USR = CUR.Misc_Tare_Weight + CUR.Box_Weight;

CASE;

// IF CUR.Piece Count Item is yes
IF CUR.Piece_Count_Item = 'Y';

// AND CUR.U/M - Primary is EQ Boxes
AND CUR.UOM_Primary = 'BX';

// CUR.Text 2 Length USR = CON.E=
CUR.Text_2_Length_USR = 'E=';

// CUR.Number 5,0            USR = CUR.Pieces Per Bag
CUR.Number_50_USR = CUR.Pieces_Per_Bag;

// IF CUR.Catch Weight Status is no
IF CUR.Catch_Weight_Status = 'N';

// CUR.Text 2 Length USR = CON.E=
CUR.Text_2_Length_USR = 'E=';

// CUR.Number 5,0            USR = CUR.Unit Weight
CUR.Number_50_USR = CUR.Unit_Weight;

// CUR.Bags Per Unit = CON.*ZERO
CUR.Bags_Per_Unit = 0;

// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Text 2 Length USR = CON.A=
CUR.Text_2_Length_USR = 'A=';

// CUR.Number 5,0            USR = CUR.Unit Weight
CUR.Number_50_USR = CUR.Unit_Weight;

// CUR.Bags Per Unit = CON.*ZERO
CUR.Bags_Per_Unit = 0;

ENDIF;

//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : Prt FG Pkg BOM        PO
EXECUTE FUNCTION(Prt FG Pkg BOM        PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: Print required level totals

CASE;

IF NEW Item_Code;
// Print Item Code totals format
PRINT Item Code totals format;

ENDIF;

CASE;

IF NEW Company_Number;
// SUPPRESSED PRINT Company Number totals format

ENDIF;

