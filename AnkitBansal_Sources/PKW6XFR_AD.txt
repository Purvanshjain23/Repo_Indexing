// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKW6XFR
// ?Date: 14.08.2025 Time: 02:53:13
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?H16853 ISE 11/05/2020-Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(HPE085) TYPE(EXCINTFUN)                                        AB1189549;
{
 //?Execute internal function

 //?Hog Pop by farm site
}


//?Copied from regular XF.. This one adds the Kill Date to the Report
//? Break header field
// WRK.*Return code = CND.*Normal
WRK.*Return_code = *BLANK;

// Call program Rtv Hog Pop Headings  UP.
CALL PROGRAM(Rtv Hog Pop Headings  UP) ('PDT6XFR');
PARAMETER(WRK.*Return_code);
PARAMETER(PAR.HRH_Type_Of_Distribution);
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(WRK.HRH_Carcass_Hdr_01);
PARAMETER(WRK.HRH_Carcass_Hdr_02);
PARAMETER(WRK.HRH_Carcass_Hdr_03);
PARAMETER(WRK.HRH_Carcass_Hdr_04);
PARAMETER(WRK.HRH_Carcass_Hdr_05);
PARAMETER(WRK.HRH_Carcass_Hdr_06);
PARAMETER(WRK.HRH_Carcass_Hdr_07);
PARAMETER(WRK.HRH_Carcass_Hdr_08);
PARAMETER(WRK.HRH_Carcass_Hdr_09);
PARAMETER(WRK.HRH_Carcass_Hdr_10);
PARAMETER(WRK.HRH_Carcass_Hdr_11);
PARAMETER(WRK.HRH_Carcass_Hdr_12);
PARAMETER(WRK.HRH_Carcass_Hdr_13);
PARAMETER(WRK.HRH_Carcass_Hdr_14);
PARAMETER(WRK.HRH_Carcass_Hdr_15);
PARAMETER(WRK.HRH_Carcass_Hdr_16);
PARAMETER(WRK.HRH_Carcass_Hdr_17);
PARAMETER(WRK.HRH_Carcass_Hdr_18);
PARAMETER(WRK.HRH_Carcass_Hdr_19);
PARAMETER(PAR.Cutout_Matrix_Code_USR);
PARAMETER(PAR.Effective_Month_Day_USR);

//?Read the Hog Pop Dist file
CASE;

// IF PAR.HRH Tattoo Number EQ WRK.Zero USR
IF PAR.HRH_Tattoo_Number = WRK.Zero_USR;

// AND PAR.Report Type Usr is Not by Tattoo
AND PAR.Report_Type_Usr = 'B'/'P'/'S'/'A'/'C'/'F'/'H'/'L'/'K';

CASE;

// IF PAR.PD Producer Code is Blank
IF PAR.PD_Producer_Code = *BLANK;

//?Restrict by Type/Co/ and Position on date
EXECUTE FUNCTION(Rtv Hog Pop Dist-DtPO Rt) TYPE(RTVOBJ) FILE(PKC8CPP)           AB1237484;
PARAMETER(PAR.HRH_Type_Of_Distribution);
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_Type_Of_Distribution);
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_Source_Type);
PARAMETER(PAR.HRH_Payment_Type);
PARAMETER(PAR.HRH_Tattoo_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_To_Kill_Date);
PARAMETER(PAR.HRH_Farm_Site);
PARAMETER(PAR.HRH_Kill_Shift);
PARAMETER(WRK.HRH_Carcass_Hdr_01);
PARAMETER(WRK.HRH_Carcass_Hdr_02);
PARAMETER(WRK.HRH_Carcass_Hdr_03);
PARAMETER(WRK.HRH_Carcass_Hdr_04);
PARAMETER(WRK.HRH_Carcass_Hdr_05);
PARAMETER(WRK.HRH_Carcass_Hdr_06);
PARAMETER(WRK.HRH_Carcass_Hdr_07);
PARAMETER(WRK.HRH_Carcass_Hdr_08);
PARAMETER(WRK.HRH_Carcass_Hdr_09);
PARAMETER(WRK.HRH_Carcass_Hdr_10);
PARAMETER(WRK.HRH_Carcass_Hdr_11);
PARAMETER(WRK.HRH_Carcass_Hdr_12);
PARAMETER(WRK.HRH_Carcass_Hdr_13);
PARAMETER(WRK.HRH_Carcass_Hdr_14);
PARAMETER(WRK.HRH_Carcass_Hdr_15);
PARAMETER(WRK.HRH_Carcass_Hdr_16);
PARAMETER(WRK.HRH_Carcass_Hdr_17);
PARAMETER(WRK.HRH_Carcass_Hdr_18);
PARAMETER(WRK.HRH_Carcass_Hdr_19);
PARAMETER(WRK.HRH_Head_Killed);
PARAMETER(WRK.HRH_AVG_Hot_Weight);
PARAMETER(WRK.HRH_Avg_Live_Wgt);
PARAMETER(WRK.HRH_Avg_Light_Rfl);
PARAMETER(WRK.HRH_Avg_Loin_Eye);
PARAMETER(WRK.HRH_Avg_Back_Fat);
PARAMETER(WRK.HRH_Avg_Lean);
PARAMETER(WRK.HRH_Adjusted);
PARAMETER(PAR.SR_Source_Code);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.HRH_Prdcr_Location_Code);
PARAMETER(PAR.Report_Type_Usr);
PARAMETER(PAR.Cutout_Matrix_Code_USR);
PARAMETER(PAR.Effective_Month_Day_USR);
PARAMETER(PAR.Date_From_USR);
PARAMETER(PAR.Date_To_USR);
{
 //?USER: Initialize routine

 // WRK.Break in data Usr = CND.No
 WRK.Break_in_data_Usr = 'N';

 //?First time set other then blank
 // WRK.HRD Report Break = CON.111
 WRK.HRD_Report_Break = 111;

 //?USER: Process Data record

 //?Selection
 // WRK.Company Number Alpha Usr = DB1.HPD Company Number
 WRK.Company_Number_Alpha_Usr = DB1.HPD_Company_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Check type of distribution
 CASE;

 // IF PAR.HRH Type Of Distribution EQ DB1.HPD Type of Record
 IF PAR.HRH_Type_Of_Distribution = DB1.HPD_Type_of_Record;

 //?Check type of distribution
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Date selection
 CASE;

 // IF DB1.HPD Kill Date LT PAR.HRH From Kill Date
 IF DB1.HPD_Kill_Date < PAR.HRH_From_Kill_Date;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 //?Date selection
 // IF DB1.HPD Kill Date GT PAR.HRH To Kill Date
 IF DB1.HPD_Kill_Date > PAR.HRH_To_Kill_Date;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 QUIT;

 ENDIF;

 //?Source Code
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.SR Source Code EQ WRK.Blank USR
 IF PAR.SR_Source_Code = WRK.Blank_USR;

 // IF DB1.HPD Source Code EQ PAR.SR Source Code
 IF DB1.HPD_Source_Code = PAR.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Source Type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Source Type EQ WRK.Blank USR
 IF PAR.HRH_Source_Type = WRK.Blank_USR;

 // IF DB1.HPD Source Type EQ PAR.HRH Source Type
 IF DB1.HPD_Source_Type = PAR.HRH_Source_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Payment type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Payment Type EQ WRK.Blank USR
 IF PAR.HRH_Payment_Type = WRK.Blank_USR;

 // IF DB1.HPD Payment Type EQ PAR.HRH Payment Type
 IF DB1.HPD_Payment_Type = PAR.HRH_Payment_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Farm site
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Farm Site EQ WRK.Zero USR
 IF PAR.HRH_Farm_Site = WRK.Zero_USR;

 // IF DB1.HPD Farm Site EQ PAR.HRH Farm Site
 IF DB1.HPD_Farm_Site = PAR.HRH_Farm_Site;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Kill Shift
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Kill Shift EQ WRK.Blank USR
 IF PAR.HRH_Kill_Shift = WRK.Blank_USR;

 // IF DB1.HPD Kill Shift EQ PAR.HRH Kill Shift
 IF DB1.HPD_Kill_Shift = PAR.HRH_Kill_Shift;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?RECORD SELECTED = YES
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Build Report Break
 CASE;

 // IF PAR.Report Type Usr is Producer
 IF PAR.Report_Type_Usr = 'P';

 // WRK.Text 10 1 USR = CONCAT(WRK.Company Number Alpha Usr,DB1.HPD Producer Code,CON.1)
 WRK.Text_10_1_USR = WRK.Company_Number_Alpha_Usr + DB1.HPD_Producer_Code (1);

 // WRK.Date Alpha USR = CVTVAR(DB1.HPD Kill Date)
 WRK.Date_Alpha_USR = CVTVAR(DB1.HPD_Kill_Date);

 // WRK.HRD Report Break = CONCAT(WRK.Text 10 1 USR,WRK.Date Alpha USR,CON.1)
 WRK.HRD_Report_Break = WRK.Text_10_1_USR + WRK.Date_Alpha_USR (1);

 //?Pass the individual producer code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(DB1.HPD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer/Location
 IF PAR.Report_Type_Usr = 'L';

 // WRK.Text 10 1 USR = CONCAT(WRK.Company Number Alpha Usr,DB1.HPD Producer Code,CON.1)
 WRK.Text_10_1_USR = WRK.Company_Number_Alpha_Usr + DB1.HPD_Producer_Code (1);

 // WRK.HRD Report Break = CONCAT(WRK.Text 10 1 USR,DB1.HPD Pdcr Location Code,CON.1)
 WRK.HRD_Report_Break = WRK.Text_10_1_USR + DB1.HPD_Pdcr_Location_Code (1);

 //?Pass the individual producer/location code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(DB1.HPD_Producer_Code);
 PARAMETER(DB1.HPD_Pdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Payment Type
 IF PAR.Report_Type_Usr = 'B';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.HPD Payment Type,
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.HPD_Payment_Type (1);

 //?Pass the individual payment type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(DB1.HPD_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Type
 IF PAR.Report_Type_Usr = 'A';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.HPD Source Type,C
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.HPD_Source_Type (1);

 //?Pass the individual source type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(DB1.HPD_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Code
 IF PAR.Report_Type_Usr = 'S';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.HPD Source Code,C
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.HPD_Source_Code (1);

 //?Pass the individual source code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.HPD_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Farm Site
 IF PAR.Report_Type_Usr = 'F';

 //?Farm Site
 CASE;

 // IF DB1.HPD Source Type is Internal
 IF DB1.HPD_Source_Type = 'I';

 // WRK.Farm Site Alpha       USR = CVTVAR(DB1.HPD Farm Site)
 WRK.Farm_Site_Alpha_USR = CVTVAR(DB1.HPD_Farm_Site);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 //?Pass the individual farm site from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(DB1.HPD_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Build Report Break
 // IF PAR.Report Type Usr is Company
 IF PAR.Report_Type_Usr = 'C';

 // WRK.HRD Report Break = WRK.Company Number Alpha Usr
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr;

 //?Pass the nothing from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Shift
 IF PAR.Report_Type_Usr = 'H';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.HPD Kill Shift,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.HPD_Kill_Shift (1);

 //?Pass the individual shift from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(DB1.HPD_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(PAR.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Check for report break
 CASE;

 // IF WRK.HRD Report Break NE WRK.Report Break Save
 IF WRK.HRD_Report_Break <> WRK.Report_Break_Save;

 // WRK.Return Code USR = CND.*Normal
 WRK.Return_Code_USR = *BLANK;

 EXECUTE FUNCTION(Rtv Hog Pop Dtl exists RT) TYPE(RTVOBJ) FILE(PKC9CPP)          AB1171717;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(WRK.Return_Code_USR);
 {
  //?USER: Processing if Data record not found

  // PAR.Return Code USR = CND.*Record does not exist
  PAR.Return_Code_USR = 'Y2U0005';

  //?USER: Process Data record

  // PAR.Return Code USR = CND.*Record already exists
  PAR.Return_Code_USR = 'Y2U0003';

 }

 CASE;

 // IF WRK.Return Code USR is *Record does not exist
 IF WRK.Return_Code_USR = 'Y2U0005';

 // WRK.*Return code = CND.*Normal
 WRK.*Return_code = *BLANK;

 // Call program Crt Hog Pop Dtl Shell UP.
 CALL PROGRAM(Crt Hog Pop Dtl Shell UP) ('PDT7XFR');
 PARAMETER(WRK.*Return_code);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Cutout_Matrix_Code_USR);
 PARAMETER(PAR.Effective_Month_Day_USR);

 //?Read the tattoo header at break and accumulat its totals
 ENDIF;

 // WRK.Report Break Save = WRK.HRD Report Break
 WRK.Report_Break_Save = WRK.HRD_Report_Break;

 ENDIF;

 EXECUTE FUNCTION(Chg Hog Pop for PrmOpt RT) TYPE(RTVOBJ) FILE(PKC9CPP)          AB1237525;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(WRK.HRD_Min_Carcass_Weight);
 PARAMETER(WRK.HRD_Max_Carcass_Weight);
 PARAMETER(WRK.HRD_Min_Live_Weight);
 PARAMETER(WRK.HRD_Max_Live_Weight);
 PARAMETER(DB1.HPD_Carcass_Weight);
 PARAMETER(DB1.HPD_Distribution);
 PARAMETER(DB1.HPD_No_of_Carcass);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.HPD Carcass Weight GE DB1.HRD Min Carcass Weight
  IF PAR.HPD_Carcass_Weight >= DB1.HRD_Min_Carcass_Weight;

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

  ENDIF;

 }

 // Call program Zzz Hog Pop Hdr Outf2 XF.
 CALL PROGRAM(Zzz Hog Pop Hdr Outf2 XF) ('PKW2XFR');
 PARAMETER(WRK.HRD_Min_Carcass_Weight);
 PARAMETER(WRK.HRD_Max_Carcass_Weight);
 PARAMETER(PAR.Date_From_USR);
 PARAMETER(PAR.Date_To_USR);
 PARAMETER(WRK.HRD_Min_Live_Weight);
 PARAMETER(WRK.HRD_Max_Live_Weight);
 PARAMETER(DB1.HPD_Kill_Date);
 PARAMETER(DB1.HPD_Carcass_Weight);
 PARAMETER(DB1.HPD_Distribution);
 PARAMETER(DB1.HPD_No_of_Carcass);
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);

 ENDIF;

}


EXECUTE FUNCTION(Rtv/Chg Avg Hot Wgt   RT) TYPE(RTVOBJ) FILE(PKFBCPP)           AB1238483;
{
 //?USER: Process Data record

 CASE;

 // IF DB1.HRH Dist Carcass Cnt is Greater than 0
 IF DB1.HRH_Dist_Carcass_Cnt > *ZERO;

 // LCL.HRH Avg Hot Wgt = DB1.HRH Total Hot Wgt / DB1.HRH Dist Carcass Cnt *
 LCL.HRH_Avg_Hot_Wgt = DB1.HRH_Total_Hot_Wgt / DB1.HRH_Dist_Carcass_Cnt;

 EXECUTE FUNCTION(Chg Hog Pop Hdr AvgWt CH) TYPE(CHGOBJ) FILE(PKFBCPP)           AB1238484;
 PARAMETER(DB1.HRH_Type_Of_Distribution);
 PARAMETER(DB1.HRH_Min_Carcass_Weight);
 PARAMETER(DB1.HRH_Max_Carcass_Weight);
 PARAMETER(DB1.HRH_Carcass_Hdr);
 PARAMETER(DB1.HRH_From_Kill_Date);
 PARAMETER(DB1.HRH_To_Kill_Date);
 PARAMETER(DB1.HRH_Min_Live_Weight);
 PARAMETER(DB1.HRH_Max_Live_Weight);
 PARAMETER(DB1.HRH_Dist_Carcass_Cnt);
 PARAMETER(DB1.HRH_Total_Hot_Wgt);
 PARAMETER(LCL.HRH_Avg_Hot_Wgt);
 ENDIF;

}


// IF *OTHERWISE
IF *OTHERWISE;

//?Restrict by Type/Co/Producer and Position on date
ENDIF;

ENDIF;

//?Read the Carcass detail file
CASE;

// IF PAR.HRH Tattoo Number GT WRK.Zero USR
IF PAR.HRH_Tattoo_Number > WRK.Zero_USR;

// OR PAR.Report Type Usr is Tattoo
OR PAR.Report_Type_Usr = 'T';

//?no producer selected or no tattoo selected
CASE;

// IF PAR.PD Producer Code is Blank
IF PAR.PD_Producer_Code = *BLANK;

// AND PAR.HRH Tattoo Number is Zero
AND PAR.HRH_Tattoo_Number = *ZERO;

//?Restrict by Co/ and Position on date
EXECUTE FUNCTION(Rtv Hog Pop Crcs-Dte  Rt) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1155274;
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_Type_Of_Distribution);
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_Source_Type);
PARAMETER(PAR.HRH_Payment_Type);
PARAMETER(PAR.HRH_Tattoo_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_To_Kill_Date);
PARAMETER(PAR.HRH_Farm_Site);
PARAMETER(PAR.HRH_Kill_Shift);
PARAMETER(WRK.HRH_Carcass_Hdr_01);
PARAMETER(WRK.HRH_Carcass_Hdr_02);
PARAMETER(WRK.HRH_Carcass_Hdr_03);
PARAMETER(WRK.HRH_Carcass_Hdr_04);
PARAMETER(WRK.HRH_Carcass_Hdr_05);
PARAMETER(WRK.HRH_Carcass_Hdr_06);
PARAMETER(WRK.HRH_Carcass_Hdr_07);
PARAMETER(WRK.HRH_Carcass_Hdr_08);
PARAMETER(WRK.HRH_Carcass_Hdr_09);
PARAMETER(WRK.HRH_Carcass_Hdr_10);
PARAMETER(WRK.HRH_Carcass_Hdr_11);
PARAMETER(WRK.HRH_Carcass_Hdr_12);
PARAMETER(WRK.HRH_Carcass_Hdr_13);
PARAMETER(WRK.HRH_Carcass_Hdr_14);
PARAMETER(WRK.HRH_Carcass_Hdr_15);
PARAMETER(WRK.HRH_Carcass_Hdr_16);
PARAMETER(WRK.HRH_Carcass_Hdr_17);
PARAMETER(WRK.HRH_Carcass_Hdr_18);
PARAMETER(WRK.HRH_Carcass_Hdr_19);
PARAMETER(WRK.HRH_Head_Killed);
PARAMETER(WRK.HRH_AVG_Hot_Weight);
PARAMETER(WRK.HRH_Avg_Live_Wgt);
PARAMETER(WRK.HRH_Avg_Light_Rfl);
PARAMETER(WRK.HRH_Avg_Loin_Eye);
PARAMETER(WRK.HRH_Avg_Back_Fat);
PARAMETER(WRK.HRH_Avg_Lean);
PARAMETER(WRK.HRH_Adjusted);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.HRH_Prdcr_Location_Code);
PARAMETER(WRK.TH_Source_Code_X18_USR);
PARAMETER(PAR.Report_Type_Usr);
PARAMETER(PAR.Cutout_Matrix_Code_USR);
PARAMETER(PAR.Effective_Month_Day_USR);
{
 //?USER: Initialize routine

 // WRK.Break in data Usr = CND.No
 WRK.Break_in_data_Usr = 'N';

 //?First time set other then blank
 // WRK.HRD Report Break = CON.111
 WRK.HRD_Report_Break = 111;

 //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 //?E10350 JJH 05/17/17 - Substring TH Source Code-X18 USR
 // LCL.TH Source Code-1 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.1,CON.3)
 LCL.TH_Source_Code_1_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:1:3);

 // LCL.TH Source Code-2 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.4,CON.3)
 LCL.TH_Source_Code_2_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:4:3);

 // LCL.TH Source Code-3 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.7,CON.3)
 LCL.TH_Source_Code_3_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:7:3);

 // LCL.TH Source Code-4 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.10,CON.3)
 LCL.TH_Source_Code_4_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:10:3);

 // LCL.TH Source Code-5 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.13,CON.3)
 LCL.TH_Source_Code_5_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:13:3);

 // LCL.TH Source Code-6 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.16,CON.3)
 LCL.TH_Source_Code_6_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:16:3);

 //?USER: Process Data record

 //?Selection
 // WRK.Company Number Alpha Usr = DB1.BOH Company Number
 WRK.Company_Number_Alpha_Usr = DB1.BOH_Company_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Process for Carcass Detail is only for one day, because any
 //?totals are by tattoo, and a tattoo is for one day ranage
 //?Also, only load to the hog pop detail with distribution
 //?Distribution is backfat, lean %, or loin eye
 //?***************
 //?E10350 JJH 05/17/17 - Record Selection using 6 Source Codes
 //?Source Type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Source Type EQ WRK.Blank USR
 IF PAR.HRH_Source_Type = WRK.Blank_USR;

 // IF DB1.SR Source Code EQ PAR.HRH Source Type
 IF DB1.SR_Source_Code = PAR.HRH_Source_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Payment type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Payment Type EQ WRK.Blank USR
 IF PAR.HRH_Payment_Type = WRK.Blank_USR;

 // IF DB1.CD Payment Type EQ PAR.HRH Payment Type
 IF DB1.CD_Payment_Type = PAR.HRH_Payment_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Producer / location
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.PD Producer Code EQ WRK.Blank USR
 IF PAR.PD_Producer_Code = WRK.Blank_USR;

 // IF PAR.PD Producer Code EQ DB1.PD Producer Code
 IF PAR.PD_Producer_Code = DB1.PD_Producer_Code;

 //?Location
 CASE;

 // IF DB1.PD Producer Code EQ PAR.PD Producer Code
 IF DB1.PD_Producer_Code = PAR.PD_Producer_Code;

 CASE;

 // IF PAR.HRH Prdcr Location Code EQ WRK.Blank USR
 IF PAR.HRH_Prdcr_Location_Code = WRK.Blank_USR;

 // IF DB1.CD Producer Loc/Farm EQ PAR.HRH Prdcr Location Code
 IF DB1.CD_Producer_Loc_Farm = PAR.HRH_Prdcr_Location_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Tattoo number
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Tattoo Number EQ WRK.Zero USR
 IF PAR.HRH_Tattoo_Number = WRK.Zero_USR;

 // IF DB1.TH Tattoo Number EQ PAR.HRH Tattoo Number
 IF DB1.TH_Tattoo_Number = PAR.HRH_Tattoo_Number;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Farm Site
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Farm Site NE WRK.Zero USR
 IF PAR.HRH_Farm_Site <> WRK.Zero_USR;

 CASE;

 // IF DB1.CD Source Type is External
 IF DB1.CD_Source_Type = 'E';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv TH Reference #FarmRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1313896;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Purchase_Date);
 PARAMETER(WRK.TH_Group_Reference);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.TH_HPS_Farm_Site);
 PARAMETER(WRK.PD_Producer_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 CASE;

 // IF WRK.Farm Site USR NE PAR.HRH Farm Site
 IF WRK.Farm_Site_USR <> PAR.HRH_Farm_Site;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 // WRK.Farm Site State USR = WRK.TH HPS Farm Site
 WRK.Farm_Site_State_USR = WRK.TH_HPS_Farm_Site;

 CASE;

 // IF WRK.Farm Site USR NE PAR.HRH Farm Site
 IF WRK.Farm_Site_USR <> PAR.HRH_Farm_Site;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Kill Shift
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Kill Shift EQ WRK.Blank USR
 IF PAR.HRH_Kill_Shift = WRK.Blank_USR;

 // IF DB1.CD Shift EQ PAR.HRH Kill Shift
 IF DB1.CD_Shift = PAR.HRH_Kill_Shift;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?E10350 JJH 05/17/17 - Record Selection using 6 Source Codes
 //?Record Selection for 6-Source Codes
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // AND PAR.TH Source Code-X18 USR is Blank
 AND PAR.TH_Source_Code_X18_USR = *BLANK;

 //?Record Selection for 6-Source Codes
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-1 USR is NE Blank
 IF LCL.TH_Source_Code_1_USR <> *BLANK;

 // AND LCL.TH Source Code-1 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_1_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-2 USR is NE Blank
 IF LCL.TH_Source_Code_2_USR <> *BLANK;

 // AND LCL.TH Source Code-2 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_2_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-3 USR is NE Blank
 IF LCL.TH_Source_Code_3_USR <> *BLANK;

 // AND LCL.TH Source Code-3 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_3_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-4 USR is NE Blank
 IF LCL.TH_Source_Code_4_USR <> *BLANK;

 // AND LCL.TH Source Code-4 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_4_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-5 USR is NE Blank
 IF LCL.TH_Source_Code_5_USR <> *BLANK;

 // AND LCL.TH Source Code-5 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_5_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-6 USR is NE Blank
 IF LCL.TH_Source_Code_6_USR <> *BLANK;

 // AND LCL.TH Source Code-6 USR EQ LCL.SR Source Code
 AND LCL.TH_Source_Code_6_USR = LCL.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?E10350 JJH 05/17/17 - Set the LCL.SR Source Code
 //?Set LCL.SR Source Code
 CASE;

 // IF PAR.TH Source Code-X18 USR is Blank
 IF PAR.TH_Source_Code_X18_USR = *BLANK;

 // LCL.SR Source Code = CND.EQ Blank
 LCL.SR_Source_Code = *BLANK;

 //?Set LCL.SR Source Code
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.SR Source Code = DB1.SR Source Code
 LCL.SR_Source_Code = DB1.SR_Source_Code;

 ENDIF;

 //?Build Report Break
 CASE;

 // IF PAR.Report Type Usr is Tattoo
 IF PAR.Report_Type_Usr = 'T';

 // WRK.Tattoo Nbr Alpha Usr = DB1.TH Tattoo Number
 WRK.Tattoo_Nbr_Alpha_Usr = DB1.TH_Tattoo_Number;

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Tattoo Nbr Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Tattoo_Nbr_Alpha_Usr (1);

 //?Pass the individual tattoo code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer
 IF PAR.Report_Type_Usr = 'P';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.PD Producer Code,CON.1)
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.PD_Producer_Code (1);

 //?Pass the individual producer code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer/Location
 IF PAR.Report_Type_Usr = 'L';

 // WRK.Text 10 1 USR = CONCAT(WRK.Company Number Alpha Usr,DB1.PD Producer Code,CON.1)
 WRK.Text_10_1_USR = WRK.Company_Number_Alpha_Usr + DB1.PD_Producer_Code (1);

 // WRK.HRD Report Break = CONCAT(WRK.Text 10 1 USR,DB1.CD Producer Loc/Farm,CON.1)
 WRK.HRD_Report_Break = WRK.Text_10_1_USR + DB1.CD_Producer_Loc_Farm (1);

 //?Pass the individual producer/location code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.CD_Producer_Loc_Farm);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Payment Type
 IF PAR.Report_Type_Usr = 'B';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Payment Type,C
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Payment_Type (1);

 //?Pass the individual payment type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(DB1.CD_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Type
 IF PAR.Report_Type_Usr = 'A';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Source Type,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Source_Type (1);

 //?Pass the individual source type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(DB1.CD_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Code
 IF PAR.Report_Type_Usr = 'S';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.SR Source Code,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.SR_Source_Code (1);

 //?Pass the individual source code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Farm Site
 IF PAR.Report_Type_Usr = 'F';

 //?Farm Site
 CASE;

 // IF DB1.CD Source Type is Internal
 IF DB1.CD_Source_Type = 'I';

 EXECUTE FUNCTION(Rtv TH Reference #FarmRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1313896;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Purchase_Date);
 PARAMETER(WRK.TH_Group_Reference);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.TH_HPS_Farm_Site);
 PARAMETER(WRK.PD_Producer_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 // WRK.Farm Site Alpha       USR = CVTVAR(WRK.Farm Site USR)
 WRK.Farm_Site_Alpha_USR = CVTVAR(WRK.Farm_Site_USR);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 // WRK.Farm Site USR = WRK.TH HPS Farm Site
 WRK.Farm_Site_USR = WRK.TH_HPS_Farm_Site;

 // WRK.Farm Site Alpha       USR = CVTVAR(WRK.Farm Site USR)
 WRK.Farm_Site_Alpha_USR = CVTVAR(WRK.Farm_Site_USR);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 ENDIF;

 //?Pass the individual farm site from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Build Report Break
 // IF PAR.Report Type Usr is Company
 IF PAR.Report_Type_Usr = 'C';

 // WRK.HRD Report Break = WRK.Company Number Alpha Usr
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr;

 //?Pass nothing from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Shift
 IF PAR.Report_Type_Usr = 'H';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Shift,CON.1)
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Shift (1);

 //?Pass the individual Shift from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(DB1.CD_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Check for report break
 CASE;

 // IF WRK.HRD Report Break NE WRK.Report Break Save
 IF WRK.HRD_Report_Break <> WRK.Report_Break_Save;

 // WRK.*Return code = CND.*Normal
 WRK.*Return_code = *BLANK;

 // Call program Crt Hog Pop Dtl Shell UP.
 CALL PROGRAM(Crt Hog Pop Dtl Shell UP) ('PDT7XFR');
 PARAMETER(WRK.*Return_code);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Cutout_Matrix_Code_USR);
 PARAMETER(PAR.Effective_Month_Day_USR);

 //?Read the tattoo header at break and accumulat its totals
 // Call program RTV Hog Pop Tattoo Hdr XF.
 CALL PROGRAM(RTV Hog Pop Tattoo Hdr XF) ('PKU5XFR');
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Report_Type_Usr);

 // WRK.Report Break Save = WRK.HRD Report Break
 WRK.Report_Break_Save = WRK.HRD_Report_Break;

 ENDIF;

 // WRK.HPD Carcass Weight = DB1.CD Carcass/Hot Weight
 WRK.HPD_Carcass_Weight = DB1.CD_Carcass_Hot_Weight;

 // WRK.HPD No of Carcass = CON.1
 WRK.HPD_No_of_Carcass = 1;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 CASE;

 // IF PAR.HRH Type Of Distribution is Back fat
 IF PAR.HRH_Type_Of_Distribution = 'B';

 // WRK.HPD Distribution = DB1.CD Backfat Thickness Inch
 WRK.HPD_Distribution = DB1.CD_Backfat_Thickness_Inch;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF PAR.HRH Type Of Distribution is Lean %
 IF PAR.HRH_Type_Of_Distribution = 'P';

 // WRK.HPD Distribution = DB1.CD Lean Percent
 WRK.HPD_Distribution = DB1.CD_Lean_Percent;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF PAR.HRH Type Of Distribution is Loin Eye
 IF PAR.HRH_Type_Of_Distribution = 'E';

 // WRK.HPD Distribution = DB1.CD Loin-Eye Depth Inch
 WRK.HPD_Distribution = DB1.CD_Loin_Eye_Depth_Inch;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.HPD Distribution = CON.*ZERO
 WRK.HPD_Distribution = *ZERO;

 // WRK.HPD No of Carcass = CON.*ZERO
 WRK.HPD_No_of_Carcass = *ZERO;

 ENDIF;

 EXECUTE FUNCTION(Chg Hog Pop for Report RT) TYPE(RTVOBJ) FILE(PKC9CPP)          AB1153745;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(WRK.HPD_Carcass_Weight);
 PARAMETER(WRK.HPD_Distribution);
 PARAMETER(WRK.HPD_No_of_Carcass);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.HPD Carcass Weight GE DB1.HRD Min Carcass Weight
  IF PAR.HPD_Carcass_Weight >= DB1.HRD_Min_Carcass_Weight;

  EXECUTE FUNCTION(Chg Hog Ppltn Rpt Col CH) TYPE(CHGOBJ) FILE(PKC9CPP)           AB1153821;
  PARAMETER(DB1.HRH_Type_Of_Distribution);
  PARAMETER(DB1.HRH_Report_Break);
  PARAMETER(DB1.HRD_Min_Carcass_Weight);
  PARAMETER(DB1.HRD_Max_Carcass_Weight);
  PARAMETER(DB1.HRD_Min_Live_Weight);
  PARAMETER(DB1.HRD_Max_Live_Weight);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_01);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_02);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_03);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_04);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_05);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_06);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_07);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_08);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_09);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_10);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_11);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_12);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_13);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_14);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_15);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_16);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_17);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_18);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_19);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_Tot);
  PARAMETER(DB1.HRD_Percent_Total);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_01);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_02);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_03);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_04);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_05);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_06);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_07);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_08);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_09);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_10);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_11);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_12);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_13);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_14);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_15);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_16);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_17);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_18);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_19);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_20);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  PARAMETER(PAR.HPD_Carcass_Weight);
  PARAMETER(PAR.HPD_Distribution);
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HPD_No_of_Carcass);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   //?ACCUMULATE TO CORRECT COLUMN
   CASE;

   // IF PAR.HRH Type Of Distribution is Lean %
   IF PAR.HRH_Type_Of_Distribution = 'P';

   // OR PAR.HRH Type Of Distribution is Loin Eye
   OR PAR.HRH_Type_Of_Distribution = 'E';

   // WRK.HPD Distribution = PAR.HPD Distribution
   WRK.HPD_Distribution = PAR.HPD_Distribution;

   //?Head are from columns are loaded highest to the lowest
   //?Add to correct column  Highest to Lowest
   CASE;

   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 01
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_01;

   //?col 01 only
   // DB1.HRD Dist Carcass Cnt 01 = DB1.HRD Dist Carcass Cnt 01 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_01 = DB1.HRD_Dist_Carcass_Cnt_01 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 02
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_02;

   //?col 02 only
   // DB1.HRD Dist Carcass Cnt 02 = DB1.HRD Dist Carcass Cnt 02 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_02 = DB1.HRD_Dist_Carcass_Cnt_02 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 03
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_03;

   //?col 03 only
   // DB1.HRD Dist Carcass Cnt 03 = DB1.HRD Dist Carcass Cnt 03 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_03 = DB1.HRD_Dist_Carcass_Cnt_03 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 04
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_04;

   //?col 04
   // DB1.HRD Dist Carcass Cnt 04 = DB1.HRD Dist Carcass Cnt 04 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_04 = DB1.HRD_Dist_Carcass_Cnt_04 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 05
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_05;

   //?col 05 only
   // DB1.HRD Dist Carcass Cnt 05 = DB1.HRD Dist Carcass Cnt 05 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_05 = DB1.HRD_Dist_Carcass_Cnt_05 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 06
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_06;

   //?col 06 only
   // DB1.HRD Dist Carcass Cnt 06 = DB1.HRD Dist Carcass Cnt 06 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_06 = DB1.HRD_Dist_Carcass_Cnt_06 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 07
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_07;

   //?col 07 only
   // DB1.HRD Dist Carcass Cnt 07 = DB1.HRD Dist Carcass Cnt 07 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_07 = DB1.HRD_Dist_Carcass_Cnt_07 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 08
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_08;

   //?col 08 only
   // DB1.HRD Dist Carcass Cnt 08 = DB1.HRD Dist Carcass Cnt 08 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_08 = DB1.HRD_Dist_Carcass_Cnt_08 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 09
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_09;

   //?col 09 only
   // DB1.HRD Dist Carcass Cnt 09 = DB1.HRD Dist Carcass Cnt 09 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_09 = DB1.HRD_Dist_Carcass_Cnt_09 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 10
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_10;

   //?col 10 only
   // DB1.HRD Dist Carcass Cnt 10 = DB1.HRD Dist Carcass Cnt 10 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_10 = DB1.HRD_Dist_Carcass_Cnt_10 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 11
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_11;

   //?col 11
   // DB1.HRD Dist Carcass Cnt 11 = DB1.HRD Dist Carcass Cnt 11 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_11 = DB1.HRD_Dist_Carcass_Cnt_11 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 12
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_12;

   //?col 12 only
   // DB1.HRD Dist Carcass Cnt 12 = DB1.HRD Dist Carcass Cnt 12 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_12 = DB1.HRD_Dist_Carcass_Cnt_12 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 13
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_13;

   //?col 13 only
   // DB1.HRD Dist Carcass Cnt 13 = DB1.HRD Dist Carcass Cnt 13 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_13 = DB1.HRD_Dist_Carcass_Cnt_13 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 14
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_14;

   //?col 14 only
   // DB1.HRD Dist Carcass Cnt 14 = DB1.HRD Dist Carcass Cnt 14 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_14 = DB1.HRD_Dist_Carcass_Cnt_14 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 15
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_15;

   //?col 15 only
   // DB1.HRD Dist Carcass Cnt 15 = DB1.HRD Dist Carcass Cnt 15 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_15 = DB1.HRD_Dist_Carcass_Cnt_15 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 16
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_16;

   //?col 16 only
   // DB1.HRD Dist Carcass Cnt 16 = DB1.HRD Dist Carcass Cnt 16 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_16 = DB1.HRD_Dist_Carcass_Cnt_16 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 17
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_17;

   //?col 17 only
   // DB1.HRD Dist Carcass Cnt 17 = DB1.HRD Dist Carcass Cnt 17 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_17 = DB1.HRD_Dist_Carcass_Cnt_17 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 18
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_18;

   //?col 18 only
   // DB1.HRD Dist Carcass Cnt 18 = DB1.HRD Dist Carcass Cnt 18 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_18 = DB1.HRD_Dist_Carcass_Cnt_18 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?col 19 only
   // DB1.HRD Dist Carcass Cnt 19 = DB1.HRD Dist Carcass Cnt 19 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_19 = DB1.HRD_Dist_Carcass_Cnt_19 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   ENDIF;

   //?ACCUMULATE TO CORRECT COLUMN
   // IF PAR.HRH Type Of Distribution is Back fat
   IF PAR.HRH_Type_Of_Distribution = 'B';

   //?Head are from loaded from the lowest to the highest
   //?Add to correct column  Lowest to Highest
   CASE;

   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 19
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_19;

   //?col 19 only
   // DB1.HRD Dist Carcass Cnt 19 = DB1.HRD Dist Carcass Cnt 19 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_19 = DB1.HRD_Dist_Carcass_Cnt_19 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // PGM.*Record Data Changed = CND.*YES
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 18
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_18;

   //?col 18 only
   // DB1.HRD Dist Carcass Cnt 18 = DB1.HRD Dist Carcass Cnt 18 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_18 = DB1.HRD_Dist_Carcass_Cnt_18 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 17
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_17;

   //?col 17 only
   // DB1.HRD Dist Carcass Cnt 17 = DB1.HRD Dist Carcass Cnt 17 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_17 = DB1.HRD_Dist_Carcass_Cnt_17 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 16
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_16;

   //?col 16 only
   // DB1.HRD Dist Carcass Cnt 16 = DB1.HRD Dist Carcass Cnt 16 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_16 = DB1.HRD_Dist_Carcass_Cnt_16 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 15
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_15;

   //?col 15 only
   // DB1.HRD Dist Carcass Cnt 15 = DB1.HRD Dist Carcass Cnt 15 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_15 = DB1.HRD_Dist_Carcass_Cnt_15 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 14
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_14;

   //?col 14 only
   // DB1.HRD Dist Carcass Cnt 14 = DB1.HRD Dist Carcass Cnt 14 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_14 = DB1.HRD_Dist_Carcass_Cnt_14 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 13
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_13;

   //?col 13 only
   // DB1.HRD Dist Carcass Cnt 13 = DB1.HRD Dist Carcass Cnt 13 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_13 = DB1.HRD_Dist_Carcass_Cnt_13 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 12
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_12;

   //?col 12 only
   // DB1.HRD Dist Carcass Cnt 12 = DB1.HRD Dist Carcass Cnt 12 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_12 = DB1.HRD_Dist_Carcass_Cnt_12 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 11
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_11;

   //?col 11
   // DB1.HRD Dist Carcass Cnt 11 = DB1.HRD Dist Carcass Cnt 11 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_11 = DB1.HRD_Dist_Carcass_Cnt_11 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 10
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_10;

   //?col 10 only
   // DB1.HRD Dist Carcass Cnt 10 = DB1.HRD Dist Carcass Cnt 10 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_10 = DB1.HRD_Dist_Carcass_Cnt_10 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 09
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_09;

   //?col 09 only
   // DB1.HRD Dist Carcass Cnt 09 = DB1.HRD Dist Carcass Cnt 09 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_09 = DB1.HRD_Dist_Carcass_Cnt_09 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 08
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_08;

   //?col 08 only
   // DB1.HRD Dist Carcass Cnt 08 = DB1.HRD Dist Carcass Cnt 08 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_08 = DB1.HRD_Dist_Carcass_Cnt_08 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 07
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_07;

   //?col 07 only
   // DB1.HRD Dist Carcass Cnt 07 = DB1.HRD Dist Carcass Cnt 07 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_07 = DB1.HRD_Dist_Carcass_Cnt_07 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 06
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_06;

   //?col 06 only
   // DB1.HRD Dist Carcass Cnt 06 = DB1.HRD Dist Carcass Cnt 06 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_06 = DB1.HRD_Dist_Carcass_Cnt_06 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 05
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_05;

   //?col 05 only
   // DB1.HRD Dist Carcass Cnt 05 = DB1.HRD Dist Carcass Cnt 05 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_05 = DB1.HRD_Dist_Carcass_Cnt_05 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 04
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_04;

   //?col 04
   // DB1.HRD Dist Carcass Cnt 04 = DB1.HRD Dist Carcass Cnt 04 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_04 = DB1.HRD_Dist_Carcass_Cnt_04 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 03
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_03;

   //?col 03 only
   // DB1.HRD Dist Carcass Cnt 03 = DB1.HRD Dist Carcass Cnt 03 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_03 = DB1.HRD_Dist_Carcass_Cnt_03 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 02
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_02;

   //?col 02 only
   // DB1.HRD Dist Carcass Cnt 02 = DB1.HRD Dist Carcass Cnt 02 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_02 = DB1.HRD_Dist_Carcass_Cnt_02 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?col 01 only
   // DB1.HRD Dist Carcass Cnt 01 = DB1.HRD Dist Carcass Cnt 01 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_01 = DB1.HRD_Dist_Carcass_Cnt_01 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   ENDIF;

   ENDIF;

  }

  QUIT;

  ENDIF;

 }

 ENDIF;

}


ENDIF;

//?Producer selection
CASE;

// IF PAR.PD Producer Code GT WRK.Blank USR
IF PAR.PD_Producer_Code > WRK.Blank_USR;

//?Restrict by Co/Producer and Position on date
EXECUTE FUNCTION(Rtv Hog Pop Crcs-Prd  Rt) TYPE(RTVOBJ) FILE(PKB1CPP)           AB1155290;
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_Type_Of_Distribution);
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_Source_Type);
PARAMETER(PAR.HRH_Payment_Type);
PARAMETER(PAR.HRH_Tattoo_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_To_Kill_Date);
PARAMETER(PAR.HRH_Farm_Site);
PARAMETER(PAR.HRH_Kill_Shift);
PARAMETER(WRK.HRH_Carcass_Hdr_01);
PARAMETER(WRK.HRH_Carcass_Hdr_02);
PARAMETER(WRK.HRH_Carcass_Hdr_03);
PARAMETER(WRK.HRH_Carcass_Hdr_04);
PARAMETER(WRK.HRH_Carcass_Hdr_05);
PARAMETER(WRK.HRH_Carcass_Hdr_06);
PARAMETER(WRK.HRH_Carcass_Hdr_07);
PARAMETER(WRK.HRH_Carcass_Hdr_08);
PARAMETER(WRK.HRH_Carcass_Hdr_09);
PARAMETER(WRK.HRH_Carcass_Hdr_10);
PARAMETER(WRK.HRH_Carcass_Hdr_11);
PARAMETER(WRK.HRH_Carcass_Hdr_12);
PARAMETER(WRK.HRH_Carcass_Hdr_13);
PARAMETER(WRK.HRH_Carcass_Hdr_14);
PARAMETER(WRK.HRH_Carcass_Hdr_15);
PARAMETER(WRK.HRH_Carcass_Hdr_16);
PARAMETER(WRK.HRH_Carcass_Hdr_17);
PARAMETER(WRK.HRH_Carcass_Hdr_18);
PARAMETER(WRK.HRH_Carcass_Hdr_19);
PARAMETER(WRK.HRH_Head_Killed);
PARAMETER(WRK.HRH_AVG_Hot_Weight);
PARAMETER(WRK.HRH_Avg_Live_Wgt);
PARAMETER(WRK.HRH_Avg_Light_Rfl);
PARAMETER(WRK.HRH_Avg_Loin_Eye);
PARAMETER(WRK.HRH_Avg_Back_Fat);
PARAMETER(WRK.HRH_Avg_Lean);
PARAMETER(WRK.HRH_Adjusted);
PARAMETER(PAR.HRH_Prdcr_Location_Code);
PARAMETER(WRK.TH_Source_Code_X18_USR);
PARAMETER(PAR.Report_Type_Usr);
PARAMETER(PAR.Cutout_Matrix_Code_USR);
PARAMETER(PAR.Effective_Month_Day_USR);
{
 //?USER: Initialize routine

 // WRK.Break in data Usr = CND.No
 WRK.Break_in_data_Usr = 'N';

 //?First time set other then blank
 // WRK.HRD Report Break = CON.111
 WRK.HRD_Report_Break = 111;

 //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 //?E10350 JJH 05/17/17 - Substring TH Source Code-X18 USR
 // LCL.TH Source Code-1 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.1,CON.3)
 LCL.TH_Source_Code_1_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:1:3);

 // LCL.TH Source Code-2 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.4,CON.3)
 LCL.TH_Source_Code_2_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:4:3);

 // LCL.TH Source Code-3 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.7,CON.3)
 LCL.TH_Source_Code_3_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:7:3);

 // LCL.TH Source Code-4 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.10,CON.3)
 LCL.TH_Source_Code_4_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:10:3);

 // LCL.TH Source Code-5 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.13,CON.3)
 LCL.TH_Source_Code_5_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:13:3);

 // LCL.TH Source Code-6 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.16,CON.3)
 LCL.TH_Source_Code_6_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:16:3);

 //?USER: Process Data record

 //?Selection
 // WRK.Company Number Alpha Usr = DB1.BOH Company Number
 WRK.Company_Number_Alpha_Usr = DB1.BOH_Company_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Process for Carcass Detail is only for one day, because any
 //?totals are by tattoo, and a tattoo is for one day ranage
 //?Also, only load to the hog pop detail with distribution
 //?Distribution is backfat, lean %, or loin eye
 //?E10350 JJH 05/17/17 - Record Selection using 6 Source Codes
 //?Producer Location
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Prdcr Location Code EQ WRK.Blank USR
 IF PAR.HRH_Prdcr_Location_Code = WRK.Blank_USR;

 // IF DB1.CD Producer Loc/Farm EQ PAR.HRH Prdcr Location Code
 IF DB1.CD_Producer_Loc_Farm = PAR.HRH_Prdcr_Location_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Source Type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Source Type EQ WRK.Blank USR
 IF PAR.HRH_Source_Type = WRK.Blank_USR;

 // IF DB1.CD Source Type EQ PAR.HRH Source Type
 IF DB1.CD_Source_Type = PAR.HRH_Source_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Payment type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Payment type
 CASE;

 // IF PAR.HRH Payment Type EQ WRK.Blank USR
 IF PAR.HRH_Payment_Type = WRK.Blank_USR;

 // OR DB1.CD Payment Type EQ PAR.HRH Payment Type
 OR DB1.CD_Payment_Type = PAR.HRH_Payment_Type;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Payment type
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Payment type
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Tattoo number
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?Tattoo number
 CASE;

 // IF PAR.HRH Tattoo Number EQ WRK.Zero USR
 IF PAR.HRH_Tattoo_Number = WRK.Zero_USR;

 // OR DB1.TH Tattoo Number EQ PAR.HRH Tattoo Number
 OR DB1.TH_Tattoo_Number = PAR.HRH_Tattoo_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Tattoo number
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Tattoo number
 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 //?Farm Site
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Farm Site NE WRK.Zero USR
 IF PAR.HRH_Farm_Site <> WRK.Zero_USR;

 CASE;

 // IF DB1.CD Source Type is External
 IF DB1.CD_Source_Type = 'E';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv TH Reference #FarmRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1313896;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Purchase_Date);
 PARAMETER(WRK.TH_Group_Reference);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.TH_HPS_Farm_Site);
 PARAMETER(WRK.PD_Producer_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 CASE;

 // IF WRK.Farm Site USR NE PAR.HRH Farm Site
 IF WRK.Farm_Site_USR <> PAR.HRH_Farm_Site;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 // WRK.Farm Site USR = WRK.TH HPS Farm Site
 WRK.Farm_Site_USR = WRK.TH_HPS_Farm_Site;

 CASE;

 // IF WRK.Farm Site USR NE PAR.HRH Farm Site
 IF WRK.Farm_Site_USR <> PAR.HRH_Farm_Site;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Kill Shift
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Kill Shift EQ WRK.Blank USR
 IF PAR.HRH_Kill_Shift = WRK.Blank_USR;

 // IF DB1.CD Shift EQ PAR.HRH Kill Shift
 IF DB1.CD_Shift = PAR.HRH_Kill_Shift;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?E10350 JJH 05/17/17 - Record Selection using 6 Source Codes
 //?Record Selection for 6-Source Codes
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // AND PAR.TH Source Code-X18 USR is Blank
 AND PAR.TH_Source_Code_X18_USR = *BLANK;

 //?Record Selection for 6-Source Codes
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-1 USR is NE Blank
 IF LCL.TH_Source_Code_1_USR <> *BLANK;

 // AND LCL.TH Source Code-1 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_1_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-2 USR is NE Blank
 IF LCL.TH_Source_Code_2_USR <> *BLANK;

 // AND LCL.TH Source Code-2 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_2_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-3 USR is NE Blank
 IF LCL.TH_Source_Code_3_USR <> *BLANK;

 // AND LCL.TH Source Code-3 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_3_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-4 USR is NE Blank
 IF LCL.TH_Source_Code_4_USR <> *BLANK;

 // AND LCL.TH Source Code-4 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_4_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-5 USR is NE Blank
 IF LCL.TH_Source_Code_5_USR <> *BLANK;

 // AND LCL.TH Source Code-5 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_5_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-6 USR is NE Blank
 IF LCL.TH_Source_Code_6_USR <> *BLANK;

 // AND LCL.TH Source Code-6 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_6_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?E10350 JJH 05/17/17 - Set the LCL.SR Source Code
 //?Set LCL.SR Source Code
 CASE;

 // IF PAR.TH Source Code-X18 USR is Blank
 IF PAR.TH_Source_Code_X18_USR = *BLANK;

 // LCL.SR Source Code = CND.EQ Blank
 LCL.SR_Source_Code = *BLANK;

 //?Set LCL.SR Source Code
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.SR Source Code = DB1.SR Source Code
 LCL.SR_Source_Code = DB1.SR_Source_Code;

 ENDIF;

 //?Build Report Break
 CASE;

 // IF PAR.Report Type Usr is Tattoo
 IF PAR.Report_Type_Usr = 'T';

 // WRK.Tattoo Nbr Alpha Usr = DB1.TH Tattoo Number
 WRK.Tattoo_Nbr_Alpha_Usr = DB1.TH_Tattoo_Number;

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Tattoo Nbr Alpha Usr,CON.1)
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Tattoo_Nbr_Alpha_Usr (1);

 //?Pass the individual tattoo code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer
 IF PAR.Report_Type_Usr = 'P';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.PD Producer Code,CON.1)
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.PD_Producer_Code (1);

 //?Pass the individual producer code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer/Location
 IF PAR.Report_Type_Usr = 'L';

 // WRK.Text 10 1 USR = CONCAT(WRK.Company Number Alpha Usr,DB1.PD Producer Code,CON.1)
 WRK.Text_10_1_USR = WRK.Company_Number_Alpha_Usr + DB1.PD_Producer_Code (1);

 // WRK.HRD Report Break = CONCAT(WRK.Text 10 1 USR,DB1.CD Producer Loc/Farm,CON.1)
 WRK.HRD_Report_Break = WRK.Text_10_1_USR + DB1.CD_Producer_Loc_Farm (1);

 //?Pass the individual producer/location code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.CD_Producer_Loc_Farm);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Payment Type
 IF PAR.Report_Type_Usr = 'B';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Payment Type,C
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Payment_Type (1);

 //?Pass the individual payment type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(DB1.CD_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Type
 IF PAR.Report_Type_Usr = 'A';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Source Type,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Source_Type (1);

 //?Pass the individual source type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(DB1.CD_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Code
 IF PAR.Report_Type_Usr = 'S';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.SR Source Code,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.SR_Source_Code (1);

 //?Pass the individual source code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Farm Site
 IF PAR.Report_Type_Usr = 'F';

 CASE;

 // IF DB1.CD Source Type is Internal
 IF DB1.CD_Source_Type = 'I';

 EXECUTE FUNCTION(Rtv TH Reference #FarmRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1313896;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Purchase_Date);
 PARAMETER(WRK.TH_Group_Reference);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.TH_HPS_Farm_Site);
 PARAMETER(WRK.PD_Producer_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 // WRK.Farm Site Alpha       USR = CVTVAR(WRK.Farm Site USR)
 WRK.Farm_Site_Alpha_USR = CVTVAR(WRK.Farm_Site_USR);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 // WRK.Farm Site USR = WRK.TH HPS Farm Site
 WRK.Farm_Site_USR = WRK.TH_HPS_Farm_Site;

 // WRK.Farm Site Alpha       USR = CVTVAR(WRK.Farm Site USR)
 WRK.Farm_Site_Alpha_USR = CVTVAR(WRK.Farm_Site_USR);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 ENDIF;

 //?Pass the individual farm site from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Build Report Break
 // IF PAR.Report Type Usr is Company
 IF PAR.Report_Type_Usr = 'C';

 // WRK.HRD Report Break = WRK.Company Number Alpha Usr
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr;

 //?Pass nothing from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Check for report break
 CASE;

 // IF WRK.HRD Report Break NE WRK.Report Break Save
 IF WRK.HRD_Report_Break <> WRK.Report_Break_Save;

 // WRK.*Return code = CND.*Normal
 WRK.*Return_code = *BLANK;

 // Call program Crt Hog Pop Dtl Shell UP.
 CALL PROGRAM(Crt Hog Pop Dtl Shell UP) ('PDT7XFR');
 PARAMETER(WRK.*Return_code);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Cutout_Matrix_Code_USR);
 PARAMETER(PAR.Effective_Month_Day_USR);

 //?Read the tattoo header at break and accumulat its totals
 // Call program RTV Hog Pop Tattoo Hdr XF.
 CALL PROGRAM(RTV Hog Pop Tattoo Hdr XF) ('PKU5XFR');
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Report_Type_Usr);

 // WRK.Report Break Save = WRK.HRD Report Break
 WRK.Report_Break_Save = WRK.HRD_Report_Break;

 ENDIF;

 // WRK.HPD Carcass Weight = DB1.CD Carcass/Hot Weight
 WRK.HPD_Carcass_Weight = DB1.CD_Carcass_Hot_Weight;

 // WRK.HPD No of Carcass = CON.1
 WRK.HPD_No_of_Carcass = 1;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 CASE;

 // IF PAR.HRH Type Of Distribution is Back fat
 IF PAR.HRH_Type_Of_Distribution = 'B';

 // WRK.HPD Distribution = DB1.CD Backfat Thickness Inch
 WRK.HPD_Distribution = DB1.CD_Backfat_Thickness_Inch;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF PAR.HRH Type Of Distribution is Lean %
 IF PAR.HRH_Type_Of_Distribution = 'P';

 // WRK.HPD Distribution = DB1.CD Lean Percent
 WRK.HPD_Distribution = DB1.CD_Lean_Percent;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF PAR.HRH Type Of Distribution is Loin Eye
 IF PAR.HRH_Type_Of_Distribution = 'E';

 // WRK.HPD Distribution = DB1.CD Loin-Eye Depth Inch
 WRK.HPD_Distribution = DB1.CD_Loin_Eye_Depth_Inch;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.HPD Distribution = CON.*ZERO
 WRK.HPD_Distribution = *ZERO;

 // WRK.HPD No of Carcass = CON.*ZERO
 WRK.HPD_No_of_Carcass = *ZERO;

 ENDIF;

 EXECUTE FUNCTION(Chg Hog Pop for Report RT) TYPE(RTVOBJ) FILE(PKC9CPP)          AB1153745;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(WRK.HPD_Carcass_Weight);
 PARAMETER(WRK.HPD_Distribution);
 PARAMETER(WRK.HPD_No_of_Carcass);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.HPD Carcass Weight GE DB1.HRD Min Carcass Weight
  IF PAR.HPD_Carcass_Weight >= DB1.HRD_Min_Carcass_Weight;

  EXECUTE FUNCTION(Chg Hog Ppltn Rpt Col CH) TYPE(CHGOBJ) FILE(PKC9CPP)           AB1153821;
  PARAMETER(DB1.HRH_Type_Of_Distribution);
  PARAMETER(DB1.HRH_Report_Break);
  PARAMETER(DB1.HRD_Min_Carcass_Weight);
  PARAMETER(DB1.HRD_Max_Carcass_Weight);
  PARAMETER(DB1.HRD_Min_Live_Weight);
  PARAMETER(DB1.HRD_Max_Live_Weight);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_01);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_02);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_03);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_04);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_05);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_06);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_07);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_08);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_09);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_10);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_11);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_12);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_13);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_14);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_15);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_16);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_17);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_18);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_19);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_Tot);
  PARAMETER(DB1.HRD_Percent_Total);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_01);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_02);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_03);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_04);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_05);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_06);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_07);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_08);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_09);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_10);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_11);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_12);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_13);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_14);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_15);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_16);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_17);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_18);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_19);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_20);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  PARAMETER(PAR.HPD_Carcass_Weight);
  PARAMETER(PAR.HPD_Distribution);
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HPD_No_of_Carcass);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   //?ACCUMULATE TO CORRECT COLUMN
   CASE;

   // IF PAR.HRH Type Of Distribution is Lean %
   IF PAR.HRH_Type_Of_Distribution = 'P';

   // OR PAR.HRH Type Of Distribution is Loin Eye
   OR PAR.HRH_Type_Of_Distribution = 'E';

   // WRK.HPD Distribution = PAR.HPD Distribution
   WRK.HPD_Distribution = PAR.HPD_Distribution;

   //?Head are from columns are loaded highest to the lowest
   //?Add to correct column  Highest to Lowest
   CASE;

   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 01
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_01;

   //?col 01 only
   // DB1.HRD Dist Carcass Cnt 01 = DB1.HRD Dist Carcass Cnt 01 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_01 = DB1.HRD_Dist_Carcass_Cnt_01 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 02
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_02;

   //?col 02 only
   // DB1.HRD Dist Carcass Cnt 02 = DB1.HRD Dist Carcass Cnt 02 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_02 = DB1.HRD_Dist_Carcass_Cnt_02 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 03
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_03;

   //?col 03 only
   // DB1.HRD Dist Carcass Cnt 03 = DB1.HRD Dist Carcass Cnt 03 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_03 = DB1.HRD_Dist_Carcass_Cnt_03 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 04
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_04;

   //?col 04
   // DB1.HRD Dist Carcass Cnt 04 = DB1.HRD Dist Carcass Cnt 04 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_04 = DB1.HRD_Dist_Carcass_Cnt_04 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 05
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_05;

   //?col 05 only
   // DB1.HRD Dist Carcass Cnt 05 = DB1.HRD Dist Carcass Cnt 05 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_05 = DB1.HRD_Dist_Carcass_Cnt_05 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 06
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_06;

   //?col 06 only
   // DB1.HRD Dist Carcass Cnt 06 = DB1.HRD Dist Carcass Cnt 06 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_06 = DB1.HRD_Dist_Carcass_Cnt_06 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 07
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_07;

   //?col 07 only
   // DB1.HRD Dist Carcass Cnt 07 = DB1.HRD Dist Carcass Cnt 07 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_07 = DB1.HRD_Dist_Carcass_Cnt_07 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 08
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_08;

   //?col 08 only
   // DB1.HRD Dist Carcass Cnt 08 = DB1.HRD Dist Carcass Cnt 08 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_08 = DB1.HRD_Dist_Carcass_Cnt_08 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 09
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_09;

   //?col 09 only
   // DB1.HRD Dist Carcass Cnt 09 = DB1.HRD Dist Carcass Cnt 09 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_09 = DB1.HRD_Dist_Carcass_Cnt_09 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 10
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_10;

   //?col 10 only
   // DB1.HRD Dist Carcass Cnt 10 = DB1.HRD Dist Carcass Cnt 10 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_10 = DB1.HRD_Dist_Carcass_Cnt_10 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 11
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_11;

   //?col 11
   // DB1.HRD Dist Carcass Cnt 11 = DB1.HRD Dist Carcass Cnt 11 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_11 = DB1.HRD_Dist_Carcass_Cnt_11 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 12
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_12;

   //?col 12 only
   // DB1.HRD Dist Carcass Cnt 12 = DB1.HRD Dist Carcass Cnt 12 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_12 = DB1.HRD_Dist_Carcass_Cnt_12 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 13
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_13;

   //?col 13 only
   // DB1.HRD Dist Carcass Cnt 13 = DB1.HRD Dist Carcass Cnt 13 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_13 = DB1.HRD_Dist_Carcass_Cnt_13 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 14
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_14;

   //?col 14 only
   // DB1.HRD Dist Carcass Cnt 14 = DB1.HRD Dist Carcass Cnt 14 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_14 = DB1.HRD_Dist_Carcass_Cnt_14 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 15
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_15;

   //?col 15 only
   // DB1.HRD Dist Carcass Cnt 15 = DB1.HRD Dist Carcass Cnt 15 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_15 = DB1.HRD_Dist_Carcass_Cnt_15 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 16
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_16;

   //?col 16 only
   // DB1.HRD Dist Carcass Cnt 16 = DB1.HRD Dist Carcass Cnt 16 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_16 = DB1.HRD_Dist_Carcass_Cnt_16 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 17
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_17;

   //?col 17 only
   // DB1.HRD Dist Carcass Cnt 17 = DB1.HRD Dist Carcass Cnt 17 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_17 = DB1.HRD_Dist_Carcass_Cnt_17 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 18
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_18;

   //?col 18 only
   // DB1.HRD Dist Carcass Cnt 18 = DB1.HRD Dist Carcass Cnt 18 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_18 = DB1.HRD_Dist_Carcass_Cnt_18 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?col 19 only
   // DB1.HRD Dist Carcass Cnt 19 = DB1.HRD Dist Carcass Cnt 19 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_19 = DB1.HRD_Dist_Carcass_Cnt_19 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   ENDIF;

   //?ACCUMULATE TO CORRECT COLUMN
   // IF PAR.HRH Type Of Distribution is Back fat
   IF PAR.HRH_Type_Of_Distribution = 'B';

   //?Head are from loaded from the lowest to the highest
   //?Add to correct column  Lowest to Highest
   CASE;

   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 19
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_19;

   //?col 19 only
   // DB1.HRD Dist Carcass Cnt 19 = DB1.HRD Dist Carcass Cnt 19 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_19 = DB1.HRD_Dist_Carcass_Cnt_19 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // PGM.*Record Data Changed = CND.*YES
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 18
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_18;

   //?col 18 only
   // DB1.HRD Dist Carcass Cnt 18 = DB1.HRD Dist Carcass Cnt 18 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_18 = DB1.HRD_Dist_Carcass_Cnt_18 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 17
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_17;

   //?col 17 only
   // DB1.HRD Dist Carcass Cnt 17 = DB1.HRD Dist Carcass Cnt 17 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_17 = DB1.HRD_Dist_Carcass_Cnt_17 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 16
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_16;

   //?col 16 only
   // DB1.HRD Dist Carcass Cnt 16 = DB1.HRD Dist Carcass Cnt 16 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_16 = DB1.HRD_Dist_Carcass_Cnt_16 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 15
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_15;

   //?col 15 only
   // DB1.HRD Dist Carcass Cnt 15 = DB1.HRD Dist Carcass Cnt 15 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_15 = DB1.HRD_Dist_Carcass_Cnt_15 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 14
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_14;

   //?col 14 only
   // DB1.HRD Dist Carcass Cnt 14 = DB1.HRD Dist Carcass Cnt 14 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_14 = DB1.HRD_Dist_Carcass_Cnt_14 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 13
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_13;

   //?col 13 only
   // DB1.HRD Dist Carcass Cnt 13 = DB1.HRD Dist Carcass Cnt 13 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_13 = DB1.HRD_Dist_Carcass_Cnt_13 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 12
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_12;

   //?col 12 only
   // DB1.HRD Dist Carcass Cnt 12 = DB1.HRD Dist Carcass Cnt 12 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_12 = DB1.HRD_Dist_Carcass_Cnt_12 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 11
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_11;

   //?col 11
   // DB1.HRD Dist Carcass Cnt 11 = DB1.HRD Dist Carcass Cnt 11 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_11 = DB1.HRD_Dist_Carcass_Cnt_11 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 10
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_10;

   //?col 10 only
   // DB1.HRD Dist Carcass Cnt 10 = DB1.HRD Dist Carcass Cnt 10 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_10 = DB1.HRD_Dist_Carcass_Cnt_10 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 09
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_09;

   //?col 09 only
   // DB1.HRD Dist Carcass Cnt 09 = DB1.HRD Dist Carcass Cnt 09 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_09 = DB1.HRD_Dist_Carcass_Cnt_09 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 08
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_08;

   //?col 08 only
   // DB1.HRD Dist Carcass Cnt 08 = DB1.HRD Dist Carcass Cnt 08 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_08 = DB1.HRD_Dist_Carcass_Cnt_08 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 07
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_07;

   //?col 07 only
   // DB1.HRD Dist Carcass Cnt 07 = DB1.HRD Dist Carcass Cnt 07 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_07 = DB1.HRD_Dist_Carcass_Cnt_07 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 06
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_06;

   //?col 06 only
   // DB1.HRD Dist Carcass Cnt 06 = DB1.HRD Dist Carcass Cnt 06 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_06 = DB1.HRD_Dist_Carcass_Cnt_06 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 05
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_05;

   //?col 05 only
   // DB1.HRD Dist Carcass Cnt 05 = DB1.HRD Dist Carcass Cnt 05 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_05 = DB1.HRD_Dist_Carcass_Cnt_05 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 04
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_04;

   //?col 04
   // DB1.HRD Dist Carcass Cnt 04 = DB1.HRD Dist Carcass Cnt 04 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_04 = DB1.HRD_Dist_Carcass_Cnt_04 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 03
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_03;

   //?col 03 only
   // DB1.HRD Dist Carcass Cnt 03 = DB1.HRD Dist Carcass Cnt 03 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_03 = DB1.HRD_Dist_Carcass_Cnt_03 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 02
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_02;

   //?col 02 only
   // DB1.HRD Dist Carcass Cnt 02 = DB1.HRD Dist Carcass Cnt 02 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_02 = DB1.HRD_Dist_Carcass_Cnt_02 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?col 01 only
   // DB1.HRD Dist Carcass Cnt 01 = DB1.HRD Dist Carcass Cnt 01 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_01 = DB1.HRD_Dist_Carcass_Cnt_01 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   ENDIF;

   ENDIF;

  }

  QUIT;

  ENDIF;

 }

 ENDIF;

}


ENDIF;

//?Tattoo selection
CASE;

// IF PAR.HRH Tattoo Number GT WRK.Zero USR
IF PAR.HRH_Tattoo_Number > WRK.Zero_USR;

//?Restrict by Co/tattoo number
EXECUTE FUNCTION(Rtv Hog Pop Crcs-Tatto Rt) TYPE(RTVOBJ) FILE(PKB1CPP)          AB1155292;
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_Tattoo_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_Type_Of_Distribution);
PARAMETER(PAR.HRH_Company_Number);
PARAMETER(PAR.HRH_Source_Type);
PARAMETER(PAR.HRH_Payment_Type);
PARAMETER(PAR.HRH_Tattoo_Number);
PARAMETER(PAR.HRH_From_Kill_Date);
PARAMETER(PAR.HRH_To_Kill_Date);
PARAMETER(PAR.HRH_Farm_Site);
PARAMETER(PAR.HRH_Kill_Shift);
PARAMETER(WRK.HRH_Carcass_Hdr_01);
PARAMETER(WRK.HRH_Carcass_Hdr_02);
PARAMETER(WRK.HRH_Carcass_Hdr_03);
PARAMETER(WRK.HRH_Carcass_Hdr_04);
PARAMETER(WRK.HRH_Carcass_Hdr_05);
PARAMETER(WRK.HRH_Carcass_Hdr_06);
PARAMETER(WRK.HRH_Carcass_Hdr_07);
PARAMETER(WRK.HRH_Carcass_Hdr_08);
PARAMETER(WRK.HRH_Carcass_Hdr_09);
PARAMETER(WRK.HRH_Carcass_Hdr_10);
PARAMETER(WRK.HRH_Carcass_Hdr_11);
PARAMETER(WRK.HRH_Carcass_Hdr_12);
PARAMETER(WRK.HRH_Carcass_Hdr_13);
PARAMETER(WRK.HRH_Carcass_Hdr_14);
PARAMETER(WRK.HRH_Carcass_Hdr_15);
PARAMETER(WRK.HRH_Carcass_Hdr_16);
PARAMETER(WRK.HRH_Carcass_Hdr_17);
PARAMETER(WRK.HRH_Carcass_Hdr_18);
PARAMETER(WRK.HRH_Carcass_Hdr_19);
PARAMETER(WRK.HRH_Head_Killed);
PARAMETER(WRK.HRH_AVG_Hot_Weight);
PARAMETER(WRK.HRH_Avg_Live_Wgt);
PARAMETER(WRK.HRH_Avg_Light_Rfl);
PARAMETER(WRK.HRH_Avg_Loin_Eye);
PARAMETER(WRK.HRH_Avg_Back_Fat);
PARAMETER(WRK.HRH_Avg_Lean);
PARAMETER(WRK.HRH_Adjusted);
PARAMETER(PAR.PD_Producer_Code);
PARAMETER(PAR.HRH_Prdcr_Location_Code);
PARAMETER(WRK.TH_Source_Code_X18_USR);
PARAMETER(PAR.Report_Type_Usr);
PARAMETER(PAR.Cutout_Matrix_Code_USR);
PARAMETER(PAR.Effective_Month_Day_USR);
{
 //?USER: Initialize routine

 // WRK.Break in data Usr = CND.No
 WRK.Break_in_data_Usr = 'N';

 //?First time set other then blank
 // WRK.HRD Report Break = CON.111
 WRK.HRD_Report_Break = 111;

 //?E2423 Mtech Live or Not Live *** Interfaces to HPS ***
 //?Get the MTech Live Yes or No
 DO;

 //?Mtech Live Yes or no
 // Call program Rtv Company Values    XF.
 CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER('MTECHLIVE');
 PARAMETER(WRK.System_Value_Alpha_USR);

 // LCL.MTech Live Yes or No = WRK.System Value Alpha    USR
 LCL.MTech_Live_Yes_or_No = WRK.System_Value_Alpha_USR;

 ENDDO;

 //?E10350 JJH 05/17/17 - Substring TH Source Code-X18 USR
 // LCL.TH Source Code-1 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.1,CON.3)
 LCL.TH_Source_Code_1_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:1:3);

 // LCL.TH Source Code-2 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.4,CON.3)
 LCL.TH_Source_Code_2_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:4:3);

 // LCL.TH Source Code-3 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.7,CON.3)
 LCL.TH_Source_Code_3_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:7:3);

 // LCL.TH Source Code-4 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.10,CON.3)
 LCL.TH_Source_Code_4_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:10:3);

 // LCL.TH Source Code-5 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.13,CON.3)
 LCL.TH_Source_Code_5_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:13:3);

 // LCL.TH Source Code-6 USR = SUBSTRING(PAR.TH Source Code-X18 USR,CON.16,CON.3)
 LCL.TH_Source_Code_6_USR = SUBSTRING(PAR.TH_Source_Code_X18_USR:16:3);

 //?USER: Process Data record

 //?Selection
 // WRK.Company Number Alpha Usr = DB1.BOH Company Number
 WRK.Company_Number_Alpha_Usr = DB1.BOH_Company_Number;

 // PGM.*Record selected = CND.*YES
 PGM.*Record_selected = 'Y';

 //?Process for Carcass Detail is only for one day, because any
 //?totals are by tattoo, and a tattoo is for one day ranage
 //?Also, only load to the hog pop detail with distribution
 //?Distribution is backfat, lean %, or loin eye
 //?E10350 JJH 05/17/17 - Record Selection using 6 Source Codes
 //?Source Type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Source Type EQ WRK.Blank USR
 IF PAR.HRH_Source_Type = WRK.Blank_USR;

 // IF DB1.SR Source Code EQ PAR.HRH Source Type
 IF DB1.SR_Source_Code = PAR.HRH_Source_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Payment type
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Payment Type EQ WRK.Blank USR
 IF PAR.HRH_Payment_Type = WRK.Blank_USR;

 // IF DB1.CD Payment Type EQ PAR.HRH Payment Type
 IF DB1.CD_Payment_Type = PAR.HRH_Payment_Type;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Producer / location
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.PD Producer Code EQ WRK.Blank USR
 IF PAR.PD_Producer_Code = WRK.Blank_USR;

 // IF PAR.PD Producer Code EQ DB1.PD Producer Code
 IF PAR.PD_Producer_Code = DB1.PD_Producer_Code;

 //?Location
 CASE;

 // IF DB1.PD Producer Code EQ PAR.PD Producer Code
 IF DB1.PD_Producer_Code = PAR.PD_Producer_Code;

 CASE;

 // IF PAR.HRH Prdcr Location Code EQ WRK.Blank USR
 IF PAR.HRH_Prdcr_Location_Code = WRK.Blank_USR;

 // IF DB1.CD Producer Loc/Farm EQ PAR.HRH Prdcr Location Code
 IF DB1.CD_Producer_Loc_Farm = PAR.HRH_Prdcr_Location_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Tattoo number
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Tattoo Number EQ WRK.Zero USR
 IF PAR.HRH_Tattoo_Number = WRK.Zero_USR;

 // IF DB1.TH Tattoo Number EQ PAR.HRH Tattoo Number
 IF DB1.TH_Tattoo_Number = PAR.HRH_Tattoo_Number;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?Farm Site
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Farm Site NE WRK.Zero USR
 IF PAR.HRH_Farm_Site <> WRK.Zero_USR;

 CASE;

 // IF DB1.CD Source Type is External
 IF DB1.CD_Source_Type = 'E';

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Rtv TH Reference #FarmRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1313896;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Purchase_Date);
 PARAMETER(WRK.TH_Group_Reference);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.TH_HPS_Farm_Site);
 PARAMETER(WRK.PD_Producer_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 CASE;

 // IF WRK.Farm Site USR NE PAR.HRH Farm Site
 IF WRK.Farm_Site_USR <> PAR.HRH_Farm_Site;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 // WRK.Farm Site USR = WRK.TH HPS Farm Site
 WRK.Farm_Site_USR = WRK.TH_HPS_Farm_Site;

 CASE;

 // IF WRK.Farm Site USR NE PAR.HRH Farm Site
 IF WRK.Farm_Site_USR <> PAR.HRH_Farm_Site;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 //?Kill Shift
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 CASE;

 // IF PAR.HRH Kill Shift EQ WRK.Blank USR
 IF PAR.HRH_Kill_Shift = WRK.Blank_USR;

 // IF DB1.CD Shift EQ PAR.HRH Kill Shift
 IF DB1.CD_Shift = PAR.HRH_Kill_Shift;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?E10350 JJH 05/17/17 - Record Selection using 6 Source Codes
 //?Record Selection for 6-Source Codes
 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 // AND PAR.TH Source Code-X18 USR is Blank
 AND PAR.TH_Source_Code_X18_USR = *BLANK;

 //?Record Selection for 6-Source Codes
 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-1 USR is NE Blank
 IF LCL.TH_Source_Code_1_USR <> *BLANK;

 // AND LCL.TH Source Code-1 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_1_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-2 USR is NE Blank
 IF LCL.TH_Source_Code_2_USR <> *BLANK;

 // AND LCL.TH Source Code-2 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_2_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-3 USR is NE Blank
 IF LCL.TH_Source_Code_3_USR <> *BLANK;

 // AND LCL.TH Source Code-3 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_3_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-4 USR is NE Blank
 IF LCL.TH_Source_Code_4_USR <> *BLANK;

 // AND LCL.TH Source Code-4 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_4_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-5 USR is NE Blank
 IF LCL.TH_Source_Code_5_USR <> *BLANK;

 // AND LCL.TH Source Code-5 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_5_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF LCL.TH Source Code-6 USR is NE Blank
 IF LCL.TH_Source_Code_6_USR <> *BLANK;

 // AND LCL.TH Source Code-6 USR EQ DB1.SR Source Code
 AND LCL.TH_Source_Code_6_USR = DB1.SR_Source_Code;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Record selected = CND.*NO
 PGM.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 ENDIF;

 CASE;

 // IF PGM.*Record selected is *YES
 IF PGM.*Record_selected = 'Y';

 //?E10350 JJH 05/17/17 - Set the LCL.SR Source Code
 //?Set LCL.SR Source Code
 CASE;

 // IF PAR.TH Source Code-X18 USR is Blank
 IF PAR.TH_Source_Code_X18_USR = *BLANK;

 // LCL.SR Source Code = CND.EQ Blank
 LCL.SR_Source_Code = *BLANK;

 //?Set LCL.SR Source Code
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.SR Source Code = DB1.SR Source Code
 LCL.SR_Source_Code = DB1.SR_Source_Code;

 ENDIF;

 //?Build Report Break
 CASE;

 // IF PAR.Report Type Usr is Tattoo
 IF PAR.Report_Type_Usr = 'T';

 // WRK.Tattoo Nbr Alpha Usr = DB1.TH Tattoo Number
 WRK.Tattoo_Nbr_Alpha_Usr = DB1.TH_Tattoo_Number;

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Tattoo Nbr Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Tattoo_Nbr_Alpha_Usr (1);

 //?Pass the individual TATTOO NUMBER from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer
 IF PAR.Report_Type_Usr = 'P';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.PD Producer Code,CON.1)
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.PD_Producer_Code (1);

 //?Pass the individual producer code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Producer/Location
 IF PAR.Report_Type_Usr = 'L';

 // WRK.Text 10 1 USR = CONCAT(WRK.Company Number Alpha Usr,DB1.PD Producer Code,CON.1)
 WRK.Text_10_1_USR = WRK.Company_Number_Alpha_Usr + DB1.PD_Producer_Code (1);

 // WRK.HRD Report Break = CONCAT(WRK.Text 10 1 USR,DB1.CD Producer Loc/Farm,CON.1)
 WRK.HRD_Report_Break = WRK.Text_10_1_USR + DB1.CD_Producer_Loc_Farm (1);

 //?Pass the individual producer/location code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.CD_Producer_Loc_Farm);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Payment Type
 IF PAR.Report_Type_Usr = 'B';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Payment Type,C
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Payment_Type (1);

 //?Pass the individual payment type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(DB1.CD_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Type
 IF PAR.Report_Type_Usr = 'A';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Source Type,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Source_Type (1);

 //?Pass the individual source type from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(DB1.CD_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Source Code
 IF PAR.Report_Type_Usr = 'S';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.SR Source Code,CO
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.SR_Source_Code (1);

 //?Pass the individual source code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(DB1.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Farm Site
 IF PAR.Report_Type_Usr = 'F';

 CASE;

 // IF DB1.CD Source Type is Internal
 IF DB1.CD_Source_Type = 'I';

 EXECUTE FUNCTION(Rtv TH Reference #FarmRT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1313896;
 PARAMETER(DB1.BOH_Company_Number);
 PARAMETER(DB1.BOH_Buy_Order_Number);
 PARAMETER(DB1.BOL_Load_Number);
 PARAMETER(DB1.TH_Tattoo_Number);
 PARAMETER(DB1.TH_Kill_Date);
 PARAMETER(WRK.TH_Purchase_Date);
 PARAMETER(WRK.TH_Group_Reference);
 PARAMETER(WRK.TH_Payment_Sts);
 PARAMETER(WRK.TH_Source_Type);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.TH_HPS_Farm_Site);
 PARAMETER(WRK.PD_Producer_Code);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF LCL.MTech Live Yes or No is No MTech not Live
 IF LCL.MTech_Live_Yes_or_No = 'N';

 //?* 01/27/03 PKD PK0495 Replaced HP255 with HP249.
 // Call program Z1v HPS Farm Info     UP.
 CALL PROGRAM(Z1v HPS Farm Info     UP) ('HP249');
 PARAMETER(PGM.*Return_code);
 PARAMETER(WRK.TH_HPS_Movement_Ref_#);
 PARAMETER(WRK.Farm_site_Name_f_HPS_USR);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(WRK.HPS_FS_Comp_Relation_USR);
 PARAMETER(WRK.State);

 // WRK.Farm Site Alpha       USR = CVTVAR(WRK.Farm Site USR)
 WRK.Farm_Site_Alpha_USR = CVTVAR(WRK.Farm_Site_USR);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 // IF LCL.MTech Live Yes or No is Yes MTech is Live
 IF LCL.MTech_Live_Yes_or_No = 'Y';

 // WRK.Farm Site USR = WRK.TH HPS Farm Site
 WRK.Farm_Site_USR = WRK.TH_HPS_Farm_Site;

 // WRK.Farm Site Alpha       USR = CVTVAR(WRK.Farm Site USR)
 WRK.Farm_Site_Alpha_USR = CVTVAR(WRK.Farm_Site_USR);

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,WRK.Farm Site Alpha
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + WRK.Farm_Site_Alpha_USR (1);

 ENDIF;

 //?Pass the individual farm site from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(WRK.Farm_Site_USR);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Build Report Break
 // IF PAR.Report Type Usr is Company
 IF PAR.Report_Type_Usr = 'C';

 // WRK.HRD Report Break = WRK.Company Number Alpha Usr
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr;

 //?Pass nothing from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(PAR.HRH_Kill_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 //?Build Report Break
 // IF PAR.Report Type Usr is Shift
 IF PAR.Report_Type_Usr = 'H';

 // WRK.HRD Report Break = CONCAT(WRK.Company Number Alpha Usr,DB1.CD Shift,CON.1)
 WRK.HRD_Report_Break = WRK.Company_Number_Alpha_Usr + DB1.CD_Shift (1);

 //?Pass the individual source code from the detail
 EXECUTE FUNCTION(Rtv Hog Pop f/build   RT) TYPE(RTVOBJ) FILE(PKDACPP)           AB1170939;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_Source_Type);
 PARAMETER(PAR.HRH_Payment_Type);
 PARAMETER(PAR.HRH_Tattoo_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_To_Kill_Date);
 PARAMETER(PAR.HRH_Farm_Site);
 PARAMETER(DB1.CD_Shift);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.SR_Source_Code);
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.HRH_Prdcr_Location_Code);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER('A');
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Hog Popltn Rpt    CR) TYPE(CRTOBJ) FILE(PKDACPP)           AB1153512;
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HRH_Report_Break);
  PARAMETER(PAR.HRH_Company_Number);
  PARAMETER(PAR.HRH_Source_Type);
  PARAMETER(PAR.HRH_Payment_Type);
  PARAMETER(PAR.HRH_Tattoo_Number);
  PARAMETER(PAR.HRH_From_Kill_Date);
  PARAMETER(PAR.HRH_To_Kill_Date);
  PARAMETER(PAR.HRH_Farm_Site);
  PARAMETER(PAR.HRH_Kill_Shift);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  PARAMETER(PAR.HRH_Head_Killed);
  PARAMETER(PAR.HRH_AVG_Hot_Weight);
  PARAMETER(PAR.HRH_Avg_Live_Wgt);
  PARAMETER(PAR.HRH_Avg_Light_Rfl);
  PARAMETER(PAR.HRH_Avg_Loin_Eye);
  PARAMETER(PAR.HRH_Avg_Back_Fat);
  PARAMETER(PAR.HRH_Avg_Lean);
  PARAMETER(PAR.HRH_Adjusted);
  PARAMETER(PAR.SR_Source_Code);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.HRH_Prdcr_Location_Code);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

  QUIT;

  //?USER: Process Data record

  QUIT;

 }

 ENDIF;

 //?Check for report break
 CASE;

 // IF WRK.HRD Report Break NE WRK.Report Break Save
 IF WRK.HRD_Report_Break <> WRK.Report_Break_Save;

 // WRK.*Return code = CND.*Normal
 WRK.*Return_code = *BLANK;

 // Call program Crt Hog Pop Dtl Shell UP.
 CALL PROGRAM(Crt Hog Pop Dtl Shell UP) ('PDT7XFR');
 PARAMETER(WRK.*Return_code);
 PARAMETER(PAR.HRH_Company_Number);
 PARAMETER(PAR.HRH_From_Kill_Date);
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Cutout_Matrix_Code_USR);
 PARAMETER(PAR.Effective_Month_Day_USR);

 //?Read the tattoo header at break and accumulat its totals
 // Call program RTV Hog Pop Tattoo Hdr XF.
 CALL PROGRAM(RTV Hog Pop Tattoo Hdr XF) ('PKU5XFR');
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(PAR.Report_Type_Usr);

 // WRK.Report Break Save = WRK.HRD Report Break
 WRK.Report_Break_Save = WRK.HRD_Report_Break;

 ENDIF;

 // WRK.HPD Carcass Weight = DB1.CD Carcass/Hot Weight
 WRK.HPD_Carcass_Weight = DB1.CD_Carcass_Hot_Weight;

 // WRK.HPD No of Carcass = CON.1
 WRK.HPD_No_of_Carcass = 1;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 CASE;

 // IF PAR.HRH Type Of Distribution is Back fat
 IF PAR.HRH_Type_Of_Distribution = 'B';

 // WRK.HPD Distribution = DB1.CD Backfat Thickness Inch
 WRK.HPD_Distribution = DB1.CD_Backfat_Thickness_Inch;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF PAR.HRH Type Of Distribution is Lean %
 IF PAR.HRH_Type_Of_Distribution = 'P';

 // WRK.HPD Distribution = DB1.CD Lean Percent
 WRK.HPD_Distribution = DB1.CD_Lean_Percent;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF PAR.HRH Type Of Distribution is Loin Eye
 IF PAR.HRH_Type_Of_Distribution = 'E';

 // WRK.HPD Distribution = DB1.CD Loin-Eye Depth Inch
 WRK.HPD_Distribution = DB1.CD_Loin_Eye_Depth_Inch;

 //?Move distribution of backfat, lean% or Loin Eye, ** Light Refl = Zero
 // IF *OTHERWISE
 IF *OTHERWISE;

 // WRK.HPD Distribution = CON.*ZERO
 WRK.HPD_Distribution = *ZERO;

 // WRK.HPD No of Carcass = CON.*ZERO
 WRK.HPD_No_of_Carcass = *ZERO;

 ENDIF;

 EXECUTE FUNCTION(Chg Hog Pop for Report RT) TYPE(RTVOBJ) FILE(PKC9CPP)          AB1153745;
 PARAMETER(PAR.HRH_Type_Of_Distribution);
 PARAMETER(WRK.HRD_Report_Break);
 PARAMETER(WRK.HPD_Carcass_Weight);
 PARAMETER(WRK.HPD_Distribution);
 PARAMETER(WRK.HPD_No_of_Carcass);
 PARAMETER(PAR.HRH_Carcass_Hdr_01);
 PARAMETER(PAR.HRH_Carcass_Hdr_02);
 PARAMETER(PAR.HRH_Carcass_Hdr_03);
 PARAMETER(PAR.HRH_Carcass_Hdr_04);
 PARAMETER(PAR.HRH_Carcass_Hdr_05);
 PARAMETER(PAR.HRH_Carcass_Hdr_06);
 PARAMETER(PAR.HRH_Carcass_Hdr_07);
 PARAMETER(PAR.HRH_Carcass_Hdr_08);
 PARAMETER(PAR.HRH_Carcass_Hdr_09);
 PARAMETER(PAR.HRH_Carcass_Hdr_10);
 PARAMETER(PAR.HRH_Carcass_Hdr_11);
 PARAMETER(PAR.HRH_Carcass_Hdr_12);
 PARAMETER(PAR.HRH_Carcass_Hdr_13);
 PARAMETER(PAR.HRH_Carcass_Hdr_14);
 PARAMETER(PAR.HRH_Carcass_Hdr_15);
 PARAMETER(PAR.HRH_Carcass_Hdr_16);
 PARAMETER(PAR.HRH_Carcass_Hdr_17);
 PARAMETER(PAR.HRH_Carcass_Hdr_18);
 PARAMETER(PAR.HRH_Carcass_Hdr_19);
 {
  //?USER: Process Data record

  CASE;

  // IF PAR.HPD Carcass Weight GE DB1.HRD Min Carcass Weight
  IF PAR.HPD_Carcass_Weight >= DB1.HRD_Min_Carcass_Weight;

  EXECUTE FUNCTION(Chg Hog Ppltn Rpt Col CH) TYPE(CHGOBJ) FILE(PKC9CPP)           AB1153821;
  PARAMETER(DB1.HRH_Type_Of_Distribution);
  PARAMETER(DB1.HRH_Report_Break);
  PARAMETER(DB1.HRD_Min_Carcass_Weight);
  PARAMETER(DB1.HRD_Max_Carcass_Weight);
  PARAMETER(DB1.HRD_Min_Live_Weight);
  PARAMETER(DB1.HRD_Max_Live_Weight);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_01);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_02);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_03);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_04);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_05);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_06);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_07);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_08);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_09);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_10);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_11);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_12);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_13);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_14);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_15);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_16);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_17);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_18);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_19);
  PARAMETER(DB1.HRD_Dist_Carcass_Cnt_Tot);
  PARAMETER(DB1.HRD_Percent_Total);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_01);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_02);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_03);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_04);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_05);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_06);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_07);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_08);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_09);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_10);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_11);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_12);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_13);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_14);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_15);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_16);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_17);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_18);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_19);
  PARAMETER(DB1.HRD_Dist_Hot_Wt_Cnt_20);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  PARAMETER(PAR.HPD_Carcass_Weight);
  PARAMETER(PAR.HPD_Distribution);
  PARAMETER(PAR.HRH_Type_Of_Distribution);
  PARAMETER(PAR.HPD_No_of_Carcass);
  PARAMETER(PAR.HRH_Carcass_Hdr_01);
  PARAMETER(PAR.HRH_Carcass_Hdr_02);
  PARAMETER(PAR.HRH_Carcass_Hdr_03);
  PARAMETER(PAR.HRH_Carcass_Hdr_04);
  PARAMETER(PAR.HRH_Carcass_Hdr_05);
  PARAMETER(PAR.HRH_Carcass_Hdr_06);
  PARAMETER(PAR.HRH_Carcass_Hdr_07);
  PARAMETER(PAR.HRH_Carcass_Hdr_08);
  PARAMETER(PAR.HRH_Carcass_Hdr_09);
  PARAMETER(PAR.HRH_Carcass_Hdr_10);
  PARAMETER(PAR.HRH_Carcass_Hdr_11);
  PARAMETER(PAR.HRH_Carcass_Hdr_12);
  PARAMETER(PAR.HRH_Carcass_Hdr_13);
  PARAMETER(PAR.HRH_Carcass_Hdr_14);
  PARAMETER(PAR.HRH_Carcass_Hdr_15);
  PARAMETER(PAR.HRH_Carcass_Hdr_16);
  PARAMETER(PAR.HRH_Carcass_Hdr_17);
  PARAMETER(PAR.HRH_Carcass_Hdr_18);
  PARAMETER(PAR.HRH_Carcass_Hdr_19);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

   //?ACCUMULATE TO CORRECT COLUMN
   CASE;

   // IF PAR.HRH Type Of Distribution is Lean %
   IF PAR.HRH_Type_Of_Distribution = 'P';

   // OR PAR.HRH Type Of Distribution is Loin Eye
   OR PAR.HRH_Type_Of_Distribution = 'E';

   // WRK.HPD Distribution = PAR.HPD Distribution
   WRK.HPD_Distribution = PAR.HPD_Distribution;

   //?Head are from columns are loaded highest to the lowest
   //?Add to correct column  Highest to Lowest
   CASE;

   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 01
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_01;

   //?col 01 only
   // DB1.HRD Dist Carcass Cnt 01 = DB1.HRD Dist Carcass Cnt 01 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_01 = DB1.HRD_Dist_Carcass_Cnt_01 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 02
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_02;

   //?col 02 only
   // DB1.HRD Dist Carcass Cnt 02 = DB1.HRD Dist Carcass Cnt 02 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_02 = DB1.HRD_Dist_Carcass_Cnt_02 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 03
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_03;

   //?col 03 only
   // DB1.HRD Dist Carcass Cnt 03 = DB1.HRD Dist Carcass Cnt 03 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_03 = DB1.HRD_Dist_Carcass_Cnt_03 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 04
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_04;

   //?col 04
   // DB1.HRD Dist Carcass Cnt 04 = DB1.HRD Dist Carcass Cnt 04 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_04 = DB1.HRD_Dist_Carcass_Cnt_04 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 05
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_05;

   //?col 05 only
   // DB1.HRD Dist Carcass Cnt 05 = DB1.HRD Dist Carcass Cnt 05 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_05 = DB1.HRD_Dist_Carcass_Cnt_05 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 06
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_06;

   //?col 06 only
   // DB1.HRD Dist Carcass Cnt 06 = DB1.HRD Dist Carcass Cnt 06 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_06 = DB1.HRD_Dist_Carcass_Cnt_06 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 07
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_07;

   //?col 07 only
   // DB1.HRD Dist Carcass Cnt 07 = DB1.HRD Dist Carcass Cnt 07 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_07 = DB1.HRD_Dist_Carcass_Cnt_07 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 08
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_08;

   //?col 08 only
   // DB1.HRD Dist Carcass Cnt 08 = DB1.HRD Dist Carcass Cnt 08 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_08 = DB1.HRD_Dist_Carcass_Cnt_08 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 09
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_09;

   //?col 09 only
   // DB1.HRD Dist Carcass Cnt 09 = DB1.HRD Dist Carcass Cnt 09 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_09 = DB1.HRD_Dist_Carcass_Cnt_09 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 10
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_10;

   //?col 10 only
   // DB1.HRD Dist Carcass Cnt 10 = DB1.HRD Dist Carcass Cnt 10 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_10 = DB1.HRD_Dist_Carcass_Cnt_10 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 11
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_11;

   //?col 11
   // DB1.HRD Dist Carcass Cnt 11 = DB1.HRD Dist Carcass Cnt 11 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_11 = DB1.HRD_Dist_Carcass_Cnt_11 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 12
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_12;

   //?col 12 only
   // DB1.HRD Dist Carcass Cnt 12 = DB1.HRD Dist Carcass Cnt 12 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_12 = DB1.HRD_Dist_Carcass_Cnt_12 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 13
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_13;

   //?col 13 only
   // DB1.HRD Dist Carcass Cnt 13 = DB1.HRD Dist Carcass Cnt 13 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_13 = DB1.HRD_Dist_Carcass_Cnt_13 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 14
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_14;

   //?col 14 only
   // DB1.HRD Dist Carcass Cnt 14 = DB1.HRD Dist Carcass Cnt 14 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_14 = DB1.HRD_Dist_Carcass_Cnt_14 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 15
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_15;

   //?col 15 only
   // DB1.HRD Dist Carcass Cnt 15 = DB1.HRD Dist Carcass Cnt 15 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_15 = DB1.HRD_Dist_Carcass_Cnt_15 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 16
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_16;

   //?col 16 only
   // DB1.HRD Dist Carcass Cnt 16 = DB1.HRD Dist Carcass Cnt 16 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_16 = DB1.HRD_Dist_Carcass_Cnt_16 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 17
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_17;

   //?col 17 only
   // DB1.HRD Dist Carcass Cnt 17 = DB1.HRD Dist Carcass Cnt 17 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_17 = DB1.HRD_Dist_Carcass_Cnt_17 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF WRK.HPD Distribution GE PAR.HRH Carcass Hdr 18
   IF WRK.HPD_Distribution >= PAR.HRH_Carcass_Hdr_18;

   //?col 18 only
   // DB1.HRD Dist Carcass Cnt 18 = DB1.HRD Dist Carcass Cnt 18 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_18 = DB1.HRD_Dist_Carcass_Cnt_18 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Highest to Lowest
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?col 19 only
   // DB1.HRD Dist Carcass Cnt 19 = DB1.HRD Dist Carcass Cnt 19 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_19 = DB1.HRD_Dist_Carcass_Cnt_19 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   ENDIF;

   //?ACCUMULATE TO CORRECT COLUMN
   // IF PAR.HRH Type Of Distribution is Back fat
   IF PAR.HRH_Type_Of_Distribution = 'B';

   //?Head are from loaded from the lowest to the highest
   //?Add to correct column  Lowest to Highest
   CASE;

   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 19
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_19;

   //?col 19 only
   // DB1.HRD Dist Carcass Cnt 19 = DB1.HRD Dist Carcass Cnt 19 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_19 = DB1.HRD_Dist_Carcass_Cnt_19 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // PGM.*Record Data Changed = CND.*YES
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 18
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_18;

   //?col 18 only
   // DB1.HRD Dist Carcass Cnt 18 = DB1.HRD Dist Carcass Cnt 18 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_18 = DB1.HRD_Dist_Carcass_Cnt_18 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 17
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_17;

   //?col 17 only
   // DB1.HRD Dist Carcass Cnt 17 = DB1.HRD Dist Carcass Cnt 17 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_17 = DB1.HRD_Dist_Carcass_Cnt_17 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 16
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_16;

   //?col 16 only
   // DB1.HRD Dist Carcass Cnt 16 = DB1.HRD Dist Carcass Cnt 16 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_16 = DB1.HRD_Dist_Carcass_Cnt_16 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 15
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_15;

   //?col 15 only
   // DB1.HRD Dist Carcass Cnt 15 = DB1.HRD Dist Carcass Cnt 15 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_15 = DB1.HRD_Dist_Carcass_Cnt_15 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 14
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_14;

   //?col 14 only
   // DB1.HRD Dist Carcass Cnt 14 = DB1.HRD Dist Carcass Cnt 14 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_14 = DB1.HRD_Dist_Carcass_Cnt_14 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 13
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_13;

   //?col 13 only
   // DB1.HRD Dist Carcass Cnt 13 = DB1.HRD Dist Carcass Cnt 13 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_13 = DB1.HRD_Dist_Carcass_Cnt_13 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 12
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_12;

   //?col 12 only
   // DB1.HRD Dist Carcass Cnt 12 = DB1.HRD Dist Carcass Cnt 12 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_12 = DB1.HRD_Dist_Carcass_Cnt_12 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 11
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_11;

   //?col 11
   // DB1.HRD Dist Carcass Cnt 11 = DB1.HRD Dist Carcass Cnt 11 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_11 = DB1.HRD_Dist_Carcass_Cnt_11 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 10
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_10;

   //?col 10 only
   // DB1.HRD Dist Carcass Cnt 10 = DB1.HRD Dist Carcass Cnt 10 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_10 = DB1.HRD_Dist_Carcass_Cnt_10 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 09
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_09;

   //?col 09 only
   // DB1.HRD Dist Carcass Cnt 09 = DB1.HRD Dist Carcass Cnt 09 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_09 = DB1.HRD_Dist_Carcass_Cnt_09 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 08
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_08;

   //?col 08 only
   // DB1.HRD Dist Carcass Cnt 08 = DB1.HRD Dist Carcass Cnt 08 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_08 = DB1.HRD_Dist_Carcass_Cnt_08 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 07
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_07;

   //?col 07 only
   // DB1.HRD Dist Carcass Cnt 07 = DB1.HRD Dist Carcass Cnt 07 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_07 = DB1.HRD_Dist_Carcass_Cnt_07 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 06
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_06;

   //?col 06 only
   // DB1.HRD Dist Carcass Cnt 06 = DB1.HRD Dist Carcass Cnt 06 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_06 = DB1.HRD_Dist_Carcass_Cnt_06 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 05
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_05;

   //?col 05 only
   // DB1.HRD Dist Carcass Cnt 05 = DB1.HRD Dist Carcass Cnt 05 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_05 = DB1.HRD_Dist_Carcass_Cnt_05 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 04
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_04;

   //?col 04
   // DB1.HRD Dist Carcass Cnt 04 = DB1.HRD Dist Carcass Cnt 04 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_04 = DB1.HRD_Dist_Carcass_Cnt_04 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 03
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_03;

   //?col 03 only
   // DB1.HRD Dist Carcass Cnt 03 = DB1.HRD Dist Carcass Cnt 03 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_03 = DB1.HRD_Dist_Carcass_Cnt_03 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF PAR.HPD Distribution GE PAR.HRH Carcass Hdr 02
   IF PAR.HPD_Distribution >= PAR.HRH_Carcass_Hdr_02;

   //?col 02 only
   // DB1.HRD Dist Carcass Cnt 02 = DB1.HRD Dist Carcass Cnt 02 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_02 = DB1.HRD_Dist_Carcass_Cnt_02 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   //?Add to correct column  Lowest to Highest
   // IF *OTHERWISE
   IF *OTHERWISE;

   //?col 01 only
   // DB1.HRD Dist Carcass Cnt 01 = DB1.HRD Dist Carcass Cnt 01 + PAR.HPD No of Carcas
   DB1.HRD_Dist_Carcass_Cnt_01 = DB1.HRD_Dist_Carcass_Cnt_01 + PAR.HPD_No_of_Carcass;

   // DB1.HRD Dist Carcass Cnt Tot = DB1.HRD Dist Carcass Cnt Tot + PAR.HPD No of Carc
   DB1.HRD_Dist_Carcass_Cnt_Tot = DB1.HRD_Dist_Carcass_Cnt_Tot + PAR.HPD_No_of_Carcass;

   // *MO.VE             1183529*Bu = ilt. in functions
   PGM.*Record_Data_Changed = 'Y';

   ENDIF;

   ENDIF;

  }

  QUIT;

  ENDIF;

 }

 ENDIF;

}


ENDIF;

ENDIF;

