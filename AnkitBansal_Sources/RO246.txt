     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO246
      * TITLE:       NonByproduct Mix Shoulder Splits
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     07/10/08
      *
      *
      * FUNCTION:    We will write 5 exception records in this program:
      *                 1) Split To Item 25123   (increase)
      *                 2) Split From Item 22126 (decrease)
      *                 2) Split From Item 427   (offset)
      *                 3) Split From Item 20027 (offset)
      *                 4) Split From Item 20037 (offset)
      *
      *  Note: Up until this program, all programs in the Meat Costing System were there
      *        for either 1) Meat Costing or 2) TFS Byproduct Mix.
      *
      *        This program is for Shoulder Splits which is for TFS MIX...just not ByProduct.
      *        So, it is not really for 1) Meat Costing or 2) TFS Byproduct Mix.
      *        But we wanted to call all of these "split" programs from the same function.
      *        So, we call this program from RO410CL-Meat Costing instead of TF415CL-Margin
      *        Adjustment Close.
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 09/11/08  LeAnne Ramsey
      *           Recompile only. Export/Domestic Flag was added to TFP010-
      *           Weekly Product Revenue Detail file.
      *
      * 11/20/08  LeAnne Ramsey
      *           As a prep for synchronizing the TFS and Meat Cost LDAs, we
      *           removed the unused LDA fields.
      *
      * 11/21/08  LeAnne Ramsey
      *           As part of synchronizing the LDAs between the TFS Margin Adjustment Close
      *           and the Meat Costing, we changed the LDA positions.
      *
      * 01/21/09  LeAnne Ramsey
      *           Changed calculation logic per Damon Ginther.
      *           Changed workfields to match the field sizes in TFP019.
      *
      * 01/22/09  LeAnne Ramsey
      *           Changed calculation logic to call RO800 to retrieve
      *           Produced Pounds/Amounts instead of using TFP010 for
      *           Items 427, 20027, 20037.
      *
      * 02/26/09  LeAnne Ramsey
      *           We will now retrieve the Smoker Yield Percent from the
      *           Resource Optimization Header.
      *
      * 02/17/10  LeAnne Ramsey
      *           Recompile only. Two new fields were added to the Resource Optimization Header:
      *                Cap&Blade Allocation % for Special Trim
      *                Cap&Blade Allocation % for Regular Trim
      *
      * 03/08/12  LeAnne Ramsey (E1984)
      *           Recompile only.
      *           Added 6 new Skirt Meat Allocation Flag fields to ROP100.
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Recompile only. Added 25 STF fields to TFP010 file.
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *
      * W105621 RMC 10/10/2022 INCREASE FIELD SIZES TO HANDLE PRICES > 999.99
      *         CHANGE @@ANPRPR TO SIZE 10.6
      *           CHANGES PRANPRPR IN TFP010
      *
      *
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     fomfarel1  if   e           k disk
      *  Product class
      *
      *
     frop100    if   e           k disk
      *  Resource optimaztion header
      *
      *
     ftfp010    if   e           k disk
      *  Weekly product revenue detail
      *
      *
     ftfp019    o    e           k disk
      *  TF Product exceptions
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wkprcd          s                   like(prprcd)
     D wkcono          s                   like(ohcono) inz(360)
      *
     D wkpr            s              9  6
     D wkyldrt         s              9  6
     D wkbuttrt        s              9  6
     D wkpicrt         s              9  6
     D wkpump          s              9  6
     D wkrate          s              9  6
      *
     D wkspuam         s                   like(pesexpuam)
     D wktpuam         s                   like(pesexpuam)
     D wkapuam         s                   like(pesexpuam)
     D wksbuttam       s                   like(pesexpuam)
     D wktbuttam       s                   like(pesexpuam)
      *
     D wkspulb         s                   like(pesexpulb)
     D wktpulb         s                   like(pesexpulb)
     D wkapulb         s                   like(pesexpulb)
      *
     D wkspuslb        s                   like(pesexpulb)
     D wktpuslb        s                   like(pesexpulb)
      *
     D wksbuttlb       s                   like(pesexpulb)
     D wktbuttlb       s                   like(pesexpulb)
      *
      *
      * Fields for accumulations for Item 22126
      *
     D wks126am        s                   like(pesexpuam)
     D wkt126am        s                   like(pesexpuam)
     D wks126lb        s                   like(pesexpulb)
     D wkt126lb        s                   like(pesexpulb)
      *
      * Fields for accumulations for Item 25123
      *
     D wks123am        s                   like(pesexpuam)
     D wkt123am        s                   like(pesexpuam)
     D wk123tpuslb     s                   like(pesexpulb)
     D wk123spuslb     s                   like(pesexpulb)
      *
      * Parms
      *
     D xxsn            s              7  0
     D xxpfcd          s              1
      *
     D xxspuam         s             15  6
     D xxspulb         s             15  4
      *
     D xxtpuam         s             15  6
     D xxtpulb         s             15  4
      *
     D xxaslam         s             15  6
     D xxasllb         s             15  4
     D xxapuam         s             15  6
     D xxapulb         s             15  4
      *
     D xxwedt          s              8  0
     D xxitcd          s              7  0
     D xxfzfl          s              1
     d xxmurt          s              9  6
     d xxmupc          s              7  4
     D xxcredit        s              1
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldpfcd                 1      1
     D  ldyr                   2      5  0
     D  ldwk                   6      7  0
      *
     D  ldwedt                29     36  0
      *
     D  ldfzfl                81     81
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Hardcode the value for Butt Percent (48.37%) as a rate.
      * Then, calc Picnic Percent as 100 less Butt Percent.
      *
     C                   z-add     .4837         wkbuttrt
     C     1             sub       .4837         wkpicrt
      *
      * Retrieve the special Smoker Yield Percent for the Week from the
      * Resource Optimization Header.
      *
     C     key02         chain     rop100                             92
     C                   if        *in92 = *off
     C                   eval      wkyldrt = ohsmokypc / 100
     C                   endif
      *
      * Calculate a Price/LB for Item 22126 for the week using accumulated
      * Aggregate Produced Values from the Weekly Revenue Detail file.
      *
     C                   z-add     22126         wkprcd
     C     key01         setll     tfp010
      *
     C                   dou       *in91 = *on                                  Do 22126
     C     key01         reade     tfp010                                 91
     C                   if        *in91 = *off                                 If not eof
     C                   add       prapuam       wkapuam
     C                   add       prapulb       wkapulb
     C                   endif                                                  If not eof
     C                   enddo                                                  Do 22126
      *    Price/lb
     C                   if        wkapulb <> 0
     C                   eval(h)   wkpr = wkapuam / wkapulb
     C                   endif
      *
      * Write 3 "Offset" Exception records to zero out Dollars/Pounds.
      * (Items: 427, 20027, 20037)
      *
     C                   z-add     427           wkprcd
     C                   exsr      $accum
     C                   exsr      $offset
      *
     C                   z-add     20027         wkprcd
     C                   exsr      $accum
     C                   exsr      $offset
      *
     C                   z-add     20037         wkprcd
     C                   exsr      $accum
     C                   exsr      $offset
      *
      * Write 1 Exception record to increase Dollars/Pounds for Item 25123
      *
     C                   exsr      $increase
      *
      * Write 1 Exception record to decrease Dollars/Pounds for Item 22126
      *
     C                   exsr      $decrease
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------------------------------
      * Accumulate Produced Values for the Item/Week and make Calculations
      *---------------------------------------------------------------------------------------
      *
     C     $accum        begsr
      *
      * Clear accumulators
     C                   z-add     0             wkspuslb
     C                   z-add     0             wkspulb
     C                   z-add     0             wkspuam
      *
     C                   z-add     0             wktpuslb
     C                   z-add     0             wktpulb
     C                   z-add     0             wktpuam
      *
     C                   z-add     0             wkpump
     C                   z-add     0             wkrate
      *
      * Retrieve Yield/Pump for the Item/Week
      *   Get Pump Percent into a "rate" field (and add 1 to it)
      *   Get Yield Percent into a "rate" field
      *
     C     key01         chain     tfp010                             92
     C                   if        *in92 = *off                                 If not eof
     C                   eval      wkpump = (prpumppc / 100) + 1
     C                   eval      wkrate = prypc / 100
     C                   endif                                                  If not eof
      *
      * Call generic program to retrieve/accumulate Values for Item/Week.
      *
     C                   call      'RO800'
     C                   parm      no            xxcredit
     C                   parm      ldwedt        xxwedt
     C                   parm      wkprcd        xxitcd
     C                   parm      ldfzfl        xxfzfl
     C                   parm      0             xxmurt
     C                   parm      0             xxmupc
     C     wkspulb       parm      0             xxspulb
     C     wkspuam       parm      0             xxspuam
     C     wktpulb       parm      0             xxtpulb
     C     wktpuam       parm      0             xxtpuam
     C                   parm      0             xxasllb
     C                   parm      0             xxaslam
     C                   parm      0             xxapulb
     C                   parm      0             xxapuam
      *
      *
      * Calc Start Weight = (produced pounds / yield rate) / pump rate
      * Accumulate Total Start Weights for the 25123 record
      *
     C                   if        wkrate <> 0 and wkpump <> 0                  If yld/pump
     C                   eval(h)   wkspuslb = ((wkspulb / wkrate) / wkpump)
     C                   eval(h)   wktpuslb = ((wktpulb / wkrate) / wkpump)
     C                   add       wkspuslb      wk123spuslb
     C                   add       wktpuslb      wk123tpuslb
     C                   endif                                                  If yld/pump
      *
      * Calculate the "butt equivalent pounds":
      *    Butt Equivalent Lbs = produced start weight * butt percent
      *
     C                   eval(h)   wksbuttlb = wkspuslb * wkbuttrt
     C                   eval(h)   wktbuttlb = wktpuslb * wkbuttrt
      *
      * Calculate the "butt equivalent amount":
      *    Butt Equivalent $$ = butt equivalent lbs * the Price/Lb for Item 22126
      *
     C                   eval(h)   wksbuttam = wksbuttlb * wkpr
     C                   eval(h)   wktbuttam = wktbuttlb * wkpr
      *
      * Accumulate Butt Equivalent Dollars for writing 25123
      *
     C                   eval      wks123am  = wks123am + wksbuttam - wkspuam
     C                   eval      wkt123am  = wkt123am + wktbuttam - wktpuam
      *
      * Accumulate Butt Equivalent Pounds and Butt Amount for writing the 22126 record
      *
     C                   add       wksbuttlb     wks126lb
     C                   add       wktbuttlb     wkt126lb
      *
     C                   add       wksbuttam     wks126am
     C                   add       wktbuttam     wkt126am
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Write Exception record to "offset" the dollars/pounds for Items 427, 20027, 20037
      *-------------------------------------------------------------------------------------
      *
      * Damon wants us to "zero" out the Pounds/Dollars on the reports. We will do this by
      * writing Exception records to reverse out the Pounds/Dollars from the TFP010 record.
      *
     C     $offset       begsr
      *
     C                   eval      peexcom = 'Splt to 22126 (see 25123)'
     C                   z-add     wkprcd        peprcd
      *     Dollars
     C                   eval      pesexpuam = wkspuam * -1
     C                   eval      petexpuam = wktpuam * -1
      *     Pounds
     C                   eval      pesexpulb = wkspulb * -1
     C                   eval      petexpulb = wktpulb * -1
      *
      * If anything, write an "offset" record
      *
     C                   if        pesexpulb <> 0 or pesexpuam <> 0 or
     C                             petexpulb <> 0 or petexpuam <> 0
     C                   exsr      $wrt019
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Write Exception record to "increase" dollars/pounds for Item 25123
      *---------------------------------------------------------------------------
      *
     C     $increase     begsr
      *
     C                   z-add     25123         wkprcd
     C                   z-add     25123         peprcd
     C                   eval      peexcom = 'Trfr from 427 20027 20037'
      *
      * Calculate Exception Pounds as:
      *     Start Weights * Picnic Percent * Smoker Yield Percent
      *
     C                   eval(h)   pesexpulb = wk123spuslb * wkpicrt * wkyldrt
     C                   eval(h)   petexpulb = wk123tpuslb * wkpicrt * wkyldrt
      *
      * Exception Amount
      *
     C     -1            mult      wks123am      pesexpuam
     C     -1            mult      wkt123am      petexpuam
      *
     C                   if        pesexpulb <> 0 or pesexpuam <> 0 or
     C                             petexpulb <> 0 or petexpuam <> 0
     C                   exsr      $wrt019
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------
      * Write Exception record to "decrease" Item 22126
      *---------------------------------------------------------------------------
      *
     C     $decrease     begsr
      *
     C                   z-add     22126         wkprcd
     C                   z-add     22126         peprcd
     C                   eval      peexcom = 'Spl 25123 427 20027 20037'
      *
      * Exception Pounds
     C                   z-add     wks126lb      pesexpulb
     C                   z-add     wkt126lb      petexpulb
      *
      * Exception Amount
     C                   z-add     wks126am      pesexpuam
     C                   z-add     wkt126am      petexpuam
      *
     C                   if        pesexpulb <> 0 or pesexpuam <> 0 or
     C                             petexpulb <> 0 or petexpuam <> 0
     C                   exsr      $wrt019
     C                   endif
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------
      * Write a Product Exception record
      *-------------------------------------------------------------------------------
      *
     C     $wrt019       begsr
      *
      * Hardcoded values
     C                   move      'Y'           pesysfl
     C                   eval      pepgm = sdpgm
      * LDA values
     C                   z-add     ldyr          peyr
     C                   z-add     ldwk          pewk
     C                   z-add     ldwedt        pewedt
      *
     C                   z-add     xxsn          pepesn
      *
      * Retrieve various values for this Item from the Revenue Detail file
      *
     C                   exsr      $rtv010
      *
      * Retrieve Description for Item Structure Class Code.
      *
     C     peisclcd      chain     omfarel1                           92
     C                   if        *in92 = *off
     C                   eval      peisclds = fadetx
     C                   endif
      *
     C                   write     perec
     C                   clear                   perec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Retrieve the various values from the Weekly Producd Revenue Detail file
      *-----------------------------------------------------------------------------------
      *
     C     $rtv010       begsr
      *
      * Key values:
      *  Product Code
      *  WeekEnding Date
      *
     C     key01         chain     tfp010                             92
     C                   if        *in92 = *off
     C                   move      prvolfl       pevolfl
     C                   move      prtfclcd      petfclcd
     C                   move      prtfcgcd      petfcgcd
     C                   move      prcgcd        pecgcd
     C                   move      prmixfl       pemixfl
     C                   movel     pritycd       peitycd
     C                   z-add     pristycd      peistycd
     C                   z-add     prisgrcd      peisgrcd
     C                   z-add     prisclcd      peisclcd
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkprcd
     C                   kfld                    ldwedt
      *
     C     key02         klist
     C                   kfld                    wkcono
     C                   kfld                    ldwedt
      *
      *
      * Get a Product Exception Number  (system-assigned)
      * (We will use a single number for all 5 exception records).
      *
     C                   call      'TF810'
     C                   parm      ldpfcd        xxpfcd
     C                   parm      0             xxsn
      *
     C                   endsr
      /eject
