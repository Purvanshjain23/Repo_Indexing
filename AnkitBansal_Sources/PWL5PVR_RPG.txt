     H/TITLE Prt Repayment Listing PV  Prompt & validate record
     H DATFMT(*YMD) DATEDIT(*YMD) DEBUG(*YES)
     Z* CRTBNDRPG
     Z* DFTACTGRP(*NO) BNDDIR(YBNDDIR) DBGVIEW(*SOURCE)
     Z* CVTOPT(*DATETIME) ACTGRP(*CALLER) OPTIMIZE(*BASIC)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by CA 2E release 8.7 (1632)
     H* Function type : Prompt & validate record
     H* Object type   : *PGM
      *
     H* Company       : HPEDEVMDL
     H* System        : HPEDEVMDL
     H* User name     : ISJBADE
     H* Date          : 07/16/21  Time  : 15:04:41
     H* Copyright     : HPEDEVMDL
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPKVLLSL0  IF   E           K DISK
      * Values list details file
      *
     FPWL5PVR#  CF   E             WORKSTN
     F                                     INFDS(INFDS#)
      * DSP: Prt Repayment Listing PV  Prompt & validate record
      *
     FPKAZREL1  IF   E           K DISK
      * RTV : Company Control HPE       Retrieval index
      *
     FPWAWCPL0  IF   E           K DISK
      * RTV : Tattoo Repayment Header   Retrieval index
      *
      * Days in month for date validation
     D @XD             S              2  0 DIM(12)CTDATA PERRCD(12)
      /EJECT
      * Data structures:
     D PGMDS         ESDS                  EXTNAME(Y2PGDSP)
      * Modified Program data structure
     D JBDTTM          DS
      * Job date/time
     D  ##JDT                  1      7  0
     D  ##JCC                  1      1  0
     D  ##JYY                  2      3  0
     D  ##JMM                  4      5  0
     D  ##JDD                  6      7  0
     D  ##JTM                  8     13  0
     D  ##JHH                  8      9  0
     D  ##JNN                 10     11  0
     D  ##JSS                 12     13  0
      * ABO DEFINE LARGE STRING FOR CL CMD
     D YARTCM          DS           512
     D  DUMMY1                 1      1
     D INFDS#        E DS                  EXTNAME(Y2I#DSP)
      * Display file information data structure
      *
      /EJECT
     D XDEX            DS
      * External date
     D  XDEXDT                 1      8  0
     D  XDEY01                 1      4  0
     D  XDEX01                 1      2  0
     D  XDEX02                 3      4  0
     D  XDEY02                 5      8  0
     D  XDEX03                 5      6  0
     D  XDEX04                 7      8  0
      /EJECT
     D XDINT           DS
      * Internal date
     D  XDINDT                 1      7  0
     D  XDINYY                 1      3  0
     D  XDINMM                 4      5  0
     D  XDINDD                 6      7  0
      /EJECT
     D XTCK            DS
      * Time: hours, minutes, seconds
     D  XTTIM                  1      6  0
     D  XTHH                   1      2  0
     D  XTNN                   3      4  0
     D  XTSS                   5      6  0
      /EJECT
     D XDOFF           DS
      * Cut-off year
     D  XOFF                   1      4  0
     D  XOFFYY                 3      4  0
      *
      * Declared stand-alone variables
     D  P0RTN          S              7
     D  WP0001         S              3  0
     D  WP0002         S              5  0
     D  W0ICL          S              1
     D  W0RTN          S              7
     D  W0RSL          S              1
     D  W0RSF          S              1
     D  W0RTW          S              9  0
     D  W0ENV          S              3
     D  ##TME          S              6  0
     D  W0TRN          S              1
     D  W0HLP          S              1
     D  YPMT04         S              1
     D  HELP25         S              1
     D  ##OFF          S             30
     D  ZHCSRW         S              5  0
     D  ZHCSCL         S              5  0
     D  ZZCSRW         S              3  0
     D  ZZCSCL         S              3  0
     D  W0HPMB         S             10
     D  YYHPFL         S             10
     D  YYHPLB         S             10
     D  YYHLVN         S             10
     D  YYUSOP         S             10
     D  YYRW           S              5  0
     D  YYCL           S              5  0
     D  YYLGCT         S              5  0
     D  YYLGVN         S             10
     D  ZAPGMQ         S             10
     D  ZAPGRL         S              5
     D  ZAFSMS         S              1
     D  W0DCF          S              1
     D  WQ0001         S             25
     D  WQ0002         S             10
     D  WQ0003         S              4
     D  WQ0004         S              4
     D  WQ0005         S              2  0
     D  WQ0006         S              1
     D  WQ0007         S             10
     D  WQ0008         S              6
     D  W0CLPG         S             10
     D  WQ0009         S              3  0
     D  WQ0010         S              7  0
     D  WQ0011         S              7  0
     D  WQ0012         S              1
     D  WQ0013         S              5  0
     D  WQ0014         S              1
     D  WQ0015         S              1
     D  WQ0016         S             10
     D  WQ0017         S              4
     D  WQ0018         S              4
     D  WQ0019         S              2  0
     D  W0NSRQ         S              1
     D  Y2LSNO         S              7  0
     D  W0EXVL         S             25
     D  XDWK1          S              8  0
     D  XDDTFM         S              3
     D  WUBSNB         S              7  0
     D  WUB1DT         S              7  0
     D  WUB2DT         S              7  0
     D  WUH4NB         S              3  0
     D  WQ0020         S              3  0
     D  WQ0021         S              7  0
     D  WQ0022         S              7  0
     D  WQ0023         S              7  0
     D  WQ0024         S              3  0
     D  ZADFMF         S             10
     D  Y0CX01         S              1
     D  YN0001         S              7  0
     D  YN0002         S              6  0
     D  YN0003         S              7  0
     D  YN0004         S              6  0
     D  YN0005         S              7  0
     D  YN0006         S              5  0
     D  YN0007         S              6
     D  YL0001         S              3  0
     D  WN30           S             30
     D  YPMTFD         S             10
     D  YAFSCH         S              4  0
     D  YPMRRN         S              4  0
     D  W0GRP          S              1
     D  YSETCS         S              1
     D  WCSRLC         S              3
     D  ZINPOS         S              5  0
     D  ZAMSID         S              7
     D  ZAMSGF         S             10
     D  ZAMSTP         S              7
     D  YILE           S              1
     D  W0CFL          S             10
     D  W0CRW          S              5  0
     D  W0CCL          S              5  0
     D  ZZFFL          S             10
     D  ZZFLB          S             10
     D  ZZFMB          S             10
     D  @1FFL          S             10
     D  @1FLB          S             10
     D  @1FMB          S             10
     D  ZZFQL          S             21
     D  W0PMT          S              1
      /EJECT
      * Parameter declarations
     D P1PARM          DS
      * FLD: Tattoo Repayment Header
      * I :  CC Company Number
     D  P1HONB                 1      2P 0
      * I :  TRH Repayment ID
     D  P1CDNZ                 3      5P 0
     D P2PARM          DS
      * FLD: *Arrays
      * N :  PRT Description
     D  P2ETTX                 1     25
      * N :  PRT Printer Device
     D  P2ACVN                26     35
      * N :  PRT Hold Output Sts
     D  P2AKST                36     39
      * N :  PRT Save Output Sts
     D  P2AMST                40     43
      * N :  PRT Copies
     D  P2AKNB                44     45  0
      * N :  Number of Copies Pass USR
     D  P2ZEA1                46     53P 5
      * N :  PRT Copies Alpha
     D  P2UGTX                54     55
      * N :  PRT Night Queue Run Sts
     D  P2ALST                56     56
      * N :  PRT Night Queue
     D  P2AIVN                57     66
      * N :  Oms Application Code
     D  P2C7CD                67     72
     D                 DS
     D  ZAMSDA                 1    132
      * Message data for 'Repay: Enter ID or Dates'
      * TRH Repayment ID
     D  ZA0001                 1      3P 0
      * Date 2 USR
     D  ZA0002                 4      7P 0
      * TRH Payment Date
     D  ZA0003                 8     11P 0
      * Message data for 'Repay: Tatto Repay Hdr NF'
      * CC Company Number
     D  ZA0004                 1      2P 0
      * TRH Repayment ID
     D  ZA0005                 3      5P 0
      * Message data for 'From Date > To Date'
      * Date From USR
     D  ZA0006                 1      4P 0
      * Date To   USR
     D  ZA0007                 5      8P 0
     I@AZCPCN
      * Company Control HPE       Retrieval index
      * Renamed input format fields
     I              AZHONB                      WAHONB
     I              AZBSNB                      WABSNB
     I              AZB1DT                      WAB1DT
     I              AZB2DT                      WAB2DT
     I              AZH4NB                      WAH4NB
     I              AZK3NB                      WAK3NB
     I              AZCDDT                      WACDDT
     I              AZCEDT                      WACEDT
     I              AZAAVN                      WAAAVN
     I              AZAADT                      WAAADT
     I              AZAMTM                      WAAMTM
     I              AZAJST                      WAAJST
     I              AZAHVN                      WAAHVN
     I              AZAGVN                      WAAGVN
     I              AZABVN                      WAABVN
     I              AZABDT                      WAABDT
     I              AZABTM                      WAABTM
      *
      /EJECT
      *****************************************************************
      * Entry parameters
     C     *ENTRY        PLIST
     C                   PARM                    P0RTN
     C     P1HONB        PARM                    WP0001                         CC Company Numb
     C     P1CDNZ        PARM                    WP0002                         TRH Repayment I
      *****************************************************************
      * Initialize
     C                   EXSR      ZZINIT
      *
      * Conduct screen conversation
     C                   DO        *HIVAL
      * Start new transaction
     C                   MOVEL     'Y'           W0TRN
      * Process current transaction
      * Convert fields to external form
     C                   DOW       W0TRN = 'Y'
     C                   EXSR      MNCV#1
      * Display screen
     C                   EXSR      CAEXFM
      * Process response
      * Cancel & exit program
     C   03              CAS                     ZXEXPG
      * HOME: Reset screen fields
     C   30              CAS                     MALDSC
      * Process screen input
     C                   CAS                     DAPRSC
     C                   END
      *
     C                   END
      *
     C                   END
      *****************************************************************
      /EJECT
     CSR   CAEXFM        BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                   TIME                    ##TME
     C                   DOU       W0HLP = 'N'
     C                   MOVEL     'N'           W0HLP
     C                   MOVE      *IN04         YPMT04
     C                   MOVE      *IN25         HELP25
     C                   MOVE      *ALL'0'       ##OFF
     C                   MOVEA     ##OFF         *IN(1)
     C                   MOVE      YPMT04        *IN04
     C                   MOVE      HELP25        *IN25
      * Enable PUTOVR
     C                   SETON                                        86
      * Set cursor by *SET CURSOR data
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y0SET
     C                   END
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   EXFMT     #RCDDTL1
      * Test cursor
     C                   EXSR      Y8TST
      * Check if prompt requested
     C                   EXSR      ZDVPMT
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
     C                   END
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   IF        YSETCS = 'Y'
     C                   EXSR      Y9CLR
     C                   END
      *================================================================
     CSR   CAEXIT        ENDSR
      /EJECT
     CSR   DAPRSC        BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                   MOVEL     'N'           W0DCF
      * Validate screen input
     C                   EXSR      DBVLSC
      * If error, exit
     C     *IN99         CABEQ     '1'           DAEXIT
      * Defer confirm/update requested
     C     W0DCF         CABEQ     'Y'           DAEXIT
      * Prompt for confirmation
     C                   EXSR      DHPMCF
      * Quit if not confirmed
     C     *IN99         CABEQ     '1'           DAEXIT
      * USER: User defined action
     C                   MOVEL     'N'           P2ALST                         PRT Night Queue
      * Pmt Print Options     XF - STR Order Management Sys  * 
     C                   CALL      'PDG0PVR'                            90      Pmt Print Optio
     C                   PARM      *BLANK        W0RTN
     C                   PARM      P2ETTX        WQ0001                         PRT Description
     C     P2ACVN        PARM      P2ACVN        WQ0002                         PRT Printer Dev
     C     P2AKST        PARM      P2AKST        WQ0003                         PRT Hold Output
     C     P2AMST        PARM      P2AMST        WQ0004                         PRT Save Output
     C     P2AKNB        PARM      P2AKNB        WQ0005                         PRT Copies
     C     P2ALST        PARM      P2ALST        WQ0006                         PRT Night Queue
     C     P2AIVN        PARM      P2AIVN        WQ0007                         PRT Night Queue
     C                   PARM      P2C7CD        WQ0008                         Oms Application
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PDG0PVR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' '
     C                   SETON                                        99        *
     C                   END
      * If F3 not pressed, print report
      * CASE: PGM.*Return code is *Normal
      * Prt Repayment Listing CL - Tattoo Repayment Header  * 
     C                   IF        W0RTN = ' '
     C                   CALL      'PWMHUPC'                            90      Prt Repayment L
     C                   PARM      #1HONB        WQ0009                         BOH Company Num
     C                   PARM      #DCVDT        WQ0010                         Date From
     C                   PARM      #1IFDT        WQ0011                         Date To   USR
     C                   PARM      #DKMST        WQ0012                         Report Type Sum
     C                   PARM      #1CDNZ        WQ0013                         TRH Repayment I
     C                   PARM      #1MASS        WQ0014                         TRH Repayment S
     C                   PARM      #DMMSS        WQ0015                         Include Comment
     C                   PARM      P2ACVN        WQ0016                         PRT Printer Dev
     C                   PARM      P2AKST        WQ0017                         PRT Hold Output
     C                   PARM      P2AMST        WQ0018                         PRT Save Output
     C                   PARM      P2AKNB        WQ0019                         PRT Copies
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PWMHUPC'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   SETON                                        993334    *
     C                   SETON                                        313235    *
     C                   SETON                                        36        *
     C                   END
     C                   END                                                    *FI
      * Exit program
     C                   EXSR      ZXEXPG
      *================================================================
     CSR   DAEXIT        ENDSR
      /EJECT
     CSR   DBVLSC        BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate @Status Detail/Summary
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #DKMST        W0NSRQ                         @Status Detail/
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#DKMST' = YPMTFD
     C                   CALL      'PKVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1365571       Y2LSNO
     C     #DKMST        PARM      #DKMST        W0EXVL                         @Status Detail/
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Date 2 USR
      * External date
     C                   Z-ADD     VDCVDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9933      *
     C                   END
     C                   Z-ADD     XDINDT        #DCVDT
      * Validate TRH Payment Date
      * External date
     C                   Z-ADD     V1IFDT        XDEXDT
      * Check date
     C                   EXSR      XDCK2
     C                   IF        W0RTN <> ' '
     C                   SETON                                        9934      *
     C                   END
     C                   Z-ADD     XDINDT        #1IFDT
      * Validate TRH Repayment Status
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #1MASS        W0NSRQ                         TRH Repayment S
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#1MASS' = YPMTFD
     C                   CALL      'PKVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1365573       Y2LSNO
     C     #1MASS        PARM      #1MASS        W0EXVL                         TRH Repayment S
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Validate Include Comments Y/N
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     #DMMSS        W0NSRQ                         Include Comment
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             '#DMMSS' = YPMTFD
     C                   CALL      'PKVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1366364       Y2LSNO
     C     #DMMSS        PARM      #DMMSS        W0EXVL                         Include Comment
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      *
      * Bypass ref file checks if error already detected
     C   99              GOTO      DBEXIT
      * Check reference to Company Control HPE
     C                   EXSR      VACKRL
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        99        *
     C                   END
      * USER: Validate relations
      * Validate either Repayment ID entered or Date Range entered
      * CASE: Repay ID = 0 AND From/To Dates = 0
      *  - c1 AND c2 AND c3
      *   |- c1    : DTL.TRH Repayment ID is EQ Zero
      *   |- c2    : DTL.Date 2 USR is Not entered
      *   |- c3    : DTL.TRH Payment Date is Not entered
      *   '-
     C                   IF        YPMTFD = ' '
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #1CDNZ = 0
     C                   IF        #DCVDT = 0
     C                   IF        #1IFDT = 0
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Setup message data for message
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     #1CDNZ        ZA0001                         TRH Repayment I
      * Convert Date 2 USR to display format
      * Convert date
     C     1000000       ADD       #DCVDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        ZA0002
      * Convert TRH Payment Date to display format
      * Convert date
     C     1000000       ADD       #1IFDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        ZA0003
      * Send message 'Repay: Enter ID or Dates'
     C                   MOVEL     'PRK1582'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        993233    *
     C                   SETON                                        34        *
      *
     C                   END                                                    *FI
      * Validate Repayment ID if entered
      * CASE: DTL.TRH Repayment ID is Entered
      * Rtv Tattoo Repay Hdr  RT - Tattoo Repayment Header  * 
     C                   IF        #1CDNZ <> 0
     C                   EXSR      SARVGN
      * If record not found, send error message
      * CASE:
      *  - NOTc1
      *   |- c1    : PGM.*Return code is *Normal
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        W0RTN = ' '
     C                   ELSE
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
      * Setup message data for message
     C                   IF        Y0CX01 = '1'
     C                   Z-ADD     YL0001        ZA0004                         CC Company Numb
     C                   Z-ADD     #1CDNZ        ZA0005                         TRH Repayment I
      * Send message 'Repay: Tatto Repay Hdr NF'
     C                   MOVEL     'PRK1583'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        9932      *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
      * Validate From and To Dates
      * CASE: From Date AND To Date are Entered
      *  - c1 AND c2
      *   |- c1    : DTL.Date 2 USR is NE 0
      *   |- c2    : DTL.TRH Payment Date is Entered
      *   '-
     C                   MOVEL     '0'           Y0CX01
     C                   IF        #DCVDT <> 0
     C                   IF        #1IFDT <> 0
     C                   MOVEL     '1'           Y0CX01
     C                   END                                                    *FI
     C                   END                                                    *FI
      * To Date cannot be *LT From Date
      * CASE: DTL.TRH Payment Date LT DTL.Date 2 USR
     C                   IF        Y0CX01 = '1'
      * Setup message data for message
      * Convert TRH Payment Date to display format
      * Convert date
     C                   IF        #1IFDT < #DCVDT
     C     1000000       ADD       #1IFDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        ZA0006
      * Convert Date 2 USR to display format
      * Convert date
     C     1000000       ADD       #DCVDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        ZA0007
      * Send message 'From Date > To Date'
     C                   MOVEL     'PRK1450'     ZAMSID
     C                   EXSR      ZASNMS
     C                   SETON                                        993433    *
      *
     C                   END                                                    *FI
     C                   END                                                    *FI
     C                   END
      * @Status Detail/Summary required
     C                   IF        #DKMST = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9931      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      * Include Comments Y/N required
     C                   IF        #DMMSS = ' ' AND
     C                             YPMTFD = ' '
     C                   SETON                                        9936      *
      * Send message '*Value required'
     C                   MOVEL     'Y2U0001'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END                                                    FI
      *================================================================
     CSR   DBEXIT        ENDSR
      /EJECT
     CSR   DHPMCF        BEGSR
      *================================================================
      * Prompt for confirmation
      *================================================================
      * Convert fields to external form
     C                   EXSR      MNCV#1
      * Update screen time
     C                   TIME                    ##TME
      * Enable PUTOVR
     C                   SETON                                            86    *
      * Refresh screen
     C                   EVAL      ##CFCD = ' '
     C                   MOVEL     'N'           ##CFCD
      * Save CMD keys
     C                   MOVEA     *IN           WN30
     C                   SETOFF                                       29        *
      * Generate internal/external key list
     C     KINEX         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2INVL
      * Convert *CONFIRM to external value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2INVL = ' '
     C                   MOVEL     ##CFCD        Y2INVL                         *CONFIRM
     C     KINEX         CHAIN     @Y2INEX                            90        *
     C  N90              MOVEL     Y2EXVL        V#CFCD                         *CONFIRM
      *
     C                   DOU       W0HLP = 'N' AND
     C                             NOT *IN29
     C                   WRITE     #MSGCTL
     C                   WRITE     #CMDTXT1
     C                   WRITE     #RCDDTL1
     C                   EXFMT     #CONFIRM
     C                   IF        *IN29
     C                   SETON                                        99
     C                   GOTO      DHEXIT
     C                   END
      * Clear set cursor DDS indicator
     C                   IF        WCSRLC = 'OFF'
     C                   SETOFF                                       94        *
     C                   END
     C                   EVALR     WCSRLC = ' '
      * If help requested, display help text
     C   25              EXSR      ZHHPKY
      * Validate *CONFIRM
     C                   EVAL      W0RTN = ' '
     C                   MOVEL     V#CFCD        W0NSRQ                         *CONFIRM
      * Name search required?
     C                   IF        W0NSRQ = '?' OR
     C                             'V#CFCD' = YPMTFD
     C                   CALL      'PKVLLSR'                            90      *
     C                   PARM                    W0RTN
     C                   PARM      1001713       Y2LSNO
     C     V#CFCD        PARM      V#CFCD        W0EXVL                         *CONFIRM
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
     C                   IF        W0NSRQ <> '?'
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
     C                   END
      * Check external value of *CONFIRM
      * Generate internal/external key list
     C     KEXIN         KLIST
     C                   KFLD                    Y2LSNO
     C                   KFLD                    Y2EXVL
      * Convert *CONFIRM to internal value
     C                   Z-ADD     1001713       Y2LSNO
     C                   EVAL      Y2EXVL = ' '
     C                   MOVEL     V#CFCD        Y2EXVL                         *CONFIRM
     C     KEXIN         CHAIN     @Y2EXIN                            90        *
     C                   IF        *IN90
     C                   EVAL      ##CFCD = ' '
     C                   IF        YPMTFD = ' '
     C                   SETON                                        96        *
     C                   WRITE     #CONFIRM
     C                   SETOFF                                       96        *
     C                   END
     C                   ELSE
     C                   MOVEL     Y2INVL        ##CFCD                         *CONFIRM
     C                   END
      *
     C   90              SETON                                        29        *
     C  N90              SETOFF                                       29        *
     C                   END
      * Restore CMD keys
     C                   MOVEA     WN30          *IN
      * Update job time
     C                   TIME                    ##JTM
      * Clear messages from program message queue
     C                   IF        ##CFCD = 'Y'
     C                   CALL      'Y2CLMSC'
     C                   PARM      ##PGM         ZAPGMQ
     C                   PARM      '*SAME'       ZAPGRL
      * Reset first message only flag
     C                   MOVEL     'Y'           ZAFSMS                   99    *
     C                   END
     C     ##CFCD        COMP      'Y'                                9999      *
      * Not confirmed
      *================================================================
     CSR   DHEXIT        ENDSR
      /EJECT
     CSR   MALDSC        BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                   Z-ADD     *ZERO         #1CTNZ                         TRH Payment Ste
     C                   Z-ADD     *ZERO         #1IDDT                         TRH Date Start
     C                   Z-ADD     *ZERO         #1CATM                         TRH Time Start
     C                   Z-ADD     *ZERO         #1IEDT                         TRH Date Comple
     C                   Z-ADD     *ZERO         #1CBTM                         TRH Time Comple
     C                   EVAL      #1HOT1 = ' '                                 TRH Backup File
     C                   EVAL      #1AAVN = ' '                                 RS User Changed
     C                   Z-ADD     *ZERO         #1AADT                         RS Date Changed
     C                   Z-ADD     *ZERO         #1AMTM                         RS Time Changed
     C                   EVAL      #1AJST = ' '                                 RS Record Statu
     C                   EVAL      #1AHVN = ' '                                 RS Job
     C                   EVAL      #1AGVN = ' '                                 RS Program
     C                   EVAL      #1ABVN = ' '                                 RS User Added
     C                   Z-ADD     *ZERO         #1ABDT                         RS Date Added
     C                   Z-ADD     *ZERO         #1ABTM                         RS Time Added
     C                   Z-ADD     *ZERO         #1HONB                         CC Company Numb
     C                   EVAL      #DKMST = ' '                                 @Status Detail/
     C                   Z-ADD     *ZERO         #1CDNZ                         TRH Repayment I
     C                   Z-ADD     *ZERO         #DCVDT                         Date 2 USR
      * Clear external version also
     C                   Z-ADD     *ZERO         VDCVDT
     C                   Z-ADD     *ZERO         #1IFDT                         TRH Payment Dat
      * Clear external version also
     C                   Z-ADD     *ZERO         V1IFDT
     C                   EVAL      #1MASS = ' '                                 TRH Repayment S
     C                   EVAL      #DMMSS = ' '                                 Include Comment
      * USER: Load screen
     C                   Z-ADD     P1HONB        #1HONB                         CC Company Numb
     C                   MOVEL     'N'           #DMMSS                         Include Comment
      *================================================================
     CSR   MAEXIT        ENDSR
      /EJECT
     CSR   MNCV#1        BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert Date 2 USR to display format
      * Convert date
     C     1000000       ADD       #DCVDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        VDCVDT
      * Convert TRH Payment Date to display format
      * Convert date
     C     1000000       ADD       #1IFDT        XDINDT
     C                   EXSR      XDVC2T
     C                   Z-ADD     XDEXDT        V1IFDT
      *================================================================
     CSR   MNEXIT        ENDSR
      /EJECT
     CSR   SARVGN        BEGSR
      *================================================================
      * Rtv Tattoo Repay Hdr  RT - Tattoo Repayment Header  * 
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Define keylist
     C     KRSSA         KLIST
     C                   KFLD                    AWHONB                         CC Company Numb
     C                   KFLD                    AWCDNZ                         TRH Repayment I
      * Setup key
     C                   Z-ADD     #1HONB        AWHONB                         CC Company Numb
     C                   Z-ADD     #1CDNZ        AWCDNZ                         TRH Repayment I
      * Establish starting position
     C     KRSSA         CHAIN     @AWCPAQ                            90        *
      * Data record not found
     C                   IF        *IN90
     C                   MOVEL     'PRK1564'     W0RTN
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                   EVAL      #1MASS = ' '                                 TRH Repayment S
     C                   GOTO      SAEXIT
     C                   ENDIF
      *
      * USER: Process Data record
      * PAR = DB1 By name
     C                   IF        NOT *IN90
     C                   MOVEL     AWMASS        #1MASS                         TRH Repayment S
     C                   ENDIF
      *================================================================
     CSR   SAEXIT        ENDSR
      /EJECT
     CSR   UASUBR        BEGSR
      *================================================================
      * Modification history
      *================================================================
      *  5/04/2021 JBB F17058 - Tattoo Repayments by Business User
      *                         Function created. Prompt Repayment Listin
      *                         selection criteria.
      *================================================================
     CSR   UAEXIT        ENDSR
      /EJECT
     CSR   VACKRL        BEGSR
      *================================================================
      * Check reference to Company Control HPE
      *================================================================
     C                   EVAL      W0RTN = ' '
      * Name search required?
     W* Y2W0053 - One or more arguments defaulted to available contexts
      * Field '(DTL) #1HONB' defaulted for 'CC Company Number'.
     W* Y2W0052 - One or more arguments defaulted to WRK/CON context.
      * Field '(WRK) WUBSNB' defaulted for 'Next Buy Order Number'.
      * Field '(WRK) WUB1DT' defaulted for 'Current Kill Date'.
      * Field '(WRK) WUB2DT' defaulted for 'Next Kill Date'.
      * Field '(WRK) WUH4NB' defaulted for 'Last Drive Card Number'.
     C                   IF        YPMTFD = '#1HONB'
     C                   CALL      'PKLFSRR'                            90      Sel Company Con
     C                   PARM      *BLANK        W0RTN
     C     #1HONB        PARM      #1HONB        WQ0020                         CC Company Numb
     C     WUBSNB        PARM      *ZERO         WQ0021                         Next Buy Order
     C     WUB1DT        PARM      *ZERO         WQ0022                         Current Kill Da
     C     WUB2DT        PARM      *ZERO         WQ0023                         Next Kill Date
     C     WUH4NB        PARM      *ZERO         WQ0024                         Last Drive Card
      *
      * Call to program ended in error
     C                   IF        *IN90
     C                   MOVEL     'Y2U0032'     W0RTN
     C                   EVAL      W0CLPG = ' '
     C                   MOVEL     'PKLFSRR'     W0CLPG
      * Send message '*Error occured on CALL...'
     C                   MOVEL     'Y2U0032'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   MOVEL     W0CLPG        ZAMSDA                         Message data
     C                   EXSR      ZASNMS
     C                   END
      * Error detected?
     C                   IF        W0RTN <> ' ' AND
     C                             W0RTN <> 'Y2U0016'
     C                   SETON                                        99        *
     C                   END
      *
     C                   IF        #1HONB <> *ZERO AND
     C                             YPMTFD <> ' ' AND
     C                             W0RTN = ' '
     C                   MOVEL     '*DONE'       YPMTFD
     C                   END
      * Defer confirm
     C                   MOVEL     'Y'           W0DCF
      * No value selected, exit
     C                   IF        W0RTN <> ' ' AND
     C                             YPMTFD = ' '
     C                   GOTO      VAEXIT
     C                   END
     C                   END
      *................................................................
      * If all low order keys not entered, exit
     C                   IF        #1HONB = *ZERO
     C                   GOTO      VAEXIT
     C                   END
      *
     C     KLVAWA        KLIST
     C                   KFLD                    WAHONB                         CC Company Numb
      * Setup key
     C                   Z-ADD     #1HONB        WAHONB
     C     KLVAWA        CHAIN     @AZCPCN                            9091      *
      * Record found - move back any virtuals
     C                   IF        NOT *IN90
     C                   GOTO      VAEXIT
     C                   END
     C                   IF        YPMTFD <> ' '
     C                   SETOFF                                       9091
     C                   GOTO      VAEXIT
     C                   END
      * Send message 'Company Control HPE    NF'
     C                   MOVEL     'PRK0055'     ZAMSID
     C                   EXSR      ZASNMS
     C                   MOVEL     'PRK0055'     W0RTN
      *================================================================
     CSR   VAEXIT        ENDSR
      /EJECT
     CSR   XDCK2         BEGSR
      *================================================================
      * Validate external date format
      *================================================================
     C                   MOVEL     *BLANK        W0RTN
     C                   Z-ADD     *ZERO         XDINDT
      * If external date is zero, do not check
     C     XDEXDT        CABEQ     *ZERO         XDCK2E
      *................................................................
      * Map external to internal according to date format
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDEX02        XDINDD                         DD
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDEX02        XDINMM                         MM
     C                   Z-ADD     XDEX03        XDINDD                         DD
     C                   Z-ADD     XDEX04        XDINYY                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDEX02        XDINYY                         YY
     C                   Z-ADD     XDEX03        XDINMM                         MM
     C                   Z-ADD     XDEX04        XDINDD                         DD
     C                   END
     C                   END
      * If YY prior to the 'cut-off' year treat as 20YY.
     C                   IF        XDINYY < XOFFYY
     C                   ADD       100           XDINYY
     C                   END
     C     YPMTFD        CABNE     *BLANK        XDCK2E
      *................................................................
      * Check months in range 1 to 12
     C     XDINMM        CABLT     1             XDCK2M
     C     XDINMM        CABGT     12            XDCK2M
      *................................................................
      * Check days in range 1 to maximum for month
     C     XDINDD        CABLT     1             XDCK2M
     C     XDINDD        CABGT     @XD(XDINMM)   XDCK2M
      *................................................................
      * Special case: leap year
     C                   IF        XDINMM = 2
     C                   IF        XDINYY <> *ZERO AND
     C                             XDINYY <> 200
     C     XDINYY        DIV       4             XDWK1
     C                   MVR                     XDWK1
     C                   ELSE
     C                   Z-ADD     1             XDWK1
     C                   END
      * Year is not leap
     C                   IF        XDWK1 <> *ZERO
     C     XDINDD        CABGT     28            XDCK2M
     C                   END
     C                   END
     C                   GOTO      XDCK2E
      *................................................................
      * Send error message
     C     XDCK2M        TAG
      * Send message '*Invalid date'
     C                   MOVEL     'Y2U0006'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   MOVEL     'Y2U0006'     W0RTN
      * Disable time portion if timestamp is validated
     C                   Z-ADD     *ZERO         XTTIM
      *================================================================
     CSR   XDCK2E        ENDSR
      /EJECT
     CSR   XDVC2T        BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                   Z-ADD     0             XDEX01                         CC
     C                   IF        XDDTFM = 'DMY'
     C                   Z-ADD     XDINDD        XDEX02                         DD
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
     C                   IF        XDDTFM = 'MDY'
     C                   Z-ADD     XDINMM        XDEX02                         MM
     C                   Z-ADD     XDINDD        XDEX03                         DD
     C                   Z-ADD     XDINYY        XDEX04                         YY
     C                   ELSE
      * YMD format
     C                   Z-ADD     XDINYY        XDEX02                         YY
     C                   Z-ADD     XDINMM        XDEX03                         MM
     C                   Z-ADD     XDINDD        XDEX04                         DD
     C                   END
     C                   END
      *================================================================
     CSR   XDVC2E        ENDSR
      /EJECT
     CSR   Y0SET         BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y0EXIT        ENDSR
      /EJECT
     CSR   Y8TST         BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                   Z-ADD     @#RWCL        ZINPOS
     C     ZINPOS        DIV       256           W0CRW
     C                   MVR                     W0CCL
      *================================================================
     CSR   Y8EXIT        ENDSR
      /EJECT
     CSR   Y9CLR         BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR   Y9EXIT        ENDSR
      /EJECT
     CSR   ZASNMS        BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C                   IF        ZAPGMQ = ' '
     C                   MOVEL     ##PGM         ZAPGMQ
     C                   END
      * If no message file specified, use default
     C                   IF        ZAMSGF = ' '
     C                   MOVEL     ZADFMF        ZAMSGF
     C                   END
     C                   CALL      'Y2SNMGC'
     C                   PARM                    ZAPGMQ                         Program queue
     C                   PARM                    ZAPGRL                         Rel queue
     C                   PARM                    ZAMSID                         Message ID
     C                   PARM                    ZAMSGF                         Message file
     C                   PARM                    ZAMSDA                         Message data
     C                   PARM                    ZAMSTP                         Message type
     C                   PARM      'Y'           YILE
      * Clear all fields for default mechanism next time
     C                   EVAL      ZAPGMQ = ' '
     C                   EVAL      ZAPGRL = ' '
     C                   EVAL      ZAMSID = ' '
     C                   EVAL      ZAMSGF = ' '
     C                   EVAL      ZAMSDA = ' '
     C                   EVAL      ZAMSTP = ' '
      *================================================================
     CSR   ZAEXIT        ENDSR
      /EJECT
     CSR   ZDVPMT        BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                   EVAL      YPMTFD = ' '
     C                   Z-ADD     *ZERO         YAFSCH
     C                   Z-ADD     *ZERO         YPMRRN
      *
      *
      * Extract cursor row and column
     C                   IF        *IN04
     C     @#RWCL        DIV       256           ZHCSRW
     C                   MVR                     ZHCSCL
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
     C                   IF        ZHCSRW = 005 AND
     C                             ZHCSCL = 035 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#DKMST'      YPMTFD                         @Status Detail/
     C                   END
      *
     C                   IF        ZHCSRW = 012 AND
     C                             ZHCSCL = 035 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#1MASS'      YPMTFD                         TRH Repayment S
     C                   END
      *
     C                   IF        ZHCSRW = 013 AND
     C                             ZHCSCL = 035 AND
     C                             @#DFMT = '#RCDDTL1'
     C                   MOVEL     '#DMMSS'      YPMTFD                         Include Comment
     C                   END
      *
      * Error if user defined prompting is not specified.
     C                   IF        YPMTFD = ' '
     C                   IF        W0PMT = 'N'
     C                   MOVEL     '*NONE'       YPMTFD
     C                   MOVEL     'Y'           W0HLP
     C                   MOVEL     'Y'           ZAFSMS
      * Send error message.
     C                   MOVEL     'Y2U0101'     ZAMSID
     C                   MOVEL     'Y2USRMSG'    ZAMSGF
     C                   EXSR      ZASNMS
     C                   END
     C                   END
      *
     C                   END
      *================================================================
     CSR   ZDEXIT        ENDSR
      /EJECT
     CSR   ZHHPKY        BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                   MOVEL     'Y'           W0HLP
      *
      * Extract cursor row and column
     C     @#RWCL        DIV       256           ZHCSRW                         Row
     C                   MVR                     ZHCSCL                         Column
      *
      * Save cursor position for redisplay
     C                   Z-ADD     ZHCSRW        ZZCSRW                         Row
     C                   Z-ADD     ZHCSCL        ZZCSCL                         Column
      *
      *
     C                   CALL      'YDDSHPR'
     C                   PARM      ##PGM         W0HPMB                         Help text sourc
     C                   PARM      *BLANK        YYHPFL                         Help text file
     C                   PARM      *BLANK        YYHPLB                         Help text libra
     C                   PARM                    W0RTN
     C                   PARM      '*CSRLOC'     YYHLVN                         Help label
     C                   PARM      '*NORMAL'     YYUSOP                         Options
     C                   PARM      ZHCSRW        YYRW                           Row
     C                   PARM      ZHCSCL        YYCL                           Column
     C                   PARM      *ZERO         YYLGCT                         # of grps
     C                   PARM      *BLANK        YYLGVN                         Label grps
      *
      * Clear set cursor DDS indicator
     C  N94              MOVEL     'OFF'         WCSRLC
     C  N94              SETON                                        94        *
      *================================================================
     CSR   ZHEXIT        ENDSR
      /EJECT
     CSR   ZXEXPG        BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                   EVAL      P0RTN = ' '
     C                   EXSR      ZYEXPG
      *================================================================
     CSR   ZXEXIT        ENDSR
      /EJECT
     CSR   ZYEXPG        BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                   CALL      'Y2CPMSC'
     C                   PARM                    ##PGM
     C                   PARM      'Y'           YILE
      *
      * Terminate program
     C                   SETON                                        LR
      *
      * Exit program
     C                   RETURN
      *
      *================================================================
     CSR   ZYEXIT        ENDSR
      /EJECT
     CSR   ZZINIT        BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C                   IF        W0ICL = ' '
     C                   MOVEL     'Y'           W0ICL                          *Initial call
     C                   ELSE
     C                   MOVEL     'N'           W0ICL
     C                   END
     C                   EVALR     P0RTN = ' '
     C                   EVALR     W0RTN = ' '
     C                   EVAL      W0RSL = ' '
     C                   EVAL      W0RSF = ' '
     C                   MOVEL     *ZEROS        W0RTW
     C                   MOVEL     '400'         W0ENV
      * Clear all neither parameters
     C                   EVAL      P2ETTX = ' '                                 PRT Description
     C                   EVAL      P2ACVN = ' '                                 PRT Printer Dev
     C                   EVAL      P2AKST = ' '                                 PRT Hold Output
     C                   EVAL      P2AMST = ' '                                 PRT Save Output
     C                   Z-ADD     *ZERO         P2AKNB                         PRT Copies
     C                   Z-ADD     *ZERO         P2ZEA1                         Number of Copie
     C                   EVAL      P2UGTX = ' '                                 PRT Copies Alph
     C                   EVAL      P2ALST = ' '                                 PRT Night Queue
     C                   EVAL      P2AIVN = ' '                                 PRT Night Queue
     C                   EVAL      P2C7CD = ' '                                 Oms Application
      *
      * Retrieve job attributes
     C                   CALL      'Y2RTJCR'
     C                   PARM                    PGMDS
      * Setup job date/time
     C                   Z-ADD     ##SD7         ##JDT
     C                   TIME                    ##JTM
      * Update screen time
     C                   TIME                    ##TME
      * Initialize renamed input format fields
     C                   Z-ADD     *ZERO         WAHONB                         CC Company Numb
     C                   Z-ADD     *ZERO         WABSNB                         Next Buy Order
     C                   Z-ADD     *ZERO         WAB1DT                         Current Kill Da
     C                   Z-ADD     *ZERO         WAB2DT                         Next Kill Date
     C                   Z-ADD     *ZERO         WAH4NB                         Last Drive Card
     C                   Z-ADD     *ZERO         WAK3NB                         Last Tattoo Nbr
     C                   Z-ADD     *ZERO         WACDDT                         Current Product
     C                   Z-ADD     *ZERO         WACEDT                         Next Production
     C                   Z-ADD     *ZERO         WAAADT                         RS Date Changed
     C                   Z-ADD     *ZERO         WAAMTM                         RS Time Changed
     C                   Z-ADD     *ZERO         WAABDT                         RS Date Added
     C                   Z-ADD     *ZERO         WAABTM                         RS Time Added
      * Define work field Next Buy Order Number
     C                   Z-ADD     *ZERO         WUBSNB
      * Define work field Current Kill Date
     C                   Z-ADD     *ZERO         WUB1DT
      * Define work field Next Kill Date
     C                   Z-ADD     *ZERO         WUB2DT
      * Define work field Last Drive Card Number
     C                   Z-ADD     *ZERO         WUH4NB
      * Obtain default message file
     C     *DTAARA       DEFINE    PKMGFLA       ZADFMF
     C                   IN        ZADFMF
      * Flag no *SET CURSOR in the program
     C                   MOVE      'N'           YSETCS
     C                   EVALR     WCSRLC = ' '
      * Define *Synon program work fields
     C                   EVAL      W0CFL = ' '                                  *Cursor field
     C                   Z-ADD     *ZEROS        W0CRW                          *Cursor row
     C                   Z-ADD     *ZEROS        W0CCL                          *Cursor column
      * Move main file information to JOB context
     C                   MOVE      @1FFL         ZZFFL                          Main file name
     C                   MOVE      @1FLB         ZZFLB                          Main file lib
     C                   MOVE      @1FMB         ZZFMB                          Main file mbr
     C                   MOVE      ZZFFL         @1FFL
     C                   MOVE      ZZFLB         @1FLB
     C                   MOVE      ZZFMB         @1FMB
     C                   CALL      'Y2QLVNR'
     C                   PARM                    ZZFFL
     C                   PARM                    ZZFLB
     C                   PARM                    ZZFQL                          LIBRARY/FILE
     C                   MOVEL     'N'           W0PMT
      * Define null work field TRH Date Start
     C                   Z-ADD     *ZERO         YN0001
      * Define null work field TRH Time Start
     C                   Z-ADD     *ZERO         YN0002
      * Define null work field TRH Date Complete
     C                   Z-ADD     *ZERO         YN0003
      * Define null work field TRH Time Complete
     C                   Z-ADD     *ZERO         YN0004
      * Define null work field TRH Payment Date
     C                   Z-ADD     *ZERO         YN0005
      * Define null work field TRH Payment Step
     C                   Z-ADD     *ZERO         YN0006
      * Define null work field TRH Backup File Prefix
     C                   EVAL      YN0007 = ' '
      * Define local work field CC Company Number
     C                   Z-ADD     *ZERO         YL0001
      * Obtain system date format
     C     *DTAARA       DEFINE    Y2DTFMA       XDDTFM
     C                   IN        XDDTFM
      * Retrieve the 'cut-off' year YY: 19YY-1999,2000-20(YY-1).
     C     *DTAARA       DEFINE    Y2CTOFF       XOFF
     C                   IN        XOFF
      * *DTAARA = *COMPANY N
     C     *DTAARA       DEFINE    YYCOTXA       ##CMP
     C                   IN        *DTAARA
      *................................................................
     C                   EVAL      W0GRP = ' '
      * USER: Initialize program
      * Modification history
     C                   EXSR      UASUBR                                       Modification hi
      * Load screen
     C                   EXSR      MALDSC
      *================================================================
     CSR   ZZEXIT        ENDSR
** @XD
312931303130313130313031
