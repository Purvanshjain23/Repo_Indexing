     h option(*SRCSTMT:*NODEBUGIO)
      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF676
      * TITLE:       Yields: Converting % Report
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     12/11/08
      *
      * FUNCTION:  Batch program to print records from the Volume Summary file.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/06/09  LeAnne Ramsey
      *           We are now generating this for a Date Range instead of a single week.
      *           We are also adding some "prior" week columns.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fome8rel0  if   e           k disk
      *    Product type
      *
      *
     Ftfl018b   if   e           k disk    rename(vwrec:vwrecb) prefix(p1)
      *  Volume summary-weekly
      *
      *
     Ftfl018c   if   e           k disk
      *  Volume summary-weekly (records selected by open query)
      *
      *
     Fprint198  o    f  198        printer oflind(*inof)
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D dash            s            198    inz(*all'-')
     d rtime           s              6  0
      *
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D newisty         s              1    inz('Y')
      *
      *
      * Workfields
      *
     D wkalph          s              3
      *
     D wkspuslb        s             15  2
     D wksvpuslb       s             15  2
     D wksputslb       s             15  2
      *
     D wktpuslb        s             15  2
     D wktvpuslb       s             15  2
     D wktputslb       s             15  2
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
     D wkwedt          s              8  0
      *
      *
      * Parms
      *
     D xxorigin        s              1
      *
      *
      * Print fields
      *
     d h1demand        s             35
     d h1priormdy      s              6  0
      *
     D h2desc          s             34
      *
     D l1scpuslb       s             15  2
     D l1spurslb       s             15  2
     D l1slb           s             15  2
     D l1spc           s              7  4
      *
     D l1tcpuslb       s             15  2
     D l1tpurslb       s             15  2
     D l1tlb           s             15  2
     D l1tpc           s              7  4
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
      * We have to generate this from the Margin Adjustment Close function. So,
      * if you have to change the LDA, check the LDA in the Close function as well.
      *
     Dlda             uds                  dtaara(*lda)
     D  ldpfcd                 1      1
      *
     D  ldfwedt               85     92  0
     D  ldfwemdy              93     98  0
      *
     D  ldtwedt               99    106  0
     D  ldtwemdy             107    112  0
      *
     D  ldtfcgcd             139    140
     D  ldtfcgds             141    155
      *
     D  ldtfclcd             156    158
     D  ldtfclds             159    188
      *
     D  ldistycd             189    191  0
     D  ldistyds             192    221
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Print headings
     C                   exsr      $h1hdr
      *
      * We will drive this by reading the master file of Item Structure Types.
      *
     C     *loval        setll     ome8rel0
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      ome8rel0                               90
     C                   if        *in90 = *off and                             If not eof
     C                             (ldistycd = 0 or ldistycd = e8rgnb)
     C                   exsr      $volume
     C                   endif                                                  If not eof
     C                   enddo                                                  Main do
      *
      * EOF processing
     C                   if        first = yes
     C                   except    nodata
     C                   endif
      *
     C                   seton                                        lr
      /EJECT
      *---------------------------------------------------------------
      * Retrieve Volume records for the Item Structure Type/Date Range
      *---------------------------------------------------------------
      *
     C     $volume       begsr
      *
     C                   move      yes           newisty
      *
     C                   z-add     0             wkspuslb
     C                   z-add     0             wksvpuslb
     C                   z-add     0             wksputslb
      *
     C                   z-add     0             wktpuslb
     C                   z-add     0             wktvpuslb
     C                   z-add     0             wktputslb
      *
      * Read each record selected by the open query from the Volume Summary file
      * for this Item Structure Type.
      *
     C     e8rgnb        setll     tfl018c
      *
     C                   dou       *in91 = *on                                  Do volume
     C     e8rgnb        reade     tfl018c                                91
     C                   if        *in91 = *off                                 If not EOF
      *
      * First time for an Item Structure Type:
      *    1) set control flags
      *    2) retrieve Description for Item Structure Type
      *    3) print Item Structure Type heading
      *
     C                   if        newisty = yes
     C                   move      no            newisty
     C                   move      no            first
      *
     C     vwistycd      chain     ome8rel0                           92
     C                   if        *in92 = *off
     C                   move      vwistycd      wkalph
     C                   eval      h2desc = %trim(wkalph) + '-' + %trim(e8dctx)
     C                   else
     C                   eval      h2desc = wkalph
     C                   endif
     C                   exsr      $h2hdr
     C                   endif
      *
      * Accumulate values for printing the 3 detail lines for each Item Structure:
      *    converted, nonconverted, total
      *
      *        Converted     (ie: Combined Produced Start Weight)
     C                   add       vwscpuslb     l1scpuslb
     C                   add       vwtcpuslb     l1tcpuslb
      *
      *     NonConverted     (ie: Produced Raw Start Weight)
     C                   add       vwspurslb     l1spurslb
     C                   add       vwtpurslb     l1tpurslb
      *
      *        Total         (ie: Converted + NonConverted)
     C                   add       vwspurslb     l1slb
     C                   add       vwscpuslb     l1slb
      *
     C                   add       vwtpurslb     l1tlb
     C                   add       vwtcpuslb     l1tlb
      *
      * Accumulate values for calc of: Converting Percent
      * (Note: We print this % on the last line for each Item Structure Type.)
      *
     C                   add       vwspuslb      wkspuslb
     C                   add       vwsvpuslb     wksvpuslb
     C                   add       vwsputslb     wksputslb
      *
     C                   add       vwtpuslb      wktpuslb
     C                   add       vwtvpuslb     wktvpuslb
     C                   add       vwtputslb     wktputslb
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do volume
      *
      * If you had any items in this Item Structure Type:
      *   1) calc the converting percent
      *   2) retrieve the prior week converting percents
      *   3) print the 3 detail lines
      *
     C                   if        newisty = no
     C                   exsr      $calc
     C     key01         chain     tfl018b                            92
     C                   exsr      $l1dtl
     C                   endif
      *
     C                   endsr
      /EJECT
      *------------------------------------------------------------------------------------------
      * Calcs
      *------------------------------------------------------------------------------------------
      *
     C     $calc         begsr
      *
      * Calc Converting % as:
      * ((produced start weight + VA produced start weight) / produced total start weight) * 100
      *
      *      Seaboard
     C                   if        wksputslb <> 0
     C                   eval(h)   l1spc = ((wkspuslb + wksvpuslb) / wksputslb)
     C                                     * 100
     C                   endif
      *      Triumph
     C                   if        wktputslb <> 0
     C                   eval(h)   l1tpc = ((wktpuslb + wktvpuslb) / wktputslb)
     C                                     * 100
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print detail line
      *---------------------------------------------------------------
      *
     C     $l1dtl        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   exsr      $h2hdr
     C                   endif
      *
     C                   except    l1dtl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print report heading
      *---------------------------------------------------------------
      *
     C     $h1hdr        begsr
      *
     C                   except    h1hdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Print heading for Item Structure Type Code
      *---------------------------------------------------------------
      *
     C     $h2hdr        begsr
      *
     C                   if        *inof = *on
     C                   exsr      $h1hdr
     C                   endif
      *
     C                   except    h2hdr
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C                   parm                    xxorigin
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    wkwedt
     C                   kfld                    e8rgnb
      *
      * Retrieve time for report heading.
      *
     C                   time                    rtime
      *
      * Calc/save the WeekEnding Date of the Week prior to the "From WeekEnding Date"
      *
     C                   move      ldfwedt       wkisodate
     C                   subdur    7:*days       wkisodate
     C                   move      wkisodate     wkwedt
     C     *mdy          move      wkisodate     h1priormdy
      *
      *
      * This report is generated:
      *  1) From Inventory Stock Closing
      *  2) As a Preliminary/Final from Margin Adjustment Close
      *  3) On-demand
      *
     C                   select
     C                   when      xxorigin = 'N'
     C                   eval      %subst(h1demand:3:28) =
     C                             'From Inventory Stock Closing'
      *
     C                   when      ldpfcd = 'D'
     C                   eval      %subst(h1demand:13:9) = 'On-Demand'
      *
     C                   when      ldpfcd = 'F'
     C                   eval      %subst(h1demand:4:29) =
     C                             'Final Margin Adjustment Close'
      *
     C                   when      ldpfcd = 'P'
     C                   eval      %subst(h1demand:1:35) =
     C                             'Preliminary Margin Adjustment Close'
     C                   endsl
      *
      *
      * Set up Report Headings
      *
     C                   if        ldistycd = 0
     C                   seton                                        95
     C                   endif
      *
     C                   if        ldtfcgcd = *blank
     C                   seton                                        94
     C                   endif
      *
     C                   if        ldtfclcd = *blank
     C                   seton                                        93
     C                   endif
      *
     C                   endsr
      /EJECT
      *-------------------------------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------------------------------
      *
     Oprint198  e            h1hdr          1 01
     O                       sdpgm               10
     O                                          102 'CONVERTING % REPORT'
     O                                          188 'DATE'
     O                       udate         y    198
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                       h1demand           111
     O                                          188 'TIME'
     O                       rtime              198 '  :  :  '
      *
      *
     O          e            h1hdr          1
     O                                          188 'PAGE'
     O                       page          z    198
      *
      *
     O          e            h1hdr          1
     O                                           22 'From week-ending date:'
     O                       ldfwemdy            32 '  /  /  '
      *
     O                                           65 'TF Class group code:'
     O               94                          70 'All'
     O              n94      ldtfcgcd            69
     O              n94      ldtfcgds            87
      *
     O          e            h1hdr          1
     O                                           22 'To week-ending date:'
     O                       ldtwemdy            32 '  /  /  '
      *
     O                                           65 'TF Classification code:'
     O               93                          70 'All'
     O              n93      ldtfclcd            70
     O              n93      ldtfclds           102
      *
     O          e            h1hdr          3
     O                                           65 'Item structure type code:'
     O               95                          70 'All'
     O              n95      ldistycd            70
     O              n95      ldistyds           102
      *
      *-------------------------------------------------------------------------------------
      * Column headings
      *-------------------------------------------------------------------------------------
      *
     O          e            h1hdr       0  1
     O                                          107 'Prior Week-Ending:'
     O                       h1priormdy         116 '  /  /  '
      *
     O          e            h1hdr       0  1
     O                                          107 '------------------'
     O                                          116 '---------'
      *
     O          e            h1hdr       0  1
     O                                            4 'Item'
     O                                           39 'SBF'
     O                                           60 'TF'
     O                                           73 'SBF'
     O                                           86 'TF'
     O                                          100 'SBF'
     O                                          115 'TF'
      *
     O          e            h1hdr       0  1
     O                                            9 'Structure'
     O                                           39 'Produced'
     O                                           60 'Produced'
     O                                           73 'Converting'
     O                                           86 'Converting'
     O                                          100 'Converting'
     O                                          115 'Converting'
      *
     O          e            h1hdr       0  1
     O                                            4 'Type'
     O                                           39 'Start Lbs'
     O                                           60 'Start Lbs'
     O                                           73 'Percent'
     O                                           86 'Percent'
     O                                          100 'Percent'
     O                                          115 'Percent'
      *
     O          e            h1hdr          0
     O                       dash               198
      *
      *-------------------------------------------------------------------------------------
      * Item Structure Type Code heading
      *-------------------------------------------------------------------------------------
      *
     O          e            h2hdr       2  0
     O                       h2desc              34
      *
     O          e            h2hdr       0  1
     O                       h2desc              34
      *
      *-------------------------------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------------------------------
      *
     O          e            l1dtl       1
     O                                           18 'Converted'
     O                       l1scpuslb     kb    40
     O                       l1tcpuslb     kb    61
      *
     O          e            l1dtl       1
     O                                           18 'Non-Converted'
     O                       l1spurslb     kb    40
     O                       l1tpurslb     kb    61
      *
     O          e            l1dtl       1
     O                                           18 'Total'
     O                       l1slb         kb    40
     O                       l1tlb         kb    61
     O                       l1spc         kb    74
     O                       l1tpc         kb    87
     O                       p1vwspucpc    k    101
     O                       p1vwtpucpc    k    116
      *
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      1
     O                                           19 'No data meets your'
     O                                           39 'selection criteria.'
