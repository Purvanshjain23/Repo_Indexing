// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUVHPVR
// ?Date: 14.08.2025 Time: 03:51:30
// ?------------------------------------------------------------------------------------------------

//?USER: Validate fields

//?Must be a 'Sunday' Date from Previous Week.
CASE;

// IF DTL.From Date             USR is Entered
IF DTL.From_Date_USR <> *ZERO;

// DTL.To Date               USR = CON.*ZERO
DTL.To_Date_USR = *ZERO;

//?Get Prior Sunday's Date Based on Current Job Date.
CASE;

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Day of Week (SYN) USR = JOB.*Job date *DAY OF WEEK
WRK.Day_of_Week_SYN_USR = DATEDTLS(JOB.*Job_date 'DW' 1111111 'NONE' 'N' 1);

CASE;

// IF WRK.Day of Week (SYN) USR is Sunday
IF WRK.Day_of_Week_SYN_USR = 7;

// LCL.Date Sun USR = JOB.*Job date + CON.-7 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-7' 'DY' 1111111 'NONE' 'N' 1);

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF WRK.Day of Week (SYN) USR is Monday
IF WRK.Day_of_Week_SYN_USR = 1;

// LCL.Date Sun USR = JOB.*Job date + CON.-8 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-8' 'DY' 1111111 'NONE' 'N' 1);

// IF WRK.Day of Week (SYN) USR is Tuesday
IF WRK.Day_of_Week_SYN_USR = 2;

// LCL.Date Sun USR = JOB.*Job date + CON.-9 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-9' 'DY' 1111111 'NONE' 'N' 1);

// IF WRK.Day of Week (SYN) USR is Wednesday
IF WRK.Day_of_Week_SYN_USR = 3;

// LCL.Date Sun USR = JOB.*Job date + CON.-10 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-10' 'DY' 1111111 'NONE' 'N' 1);

// IF WRK.Day of Week (SYN) USR is Thursday
IF WRK.Day_of_Week_SYN_USR = 4;

// LCL.Date Sun USR = JOB.*Job date + CON.-11 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-11' 'DY' 1111111 'NONE' 'N' 1);

// IF WRK.Day of Week (SYN) USR is Friday
IF WRK.Day_of_Week_SYN_USR = 5;

// LCL.Date Sun USR = JOB.*Job date + CON.-12 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-12' 'DY' 1111111 'NONE' 'N' 1);

// IF WRK.Day of Week (SYN) USR is Saturday
IF WRK.Day_of_Week_SYN_USR = 6;

// LCL.Date Sun USR = JOB.*Job date + CON.-13 *DAYS
LCL.Date_Sun_USR = DATEINCR(JOB.*Job_date '-13' 'DY' 1111111 'NONE' 'N' 1);

ENDIF;

ENDIF;

ENDIF;

//?Cannot be Today or Future Date or Sunday's Current Week.
CASE;

// IF DTL.From Date             USR EQ JOB.*Job date
IF DTL.From_Date_USR = JOB.*Job_date;

// Send error message - '&1'
ERROR(USR5117);
MSGPARM('Cannot be today's date.');
MSGPARM(DTL.From_Date_USR);

QUIT;

//?Cannot be Today or Future Date or Sunday's Current Week.
// IF DTL.From Date             USR GT JOB.*Job date
IF DTL.From_Date_USR > JOB.*Job_date;

// Send error message - '&1'
ERROR(USR5117);
MSGPARM('Cannot be a future date.');
MSGPARM(DTL.From_Date_USR);

QUIT;

//?Cannot be Today or Future Date or Sunday's Current Week.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Day of Week (SYN) USR = DTL.From Date             USR *DAY OF WEEK
LCL.Day_of_Week_SYN_USR = DATEDTLS(DTL.From_Date_USR 'DW' 1111111 'NONE' 'N' 1);

CASE;

// IF LCL.Day of Week (SYN) USR is Sunday
IF LCL.Day_of_Week_SYN_USR = 7;

//?Date Must Be <= Last Week's Sunday Date.
CASE;

// IF DTL.From Date             USR LE LCL.Date Sun USR
IF DTL.From_Date_USR <= LCL.Date_Sun_USR;

// DTL.To Date               USR = DTL.From Date             USR + CON.6 *DAYS
DTL.To_Date_USR = DATEINCR(DTL.From_Date_USR 6 'DY' 1111111 'NONE' 'N' 1);

//?Date Must Be <= Last Week's Sunday Date.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Generic Message 80 USR = CONCAT(CON.Date must be older than S,CON.unday's current week.,CON.*
LCL.Generic_Message_80_USR = 'Date must be older than S' + 'unday's current week.' (0);

// Send error message - '&1'
ERROR(USR5117);
MSGPARM(LCL.Generic_Message_80_USR);
MSGPARM(DTL.From_Date_USR);

QUIT;

ENDIF;

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - '&1'
ERROR(USR5117);
MSGPARM('Not a Sunday Date.');
MSGPARM(DTL.From_Date_USR);

QUIT;

ENDIF;

ENDIF;

ENDIF;

//?Business Office Must Be IFLIV or OKLIV.
CASE;

// IF DTL.HPS Business Office is IFLIV
IF DTL.HPS_Business_Office = 'IFLIV';

// OR DTL.HPS Business Office is OKLIV
OR DTL.HPS_Business_Office = 'OKLIV';

//?Business Office Must Be IFLIV or OKLIV.
// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Generic Message 80 USR = CONCAT(CON.Business Office must be,CON.IFLIV or OKLIV.,CON.1)
LCL.Generic_Message_80_USR = 'Business Office must be' + 'IFLIV or OKLIV.' (1);

// Send error message - '&1'
ERROR(USR5085);
MSGPARM(LCL.Generic_Message_80_USR);
MSGPARM(DTL.HPS_Business_Office);

QUIT;

ENDIF;

//?USER: User defined action

// LCL.From Date D8# USR = DTL.From Date             USR
LCL.From_Date_D8#_USR = DTL.From_Date_USR;

// LCL.From Date TXT USR = CVTVAR(LCL.From Date D8# USR)
LCL.From_Date_TXT_USR = CVTVAR(LCL.From_Date_D8#_USR);

// LCL.To Date D8# USR = DTL.To Date               USR
LCL.To_Date_D8#_USR = DTL.To_Date_USR;

// LCL.Thru Date TXT USR = CVTVAR(LCL.To Date D8# USR)
LCL.Thru_Date_TXT_USR = CVTVAR(LCL.To_Date_D8#_USR);

// Call program Exc HPS Mvmnt Log ResndCL.
SBMJOB;
CALL PROGRAM(Exc HPS Mvmnt Log ResndCL) ('HP4762CL');
PARAMETER(DTL.HPS_Business_Office);
PARAMETER(LCL.From_Date_TXT_USR);
PARAMETER(LCL.Thru_Date_TXT_USR);
SBMJOBOVR JOB(HPSMVMNTLR);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

