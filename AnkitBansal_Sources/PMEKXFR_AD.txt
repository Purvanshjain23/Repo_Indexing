// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMEKXFR
// ?Date: 14.08.2025 Time: 03:44:52
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?** 02/10/2009 LJB FP1127
//?** Update Item Lot Location records with new actual shipped date
//?** Update qty and weight shipped as well
EXECUTE FUNCTION(RTV/CHG ASD & ILL date RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1920556;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.To_Date_USR);
{
 //?USER: Process Data record

 //?** par.actual shipped date contains the original date
 //?** par.to date   usr contains the new date
 //?** Retrieve warehouse code for ship to customer
 EXECUTE FUNCTION(Rtv Default Warehouse  RT) TYPE(RTVOBJ) FILE(CAEOREP)          AC1323141;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(WRK.Warehouse_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 //?** Update if ship to whse: not blanks, External, not Carlisle, Lot trk=Y
 CASE;

 // IF WRK.Warehouse Code is Warehouse Code not Blank
 IF WRK.Warehouse_Code <> *BLANK;

 EXECUTE FUNCTION(RTV Warehouse Info     RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1910512;
 PARAMETER(WRK.Warehouse_Code);
 PARAMETER(NLL.Warehouse_Description);
 PARAMETER(NLL.Address_Line_1);
 PARAMETER(NLL.Address_Line_2);
 PARAMETER(NLL.Address_Line_3);
 PARAMETER(NLL.City);
 PARAMETER(NLL.Zip_Postal_Code);
 PARAMETER(NLL.Production_Warehouse_Code);
 PARAMETER(NLL.State_Code);
 PARAMETER(LCL.Lot_Tracking_Flag);
 PARAMETER(NLL.Default_Printer);
 PARAMETER(NLL.Warehouse_Type);
 PARAMETER(NLL.Trans_Contol_AS400_Plant);
 PARAMETER(LCL.Warehouse_Location);
 PARAMETER(NLL.Warehouse_Std_Chill_Time);
 PARAMETER(NLL.Warehouse_Chill_Time);
 PARAMETER(NLL.Include_in_Auto_Pre_Pick);
 PARAMETER(NLL.Default_Manifest_Copies);
 PARAMETER(NLL.Default_Load_Sequence);
 PARAMETER(NLL.WHS_Slotting_Limit_Type);
 PARAMETER(NLL.Shipping_Company);
 PARAMETER(NLL.Accounting_Company);
 PARAMETER(NLL.WHS_Sched_Prod_Max_Days);
 PARAMETER(NLL.WHS_Inventory_Chill_Time);
 PARAMETER(NLL.Parent_Warehouse);
 PARAMETER(NLL.Default_Shipping_Whs);
 PARAMETER(LCL.WHS_Live_with_Carlisle);
 PARAMETER(NLL.WHS_PFS_Interface);
 PARAMETER(NLL.WHS_Req_Meter_Reading_Shp);
 PARAMETER(NLL.WHS_Default_Load_Type);
 PARAMETER(NLL.WHS_TMS_Planning_Region);
 PARAMETER(NLL.Default_Carrier_Code);
 PARAMETER(NLL.Inventory_Logic_Version);
 PARAMETER(NLL.WHS_Auto_Inv_Restoration);
 PARAMETER(NLL.EDI_Status_1);
 PARAMETER(NLL.EDI_Status_2);
 PARAMETER(NLL.EDI_Status_3);
 PARAMETER(NLL.Record_Status);
 PARAMETER(NLL.Job_Time);
 PARAMETER(NLL.User_Id);
 PARAMETER(NLL.Job_Name);
 PARAMETER(NLL.Job_Date);
 {
  //?USER: Initialize routine

  // PGM.*Record selected = CND.*NO
  PGM.*Record_selected = 'N';

  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  // PGM.*Record selected = CND.*YES
  PGM.*Record_selected = 'Y';

 }

 //?** Update Item Lot Loc prod date if Extrnl,not Carlisle,Lot trk=Y
 CASE;

 // IF LCL.Warehouse Location is External
 IF LCL.Warehouse_Location = 'E';

 // AND LCL.WHS Live w/Carlisle is *No/Blank
 AND LCL.WHS_Live_with_Carlisle = *BLANK/'N';

 // AND LCL.Lot Tracking Flag is yes
 AND LCL.Lot_Tracking_Flag = 'Y';

 //?** Currently, for external whses, level=0, lot=0
 //?** Update each item on the order in the Item Lot Location file
 EXECUTE FUNCTION(RTV Whse Location Info RT) TYPE(RTVOBJ) FILE(PDL2REP)          AC1910914;
 PARAMETER(WRK.Warehouse_Code);
 PARAMETER(LCL.Location_Code);
 PARAMETER(LCL.Location_Aisle);
 PARAMETER(LCL.Location_Bay);
 PARAMETER(LCL.Loc_Unused_Chill_Time);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 ENDIF;

 ENDIF;

}


