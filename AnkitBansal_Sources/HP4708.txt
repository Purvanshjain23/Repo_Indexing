      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Hog Production
      * PROGRAM:     HP4708
      * TITLE:       Specify Item Listing Options
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     07/19/04
      *
      * FUNCTION: Allows the user to enter listing options and submit job.
      *
      *           We bring the selectors from the calling program in as defaults for
      *           the selectors in this program. We submit from this pop-up window.
      *
      *
      * NOTE: This is a pop-up window program. Please note that in Window programs
      *       the record format containing the window definition must be written first.
      *       So, we write the Error Message Subfile Control reocrd first followed by
      *       the Command line record format. This is opposite of the non-window programs.
      *
      ****************************************************************
      * MODIFICATIONS:
      ** *************************************************************
      * DATE      PROGRAMMER
      *
      * 10/13/04  LeAnne Fedor
      *           Recompile only. Cost Per Unit Amount was changed from
      *           9,2 to 9,4.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd4708   cf   e             workstn
     F                                     infds(iofeed)
      *
      *
     Fhsp002    if   e           k disk
      *    Functions
      *
      *
     Fhsp180    if   e           k disk
      *    Item types
      *
      *
     Fhsp181    if   e           k disk
      *    Items
      *
      *
     Fhsl181d   if   e           k disk    rename(imrec:imrecd)
      *    Items
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  Compile time array for SBMJOB used in QCMDEXC
      *---------------------------------------------------------------
     D cmd             s              1    dim(80) ctdata perrcd(80)
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Parms
      *
     D xxver           s                    like(d1ver)
     D xxverds         s                    like(d1verds)
      *
     D xxitcd          s                   like(imitcd)
     D xxitds          s                   like(imitds)
      *
     D xxaist          s                   like(imaist)
     D xxcritfl        s                   like(imcritfl)
     D xxbgfl          s                   like(imbgfl)
      *
     D xxbgit          s                   like(imbgit)
      *
     D xxittycd        s                   like(tmittycd)
     D xxittyds        s                   like(tmittyds)
      *
     D xxjobq          s             10     inz('*JOBD     ')
     D xxnite          s              1     inz('N')
     D xxcopy          s              1  0
      *
      *
      *
      *  Parms for use with QCMDEXC.  'LENGTH' is the length of the
      *  command that will be issued with QCMDEXC.  QCMDEXC requires
      *  the field containing length to be defined as 15 with 5 decimal
      *  positions.  The field 'CMDSBM' will hold the values of the
      *  submit job command when passed as a parm on the call to
      *  QCMDEXC.
      *
     D length          s             15  5 inz(80)
     D cmdsbm          s             80
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
      *
     D  ldver                 01      1
     D  lditcd                02     26
     D  ldbgit                27     51
     D  ldittycd              52     57
     D  ldaist                58     58
     D  ldbgfl                59     59
     D  ldcritfl              60     60
      *
     D  ldverds              101    130
     D  lditds               131    180
     D  ldittyds             181    210
     D  ldaistds             211    218
     D  ldbgflds             219    221
     D  ldcritflds           222    224
      *
     D  ldoutu               401    410
     D  ldhold               411    411
     D  ldcopy               412    412  0
     D  ldoutq               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /eject
      ****************************************************************
      * MAINLINEE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /eject
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      *  Set routine to display screen
      *
     C                   eval      routne = scrn1
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Write screen 1 to CRT.
      *
     C                   write     hp4708ec
     C                   write     hp4708k1
     C                   exfmt     hp4708r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4-prompt
     C                   exsr      $f4s1
      *
     C                   when      *in08 = *on                                  F8-submit
     C                   exsr      $edit1
     C                   if        error = 0
     C                   exsr      $proc1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      *in17 = *on                                  F17-print options
     C                   eval      routne = scrn1
     C                   call      'HP451'
     C                   parm                    sdpgm
     C     ldcopy        parm      ldcopy        xxcopy
     C                   parm                    ldhold
     C                   parm                    ldoutq
     C                   parm                    xxnite
     C                   parm                    xxjobq
      *
     C                   other
      *
     C                   exsr      $edit1
     C                   eval      routne = scrn1
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Edit screen 1
      *---------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * Validate:
      *   Version
      *   Item
      *   Budget item
      *   Item type code
      *   Active/inactive status
      *   Budget flag
      *   Critical flag
     C                   exsr      $ver
     C                   exsr      $itcd
     C                   exsr      $bgit
     C                   exsr      $ittycd
     C                   exsr      $aist
     C                   exsr      $bgfl
     C                   exsr      $critfl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Validate Version
      *----------------------------------------------------------------
      *
     C     $ver          begsr
      *
     C                   move      *blank        d1verds
      *
     C                   select
     C                   when      d1ver = '1'
     C                   eval      d1verds = 'Sort and Print by Item Number'
      *
     C                   when      d1ver = '2'
     C                   eval      d1verds = 'Sort and Print by Budget Item'
     C                   other
      *
     C                   seton                                        31
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09043'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Item
      *-------------------------------------------------------------------
      *
      * Validations:
      *   If entered, Item must exist in Item Master
      *
     C     $itcd         begsr
      *
     C                   move      *blank        lditds
      *
     C                   if        d1itcd <> *blank                             If not blank
      *
     C     d1itcd        chain     hsp181                             92
     C                   if        *in92 = *off
     C                   move      imitds        lditds
     C                   else
     C                   seton                                        32
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04776'
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not blank
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Budget Item
      *-------------------------------------------------------------------
      *
      * Validations:
      *   If entered, Budget Item must be on some/any Item record in the
      *   Item Master
      *
     C     $bgit         begsr
      *
     C                   if        d1bgit <> *blank                             If not blank
      *
     C     d1bgit        chain     hsl181d                            92
     C                   if        *in92 = *on
     C                   seton                                        33
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04794'
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not blank
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Active/Inactive status
      *-------------------------------------------------------------------
      *
      * Validations:
      *   If entered, must be A or I
      *
     C     $aist         begsr
      *
     C                   move      *blank        ldaistds
      *
     C                   select
     C                   when      d1aist <> *blank and
     C                             d1aist <> 'A' and
     C                             d1aist <> 'I'
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09105'
     C                   endif
      *
     C                   when      d1aist = 'A'
     C                   eval      ldaistds = 'Active'
      *
     C                   when      d1aist = 'I'
     C                   eval      ldaistds = 'Inactive'
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Budget Flag
      *-------------------------------------------------------------------
      *
      * Validations:
      *   If entered, must be Yes or No
      *
     C     $bgfl         begsr
      *
     C                   move      *blank        ldbgflds
      *
     C                   select
     C                   when      d1bgfl <> *blank and
     C                             d1bgfl <> yes and
     C                             d1bgfl <> no
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
      *
     C                   when      d1bgfl = yes
     C                   eval      ldbgflds = 'Yes'
      *
     C                   when      d1bgfl = no
     C                   eval      ldbgflds = 'No '
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Critical Flag
      *-------------------------------------------------------------------
      *
      * Validations:
      *   If entered, must be Yes or No
      *
     C     $critfl       begsr
      *
     C                   move      *blank        ldcritflds
      *
     C                   select
     C                   when      d1critfl <> *blank and
     C                             d1critfl <> yes and
     C                             d1critfl <> no
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09106'
     C                   endif
      *
     C                   when      d1critfl = yes
     C                   eval      ldcritflds = 'Yes'
      *
     C                   when      d1critfl = no
     C                   eval      ldcritflds = 'No '
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Validate Item Type
      *-------------------------------------------------------------------
      *
      * Validations:
      *   If entered, must be in Item Type master
      *
     C     $ittycd       begsr
      *
     C                   move      *blank        ldittyds
      *
     C                   if        d1ittycd <> *blank                           If not blank
      *
     C     d1ittycd      chain     hsp180                             92
     C                   if        *in92 = *off
     C                   move      tmittyds      ldittyds
     C                   else
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS04795'
     C                   endif
     C                   endif
      *
     C                   endif                                                  If not blank
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command key record will be set on. So, redispaly the screen to the user.
      *
     C                   if        *in43 = *on
     C                   movel     set1          routne
     C                   endif
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        LR
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
     C                   select
      * Version
     C                   when      fld = 'D1VER'
     C                   call      'HP5057'
     C                   parm      *blank        xxver
     C                   parm      *blank        xxverds
     C                   seton                                        51
     C                   if        xxver <> *blank
     C                   move      xxver         d1ver
     C                   move      xxverds       d1verds
     C                   endif
      *
      * Item number
     C                   when      fld = 'D1ITCD'
     C                   call      'HP5055'
     C                   parm      ' '           xxaist
     C                   parm      *blank        xxitcd
     C                   parm      *blank        xxitds
     C                   seton                                        52
     C                   if        xxitcd <> *blank
     C                   movel     xxitcd        d1itcd
     C                   endif
      *
      * Budget item
     C                   when      fld = 'D1BGIT'
     C                   call      'HP5038'
     C                   parm      *blank        xxbgit
     C                   seton                                        53
     C                   if        xxbgit <> *blank
     C                   move      xxbgit        d1bgit
     C                   endif
      *
      *
      * Item type
     C                   when      fld = 'D1ITTYCD'
     C                   call      'HP5036'
     C                   parm      ' '           xxaist
     C                   parm      *blank        xxittycd
     C                   parm      *blank        xxittyds
     C                   seton                                        54
     C                   if        xxittycd <> *blank
     C                   movel     xxittycd      d1ittycd
     C                   endif
      *
      * Active/inactive
     C                   when      fld = 'D1AIST'
     C                   call      'HP512'
     C                   parm      *blank        xxaist
     C                   seton                                        55
     C                   if        xxaist <> *blank
     C                   movel     xxaist        d1aist
     C                   endif
      *
      * Budget flag
     C                   when      fld = 'D1BGFL'
     C                   call      'HP522'
     C                   parm                    xxbgfl
     C                   seton                                        56
     C                   if        xxbgfl <> *blank
     C                   movel     xxbgfl        d1bgfl
     C                   endif
      *
      * Critical flag
     C                   when      fld = 'D1CRITFL'
     C                   call      'HP522'
     C                   parm                    xxcritfl
     C                   seton                                        57
     C                   if        xxcritfl <> *blank
     C                   movel     xxcritfl      d1critfl
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Process user's request
      *---------------------------------------------------------------
      *
      * This subroutine submits the listing.
      *
     C     $proc1        begsr
      *
      * Move submission values into LDA
      *
     C                   move      d1ver         ldver
     C                   move      d1verds       ldverds
     C                   move      d1itcd        lditcd
     C                   move      d1bgit        ldbgit
     C                   move      d1ittycd      ldittycd
     C                   move      d1aist        ldaist
     C                   move      d1bgfl        ldbgfl
     C                   move      d1critfl      ldcritfl
      *
      * Move the 80-character compile time array 'CMD' to an
      * 80-character field for passing as a parm with QCMDEXC.
      *
     C                   out       lda
     C                   movea     xxjobq        cmd(51)
     C                   movea     cmd           cmdsbm
     C                   call      'QCMDEXC'
     C                   parm                    cmdsbm
     C                   parm                    length
      *
      *
      * The user must do his own exit out of the function.
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09003'
     C                   endif
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm lists
      *
     C     *entry        plist
     C     d1itcd        parm                    xxitcd
     C     d1bgit        parm                    xxbgit
     C     d1ittycd      parm                    xxittycd
     C     d1aist        parm                    xxaist
     C     d1bgfl        parm                    xxbgfl
     C     d1critfl      parm                    xxcritfl
      *
      *
      * Default '1' for the 'Version'.
      *
     C                   eval      d1ver = '1'
      *
      * Initialize LDA fields
      *
     C                   move      *blank        ldhold
     C                   z-add     0             ldcopy
     C                   movel     ldoutu        ldoutq
      *
      * Get this functions' number of copies, etc.
      *
     C     sdpgm         chain     hsp002                             92
     C                   if        *in92 = *off
     C                   z-add     fncopy        ldcopy
     C                   movel     fnhold        ldhold
     C                   endif
      *
     C                   if        ldcopy = 0
     C                   z-add     1             ldcopy
     C                   endif
      *
     C                   if        ldhold = *blank
     C                   movel     no            ldhold
     C                   endif
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
      * This window logic keeps the screen in the calling program from being
      * cleared.
      *
     C                   write     assume
      *
     C                   endsr
      /eject
      *****************************************************************
      * COMPILE TIME ARRAY 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD table 'CMD' submits listing when F8 selected
SBMJOB CMD(CALL PGM(HP4708CL)) JOB(ITEMLIST) JOBQ(__________)
