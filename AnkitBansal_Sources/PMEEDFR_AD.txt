// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMEEDFR
// ?Date: 14.08.2025 Time: 03:44:51
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// Call program RTV Default Co No App XF.
CALL PROGRAM(RTV Default Co No App XF) ('PMD4XFR');
PARAMETER(*MISSING);
PARAMETER(LCL.Company_Number_Alpha);

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?USER: Initialize subfile control

MOVE *ALL (To: CTL From: PAR);

//?USER: Initialize subfile record from DBF record

//?SEL: Company
CASE;

// IF CTL.Company is not equal to zero
IF CTL.Company <> *ZERO;

CASE;

// IF CTL.Company NE RCD.Company
IF CTL.Company <> RCD.Company;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEl: Broker
CASE;

// IF CTL.Broker Code is Entered
IF CTL.Broker_Code <> *BLANK;

CASE;

// IF CTL.Broker Code NE RCD.Broker Code
IF CTL.Broker_Code <> RCD.Broker_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Ship date less than from date
CASE;

// IF DB1.D-Actual Ship Date LT PAR.USR From Date
IF DB1.D_Actual_Ship_Date < PAR.USR_From_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?SHIP DATE GREATER THAN TO DATE
CASE;

// IF DB1.D-Actual Ship Date GT PAR.USR To Date
IF DB1.D_Actual_Ship_Date > PAR.USR_To_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF PGM.*Record selected is *YES
IF PGM.*Record_selected = 'Y';

EXECUTE FUNCTION(RTV Tot Hdr/Dtl DistA RT) TYPE(RTVOBJ) FILE(ECP017)            AC2014660;
PARAMETER(CTL.D_TRADE_PARTNER_CODE);
PARAMETER(CTL.Company);
PARAMETER(CTL.Broker_Code);
PARAMETER(CTL.Total_$_Owed);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // LCL.*Record selected = CND.*YES
 LCL.*Record_selected = 'Y';

 //?SEL: Trading Partner
 CASE;

 // IF PAR.D-TRADE PARTNER CODE is Entered
 IF PAR.D_TRADE_PARTNER_CODE <> *BLANK;

 CASE;

 // IF DB1.D-TRADE PARTNER CODE NE PAR.D-TRADE PARTNER CODE
 IF DB1.D_TRADE_PARTNER_CODE <> PAR.D_TRADE_PARTNER_CODE;

 // LCL.*Record selected = CND.*NO
 LCL.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?SEL: Company
 CASE;

 // IF PAR.Company is not equal to zero
 IF PAR.Company <> *ZERO;

 CASE;

 // IF DB1.Company NE PAR.Company
 IF DB1.Company <> PAR.Company;

 // LCL.*Record selected = CND.*NO
 LCL.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 //?SEl: Broker
 CASE;

 // IF PAR.Broker Code is Entered
 IF PAR.Broker_Code <> *BLANK;

 CASE;

 // IF DB1.Broker Code NE PAR.Broker Code
 IF DB1.Broker_Code <> PAR.Broker_Code;

 // LCL.*Record selected = CND.*NO
 LCL.*Record_selected = 'N';

 ENDIF;

 ENDIF;

 CASE;

 // IF LCL.*Record selected is *YES
 IF LCL.*Record_selected = 'Y';

 EXECUTE FUNCTION(RTV Dist Allow Cus    RT) TYPE(RTVOBJ) FILE(ECP019)            AC2068002;
 PARAMETER(DB1.Company);
 PARAMETER(DB1.Broker_Code);
 PARAMETER(DB1.D_BPT02_INV_SURROGATE_NBR);
 PARAMETER('ST');
 PARAMETER(LCL.D_N102_NAME);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 // PAR.Total $ Owed = PAR.Total $ Owed + DB1.D-AMT02-INVOICE TOTAL
 PAR.Total_$_Owed = PAR.Total_$_Owed + DB1.D_AMT02_INVOICE_TOTAL;

 ENDIF;

}


EXECUTE FUNCTION(RTV Dist Allow Cus    RT) TYPE(RTVOBJ) FILE(ECP019)            AC2068002;
PARAMETER(RCD.Company);
PARAMETER(RCD.Broker_Code);
PARAMETER(RCD.D_BPT02_INV_SURROGATE_NBR);
PARAMETER('ST');
PARAMETER(RCD.D_N102_NAME);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Process command keys

CASE;

// IF CTL.*CMD key is CF11
IF CTL.*CMD_key = '11';

EXECUTE FUNCTION(RTV DLT Hdr/Dtl DistA RT) TYPE(RTVOBJ) FILE(ECP017)            AC1920885;
PARAMETER(CTL.D_TRADE_PARTNER_CODE);
PARAMETER(CTL.USR_From_Date);
PARAMETER(CTL.USR_From_Date);
PARAMETER(CTL.USR_To_Date);
{
 //?USER: Process Data record

 CASE;

 // IF DB1.D-Actual Ship Date GE PAR.USR From Date
 IF DB1.D_Actual_Ship_Date >= PAR.USR_From_Date;

 // AND DB1.D-Actual Ship Date LE PAR.USR To Date
 AND DB1.D_Actual_Ship_Date <= PAR.USR_To_Date;

 EXECUTE FUNCTION(DLT DIST Allow Header DL) TYPE(DLTOBJ) FILE(ECP017)            AC1880334;
 PARAMETER(DB1.Company);
 PARAMETER(DB1.Broker_Code);
 PARAMETER(DB1.D_BPT02_INV_SURROGATE_NBR);
 {
  //?USER: Processing before Data update

  DO;

  EXECUTE FUNCTION(RTV/Dlt Dist allow    RT) TYPE(RTVOBJ) FILE(ECP018)            AC1920996;
  PARAMETER(PAR.Company);
  PARAMETER(PAR.Broker_Code);
  PARAMETER(PAR.D_BPT02_INV_SURROGATE_NBR);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(DLT Dist Allow Dtl    DL) TYPE(DLTOBJ) FILE(ECP018)            AC1880316;
   PARAMETER(DB1.Company);
   PARAMETER(DB1.Broker_Code);
   PARAMETER(DB1.D_BPT01_INV_SURROGATE_NBR);
   PARAMETER(DB1.D_ORDER_NBR);
   PARAMETER(DB1.D_ORD_SEQ_NBR);
   PARAMETER(DB1.D_ORD_SECONDARY_SEQ_NBR);
   PARAMETER(DB1.D_Sequence_number);
  }

  EXECUTE FUNCTION(RTV/DLT Dist Allow CusRT) TYPE(RTVOBJ) FILE(ECP019)            AC2067611;
  PARAMETER(PAR.Company);
  PARAMETER(PAR.Broker_Code);
  PARAMETER(PAR.D_BPT02_INV_SURROGATE_NBR);
  {
   //?USER: Process Data record

   EXECUTE FUNCTION(DLT Dist Allow Cus    DL) TYPE(DLTOBJ) FILE(ECP019)            AC1880325;
   PARAMETER(DB1.Company);
   PARAMETER(DB1.Broker_Code);
   PARAMETER(DB1.D_INVOICE_SURROGATE);
   PARAMETER(DB1.D_N101_ADDRESS_QUALIFIER);
   PARAMETER(DB1.D_N102_NAME);
  }

  ENDDO;

 }

 ENDIF;

}


// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

