      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP368 - WRITE EXPENSE TICKET ALLOCATIONS FROM
      *                      WORKFILES
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     06/09/94
      *
      * FUNCTION: THIS PROGRAM READS THE TWO EXPENSE TICKET ALLOCATION
      *           WORKFILES AND WRITES THE ALLOCATION RECORDS TO THE
      *           EXPENSE TICKET FILE.
      *
      *           THIS PROGRAM IS SUBMITTED BY HP467CL WHICH IS CALLED
      *           FROM HP467 THROUGH QCMDEXC.
      *
      *           THE WORKFILES ARE CREATED IN HP367-BUILD WORKFILES.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/12/94  LEANNE FEDOR
      *           REMOVED FOUR FIELDS FROM THE EXPENSE TICKET FILE:
      *                 PIG DAYS ALLOCATED OVER
      *                 ALLOCATED TIME
      *                 G/L POST TIME
      *                 EOP POST TIME
      *
      * 01/19/95  LEANNE FEDOR
      *           ADDED LOGIC TO ACCOMMODATE ALLOCATING BY COST CENTER.
      *           PLEASE NOTE THAT COST CENTER IS TIED TO THE COMPANY
      *           NUMBER OF THE ORIGINATING BUSINESS OFFICE--NOT THE
      *           ALLOCATING BUSINESS OFFICE.
      *
      * 04/26/95  LEANNE FEDOR
      *           CHANGED FARM SITE CODE FROM ALPHA TO NUMERIC.
      *
      * 12/09/97  LEANNE FEDOR
      *           EXPENSE TICKET NUMBER FIELD RENAMED FROM 'XTNO' TO
      *           'XTSN'.
      *
      * 07/18/01  LeAnne Fedor
      *           Recompile only.
      *           Expense ticket amount expanded from 7,2 to 9,2.
      *
      * 12/11/02  LeAnne Fedor
      *           Removed code that populated the 'production phase' and
      *           'production type' fields in the Expense Ticket file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHSP048    UF A E           K DISK
      *   EXPENSE TICKET
      *
     FHSL367A   IF   E           K DISK
      *    EXPENSE TICKET WORKFILE
      *
     FHSP368    IF   E           K DISK
      *    GROUP WORKFILE
      /EJECT
      ****************************************************************
      * INPUT SPECS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
      *
     D                 DS
     D  DUMMYD                 1      1
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
      * READ EACH EXPENSE TICKET RECORD IN THE WORKFILE AND PROCESS IT
      * IF IT HAS BEEN ALLOCATED.
      *
     C     *IN90         DOUEQ     *ON                                          MAIN DO
     C                   READ      HSL367A                                90
     C     *IN90         IFEQ      *OFF                                         IF NOT EOF
     C     WTALFL        ANDEQ     'A'
      *
      * MAKE SURE THAT THE ORIGINAL EXPENSE TICKET RECORD STILL
      * EXISTS IN THE EXPENSE TICKET FILE. IF SO, PROCESS THE
      * ALLOCATION.
      *
     C     WTXTSN        CHAIN     HSP048                             91
     C     *IN91         IFEQ      *OFF                                         IF EXISTS
     C                   DELETE    XTREC
      *
      * SET UP VALUES FROM THE EXPENSE TICKET RECORD IN THE WORKFILE
      *
     C                   Z-ADD     WTXTSN        XTXTSN
     C                   MOVEL     WTXSCD        XTXSCD
     C                   MOVEL     WTBOBO        XTBOBO
     C                   Z-ADD     WTXBDT        XTXBDT
     C                   Z-ADD     WTXEDT        XTXEDT
     C                   MOVEL     WTECCD        XTECCD
     C                   MOVEL     WTESCD        XTESCD
     C                   MOVEL     WTEXCD        XTEXCD
      *
     C                   MOVEL     WTRPCD        XTRPCD
     C                   MOVEL     WTAMCD        XTAMCD
     C                   MOVEL     WTALFL        XTALFL
      *
     C                   Z-ADD     WTALDT        XTALDT
     C                   Z-ADD     WTPODT        XTPODT
     C                   Z-ADD     WTEPDT        XTEPDT
      *
     C                   EXSR      $GROUP
      *
     C                   ENDIF                                                  IF EXISTS
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  MAIN DO
      *
     C                   SETON                                        LR
      /EJECT
      ****************************************************************
      * $GROUP - RETRIEVE/PROCESS GROUP RECORDS
      ****************************************************************
      *
     C     $GROUP        BEGSR
      *
     C     WTXTSN        SETLL     HSP368
     C                   SETOFF                                       92
      *
     C     *IN92         DOUEQ     *ON                                          DO GROUP
     C     WTXTSN        READE     WGREC                                  92
     C     *IN92         IFEQ      *OFF                                         IF NOT EOF
      *
     C                   MOVEL     WGCOCD        XTCOCD
     C                   MOVEL     WGCJD         XTCJD
     C                   MOVE      *BLANK        XTPTCD
     C                   MOVE      *BLANK        XTPPCD
     C                   MOVEL     WGALBO        XTALBO
     C                   MOVEL     WGDVCD        XTDVCD
     C                   MOVEL     WGRGCD        XTRGCD
     C                   Z-ADD     WGFSCD        XTFSCD
     C                   MOVEL     WGBLCD        XTBLCD
     C                   MOVEL     WGRMCD        XTRMCD
     C                   Z-ADD     WGHGSN        XTHGSN
      *
     C                   Z-ADD     WGXTAM        XTXTAM
     C                   Z-ADD     WGXTHD        XTXTHD
     C                   Z-ADD     WGXTLB        XTXTLB
     C                   Z-ADD     WGXTQT        XTXTQT
      *
     C                   WRITE     XTREC
      *
     C                   ENDIF                                                  IF NOT EOF
     C                   ENDDO                                                  DO GROUP
      *
     C                   ENDSR
      /EJECT
