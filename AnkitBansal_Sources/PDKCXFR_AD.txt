// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDKCXFR
// ?Date: 14.08.2025 Time: 03:32:05
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(UPD W/Std Ovg Non C/W  RT) TYPE(RTVOBJ) FILE(OMHSTPP)          AC1402820;
{
 //?USER: Process Data record

 //?*************************************
 //?Calculate Standard Overage Amount
 DO;

 //?Retrieve Standard Overage (Stored in Pricing U/M)
 EXECUTE FUNCTION(RTV Item Info&Std Ovr  RT) TYPE(RTVOBJ) FILE(CABZREP)          AC1388167;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Shipped_Item_Code);
 PARAMETER(PAR.UOM_Primary);
 PARAMETER(PAR.UOM_Pricing);
 PARAMETER(PAR.Unit_Weight);
 PARAMETER(PAR.Catch_Weight_Status);
 PARAMETER(PAR.Standard_Overage_Underage);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 CASE;

 // IF PAR.Catch Weight Status is no
 IF PAR.Catch_Weight_Status = 'N';

 //?   Rtv Primary U/M Price
 // Call program CLC Convert Price Qtys XF.
 CALL PROGRAM(CLC Convert Price Qtys XF) ('PDKGXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Shipped_Item_Code);
 PARAMETER(PAR.UOM_Pricing);
 PARAMETER(WRK.Price);
 PARAMETER(WRK.Price_based_on_U_M2_S);
 PARAMETER(WRK.Price_based_on_U_M3_S);
 PARAMETER(PAR.Standard_Overage_Underage);

 // PGM.*Synon (17,9) work field = CON.*ZERO
 PGM.*Synon_179_work_field = *ZERO;

 //?   Calculate Price per Pound
 CASE;

 // IF PAR.Unit Weight is Not equal zero
 IF PAR.Unit_Weight <> *ZERO;

 // PGM.*Synon (17,9) work field = WRK.Price / PAR.Unit Weight *
 PGM.*Synon_179_work_field = WRK.Price / PAR.Unit_Weight;

 ENDIF;

 //?   If C/W, use shipped Lbs * Lb Price.
 //?   If not C/W, use Item's (Unit weight * Price * Shipped Qty)
 CASE;

 // IF PAR.Catch Weight Status is yes
 IF PAR.Catch_Weight_Status = 'Y';

 // PAR.Unused Amount Field = DB1.Weight Billed * PGM.*Synon (17,9) work field *
 PAR.Standard_Overage_Amount = DB1.Weight_Billed * PGM.*Synon_179_work_field;

 // IF *OTHERWISE
 IF *OTHERWISE;

 // PGM.*Synon (17,7) work field = PAR.Unit Weight * PGM.*Synon (17,9) work field *
 PGM.*Synon_177_work_field = PAR.Unit_Weight * PGM.*Synon_179_work_field;

 // PAR.Standard Overage Amount = DB1.Quantity Billed * PGM.*Synon (17,7) work field
 PAR.Standard_Overage_Amount = DB1.Quantity_Billed * PGM.*Synon_177_work_field;

 ENDIF;

 ENDIF;

 ENDDO;

 //?*************************************
 CASE;

 // IF PAR.Catch Weight Status is no
 IF PAR.Catch_Weight_Status = 'N';

 EXECUTE FUNCTION(CHG FOB & Std Ovrg     CH) TYPE(CHGOBJ) FILE(OMHSTPP)          AC1388606;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Sequence_Number);
 PARAMETER(DB1.Order_Secondary_Line_Seq);
 PARAMETER(DB1.FOB_Gross_Amount);
 PARAMETER(PAR.Standard_Overage_Amount);
 {
  //?USER: Processing after Data read

  // DB1.Data Mart Process Sts = CND.no
  DB1.Data_Mart_Process_Sts = 'N';

  // DB1.Process Sts for 3C = CND.No
  DB1.Process_Sts_for_3C = 'N';

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1255766;
  PARAMETER(DB1.Job_Time);
  PARAMETER(DB1.User_Id);
  PARAMETER(DB1.Job_Name);
  PARAMETER(DB1.Job_Date);
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

 }

 ENDIF;

}


