// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLARD1R
// ?Date: 14.08.2025 Time: 02:53:30
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification History
DO;

//?4/12/2017 JBB C9426 - Output Ref 1, Ref 2, and Ref Status
//?Note: Susan Mason 02/06/2013
//?Load type from HPS is no longer
//?11/05/2020 ISE H16853 Recompiled due to change in Buy Order Number
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


//?USER: Load detail screen from DBF record

// DTL.Condition Name 1 USR = Condition name of DTL.DSD HPS Post Status
DTL.Condition_Name_1_USR = RTVCND(DTL.DSD_HPS_Post_Status);

// DTL.Text 10 1 USR = Condition name of DTL.DSD Lock Status
DTL.Text_10_1_USR = RTVCND(DTL.DSD_Lock_Status);

// DTL.Text 10 2 USR = Condition name of DTL.DSD HPE Post Status
DTL.Text_10_2_USR = RTVCND(DTL.DSD_HPE_Post_Status);

// DTL.Condition Name 2 USR = Condition name of DTL.DSD Receiving Shift
DTL.Condition_Name_2_USR = RTVCND(DTL.DSD_Receiving_Shift);

// DTL.Condition Name 4 USR = Condition name of DTL.DSD Full/Split Load
DTL.Condition_Name_4_USR = RTVCND(DTL.DSD_Full_Split_Load);

// DTL.Condition Name 5 USR = Condition name of DTL.DSD BOL Kill Shift
DTL.Condition_Name_5_USR = RTVCND(DTL.DSD_BOL_Kill_Shift);

// DTL.Condition Name 6 USR = Condition name of DTL.DSD Kill Shift
DTL.Condition_Name_6_USR = RTVCND(DTL.DSD_Kill_Shift);

//?Note: Susan Mason 02/06/2013
//?Load type from HPS is no longer
// DTL.HPS Load Type Desc = Condition name of DTL.DSD Load Type
DTL.HPS_Load_Type_Desc = RTVCND(DTL.DSD_Load_Type);

