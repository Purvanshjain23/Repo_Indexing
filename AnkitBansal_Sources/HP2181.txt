      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP2181 - Datamart BUD: Build Budget Items/Items
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     08/10/04
      *
      * FUNCTION:    This file in the DataMart will be re-created with
      *              each load of the Data Mart.
      *
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 10/13/04  LeAnne Fedor
      *           Recompile only. Cost Per Unit Amount was changed from
      *           9,2 to 9,4.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsl181d   if   e           k disk
      *  Items
      *
      *
     Fhsp8181   o    e             disk
      *  Datamart BUD: Budget Items
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svbgit          s                   like(imbgit)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Pass 1: Read each item record that has a blank Budget Item and write it
      *         to the Datamart file. (These are the non-budget items.)
      *
     C                   exsr      $pass1
      *
      *
      * Pass 2: Read each item record that a value in Budget Item. Write a record
      *         each time the Budget Item changes. (These are the budget items.)
      *
     C                   exsr      $pass2
      *
     C                   seton                                        lr
      *
      /eject
      *---------------------------------------------------------------
      * Write 1 Datamart record for each record with no Budget Item
      *---------------------------------------------------------------
      *
     C     $pass1        begsr
      *
     C     *loval        setll     hsl181d
      *
     C                   dou       *in90 = *on or imbgit <> *blank              Do pass 1
     C                   read      hsl181d                                90
     C                   if        *in90 = *off and imbgit = *blank             If not EOF
      *
     C                   exsr      $bldrec
     C                   exsr      $wrtrec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do pass 1
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write 1 Datamart record for each unique Budget Item
      *---------------------------------------------------------------
      *
     C     $pass2        begsr
      *
     C     *loval        setll     hsl181d
      *
     C                   dou       *in90 = *on                                  Do pass 2
     C                   read      hsl181d                                90
     C                   if        *in90 = *off and imbgit <> *blank            If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      imbgit        svbgit
     C                   move      no            first
     C                   exsr      $bldrec
      *
     C                   when      imbgit <> svbgit
     C                   move      imbgit        svbgit
     C                   exsr      $wrtrec
     C                   exsr      $bldrec
     C                   endsl
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do pass 2
      *
      * Write out the last record
      *
     C                   if        first = no
     C                   exsr      $wrtrec
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Build a Datamart record
      *---------------------------------------------------------------
      *
     C     $bldrec       begsr
      *
     C                   move      imuom         d2uom
     C                   move      imuow         d2uow
     C                   z-add     imvol         d2vol
     C                   move      imittycd      d2ittycd
     C                   move      imcritfl      d2critfl
     C                   move      imbgfl        d2bgfl
     C                   z-add     imcpuam       d2cpuam
      *
     C                   select
     C                   when      imbgit = *blank
     C                   movel     imitcd        d2bgit
     C                   movel     imitds        d2bgitds
     C                   eval      d2bgitds = %trimr(imitds) + '-' +
     C                                        %subst(imitcd:1:6)
      *
     C                   when      imbgit = imitcd
     C                   movel     imitcd        d2bgit
     C                   eval      d2bgitds = %trimr(imitds) + '-' +
     C                                        %subst(imitcd:1:6)
      *
     C                   when      imbgit <> imitcd
     C                   movel     imbgit        d2bgit
     C                   eval      d2bgitds = imbgit
     C                   z-add     0             d2vol
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write out a Datamart record
      *---------------------------------------------------------------
      *
     C     $wrtrec       begsr
      *
     C                   write     d2rec
     C                   clear                   d2rec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
     C                   endsr
      /eject
