// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKSPPVR
// ?Date: 14.08.2025 Time: 02:51:00
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


// PAR.System Value Numeric  USR = CON.1
PAR.System_Value_Numeric_USR = 1;

// PAR.Program Name USR = CON.PKSSPFR
PAR.Program_Name_USR = 'PKSSPFR';

// PAR.Program Name $ USR = CON.PKSSPFR$
PAR.Program_Name_$_USR = 'PKSSPFR$';

//?** Change Log
//?** 02/28/2006 LJB
//?** Scale ID is now in the Primal Scale file. Use RTVs to get
//?** the description. Use selects to retrieve the scale id.
//?** Change the execute to a sbmjob command to print the report.
//?*****
//?USER: Load screen

// DTL.CC Company Number = PAR.CC Company Number
DTL.CC_Company_Number = PAR.CC_Company_Number;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Name_USR);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


// DTL.Report Type Sum/Dtl USR = CND.Summary
DTL.Report_Type_Sum_Dtl_USR = 'S';

// DTL.DF Description = Condition name of DTL.Report Type Sum/Dtl USR
DTL.DF_Description = RTVCND(DTL.Report_Type_Sum_Dtl_USR);

//?USER: Validate fields

//?** Scale ID is now in a file-RTV the description    2/28/06 LJB
EXECUTE FUNCTION(RTV Primal Scale Name  RT) TYPE(RTVOBJ) FILE(PLAUREP)          AB1270421;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.PSA_Scale_ID);
PARAMETER(DTL.Scale_Desc_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.DF Description = Condition name of DTL.Report Type Sum/Dtl USR
DTL.DF_Description = RTVCND(DTL.Report_Type_Sum_Dtl_USR);

// DTL.Condition Name 1 USR = Condition name of DTL.PSA Shift
DTL.Condition_Name_1_USR = RTVCND(DTL.PSA_Shift);

CASE;

// IF PAR.Oms Allow Multi-Company is Yes
IF PAR.Oms_Allow_Multi_Company = 'Y';

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Name_USR);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


ENDIF;

CASE;

// IF DTL.*CMD key is *Prompt
IF DTL.*CMD_key = '04';

// AND PGM.*Cursor field <IS> DTL.PSA Scale ID
AND PGM.*Cursor_field = DTL.PSA_Scale_ID;

// Call program Zzz Primal Scale       SR.
CALL PROGRAM(Zzz Primal Scale       SR) ('PLG6SRR');
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.PSA_Scale_ID);

ENDIF;

//?USER: User defined action

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Prt Scale Summary/Detail');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(WRK.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Oms_Application_Code);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Date Alpha USR = CVTVAR(DTL.PSA Cut Date)
WRK.Date_Alpha_USR = CVTVAR(DTL.PSA_Cut_Date);

// WRK.Return Code USR = CND.*Normal
WRK.Return_Code_USR = *BLANK;

//?** Change the execute to a sbmjob command     2/27/2006 LJB
// Call program Zzz Primal Cut Sizing UP.
SBMJOB;
CALL PROGRAM(Zzz Primal Cut Sizing UP) ('PKPCUPR');
PARAMETER(WRK.Return_Code_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(DTL.CC_Company_Number);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.System_Value_Numeric_USR);
PARAMETER(WRK.Date_Alpha_USR);
PARAMETER(PAR.Program_Name_USR);
PARAMETER(PAR.Program_Name_$_USR);
PARAMETER(DTL.PSA_Shift);
PARAMETER(DTL.Report_Type_Sum_Dtl_USR);
PARAMETER(DTL.PSA_Scale_ID);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(DTL.Weight_1_USR);
PARAMETER(DTL.Weight_2_USR);
PARAMETER(DTL.Weight_3_USR);
PARAMETER(DTL.Weight_4_USR);
PARAMETER(DTL.Weight_5_USR);
PARAMETER(DTL.Weight_6_USR);
SBMJOBEND;

ENDIF;

