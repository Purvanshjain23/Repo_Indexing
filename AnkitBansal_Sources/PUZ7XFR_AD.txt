// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUZ7XFR
// ?Date: 14.08.2025 Time: 03:51:47
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Create Order Detail (OPBGWKP) Record in QTEMP.
EXECUTE FUNCTION(Crt Block Order Qtemp CR) TYPE(CRTOBJ) FILE(OPBGWKP)           AC2216125;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Order_Sequence_Number);
PARAMETER(PAR.Order_Secondary_Line_Seq);
PARAMETER(PAR.Item_Code);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Ship_To_Customer);
PARAMETER(PAR.Order_Group_Code);
PARAMETER(PAR.Detail_Line_Status);
PARAMETER(PAR.Detail_Line_Status_Last);
PARAMETER(PAR.Billing_Detail_Cost_Dol);
PARAMETER(PAR.Billing_Detail_Gross_Dol);
PARAMETER(PAR.Billing_Detail_Net_Dol);
PARAMETER(PAR.Quantity_to_Substitute);
PARAMETER(PAR.Comment_Print_Acknowledge);
PARAMETER(PAR.Comment_Print_Inv_Cr_Memo);
PARAMETER(PAR.Comment_Print_Pick_Slip);
PARAMETER(PAR.Comment_Print_Ship_Doc);
PARAMETER(PAR.Extended_Amount);
PARAMETER(PAR.Market_Pricing_Date);
PARAMETER(PAR.Commodity_Market_Code);
PARAMETER(PAR.Date_Method_Code);
PARAMETER(PAR.Price_Method_Code);
PARAMETER(PAR.Price_Overage_Override);
PARAMETER(PAR.Contract_Number);
PARAMETER(PAR.Price_Status);
PARAMETER(PAR.Pricing_Date_Used);
PARAMETER(PAR.U_M_Base_Price);
PARAMETER(PAR.U_M_Ordered);
PARAMETER(PAR.Work_Confirm_Status);
PARAMETER(PAR.Work_Over_Short_Status);
PARAMETER(PAR.OD_Production_Plan_Sts);
PARAMETER(PAR.Order_Desc_Line_One);
PARAMETER(PAR.Order_Desc_Line_Two);
PARAMETER(PAR.Age_Code);
PARAMETER(PAR.Palletize);
PARAMETER(PAR.Slip_Sheet);
PARAMETER(PAR.Catch_Weight_Status);
PARAMETER(PAR.Price_Audit);
PARAMETER(PAR.Price_Audit_Reason_Code);
PARAMETER(PAR.Production_Date_Control);
PARAMETER(PAR.Rated_Freight);
PARAMETER(PAR.Quantity_Ordered);
PARAMETER(PAR.Weight_Ordered);
PARAMETER(PAR.Quantity_Scheduled);
PARAMETER(PAR.Weight_Scheduled);
PARAMETER(PAR.Quantity_Shipped_Total);
PARAMETER(PAR.Weight_Shipped_Total);
PARAMETER(PAR.Unit_Cost_Pricing_U_M);
PARAMETER(PAR.Unit_Cost_Per_Pound);
PARAMETER(PAR.Unit_Price);
PARAMETER(PAR.Unit_Price_Credit);
PARAMETER(PAR.Unit_Price_Ordered_U_M);
PARAMETER(PAR.Unit_Weight_Ordered_U_M);
PARAMETER(PAR.Tare_Weight_Total);
PARAMETER(PAR.Requested_Ship_Date);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Affect_Inventory_Status);
PARAMETER(PAR.Affect_Sales_Doll_Status);
PARAMETER(PAR.Affect_Sales_Pnds_Status);
PARAMETER(PAR.Item_Structure_Type_Code);
PARAMETER(PAR.Item_Structure_Group_Code);
PARAMETER(PAR.Item_Structure_Class_Code);
PARAMETER(PAR.Item_Level);
PARAMETER(PAR.Quality_Level);
PARAMETER(PAR.Pricing_Product_Class_Rep);
PARAMETER(PAR.Season_Product_Class_Repo);
PARAMETER(PAR.Date_of_Original_Entry);
PARAMETER(PAR.User_Profile_Name);
PARAMETER(PAR.Country_Code);
PARAMETER(PAR.Event_Code);
PARAMETER(PAR.Reason_Code);
PARAMETER(PAR.Sales_Route_Code);
PARAMETER(PAR.Modified_Flag);
PARAMETER(PAR.Substituted_Flag);
PARAMETER(PAR.OD_Schedule_Override_Sts);
PARAMETER(PAR.Invoice_Unit_Price);
PARAMETER(PAR.Invoice_Extended_Amt);
PARAMETER(PAR.Ham_Group_Number);
PARAMETER(PAR.OD_Adj_Type_Override);
PARAMETER(PAR.Affect_Trade_Fund);
PARAMETER(PAR.Affect_Commission);
PARAMETER(PAR.Affect_Pricing);
PARAMETER(PAR.Released_by_User_Sts_Y_N);
PARAMETER(PAR.Ord_TF_Exempt_Code);
PARAMETER(PAR.OD_Pallet_Type);
PARAMETER(PAR.Production_Warehouse);
PARAMETER(PAR.OD_Price_Type);
PARAMETER(PAR.Warehouse_Pallets_Loaded);
PARAMETER(PAR.Consumed_Item_Code);
PARAMETER(PAR.Deadline_Depart_Date_LH);
PARAMETER(PAR.OD_Price_Type_Ref_Num);
PARAMETER(PAR.OD_Firm_Date);
PARAMETER(PAR.Deadline_Depart_Time_LH);
PARAMETER(PAR.Price_Code);
PARAMETER(PAR.Maximum_Net_Weight);
PARAMETER(PAR.Substitution_Line_Number);
PARAMETER(PAR.Max_Qty_to_sched_per_day);
PARAMETER(PAR.Warehouse_Pallet_Tare);
PARAMETER(PAR.Warehouse_Avg_Pallet_Tare);
PARAMETER(PAR.OD_Item_Target_Price);
PARAMETER(PAR.OD_Estimated_Gross_Weight);
PARAMETER(PAR.OD_Maximum_Unit_Weight);
PARAMETER(PAR.Order_Gate_Final_Price);
PARAMETER(PAR.OD_Ceiling_Price);
PARAMETER(PAR.OD_Gate_Final_Price_Adj);
PARAMETER(PAR.OD_Weighted_Avg_Price);
PARAMETER(PAR.OD_Original_Ordered_Qty);
PARAMETER(PAR.OD_Cancel_Date);
PARAMETER(PAR.OD_Unused_Prc_7);
PARAMETER(PAR.OD_Unused_Prc_8);
PARAMETER(PAR.OD_MPR_Sent_to_USDA_Sts);
PARAMETER(PAR.OD_MPR_Prc_Ready_to_Send);
PARAMETER(PAR.OD_UnUsed_Price_Sts_3);
PARAMETER(PAR.Weight_Amount_Entered);
PARAMETER(PAR.Item_Age_Days);
PARAMETER(PAR.Production_Ovr_AgeDte_Fr);
PARAMETER(PAR.Production_Ovr_AgeDte_To);
PARAMETER(PAR.OD_Spot_Buy);
PARAMETER(PAR.OD_Clm_Full_Return_to_Plt);
PARAMETER(PAR.Order_Line_Error_Type);
PARAMETER(PAR.OD_Market_Begin_Date);
PARAMETER(PAR.OD_Market_Ending_Date);
PARAMETER(PAR.OD_Atch_to_Ord_ActShpDte);
PARAMETER(PAR.EDI_Status_1);
PARAMETER(PAR.EDI_Status_2);
PARAMETER(PAR.EDI_Status_3);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp 2 IF) TYPE(EXCINTFUN)                      AC2165057;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // DB1.User Id = CON.INFORMATIC
 DB1.User_Id = 'INFORMATIC';

 // DB1.Job Name = CON.AUTOUPLOAD
 DB1.Job_Name = 'AUTOUPLOAD';

 //?Calc Gross Weight from tares...    copied from Dsp Gross Wgt function
 DO;

 // Call program Rtv Tare Weight        XF.
 CALL PROGRAM(Rtv Tare Weight        XF) ('PBI3XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Misc_Tare_Weight);

 //?wi464
 // Call program RTV Itm BxID & Tares  XF.
 CALL PROGRAM(RTV Itm BxID & Tares  XF) ('PBI4XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(LCL.Box_Weight);
 PARAMETER(LCL.Number_Cases_On_A_Pallet);
 PARAMETER(LCL.Pallet_Tare_Weight);
 PARAMETER(LCL.Box_iD);
 PARAMETER(DB1.OD_Pallet_Type);

 // LCL.Total Tare USR = LCL.Box Weight + LCL.Misc Tare Weight
 LCL.Total_Tare_USR = LCL.Box_Weight + LCL.Misc_Tare_Weight;

 // Box + Misc Tare
 LCL.Weight_1_1_U = ( LCL.Box_Weight + LCL.Misc_Tare_Weight ) * DB1.Quantity_Ordered 'H';

 //?Pallet Tare
 CASE;

 // IF DB1.Palletize is yes
 IF DB1.Palletize = 'Y';

 CASE;

 // IF LCL.Number Cases On A Pallet is GT Zero
 IF LCL.Number_Cases_On_A_Pallet > *ZERO;

 // Pallet Weight
 LCL.Weight_1_2_U = ( DB1.Quantity_Ordered / LCL.Number_Cases_On_A_Pallet 'H' )
 * LCL.Pallet_Tare_Weight 'H';

 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Weight 1.2             .U = CON.*ZERO
 LCL.Weight_1_2_U = *ZERO;

 ENDIF;

 //?Pallet Tare
 // IF *OTHERWISE
 IF *OTHERWISE;

 // LCL.Weight 1.2             .U = CON.*ZERO
 LCL.Weight_1_2_U = *ZERO;

 ENDIF;

 // Estimated Gross
 DB1.OD_Estimated_Gross_Weight = ( DB1.Weight_Ordered + LCL.Weight_1_1_U )
 + LCL.Weight_1_2_U;

 ENDDO;

 //?** WI546_2 Added code similar to manual Block Order
 // DB1.Age Code = CND.Blank
 DB1.Age_Code = *BLANK;

 // Call program Rtv First Consumed Itm XF.
 CALL PROGRAM(Rtv First Consumed Itm XF) ('POP1XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Code);
 PARAMETER(DB1.Consumed_Item_Code);

 EXECUTE FUNCTION(Rtv Productin Whs     RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1498428;
 PARAMETER(DB1.Warehouse_Code);
 PARAMETER(DB1.Production_Warehouse);
 PARAMETER(NLL.Accounting_Company);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


