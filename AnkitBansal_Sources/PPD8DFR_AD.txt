// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPD8DFR
// ?Date: 14.08.2025 Time: 03:40:05
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?RMC EXPCOM 10/21/04 remove company from file
//?RMC DLY029 05/23/07 Db changes  - put broker on screen
//?SAZ E00058 05/19/08 Put cust name on screen
//?SAZ FP1286 06/27/08 added AR cust # and Duns numbers to screen
//?SAZ FP1286 06/27/08 added edts to Duns numbers
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('A/R');
PARAMETER(WRK.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// PAR.PRT Printer Device = CND.Not entered
PAR.PRT_Printer_Device = *BLANK;

//?USER: Initialize subfile record from DBF record

//?Retrieve the Duns Ship to number
EXECUTE FUNCTION(Rtv All Values        RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1569834;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(NLL.Internet_Password);
PARAMETER(NLL.Email_Address);
PARAMETER(NLL.Email_User_ID);
PARAMETER(NLL.EDI_Trading_Partner_No);
PARAMETER(RCD.EDI_Cust_Duns_Number);
PARAMETER(NLL.EDI_Warehouse_Store_No);
PARAMETER(NLL.State_Tax_ID);
PARAMETER(NLL.Cust_Shipping_Temp_C_F);
PARAMETER(NLL.One_Invoice_Per_PO);
PARAMETER(NLL.EDI_Advanced_Ship_Notice);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Retrieve the Duns Bill to number
EXECUTE FUNCTION(RTV Customer A/R Cust  RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1210709;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.AR_Customer_Number);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv All Values        RT) TYPE(RTVOBJ) FILE(PDNEREP)           AC1569834;
PARAMETER(RCD.AR_Customer_Number);
PARAMETER(NLL.Internet_Password);
PARAMETER(NLL.Email_Address);
PARAMETER(NLL.Email_User_ID);
PARAMETER(NLL.EDI_Trading_Partner_No);
PARAMETER(RCD.EDI_Billto_Duns_Number);
PARAMETER(NLL.EDI_Warehouse_Store_No);
PARAMETER(NLL.State_Tax_ID);
PARAMETER(NLL.Cust_Shipping_Temp_C_F);
PARAMETER(NLL.One_Invoice_Per_PO);
PARAMETER(NLL.EDI_Advanced_Ship_Notice);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?** Get Customer name from Ship to number
EXECUTE FUNCTION(RTV Customer Name      RT) TYPE(RTVOBJ) FILE(CABBREP)          AC1108159;
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.USR_Customer_Short_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF CTL.Accrual Code is Entered
IF CTL.Accrual_Code <> *BLANK;

CASE;

// IF DB1.Accrual Code NE CTL.Accrual Code
IF DB1.Accrual_Code <> CTL.Accrual_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F21=Print request
CASE;

// IF CTL.*CMD key is CF21
IF CTL.*CMD_key = '21';

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Print Accrl Code Usage');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Number_of_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('OMS');
PARAMETER(*MISSING);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.System Value Numeric = PAR.PRT Number of Copies
PAR.System_Value_Numeric = PAR.PRT_Number_of_Copies;

// Call program Prt Accrl Code Usage   UP.
SBMJOB;
CALL PROGRAM(Prt Accrl Code Usage   UP) ('PPEAUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(CTL.Accrual_Code);
SBMJOBOVR JOB(PRTUSAGE);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

ENDIF;

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Edit Ship To Duns number
CASE;

// IF RCD.*SFLSEL is Option 2
IF RCD.*SFLSEL = '2'/'2';

// Call program Edt A/R Cust f/ElecCom E1.
CALL PROGRAM(Edt A/R Cust f/ElecCom E1) ('POIXE1R');
PARAMETER(RCD.Ship_To_Customer);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?5=Edit Bill to Duns Number
CASE;

// IF RCD.*SFLSEL is Option 5
IF RCD.*SFLSEL = '5'/'5';

// Call program Edt A/R Cust f/ElecCom E1.
CALL PROGRAM(Edt A/R Cust f/ElecCom E1) ('POIXE1R');
PARAMETER(RCD.AR_Customer_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?6=Print
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6'/'6';

// PAR.Customer Number Pass  USR = RCD.Ship To Customer
PAR.Customer_Number_Pass_USR = RCD.Ship_To_Customer;

// Call program PRT Prmt w/Co/Customer UP.
CALL PROGRAM(PRT Prmt w/Co/Customer UP) ('PDH6UPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER('A/R');
PARAMETER('PDDSPCLP');
PARAMETER(PAR.Customer_Number_Pass_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER('Print Customer Accruals');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.Accrual_Code);

CASE;

// IF WRK.Return Code Usr is *Blank
IF WRK.Return_Code_Usr = *BLANK;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

ENDIF;

//?8=Dsp Detail
CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.All Products (Y/N) is Yes
IF RCD.All_Products_Y_N = 'Y';

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.Accrual Detail Search is Item
IF RCD.Accrual_Detail_Search = 'I';

// Call program Dsp Cust/Item Accrual  DF.
CALL PROGRAM(Dsp Cust/Item Accrual  DF) ('PPB3DFR');
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.CAH_Sequence_No);
PARAMETER(RCD.Period_Beginning_Date);
PARAMETER(RCD.Period_Ending_Date);

// IF RCD.Accrual Detail Search is Item Structure
IF RCD.Accrual_Detail_Search = 'S';

// Call program Dsp Customer Accr Str DF.
CALL PROGRAM(Dsp Customer Accr Str DF) ('PPB4DFR');
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.CAH_Sequence_No);
PARAMETER(RCD.Period_Beginning_Date);
PARAMETER(RCD.Period_Ending_Date);

ENDIF;

ENDIF;

ENDIF;

//?9=Dsp Range
CASE;

// IF RCD.*SFLSEL is Option 9
IF RCD.*SFLSEL = '9'/'9';

CASE;

// IF RCD.Accrual Rate Type is All Sales
IF RCD.Accrual_Rate_Type = 'W'/'S'/'Q'/'G'/'FA';

// OR RCD.Accrual Rate Type is *NONE
OR RCD.Accrual_Rate_Type = *BLANK;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

// IF *OTHERWISE
IF *OTHERWISE;

// Call program Zzz Cust Acrl Rate    DF.
CALL PROGRAM(Zzz Cust Acrl Rate    DF) ('PPHJDFR');
PARAMETER(RCD.Ship_To_Customer);
PARAMETER(RCD.Accrual_Code);
PARAMETER(RCD.CAH_Sequence_No);
PARAMETER(RCD.Period_Beginning_Date);
PARAMETER(RCD.Period_Ending_Date);
PARAMETER(RCD.Accrual_Rate_Type);

ENDIF;

ENDIF;

