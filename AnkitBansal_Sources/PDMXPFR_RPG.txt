     H/TITLE PRT Product Price List PF Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Print file
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISSMASO
     H* Date          : 06/10/04  Time  : 15:54:57
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FCABZRELGIF  E           K        DISK
      * RTV : Company Item              Active Finished Goods
      *
     FOME8REL0IF  E           K        DISK
      * RTV : Item Structure Type       Retrieval index
      *
     FOME9REL0IF  E           K        DISK
      * RTV : Item Structure Group      Retrieval index
      *
     FOMFAREL1IF  E           K        DISK
      * RTV : Item Structure Class      Retrieval index
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FOMF0CPL2IF  E           K        DISK
      * RSQ : Commodity Mrkt Price      Market Date Descending
      *
     FPDKZCPL2IF  E           K        DISK
      * RSQ : Item Values               Co/Item/Whse/Dte-Tme (D)
      *
     FPDMXPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: PRT Product Price List PF Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Company Item
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * N :  U/M - Pricing
     I                                        3   4 P1AICD
      * N :  Default Commod Mark basis
     I                                        5   7 P1LNCD
      * N :  Commodity Price Group
     I                                        8  14 P1LRCD
     IP2PARM      DS
      * B :  USR Requested ship date s
     I                                    P   1   40P2CZDT
     IP3PARM      DS
      * I :  Item Structure Type Code
     I                                    P   1   20P3RGNB
     IP4PARM      DS
      * I :  Item Structure Group Code
     I                                    P   1   20P4RHNB
     IP5PARM      DS
      * I :  Item Structure Class Code
     I                                    P   1   20P5RINB
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P2CZDT    PARM P2CZDT    WP0002  70       USR Requested s
     C           P3RGNB    PARM           WP0003  30       Item Structure
     C           P4RHNB    PARM           WP0004  30       Item Structure
     C           P5RINB    PARM           WP0005  30       Item Structure
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * PRT Product Price List PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$EENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * PRT Product Price List PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZAIC3    WQKA01           Company Number
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
      * Establish starting position
     C           KRSA      SETLL@BZREZY                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BEQDT           Market Price Da
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     Z-ADD*ZERO     $BRHNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     Z-ADD*ZERO     $BRINB           Item Structure
     C                     MOVEL*BLANK    $BDETX           Item Structure
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDBZAIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CAPTX           Company Name
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDBZAIC3    $DAIC3           Company Number
     C                     Z-ADDBZHGCD    $DHGCD           Item Code
     C                     MOVELBZAVNA    $DAVNA           Description Lin
     C                     MOVELBZADCD    $DADCD           U/M - Primary
     C                     MOVELBZLNCD    $DLNCD           Default Commod
     C                     Z-ADD*ZERO     $DCKPR           USR Price per P
     C                     Z-ADD*ZERO     $DEQDT           Market Price Da
     C                     Z-ADD*ZERO     $DAGCS           Unit Cost Per P
     C                     Z-ADD*ZERO     $DGUDT           Revaluation Eff
     C                     Z-ADDBZBMPR    $DBMPR           Standard Overag
     C                     Z-ADDBZBLPR    $DBLPR           Market Overage
     C                     MOVELBZAICD    $DAICD           U/M - Pricing
     C                     MOVELBZQ1CD    $DQ1CD           Default Warehou
     C                     MOVELBZLRCD    $DLRCD           Commodity Price
     C                     MOVELBZPCCT    $DPCCT           Piece Count Ite
     C                     Z-ADDBZBDNB    $DBDNB           Pieces Per Bag
     C                     Z-ADDBZBJNB    $DBJNB           Bags Per Unit
     C                     MOVELBZSUST    $DSUST           Export/Domestic
     C                     MOVELBZSVST    $DSVST           Print On Schedu
     C                     MOVELBZSYST    $DSYST           Fresh Inv Alloc
     C                     MOVELBZSZST    $DSZST           Fresh Sched As
     C                     MOVELBZS1ST    $DS1ST           Frozen Sched As
     C                     MOVELBZXRCD    $DXRCD           Primal Group Co
     C                     MOVELBZXTCD    $DXTCD           UPC Code 1
     C                     MOVELBZXUCD    $DXUCD           UPC Code 2
     C                     Z-ADDBZF5WG    $DF5WG           Item Target Pri
     C                     Z-ADDBZF6WG    $DF6WG           Minimum Piece W
     C                     Z-ADDBZF7WG    $DF7WG           Maximum Piece W
     C                     Z-ADDBZBLNB    $DBLNB           Seaboard Equiva
     C                     Z-ADDBZBNNB    $DBNNB           Production Qty
     C                     MOVELBZS2ST    $DS2ST           Scheduling Posi
     C                     MOVELBZS4ST    $DS4ST           Sold 100% Froze
     C                     MOVELBZS5ST    $DS5ST           Maximum Shifts
     C                     MOVELBZS6ST    $DS6ST           CI Value Added
     C                     MOVELBZS8ST    $DS8ST           CI Unused Sts 5
     C                     MOVELBZS9ST    $DS9ST           CI Unused Sts 6
     C                     MOVELBZTCST    $DTCST           CI Unused Sts 7
     C                     MOVELBZTDST    $DTDST           CI Unused Sts 8
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN BZAIC3    WZA001           Company Number
     C                     Z-ADDBZAIC3    WZA001
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@BZREZY                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
      * USER: Record selection processing
      * Ignore records not meeting selection criteria
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Structure Type Code is greater than zero
      *   |- c2    : PAR.Item Structure Type Code NE DB1.Item Structure T
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P3RGNB    IFGT *ZERO                      *IF
     C           P3RGNB    IFNE BZRGNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Structure Group Code is Entered
      *   |- c2    : PAR.Item Structure Group Code NE DB1.Item Structure
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P4RHNB    IFNE *ZERO                      *IF
     C           P4RHNB    IFNE BZRHNB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
      * CASE:
      *  - c1 AND c2
      *   |- c1    : PAR.Item Structure Class Code is Entered
      *   |- c2    : PAR.Item Structure Class Code NE DB1.Item Structure
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           P5RINB    IFNE *ZERO                      *IF
     C           P5RINB    IFNE BZRINB                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     MOVEL'N'       W0RSL            *Record selecte
     C                     END                             *FI
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     ELSE
      * Next record - Detect level breaks
     C           BZAIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of PRT Product Price List PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of PRT Product Price List PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     Z-ADDP2CZDT    $BEQDT           Market Price Da
     C                     Z-ADDP3RGNB    $BRGNB           Item Structure
     C                     Z-ADDP4RHNB    $BRHNB           Item Structure
     C                     Z-ADDP5RINB    $BRINB           Item Structure
      * RTV  Description       RT - OM Item Structure Type  * 
     C                     EXSR SCRVGN
      * Rtv Group Description  RT - OM Item Structure Group  * 
     C                     EXSR SDRVGN
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
     C                     EXSR SERVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Market Price Date to display format
      * Convert date
     C           1000000   ADD  $BEQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VBEQDT
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of PRT Product Price List PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number format
      * RTV Company Name       RT - Company Name and Address  * 
     C                     EXSR SFRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP00
     C                     END                             FI
      * Print Detail line. of PRT Product Price List PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of detail format
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
     C                     EXSR SGRVGN
     C           BZBMPR    ADD  WUA5PR    WUCKPR           USR Price per P
     C                     Z-ADDP2CZDT    $DGUDT           Revaluation Eff
      * RTV Unit Cost & Date   RT - PD Item Values  * 
     C                     EXSR SHRVGN
     C                     MOVELBZAICD    P1AICD           U/M - Pricing
      * CLC Convert Price Qtys XF - /UT Inv. Interface Funcs  * 
     C                     CALL 'PDKGXFR'              90  CLC Convert Pri
     C                     PARM *BLANK    W0RTN   7
     C                     PARM $DAIC3    WQ0001  30       Company Number
     C                     PARM $DHGCD    WQ0002  70       Item Code
     C           P1AICD    PARM P1AICD    WQ0003  2        U/M - Pricing
     C           WUAPPR    PARM WUAPPR    WQ0004 114       Price based on
     C           WUAQPR    PARM WUAQPR    WQ0005 114       Price based on
     C           WUARPR    PARM WUARPR    WQ0006 114       Price based on
     C                     PARM WUCKPR    WQ0007 114       Unit Price
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDKGXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * CASE: WRK.Price based on U/M1 S is Not Zeros
     C           WUAPPR    IFNE *ZERO                      *IF
     C           WUAPPR    DIV  BZAIWG    $DCKPR           USR Price per P
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $DHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$DHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VDHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VDHGCD           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Market Price Date to display format
      * Convert date
     C           1000000   ADD  $DEQDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDEQDT
      * Convert Revaluation Eff. Date to display format
      * Convert date
     C           1000000   ADD  $DGUDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VDGUDT
      * Print column headings if required
     C           W0ACDT    IFEQ 'Y'
     C                     WRITE$DCOLHDG
      * Clear column headings control flag
     C                     MOVE *BLANK    W0ACDT
     C                     END                             FI
      * Print format
     C                     WRITE$DDTLRCD
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of PRT Product Price List PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  6         W0FSUM
     C                     END                             FI
      *
      * * Company Number of PRT Product Price List PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of PRT Product Price List PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD2         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD4         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'C/S'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL'Y2U0005' W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV  Description       RT - OM Item Structure Type  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           E8RGNB           Item Structure
      * Setup key
     C                     Z-ADD$BRGNB    E8RGNB           Item Structure
      * Establish starting position
     C           KRSSC     CHAIN@E8REBB              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1166' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     $BRGNB           Item Structure
     C                     MOVEL*BLANK    $BDCTX           Item Structure
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVEL*BLANK    W0RTN            *Return code
      * PAR = DB1 By name
     C                     Z-ADDE8RGNB    $BRGNB           Item Structure
     C                     MOVELE8DCTX    $BDCTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * Rtv Group Description  RT - OM Item Structure Group  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           E9RHNB           Item Structure
      * Setup key
     C                     Z-ADD$BRHNB    E9RHNB           Item Structure
      * Establish starting position
     C           KRSSD     CHAIN@E9REA8              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1168' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WURGNB           Item Structure
     C                     MOVEL*BLANK    $BDDTX           Item Structure
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDE9RGNB    WURGNB           Item Structure
     C                     MOVELE9DDTX    $BDDTX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * Rtv Item Class Desc    RT - OM Item Structure Class  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           FARINB           Item Structure
      * Setup key
     C                     Z-ADD$BRINB    FARINB           Item Structure
      * Establish starting position
     C           KRSSE     CHAIN@FAREBE              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1170' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BDETX           Item Structure
     C                     GOTO SEEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELFADETX    $BDETX           Item Structure
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADD$CAIC3    ABAIC3           Company Number
      * Establish starting position
     C           KRSSF     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $CAPTX           Name
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    $CAPTX           Name
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * RTV Market Price       RT - OM Commodity Mrkt Price  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN F0LQCD    WQSG01           Commodity Marke
     C           *LIKE     DEFN F0LRCD    WQSG02           Commodity Price
      * Define keylist
     C           KPSSG     KLIST
     C                     KFLD           WQSG01           Commodity Marke
     C                     KFLD           WQSG02           Commodity Price
     C                     KFLD           F0EQDT           Market Price Da
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Commodity Marke
     C                     KFLD           WQSG02           Commodity Price
      * Setup key
     C                     MOVELBZLNCD    WQSG01           Commodity Marke
     C                     MOVELBZLRCD    WQSG02           Commodity Price
     C                     Z-ADDP2CZDT    F0EQDT           Market Price Da
      * Establish starting position
     C           KPSSG     SETLL@F0CPEP                    *
     C           KRSSG     READE@F0CPEP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR1222' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL'Y2U0005' W0RTN            *Return code
      * PAR = CON By name
     C                     Z-ADD*ZERO     WUA5PR           Commodity Marke
     C                     Z-ADD*ZERO     $DEQDT           USR Date Priced
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
     C                     Z-ADDF0A5PR    WUA5PR           Commodity Marke
     C                     Z-ADDF0EQDT    $DEQDT           USR Date Priced
     C                     GOTO SGEXIT                     *QUIT
     C           KRSSG     READE@F0CPEP                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         SHRVGN    BEGSR
      *================================================================
      * RTV Unit Cost & Date   RT - PD Item Values  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN KZAIC3    WQSH01           Company Number
     C           *LIKE     DEFN KZHGCD    WQSH02           Item Code
     C           *LIKE     DEFN KZAJCD    WQSH03           Warehouse Code
      * Define keylist
     C           KPSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WQSH02           Item Code
     C                     KFLD           WQSH03           Warehouse Code
     C                     KFLD           KZGUDT           Revaluation Eff
      * Define keylist
     C           KRSSH     KLIST
     C                     KFLD           WQSH01           Company Number
     C                     KFLD           WQSH02           Item Code
     C                     KFLD           WQSH03           Warehouse Code
      * Setup key
     C                     Z-ADDBZAIC3    WQSH01           Company Number
     C                     Z-ADDBZHGCD    WQSH02           Item Code
     C                     MOVELBZQ1CD    WQSH03           Warehouse Code
     C                     Z-ADD$DGUDT    KZGUDT           Revaluation Eff
      * Establish starting position
     C           KPSSH     SETLL@KZCPJP                    *
     C           KRSSH     READE@KZCPJP                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR2347' W0RTN   7
      * USER: Processing if Data record not found
     C                     Z-ADD*ZERO     $DGUDT           Revaluation Eff
     C                     GOTO SHEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDKZGUDT    $DGUDT           Revaluation Eff
     C                     Z-ADDKZAGCS    $DAGCS           Unit Cost Per P
     C                     GOTO SHEXIT                     *QUIT
     C           KRSSH     READE@KZCPJP                  90*
     C                     ENDDO
      *================================================================
     CSR         SHEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     MOVEL*BLANK    P1AICD           U/M - Pricing
     C                     MOVEL*BLANK    P1LNCD           Default Commod
     C                     MOVEL*BLANK    P1LRCD           Commodity Price
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    BZAIC3           Company Number
     C                     MOVEL*LOVAL    BZHGCD           Item Code
      * Define work field Item Structure Type Code
     C                     Z-ADD*ZERO     WURGNB  30
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Commodity Market Price
     C                     Z-ADD*ZERO     WUA5PR 114
      * Define work field USR Price per Pricing U/M
     C                     Z-ADD*ZERO     WUCKPR 114
      * Define work field Price based on U/M1 S
     C                     Z-ADD*ZERO     WUAPPR 114
      * Define work field Price based on U/M2 S
     C                     Z-ADD*ZERO     WUAQPR 114
      * Define work field Price based on U/M3 S
     C                     Z-ADD*ZERO     WUARPR 114
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
      * Default system date if not entered
      * CASE: PAR.USR Requested ship date s is not entered
     C           P2CZDT    IFEQ *ZERO                      *IF
     C                     Z-ADD##JDT     P2CZDT           USR Requested s
     C                     END                             *FI
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
