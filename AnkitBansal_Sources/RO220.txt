     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO220
      * TITLE:       Byproduct -- Detail from Product Exceptions (FG/BP Only)
      * PROGRAMMER:  Alice Brownfield
      * CREATED:     06/11/08
      *
      * FUNCTION:    This program retrieves all Product Exception records for
      *              the incoming Product Exception Number and writes them to
      *              the Byproduct Detail file.
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 04/02/09  LeAnne Ramsey
      *           Recompile only. Field 'Producing Company' added to Byproduct Detail.
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     ftfp019    if   e           k disk
      *  TF Product exception
      *
      *
     frop122    o    e           k disk
      *  Byproduct detail
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Parms
      *
     D xxpesn          s                   like(pepesn)
     D xxcgcd          s                   like(ydcgcd)
     D xxtfclcd        s                   like(ydtfclcd)
     D xxmixgrp        s                   like(ydmixgrp)
     D xxistycd        s                   like(ydistycd)
     D xxisgrcd        s                   like(ydisgrcd)
     D xxisclcd        s                   like(ydisclcd)
     D xxsumlev        s                   like(ydsumlev)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Read each record in the Product Exceptions file for the incoming
      * Product Exception Number and for every BP record:
      * Write a record to the Byproduct Detail file for every record processed.
      *
     C     xxpesn        setll     tfp019
      *
     C                   dou       *in90 = *on                                  Main do
     C     xxpesn        reade     tfp019                                 90
     C                   if        *in90 = *off and petfcgcd = 'BP'             If not eof
     C                   exsr      $wrt122
     C                   endif                                                  If not eof
     C                   enddo                                                  Main do
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a record to the Byproduct Detail file
      *-----------------------------------------------------------------------------------
      *
     C     $wrt122       begsr
      *
      * Hardcoded
     C                   move      'Y'           ydexfl
     C                   z-add     100           ydmupc
     C                   z-add     0             ydsypc
     C                   z-add     0             ydpumppc
      * Product exception
     C                   z-add     pewedt        ydwedt
     C                   move      petfclcd      ydtfclcd
     C                   move      petfcgcd      ydtfcgcd
     C                   move      pecgcd        ydcgcd
     C                   move      pesgcd        ydsgcd
     C                   move      pemixfl       ydmixfl
     C                   move      pemixgrp      ydmixgrp
     C                   z-add     pepesn        ydpesn
     C                   z-add     peprcd        yditcd
     C                   movel     peitycd       ydittycd
     C                   z-add     peistycd      ydistycd
     C                   z-add     peisgrcd      ydisgrcd
     C                   z-add     peisclcd      ydisclcd
     C                   move      peisclds      ydisclds
      *
      *            SBD:
     C                   z-add     pesexpulb     ydspulb
     C                   z-add     pesexpulb     ydspuslb
     C                   z-add     pesexpuam     ydspuam
     C                   z-add     pesexpuam     ydsnpuam
      *            TF:
     C                   z-add     petexpulb     ydtpulb
     C                   z-add     petexpulb     ydtpuslb
     C                   z-add     petexpuam     ydtpuam
     C                   z-add     petexpuam     ydtnpuam
      *            AGG:
     C     pesexpulb     add       petexpulb     ydapulb
     C     pesexpulb     add       petexpulb     ydapuslb
     C     pesexpuam     add       petexpuam     ydapuam
     C     pesexpuam     add       petexpuam     ydanpuam
      *
      * Calc prices
     C                   if        ydapulb <> 0
     C                   eval      ydpupr  = ydapuam / ydapulb
     C                   eval      ydnpupr = ydapuam / ydapulb
     C                   endif
      *
      * Call generic program to retrieve the Summary Level
      *
     C                   call      'RO801'
     C                   parm      ydcgcd        xxcgcd
     C                   parm      ydtfclcd      xxtfclcd
     C                   parm      ydistycd      xxistycd
     C                   parm      ydisgrcd      xxisgrcd
     C                   parm      ydisclcd      xxisclcd
     C                   parm      ydmixgrp      xxmixgrp
     C     ydsumlev      parm      *blank        xxsumlev
      *
      * Write record
     c                   write     ydrec
     C                   clear                   ydrec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Parm Lists
      *
     C     *entry        plist
     C                   parm                    xxpesn
      *
     C                   endsr
      /eject
