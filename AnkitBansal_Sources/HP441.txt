      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP441
      * TITLE:       WORK WITH CLOSED/VOIDED HOG GROUPS
      * PROGRAMMER:  ROSE CENTONZE
      * CREATED:     07/20/94
      *
      * FUNCTION: THIS IS A WORK WITH THAT DISPLAYS THE CLOSED/VOIDED
      *           GROUPS IN THE HOG GROUP MASTER FILE.
      *
      *           We have used indicators to make 2 versions of this program.
      *           The 'V'iew version does not have any maintenance functions.
      *           The 'M'aintenance version has all functions.
      *
      *           RESTRICTORS:
      *               BUSINESS OFFICE CODE
      *
      *           POSITIONERS:
      *               NONE
      *
      *           SELECTORS:
      *               HOG GROUP CODE
      *               FARM SITE
      *               PRODUCTION PHASE
      *               PRODUCTION TYPE
      *               HOG GROUP STATUS
      *
      *           IT HAS F4-PROMPT LOGIC.
      *           IT LOADS THE SUBFILE A PAGE AT A TIME.
      *           IT USES THE STANDARD MESSAGE HANDLING PROGRAM.
      *           IT HAS STANDARD SUBFILE OPTION EDITING.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/16/02  LeAnne Fedor
      *           Replaced 'created date' with 'date disposed' in the subfile.
      *
      * 11/26/02  LeAnne Fedor
      *           Added 'stocking density' and 'stayed/moved code' in subfile and
      *           as selectors.
      *
      * 12/30/05  LeAnne Fedor
      *           We made a single "6=Print" option for the 3 existing "print" functions:
      *                 6=print review with costs
      *                10=print review without costs
      *                13=print movements
      *           Our new 6=Print function calls a pop-up window where the user can
      *           select all/each of these 3 reports as well as selecting 2 new
      *           Download options. The actual submission is made from the pop-up window.
      *
      * 02/01/06  LeAnne Fedor
      *           We were already clearing the "e-mail" address in the LDA (added in the
      *           12/30/05 change above); but, we were not "outputing" the LDA in the
      *           Initialization subroutine. Added the "out" LDA command.
      *
      * 07/06/09  LeAnne Ramsey
      *           Added new field 'Continuous Flow Flag' (Hog Group file) to Control
      *           Record and subfile.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD441    CF   E             WORKSTN SFILE(HP441S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
      *
     FHSL034J   IF   E           K DISK    INFDS(DBFEED)
      *    Hog Group               (SELECT: HGGSCD = VD CL)
      *
      /EJECT
      ****************************************************************
      * Definition Specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SBMJOB USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *STANDARD SUBFILE SELECTOR CONVERSION
      *---------------------------------------------------------------
     D                 DS
     D  DFOPT                  1      2
     D  WKOPT1                 1      1
     D  WKOPT2                 2      2
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE ')
     D REVISE          C                   CONST('REVISE ')
     D DISPOS          C                   CONST('DISPOSE')
     D DELETE          C                   CONST('DELETE ')
     D VIEW            C                   CONST('VIEW   ')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *---------------------------------------------------------------
      *  LDA - HOG GROUP REVIEW LISTING OPTIONS
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDFSBO                 1      5
     D  LDHGSN                 6     12  0
     D  LDBODS                21     50
      *
     D  ldemail              100    149
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  FILL THE SUBFILE
      *
     C     TERMFL        IFEQ      NO
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
     C                   ENDIF
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * Set indicators to control screen options
      *
     C                   select
     C                   when      version = 'V'
     C                   when      version = 'M'
     C                   seton                                        88
     C                   endsl
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP441K1
     C                   WRITE     HP441EC
     C                   EXFMT     HP441C1
      *
      * SAVE THE VALUE OF THE LOWEST SUBFILE RRN ON THE SCREEN FOR
      * LATER REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
      *
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN04         WHENEQ    *ON                                          F4-PROMPT
     C                   EXSR      $F4S1
      *
     C     FLD           IFEQ      'C1FSBO'
     C     C1FSBO        ANDNE     SVFSBO
     C                   MOVEL(P)  'HP441'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $CHKSV
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C     *IN05         WHENEQ    *ON                                          F5-REFRESH
     C                   MOVEL     YES           RESET
     C                   MOVEL     SVFSBO        C1FSBO
     C                   MOVEL     SVBODS        C1BODS
     C                   MOVEL     SET1          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
     C                   out       lda
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'                                      API
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR SELECTORS IN THE CONTROL RECORD.
      *
     C     SVFSBO        WHENNE    C1FSBO                                       IF RESTRICT
     C     SVHGCD        ORNE      C1HGCD
     C     SVFSCD        ORNE      C1FSCD
     C     SVBLCD        ORNE      C1BLCD
     C     SVRMCD        ORNE      C1RMCD
     C     SVPTCD        ORNE      C1PTCD
     C     SVPPCD        ORNE      C1PPCD
     C     SVGSCD        ORNE      C1GSCD
     C     SVGTCD        ORNE      C1GTCD
     C     SVSDCD        ORNE      C1SDCD
     C     SVSMCD        ORNE      C1SMCD
     C     SVCFFL        ORNE      C1CFFL
      *
     C     SVFSBO        IFNE      C1FSBO
     C                   MOVE      *BLANK        C1BODS
     C                   MOVEL(P)  'HP441'       WKFNCD
     C                   EXSR      $CHKBO
     C                   ENDIF
      *
     C     ERROR         IFEQ      0
     C                   EXSR      $CHKSV
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * SAVE THE CONTROL RECORD POSITIONERS/SELECTORS
      *----------------------------------------------------------------
      *
     C     $CHKSV        BEGSR
      *
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
      *
     C                   MOVEL     C1FSBO        SVFSBO
     C                   MOVEL     C1BODS        SVBODS
      *
     C                   MOVEL     C1HGCD        SVHGCD
     C                   MOVEL     C1FSCD        SVFSCD
     C                   MOVEL     C1BLCD        SVBLCD
     C                   MOVEL     C1RMCD        SVRMCD
     C                   MOVEL     C1PTCD        SVPTCD
     C                   MOVEL     C1PPCD        SVPPCD
     C                   MOVEL     C1GSCD        SVGSCD
     C                   MOVEL     C1GTCD        SVGTCD
     C                   MOVEL     C1SDCD        SVSDCD
     C                   MOVEL     C1SMCD        SVSMCD
     C                   MOVEL     C1CFFL        SVCFFL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * FIRST, EDIT ALL THE SELECTIONS ENTERED BY THE USER IN THE
      * SUBFILE OPTION FIELD TO SEE THAT VALID SELECTIONS WERE INPUT
      *
     C                   EXSR      $EDOP1
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTIONS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE SUBFILE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
     C     RTNCD         IFEQ      '00'
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   Z-ADD     WKFLOW        HDPAG1
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF
     C                   ELSE
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN WITH ERRORS TO USER
      *
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CLEAR THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   Z-ADD     0             SVRRN1
      *
     C                   CLEAR                   HP441S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP441C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
      *                                                    82=SFLEND
      *                                                    83=SFLCLR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * REFRESH/FILL THE SUBFILE ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN HOG GROUP FILE
      *
     C     C1FSBO        SETLL     HSL034J
      *
      * THE FIELD 'RESET' IS A FLAG FIELD TO INDICATE WHETHER YOU ARE
      * ATTEMPTING TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE
      * SUBFILE.
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * IF RESET IS 'NO', JUST START THE SUBFILE OVER
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     SVRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
     C                   Z-ADD     SVRRN1        HDRRN1
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT             2 0
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * READ HOG GROUP MASTER FILE
      *
     C     C1FSBO        READE     HSL034J                                82
      *
     C     *IN82         IFEQ      *OFF                                          IF READ
      *
      *   ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1HGCD        IFNE      *BLANK                                        IF GROUP
     C     C1HGCD        ANDNE     HGHGCD
     C                   ELSE
      *
     C     C1PPCD        IFNE      *BLANK                                        IF PHASE
     C     C1PPCD        ANDNE     HGPPCD
     C                   ELSE
      *
     C     C1PTCD        IFNE      *BLANK                                        IF TYPE
     C     C1PTCD        ANDNE     HGPTCD
     C                   ELSE
      *
     C     C1FSCD        IFNE      0                                             IF FARM
     C     C1FSCD        ANDNE     HGFSCD
     C                   ELSE
      *
     C     C1GSCD        IFNE      *BLANK                                        IF STATUS
     C     C1GSCD        ANDNE     HGGSCD
     C                   ELSE
      *
     C     C1BLCD        IFNE      *BLANK                                        IF BLDG
     C     C1BLCD        ANDNE     HGBLCD
     C                   ELSE
      *
     C     C1RMCD        IFNE      *BLANK                                        IF ROOM
     C     C1RMCD        ANDNE     HGRMCD
     C                   ELSE
      *
     C     C1GTCD        IFNE      *BLANK                                        IF GRP TYPE
     C     C1GTCD        ANDNE     HGGTCD
     C                   ELSE
      *
     C     C1SDCD        IFNE      *BLANK                                        IF STOCKING
     C     C1SDCD        ANDNE     HGSDCD
     C                   ELSE
      *
     C     C1SMCD        IFNE      *BLANK                                        IF STAYED
     C     C1SMCD        ANDNE     HGSMCD
     C                   ELSE
      *
     C     C1CFFL        IFNE      *BLANK                                        IF CONTINUOUS FLAG
     C     C1CFFL        ANDNE     HGCFFL
     C                   ELSE
      *
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   MOVE      *BLANK        DFOPT
     C                   MOVEL     HGHGCD        DFHGCD
     C                   Z-ADD     HGHGSN        HDHGSN
     C                   Z-ADD     HGFSCD        DFFSCD
     C                   MOVEL     HGPTCD        DFPTCD
     C                   MOVEL     HGPPCD        DFPPCD
     C                   MOVEL     HGGSCD        DFGSCD
     C                   MOVEL     HGBLCD        DFBLCD
     C                   MOVEL     HGRMCD        DFRMCD
     C                   MOVEL     HGGTCD        DFGTCD
     C                   MOVEL     HGSDCD        DFSDCD
     C                   MOVEL     HGSMCD        DFSMCD
     C                   MOVEL     HGCFFL        DFCFFL
      *
     C                   IF        HGDSDT = 0
     C                   Z-ADD     0             DFDSDT
     C                   ELSE
     C                   Z-ADD     HGDSDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFDSDT
     C                   ENDIF
      *
     C                   WRITE     HP441S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF CONTINUOUS FLAG
     C                   ENDIF                                                  IF STAYED
     C                   ENDIF                                                  IF STOCKING
     C                   ENDIF                                                  IF GRP TYPE
     C                   ENDIF                                                  IF ROOM
     C                   ENDIF                                                  IF BLDG
     C                   ENDIF                                                  IF STATUS
     C                   ENDIF                                                  IF FARM
     C                   ENDIF                                                  IF TYPE
     C                   ENDIF                                                  IF PHASE
     C                   ENDIF                                                  IF GROUP
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   MOVEL     YES           NORECS
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09002'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   Z-ADD     HDRRN1        SVRRN1
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    BE A 'LIVE PRODUCTION' DIVISION OFFICE
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CLEAR SUBFILE
      *
     C                   EXSR      $CLR1
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
     C                   MOVEL     NO            INDVFL                          RESET FL
      *
     C                   MOVEL     OUBODS        C1BODS
      *
     C                   ENDSR
      /EJECT
      *------------------------------------------------------------------------
      * READ CHANGED RECORDS IN SUBFILE AND EDIT FOR VALID OPTIONS FOR SCREEN 1
      *------------------------------------------------------------------------
      *
     C     $EDOP1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * READ ALL THE CHANGED SUBFILE RECORDS EDITING FOR VALID SUBFILE
      * OPTIONS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO READC
     C                   READC     HP441S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
      * SET OFF ERROR INDICATOR FOR SUBFILE SELECTOR
      *
     C                   SETOFF                                       30
      *
      * CONVERT OPTION USER ENTERED TO STANDARD FORMAT. FOR EXAMPLE,
      * A ' 1', '01', AND '1 ' MUST BE STANDARDIZED TO ' 1'.
      *
     C     WKOPT2        IFEQ      *BLANK                                       IF 2 = BLANK
     C                   MOVE      WKOPT1        WKOPT2
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 2 = BLANK
      *
     C     WKOPT1        IFEQ      *ZEROS                                       IF 1 IS ZERO
     C                   MOVE      *BLANK        WKOPT1
     C                   ENDIF                                                  IF 1 IS ZERO
      *
      * TEST FOR VALID SUBFILE OPTION ENTRY ON ALL CHANGED RECORDS
      *
     C     DFOPT         IFNE      ' 2'                                         IF BAD OPT
     C     DFOPT         ANDNE     ' 3'
     C     DFOPT         ANDNE     ' 5'
     C     DFOPT         ANDNE     ' 6'
     C     DFOPT         ANDNE     ' 7'
     C     DFOPT         ANDNE     '12'
     C     DFOPT         ANDNE     '  '
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ELSE
      *
      * CHECK THE USER'S AUTHORITY TO THE FUNCTION
      *
     C     DFOPT         IFEQ      ' 2'                                         IF GOOD OPT
     C     DFOPT         OREQ      ' 3'
     C     DFOPT         OREQ      ' 5'
     C     DFOPT         OREQ      ' 6'
     C     DFOPT         OREQ      ' 7'
     C     DFOPT         OREQ      '12'
      *
     C                   SELECT
     C     DFOPT         WHENEQ    ' 2'
     C                   MOVEL(P)  'HP141'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 3'
     C                   MOVEL(P)  'HP143'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 5'
     C                   MOVEL(P)  'HP740'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 6'
     C                   MOVEL(P)  'HP686'       WKFNCD
      *
     C     DFOPT         WHENEQ    ' 7'
     C                   MOVEL(P)  'HP701'       WKFNCD
      *
     C     DFOPT         WHENEQ    '12'
     C                   MOVEL(P)  'HP758'       WKFNCD
     C                   ENDSL
      *
     C                   EXSR      $SEC
      *
     C     SECFL         IFEQ      YES                                          IF PROBLEM
     C                   SETON                                        30
     C                   EXSR      $ERR1
     C                   ENDIF                                                  IF PROBLEM
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 2=REVISE CLOSED GROUP
      *
     C     DFOPT         IFEQ      ' 2'                                         If revise
      *
     C                   IF        VERSION = 'V'                                If view only
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  If view only
      *
     C     DFGSCD        IFEQ      'VD'                                         If voided group
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00496'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  If voided group
      *
     C                   ENDIF                                                  If revise
      *
      *
      * PERFORM ADDITIONAL VALIDATIONS FOR OPTION 3=REOPEN
      *
     C     DFOPT         IFEQ      ' 3'                                         If reopen
      *
     C                   IF        VERSION = 'V'                                If view version
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09006'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  If view versionrsion
      *
      *
     C     DFGSCD        IFEQ      'CL'                                         If closed
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00492'     MGID(E)
     C                   EXSR      $ERR1
     C                   ENDIF
     C                   ENDIF                                                  If closed
     C                   ENDIF                                                  If reopen
      *
     C                   ENDIF                                                  IF GOOD OPT
     C                   ENDIF                                                  IF BAD OPT
      *
      * REWRITE THE SUBFILE RECORD WITH THE MODIFIED DATA TAG ON SO
      * IT WILL BE REREAD AND PROCESSED IN THE SUBROUTINE $PROC1.
      *
     C     ERROR         IFEQ      0
     C     DFOPT         ANDEQ     *BLANK
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF
      *
     C                   UPDATE    HP441S1
     C                   SETOFF                                       8530
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO READC
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * READ SUBFILE RECORDS AND PROCESS USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
     C                   MOVEL     '00'          RTNCD
      *
      * READ ALL THE CHANGED SUBFILE RECORDS AND PROCESS
      *
     C                   SETOFF                                       80
     C     *IN80         DOUEQ     *ON                                          DO PROCESS
     C                   READC     HP441S1                                80
     C     *IN80         IFEQ      *OFF                                         IF REC READ
      *
     C     RTNCD         IFEQ      '00'                                         IF ENTER
      *
      *
      * IF USER SELECTED OPTION 2=REVISE A CLOSED GROUP,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 2'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP141'
     C                   PARM                    DFHGCD
     C                   PARM                    HDHGSN
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 3=REOPEN A VOIDED GROUP
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 3'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP143'
     C                   PARM                    C1FSBO
     C                   PARM                    C1BODS
     C                   PARM                    DFHGCD
     C                   PARM                    HDHGSN
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 5=VIEW GROUP,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 5'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP740'
     C                   PARM                    C1FSBO
     C                   PARM                    C1BODS
     C                   PARM                    DFHGCD
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 6=PRINT,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 6'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP4440'
     C                   PARM                    DFHGCD
     C                   PARM                    HDHGSN
     C                   PARM                    C1FSBO
     C                   PARM                    C1BODS
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 7=WORK WITH MOVEMENTS
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      ' 7'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP701'
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFHGCD
     C                   PARM                    HDHGSN
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * IF USER SELECTED OPTION 12=VIEW ADJUSTMENTS,
      * SET THE FLAG 'RESET' TO YES SO THAT WHEN YOU RETURN TO THIS
      * WORK WITH YOU WILL REPOSITION TO THE SAME PLACE IN THE SUBFILE.
      *
     C     DFOPT         IFEQ      '12'
     C                   MOVEL     YES           RESET
     C                   CALL      'HP758'
     C                   PARM                    C1FSBO
     C                   PARM                    DFFSCD
     C                   PARM                    DFHGCD
     C                   PARM                    HDHGSN
     C                   PARM                    DFPTCD
     C                   PARM                    DFPPCD
     C                   PARM                    RTNCD
     C                   ENDIF
      *
      * UPON RETURNING FROM THE CALLED PROGRAM,
      * CLEAR THE SUBFILE OPTION SELECTOR ENTERED BY THE USER AND
      * REWRITE THE SUBFILE RECORD
      *
     C                   MOVE      *BLANK        DFOPT
     C                   SETOFF                                       85
     C                   ELSE
     C                   SETON                                        85
     C                   ENDIF                                                  IF ENTER
      *
     C                   UPDATE    HP441S1
      *
     C                   ENDIF                                                  IF REC READ
     C                   ENDDO                                                  DO PROCESS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF BUSINESS OFFICE CODE
      *
     C     FLD           WHENEQ    'C1FSBO'
     C                   MOVE      *BLANK        XXFSBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFSBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        C1FSBO
     C                   MOVEL     XXBODS        C1BODS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF FARM SITE
      *
     C     FLD           WHENEQ    'C1FSCD'
     C                   MOVEL     C1FSBO        XXFSBO
     C                   Z-ADD     0             XXFSCD
     C                   MOVE      *BLANK        XXFSNM
     C                   MOVEL     C1PPCD        XXPPCD
     C                   MOVEL     C1PTCD        XXPTCD
     C                   CALL      'HP505'
     C                   PARM                    XXFSBO
     C                   PARM                    XXFSCD
     C                   PARM                    XXFSNM
     C                   PARM                    XXPPCD
     C                   PARM                    XXPTCD
     C                   SETON                                        52
     C     XXFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     XXFSCD        C1FSCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'C1PTCD'
     C                   MOVE      *BLANK        XXPTCD
     C                   MOVE      *BLANK        XXPTDS
     C                   CALL      'HP504'
     C                   PARM                    XXPTCD
     C                   PARM                    XXPTDS
     C                   SETON                                        53
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        C1PTCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'C1PPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP507'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        54
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        C1PPCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF GROUP TYPE
      *
     C     FLD           WHENEQ    'C1GTCD'
     C                   MOVE      *BLANK        XXGTCD
     C                   MOVE      *BLANK        XXGTDS
     C                   CALL      'HP531'
     C                   PARM                    XXGTCD
     C                   PARM                    XXGTDS
     C                   SETON                                        58
     C     XXGTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXGTCD        C1GTCD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * IF STOCKING DENSITY
      *
     C     FLD           WHENEQ    'C1SDCD'
     C                   MOVE      *BLANK        XXSDCD
     C                   MOVE      *BLANK        XXSDDS
     C                   CALL      'HP5024'
     C                   PARM                    XXSDCD
     C                   PARM                    XXSDDS
     C                   SETON                                        59
     C     XXSDCD        IFNE      *BLANK
     C                   MOVEL     XXSDCD        C1SDCD
     C                   ENDIF
      *
      * IF STAYED/MOVED CODE
      *
     C     FLD           WHENEQ    'C1SMCD'
     C                   MOVE      *BLANK        XXSMCD
     C                   MOVE      *BLANK        XXSMDS
     C                   CALL      'HP5025'
     C                   PARM                    XXSMCD
     C                   PARM                    XXSMDS
     C                   SETON                                        57
     C     XXSMCD        IFNE      *BLANK
     C                   MOVEL     XXSMCD        C1SMCD
     C                   ENDIF
      *
      * IF HOG GROUP STATUS
      *
     C     FLD           WHENEQ    'C1GSCD'
     C                   MOVE      *BLANK        XXGSCD
     C                   MOVE      *BLANK        XXGSDS
     C                   CALL      'HP569'
     C                   PARM                    XXGSCD
     C                   PARM                    XXGSDS
     C                   SETON                                        55
     C     XXGSCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXGSCD        C1GSCD
     C                   ENDIF                                                  IF SELECTED
      *
      * Continuous Flow
     C                   when      FLD = 'C1CFFL'
     C                   call      'HP522'
     C                   parm      *blank        xxcffl
     C                   seton                                        56
     C                   if        xxcffl <> *blank                             IF SELECTED
     C                   move      xxcffl        c1cffl
     C                   endif                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR                                        013
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------------------
      * SET THE SUBFILE TO REDISPLAY AT THE FIRST PAGE THAT HAS ERRORS ON SCREEN 1
      *---------------------------------------------------------------------------
      *
     C     $ERR1         BEGSR
      *
     C     ERROR         IFEQ      1
     C                   Z-ADD     HDRRN1        HDPAG1
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      *---------------------------------------------------------------
      * FLIP DATE FROM YYMMDD TO MMDDYY
      *---------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     C1FSBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            B.O. ERR FLG
     C                   PARM                    OURMFL            1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
     C     *entry        plist
     C                   parm                    version           4
      *
     C                   select
     C                   when      version = 'V'
     C                   eval      c1version = 'View Only Version'
      *
     C                   when      version = 'M'
     C                   eval      c1version = 'Maintenance Version'
     C                   endsl
      *
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        MODE              7            PARM
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
     C     *LIKE         DEFINE    HDRRN1        SVRRN1
      *
      * DEFINE SAVE FIELDS
      *
     C     *LIKE         DEFINE    C1FSBO        SVFSBO
     C     *LIKE         DEFINE    C1BODS        SVBODS
     C     *LIKE         DEFINE    C1HGCD        SVHGCD
     C     *LIKE         DEFINE    C1FSCD        SVFSCD
     C     *LIKE         DEFINE    C1BLCD        SVBLCD
     C     *LIKE         DEFINE    C1RMCD        SVRMCD
     C     *LIKE         DEFINE    C1PTCD        SVPTCD
     C     *LIKE         DEFINE    C1PPCD        SVPPCD
     C     *LIKE         DEFINE    C1GSCD        SVGSCD
     C     *LIKE         DEFINE    C1GTCD        SVGTCD
     C     *LIKE         DEFINE    C1SDCD        SVSDCD
     C     *LIKE         DEFINE    C1SMCD        SVSMCD
     C     *LIKE         DEFINE    C1CFFL        SVCFFL
      *
      * DEFINE FIELDS FOR USE AS PARMS WHEN CALLING PROMPT PROGRAMS
      *
     C     *LIKE         DEFINE    C1FSBO        XXFSBO
     C     *LIKE         DEFINE    C1BODS        XXBODS
     C     *LIKE         DEFINE    C1FSCD        XXFSCD
     C                   MOVE      *BLANK        XXFSNM           25
     C     *LIKE         DEFINE    C1PPCD        XXPPCD
     C                   MOVE      *BLANK        XXPPDS           30
     C     *LIKE         DEFINE    C1PTCD        XXPTCD
     C                   MOVE      *BLANK        XXPTDS           10
     C     *LIKE         DEFINE    C1GSCD        XXGSCD
     C                   MOVE      *BLANK        XXGSDS           20
     C     *LIKE         DEFINE    C1GTCD        XXGTCD
     C                   MOVE      *BLANK        XXGTDS           15
     C     *LIKE         DEFINE    C1SDCD        XXSDCD
     C                   MOVE      *BLANK        XXSDDS           15
     C     *LIKE         DEFINE    C1SMCD        XXSMCD
     C                   MOVE      *BLANK        XXSMDS           15
     C     *LIKE         DEFINE    C1CFFL        XXCFFL
      *
      *
      * DEFINE LDA
      *
     C     *DTAARA       DEFINE    *LDA          LDA
      *
      * INITIALIZE LDA FIELDS
      *
     C                   MOVE      *BLANK        LDFSBO
     C                   MOVE      *BLANK        LDBODS
     C                   MOVE      *BLANK        LDEMAIL
     C                   Z-ADD     0             LDHGSN
      *
     C                   MOVE      NO            LDHOLD
     C                   Z-ADD     1             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     1             XXCOPY            1 0
      *
     C                   out       lda
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     9             WKPLIN            2 0          SFLPAG(0009)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM
     C                   EXSR      $CLMSG
      *
      * SET UP WORK FIELDS FOR STANDARD SECURITY CHECKS THAT INVOLVE
      * A BUSINESS OFFICE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
      *
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL            1
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * MOVE RETURNED FIELDS TO CONTROL RCD FMT FIELDS
      *
     C                   MOVEL     OUBOBO        C1FSBO
     C                   MOVEL     OUBOBO        SVFSBO
     C                   MOVEL     OUBODS        C1BODS
     C                   MOVEL     OUBODS        SVBODS
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C                   MOVEL     OUDVCD        SVDVCD
      *
     C                   ENDSR
      /EJECT
