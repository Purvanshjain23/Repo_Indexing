/*                                                                 */
/* STEP 1:  CREATE A DUPLICATE OBJECT OF THE FILE BEING PURGED IN  */
/*          THE SAME ENVIRONMENT.  (EG. PKB1CPPPRG= &FILE || PRG)  */
/*          THIS FILE WILL BE SAVED TO TAPE.                       */
/*                                                                 */
/*          CHANGE (&FILE || PRG) TO ALLOW MULTIPLE MEMBERS        */
/*                                                                 */
/* STEP 2:  CREATE A PROGRAM THAT WILL READ THE PURGE FILE AND     */
/*          CREATE A RECORD IN QTEMP THEN DELETE THE RECORD FROM   */
/*          THE PURGE FILE.                                        */
/*                                                                 */
/* STEP 3:  CREATE A CL PROGRAM                                    */
/*      -   CREATE MEMBER IN (&FILE || PRG) (ZYYMMDD)              */
/*      -   BACKUP FILE BEING PURGED                               */
/*      -   CREATE QTEMP ENVIRONMENT                               */
/*      -   CALL PURGE PROGRAM                                     */
/*      -   COPY THE RECORDS CREATED IN QTEMP TO THE FILE BEING    */
/*          SAVED TO TAPE.                                         */
/*      -   CHANGE THE MEMBER DESCRIPTION WITH THE FROM AND TO     */
/*          DATE FROM THE PURGE PROGRAM.                           */
/*      -   REORGANIZE THE FILE THAT IS BEING PURGED               */
/*                                                                 */
/*******************************************************************/
/*    &LIB =  LIBRARY OF PURGED &FILE                              */
/*    &FILE = FILE NAME TO BE PURGED                               */
/*    &FILEUPD = THE "UPDATE INDEX PURGE" ACCESS PATH OF &FILE     */
/*    &PRGFILE = &FILE || 'PRG'  =FILE BEING SAVED TO TAPE         */
/*    &PRGPGM = THE PURGE PROGRAM FOR THE &FILE - AN EXCEXTFUN     */
/*******************************************************************/
/* RMC 8/15/02 USE SNDPGRMSG A LIEU SNDDST                         */
/*******************************************************************/
             PGM        PARM(&LIB)

/* LIBRARY FOR PURGE FILE  */
             DCL        VAR(&LIB) TYPE(*CHAR) LEN(10)
/* FILE BEING PURGED */
             DCL        VAR(&FILE) TYPE(*CHAR) LEN(10)
/* FILE BEING SAVED TO TAPE           */
             DCL        VAR(&PRGFILE) TYPE(*CHAR) LEN(10)
/* FILE BEING PURGED -- 'UPDATE INDEX PURGE' ACCESS PATH          */
             DCL        VAR(&FILEUPD) TYPE(*CHAR) LEN(10)
/* PURGE PROGRAM         */
             DCL        VAR(&PRGPGM) TYPE(*CHAR) LEN(10)

/*-----------------------------------------------------------------*/
/*                    PROGRAM VARIABLES                            */
/*-----------------------------------------------------------------*/

/* MEMBER BEING SAVED TO TAPE */
             DCL        VAR(&PRGMBR) TYPE(*CHAR) LEN(10)

/* MEMBER NAMING VARIABLES    */
             DCL        VAR(&JDATE) TYPE(*CHAR) LEN(6)
             DCL        VAR(&JYEAR) TYPE(*CHAR) LEN(2)
             DCL        VAR(&JMONTH) TYPE(*CHAR) LEN(2)
             DCL        VAR(&JDAY) TYPE(*CHAR) LEN(2)

/* MEMBER TEXT  VARIABLES    */
             DCL        VAR(&MDSC) TYPE(*CHAR) LEN(25)
             DCL        VAR(&FDTE) TYPE(*DEC) LEN(7)
             DCL        VAR(&TDTE) TYPE(*DEC) LEN(7)

/* FILE'S OBJECT DESC FOR ERROR MSGES   */
             DCL        VAR(&FDSC) TYPE(*CHAR) LEN(50)

/*-----------------------------------------------------------------*/
/*                     INITIALIZATION                              */
/*-----------------------------------------------------------------*/

/* CREATE NEW MEMBER IN THE FILE FOR SAVING TO TAPE */
             RTVJOBA    DATE(&JDATE)
             CHGVAR     VAR(&JYEAR) VALUE(%SST(&JDATE 5 2))
             CHGVAR     VAR(&JMONTH) VALUE(%SST(&JDATE 1 2))
             CHGVAR     VAR(&JDAY) VALUE(%SST(&JDATE 3 2))

             CHGVAR     VAR(&PRGMBR) VALUE('Z')
             CHGVAR     VAR(%SST(&PRGMBR 2 2)) VALUE(&JYEAR)
             CHGVAR     VAR(%SST(&PRGMBR 4 2)) VALUE(&JMONTH)
             CHGVAR     VAR(%SST(&PRGMBR 6 2)) VALUE(&JDAY)

             RTVOBJD    OBJ(&FILE) OBJTYPE(*FILE) TEXT(&FDSC)

 /*   */

             ADDPFM     FILE(&PRGFILE) MBR(&PRGMBR)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(ADDPFM))

/* BACKUP FILE BEING PURGED */
             CPYF       FROMFILE(&FILE) TOFILE(&PRGFILE) +
                          MBROPT(*REPLACE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

/* CREATE QTEMP ENVIRONMENT */
             CRTDUPOBJ  OBJ(&FILE) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))
             CRTDUPOBJ  OBJ(&FILEUPD) FROMLIB(&LIB) OBJTYPE(*FILE) +
                          TOLIB(QTEMP)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CRTDUP))

/*-----------------------------------------------------------------*/
/*                           MAIN                                  */
/*-----------------------------------------------------------------*/
/*  CALL PURGE PROGRAM */
             CALL       PGM(&PRGPGM) PARM('' &FDTE &TDTE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CALL))

/*  COPY QTEMP TO THE NEW MEMBER CREATED FOR SAVING TO TAPE       */
             CPYF       FROMFILE(QTEMP/&FILE) TOFILE(&PRGFILE) +
                          FROMMBR(*FIRST) TOMBR(&PRGMBR) MBROPT(*ADD)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CPYF))

/*  CHANGE MEMBER DESCRIPTION                                     */
             CHGVAR     VAR(%SST(&MDSC 1 7)) VALUE(&TDTE)
             CHGVAR     VAR(%SST(&MDSC 9 7)) VALUE(&FDTE)
             CHGPFM     FILE(&PRGFILE) MBR(&PRGMBR) TEXT(&MDSC)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(CHGPFM))

/*  REORGANIZE PURGE FILE                                         */
             RGZPFM     FILE(&LIB/&FILE)
             MONMSG     MSGID(CPF0000) EXEC(GOTO CMDLBL(RGZPFM))

             GOTO       CMDLBL(PGMMSG)

/*-----------------------------------------------------------------*/
/*                     ERROR MESSAGES                              */
/*-----------------------------------------------------------------*/
 ADDPFM:
 /*          SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Add Physical File Member +
                          Error')                                  */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Add Physical File +
                          Member Error') CONFMSG(*NO)
             GOTO       CMDLBL(ERROR)

 CPYF:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Copy File +
                          Error')                              */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Copy File Error') +
                          CONFMSG(*NO)
             GOTO       CMDLBL(ERROR)

 CRTDUP:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Create +
                          Duplicate Object Error')            */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Create Duplicate Object +
                          Error') CONFMSG(*NO)
             GOTO       CMDLBL(ERROR)

 CALL:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Call to purge program +
                          ended in error.')                      */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Call to purge program +
                          ended in error.') CONFMSG(*NO)
             GOTO       CMDLBL(ERROR)

 CHGPFM:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Change +
                          Member Text Error')                    */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Change member text +
                          error.') CONFMSG(*NO)
             GOTO       CMDLBL(ERROR)

 RGZPFM:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) +
                          MSG('Reorganize Physical File Error')    */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Reorganize Physical +
                          File Error.') CONFMSG(*NO)
             GOTO       CMDLBL(ERROR)

 ERROR:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Data Purge Ended +
                          Abnormally')                      */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Data Purge Ended +
                          Abnormally.') CONFMSG(*NO)

             CHGJOB     LOG(4 00 *SECLVL)

             GOTO       CMDLBL(ENDPGM)
/*-----------------------------------------------------------------*/
/*                      PROGRAM END                                */
/*-----------------------------------------------------------------*/
 PGMMSG:
/*           SNDDST     TYPE(*MSG) TOUSRID((PRKPURGE BIGBYTE)) +
                          DSTD(&FDSC) MSG('Data Purge Ended +
                          Normally.  Ready to save to tape.')  */
             SNDPGRMSG  TOPGR(PRKPURGE) MSG('Data Purge Ended +
                          Normally. Ready to save to tape.') +
                          CONFMSG(*NO)

/*-----------------------------------------------------------------*/
/*                      PROGRAM END                                */
/*-----------------------------------------------------------------*/
 ENDPGM:
             ENDPGM
