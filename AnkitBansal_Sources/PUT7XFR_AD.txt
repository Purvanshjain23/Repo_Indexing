// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUT7XFR
// ?Date: 14.08.2025 Time: 03:51:23
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?Create manifest details from pfs file that didnt get created whn shipped
EXECUTE FUNCTION(PFS Manifest Missing RT) TYPE(RTVOBJ) FILE(PPBGCPP)            AC2199540;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(RTV for Existence 3   RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC2199541;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Order_Number);
 PARAMETER(DB1.PFS_Item_Code);
 PARAMETER(DB1.PFS_Pallet_Number);
 PARAMETER(DB1.PFS_Serial_Number);
 {
  //?USER: Processing if Data record not found

  // PGM.*Return code = CND.*Record does not exist
  PGM.*Return_code = 'Y2U0005';

 }

 CASE;

 // IF PGM.*Return code is *Record does not exist
 IF PGM.*Return_code = 'Y2U0005';

 //?Calc/Update Net Weight in Kg (Kilograms).
 // LCL.Manifest Net Weight - Kg = CON.*ZERO
 LCL.Manifest_Net_Weight_Kg = *ZERO;

 EXECUTE FUNCTION(Clc Weight to Kilogram IF) TYPE(EXCINTFUN)                     AC2145548;
 PARAMETER(DB1.PFS_Transaction_Wgt_Net);
 PARAMETER(LCL.Manifest_Net_Weight_Kg);
 {
  //?Execute internal function

  //?Round Case Weight to 1 Decimal Place.
  //?RMC 10/14/19 increase precision - DO NOT DO THIS  10/16/19 PER AARON C
  // LCL.Net Weight Kg USR 11.4 = PAR.Case Weight * CON..45359 *
  LCL.Net_Weight_Kg_USR_11_4 = PAR.Case_Weight * .45359;

  // LCL.Net Weight Kilograms = LCL.Net Weight Kg USR 11.4 * CON.1 *Rounded
  LCL.Net_Weight_Kilograms = LCL.Net_Weight_Kg_USR_11_4 * 1 'H';

  // PAR.Manifest Net Weight - Kg = LCL.Net Weight Kilograms
  PAR.Manifest_Net_Weight_Kg = LCL.Net_Weight_Kilograms;

 }

 EXECUTE FUNCTION(Rtv Next Case Seq#    RT) TYPE(RTVOBJ) FILE(OMFNCPP)           AC1513160;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Order_Number);
 PARAMETER(DB1.PFS_Order_Line_Item_Nbr);
 PARAMETER(1);
 PARAMETER(LCL.Case_Sequence_Number);
 {
  //?USER: Processing if Data record not found

  // PAR.Case Sequence Number = CON.1
  PAR.Case_Sequence_Number = 1;

  //?USER: Process Data record

  // PAR.Case Sequence Number = DB1.Case Sequence Number + CON.1
  PAR.Case_Sequence_Number = DB1.Case_Sequence_Number + 1;

  QUIT;

 }

 EXECUTE FUNCTION(ADD Manifest Detl Rec  CR) TYPE(CRTOBJ) FILE(OMFNCPP)          AC1402362;
 PARAMETER(DB1.PFS_Company_Number);
 PARAMETER(DB1.PFS_Order_Number);
 PARAMETER(DB1.PFS_Order_Line_Item_Nbr);
 PARAMETER(1);
 PARAMETER(LCL.Case_Sequence_Number);
 PARAMETER(DB1.PFS_Transaction_Quantity);
 PARAMETER(DB1.PFS_Transaction_Wgt_Net);
 PARAMETER(*BLANK);
 PARAMETER(DB1.PFS_Label_Date);
 PARAMETER(DB1.PFS_Serial_Number);
 PARAMETER(DB1.PFS_Item_Code);
 PARAMETER(DB1.PFS_From_Warehouse_Code);
 PARAMETER(DB1.PFS_Production_Date);
 PARAMETER(DB1.PFS_Transaction_Wgt_Gross);
 PARAMETER(*BLANK);
 PARAMETER(DB1.PFS_Total_Tare);
 PARAMETER(*ZERO);
 PARAMETER(DB1.PFS_Pallet_Number);
 PARAMETER(1);
 PARAMETER(*ZERO);
 PARAMETER(LCL.Manifest_Net_Weight_Kg);
 PARAMETER(LCL.Manifest_Unused_Status_1A);
 PARAMETER(LCL.Manifest_Unused_Status_2A);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(LCL.EDI_Status_1);
 PARAMETER(LCL.EDI_Status_2);
 PARAMETER(LCL.EDI_Status_3);
 PARAMETER('A');
 PARAMETER(*MISSING);
 PARAMETER(LCL.USR_Update_Flag);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
  {
   //?Execute internal function

   // PAR.Job Time = JOB.*Job time
   PAR.Job_Time = JOB.*Job_time;

   // PAR.User Id = JOB.*USER
   PAR.User_Id = JOB.*USER;

   // PAR.Job Name = JOB.*JOB
   PAR.Job_Name = JOB.*JOB;

   // PAR.Job Date = JOB.*Job date
   PAR.Job_Date = JOB.*Job_date;

  }

  //?USER: Processing after Data update

  // PAR.USR Update Flag = CND.Yes
  PAR.USR_Update_Flag = 'Y';

 }

 ENDIF;

}


