      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF309
      * TITLE:       Revenue: Workfiles: Revenue Report by GL Sub
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     02/09/06
      *
      *  FUNCTION:   This program always builds 3 workfiles (which are used in the GL Sub Report):
      *                1) a product detail file
      *                2) a product summary file
      *                3) a GL Sub summary file
      *
      *              When a single week is selected, this program builds:
      *                4) a Journal Entries file (used by TFJDE270 to post to JDE)
      *                   The JDE post program only runs on a FINAL Weekly Revenue Close.
      *                   But, for our testing and potential future on-demand requests, we will
      *                   go ahead and build the workfile whether this is a Final Close, a
      *                   Preliminary Close, or On-Demand.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 03/13/06  LeAnne Fedor
      *           Recompile only. "Floor" produced pounds and amount were added
      *           to file TFP010.
      *
      * 02/14/07  LeAnne Ramsey
      *           Recompile only. New field "STD Other Cost/LB" was added to
      *           Weekly Product Revenue Detail file.
      *
      * 04/16/07  LeAnne Ramsey
      *           Recompile only. Fields were added/changed in the Weekly
      *           Product Revenue file.
      *           Added:   Byproduct Mix Flag
      *                    Meat Cost Group Code
      *           Changed: Exclude from Mix Flag     to  Mix Flag
      *                    Exclude from Volume Flag  to  Volume Flag
      *                    Capability Flag           to  Inventory Flag
      *
      * 05/18/07  LeAnne Ramsey
      *           Recompile only. Fields were added to the Weekly Product Revenue
      *           Detail file:
      *              TF Percent Owned
      *              Co-owned Flag
      *              Producing Company
      *
      * 05/29/07  LeAnne Ramsey
      *           Added logic for Co-owned Products.
      *
      * 07/03/07  LeAnne Ramsey
      *           Removed 10 fields from the workfiles that had been added
      *           for the co-owned logic.
      *
      * 08/13/07  LeAnne Ramsey
      *           Prior to this change, we excluded a TFP010 record from processing
      *           if there was not a "category=4" record for its GL Sub Code in the
      *           Item Category file.
      *           We will now process TFP010 records even if there is no Category 4
      *           record for the TFP010 Item in the Item Category file.
      *
      * 02/08/08  LeAnne Ramsey
      *           The logic that read/summed up the Detail Workfile records
      *           broke/summed on Product. With the addition of CoOwned logic last
      *           summer, a Product could be CoOwned part of the year and Not
      *           CoOwned part of the year. So, I changed the break logic to be
      *           on Product/CoOwned Flag.
      *
      * 09/11/08  LeAnne Ramsey
      *           Recompile only. Export/Domestic Flag was added to TFP010-
      *
      * 05/11/09  LeAnne Ramsey
      *           We needed to swap credit/debit amounts on the TF CoOwned Items.
      *
      * 06/02/09  LeAnne Ramsey
      *           Added 2 fields (Producing Company, TF % Owned) to TFP307.
      *           Added new workfile (TFP310) for use in TFJDE270.
      *
      * 07/20/09  LeAnne Ramsey
      *           Added logic for 'Affiliated Sales'. (NOTE: We do not have 4 different
      *           summary levels for Affiliated Sales. So, we just write to 3 of the
      *           4 workfiles; we do not write to TFP310 for these.)
      *           (Note: These changes were not installed until October.)
      *
      * 11/14/17  Danny Nguyen  (R12011A-Weekly Product Revenue)
      *           Added 25 STF fields to TFP010 file.
      *           Added STF fields in TFP307, TFP308, TFP309 & TFP310 files.
      *           Populate the STF fields for each of the files listed.
      *           There will be no STF Adjustment Amt since STF Net Sales Amt & STF Net
      *           Product Rev Amt will be the same.
      *           STF (Company 440) data will now be populated into it's own STF fields in
      *           TFP010 file in order to create new STF reports like the ones used in Fees
      *           & Payments system.
      *
      * 05/17/22  Danny Nguyen  (DO2484 - WI 479 STF Variance Reporting)
      *           Recompile only. Added 2 STF fields to TFP010 file.
      *           PRXYPC   - STF STD YIELD %
      *           PRXPMPPC - STF PUMP %
      *           RMC - change pdjirep to chain with the format name @JIREFR
      *
      * 10/10/22  R Centonze   W105621 - Increase price fields to handle > 999.99
      *                        CHANGE @@ANPRPR TO SIZE 10.6  --> pranprpr tfp010
      *
      /EJECT
      ****************************************************************
      * File specifications
      ****************************************************************
      *
     Fpdjirel3  if   e           k disk
      *    Item category  format  @JIREFR
      *    (an open query is used to select only Category=4 record)
      *
      *
     Ftfp010    if   e           k disk
      *    Weekly product revenue detail
      *
      *
     Ftfl010e   if   e           k disk    rename(prrec:prrece)
      *    Weekly product revenue detail
      *    (records selected by open query)
      *
      *
     Fpdiccplc  if   e           k disk
      *    History detail accrual
      *    (records selected by open query)
      *
      *
     Ftfp307    uf a e           k disk
      *    Workfile: Revenue Report by GL Sub--Product Detail
      *
      *
     Ftfl307a   if   e           k disk    rename(w1rec:w1reca)
      *    Workfile: Revenue Report by GL Sub--Product Detail
      *
      *
     Ftfp308    uf a e           k disk
      *    Workfile: Revenue Report by GL Sub--Product Summary
      *
      *
     Ftfp309    o    e           k disk
      *    Workfile: Revenue Report by GL Sub--GL Sub Summary
      *
      *
     Ftfp310    o    e           k disk
      *    Workfile: Revenue Report by GL Sub--Journal Entries
      *
      /EJECT
      ****************************************************************
      * Definition specifications
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Named Constants
      *---------------------------------------------------------------
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *---------------------------------------------------------------------
      * Standalone fields
      *---------------------------------------------------------------------
      *
      * Control fields
      *
     d first           s              1    inz('Y')
     d svglsub         s                   like(prglsub)
     d svdesc          s                   like(w2desc)
     d svprcd          s                   like(prprcd)
     d svcoownfl       s                   like(prcoownfl)
     d svprdcmp        s                   like(prprdcmp)
     d svascono        s                   like(w1ascono)
      *
      *
      * Workfields
      *
     D wkrate          s              9  6
     d wklb            s                   like(prasllb)
     d wkascono        s                   like(w1ascono)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               d   datfmt(*iso)
     D wkfsyndt        s              7  0
     D wktsyndt        s              7  0
      *
      ****************************************************************
      * Data structures
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area.
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
      *
      * Do not use the first 38 LDA positions. We have to generate this from the Revenue
      * Close function as well as on-demand from this program. So, the LDAs have to
      * match up (The Revenue Close function is already using the first 38 positions.)
      *
     D  ldpfcd                37     37
      *
     D  ldfmdy                39     44  0
     D  ldtmdy                45     50  0
     D  ldfwedt               52     59  0
     D  ldtwedt               60     67  0
      *
     D  lddsfl                71     71
      *
     D  lddemand             300    300
      *
     D  ldzerofl             328    328
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      *-------------------------------------------------------------------------------------
      * Mainline
      *-------------------------------------------------------------------------------------
      *
      * Logic for our normal/regular processing
      *
     C                   z-add     0             wkascono
     C                   exsr      $dtlprod1
     C                   exsr      $sumprod1
     C                   exsr      $sumgl1
     C                   exsr      $sumje1
      *
      * Logic for the Affiliated Sales (NOTE: We do not have 3 summary levels; just 2 levels.)
      *
     C                   exsr      $dtlprod2
     C                   exsr      $sumprod2
     C                   exsr      $sumgl2
      *
      * EOF processing
     C                   seton                                        lr
      /eject
      *-------------------------------------------------------------------------------------
      * Normal/Regular: Create Product Detail Workfile records
      *-------------------------------------------------------------------------------------
      *
      * Read/process each Weekly Product Revenue Detail record selected by the Query.
      * Write a corresponding Product Detail Workfile record for each.
      *
     C     $dtlprod1     begsr
      *
     C                   dou       *in90 = *on                                  Do detail
     C                   read      tfl010e                                90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move      prglsub       w1glsub
     C                   z-add     prprcd        w1prcd
     C                   z-add     prwedt        w1wedt
     C                   move      prcoownfl     w1coownfl
     C                   move      prprdcmp      w1prdcmp
     C                   z-add     prtownpc      w1townpc
      *
      * Seaboard:
      *   Sold pounds
      *   Net product revenue amount
      *   Net sales amount
      *   Net adjustment amount
      *
     C                   z-add     prssllb       w1ssllb
     C                   z-add     prsnpram      w1snpram
     C                   z-add     prsnsam       w1snsam
     C     prsnpram      sub       prsnsam       w1snjam
      *
      * Triumph:
      *   Sold pounds
      *   Net product revenue amount
      *   Net sales amount
      *   Net adjustment amount
      *
     C                   z-add     prtsllb       w1tsllb
     C                   z-add     prtnpram      w1tnpram
     C                   z-add     prtnsam       w1tnsam
     C     prtnpram      sub       prtnsam       w1tnjam
      *
12011 * Seaboard Triumph Foods:
  |   *   Sold pounds
  |   *   Net product revenue amount
  |   *   Net sales amount
  |   *   Net adjustment amount
  |   *
  |  C                   z-add     prxsllb       w1xsllb
  |  C                   z-add     prxnpram      w1xnpram
  |  C                   z-add     prxnsam       w1xnsam
12011C     prxnpram      sub       prxnsam       w1xnjam
      *
      * Recalc/overlay some fields when the Item is CoOwned
      *
     C                   if        prcoownfl = yes
     C                   exsr      $coown
     C                   endif
      *
      * Set Adjustment Flag
      *     R12011-Added STF Net Adjustment.
12011C**                 if        w1snjam <> 0 or w1tnjam <> 0
12011C                   if        w1snjam <> 0 or w1tnjam <> 0 or w1xnjam <> 0
     C                   move      yes           w1jfl
     C                   else
     C                   move      no            w1jfl
     C                   endif
      *
      * If the user elected to omit records with zero adjustment dollars,
      * do not write a workfile record; otherwise, write a record.
      *
     C                   if        ldzerofl = no and w1jfl = no
     C                   else
     C                   write     w1rec
     C                   endif
      *
     C                   clear                   w1rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do detail
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Normal/Regular: CoOwned Logic for Product Detail Workfile
      *-------------------------------------------------------------------------------------
      *
     C     $coown        begsr
      *
      * Calc SBF and TF CoOwned Pounds. These will ultimately be used as JDE "units"
      * in TFJDE270.
     C                   if        prtownpc <> 0
     C                   eval      wklb = prssllb + prtsllb
     C                   eval      wkrate = (100 - prtownpc) / 100
     C                   eval(h)   w1scolb = wklb * wkrate
     C                   eval      w1tcolb = wklb - w1scolb
     C                   endif
      *
      *
      * CoOwned: Seaboard producing
      *
     C                   select
     C                   when      prprdcmp = 'SBF'
     C     prsnpram      sub       pranpram      w1snjam
     C     pranpram      sub       prsnpram      w1tnjam
      *
      * CoOwned: Triumph producing
      *
     C                   when      prprdcmp = 'TF '
     C     prtnpram      sub       pranpram      w1tnjam
     C     pranpram      sub       prtnpram      w1snjam
     C                   endsl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Normal/Regular: Create Product Summary Workfile records
      *-------------------------------------------------------------------------------------
      *
      * Read each record in the Product Detail workfile where Affiliated Sales Company is
      * zero...this gives us just our normal/regular records. Sum the records to the level of
      * Product/CoOwned Flag...write a Product Summary Workfile record.
      *
     C     $sumprod1     begsr
      *
     C     wkascono      setll     tfp307
      *
     C                   dou       *in91 = *on                                  Do prod sum
     C     wkascono      reade     tfp307                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     w1prcd        svprcd
     C                   move      w1coownfl     svcoownfl
     C                   move      w1glsub       svglsub
      *
     C                   when      w1prcd <> svprcd or
     C                             w1coownfl <> svcoownfl
     C                   exsr      $wrt308
     C                   endsl
      *
      * Detail processing:
      *
      * Seaboard
     C                   add       w1ssllb       w2ssllb
     C                   add       w1snpram      w2snpram
     C                   add       w1snsam       w2snsam
     C                   add       w1snjam       w2snjam
      * Triumph
     C                   add       w1tsllb       w2tsllb
     C                   add       w1tnpram      w2tnpram
     C                   add       w1tnsam       w2tnsam
     C                   add       w1tnjam       w2tnjam
12011 * Seaboard Triumph Foods
  |  C                   add       w1xsllb       w2xsllb
  |  C                   add       w1xnpram      w2xnpram
  |  C                   add       w1xnsam       w2xnsam
12011C                   add       w1xnjam       w2xnjam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do prod sum
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt308
     C                   endif
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Normal/Regular: Create GL Sub Summary Workfile records
      *-------------------------------------------------------------------------------------
      *
      * Read each record in the Product Summary workfile where Affiliated Sales Company is
      * zero...this gives us just our normal/regular records.
      *
      * Write a GL Sub Summary Workfile record for each unique combination of:
      *      GL Sub code/CoOwned Flag
      *
     C     $sumgl1       begsr
      *
     C                   move      yes           first
      *
     C     wkascono      setll     tfp308
      *
     C                   dou       *in91 = *on                                  Do gl sum
     C     wkascono      reade     tfp308                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   move      w2glsub       svglsub
     C                   move      w2desc        svdesc
     C                   move      w2coownfl     svcoownfl
      *
     C                   when      w2glsub <> svglsub or
     C                             w2coownfl <> svcoownfl
     C                   exsr      $wrt309
     C                   endsl
      *
      * Detail processing:
      *
      * Seaboard
     C                   add       w2ssllb       w3ssllb
     C                   add       w2snpram      w3snpram
     C                   add       w2snsam       w3snsam
     C                   add       w2snjam       w3snjam
      * Triumph
     C                   add       w2tsllb       w3tsllb
     C                   add       w2tnpram      w3tnpram
     C                   add       w2tnsam       w3tnsam
     C                   add       w2tnjam       w3tnjam
12011 * Seaboard Triumph Foods
  |  C                   add       w2xsllb       w3xsllb
  |  C                   add       w2xnpram      w3xnpram
  |  C                   add       w2xnsam       w3xnsam
12011C                   add       w2xnjam       w3xnjam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do gl sum
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt309
     C                   endif
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Normal/Regular: Create Journal Entry Summary Workfile records
      *-------------------------------------------------------------------------------------
      *
      * Read/process each record in the Product Detail workfile where Affiliated Sales
      * Company is zero....this gives us just our normal/regular reocrds.
      *
      * Write a Journal Entry Summary Workfile record for each unique combination of:
      *      Producing Company/GL Sub
      *
     C     $sumje1       begsr
      *
     C                   move      yes           first
      *
     C     wkascono      setll     tfl307a
      *
     C                   dou       *in91 = *on                                  Do je sum
     C     wkascono      reade     tfl307a                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   move      w1prdcmp      svprdcmp
     C                   move      w1glsub       svglsub
     C                   move      w1coownfl     svcoownfl
      *
     C                   when      w1prdcmp <> svprdcmp or
     C                             w1glsub <> svglsub
     C                   exsr      $wrt310
     C                   endsl
      *
      * Detail processing:
      *
      * Seaboard
     C                   add       w1ssllb       w4ssllb
     C                   add       w1scolb       w4scolb
     C                   add       w1snpram      w4snpram
     C                   add       w1snsam       w4snsam
     C                   add       w1snjam       w4snjam
      * Triumph
     C                   add       w1tsllb       w4tsllb
     C                   add       w1tcolb       w4tcolb
     C                   add       w1tnpram      w4tnpram
     C                   add       w1tnsam       w4tnsam
     C                   add       w1tnjam       w4tnjam
12011 * Seaboard Triumph Foods
  |  C                   add       w1xsllb       w4xsllb
  |  C                   add       w1tcolb       w4tcolb
  |  C                   add       w1xnpram      w4xnpram
  |  C                   add       w1xnsam       w4xnsam
12011C                   add       w1xnjam       w4xnjam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do je sum
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt310
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------------------------------
      * Contract Sales: Create Product Detail Workfile records for the "Affiliated Sales" data
      *---------------------------------------------------------------------------------------
      *
     C     $dtlprod2     begsr
      *
      * Clear all the workfile records before you start the processing for the
      * Affiliated Sales. (Note: We do not write Affiliated Sales records to TFP310.)
      *
     C                   clear                   w1rec
     C                   clear                   w2rec
     C                   clear                   w3rec
      *
      * Process each History Detail Accrual record in the From/To WeekEnding
      * date range. An Open Query has already selected only the records where:
      *   1) Accrual Type is 'SA'
      *   2) Ledger Accrual is Yes
      *   Note: I would have used the query to select on the date range; but,
      *         I didn't have the "dates" in Synon format in the CL. So, we'll
      *         just do the "date" selection here.
      *
     C     wkfsyndt      setll     pdiccplc
     C                   dou       *in91 = *on or icprdt > wktsyndt             Do accrual
     C                   read      pdiccplc                               91
     C                   if        *in91 = *off and icprdt <= wktsyndt          If not eof
      *
      * Retrieve the GL Sub Value from the Weekly Revenue record using
      * key values of:
      *   1) Product code
      *   2) TO WeekEnding Date
      *
     C     key01         chain     tfp010                             92
     C                   if        *in92 = *off
     C                   move      prglsub       w1glsub
     C                   endif
      *
     C                   z-add     ldtwedt       w1wedt
     C                   z-add     ichgcd        w1prcd
     C                   z-add     icaic3        w1ascono
      *
      * Set Net Adjustment Amounts based on the Affiliated Sales Company
      * (Note: We are flipping the signs on these.)
      *
     C                   select
     C                   when      w1ascono = 360
     C     -1            mult      icayva        w1snjam
      *
     C                   when      w1ascono = 960
     C     -1            mult      icayva        w1tnjam
     C                   z-add     icayva        w1snjam
      *
12011 * R12011 - STF Net Sales equals STF Net Prod Rev Amt hence no Adjustment Amt.
  |  C                   when      w1ascono = 440
12011C                   z-add     0             w1xnjam
     C                   endsl
      * Set Adjustment Flag
      *     R12011-Added STF Net Adjustment.
12011C**                 if        w1tnjam <> 0 or w1snjam <> 0
12011C                   if        w1tnjam <> 0 or w1snjam <> 0 or w1xnjam <> 0
     C                   move      yes           w1jfl
     C                   else
     C                   move      no            w1jfl
     C                   endif
      *
      * If the user elected to omit records with zero adjustment dollars,
      * do not write a workfile record; otherwise, write a record.
      *
     C                   if        ldzerofl = no and w1jfl = no
     C                   else
     C                   write     w1rec
     C                   endif
      *
     C                   clear                   w1rec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do accrual
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Contract Sales: Create Product Summary Workfile records
      *-------------------------------------------------------------------------------------
      *
     C     $sumprod2     begsr
      *
      * Initialize all save fields that are used in the Write subroutine. (NOTE: The
      * Affiliated Sales logic does not use the CoOwned flag.)
      *
     C                   z-add     0             svascono
     C                   z-add     0             svprcd
     C                   move      *blank        svcoownfl
     C                   move      *blank        svglsub
      *
     C                   move      yes           first
      *
      * Read each record in the Product Detail workfile where Affiliated Sales Company is NOT
      * zero...this gives us only our Affiliated Sales records. Sum the records to the level of
      * Product/Affiliated Sales Company...write a Product Summary Workfile record.
      *
     C                   z-add     0             wkascono
     C     wkascono      setgt     tfp307
      *
     C                   dou       *in91 = *on                                  Do prod sum
     C                   read      tfp307                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     w1ascono      svascono
     C                   z-add     w1prcd        svprcd
     C                   move      w1glsub       svglsub
      *
     C                   when      w1ascono <> svascono or
     C                             w1prcd <> svprcd
     C                   exsr      $wrt308
     C                   endsl
      *
      * Detail processing:
      *
      * Accumulate Adjustment Amount
      *
     C                   add       w1snjam       w2snjam
     C                   add       w1tnjam       w2tnjam
12011C                   add       w1xnjam       w2xnjam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do prod sum
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt308
     C                   endif
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------------------------
      * Contract Sales: Create GL Sub Summary Workfile records
      *-------------------------------------------------------------------------------------
      *
      * Read each record in the Product Summary workfile where Affiliated Sales Company is
      * greater than zero...this gives us just our Affiliated Sales records.
      *
      * Write a GL Sub Summary Workfile record for each unique combination of:
      *      Affiliated Sales Company/GL Sub Code
      *
     C     $sumgl2       begsr
      *
     C                   move      yes           first
     C                   z-add     0             svascono
     C                   move      *blank        svglsub
     C                   move      *blank        svdesc
     C                   move      *blank        svcoownfl
      *
     C     wkascono      setgt     tfp308
      *
     C                   dou       *in91 = *on                                  Do gl sum
     C                   read      tfp308                                 91
     C                   if        *in91 = *off                                 If not EOF
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     w2ascono      svascono
     C                   move      w2glsub       svglsub
     C                   move      w2desc        svdesc
     C                   move      w2coownfl     svcoownfl
      *
     C                   when      w2ascono <> svascono or
     C                             w2glsub  <> svglsub
     C                   exsr      $wrt309
     C                   endsl
      *
      * Detail processing:
      *
      * Accumulate Adjustment Amount
      *
     C                   add       w2snjam       w3snjam
     C                   add       w2tnjam       w3tnjam
12011C                   add       w2xnjam       w3xnjam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do gl sum
      *
      * Last record processing
      *
     C                   if        first = no
     C                   exsr      $wrt309
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Product Summary Workfile record
      *---------------------------------------------------------------
      *
     C     $wrt308       begsr
      *
     C                   z-add     svascono      w2ascono
     C                   z-add     svprcd        w2prcd
     C                   move      svcoownfl     w2coownfl
     C                   move      svglsub       w2glsub
      *
12011C**                 if        w2snjam <> 0 or w2tnjam <> 0
12011C                   if        w2snjam <> 0 or w2tnjam <> 0 or w2xnjam <> 0
     C                   move      yes           w2jfl
     C                   else
     C                   move      no            w2jfl
     C                   endif
      *
      * Retrieve a GL Sub description
      * (The open query limits this file to Category=4 records.)
      *
     C**   svglsub       chain     pdjirel3                           92
     C     svglsub       chain     @JIREFR                            92                  DDL CHG
     C                   if        *in92 = *off
     C                   eval      w2desc = jiauna
     C                   else
     C                   eval      w2desc = 'Unknown'
     C                   endif
      *
     C                   write     w2rec
     C                   clear                   w2rec
      *
     C                   z-add     w1ascono      svascono
     C                   z-add     w1prcd        svprcd
     C                   move      w1coownfl     svcoownfl
     C                   move      w1glsub       svglsub
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a GL Sub Summary Workfile record
      *---------------------------------------------------------------
      *
     C     $wrt309       begsr
      *
     C                   z-add     svascono      w3ascono
     C                   move      svglsub       w3glsub
     C                   move      svdesc        w3desc
     C                   move      svcoownfl     w3coownfl
      *
12011C**                 if        w3snjam <> 0 or w3tnjam <> 0
12011C                   if        w3snjam <> 0 or w3tnjam <> 0 or w3xnjam <> 0
     C                   move      yes           w3jfl
     C                   else
     C                   move      no            w3jfl
     C                   endif
      *
     C                   write     w3rec
     C                   clear                   w3rec
      *
     C                   z-add     w2ascono      svascono
     C                   move      w2glsub       svglsub
     C                   move      w2desc        svdesc
     C                   move      w2coownfl     svcoownfl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Journal Entry Summary Workfile record
      *---------------------------------------------------------------
      *
     C     $wrt310       begsr
      *
     C                   move      svcoownfl     w4coownfl
     C                   move      svprdcmp      w4prdcmp
     C                   move      svglsub       w4glsub
      *
      * Retrieve a GL Sub description
      * (The open query limits this file to Category=4 records.)
      *
     C***  svglsub       chain     pdjirel3                           92
     C     svglsub       chain     @JIREFR                            92                     ddl chg
     C                   if        *in92 = *off
     C                   eval      w4desc = jiauna
     C                   else
     C                   eval      w4desc = 'Unknown'
     C                   endif
      *
12011C**                 if        w4snjam <> 0 or w4tnjam <> 0
12011C                   if        w4snjam <> 0 or w4tnjam <> 0 or w4xnjam <> 0
     C                   move      yes           w4jfl
     C                   else
     C                   move      no            w4jfl
     C                   endif
      *
     C                   write     w4rec
     C                   clear                   w4rec
      *
     C                   move      w1glsub       svglsub
     C                   move      w1coownfl     svcoownfl
     C                   move      w1prdcmp      svprdcmp
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    ichgcd
     C                   kfld                    ldtwedt
      *
      * Flip the "From WeekEnding Date" into Synon format.
      *
     C     *iso          move      ldfwedt       wkisodate
     C     *cymd         move      wkisodate     wkfsyndt
      *
      * Flip the "To WeekEnding Date" into Synon format.
      *
     C     *iso          move      ldtwedt       wkisodate
     C     *cymd         move      wkisodate     wktsyndt
      *
     C                   endsr
      /eject
