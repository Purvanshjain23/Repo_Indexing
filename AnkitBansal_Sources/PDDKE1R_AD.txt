// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDDKE1R
// ?Date: 14.08.2025 Time: 03:31:23
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


CASE;

// IF PAR.Company Number EQ WRK.ZERO
IF PAR.Company_Number = WRK.ZERO;

// OR PAR.Region Code EQ WRK.BLANK
OR PAR.Region_Code = WRK.BLANK;

// OR PAR.Warehouse Code EQ WRK.BLANK
OR PAR.Warehouse_Code = WRK.BLANK;

// OR PAR.Carrier Code EQ WRK.BLANK
OR PAR.Carrier_Code = WRK.BLANK;

// OR PAR.Starting Miles EQ WRK.ZERO
OR PAR.Starting_Miles = WRK.ZERO;

// PGM.*Program mode = CND.*ADD
PGM.*Program_mode = 'ADD';

ENDIF;

//?USER: Initialize key screen

// KEY.USR Company Number = PAR.Company Number
KEY.USR_Company_Number = PAR.Company_Number;

//?Company Name
CASE;

// IF KEY.USR Company Number NE WRK.ZERO
IF KEY.USR_Company_Number <> WRK.ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(KEY.USR_Company_Number);
PARAMETER(KEY.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


SET CURSOR;

ENDIF;

//?Region Description
CASE;

// IF KEY.Region Code NE WRK.BLANK
IF KEY.Region_Code <> WRK.BLANK;

EXECUTE FUNCTION(RTV Active Region Desc RT) TYPE(RTVOBJ) FILE(PDKFREP)          AC1379082;
PARAMETER(KEY.USR_Company_Number);
PARAMETER(KEY.Region_Code);
PARAMETER(KEY.Region_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


SET CURSOR;

ENDIF;

//?Warehouse Description
CASE;

// IF KEY.Warehouse Code NE WRK.BLANK
IF KEY.Warehouse_Code <> WRK.BLANK;

EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(KEY.Warehouse_Code);
PARAMETER(KEY.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


SET CURSOR;

ENDIF;

//?Carrier Name
CASE;

// IF KEY.Carrier Code NE WRK.BLANK
IF KEY.Carrier_Code <> WRK.BLANK;

EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(KEY.Carrier_Code);
PARAMETER(KEY.USR_Carrier_Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Record Status is Deleted & Inactive
IF WRK.Record_Status = 'D'/'I';

// KEY.USR Carrier Name = CON.*BLANK
KEY.USR_Carrier_Name = *BLANK;

ENDIF;

SET CURSOR;

ENDIF;

//?USER: Validate key screen

//?Prompt on company
CASE;

// IF KEY.*CMD key is *Prompt
IF KEY.*CMD_key = '04';

// AND PGM.*Cursor field <IS> KEY.USR Company Number
AND PGM.*Cursor_field = KEY.USR_Company_Number;

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(KEY.USR_Company_Number);

QUIT;

ENDIF;

// KEY.Company Number = KEY.USR Company Number
KEY.Company_Number = KEY.USR_Company_Number;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Active Region Desc RT) TYPE(RTVOBJ) FILE(PDKFREP)          AC1379082;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Region_Code);
PARAMETER(KEY.Region_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(KEY.Warehouse_Code);
PARAMETER(KEY.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(KEY.Carrier_Code);
PARAMETER(KEY.USR_Carrier_Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Record Status is Deleted & Inactive
IF WRK.Record_Status = 'D'/'I';

// KEY.USR Carrier Name = CON.*BLANK
KEY.USR_Carrier_Name = *BLANK;

ENDIF;

//?USER: Initialize detail screen (existing record)

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(DB1.Company_Number);
PARAMETER(DTL.Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Active Region Desc RT) TYPE(RTVOBJ) FILE(PDKFREP)          AC1379082;
PARAMETER(DB1.Company_Number);
PARAMETER(DB1.Region_Code);
PARAMETER(DTL.Region_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Whse Descrip       RT) TYPE(RTVOBJ) FILE(CAADREP)          AC1257603;
PARAMETER(DB1.Warehouse_Code);
PARAMETER(DTL.Warehouse_Description);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 // PAR.Warehouse Description = DB1.Warehouse Description
 PAR.Warehouse_Description = DB1.Warehouse_Description;

}


EXECUTE FUNCTION(RTV Name, Status       RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1260598;
PARAMETER(DB1.Carrier_Code);
PARAMETER(DTL.USR_Carrier_Name);
PARAMETER(WRK.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Record Status is Deleted & Inactive
IF WRK.Record_Status = 'D'/'I';

// DTL.USR Carrier Name = CON.*BLANK
DTL.USR_Carrier_Name = *BLANK;

ENDIF;

//?USER: Process key screen request

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

// Send error message - 'Function not allowed.'
ERROR(USR1833);

QUIT;

ENDIF;

//?USER: Create DBF record

EXECUTE FUNCTION(CRT PD Carrier Rates   CR) TYPE(CRTOBJ) FILE(PDKHREP)          AC1379030;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Region_Code);
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Carrier_Code);
PARAMETER(DTL.Starting_Miles);
PARAMETER(DTL.Carrier_Rate);
PARAMETER(DTL.Description);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER('A');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(CHG PD Carrier Rates   CH) TYPE(CHGOBJ) FILE(PDKHREP)          AC1379031;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Region_Code);
PARAMETER(DTL.Warehouse_Code);
PARAMETER(DTL.Carrier_Code);
PARAMETER(DTL.Starting_Miles);
PARAMETER(DTL.Carrier_Rate);
PARAMETER(DTL.Description);
PARAMETER(DTL.EDI_Status_1);
PARAMETER(DTL.EDI_Status_2);
PARAMETER(DTL.EDI_Status_3);
PARAMETER(DTL.Record_Status);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


//?USER: Process command keys

MOVE *ALL (To: PAR From: DTL);

CASE;

// IF PGM.*Program mode is *CHANGE
IF PGM.*Program_mode = 'CHG';

PGM.*Return_code = *BLANK;

RETURN;

ENDIF;

