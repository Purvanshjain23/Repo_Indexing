      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     Workfile: Update Nursery BGF Sources with Nursery-to-Nursery
      *                        Transfers
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     11/13/01
      *
      * FUNCTION:    This function updates BGF sources for destination nursery groups.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsl326a   uf a e           k disk    rename(w2rec:w2reca) prefix(p1)
      *  Workfile: Nursery groups with BGF sources
      *
      *
     Fhsp326    if   e           k disk
      *  Workfile: Nursery groups with BGF sources
      *
      *
     Fhsl327b   if   e           k disk
      *  Workfile: Nursery-to-nursery transfers
      *
      /EJECT
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wktothd         s                   like(w2rchd)
     D wktotcn         s              3  0
     D wkremhd         s                   like(w2rchd)
     D wkhd            s                   like(w2rchd)
     D wkcn            s              3  0
     D wkpr            s             15  8
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ***************************************************************************************
      * MAINLINE
      ***************************************************************************************
      *
      * Process all nursery-to-nursery transfer records that are not flagged as
      * Catch-22 records.
      *
     C     *loval        setll     hsl327b
      *
     C                   dou       *in90 = *on                                  Main do loop
     C                   read      hsl327b                                90
     C                   if        *in90 = *off and w322fl = no                 If not EOF
      *
      * Retrieve total head and total records for the origin group from
      * the Nursery Group BGF Source file.
      *
     C                   exsr      $origtot
      *
      * If you had records for the origin group, then process your
      * destination group.
      *
     C                   if        wktotcn <> 0
     C                   exsr      $dest
     C                   endif
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do loop
      *
      * Clean-up routine
      *
     C                   exsr      $cleanup
      *
      * EOF Processing
      *
     C                   seton                                        lr
      /EJECT
      *----------------------------------------------------------------
      * Retrieve total head and record counts for the origin group
      *----------------------------------------------------------------
      *
      * You will need these totals to calculate percents if you have to
      * distribute the head to multiple farm/service year/week records.
      *
     C     $origtot      begsr
      *
     C                   z-add     0             wktothd
     C                   z-add     0             wktotcn
      *
     C     w3orhgsn      setll     hsp326
      *
     C                   dou       *in91 = *on                                  Do totals
     C     w3orhgsn      reade     hsp326                                 91
     C                   if        *in91 = *off
     C                   add       w2rchd        wktothd
     C                   add       1             wktotcn
     C                   endif
     C                   enddo                                                  Do totals
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Process your destination group
      *----------------------------------------------------------------
      *
     C     $dest         begsr
      *
     C                   z-add     0             wkcn
     C                   z-add     w3rchd        wkremhd
      *
      * Read each record that exists for the origin nursery group in
      * the Nursery Group BGF Source file.
      * 1) For each record, calculate the percent of total head that the
      *    record represents.
      * 2) Using this percent, calculate how many of the received head
      *    for your destination group should be associated with this BGF
      *    farm/year/week.
      * 3) Then, write a record for your destination group.
      *
      *
     C     w3orhgsn      setll     hsp326
      *
     C                   dou       *in91 = *on                                  Do loop
     C     w3orhgsn      reade     hsp326                                 91
     C                   if        *in91 = *off
      *
     C                   add       1             wkcn
      *
      * Determine how many head should go with this record. If you are on
      * the last record (or only have 1 record), then use all the remaining
      * head; otherwise, go calculate the head to distribute to the record.
      *
     C                   select
     C                   when      wkcn = wktotcn
     C                   z-add     wkremhd       wkhd
     C                   other
     C                   exsr      $head
     C                   endsl
      *
      * If you have distributed head, write/update the destination group
      * workfile record.
      *
     C                   if        wkhd <> 0
     C                   exsr      $upd326
     C                   endif
      *
     C                   endif
     C                   enddo                                                  Do loop
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------
      * Calculate the head to distribute to this record
      *--------------------------------------------------------------
      *
     C     $head         begsr
      *
     C                   z-add     0             wkhd
      *
     C                   if        wktothd <> 0
     C     w2rchd        div       wktothd       wkpr
     C     w3rchd        mult      wkpr          wkhd
     C                   endif
      *
     C                   sub       wkhd          wkremhd
      *
     C                   endsr
      /EJECT
      *--------------------------------------------------------------
      * Update/write a record for your destination nursery group
      *--------------------------------------------------------------
      *
     C     $upd326       begsr
      *
      * If a record already exists, update it with the distributed head.
      *
     C     key01         chain     hsl326a                            92
     C                   if        *in92 = *off                                 If exists
     C                   add       wkhd          p1w2rchd
     C                   update    w2reca
     C                   else
      *
      * Write a new record
      *
     C                   z-add     wkhd          p1w2rchd
      *
     C                   z-add     w3dnfscd      p1w2dnfscd
     C                   z-add     w3dncell      p1w2dncell
     C                   z-add     w3dnhgsn      p1w2dnhgsn
     C                   move      w3dnhgcd      p1w2dnhgcd
      *
     C                   z-add     w2orcell      p1w2orcell
     C                   z-add     w2orfscd      p1w2orfscd
     C                   z-add     w2svyr        p1w2svyr
     C                   z-add     w2svwk        p1w2svwk
      *
     C                   write     w2reca
     C                   endif                                                  If exists
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Clean-up routine
      *----------------------------------------------------------------
      *
      * This routine is just to help us figure out what the data is like.
      * We are going to reread the Nursery-to-Nursery transfer file and
      * write a record to the Nursery BGF Source workfile for every destination
      * group that does not already have a record.
      *
      * The BGF source info will be missing from these records.
      *
     C     $cleanup      begsr
      *
     C     *loval        setll     hsl327b
      *
     C                   dou       *in91 = *on                                  Do clean loop
     C                   read      hsl327b                                91
     C                   if        *in91 = *off                                 If not EOF
      *
     C     w3dnhgsn      chain     hsp326                             92
     C                   if        *in92 = *on                                  If no hit
      *
     C                   z-add     0             p1w2rchd
      *
     C                   z-add     w3dnhgsn      p1w2dnhgsn
     C                   z-add     w3dnfscd      p1w2dnfscd
     C                   z-add     w3dncell      p1w2dncell
     C                   z-add     w3dnhgsn      p1w2dnhgsn
     C                   move      w3dnhgcd      p1w2dnhgcd
      *
     C                   z-add     0             p1w2orcell
     C                   z-add     0             p1w2orfscd
     C                   z-add     0             p1w2svyr
     C                   z-add     0             p1w2svwk
      *
     C                   write     w2reca
     C                   endif                                                  If no hit
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do clean loop
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Initialization subroutine
      *----------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      *
     C     key01         klist
     C                   kfld                    w2orfscd
     C                   kfld                    w3dnhgsn
     C                   kfld                    w2svyr
     C                   kfld                    w2svwk
      *
     C                   endsr
      /EJECT
