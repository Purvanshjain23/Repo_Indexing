// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDACPFR
// ?Date: 14.08.2025 Time: 12:03:34
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('P/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// PAR.Error BOM USR = CND.no
PAR.Error_BOM_USR = 'N';

//?USER: Record selection processing

CASE;

// IF DB1.PS Weight Order Needs is Not Entered
IF DB1.PS_Weight_Production_Need = *ZERO;

// AND DB1.PS Weight Standard is Not Entered
AND DB1.PS_Weight_Standard = *ZERO;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process before print of first page format

MOVE *ALL (To: 1PG From: PAR);

// 1PG.Condition Desc. 1  USR = Condition name of PAR.Production Type
X1PG_Condition_Desc_1_USR = RTVCND(PAR.Production_Type);

//?USER: Print required level headings

// SUPPRESSED PRINT Accounting Company Number header format

// SUPPRESSED PRINT Production Type header format

CASE;

IF NEW Production_Date;
// Print Production Date header format
PRINT Production Date header format;

ENDIF;

CASE;

IF NEW Item_Code;
// SUPPRESSED PRINT Item Code header format

ENDIF;

//?USER: Process before print of detail format

// CUR.Weight Order Needs USR = DB1.PS Weight Order Needs + DB1.PS Weight Standard
CUR.Weight_Order_Needs_USR = DB1.PS_Weight_Production_Need + DB1.PS_Weight_Standard;

//?USER: Process after print of detail format

NXT.Weight_7_0_SUM = SUM(CUR.Weight_Order_Needs_USR);

//?USER: Print required level totals

CASE;

IF NEW Item_Code;
EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Description);
PARAMETER(WRK.Description_Line_Two);
PARAMETER(WRK.UOM_Primary);
PARAMETER(WRK.UOM_Second);
PARAMETER(WRK.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Item Prod Yield   RT) TYPE(RTVOBJ) FILE(PDIOREP)           AC1325623;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Production_Yield);
PARAMETER(PAR.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF PAR.Record Found USR is Record Not Found
IF PAR.Record_Found_USR = 'N';

// Retrieve message - 'Bill of Material for Item does not exist.'
CUR.Comment_Line = RTVMSG(USR2011);

// PAR.Error BOM USR = CND.yes
PAR.Error_BOM_USR = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Percent 7.4 USR = CUR.Production Yield / CON.100 *
PAR.Percent_7_4_USR = CUR.Production_Yield / 100;

// CUR.Weight UPS USR = CUR.Weight 7.0 SUM / PAR.Percent 7.4 USR *Rounded
CUR.Weight_UPS_USR = CUR.Weight_7_0_SUM / PAR.Percent_7_4_USR 'H';

ENDIF;

// Print Item Code totals format
PRINT Item Code totals format;

//?Embedded PRTOBJ : UPS Prc Bill of Mtrls PO
CASE;

// IF WRK.Record Found USR is Record Not Found
IF WRK.Record_Found_USR = 'N';

QUIT;

ENDIF;

EXECUTE FUNCTION(ZZUPSPrcBill of Mtrls PO) TYPE(PRTOBJ);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(CUR.Weight_UPS_USR);
PARAMETER(CUR.Production_Type);
PARAMETER(CUR.Production_Date);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


ENDIF;

// SUPPRESSED PRINT Production Date totals format

// SUPPRESSED PRINT Production Type totals format

// SUPPRESSED PRINT Accounting Company Number totals format

