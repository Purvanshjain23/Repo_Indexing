// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PBFIEFR
// ?Date: 14.08.2025 Time: 03:47:44
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E2247 RMC New for MPR Wholesale Pork - starting 1/06/2013
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('C/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

//?USER: Initialize subfile header

CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// CTL.Company Number = PAR.Company Number
CTL.Company_Number = PAR.Company_Number;

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

ENDIF;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(CTL.Item_Desc_DRV);
PARAMETER(CTL.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Initialize subfile record (existing record)

EXECUTE FUNCTION(Rtv Item Typ/Sts/Desc RT) TYPE(RTVOBJ) FILE(CABZREP)           AC2052076;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Item_Desc_DRV);
PARAMETER(LCL.Item_Type_Code);
PARAMETER(LCL.Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Item Type Code is Finished Good
IF LCL.Item_Type_Code = 'FG';

// AND LCL.Record Status is Active
AND LCL.Record_Status = 'A';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF CTL.CIE MPR Report to USDA NE DB1.CIE MPR Report to USDA
IF CTL.CIE_MPR_Report_to_USDA <> DB1.CIE_MPR_Report_to_USDA;

// AND CTL.CIE MPR Report to USDA NE WRK.BLANK
AND CTL.CIE_MPR_Report_to_USDA <> WRK.BLANK;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Initialize subfile record (new record)

// RCD.Record Status = CND.Active
RCD.Record_Status = 'A';

//?USER: Validate subfile control

//?F4
CASE;

// IF CTL.*CMD key is *Prompt
IF CTL.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> CTL.Company Number
IF PGM.*Cursor_field = CTL.Company_Number;

// Call program SEL Company - plants   SR.
CALL PROGRAM(SEL Company - plants   SR) ('PPF2SRR');
PARAMETER(CTL.Company_Number);

ENDIF;

CASE;

// IF PGM.*Cursor field <IS> CTL.Item Code
IF PGM.*Cursor_field = CTL.Item_Code;

// Call program Zzz Actv non-Base Itm  SR.
CALL PROGRAM(Zzz Actv non-Base Itm  SR) ('PDMMSRR');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Item_Code);

ENDIF;

ENDIF;

CASE;

// IF CTL.CIE MPR Report to USDA NE LCL.CIE MPR Report to USDA
IF CTL.CIE_MPR_Report_to_USDA <> LCL.CIE_MPR_Report_to_USDA;

// LCL.CIE MPR Report to USDA = CTL.CIE MPR Report to USDA
LCL.CIE_MPR_Report_to_USDA = CTL.CIE_MPR_Report_to_USDA;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F21=Email
CASE;

// IF CTL.*CMD key is CF21
IF CTL.*CMD_key = '21';

// Call program Pmt Enter Email Addr  PV.
CALL PROGRAM(Pmt Enter Email Addr  PV) ('POWGPVR');
PARAMETER(LCL.Email_Address);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// OR LCL.Email Address is Blank
OR LCL.Email_Address = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// Execute command - 'EXECUTE SQL VIEW'
EXECUTE COMMAND(USR4543);
PARAMETER(LCL.Email_Address);

ENDIF;

ENDIF;

//?CALC: Subfile record function fields

EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(RCD.Item_Desc_DRV);
PARAMETER(RCD.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Create DBF record

EXECUTE FUNCTION(Crt CIE MPR Status    IF) TYPE(EXCINTFUN) FILE(PMFDREP)        AC2052095;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.CIE_MPR_Report_to_USDA);
PARAMETER(RCD.Record_Status);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Plant Cos all     RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1809261;
 PARAMETER(PAR.Company_Number);
 PARAMETER(LCL.USR_Company_Number_1);
 PARAMETER(LCL.USR_Company_Number_2);
 PARAMETER(LCL.USR_Company_Number_3);
 PARAMETER(LCL.USR_Company_Number_4);
 PARAMETER(LCL.USR_Company_Number_5);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF PAR.USR Company Number 1 is Equal to zero
  IF PAR.USR_Company_Number_1 = *ZERO;

  // PAR.USR Company Number 1 = DB1.Company Number
  PAR.USR_Company_Number_1 = DB1.Company_Number;

  // IF PAR.USR Company Number 2 is Equal to zero
  IF PAR.USR_Company_Number_2 = *ZERO;

  // PAR.USR Company Number 2 = DB1.Company Number
  PAR.USR_Company_Number_2 = DB1.Company_Number;

  // IF PAR.USR Company Number 3 is Equal to zero
  IF PAR.USR_Company_Number_3 = *ZERO;

  // PAR.USR Company Number 3 = DB1.Company Number
  PAR.USR_Company_Number_3 = DB1.Company_Number;

  // IF PAR.USR Company Number 4 is Equal to zero
  IF PAR.USR_Company_Number_4 = *ZERO;

  // PAR.USR Company Number 4 = DB1.Company Number
  PAR.USR_Company_Number_4 = DB1.Company_Number;

  // IF PAR.USR Company Number 5 is Equal to zero
  IF PAR.USR_Company_Number_5 = *ZERO;

  // PAR.USR Company Number 5 = DB1.Company Number
  PAR.USR_Company_Number_5 = DB1.Company_Number;

  ENDIF;

 }

 CASE;

 // IF LCL.USR Company Number 1 is greater than zero
 IF LCL.USR_Company_Number_1 > *ZERO;

 EXECUTE FUNCTION(Crt CIE MPR Status    CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC2052099;
 PARAMETER(LCL.USR_Company_Number_1);
 PARAMETER(PAR.Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('F');
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER(PAR.CIE_MPR_Report_to_USDA);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Record_Status);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

  //?USER: Processing if Data record already exists

  EXECUTE FUNCTION(Chg CIE MPR Status    CH) TYPE(CHGOBJ) FILE(PMFDREP)           AC2052094;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(PAR.CIE_MPR_Report_to_USDA);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Company Item Ext  CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC1926035;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Produce_on_Sunday_Sts);
   PARAMETER(PAR.Produce_on_Monday_Sts);
   PARAMETER(PAR.Produce_on_Tuesday_Sts);
   PARAMETER(PAR.Produce_on_Wednesday_Sts);
   PARAMETER(PAR.Produce_on_Thursday_Sts);
   PARAMETER(PAR.Produce_on_Friday_Sts);
   PARAMETER(PAR.Produce_on_Saturday_Sts);
   PARAMETER(PAR.Plan_Production_Sts);
   PARAMETER(PAR.Allocation_Method);
   PARAMETER(PAR.Adjust_Credit_Pieces);
   PARAMETER(PAR.CIE_Use_Age_Days_over_Max);
   PARAMETER(PAR.CIE_MPR_Report_to_USDA);
   PARAMETER(PAR.CIE_Unused_Number);
   PARAMETER(PAR.CIE_Unused_Number_2);
   PARAMETER(PAR.CIE_Unused_Date);
   PARAMETER(PAR.CIE_TPM_Equipment_Code);
   PARAMETER(PAR.CIE_Capacity_Code);
   PARAMETER(PAR.Record_Status);
   PARAMETER(PAR.Create_Date);
   PARAMETER(PAR.Create_Time);
   PARAMETER(PAR.Create_User);
   PARAMETER(PAR.Create_Program);
   PARAMETER(PAR.Change_Date);
   PARAMETER(PAR.Change_Time);
   PARAMETER(PAR.Change_User);
   PARAMETER(PAR.Change_Program);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
    PARAMETER(DB1.Record_Status);
    PARAMETER(DB1.Create_Date);
    PARAMETER(DB1.Create_Time);
    PARAMETER(DB1.Create_User);
    PARAMETER(DB1.Create_Program);
    PARAMETER(DB1.Change_Date);
    PARAMETER(DB1.Change_Time);
    PARAMETER(DB1.Change_User);
    PARAMETER(DB1.Change_Program);
    {
     //?Execute internal function

     //?*** Set RECORD STATUS field. ***
     // PAR.Record Status = CND.Active
     PAR.Record_Status = 'A';

     //?*** Set CREATE fields. ***
     // PAR.Create Date = JOB.*Job date
     PAR.Create_Date = JOB.*Job_date;

     // PAR.Create Time = JOB.*Job time
     PAR.Create_Time = JOB.*Job_time;

     // PAR.Create User = JOB.*USER
     PAR.Create_User = JOB.*USER;

     // PAR.Create Program = JOB.*PROGRAM
     PAR.Create_Program = JOB.*PROGRAM;

     //?*** Set CHANGE fields. ***
     // PAR.Change Date = CON.*ZERO
     PAR.Change_Date = *ZERO;

     // PAR.Change Time = CON.*ZERO
     PAR.Change_Time = *ZERO;

     // PAR.Change User = CON.*BLANK
     PAR.Change_User = *BLANK;

     // PAR.Change Program = CON.*BLANK
     PAR.Change_Program = *BLANK;

    }

   }

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF LCL.USR Company Number 2 is greater than zero
 IF LCL.USR_Company_Number_2 > *ZERO;

 EXECUTE FUNCTION(Crt CIE MPR Status    CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC2052099;
 PARAMETER(LCL.USR_Company_Number_2);
 PARAMETER(PAR.Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('F');
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER(PAR.CIE_MPR_Report_to_USDA);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Record_Status);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

  //?USER: Processing if Data record already exists

  EXECUTE FUNCTION(Chg CIE MPR Status    CH) TYPE(CHGOBJ) FILE(PMFDREP)           AC2052094;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(PAR.CIE_MPR_Report_to_USDA);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Company Item Ext  CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC1926035;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Produce_on_Sunday_Sts);
   PARAMETER(PAR.Produce_on_Monday_Sts);
   PARAMETER(PAR.Produce_on_Tuesday_Sts);
   PARAMETER(PAR.Produce_on_Wednesday_Sts);
   PARAMETER(PAR.Produce_on_Thursday_Sts);
   PARAMETER(PAR.Produce_on_Friday_Sts);
   PARAMETER(PAR.Produce_on_Saturday_Sts);
   PARAMETER(PAR.Plan_Production_Sts);
   PARAMETER(PAR.Allocation_Method);
   PARAMETER(PAR.Adjust_Credit_Pieces);
   PARAMETER(PAR.CIE_Use_Age_Days_over_Max);
   PARAMETER(PAR.CIE_MPR_Report_to_USDA);
   PARAMETER(PAR.CIE_Unused_Number);
   PARAMETER(PAR.CIE_Unused_Number_2);
   PARAMETER(PAR.CIE_Unused_Date);
   PARAMETER(PAR.CIE_TPM_Equipment_Code);
   PARAMETER(PAR.CIE_Capacity_Code);
   PARAMETER(PAR.Record_Status);
   PARAMETER(PAR.Create_Date);
   PARAMETER(PAR.Create_Time);
   PARAMETER(PAR.Create_User);
   PARAMETER(PAR.Create_Program);
   PARAMETER(PAR.Change_Date);
   PARAMETER(PAR.Change_Time);
   PARAMETER(PAR.Change_User);
   PARAMETER(PAR.Change_Program);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
    PARAMETER(DB1.Record_Status);
    PARAMETER(DB1.Create_Date);
    PARAMETER(DB1.Create_Time);
    PARAMETER(DB1.Create_User);
    PARAMETER(DB1.Create_Program);
    PARAMETER(DB1.Change_Date);
    PARAMETER(DB1.Change_Time);
    PARAMETER(DB1.Change_User);
    PARAMETER(DB1.Change_Program);
    {
     //?Execute internal function

     //?*** Set RECORD STATUS field. ***
     // PAR.Record Status = CND.Active
     PAR.Record_Status = 'A';

     //?*** Set CREATE fields. ***
     // PAR.Create Date = JOB.*Job date
     PAR.Create_Date = JOB.*Job_date;

     // PAR.Create Time = JOB.*Job time
     PAR.Create_Time = JOB.*Job_time;

     // PAR.Create User = JOB.*USER
     PAR.Create_User = JOB.*USER;

     // PAR.Create Program = JOB.*PROGRAM
     PAR.Create_Program = JOB.*PROGRAM;

     //?*** Set CHANGE fields. ***
     // PAR.Change Date = CON.*ZERO
     PAR.Change_Date = *ZERO;

     // PAR.Change Time = CON.*ZERO
     PAR.Change_Time = *ZERO;

     // PAR.Change User = CON.*BLANK
     PAR.Change_User = *BLANK;

     // PAR.Change Program = CON.*BLANK
     PAR.Change_Program = *BLANK;

    }

   }

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

 CASE;

 // IF LCL.USR Company Number 3 is greater than zero
 IF LCL.USR_Company_Number_3 > *ZERO;

 EXECUTE FUNCTION(Crt CIE MPR Status    CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC2052099;
 PARAMETER(LCL.USR_Company_Number_3);
 PARAMETER(PAR.Item_Code);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER('F');
 PARAMETER('N');
 PARAMETER('N');
 PARAMETER(PAR.CIE_MPR_Report_to_USDA);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(PAR.Record_Status);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 PARAMETER(*ZERO);
 PARAMETER(*ZERO);
 PARAMETER(*BLANK);
 PARAMETER(*BLANK);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
  PARAMETER(DB1.Record_Status);
  PARAMETER(DB1.Create_Date);
  PARAMETER(DB1.Create_Time);
  PARAMETER(DB1.Create_User);
  PARAMETER(DB1.Create_Program);
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   //?*** Set RECORD STATUS field. ***
   // PAR.Record Status = CND.Active
   PAR.Record_Status = 'A';

   //?*** Set CREATE fields. ***
   // PAR.Create Date = JOB.*Job date
   PAR.Create_Date = JOB.*Job_date;

   // PAR.Create Time = JOB.*Job time
   PAR.Create_Time = JOB.*Job_time;

   // PAR.Create User = JOB.*USER
   PAR.Create_User = JOB.*USER;

   // PAR.Create Program = JOB.*PROGRAM
   PAR.Create_Program = JOB.*PROGRAM;

   //?*** Set CHANGE fields. ***
   // PAR.Change Date = CON.*ZERO
   PAR.Change_Date = *ZERO;

   // PAR.Change Time = CON.*ZERO
   PAR.Change_Time = *ZERO;

   // PAR.Change User = CON.*BLANK
   PAR.Change_User = *BLANK;

   // PAR.Change Program = CON.*BLANK
   PAR.Change_Program = *BLANK;

  }

  //?USER: Processing if Data record already exists

  EXECUTE FUNCTION(Chg CIE MPR Status    CH) TYPE(CHGOBJ) FILE(PMFDREP)           AC2052094;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Item_Code);
  PARAMETER(PAR.CIE_MPR_Report_to_USDA);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt Company Item Ext  CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC1926035;
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Produce_on_Sunday_Sts);
   PARAMETER(PAR.Produce_on_Monday_Sts);
   PARAMETER(PAR.Produce_on_Tuesday_Sts);
   PARAMETER(PAR.Produce_on_Wednesday_Sts);
   PARAMETER(PAR.Produce_on_Thursday_Sts);
   PARAMETER(PAR.Produce_on_Friday_Sts);
   PARAMETER(PAR.Produce_on_Saturday_Sts);
   PARAMETER(PAR.Plan_Production_Sts);
   PARAMETER(PAR.Allocation_Method);
   PARAMETER(PAR.Adjust_Credit_Pieces);
   PARAMETER(PAR.CIE_Use_Age_Days_over_Max);
   PARAMETER(PAR.CIE_MPR_Report_to_USDA);
   PARAMETER(PAR.CIE_Unused_Number);
   PARAMETER(PAR.CIE_Unused_Number_2);
   PARAMETER(PAR.CIE_Unused_Date);
   PARAMETER(PAR.CIE_TPM_Equipment_Code);
   PARAMETER(PAR.CIE_Capacity_Code);
   PARAMETER(PAR.Record_Status);
   PARAMETER(PAR.Create_Date);
   PARAMETER(PAR.Create_Time);
   PARAMETER(PAR.Create_User);
   PARAMETER(PAR.Create_Program);
   PARAMETER(PAR.Change_Date);
   PARAMETER(PAR.Change_Time);
   PARAMETER(PAR.Change_User);
   PARAMETER(PAR.Change_Program);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
    PARAMETER(DB1.Record_Status);
    PARAMETER(DB1.Create_Date);
    PARAMETER(DB1.Create_Time);
    PARAMETER(DB1.Create_User);
    PARAMETER(DB1.Create_Program);
    PARAMETER(DB1.Change_Date);
    PARAMETER(DB1.Change_Time);
    PARAMETER(DB1.Change_User);
    PARAMETER(DB1.Change_Program);
    {
     //?Execute internal function

     //?*** Set RECORD STATUS field. ***
     // PAR.Record Status = CND.Active
     PAR.Record_Status = 'A';

     //?*** Set CREATE fields. ***
     // PAR.Create Date = JOB.*Job date
     PAR.Create_Date = JOB.*Job_date;

     // PAR.Create Time = JOB.*Job time
     PAR.Create_Time = JOB.*Job_time;

     // PAR.Create User = JOB.*USER
     PAR.Create_User = JOB.*USER;

     // PAR.Create Program = JOB.*PROGRAM
     PAR.Create_Program = JOB.*PROGRAM;

     //?*** Set CHANGE fields. ***
     // PAR.Change Date = CON.*ZERO
     PAR.Change_Date = *ZERO;

     // PAR.Change Time = CON.*ZERO
     PAR.Change_Time = *ZERO;

     // PAR.Change User = CON.*BLANK
     PAR.Change_User = *BLANK;

     // PAR.Change Program = CON.*BLANK
     PAR.Change_Program = *BLANK;

    }

   }

   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    // PAR.Change Date = JOB.*Job date
    PAR.Change_Date = JOB.*Job_date;

    // PAR.Change Time = JOB.*Job time
    PAR.Change_Time = JOB.*Job_time;

    // PAR.Change User = JOB.*USER
    PAR.Change_User = JOB.*USER;

    // PAR.Change Program = JOB.*PROGRAM
    PAR.Change_Program = JOB.*PROGRAM;

   }

  }

 }

 ENDIF;

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg CIE MPR Status    IF) TYPE(EXCINTFUN) FILE(PMFDREP)        AC2052093;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.CIE_MPR_Report_to_USDA);
PARAMETER(RCD.Record_Status);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Plant Cos all     RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1809261;
 PARAMETER(PAR.Company_Number);
 PARAMETER(LCL.USR_Company_Number_1);
 PARAMETER(LCL.USR_Company_Number_2);
 PARAMETER(LCL.USR_Company_Number_3);
 PARAMETER(LCL.USR_Company_Number_4);
 PARAMETER(LCL.USR_Company_Number_5);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  CASE;

  // IF PAR.USR Company Number 1 is Equal to zero
  IF PAR.USR_Company_Number_1 = *ZERO;

  // PAR.USR Company Number 1 = DB1.Company Number
  PAR.USR_Company_Number_1 = DB1.Company_Number;

  // IF PAR.USR Company Number 2 is Equal to zero
  IF PAR.USR_Company_Number_2 = *ZERO;

  // PAR.USR Company Number 2 = DB1.Company Number
  PAR.USR_Company_Number_2 = DB1.Company_Number;

  // IF PAR.USR Company Number 3 is Equal to zero
  IF PAR.USR_Company_Number_3 = *ZERO;

  // PAR.USR Company Number 3 = DB1.Company Number
  PAR.USR_Company_Number_3 = DB1.Company_Number;

  // IF PAR.USR Company Number 4 is Equal to zero
  IF PAR.USR_Company_Number_4 = *ZERO;

  // PAR.USR Company Number 4 = DB1.Company Number
  PAR.USR_Company_Number_4 = DB1.Company_Number;

  // IF PAR.USR Company Number 5 is Equal to zero
  IF PAR.USR_Company_Number_5 = *ZERO;

  // PAR.USR Company Number 5 = DB1.Company Number
  PAR.USR_Company_Number_5 = DB1.Company_Number;

  ENDIF;

 }

 CASE;

 // IF LCL.USR Company Number 1 is greater than zero
 IF LCL.USR_Company_Number_1 > *ZERO;

 EXECUTE FUNCTION(Chg CIE MPR Status    CH) TYPE(CHGOBJ) FILE(PMFDREP)           AC2052094;
 PARAMETER(LCL.USR_Company_Number_1);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.CIE_MPR_Report_to_USDA);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Company Item Ext  CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC1926035;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Produce_on_Sunday_Sts);
  PARAMETER(PAR.Produce_on_Monday_Sts);
  PARAMETER(PAR.Produce_on_Tuesday_Sts);
  PARAMETER(PAR.Produce_on_Wednesday_Sts);
  PARAMETER(PAR.Produce_on_Thursday_Sts);
  PARAMETER(PAR.Produce_on_Friday_Sts);
  PARAMETER(PAR.Produce_on_Saturday_Sts);
  PARAMETER(PAR.Plan_Production_Sts);
  PARAMETER(PAR.Allocation_Method);
  PARAMETER(PAR.Adjust_Credit_Pieces);
  PARAMETER(PAR.CIE_Use_Age_Days_over_Max);
  PARAMETER(PAR.CIE_MPR_Report_to_USDA);
  PARAMETER(PAR.CIE_Unused_Number);
  PARAMETER(PAR.CIE_Unused_Number_2);
  PARAMETER(PAR.CIE_Unused_Date);
  PARAMETER(PAR.CIE_TPM_Equipment_Code);
  PARAMETER(PAR.CIE_Capacity_Code);
  PARAMETER(PAR.Record_Status);
  PARAMETER(PAR.Create_Date);
  PARAMETER(PAR.Create_Time);
  PARAMETER(PAR.Create_User);
  PARAMETER(PAR.Create_Program);
  PARAMETER(PAR.Change_Date);
  PARAMETER(PAR.Change_Time);
  PARAMETER(PAR.Change_User);
  PARAMETER(PAR.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 CASE;

 // IF LCL.USR Company Number 2 is greater than zero
 IF LCL.USR_Company_Number_2 > *ZERO;

 EXECUTE FUNCTION(Chg CIE MPR Status    CH) TYPE(CHGOBJ) FILE(PMFDREP)           AC2052094;
 PARAMETER(LCL.USR_Company_Number_2);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.CIE_MPR_Report_to_USDA);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Company Item Ext  CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC1926035;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Produce_on_Sunday_Sts);
  PARAMETER(PAR.Produce_on_Monday_Sts);
  PARAMETER(PAR.Produce_on_Tuesday_Sts);
  PARAMETER(PAR.Produce_on_Wednesday_Sts);
  PARAMETER(PAR.Produce_on_Thursday_Sts);
  PARAMETER(PAR.Produce_on_Friday_Sts);
  PARAMETER(PAR.Produce_on_Saturday_Sts);
  PARAMETER(PAR.Plan_Production_Sts);
  PARAMETER(PAR.Allocation_Method);
  PARAMETER(PAR.Adjust_Credit_Pieces);
  PARAMETER(PAR.CIE_Use_Age_Days_over_Max);
  PARAMETER(PAR.CIE_MPR_Report_to_USDA);
  PARAMETER(PAR.CIE_Unused_Number);
  PARAMETER(PAR.CIE_Unused_Number_2);
  PARAMETER(PAR.CIE_Unused_Date);
  PARAMETER(PAR.CIE_TPM_Equipment_Code);
  PARAMETER(PAR.CIE_Capacity_Code);
  PARAMETER(PAR.Record_Status);
  PARAMETER(PAR.Create_Date);
  PARAMETER(PAR.Create_Time);
  PARAMETER(PAR.Create_User);
  PARAMETER(PAR.Create_Program);
  PARAMETER(PAR.Change_Date);
  PARAMETER(PAR.Change_Time);
  PARAMETER(PAR.Change_User);
  PARAMETER(PAR.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

 CASE;

 // IF LCL.USR Company Number 3 is greater than zero
 IF LCL.USR_Company_Number_3 > *ZERO;

 EXECUTE FUNCTION(Chg CIE MPR Status    CH) TYPE(CHGOBJ) FILE(PMFDREP)           AC2052094;
 PARAMETER(LCL.USR_Company_Number_3);
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.CIE_MPR_Report_to_USDA);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Crt Company Item Ext  CR) TYPE(CRTOBJ) FILE(PMFDREP)           AC1926035;
  PARAMETER(PAR.Company_Number);
  PARAMETER(PAR.Item_Code);
  PARAMETER(PAR.Produce_on_Sunday_Sts);
  PARAMETER(PAR.Produce_on_Monday_Sts);
  PARAMETER(PAR.Produce_on_Tuesday_Sts);
  PARAMETER(PAR.Produce_on_Wednesday_Sts);
  PARAMETER(PAR.Produce_on_Thursday_Sts);
  PARAMETER(PAR.Produce_on_Friday_Sts);
  PARAMETER(PAR.Produce_on_Saturday_Sts);
  PARAMETER(PAR.Plan_Production_Sts);
  PARAMETER(PAR.Allocation_Method);
  PARAMETER(PAR.Adjust_Credit_Pieces);
  PARAMETER(PAR.CIE_Use_Age_Days_over_Max);
  PARAMETER(PAR.CIE_MPR_Report_to_USDA);
  PARAMETER(PAR.CIE_Unused_Number);
  PARAMETER(PAR.CIE_Unused_Number_2);
  PARAMETER(PAR.CIE_Unused_Date);
  PARAMETER(PAR.CIE_TPM_Equipment_Code);
  PARAMETER(PAR.CIE_Capacity_Code);
  PARAMETER(PAR.Record_Status);
  PARAMETER(PAR.Create_Date);
  PARAMETER(PAR.Create_Time);
  PARAMETER(PAR.Create_User);
  PARAMETER(PAR.Create_Program);
  PARAMETER(PAR.Change_Date);
  PARAMETER(PAR.Change_Time);
  PARAMETER(PAR.Change_User);
  PARAMETER(PAR.Change_Program);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Set Crt Date/Time      IF) TYPE(EXCINTFUN)                     AC1523477;
   PARAMETER(DB1.Record_Status);
   PARAMETER(DB1.Create_Date);
   PARAMETER(DB1.Create_Time);
   PARAMETER(DB1.Create_User);
   PARAMETER(DB1.Create_Program);
   PARAMETER(DB1.Change_Date);
   PARAMETER(DB1.Change_Time);
   PARAMETER(DB1.Change_User);
   PARAMETER(DB1.Change_Program);
   {
    //?Execute internal function

    //?*** Set RECORD STATUS field. ***
    // PAR.Record Status = CND.Active
    PAR.Record_Status = 'A';

    //?*** Set CREATE fields. ***
    // PAR.Create Date = JOB.*Job date
    PAR.Create_Date = JOB.*Job_date;

    // PAR.Create Time = JOB.*Job time
    PAR.Create_Time = JOB.*Job_time;

    // PAR.Create User = JOB.*USER
    PAR.Create_User = JOB.*USER;

    // PAR.Create Program = JOB.*PROGRAM
    PAR.Create_Program = JOB.*PROGRAM;

    //?*** Set CHANGE fields. ***
    // PAR.Change Date = CON.*ZERO
    PAR.Change_Date = *ZERO;

    // PAR.Change Time = CON.*ZERO
    PAR.Change_Time = *ZERO;

    // PAR.Change User = CON.*BLANK
    PAR.Change_User = *BLANK;

    // PAR.Change Program = CON.*BLANK
    PAR.Change_Program = *BLANK;

   }

  }

  //?USER: Processing before Data update

  EXECUTE FUNCTION(Set Chg Date/Time      IF) TYPE(EXCINTFUN)                     AC1523476;
  PARAMETER(DB1.Change_Date);
  PARAMETER(DB1.Change_Time);
  PARAMETER(DB1.Change_User);
  PARAMETER(DB1.Change_Program);
  {
   //?Execute internal function

   // PAR.Change Date = JOB.*Job date
   PAR.Change_Date = JOB.*Job_date;

   // PAR.Change Time = JOB.*Job time
   PAR.Change_Time = JOB.*Job_time;

   // PAR.Change User = JOB.*USER
   PAR.Change_User = JOB.*USER;

   // PAR.Change Program = JOB.*PROGRAM
   PAR.Change_Program = JOB.*PROGRAM;

  }

 }

 ENDIF;

}


