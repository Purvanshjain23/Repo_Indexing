// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POM1E1R
// ?Date: 14.08.2025 Time: 03:38:09
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?E3160 07/14/14 JJH - Recompiled for change in CRTOBJ.
//?USER: Validate key screen

CASE;

// IF KEY.*CMD key is *Prompt
IF KEY.*CMD_key = '04';

CASE;

// IF PGM.*Cursor field <IS> KEY.Item Code
IF PGM.*Cursor_field = KEY.Item_Code;

// Call program Zzz Actv non-Base Itm  SR.
CALL PROGRAM(Zzz Actv non-Base Itm  SR) ('PDMMSRR');
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Item_Code);

ENDIF;

ENDIF;

EXECUTE FUNCTION(Val if SBD Equivalent RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1631914;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Item_Code);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

 QUIT;

}


CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

// Send error message - 'Item &1 is a Seaboard Equivalent Item.'
ERROR(USR3085);
MSGPARM(KEY.Item_Code);

QUIT;

ENDIF;

EXECUTE FUNCTION(Rtv MTO Code/SBDEquiv RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1631911;
PARAMETER(KEY.Company_Number);
PARAMETER(KEY.Item_Code);
PARAMETER(LCL.Item_Category_Number_1);
PARAMETER(LCL.Made_to_Order_Code);
PARAMETER(LCL.Seaboard_Equivalent_Item);
PARAMETER(WRK.Item_Category_Type_Number);
PARAMETER(WRK.Item_Category_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(Rtv Item Ctg Type     RT) TYPE(RTVOBJ) FILE(PDJIREP)           AC1632946;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Category_Number_1);
 PARAMETER(DB1.Made_to_Order_Code);
 PARAMETER(PAR.Item_Category_Type_Number);
 PARAMETER(PAR.Item_Category_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF LCL.Item Category Number 1 is Entered
IF LCL.Item_Category_Number_1 <> *ZERO;

// AND LCL.Item Category Code 1 is Entered
AND LCL.Made_to_Order_Code > *BLANK;

CASE;

// IF LCL.Item Category Number 1 NE PAR.Item Category Number 1
IF LCL.Item_Category_Number_1 <> PAR.Item_Category_Number_1;

// OR LCL.Item Category Code 1 NE PAR.Item Category Code 1
OR LCL.Made_to_Order_Code <> PAR.Made_to_Order_Code;

// Send error message - 'Item &1 already assigned to MTO Code &2.'
ERROR(USR3084);
MSGPARM(KEY.Item_Code);
MSGPARM(LCL.Made_to_Order_Code);

ENDIF;

ENDIF;

//?USER: Initialize detail screen (existing record)

CASE;

// IF DTL.Item Category Number 1 is Zero
IF DTL.Item_Category_Number_1 = *ZERO;

// DTL.Item Category Number 1 = PAR.Item Category Number 1
DTL.Item_Category_Number_1 = PAR.Item_Category_Number_1;

// DTL.Item Category Code 1 = PAR.Item Category Code 1
DTL.Made_to_Order_Code = PAR.Made_to_Order_Code;

ENDIF;

//?USER: Validate detail screen fields

CASE;

// IF DTL.Item Code EQ DTL.Seaboard Equivalent Item
IF DTL.Item_Code = DTL.Seaboard_Equivalent_Item;

// Send error message - 'Make To Order Item cannot be a Seaboard Equivelant Item.'
ERROR(USR3086);
MSGPARM(DTL.Seaboard_Equivalent_Item);

ENDIF;

EXECUTE FUNCTION(Rtv MTO Code/SBDEquiv RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1631911;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Seaboard_Equivalent_Item);
PARAMETER(LCL.Item_Category_Number_1);
PARAMETER(LCL.Made_to_Order_Code);
PARAMETER(LCL.Seaboard_Equivalent_Item);
PARAMETER(WRK.Item_Category_Type_Number);
PARAMETER(WRK.Item_Category_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(Rtv Item Ctg Type     RT) TYPE(RTVOBJ) FILE(PDJIREP)           AC1632946;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Category_Number_1);
 PARAMETER(DB1.Made_to_Order_Code);
 PARAMETER(PAR.Item_Category_Type_Number);
 PARAMETER(PAR.Item_Category_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


CASE;

// IF LCL.Item Category Number is Entered
IF LCL.Item_Category_Number <> *ZERO;

// OR LCL.Item Category Code 1 is Entered
OR LCL.Made_to_Order_Code > *BLANK;

// Send error message - 'Seaboard Equivelant Item cannot be a Make To Order Item.'
ERROR(USR3087);
MSGPARM(DTL.Seaboard_Equivalent_Item);

ENDIF;

//?CALC: Detail screen function fields

EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(DTL.Item_Desc_DRV);
PARAMETER(DTL.Seaboard_Equivalent_Item);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?USER: Change DBF record

EXECUTE FUNCTION(Chg MTO Info          CH) TYPE(CHGOBJ) FILE(CABZREP)           AC1631502;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Item_Code);
PARAMETER(DTL.Item_Category_Number_1);
PARAMETER(DTL.Made_to_Order_Code);
PARAMETER(DTL.Seaboard_Equivalent_Item);

