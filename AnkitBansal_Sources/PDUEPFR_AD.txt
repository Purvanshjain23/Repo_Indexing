// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PDUEPFR
// ?Date: 14.08.2025 Time: 12:04:33
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


// WRK.USR Display field = CND.no
WRK.USR_Display_field = 'N';

// LCL.Print (Yes/No) USR = CND.Yes
LCL.Print_Yes_No_USR = 'Y';

// LCL.USR Display 5 = CND.No
LCL.USR_Display_5 = 'N';

//?***** Change Log and Comments
//?*****
//?** 04/24/2015 LJB E004076
//?** Pass out display flag = N if no records were printed so carrier
//?** won't be emailed an empty report from job scheduler job.
//?*****
//?** 03/05/2015 LJB E003914
//?** If carrier is passed in then select matching, else select all
//?** 08/25/2022 EL 92536 - Clear/Create DBF to send Excel
//?USER: Record selection processing

//?* Select by company
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

// AND PAR.Company Number NE DB1.Company Number
AND PAR.Company_Number <> DB1.Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?* Select by carrier
CASE;

// IF PAR.Carrier Code is entered
IF PAR.Carrier_Code <> *BLANK;

// AND DB1.Carrier Code NE PAR.Carrier Code
AND DB1.Carrier_Code <> PAR.Carrier_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

// TOP.Company Number = PAR.Company Number
TOP_Company_Number = PAR.Company_Number;

// TOP.Carrier Code Usr = PAR.Carrier Code
TOP_Carrier_Code_Usr = PAR.Carrier_Code;

//?* Put company name on the report
CASE;

// IF PAR.Company Number is greater than zero
IF PAR.Company_Number > *ZERO;

EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
PARAMETER(TOP_Company_Number);
PARAMETER(TOP_Company_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?* Put company name on the report
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Company Name = CON.*ALL
TOP_Company_Name = *ALL;

ENDIF;

//?* Put carrier name on the report             E003914
CASE;

// IF TOP.Carrier Code Usr is entered
IF TOP_Carrier_Code_Usr <> *BLANK;

EXECUTE FUNCTION(RTV Active Carr Name   RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1447369;
PARAMETER(TOP_Carrier_Code_Usr);
PARAMETER(TOP_Carrier_Name_50A);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


//?* Put carrier name on the report             E003914
// IF *OTHERWISE
IF *OTHERWISE;

// TOP.Carrier Name 50A = CON.*ALL
TOP_Carrier_Name_50A = *ALL;

ENDIF;

//?USER: Null report processing

// Execute function CLC Set for Null Rpt   US.
EXECUTE FUNCTION(CLC Set for Null Rpt   US) TYPE(EXCUSRSRC) ('PDUUUFR');
{
 C                     MOVEL'Y'       W0AP1P
 C                     MOVEL'Y'       W0NEWP
}


// WRK.USR Display field = CND.yes
WRK.USR_Display_field = 'Y';

//?USER: Print required level headings

// SUPPRESSED PRINT Carrier Code header format

CASE;

IF NEW Scheduled_Ship_Date;
// SUPPRESSED PRINT Scheduled Ship Date header format

ENDIF;

//?USER: On print of detail format

// LCL.Print (Yes/No) USR = CND.No
LCL.Print_Yes_No_USR = 'N';

//?C3728 pll 2/3/98 shortened time flds to make room for trailer id (8)
// CUR.Deadline Depart Time 4,0 = CUR.Deadline Departure Time / CON.100 *
CUR.Deadline_Depart_Time_40 = CUR.Deadline_Departure_Time / 100;

// CUR.Load Finished Time HHMM = CUR.Load Finished Time / CON.100 *
CUR.Load_Finished_Time_HHMM = CUR.Load_Finished_Time / 100;

// CUR.BOL Complete Time,4.0 USR = CUR.BOL Complete Time / CON.100 *
CUR.BOL_Complete_Time4_0_USR = CUR.BOL_Complete_Time / 100;

EXECUTE FUNCTION(RTV Active Carr Name   RT) TYPE(RTVOBJ) FILE(OMFFREP)          AC1447369;
PARAMETER(CUR.Carrier_Code);
PARAMETER(CUR.Blank_for_4_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PGM.*Return code = CND.*Normal
 PGM.*Return_code = *BLANK;

}


// CUR.Trailer ID USR = CUR.Trailer Id
CUR.Trailer_ID_USR = CUR.Trailer_Id;

//?Accumulate total loads not picked up
// PAR.USR Total Number Records = PAR.USR Total Number Records + CON.1
PAR.USR_Total_Number_Records = PAR.USR_Total_Number_Records + 1;

EXECUTE FUNCTION(RTV Last Stop Consign  RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1377331;
PARAMETER(CUR.Load_ID);
PARAMETER(WRK.Ship_To_Customer);
PARAMETER(CUR.Ship_To_Name);
PARAMETER(WRK.Ship_To_Address_Line_1);
PARAMETER(WRK.Ship_To_Address_Line_2);
PARAMETER(WRK.Ship_To_Address_Line_3);
PARAMETER(CUR.Ship_To_City);
PARAMETER(CUR.Ship_To_State_Code);
PARAMETER(WRK.Ship_To_Zip_Postal_Code);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(RTV for B.O.L. Print   RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1377319;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Ship_To_Customer);
 PARAMETER(PAR.Ship_To_Name);
 PARAMETER(PAR.Ship_To_Address_Line_1);
 PARAMETER(PAR.Ship_To_Address_Line_2);
 PARAMETER(PAR.Ship_To_Address_Line_3);
 PARAMETER(PAR.Ship_To_City);
 PARAMETER(PAR.Ship_To_State_Code);
 PARAMETER(PAR.Ship_To_Zip_Postal_Code);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.TXT_field_not_needed);
 PARAMETER(WRK.Numeric_Field_Not_Needed);
 PARAMETER(WRK.Numeric_Field_Not_Needed);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


EXECUTE FUNCTION(RTV First Stop Dlvr Dt RT) TYPE(RTVOBJ) FILE(OMFLCPP)          AC1450684;
PARAMETER(CUR.Load_ID);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Delivery_Date);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv Delivery Date     RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC1409517;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(PAR.Appointment_Confirm_Date);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 QUIT;

}


//?** Use override miles if entered                E00207
CASE;

// IF DB1.Override Total Load Miles is Entered
IF DB1.Override_Total_Load_Miles <> *ZERO;

// CUR.Total Load Miles = DB1.Override Total Load Miles
CUR.Total_Load_Miles = DB1.Override_Total_Load_Miles;

//?** Use override miles if entered                E00207
// IF *OTHERWISE
IF *OTHERWISE;

// CUR.Total Load Miles = DB1.Total Load Miles
CUR.Total_Load_Miles = DB1.Total_Load_Miles;

ENDIF;

// LCL.USR Display 5 = CND.Yes
LCL.USR_Display_5 = 'Y';

EXECUTE FUNCTION(RTV/CRT Load Ld Not PU) TYPE(RTVOBJ) FILE(PUCLCPP)             AC2208410;
PARAMETER(CUR.Load_ID);
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Ship_To_Name);
PARAMETER(CUR.Ship_To_City);
PARAMETER(CUR.Ship_To_State_Code);
PARAMETER(CUR.Trailer_ID_USR);
PARAMETER(CUR.Scheduled_Ship_Date);
PARAMETER(CUR.Deadline_Departure_Date);
PARAMETER(CUR.Deadline_Departure_Time);
PARAMETER(CUR.Delivery_Date);
PARAMETER(CUR.Total_Load_Miles);
PARAMETER(CUR.Load_Finished_Date);
PARAMETER(CUR.Load_Finished_Time);
PARAMETER(CUR.BOL_Complete_Date);
PARAMETER(CUR.BOL_Complete_Time);
PARAMETER(CUR.Blank_for_4_USR);
PARAMETER(CUR.Carrier_Code);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 // LCL.@Numeric 6,0 = PAR.Sch Ship Date 6.0
 LCL.@Numeric_60 = PAR.Sch_Ship_Date_6_0;

 // LCL.Date (Char-6) USR = CVTVAR(LCL.@Numeric 6,0)
 LCL.Date_Char_6_USR = CVTVAR(LCL.@Numeric_60);

 // LCL.Year Alpha (YY) USR = SUBSTRING(LCL.Date (Char-6) USR,CON.1,CON.2)
 LCL.Year_Alpha_YY_USR = SUBSTRING(LCL.Date_Char_6_USR:1:2);

 // LCL.MMDD (4A) Usr = SUBSTRING(LCL.Date (Char-6) USR,CON.3,CON.4)
 LCL.MMDD_4A_Usr = SUBSTRING(LCL.Date_Char_6_USR:3:4);

 // LCL.Date (Char-6) USR = CONCAT(LCL.MMDD (4A) Usr,LCL.Year Alpha (YY) USR,CON.*ZERO)
 LCL.Date_Char_6_USR = LCL.MMDD_4A_Usr + LCL.Year_Alpha_YY_USR (*ZERO);

 // LCL.Sch Ship Date 6.0 = CVTVAR(LCL.Date (Char-6) USR)
 LCL.Sch_Ship_Date_6_0 = CVTVAR(LCL.Date_Char_6_USR);

 // LCL.@Numeric 6,0 = PAR.Deadline Dep Date 6.0
 LCL.@Numeric_60 = PAR.Deadline_Dep_Date_6_0;

 // LCL.Date (Char-6) USR = CVTVAR(LCL.@Numeric 6,0)
 LCL.Date_Char_6_USR = CVTVAR(LCL.@Numeric_60);

 // LCL.Year Alpha (YY) USR = SUBSTRING(LCL.Date (Char-6) USR,CON.1,CON.2)
 LCL.Year_Alpha_YY_USR = SUBSTRING(LCL.Date_Char_6_USR:1:2);

 // LCL.MMDD (4A) Usr = SUBSTRING(LCL.Date (Char-6) USR,CON.3,CON.4)
 LCL.MMDD_4A_Usr = SUBSTRING(LCL.Date_Char_6_USR:3:4);

 // LCL.Date (Char-6) USR = CONCAT(LCL.MMDD (4A) Usr,LCL.Year Alpha (YY) USR,CON.*ZERO)
 LCL.Date_Char_6_USR = LCL.MMDD_4A_Usr + LCL.Year_Alpha_YY_USR (*ZERO);

 // LCL.Deadline Dep Date 6.0 = CVTVAR(LCL.Date (Char-6) USR)
 LCL.Deadline_Dep_Date_6_0 = CVTVAR(LCL.Date_Char_6_USR);

 // LCL.@Numeric 6,0 = PAR.Delivery Dt 6.0
 LCL.@Numeric_60 = PAR.Delivery_Dt_6_0;

 // LCL.Date (Char-6) USR = CVTVAR(LCL.@Numeric 6,0)
 LCL.Date_Char_6_USR = CVTVAR(LCL.@Numeric_60);

 // LCL.Year Alpha (YY) USR = SUBSTRING(LCL.Date (Char-6) USR,CON.1,CON.2)
 LCL.Year_Alpha_YY_USR = SUBSTRING(LCL.Date_Char_6_USR:1:2);

 // LCL.MMDD (4A) Usr = SUBSTRING(LCL.Date (Char-6) USR,CON.3,CON.4)
 LCL.MMDD_4A_Usr = SUBSTRING(LCL.Date_Char_6_USR:3:4);

 // LCL.Date (Char-6) USR = CONCAT(LCL.MMDD (4A) Usr,LCL.Year Alpha (YY) USR,CON.*ZERO)
 LCL.Date_Char_6_USR = LCL.MMDD_4A_Usr + LCL.Year_Alpha_YY_USR (*ZERO);

 // LCL.Delivery Dt 6.0 = CVTVAR(LCL.Date (Char-6) USR)
 LCL.Delivery_Dt_6_0 = CVTVAR(LCL.Date_Char_6_USR);

 // LCL.@Numeric 6,0 = PAR.Load Finished Date 6.0
 LCL.@Numeric_60 = PAR.Load_Finished_Date_6_0;

 // LCL.Date (Char-6) USR = CVTVAR(LCL.@Numeric 6,0)
 LCL.Date_Char_6_USR = CVTVAR(LCL.@Numeric_60);

 // LCL.Year Alpha (YY) USR = SUBSTRING(LCL.Date (Char-6) USR,CON.1,CON.2)
 LCL.Year_Alpha_YY_USR = SUBSTRING(LCL.Date_Char_6_USR:1:2);

 // LCL.MMDD (4A) Usr = SUBSTRING(LCL.Date (Char-6) USR,CON.3,CON.4)
 LCL.MMDD_4A_Usr = SUBSTRING(LCL.Date_Char_6_USR:3:4);

 // LCL.Date (Char-6) USR = CONCAT(LCL.MMDD (4A) Usr,LCL.Year Alpha (YY) USR,CON.*ZERO)
 LCL.Date_Char_6_USR = LCL.MMDD_4A_Usr + LCL.Year_Alpha_YY_USR (*ZERO);

 // LCL.Load Finished Date 6.0 = CVTVAR(LCL.Date (Char-6) USR)
 LCL.Load_Finished_Date_6_0 = CVTVAR(LCL.Date_Char_6_USR);

 // LCL.@Numeric 6,0 = PAR.BOL Complete Date 6.0
 LCL.@Numeric_60 = PAR.BOL_Complete_Date_6_0;

 // LCL.Date (Char-6) USR = CVTVAR(LCL.@Numeric 6,0)
 LCL.Date_Char_6_USR = CVTVAR(LCL.@Numeric_60);

 // LCL.Year Alpha (YY) USR = SUBSTRING(LCL.Date (Char-6) USR,CON.1,CON.2)
 LCL.Year_Alpha_YY_USR = SUBSTRING(LCL.Date_Char_6_USR:1:2);

 // LCL.MMDD (4A) Usr = SUBSTRING(LCL.Date (Char-6) USR,CON.3,CON.4)
 LCL.MMDD_4A_Usr = SUBSTRING(LCL.Date_Char_6_USR:3:4);

 // LCL.Date (Char-6) USR = CONCAT(LCL.MMDD (4A) Usr,LCL.Year Alpha (YY) USR,CON.*ZERO)
 LCL.Date_Char_6_USR = LCL.MMDD_4A_Usr + LCL.Year_Alpha_YY_USR (*ZERO);

 // LCL.BOL Complete Date 6.0 = CVTVAR(LCL.Date (Char-6) USR)
 LCL.BOL_Complete_Date_6_0 = CVTVAR(LCL.Date_Char_6_USR);

 EXECUTE FUNCTION(Create Load Loaded Not PU) TYPE(CRTOBJ) FILE(PUCLCPP)          AC2208406;
 PARAMETER(PAR.Load_ID);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Ship_To_Name);
 PARAMETER(PAR.Ship_To_City);
 PARAMETER(PAR.Ship_To_State_3A);
 PARAMETER(PAR.Trailer_ID_USR);
 PARAMETER(LCL.Sch_Ship_Date_6_0);
 PARAMETER(LCL.Deadline_Dep_Date_6_0);
 PARAMETER(PAR.Deadline_Departure_Time);
 PARAMETER(LCL.Delivery_Dt_6_0);
 PARAMETER(PAR.Total_Load_Miles);
 PARAMETER(LCL.Load_Finished_Date_6_0);
 PARAMETER(PAR.Load_Finished_Time);
 PARAMETER(LCL.BOL_Complete_Date_6_0);
 PARAMETER(PAR.BOL_Complete_Time);
 PARAMETER(PAR.Carrier_Desc_4A);
 PARAMETER(PAR.Carrier_Code);
 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

}


//?PRTOBJ calls after print of detail format

//?Embedded PRTOBJ : PRT Print Traffic Cmts PO
EXECUTE FUNCTION(PRT Print Traffic Cmts PO) TYPE(PRTOBJ);
PARAMETER(NXT.Company_Number);
PARAMETER(CUR.Load_ID);

//?Embedded PRTOBJ : PRT Blank Line         PO
EXECUTE FUNCTION(PRT Blank Line         PO) TYPE(PRTOBJ);
PARAMETER(NXT.Company_Number);

//?USER: Print required level totals

CASE;

IF NEW Scheduled_Ship_Date;
// SUPPRESSED PRINT Scheduled Ship Date totals format

// NXT.USR Total Number Records = NXT.USR Total Number Records + CUR.USR Total Numb
NXT.USR_Total_Number_Records = NXT.USR_Total_Number_Records                                        +
+ CUR.USR_Total_Number_Records;

// CUR.USR Total Number Records = CND.Not Entered
CUR.USR_Total_Number_Records = *ZERO;

ENDIF;

CASE;

IF NEW Carrier_Code;
// CUR.USR Total Number Records = PAR.USR Total Number Records
CUR.USR_Total_Number_Records = PAR.USR_Total_Number_Records;

// Print Carrier Code totals format
PRINT Carrier Code totals format;

// NXT.USR Total Number Records = NXT.USR Total Number Records + CUR.USR Total Number Records
NXT.USR_Total_Number_Records = NXT.USR_Total_Number_Records                                        +
+ CUR.USR_Total_Number_Records;

// PAR.USR Total Number Records = CND.Not Entered
PAR.USR_Total_Number_Records = *ZERO;

ENDIF;

//?USER: On print of end of report format

//?* If no records printed, flag to not email to carrier  E004076
CASE;

// IF LCL.USR Display 5 is Yes
IF LCL.USR_Display_5 = 'Y';

// PAR.USR Display 1 = CND.Yes
PAR.USR_Display_1 = 'Y';

//?* If no records printed, flag to not email to carrier  E004076
// IF *OTHERWISE
IF *OTHERWISE;

// PAR.USR Display 1 = CND.No
PAR.USR_Display_1 = 'N';

ENDIF;

