// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKAHDFR
// ?Date: 14.08.2025 Time: 02:48:43
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.PPWS_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// PAR.PRT Night Queue Run Sts = CND.No
PAR.PRT_Night_Queue_Run_Sts = 'N';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// CTL.PPWS Company Number = WRK.PPWS Company Number
CTL.PPWS_Company_Number = WRK.PPWS_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(CTL.PPWS_Company_Number);
PARAMETER(CTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?USER: Initialize subfile record from DBF record

EXECUTE FUNCTION(Rtv Week Start & End  RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1106497;
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.Week_Start_USR);
PARAMETER(RCD.Week_End_USR);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Planned Kill      RT) TYPE(RTVOBJ) FILE(PKAOCPP)           AB1101354;
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.Week_Start_USR);
PARAMETER(RCD.Planned_Kill_USR);
PARAMETER(RCD.Week_End_USR);
{
 //?USER: Initialize routine

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.KP_Planned_Kill = *ZERO;

 //?USER: Process Data record

 CASE;

 // IF DB1.KP Kill Date LE PAR.CW Week End Date
 IF DB1.KP_Kill_Cut_Date <= PAR.CW_Week_End_Date;

 // AND DB1.KP Kill Date GE PAR.KP Kill Date
 AND DB1.KP_Kill_Cut_Date >= PAR.KP_Kill_Cut_Date;

 // PAR.KP Plan Head = PAR.KP Plan Head + DB1.KP Plan Head
 PAR.KP_Planned_Kill = PAR.KP_Planned_Kill + DB1.KP_Planned_Kill;

 // IF *OTHERWISE
 IF *OTHERWISE;

 QUIT;

 ENDIF;

}


EXECUTE FUNCTION(Surplus/Shortage DRV) TYPE(DRVFLD)                             AB1100490;
PARAMETER(RCD.Surplus_Shortage_DRV);
PARAMETER(RCD.PPWS_Plan_Head);
PARAMETER(RCD.Planned_Kill_USR);
{
 //?Calculate derived field

 // PAR.Surplus/Shortage DRV = PAR.Purch Pln Head Owned - PAR.Planned Kill USR
 PAR.Surplus_Shortage_DRV = PAR.PPWS_Plan_Head - PAR.Planned_Kill_USR;

}


CASE;

// IF CTL.PPWS Company Number is Greater Then *zero
IF CTL.PPWS_Company_Number > *ZERO;

CASE;

// IF RCD.PPWS Company Number NE CTL.PPWS Company Number
IF RCD.PPWS_Company_Number <> CTL.PPWS_Company_Number;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?CALC: Subfile control function fields

EXECUTE FUNCTION(Surplus/Shortage DRV) TYPE(DRVFLD)                             AB1100490;
PARAMETER(CTL.Surplus_Shortage_DRV);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
{
 //?Calculate derived field

 // PAR.Surplus/Shortage DRV = PAR.Purch Pln Head Owned - PAR.Planned Kill USR
 PAR.Surplus_Shortage_DRV = PAR.PPWS_Plan_Head - PAR.Planned_Kill_USR;

}


//?USER: Process subfile control (Pre-confirm)

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'Y';

//?F5 Refresh
CASE;

// IF CTL.*CMD key is Refresh
IF CTL.*CMD_key = '05';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?Option 6=Print
CASE;

// IF RCD.*SFLSEL is *Print
IF RCD.*SFLSEL = '6';

//?Print Options Prompt
CASE;

// IF WRK.Display Print Prompt  Usr is Prompt is to be displayed
IF WRK.Display_Print_Prompt_Usr = 'Y';

// Call program Pmt Print Options     XF.
CALL PROGRAM(Pmt Print Options     XF) ('PDG0PVR');
PARAMETER('Purchase Plan');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER('P/S');

// WRK.Display Print Prompt  Usr = CND.Do not display prompt
WRK.Display_Print_Prompt_Usr = 'N';

ENDIF;

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// Execute command - 'SBM Prt Purchase Plan'
EXECUTE COMMAND(PRK0291);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

ENDIF;

//?Option 7=Generate Purchase Plan PRE CONFIRM
CASE;

// IF RCD.*SFLSEL is Select Option 7
IF RCD.*SFLSEL = '7'/'7';

CASE;

// IF RCD.PPWS Plan Head NE WRK.Zero USR
IF RCD.PPWS_Plan_Head <> WRK.Zero_USR;

// Send error message - 'Buy orders exist for kill year/week &1 &2.  Plan cannot be created.'
ERROR(PRK0256);
MSGPARM(RCD.CW_Year);
MSGPARM(RCD.CW_Week_Number);

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF RCD.PPWS Sts is Plan Submitted
IF RCD.PPWS_Sts = 'S';

// Send error message - 'Purchase Plan for week &1 has already been submitted.'
ERROR(PRK0280);
MSGPARM(RCD.CW_Week_Number);

QUIT;

ENDIF;

ENDIF;

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Defer_confirm = 'N';

ENDIF;

//?Option 8=WW Prdcr Purch Plan
CASE;

// IF RCD.*SFLSEL is Select Option 8
IF RCD.*SFLSEL = '8'/'8';

// Call program ZzzPrdcr Purch Plan   ET.
CALL PROGRAM(ZzzPrdcr Purch Plan   ET) ('PKAIETR');
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);

EXECUTE FUNCTION(Surplus/Shortage DRV) TYPE(DRVFLD)                             AB1100490;
PARAMETER(RCD.Surplus_Shortage_DRV);
PARAMETER(RCD.PPWS_Plan_Head);
PARAMETER(RCD.Planned_Kill_USR);
{
 //?Calculate derived field

 // PAR.Surplus/Shortage DRV = PAR.Purch Pln Head Owned - PAR.Planned Kill USR
 PAR.Surplus_Shortage_DRV = PAR.PPWS_Plan_Head - PAR.Planned_Kill_USR;

}


// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Final processing (Pre-confirm)

// *MO.VE             1183529*Bu = ilt. in functions
WRK.Display_Print_Prompt_Usr = 'Y';

//?USER: Process subfile record (Post-confirm)

//?Option 7=Generate Purchase Plan POST CONFIRM
CASE;

// IF RCD.*SFLSEL is Select Option 7
IF RCD.*SFLSEL = '7'/'7';

// *MO.VE             1183529*Bu = ilt. in functions
RCD.PPWS_Sts = 'S';

EXECUTE FUNCTION(Rtv/Chg Purch Pln Wk  RT) TYPE(RTVOBJ) FILE(PKAUCPP)           AB1122901;
PARAMETER(RCD.PPWS_Company_Number);
PARAMETER(RCD.CW_Year);
PARAMETER(RCD.CW_Week_Number);
PARAMETER(RCD.PPWS_Plan_Head);
PARAMETER(RCD.PPWS_Sts);
{
 //?USER: Process Data record

 // PAR.PPWS Plan Head = PAR.PPWS Plan Head + DB1.PPWS Plan Head
 PAR.PPWS_Plan_Head = PAR.PPWS_Plan_Head + DB1.PPWS_Plan_Head;

 EXECUTE FUNCTION(Chg Purchase Plan Wk  CH) TYPE(CHGOBJ) FILE(PKAUCPP)           AB1100448;
 PARAMETER(DB1.PPWS_Company_Number);
 PARAMETER(DB1.CW_Year);
 PARAMETER(DB1.CW_Week_Number);
 PARAMETER(DB1.PPWS_Head_Est);
 PARAMETER(PAR.PPWS_Plan_Head);
 PARAMETER(PAR.PPWS_Sts);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

 }

}


// WRK.Company Number Alpha Usr = CVTVAR(RCD.PPWS Company Number)
WRK.Company_Number_Alpha_Usr = CVTVAR(RCD.PPWS_Company_Number);

// WRK.Year Alpha Usr = CVTVAR(RCD.CW Year)
WRK.Year_Alpha_Usr = CVTVAR(RCD.CW_Year);

// WRK.Week Number Alpha Usr = CVTVAR(RCD.CW Week Number)
WRK.Week_Number_Alpha_Usr = CVTVAR(RCD.CW_Week_Number);

// WRK.Date Alpha USR = CVTVAR(RCD.Week Start USR)
WRK.Date_Alpha_USR = CVTVAR(RCD.Week_Start_USR);

// Execute command - 'SBM Gen Purchase Plan'
EXECUTE COMMAND(PRK0281);
PARAMETER(WRK.Company_Number_Alpha_Usr);
PARAMETER(WRK.Year_Alpha_Usr);
PARAMETER(WRK.Week_Number_Alpha_Usr);
PARAMETER(WRK.Date_Alpha_USR);

// *MO.VE             1183529*Bu = ilt. in functions
PGM.*Reload_subfile = 'Y';

ENDIF;

