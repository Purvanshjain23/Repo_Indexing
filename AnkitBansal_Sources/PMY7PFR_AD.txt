// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMY7PFR
// ?Date: 14.08.2025 Time: 12:05:52
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// PAR.Application Code = CND.Order Management System
PAR.Application_Code = 'OMS';

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER(PAR.Application_Code);
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


CASE;

// IF PAR.From Date             USR is Entered
IF PAR.From_Date_USR <> *ZERO;

// PAR.Print Selections = CND.Yes
PAR.Print_Selections = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Print Selections = CND.No
PAR.Print_Selections = 'N';

ENDIF;

//?USER: Record selection processing

CASE;

// IF PAR.From Date             USR is Entered
IF PAR.From_Date_USR <> *ZERO;

// AND PAR.To Date               USR is Entered
AND PAR.To_Date_USR <> *ZERO;

//?Select Orders within Scheduled Ship Date Range.
CASE;

// IF DB1.Actual Shipped Date GE PAR.From Date             USR
IF DB1.Actual_Shipped_Date >= PAR.From_Date_USR;

// AND DB1.Actual Shipped Date LE PAR.To Date               USR
AND DB1.Actual_Shipped_Date <= PAR.To_Date_USR;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

CASE;

// IF DB1.Order Type - Sales is Regular Order
IF DB1.Order_Type_Sales = 'OR';

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

CASE;

// IF DB1.Company Number is St. Joseph
IF DB1.Company_Number = 960;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

//?USER: Process top of page

CASE;

// IF PAR.Print Selections is Yes
IF PAR.Print_Selections = 'Y';

//?Load Selection Fields.
// TOP.From Date             USR = PAR.From Date             USR
TOP_From_Date_USR = PAR.From_Date_USR;

// TOP.To Date               USR = PAR.To Date               USR
TOP_To_Date_USR = PAR.To_Date_USR;

ENDIF;

//?USER: On print of first page format

// PAR.Print Selections = CND.No
PAR.Print_Selections = 'N';

//?USER: Print required level headings

CASE;

IF NEW AR_Customer_Number;
EXECUTE FUNCTION(RTV Name RT) TYPE(RTVOBJ) FILE(CABBREP)                        AC1546878;
PARAMETER(CUR.AR_Customer_Number);
PARAMETER(CUR.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// Print A/R Customer Number header format
PRINT A/R Customer Number header format;

ENDIF;

// SUPPRESSED PRINT Load ID header format

// SUPPRESSED PRINT Order Number header format

//?USER: On print of detail format

EXECUTE FUNCTION(RTV Name RT) TYPE(RTVOBJ) FILE(CABBREP)                        AC1546878;
PARAMETER(CUR.AR_Customer_Number);
PARAMETER(CUR.Customer_Name);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(RTV Order Country     RT) TYPE(RTVOBJ) FILE(OPBGWKP)           AC1546891;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(CUR.Country_Code);
{
 //?USER: Initialize routine

 //?Template version identifier - Edit to reflect current version.
 //?Template version identifier - Edit to reflect current version.
 EXECUTE FUNCTION(@Template Version) TYPE(EXCINTFUN)                             AC1523909;
 PARAMETER('1');
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(RTV Weight Shipped Tot RT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1574424;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Order_Number);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(CUR.Order_Value_Total);
{
 //?USER: Initialize routine

 // PAR.USR Weight   9.1  3 = CON.*ZERO
 PAR.USR_Weight_9_1_3 = *ZERO;

 //?USER: Process Data record

 // PAR.USR Weight   9.1  3 = PAR.USR Weight   9.1  3 + DB1.Weight Shipped Total
 PAR.USR_Weight_9_1_3 = PAR.USR_Weight_9_1_3 + DB1.Weight_Shipped_Total;

}


CASE;

// IF CUR.Load ID NE LCL.Load ID
IF CUR.Load_ID <> LCL.Load_ID;

// LCL.Count Records        USR = LCL.Count Records        USR + CON.1
LCL.Count_Records_USR = LCL.Count_Records_USR + 1;

// LCL.Load ID = CUR.Load ID
LCL.Load_ID = CUR.Load_ID;

ENDIF;

//?USER: Process after print of detail format

NXT.Order_Value_Total_SUM = SUM(CUR.Order_Value_Total);

//?USER: Print required level totals

// SUPPRESSED PRINT Order Number totals format

// SUPPRESSED PRINT Load ID totals format

CASE;

IF NEW AR_Customer_Number;
// CUR.Count Records        USR = LCL.Count Records        USR
CUR.Count_Records_USR = LCL.Count_Records_USR;

// Print A/R Customer Number totals format
PRINT A/R Customer Number totals format;

NXT.Order_Value_Total_SUM = SUM(CUR.Order_Value_Total_SUM);

// LCL.Count Export Loads USR = LCL.Count Export Loads USR + LCL.Count Records        USR
LCL.Count_Export_Loads_USR = LCL.Count_Export_Loads_USR + LCL.Count_Records_USR;

// LCL.Count Records        USR = CON.*ZERO
LCL.Count_Records_USR = *ZERO;

ENDIF;

//?USER: On print of final totals format

// CUR.Count Export Loads USR = LCL.Count Export Loads USR
CUR.Count_Export_Loads_USR = LCL.Count_Export_Loads_USR;

