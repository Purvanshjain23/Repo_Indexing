// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKSNXFR
// ?Date: 14.08.2025 Time: 02:52:39
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MODIFICATIONS
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
// WRK.Hot Wgt Usr = PAR.ET Hot Wgt
WRK.Hot_Wgt_Usr = PAR.ET_Hot_Wgt;

// Call program Zzz Inches to MM      XF.
CALL PROGRAM(Zzz Inches to MM      XF) ('PKQQXFR');
PARAMETER(PAR.TH_Avg_Backfat);
PARAMETER(PAR.TH_Avg_Loin_Eye_Depth);
PARAMETER(WRK.Backfat_USR);
PARAMETER(WRK.Loin_Eye_USR);

EXECUTE FUNCTION(Chg Eval Trans W/Avg IF) TYPE(EXCINTFUN)                       AB1135014;
PARAMETER(PAR.ET_Company_Number);
PARAMETER(PAR.ET_Kill_Date);
PARAMETER(PAR.ET_Scale_Sequence_Number);
PARAMETER(PAR.ET_Carcass_Number);
PARAMETER(PAR.ET_Carcass_Number_Insert);
PARAMETER(PAR.ET_Tattoo_Number);
PARAMETER(PAR.ET_Lot);
PARAMETER(PAR.ET_Shift);
PARAMETER(WRK.Hot_Wgt_Usr);
PARAMETER(PAR.TH_Avg_Backfat);
PARAMETER(PAR.TH_Avg_Loin_Eye_Depth);
PARAMETER(PAR.ET_Lean_Percent_NPPC);
PARAMETER(WRK.Backfat_USR);
PARAMETER(WRK.Loin_Eye_USR);
PARAMETER(PAR.ET_Light_Reflectance_MM);
PARAMETER(PAR.ET_Lean_Percent_FOM);
PARAMETER(PAR.ET_Light_Reflectance);
PARAMETER(PAR.ET_Trim_Area);
PARAMETER(PAR.ET_Carcass_Sex);
PARAMETER(PAR.ET_Error_Sts);
PARAMETER(PAR.ET_Record_Add_Del_Sts);
PARAMETER(PAR.ET_Record_Created_W_Avg);
PARAMETER(PAR.ET_Record_Created_Status);
PARAMETER(PAR.ET_User_Error_Override);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.RS_User_Changed);
PARAMETER(PAR.RS_Date_Changed);
PARAMETER(PAR.RS_Time_Changed);
PARAMETER(PAR.RS_Record_Status);
PARAMETER(PAR.RS_Job);
PARAMETER(PAR.RS_Program);
PARAMETER(PAR.RS_User_Added);
PARAMETER(PAR.RS_Date_Added);
PARAMETER(PAR.RS_Time_Added);
PARAMETER(PAR.RU_Date);
PARAMETER(PAR.RU_Time);
PARAMETER(WRK.@Status_Yes_No);
{
 //?Execute internal function

 CASE;

 // IF PAR.ET Carcass Number is 700000 - 799999
 IF PAR.ET_Carcass_Number >= 700000;
 AND PAR.ET_Carcass_Number <= 799999;

 //?Record has alread been changed do not assign new carcass #
 //?Perform regular change
 EXECUTE FUNCTION(Chg Evaluation Trans  CH) TYPE(CHGOBJ) FILE(PKBVCPP)           AB1127890;
 PARAMETER(PAR.ET_Company_Number);
 PARAMETER(PAR.ET_Kill_Date);
 PARAMETER(PAR.ET_Scale_Sequence_Number);
 PARAMETER(PAR.ET_Carcass_Number);
 PARAMETER(PAR.ET_Carcass_Number_Insert);
 PARAMETER(PAR.ET_Tattoo_Number);
 PARAMETER(PAR.ET_Lot);
 PARAMETER(PAR.ET_Shift);
 PARAMETER(PAR.ET_Hot_Wgt);
 PARAMETER(PAR.ET_Backfat_Thickness_Inch);
 PARAMETER(PAR.ET_Loin_Eye_Depth_Inches);
 PARAMETER(PAR.ET_Lean_Percent_NPPC);
 PARAMETER(PAR.ET_Backfat_Thickness_MM);
 PARAMETER(PAR.ET_Loineye_Depth_MM);
 PARAMETER(PAR.ET_Light_Reflectance_MM);
 PARAMETER(PAR.ET_Lean_Percent_FOM);
 PARAMETER(PAR.ET_Light_Reflectance);
 PARAMETER(PAR.ET_Trim_Area);
 PARAMETER(PAR.ET_Carcass_Sex);
 PARAMETER(PAR.ET_Error_Sts);
 PARAMETER(PAR.ET_Record_Add_Del_Sts);
 PARAMETER(PAR.ET_Record_Created_W_Avg);
 PARAMETER(PAR.ET_Record_Created_Status);
 PARAMETER(PAR.ET_User_Error_Override);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER(PAR.RS_Record_Status);
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 PARAMETER(PAR.RU_Date);
 PARAMETER(PAR.RU_Time);
 PARAMETER(PAR.@Status_Yes_No);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

  //?Record is changed
  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.@Status_Yes_No = 'Y';

 }

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF PAR.ET Record Created W/Avg is Not Created With Average
 IF PAR.ET_Record_Created_W_Avg = *BLANK;

 //?Create a copy of orginal only 1 time
 //?Save orginal records but change status
 // Call program Zzz Eval Trans Rec    XF.
 CALL PROGRAM(Zzz Eval Trans Rec    XF) ('PKO4XFR');
 PARAMETER(PAR.ET_Company_Number);
 PARAMETER(PAR.ET_Kill_Date);
 PARAMETER(PAR.ET_Scale_Sequence_Number);
 PARAMETER(PAR.ET_Carcass_Number);
 PARAMETER(PAR.ET_Carcass_Number_Insert);

 //?Create new carcass with averages key by user and override carcass number
 // WRK.ET Scale Sequence Number = CON.700000 + PAR.ET Scale Sequence Number
 WRK.ET_Scale_Sequence_Number = 700000 + PAR.ET_Scale_Sequence_Number;

 // WRK.ET Carcass Number Usr = CON.700000 + PAR.ET Carcass Number
 WRK.ET_Carcass_Number_Usr = 700000 + PAR.ET_Carcass_Number;

 EXECUTE FUNCTION(Create Evaluation Transac) TYPE(CRTOBJ) FILE(PKBVCPP)          AB1102931;
 PARAMETER(PAR.ET_Company_Number);
 PARAMETER(PAR.ET_Kill_Date);
 PARAMETER(WRK.ET_Scale_Sequence_Number);
 PARAMETER(WRK.ET_Carcass_Number_Usr);
 PARAMETER(PAR.ET_Carcass_Number_Insert);
 PARAMETER(PAR.ET_Tattoo_Number);
 PARAMETER(PAR.ET_Lot);
 PARAMETER(PAR.ET_Shift);
 PARAMETER(PAR.ET_Hot_Wgt);
 PARAMETER(PAR.ET_Backfat_Thickness_Inch);
 PARAMETER(PAR.ET_Loin_Eye_Depth_Inches);
 PARAMETER(PAR.ET_Lean_Percent_NPPC);
 PARAMETER(PAR.ET_Backfat_Thickness_MM);
 PARAMETER(PAR.ET_Loineye_Depth_MM);
 PARAMETER(PAR.ET_Light_Reflectance_MM);
 PARAMETER(PAR.ET_Lean_Percent_FOM);
 PARAMETER(PAR.ET_Light_Reflectance);
 PARAMETER(PAR.ET_Trim_Area);
 PARAMETER(PAR.ET_Carcass_Sex);
 PARAMETER('B');
 PARAMETER(PAR.ET_Record_Add_Del_Sts);
 PARAMETER('C');
 PARAMETER(PAR.ET_Record_Created_Status);
 PARAMETER(PAR.ET_User_Error_Override);
 PARAMETER(PAR.ET_Adjust_Add_Type);
 PARAMETER(PAR.ET_Broken_Back_Sts);
 PARAMETER(PAR.ET_Unused_Sts_2);
 PARAMETER(PAR.ET_Adjust_Add_Source);
 PARAMETER(PAR.ET_Unused_Sts_4);
 PARAMETER(PAR.ET_Unused_Sts_5);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER('A');
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 PARAMETER(PAR.RU_Date);
 PARAMETER(PAR.RU_Time);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(*MISSING);
  PARAMETER(*MISSING);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

 }

 // PAR.@Status (Yes/No) = CND.Yes
 PAR.@Status_Yes_No = 'Y';

 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Chg Evaluation Trans  CH) TYPE(CHGOBJ) FILE(PKBVCPP)           AB1127890;
 PARAMETER(PAR.ET_Company_Number);
 PARAMETER(PAR.ET_Kill_Date);
 PARAMETER(PAR.ET_Scale_Sequence_Number);
 PARAMETER(PAR.ET_Carcass_Number);
 PARAMETER(PAR.ET_Carcass_Number_Insert);
 PARAMETER(PAR.ET_Tattoo_Number);
 PARAMETER(PAR.ET_Lot);
 PARAMETER(PAR.ET_Shift);
 PARAMETER(PAR.ET_Hot_Wgt);
 PARAMETER(PAR.ET_Backfat_Thickness_Inch);
 PARAMETER(PAR.ET_Loin_Eye_Depth_Inches);
 PARAMETER(PAR.ET_Lean_Percent_NPPC);
 PARAMETER(PAR.ET_Backfat_Thickness_MM);
 PARAMETER(PAR.ET_Loineye_Depth_MM);
 PARAMETER(PAR.ET_Light_Reflectance_MM);
 PARAMETER(PAR.ET_Lean_Percent_FOM);
 PARAMETER(PAR.ET_Light_Reflectance);
 PARAMETER(PAR.ET_Trim_Area);
 PARAMETER(PAR.ET_Carcass_Sex);
 PARAMETER('B');
 PARAMETER(PAR.ET_Record_Add_Del_Sts);
 PARAMETER('C');
 PARAMETER(PAR.ET_Record_Created_Status);
 PARAMETER(PAR.ET_User_Error_Override);
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(PAR.BOL_Load_Number);
 PARAMETER(PAR.TH_Tattoo_Number);
 PARAMETER(PAR.TH_Kill_Date);
 PARAMETER(PAR.RS_User_Changed);
 PARAMETER(PAR.RS_Date_Changed);
 PARAMETER(PAR.RS_Time_Changed);
 PARAMETER('A');
 PARAMETER(PAR.RS_Job);
 PARAMETER(PAR.RS_Program);
 PARAMETER(PAR.RS_User_Added);
 PARAMETER(PAR.RS_Date_Added);
 PARAMETER(PAR.RS_Time_Added);
 PARAMETER(PAR.RU_Date);
 PARAMETER(PAR.RU_Time);
 PARAMETER(PAR.@Status_Yes_No);
 {
  //?USER: Processing before Data update

  EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  {
   //?Execute internal function

   // PAR.RS User Changed = JOB.*USER
   PAR.RS_User_Changed = JOB.*USER;

   // PAR.RS Date Changed = JOB.*Job date
   PAR.RS_Date_Changed = JOB.*Job_date;

   // PAR.RS Time Changed = JOB.*Job time
   PAR.RS_Time_Changed = JOB.*Job_time;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

  }

  //?Record is changed
  // *MO.VE             1183529*Bu = ilt. in functions
  PAR.@Status_Yes_No = 'Y';

 }

 ENDIF;

 ENDIF;

}


CASE;

// IF WRK.@Status (Yes/No) is Yes
IF WRK.@Status_Yes_No = 'Y';

// Call program Bal Tattoo W/Kill Edt  XF.
CALL PROGRAM(Bal Tattoo W/Kill Edt  XF) ('PKLHXFR');
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER(PAR.BOH_Company_Number);
PARAMETER(PAR.BOH_Buy_Order_Number);
PARAMETER(PAR.BOL_Load_Number);
PARAMETER(PAR.TH_Tattoo_Number);
PARAMETER(PAR.TH_Kill_Date);
PARAMETER('E');
PARAMETER(PAR.TH_Schedule_Kill_Shift);
PARAMETER('N');
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(*BLANK);

ENDIF;

