     H/TITLE Prt Inv Allocated-Ord PF  Print file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Print report of file contents
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Print file
      *
     H* Company       : OMS Development Model
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 08/01/13  Time  : 10:29:20
     H* Copyright     : OMS Development Model
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FCADNREL2IF  E           K        DISK
      * RSQ : Application               RSQ Application Code
      *
     FPOB5CPL7IF  E           K        DISK
      * RSQ : Order Detail Sched-Inv    Co/Whse/Order/Item
      *
     FCAABREL3IF  E           K        DISK
      * RTV : Company Name and Address  Retrieval index       NV
      *
     FCAADREL3IF  E           K        DISK
      * RTV : Warehouse                 Active records only
      *
     FOPBFCPL1IF  E           K        DISK
      * RTV : Order Header TRG          Retrieval index       NV
      *
     FCABZREL7IF  E           K        DISK
      * RSQ : Company Item              RSQ by Item only      NV
      *
     FPBJEPFR$O   E             97     PRINTER
     F                                              KINFDS INFDS$
      * PRT: Prt Inv Allocated-Ord PF  Print file
      *
     E                    UCT        40  1               CENTER TABLE
     E                    #L3         3  1
     E                    #L7         7  1
      * Long constants
     E                    @CN#    1  02  6   @CN    25
     E                    YDOW        7  1               *Days of week
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
     IINFDS$    E DSY2I$DSP
      * Printer file information data structure
      *
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXD2T        DS
      * Internal date
     I                                        1   70XDINT2
     I                                        1   30XDINY2
     I                                        4   50XDINM2
     I                                        6   70XDIND2
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS
      * FLD: Order Detail Sched-Inv
      * I : RST Company Number
     I                                    P   1   20P1AIC3
      * I : RST Warehouse Code
     I                                        3   5 P1AJCD
     IP2PARM      DS
      * FLD: *Arrays
      * N :  USR Day 1
     I                                    P   1   40P2FFDT
      * N :  USR Day 2
     I                                    P   5   80P2E1DT
      * N :  USR Day 3
     I                                    P   9  120P2E2DT
      * N :  USR Day 4
     I                                    P  13  160P2E3DT
      * N :  USR Day 5
     I                                    P  17  200P2E4DT
      * N :  USR Day 6
     I                                    P  21  240P2E5DT
      * N :  USR Day 7
     I                                    P  25  280P2E6DT
      * N :  USR Day 8
     I                                    P  29  320P2FKDT
      * N :  Day 1 Sales 5,0  USR
     I                                    P  33  350P2GTNX
      * N :  Day 2 Sales 5,0  USR
     I                                    P  36  380P2GUNX
      * N :  Day 3 Sales 5,0  USR
     I                                    P  39  410P2GVNX
      * N :  Day 4 Sales 5,0  USR
     I                                    P  42  440P2GWNX
      * N :  Day 5 Sales 5,0  USR
     I                                    P  45  470P2GXNX
      * N :  Day 6 Sales 5,0  USR
     I                                    P  48  500P2GYNX
      * N :  Day 7 Sales 5,0  USR
     I                                    P  51  530P2GZNX
      * N :  Day 8 Sales 5,0  USR
     I                                    P  54  560P2PQNX
     IP3PARM      DS
      * I :  Ageing Days Usr
     I                                    P   1   30P3B7DY
     IP4PARM      DS
      * I :  USR Display 1
     I                                        1   1 P4TIST
     IP5PARM      DS
      * FLD: *Arrays
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C           P1AIC3    PARM           WP0001  30       Company Number
     C           P1AJCD    PARM           WP0002  3        Warehouse Code
     C           P3B7DY    PARM           WP0003  50       Ageing Days Usr
     C           P4TIST    PARM           WP0004  1        USR Display 1
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Prt Inv Allocated-Ord PF: Mainline
     C                     EXSR A0MAIN
      * Print headers then End of report format
     C                     EXSR Q0PRNT
     C                     WRITE$GENDRPT
      * Exit program
     C                     EXSR ZXEXPG
      * ------------------------------------------------------
      /EJECT
     CSR         A0MAIN    BEGSR
      *================================================================
      * Prt Inv Allocated-Ord PF: Mainline
      *================================================================
      * Declare restrictor key work fields
     C           *LIKE     DEFN B5AIC3    WQKA01           Company Number
     C           *LIKE     DEFN B5AJCD    WQKA02           Warehouse Code
      * Define keylist
     C           KRSA      KLIST
     C                     KFLD           WQKA01           Company Number
     C                     KFLD           WQKA02           Warehouse Code
      * Setup key
     C                     Z-ADDP1AIC3    WQKA01           Company Number
     C                     MOVELP1AJCD    WQKA02           Warehouse Code
      * Establish starting position
     C           KRSA      SETLL@B5CPQU                    *
      * Read first record with user selection
     C                     EXSR A3READ
     C           W0EOFA    IFNE '0'                        IF
     C                     ELSE
      * Request all headings
     C                     MOVEL'Y'       W0AL1P  1        First page
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Warehouse Code
     C                     MOVEL'Y'       W0AL02  1        Order Number
     C                     MOVEL'Y'       W0AL03  1        Item Code
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
      * Print report body
     C           W0EOFA    DOWEQ'0'                        DOW
      * Prepare heading formats for printing
     C                     EXSR A1PHDR
      * Print report detail line
     C                     EXSR A2PDTL
      * Read next record with user selection
     C                     EXSR A3READ
      * Print totals
     C                     EXSR A4PTOT
     C                     END                             WOD
     C                     END                             FI
      *================================================================
     CSR         A0EXIT    ENDSR
      /EJECT
     CSR         A1PHDR    BEGSR
      *================================================================
      * Prepare heading formats for printing
      *================================================================
     C           W0AL1P    IFEQ 'Y'
      * Load key header format
     C                     Z-ADD*ZERO     $BB7DY           Ageing Days Usr
     C                     Z-ADD*ZERO     $BAIC3           Company Number
     C                     MOVEL*BLANK    $BADTX           Name
     C                     MOVEL*BLANK    $BAJCD           Warehouse Code
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP1P  1
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB5AIC3    $CAIC3           Company Number
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
     C                     Z-ADD*ZERO     $CFFDT           USR Day 1
     C                     Z-ADD*ZERO     $CE1DT           USR Day 2
     C                     Z-ADD*ZERO     $CE2DT           USR Day 3
     C                     Z-ADD*ZERO     $CE3DT           USR Day 4
     C                     Z-ADD*ZERO     $CE4DT           USR Day 5
     C                     Z-ADD*ZERO     $CE5DT           USR Day 6
     C                     Z-ADD*ZERO     $CE6DT           USR Day 7
     C                     Z-ADD*ZERO     $CFKDT           USR Day 8
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP00  1
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP01  1
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Load key header format
     C                     Z-ADDB5AIC3    $DAIC3           Company Number
     C                     Z-ADDB5C4NB    $DC4NB           Order Number
     C                     Z-ADD*ZERO     $DRMNB           Load ID
     C                     Z-ADDB5JGDT    $DJGDT           OD Production D
     C                     Z-ADDB5AODT    $DAODT           Scheduled Ship
     C                     MOVELB5AJCD    $DAJCD           Warehouse Code
     C                     Z-ADDB5HGCD    $DHGCD           Item Code
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP02  1
     C                     END
      *
     C           W0AL03    IFEQ 'Y'
      * Load related totals format
     C                     Z-ADDB5AIC3    $FAIC3           Company Number
     C                     MOVEL*BLANK    $FUAT1           Blank for 3
     C                     Z-ADDB5C4NB    $FC4NB           Order Number
     C                     Z-ADD*ZERO     $FRMNB           Load ID
     C                     Z-ADDB5AODT    $FAODT           Scheduled Ship
     C                     Z-ADDB5HGCD    $FHGCD           Item Code
     C                     MOVEL*BLANK    $FPVNA           Item Descriptio
     C                     Z-ADD*ZERO     $FGTNX           Day 1 Sales 5,0
     C                     Z-ADD*ZERO     $FGUNX           Day 2 Sales 5,0
     C                     Z-ADD*ZERO     $FGVNX           Day 3 Sales 5,0
     C                     Z-ADD*ZERO     $FGWNX           Day 4 Sales 5,0
     C                     Z-ADD*ZERO     $FGXNX           Day 5 Sales 5,0
     C                     Z-ADD*ZERO     $FGYNX           Day 6 Sales 5,0
     C                     Z-ADD*ZERO     $FGZNX           Day 7 Sales 5,0
     C                     Z-ADD*ZERO     $FPQNX           Day 8 Sales 5,0
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0AP03  1
     C                     END
      *
      *================================================================
     CSR         A1EXIT    ENDSR
      /EJECT
     CSR         A2PDTL    BEGSR
      *================================================================
      * Process detail record
      *================================================================
      * Load details format
     C                     Z-ADDB5AIC3    $EAIC3           Company Number
     C                     Z-ADDB5C4NB    $EC4NB           Order Number
     C                     Z-ADDB5DPNB    $EDPNB           Order Sequence
     C                     Z-ADDB5UENB    $EUENB           Order Secondary
     C                     Z-ADDB5JGDT    $EJGDT           OD Production D
     C                     Z-ADDB5AODT    $EAODT           Scheduled Ship
     C                     MOVELB5AJCD    $EAJCD           Warehouse Code
     C                     Z-ADDB5HGCD    $EHGCD           Item Code
     C                     Z-ADDB5IUQT    $EIUQT           OD Quantity Inv
     C                     Z-ADDB5F3WG    $EF3WG           OD Weight Inv S
     C                     MOVELB5UVST    $EUVST           EDI Status 1
     C                     MOVELB5UWST    $EUWST           EDI Status 2
     C                     MOVELB5UXST    $EUXST           EDI Status 3
     C                     MOVELB5VSST    $EVSST           Record Status
     C                     Z-ADDB5AATM    $EAATM           Job Time
     C                     MOVELB5AYNA    $EAYNA           User Id
     C                     MOVELB5A0NA    $EA0NA           Job Name
     C                     Z-ADDB5AXDT    $EAXDT           Job Date
      * Signal that format is now ready to print
     C                     MOVE 'Y'       W0APDT  1
      * Call print routine
     C                     EXSR Q0PRNT
      *
      *================================================================
     CSR         A2EXIT    ENDSR
      /EJECT
     CSR         A3READ    BEGSR
      *================================================================
      * Read next record
      *================================================================
      * Hold current values
     C           *LIKE     DEFN B5AIC3    WZA001           Company Number
     C                     Z-ADDB5AIC3    WZA001
     C           *LIKE     DEFN B5AJCD    WZA002           Warehouse Code
     C                     MOVELB5AJCD    WZA002
     C           *LIKE     DEFN B5C4NB    WZA003           Order Number
     C                     Z-ADDB5C4NB    WZA003
     C           *LIKE     DEFN B5HGCD    WZA004           Item Code
     C                     Z-ADDB5HGCD    WZA004
      * Read next record
     C           W0RSL     DOUEQ'Y'                        DOU
     C           W0EOFA    OREQ '1'
     C           KRSA      READE@B5CPQU                  90*
      * Transfer error indicator to EOF flag
     C                     MOVEL*IN90     W0EOFA  1
      * Quit if no record read
     C           W0EOFA    IFNE '1'                        IF
      * Select record unless user action states otherwise
     C                     MOVEL'Y'       W0RSL   1
     C                     END                             FI
     C                     END                             UOD
      *
      * Reset key level breaks
     C                     MOVEL*BLANK    W0AL00  1        Company Number
     C                     MOVEL*BLANK    W0AL01  1        Warehouse Code
     C                     MOVEL*BLANK    W0AL02  1        Order Number
     C                     MOVEL*BLANK    W0AL03  1        Item Code
     C           W0EOFA    IFEQ '1'
      * End of file - Signal all level breaks
     C                     MOVEL'Y'       W0AL00  1        Company Number
     C                     MOVEL'Y'       W0AL01  1        Warehouse Code
     C                     MOVEL'Y'       W0AL02  1        Order Number
     C                     MOVEL'Y'       W0AL03  1        Item Code
     C                     ELSE
      * Next record - Detect level breaks
     C           B5AIC3    IFNE WZA001                     Company Number
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL00
     C                     END
     C           B5AJCD    IFNE WZA002                     Warehouse Code
     C           W0AL00    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL01
     C                     END
     C           B5C4NB    IFNE WZA003                     Order Number
     C           W0AL01    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL02
     C                     END
     C           B5HGCD    IFNE WZA004                     Item Code
     C           W0AL02    OREQ 'Y'
      * Set on level break indicator
     C                     MOVEL'Y'       W0AL03
     C                     END
     C                     END
      *================================================================
     CSR         A3EXIT    ENDSR
      /EJECT
     CSR         A4PTOT    BEGSR
      *================================================================
      * Print report Totals
      *================================================================
      * Print level break totals as required
     C           W0AL03    IFEQ 'Y'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Item Code format
      * CASE: LCL.Print (Yes/No) USR is Yes
     C           YL0004    IFEQ 'Y'                        *IF
      * RTV Load ID            RT - Order Header TRG  * 
     C                     EXSR SFRVGN
     C                     MOVEL'Y'       YL0005           Print Blank Lin
     C                     MOVEL*BLANK    $FPVNA           Item Descriptio
      * Item Description DRV
      * Rtv Item Description   RT - Company/Item  * 
     C                     EXSR SGRVGN
     C                     MOVEL'N'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL'N'       W0PFM            *Print format
     C                     END                             *FI
     C           W0PFM     IFEQ 'Y'
      * If there is not enough space on the
      * physical page for this format:
     C           @$PGL     SUB  @$CLN     @$WRK
     C           @$WRK     IFLE 2
      * Signal new page required
     C                     MOVE 'Y'       W0NEWP
      * Start new page
     C                     EXSR Q0PRNT
     C                     END
      * Convert fields to external form
      * Convert Order Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FC4NB    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FC4NB    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFC4NB           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFC4NB           CD7 Ext Numeric
     C                     END                             *FI
      * Convert Scheduled Ship Date to display format
      * Convert date
     C           1000000   ADD  $FAODT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VFAODT
      * Convert Item Code to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           $FHGCD    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL$FHGCD    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    VFHGCD           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VFHGCD           CD7 Ext Numeric
     C                     END                             *FI
     C                     MOVEL'0'       *IN79
     C           YL0006    IFEQ 'N'                        *IF
     C                     MOVEL'1'       *IN79
     C                     END                             *FI
      * Print format
     C                     WRITE$FKEYTTL
     C                     END
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP03
      * USER: Process after print of Item Code format
      * CASE: LCL.Print Blank Line Usr is yes
     C           YL0005    IFEQ 'Y'                        *IF
     C                     MOVEL'N'       YL0006           Break
     C                     END                             *FI
     C                     END
      *
     C           W0AL02    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP02
     C                     END
      *
     C           W0AL01    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP01
     C                     END
      *
     C           W0AL00    IFEQ 'Y'
      * Signal header format is no longer ready
     C                     MOVEL*BLANK    W0AP00
     C                     END
      *
     C           W0EOFA    IFEQ '1'
     C                     END
      *
      *================================================================
     CSR         A4EXIT    ENDSR
      /EJECT
     CSR         Q0PRNT    BEGSR
      *================================================================
      * Print report formats
      *================================================================
      * Select formats to print
     C                     EXSR Q1FSEL
      * Calculate length of formats selected for printing
     C                     EXSR Q2PLEN
      * Add column heading length to print length
     C                     ADD  W0COLN    W0FSUM
     C           W0NEWP    IFNE 'Y'
      * Signal overflow if requested headings would cause
      * detail format to start past the overflow line
     C           W0FSUM    IFGT W0OFL
     C                     MOVE 'Y'       W0NEWP
     C                     ELSE
      * Signal overflow if requested headings would cause
      * Detail format to be printed past end of page
     C                     ADD  W0DTLN    W0FSUM
     C           W0FSUM    IFGT W0PGL
     C                     MOVE 'Y'       W0NEWP
     C                     END
     C                     END
     C                     END
      * Print Standard report header of Prt Inv Allocated-Ord PF
      * If it is ready to print, then do so,
     C           W0NEWP    IFEQ 'Y'                        IF
     C                     EXSR Q3PTNP
     C                     END                             FI
      *
      * Print First Page Format of Prt Inv Allocated-Ord PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP1P    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP1P    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of first page format
     C                     Z-ADDP3B7DY    $BB7DY           Ageing Days Usr
     C                     Z-ADDP1AIC3    $BAIC3           Company Number
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$BAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $BADTX    P      Name
     C                     MOVELP1AJCD    $BAJCD           Warehouse Code
      * RTV Whse Descrip       RT - Warehouse  * 
     C                     EXSR SDRVGN
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $BAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$BAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VBAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VBAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Print format
     C                     WRITE$B1STPAG
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE *BLANK    W0AP1P
      * Clear first page flag.
     C                     MOVE *BLANK    W0AL1P
     C                     END                             FI
      * Print Company Number of Prt Inv Allocated-Ord PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP00    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP00    ANDEQ'P'
     C                     MOVEL'Y'       W0PFM
      * USER: On print of Company Number format
     C                     MOVEL*BLANK    $CSQTX           Company Name DR
      * Company Name DRV
      * RTV Company Name       RT - Company Name and Address  * 
      * Move input parameters to subroutine local variables.
     C                     Z-ADD$CAIC3    WL0001           Company Number
     C                     EXSR SCRVGN
      * Move subroutine local variables to output parameters.
     C                     MOVELWL0002    $CSQTX    P      Name
      * Go Back from current date to start aging rpt
     C                     Z-ADDYL0002    P2FFDT           USR Day 1
      * PAR.USR Day 1 = PAR.USR Day 1 + LCL.Ageing Days Usr *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDYL0003    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2FFDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2FFDT
     C                     END
      * Set to -1 now ....
     C                     Z-ADD-1        WUB7DY           Ageing Days Usr
      * PAR.USR Day 2 = PAR.USR Day 1 + WRK.Ageing Days Usr *DAYS
     C           P2FFDT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E1DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E1DT
     C                     END
      * PAR.USR Day 3 = PAR.USR Day 2 + WRK.Ageing Days Usr *DAYS
     C           P2E1DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E2DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E2DT
     C                     END
      * PAR.USR Day 4 = PAR.USR Day 3 + WRK.Ageing Days Usr *DAYS
     C           P2E2DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E3DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E3DT
     C                     END
      * PAR.USR Day 5 = PAR.USR Day 4 + WRK.Ageing Days Usr *DAYS
     C           P2E3DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E4DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E4DT
     C                     END
      * PAR.USR Day 6 = PAR.USR Day 5 + WRK.Ageing Days Usr *DAYS
     C           P2E4DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E5DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E5DT
     C                     END
      * PAR.USR Day 7 = PAR.USR Day 6 + WRK.Ageing Days Usr *DAYS
     C           P2E5DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADDWUB7DY    XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2E6DT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2E6DT
     C                     END
      * PAR.USR Day 8 = PAR.USR Day 7 + CON.-1 *DAYS
     C           P2E6DT    ADD  1000000   XDINDT
     C                     EXSR XCVTA
     C                     Z-ADDXDAY1     XDAY2   60
     C                     Z-ADD-1        XDURR   80
     C                     MOVEL'1'       XDSEL   1
     C                     MOVEL@CN,002   XDCDW   7
     C                     EXSR XDOWS
     C                     EXSR XDADY
     C                     EXSR XCVFA
     C           XDINDT    IFLT 010101
     C           XDINDT    ORGT 4000000
     C                     Z-ADD*ZERO     P2FKDT
     C                     ELSE
     C           XDINDT    SUB  1000000   P2FKDT
     C                     END
     C                     Z-ADDP2FFDT    $CFFDT           USR Day 1
     C                     Z-ADDP2E1DT    $CE1DT           USR Day 2
     C                     Z-ADDP2E2DT    $CE2DT           USR Day 3
     C                     Z-ADDP2E3DT    $CE3DT           USR Day 4
     C                     Z-ADDP2E4DT    $CE4DT           USR Day 5
     C                     Z-ADDP2E5DT    $CE5DT           USR Day 6
     C                     Z-ADDP2E6DT    $CE6DT           USR Day 7
     C                     Z-ADDP2FKDT    $CFKDT           USR Day 8
      * set to 1 always  so use wrk. instead of lcl.
     C           W0PFM     IFEQ 'Y'
      * Convert fields to external form
      * Convert Company Number to external.
      * CD3 Int/Ext
      * CASE: PAR.CD3 Int Numeric Key is not equal zero
     C           $CAIC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUDMCD           CD3 Ext Numeric
     C                     MOVEL$CAIC3    WUDMCD           CD3 Ext Numeric
      * CD3 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUDMCD    #L3              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   3
     C           #L3,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L3,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L3       WUDMCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUDMCD    VCAIC3           CD3 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    VCAIC3           CD3 Ext Numeric
     C                     END                             *FI
      * Convert USR Day 1 to display format
      * Convert date
     C           1000000   ADD  $CFFDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFFDT
      * Convert USR Day 2 to display format
      * Convert date
     C           1000000   ADD  $CE1DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE1DT
      * Convert USR Day 3 to display format
      * Convert date
     C           1000000   ADD  $CE2DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE2DT
      * Convert USR Day 4 to display format
      * Convert date
     C           1000000   ADD  $CE3DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE3DT
      * Convert USR Day 5 to display format
      * Convert date
     C           1000000   ADD  $CE4DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE4DT
      * Convert USR Day 6 to display format
      * Convert date
     C           1000000   ADD  $CE5DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE5DT
      * Convert USR Day 7 to display format
      * Convert date
     C           1000000   ADD  $CE6DT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCE6DT
      * Convert USR Day 8 to display format
      * Convert date
     C           1000000   ADD  $CFKDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    VCFKDT
      * Print format
     C                     WRITE$CKEYHDR
      * Set column headings flag
     C                     MOVE 'Y'       W0ACDT
     C                     END                             FI
      *
      * Reset format print flag
     C                     MOVE 'P'       W0AP00
     C                     END                             FI
      * Print Warehouse Code of Prt Inv Allocated-Ord PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP01    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP01    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP01
     C                     END                             FI
      * Print Order Number of Prt Inv Allocated-Ord PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP02    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP02    ANDEQ'P'
      * USER: On print of Order Number format
     C                     MOVEL'N'       YL0004           Print (Yes/No)
     C                     MOVEL'N'       YL0005           Print Blank Lin
     C                     MOVEL'Y'       YL0006           Break
      * Mention hidden format
     C   99N99             WRITE$DKEYHDR
      * Reset format print flag
     C                     MOVE *BLANK    W0AP02
     C                     END                             FI
      * Print Item Code of Prt Inv Allocated-Ord PF
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0AP03    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0AP03    ANDEQ'P'
      * Reset format print flag
     C                     MOVE *BLANK    W0AP03
     C                     END                             FI
      * Print Detail line. of Prt Inv Allocated-Ord PF
      * If new page then set column headings active
     C           W0NEWP    IFEQ 'Y'
     C                     MOVE 'Y'       W0ACDT  1
     C                     END
      * If it is ready to print, then do so,
      * or if new page & print on new page selected &
      * active then set print format flag
     C           W0APDT    IFEQ 'Y'                        IF
     C           W0NEWP    OREQ 'Y'
     C           W0APDT    ANDEQ'P'
      * USER: On print of detail format
      * RTV Order Status       RT - Order Header TRG  * 
     C                     EXSR SERVGN
      * CASE: LCL.Header Status is Confirmed & Complete
     C           YL0007    IFEQ 'C'                        *IF
     C           YL0007    OREQ 'R'
     C                     ELSE
      * CASE: *OTHERWISE
      * Put allocated into correct day
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 1
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 2
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2FFDT                     *IF
     C           B5JGDT    IFGT P2E1DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGTNX           Day 1 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 2
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 3
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2E1DT                     *IF
     C           B5JGDT    IFGT P2E2DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGUNX           Day 2 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 3
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 4
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2E2DT                     *IF
     C           B5JGDT    IFGT P2E3DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGVNX           Day 3 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 4
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 5
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2E3DT                     *IF
     C           B5JGDT    IFGT P2E4DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGWNX           Day 4 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 5
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 6
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2E4DT                     *IF
     C           B5JGDT    IFGT P2E5DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGXNX           Day 5 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 6
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 7
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2E5DT                     *IF
     C           B5JGDT    IFGT P2E6DT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGYNX           Day 6 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE:
      *  - c1ANDc2
      *   |- c1    : DB1.OD Production Date LE PAR.USR Day 7
      *   |- c2    : DB1.OD Production Date GT PAR.USR Day 8
      *   '-
     C                     MOVEL'0'       Y0CX01  1
     C           B5JGDT    IFLE P2E6DT                     *IF
     C           B5JGDT    IFGT P2FKDT                     *IF
     C                     MOVEL'1'       Y0CX01
     C                     END                             *FI
     C                     END                             *FI
     C           Y0CX01    IFEQ '1'                        *IF
     C                     ADD  B5IUQT    $FGZNX           Day 7 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     ELSE
      * CASE: *OTHERWISE
      * CASE: DB1.OD Production Date LE PAR.USR Day 8
     C           B5JGDT    IFLE P2FKDT                     *IF
     C                     ADD  B5IUQT    $FPQNX           Day 8 Sales 5,0
     C                     MOVEL'Y'       YL0004           Print (Yes/No)
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
     C                     END                             *FI
      * Mention hidden format
     C   99N99             WRITE$EDTLRCD
      * Reset format print flag
     C                     MOVE *BLANK    W0APDT
     C                     END                             FI
      * Clear new page flag
     C                     MOVE *BLANK    W0NEWP
      *================================================================
     CSR         Q0EXIT    ENDSR
      /EJECT
     CSR         Q1FSEL    BEGSR
      *================================================================
      * Format select
      *================================================================
      *================================================================
     CSR         Q1EXIT    ENDSR
      /EJECT
     CSR         Q2PLEN    BEGSR
      *================================================================
      * Evaluate print length
      *================================================================
     C           *LIKE     DEFN @$CLN     W0FSUM
     C           *LIKE     DEFN @$CLN     W0DTLN
     C           *LIKE     DEFN @$CLN     W0COLN
     C                     Z-ADD@$CLN     W0FSUM
     C                     Z-ADD*ZERO     W0DTLN
     C                     Z-ADD*ZERO     W0COLN
      * * First Page Format of Prt Inv Allocated-Ord PF
     C           W0AP1P    IFEQ 'Y'
     C                     ADD  5         W0FSUM
     C                     END                             FI
      *
      * * Company Number of Prt Inv Allocated-Ord PF
     C           W0AP00    IFEQ 'Y'
     C                     ADD  4         W0FSUM
     C                     END                             FI
      *
      * * Warehouse Code of Prt Inv Allocated-Ord PF
     C           W0AP01    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Order Number of Prt Inv Allocated-Ord PF
     C           W0AP02    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Item Code of Prt Inv Allocated-Ord PF
     C           W0AP03    IFEQ 'Y'
     C                     ADD  0         W0FSUM
     C                     END                             FI
      *
      * * Detail line. of Prt Inv Allocated-Ord PF
     C           W0APDT    IFEQ 'Y'
     C                     Z-ADD0         W0DTLN
     C           W0ACDT    IFEQ 'Y'
     C                     Z-ADD0         W0COLN
     C                     END                             FI
     C                     END                             FI
      *
      *================================================================
     CSR         Q2EXIT    ENDSR
      /EJECT
     CSR         Q3PTNP    BEGSR
      *================================================================
      * Format select
      *================================================================
     C                     WRITE$APAGHDR
      * Clear page overflow indicator
     C                     SETOF                     97    *
      *================================================================
     CSR         Q3EXIT    ENDSR
      /EJECT
     CSR         SARVGN    BEGSR
      *================================================================
      * RTV Applic. Group Desc RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSA01           Application Cod
      * Define keylist
     C           KRSSA     KLIST
     C                     KFLD           WQSA01           Application Cod
      * Setup key
     C                     MOVE *BLANK    WQSA01           Application Cod
     C                     MOVEL'I/C'     WQSA01           Application Cod
      * Establish starting position
     C           KRSSA     SETLL@DNRESF                    *
     C           KRSSA     READE@DNRESF                  90*
      * Data record not found
     C   90                MOVEL'USR0755' W0RTN   7
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * CASE: DB1.Application Group is Blank
     C           DNRSCD    IFEQ *BLANK                     *IF
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C                     ELSE
      * CASE: *OTHERWISE
      * RTV Application Desc   RT - Application  * 
     C                     EXSR SBRVGN
     C                     END                             *FI
     C           KRSSA     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Application Desc   RT - Application  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN DNDNCD    WQSB01           Application Cod
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB01           Application Cod
      * Setup key
     C                     MOVELDNRSCD    WQSB01           Application Cod
      * Establish starting position
     C           KRSSB     SETLL@DNRESF                    *
     C           KRSSB     READE@DNRESF                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0755' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WUAUNA           Description
     C                     MOVEL@CN,001   W0RTN            *Return code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELDNAUNA    WUAUNA           Description
     C           KRSSB     READE@DNRESF                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * RTV Company Name       RT - Company Name and Address  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           ABAIC3           Company Number
      * Setup key
     C                     Z-ADDWL0001    ABAIC3           Company Number
      * Establish starting position
     C           KRSSC     CHAIN@ABREG3              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0003' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    WL0002           Name
     C                     GOTO SCEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELABADTX    WL0002           Name
     C                     ENDIF
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         SDRVGN    BEGSR
      *================================================================
      * RTV Whse Descrip       RT - Warehouse  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSD     KLIST
     C                     KFLD           ADAJCD           Warehouse Code
      * Setup key
     C                     MOVEL$BAJCD    ADAJCD           Warehouse Code
      * Establish starting position
     C           KRSSD     CHAIN@ADRET1              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0007' W0RTN   7
      * USER: Processing if Data record not found
     C                     MOVEL@CN,001   W0RTN            *Return code
      * PAR = CON By name
     C                     MOVEL*BLANK    $BF8NA           Warehouse Descr
     C                     GOTO SDEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
     C                     MOVELADF8NA    $BF8NA           Warehouse Descr
     C                     ENDIF
      *================================================================
     CSR         SDEXIT    ENDSR
      /EJECT
     CSR         SERVGN    BEGSR
      *================================================================
      * RTV Order Status       RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSE     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADDB5AIC3    BEAIC3           Company Number
     C                     Z-ADDB5C4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSE     CHAIN@BECPFK              90    *
      * Data record not found
     C   90                MOVEL'USR0176' W0RTN   7
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBEGWST    YL0007           Header Status
     C                     MOVELBEGXST    YL0008           Header Status L
     C                     ENDIF
      *================================================================
     CSR         SEEXIT    ENDSR
      /EJECT
     CSR         SFRVGN    BEGSR
      *================================================================
      * RTV Load ID            RT - Order Header TRG  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSF     KLIST
     C                     KFLD           BEAIC3           Company Number
     C                     KFLD           BEC4NB           Order Number
      * Setup key
     C                     Z-ADD$FAIC3    BEAIC3           Company Number
     C                     Z-ADD$FC4NB    BEC4NB           Order Number
      * Establish starting position
     C           KRSSF     CHAIN@BECPFK              90    *
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0176' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     Z-ADD*ZERO     $FRMNB           Load ID
     C                     GOTO SFEXIT
     C                     ENDIF
      *
     C           *IN90     IFEQ '0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     Z-ADDBERMNB    $FRMNB           Load ID
     C                     ENDIF
      *================================================================
     CSR         SFEXIT    ENDSR
      /EJECT
     CSR         SGRVGN    BEGSR
      *================================================================
      * Rtv Item Description   RT - Company/Item  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN BZHGCD    WQSG01           Item Code
      * Define keylist
     C           KRSSG     KLIST
     C                     KFLD           WQSG01           Item Code
      * Setup key
     C                     Z-ADD$FHGCD    WQSG01           Item Code
      * Establish starting position
     C           KRSSG     SETLL@BZRED0                    *
     C           KRSSG     READE@BZRED0                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0326' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    $FPVNA           Description Lin
     C                     GOTO SGEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELBZAVNA    $FPVNA           Description Lin
     C           KRSSG     READE@BZRED0                  90*
     C                     ENDDO
      *================================================================
     CSR         SGEXIT    ENDSR
      /EJECT
     CSR         XCVFA     BEGSR
      *================================================================
      * Convert absolute day to date
      *================================================================
     C           XDAY1     IFGT 109267
     C                     ADD  2         XDAY1
     C                     ELSE
     C           XDAY1     IFGT 36218
     C                     ADD  1         XDAY1
     C                     END
     C                     END
      * Full years (up to the date)
     C           XDAY1     DIV  365.25    XDWK1   80
     C                     MVR            XDWK3   71
     C                     Z-ADDXDWK1     XDINYY
     C           XDWK3     IFEQ 0
      * The date is the end of a year
     C                     Z-ADD12        XDINMM
     C                     Z-ADD31        XDINDD
     C                     ELSE
      * Year days up to the date
     C           XDWK1     MULT 365.25    XDWK2   60
     C                     SUB  XDWK2     XDAY1
     C                     ADD  1         XDINYY
      * Leap year ?
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
      * March 1 (relative day of the year)
     C           XDWK1     IFEQ 0
     C                     Z-ADD60        XDWK1
     C                     ELSE
     C                     Z-ADD59        XDWK1
     C                     END
      * Define date base month and offset day -
     C           XDAY1     IFLE XDWK1
      *  - January (thru February)
     C                     Z-ADD1         XDINMM
     C                     ELSE
     C                     SUB  XDWK1     XDAY1
     C           XDAY1     IFLE 153
      *  - March (thru July)
     C                     Z-ADD3         XDINMM
     C                     ELSE
      *  - August (thru December)
     C                     Z-ADD8         XDINMM
     C                     SUB  153       XDAY1
     C                     END
      * Calculate 2 month base and offset day
     C           XDAY1     SUB  1         XDWK1
     C                     DIV  61        XDWK1
     C                     MVR            XDAY1
     C                     ADD  1         XDAY1
     C                     MULT 2         XDWK1
     C                     ADD  XDWK1     XDINMM
     C                     END
      * Calculate date increment,
     C           XDAY1     IFGT 31
     C                     ADD  1         XDINMM
     C                     SUB  31        XDAY1
     C                     END
     C                     Z-ADDXDAY1     XDINDD
     C                     END
      *================================================================
     CSR         XCVFAE    ENDSR
      /EJECT
     CSR         XCVTA     BEGSR
      *================================================================
      * Convert date to absolute day (from 01/01/01)
      *================================================================
      * Absolute day =
      * 365*(YY-1)+(YY-1)/4 (past years w/extra days of leap ones) ...
     C           XDINYY    SUB  1         XDWK1   80
     C           XDWK1     MULT 365.25    XDAY1   60
     C           XDWK1     IFGE 300
     C                     SUB  2         XDAY1
     C                     ELSE
     C           XDWK1     IFGE 100
     C                     SUB  1         XDAY1
     C                     END
     C                     END
      * (from the beginning of the year to the beginning of the month:)
     C           XDINMM    SUB  1         XDWK1
     C           XDINMM    IFLT 3
      *     ...+31*(MM-1) (for January-February) ...
     C                     MULT 31        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *     ...+30*(MM-1) (for March-December) ...
     C                     MULT 30        XDWK1
     C                     ADD  XDWK1     XDAY1
      *         ...-2 (for preceding February) ...
     C                     SUB  2         XDAY1
     C           XDINYY    IFNE 100
     C           XDINYY    ANDNE300
      *         ...+1 (for preceding February, if leap year) ...
     C           XDINYY    DIV  4         XDWK1
     C                     MVR            XDWK1
     C           XDWK1     IFEQ 0
     C                     ADD  1         XDAY1
     C                     END
     C                     END
     C           XDINMM    IFLT 8
      *         ...+MM/2 (preceding 31-sts for March-July) ...
     C           XDINMM    MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     ELSE
      *         ...+(MM+1)/2 (same for August-December) ...
     C           XDINMM    ADD  1         XDWK1
     C                     MULT .5        XDWK1
     C                     ADD  XDWK1     XDAY1
     C                     END
     C                     END
      * ...+DD (days in the month up to the ending date)
     C                     ADD  XDINDD    XDAY1
      *================================================================
     CSR         XCVTAE    ENDSR
      /EJECT
     CSR         XDADY     BEGSR
      *================================================================
      * Calculate date increment, *DAYS
      *================================================================
     C           XDURR     IFEQ 0
     C           XDWSL     OREQ 0
      * None days of week selected
     C                     Z-ADDXDAY2     XDAY1
     C           XDURR     IFNE *ZERO
      * Return Code: Unable to increment date.
     C                     MOVEL'Y2U0059' W0RTN   7
     C                     ENDIF
     C                     GOTO XDADYE
     C                     ENDIF
     C           XDWSL     IFEQ 7
      * All days of week selected
     C           XDAY2     ADD  XDURR     XDAY1
     C                     GOTO XDADYM
     C                     ENDIF
      * Some days of week selected
     C           XDURR     IFGE 0
     C                     Z-ADD1         XDSTP   10
     C                     ELSE
     C                     Z-ADD-1        XDSTP
     C                     ENDIF
      * Get number of full weeks in the duration
     C           XDURR     DIV  XDWSL     XDWNB   60
      * Isolate the last week
     C                     MVR            XDLSW   10
     C           XDLSW     IFEQ 0
     C           XDWSL     MULT XDSTP     XDLSW
     C                     SUB  XDSTP     XDWNB
     C                     ENDIF
      * Increment the date by the full weeks
     C           XDWNB     MULT 7         XDWK1   80
     C           XDAY2     ADD  XDWK1     XDAY1   60
      * Determine day of week of the beginning date
     C           XDAY2     ADD  3         YY      60
     C                     DIV  7         YY
     C                     MVR            YY
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ENDIF
      * Loop: Increment the date by the last week
     C           XDLSW     DOWNE0
      * Increment the date
     C                     ADD  XDSTP     XDAY1
      * Increment the day of week
     C                     ADD  XDSTP     YY
      * Put day of week into the range 1-7
     C           YY        IFEQ 0
     C                     Z-ADD7         YY
     C                     ELSE
     C           YY        IFEQ 8
     C                     Z-ADD1         YY
     C                     ELSE
     C           YY        IFEQ -1
     C                     Z-ADD6         YY
     C                     ENDIF
     C                     ENDIF
     C                     ENDIF
     C           YDOW,YY   IFEQ XDSEL
      * Selected day of the last week has been processed
     C                     SUB  XDSTP     XDLSW
     C                     ENDIF
      * End of loop
     C                     ENDDO
     C           XDADYM    TAG
     C           XDINDD    IFLT 1
     C                     Z-ADD1         XDINDD
     C                     MOVEL'Y2U0006' W0RTN   7
     C                     ENDIF
      *================================================================
     CSR         XDADYE    ENDSR
      /EJECT
     CSR         XDOWS     BEGSR
      *================================================================
      * Setup days of week array
      *================================================================
     C                     MOVEAXDCDW     YDOW
     C                     Z-ADD0         XDWSL   10
     C                     Z-ADD1         YY
     C           YY        DOWLE7
     C           YDOW,YY   IFEQ XDSEL
     C                     ADD  1         XDWSL
     C                     END
     C                     ADD  1         YY
     C                     END
      *================================================================
     CSR         XDOWSE    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Clear all neither parameters
     C                     Z-ADD*ZERO     P2FFDT           USR Day 1
     C                     Z-ADD*ZERO     P2E1DT           USR Day 2
     C                     Z-ADD*ZERO     P2E2DT           USR Day 3
     C                     Z-ADD*ZERO     P2E3DT           USR Day 4
     C                     Z-ADD*ZERO     P2E4DT           USR Day 5
     C                     Z-ADD*ZERO     P2E5DT           USR Day 6
     C                     Z-ADD*ZERO     P2E6DT           USR Day 7
     C                     Z-ADD*ZERO     P2FKDT           USR Day 8
     C                     Z-ADD*ZERO     P2GTNX           Day 1 Sales 5,0
     C                     Z-ADD*ZERO     P2GUNX           Day 2 Sales 5,0
     C                     Z-ADD*ZERO     P2GVNX           Day 3 Sales 5,0
     C                     Z-ADD*ZERO     P2GWNX           Day 4 Sales 5,0
     C                     Z-ADD*ZERO     P2GXNX           Day 5 Sales 5,0
     C                     Z-ADD*ZERO     P2GYNX           Day 6 Sales 5,0
     C                     Z-ADD*ZERO     P2GZNX           Day 7 Sales 5,0
     C                     Z-ADD*ZERO     P2PQNX           Day 8 Sales 5,0
      *
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field Description
     C                     MOVEL*BLANK    WUAUNA 30
      * Define work field USR Description 40
     C                     MOVEL*BLANK    WUDSC4 40
      * Define work field USR Description 40   2
     C                     MOVEL*BLANK    WUDE40 40
      * Initialize KEY fields.
     C                     MOVEL*LOVAL    B5AIC3           Company Number
     C                     MOVEL*LOVAL    B5AJCD           Warehouse Code
     C                     MOVEL*LOVAL    B5C4NB           Order Number
     C                     MOVEL*LOVAL    B5HGCD           Item Code
      * Define work field CD3 Ext Numeric Key
     C                     MOVEL*BLANK    WUDMCD  3
      * Define work field Ageing Days Usr
     C                     Z-ADD*ZERO     WUB7DY  50
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
      * Dummy move for compiler
     C                     MOVE '0'       @CN#,1
     C                     MOVEL'N'       W0PMT   1
      * Define local variables for subroutine SCRVGN.
     C                     Z-ADD*ZERO     WL0001  30
     C                     MOVEL*BLANK    WL0002 30
      * Define local work field USR Display 1
     C                     MOVEL*BLANK    YL0001  1
      * Define local work field Job Date Usr
     C                     Z-ADD*ZERO     YL0002  70
      * Define local work field Ageing Days Usr
     C                     Z-ADD*ZERO     YL0003  50
      * Define local work field Print (Yes/No) USR
     C                     MOVEL*BLANK    YL0004  1
      * Define local work field Print Blank Line Usr
     C                     MOVEL*BLANK    YL0005  1
      * Define local work field Break
     C                     MOVEL*BLANK    YL0006  1
      * Define local work field Header Status
     C                     MOVEL*BLANK    YL0007  1
      * Define local work field Header Status Last
     C                     MOVEL*BLANK    YL0008  1
      * Declare initial value data areas
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   $ACMP
     C                     IN   *NAMVAR
      *................................................................
     C                     MOVEL##PGM     $APGM
     C                     MOVEL##USR     $AUSR
     C                     MOVEL*BLANK    W0PFM   1
     C                     Z-ADD*ZERO     @$WRK   40
     C                     Z-ADD*ZERO     @$HDL   40
     C                     Z-ADD*ZERO     @$CLN
     C                     Z-ADD*ZERO     @$PGN
      * Adjust page length and overflow as necessary
     C           @$PGL     SUB  2         W0PGL   40
     C           @$OFL     IFGE W0PGL
     C           W0PGL     SUB  2         W0OFL   40
     C                     ELSE
     C                     Z-ADD@$OFL     W0OFL
     C                     END
      * Clear overflow indicator
     C                     SETOF                     97
      * Request new page
     C                     MOVEL'Y'       W0NEWP  1
      * USER: Initialize program
      * VAL Rtv & Ctr Prt Hdg  IF
      * SET Setup Prt Headings IF
      * RTV Applic. Group Desc RT - Application  * 
     C                     EXSR SARVGN
     C                     MOVEL*BLANK    WUDSC4           USR Description
     C                     MOVELWUAUNA    WUDSC4           USR Description
      * Center Txt String 40 - /UT User Source  * 
     C                     MOVEAWUDSC4    UCT              LOAD ARRAY
     C                     Z-ADD40        UX      20       SET COUNTER
     C           UX        DOWGT0
     C           UCT,UX    IFEQ ' '
     C                     SUB  1         UX
     C                     ELSE
     C                     Z-ADDUX        UXH     20
     C                     Z-ADD0         UX
     C                     END
     C                     END
     C           40        SUB  UXH       UX
     C           UX        DIV  2         UX
     C           UX        IFGT 0
     C                     MOVE *BLANKS   UCT
     C                     MOVEAWUDSC4    UCT,UX
     C                     END
     C                     MOVEAUCT       WUDE40           LOAD OUTPUT
      * MOV Appl Desc to PrtCo US - /UT User Source  * 
     C                     MOVE WUDE40    $ACMP
     C                     MOVEL'N'       YL0001           USR Display 1
     C                     Z-ADD##JDT     YL0002           Job Date Usr
     C           P3B7DY    MULT -1        YL0003           Ageing Days Usr
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
      *================================================================
     CSR         ZZEXIT    ENDSR
** @CN
00001 Y2U0005
00002 1111111
