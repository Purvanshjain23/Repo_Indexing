      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Triumph Foods
      * PROGRAM:     TF237 - Base Marketing: Write Weekly Transactions
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     03/24/05
      *
      * Function:    This program extracts Tattoo data and writes weekly records when:
      *                1) there are no errors from the edit
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/29/06  LeAnne Ramsey
      *           Replaced the calls to the generic date conversion programs
      *           with ILE date logic.
      *
      * 12/12/08  LeAnne Ramsey
      *           Recompile only. For our new TFS Yield Reports, we added new "head" fields
      *           to the Reference File.  These new "head" fields will hold "weekly"
      *           values. At this time, weekly values are exceeding 100,000 head. So, we made
      *           the new head fields 7,0. To be consistent, I changed the "daily" head
      *           field from 5,0 to 7,0. So, file TFP016 was recompiled to pick up the
      *           7,0 field size.
      *
      * 05/05/10  LeAnne Ramsey
      *           We will now retrieve the Current/Deferred Fees from TFP003 using Kill Date.
      *           Prior to this change, we retrieved the Fees for the WeekEnding Date and used
      *           those rates for each Kill Date in the Week.
      *           This change will actually only affect the one week out of the Year that contains
      *           January 14 (the year ending date for this logic).
      *           So, basically, I think it will affect about a dozen records over the next six
      *           years!
      *
      * 11/03/20  ISE (H16853)
      *           Recompile only. Increased the Buy order Number field length from 5 to 7.
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fpka1cpla  if   e           k disk
      *    Tattoo header (records selected in open query)
      *
      *
     Ftfl003a   if   e           k disk
      *    Base marketing fees
      *
      *
     Ftfp016    o    e           k disk
      *    Base marketing fee transactions
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svb0dt          s                   like(a1b0dt)
      *
      *
      * Workfields
      *
     D wkklhd          s                   like(btklhd)
      *
      *
      * Workfields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkupdt          s                   like(btupdt)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     d lda            uds                  dtaara(*lda)
     D  ldyr                   1      4  0
     D  ldwk                   5      6  0
     D  ldwbdt                 7     14  0
     D  ldsynwbdt             15     21  0
     D  ldwedt                22     29  0
     D  ldsynwedt             30     36  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read all the Tattoo Header records selected by the open query.
      * Write 1 transaction record for each 'kill date'.
      *
      * NOTE: The query selects records with (the LF selects only "active" records):
      *     1) Kill Date in week
      *     2) Payment status of PL, PC, NL, NC
      *     3) Company of 960 (Triumph)
      *
     C     *loval        setll     pka1cpla
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      pka1cpla                               90
     C                   if        *in90 = *off                                 If not EOF
      *
      * Control break
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   z-add     a1b0dt        svb0dt
      *
     C                   when      a1b0dt <> svb0dt
     C                   exsr      $wrt016
     C                   z-add     a1b0dt        svb0dt
     C                   endsl
      *
      * Detail processing: accumulate 'Head Killed'
      *
     C                   add       a1fenb        wkklhd
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      * EOF processing
      *
     C                   if        first = no
     C                   exsr      $wrt016
     C                   endif
      *
     C                   seton                                        lr
      /eject
      *--------------------------------------------------------------------------------------
      * Write a Base Marketing Fees Transaction record for the Kill Date
      *--------------------------------------------------------------------------------------
      *
     C     $wrt016       begsr
      *
     C                   z-add     ldyr          btyr
     C                   z-add     ldwk          btwk
     C                   z-add     ldwbdt        btwbdt
     C                   z-add     ldwedt        btwedt
      *
      * Get the saved 'Kill Date' into CCYYMMDD format.
      *
     C     *cymd         test(d)                 svb0dt                 92
     C                   if        *in92 = *off                                 If good date
     C     *cymd         move      svb0dt        wkisodate
     C     *iso          move      wkisodate     btkldt
     C                   endif                                                  If good date
      *
      * Killed head
     C                   z-add     wkklhd        btklhd
      *
      *
      * Retrieve the Base Marketing Fees associated with this Kill Date.
      *
     C     btkldt        setll     tfl003a
     C                   read      tfl003a                                92
     C                   if        *in92 = *off and
     C                             btkldt >= bmybdt and
     C                             btkldt <= bmyedt
     C                   z-add     bmbmcfee      btbmcfee
     C                   z-add     bmbmdfee      btbmdfee
     C                   endif
      *
      * Calc Current and Deferred Amounts
      *
     C                   eval(h)   btbmcam = btbmcfee * btklhd
     C                   eval(h)   btbmdam = btbmdfee * btklhd
      *
      * Update time/date/user
      *
     C                   time                    btuptm
     c                   z-add     wkupdt        btupdt
     C                   move      sdusr         btupusr
      *
     C                   write     btrec
     C                   clear                   btrec
      *
     C                   z-add     0             wkklhd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Save date for record stamp
      *
     C     *mdy          move      udate         wkisodate
     C                   move      wkisodate     wkupdt
      *
     C                   endsr
      /eject
