// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POM9PFR
// ?Date: 14.08.2025 Time: 12:06:16
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

// LCL.Item Code = CON.*ZERO
LCL.Item_Code = *ZERO;

EXECUTE FUNCTION(VAL Rtv & Ctr Prt Hdg  IF) TYPE(EXCINTFUN)                     AC1258755;
PARAMETER('C/S');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Setup Prt Headings IF) TYPE(EXCINTFUN)                     AC1258771;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc to PrtCo US.
  EXECUTE FUNCTION(MOV Appl Desc to PrtCo US) TYPE(EXCUSRSRC) ('PD2KUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    $ACMP
  }

 }

}


//?USER: Record selection processing

//?SEL: Item Code
CASE;

// IF PAR.Item Code is Entered
IF PAR.Item_Code <> *ZERO;

CASE;

// IF DB1.Item Code NE PAR.Item Code
IF DB1.Item_Code <> PAR.Item_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Effective Date
CASE;

// IF PAR.Effective Date is Entered
IF PAR.Effective_Date <> *ZERO;

CASE;

// IF DB1.Effective Date NE PAR.Effective Date
IF DB1.Effective_Date <> PAR.Effective_Date;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?SEL: Current Entries Only
CASE;

// IF PAR.Status - Y or N is yes
IF PAR.Status_Y_or_N = 'Y';

CASE;

// IF LCL.Item Code EQ DB1.Item Code
IF LCL.Item_Code = DB1.Item_Code;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Item Code = DB1.Item Code
LCL.Item_Code = DB1.Item_Code;

ENDIF;

ENDIF;

//?USER: On print of first page format

MOVE *ALL (To: 1PG From: PAR);

EXECUTE FUNCTION(Company Name DRV) TYPE(DRVFLD)                                 AC1532476;
PARAMETER(X1PG_Company_Name_DRV);
PARAMETER(X1PG_Company_Number);
{
 //?Calculate derived field

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Company_Name_DRV);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?Item
CASE;

// IF 1PG.Item Code is Entered
IF X1PG_Item_Code <> *ZERO;

EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(X1PG_Item_Desc_DRV);
PARAMETER(X1PG_Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?Item
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Item Desc DRV = CON.*All
X1PG_Item_Desc_DRV = *All;

ENDIF;

//?Effective Date
CASE;

// IF 1PG.Effective Date is not entered
IF X1PG_Effective_Date = *ZERO;

// 1PG.Condition Desc. 1  USR = CON.*All
X1PG_Condition_Desc_1_USR = *All;

ENDIF;

//?Current Entries Only
CASE;

// IF 1PG.Status - Y or N is Y/N Values
IF X1PG_Status_Y_or_N = 'N'/'Y';

// 1PG.Condition Desc. 2  USR = Condition name of 1PG.Status - Y or N
X1PG_Condition_Desc_2_USR = RTVCND(X1PG_Status_Y_or_N);

//?Current Entries Only
// IF *OTHERWISE
IF *OTHERWISE;

// 1PG.Condition Desc. 2  USR = CON.*All
X1PG_Condition_Desc_2_USR = *All;

ENDIF;

//?USER: Print required level headings

// SUPPRESSED PRINT Company Number header format

// SUPPRESSED PRINT Item Code header format

// SUPPRESSED PRINT Effective Date header format

//?USER: On print of detail format

EXECUTE FUNCTION(Item Desc DRV) TYPE(DRVFLD)                                    AC1505592;
PARAMETER(CUR.Item_Desc_DRV);
PARAMETER(CUR.Item_Code);
{
 //?Calculate derived field

 EXECUTE FUNCTION(Rtv Item Descriptions  RT) TYPE(RTVOBJ) FILE(OMBYREP)          AC1341279;
 PARAMETER(PAR.Item_Code);
 PARAMETER(PAR.Item_Desc_DRV);
 PARAMETER(WRK.Description_Line_Two);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


EXECUTE FUNCTION(Rtv MTO Code/SBDEquiv RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1631911;
PARAMETER(CUR.Company_Number);
PARAMETER(CUR.Item_Code);
PARAMETER(WRK.Item_Category_Number_1);
PARAMETER(CUR.Item_Category_Code);
PARAMETER(WRK.Seaboard_Equivalent_Item);
PARAMETER(WRK.Item_Category_Type_Number);
PARAMETER(CUR.Item_Category_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 EXECUTE FUNCTION(Rtv Item Ctg Type     RT) TYPE(RTVOBJ) FILE(PDJIREP)           AC1632946;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Item_Category_Number_1);
 PARAMETER(DB1.Made_to_Order_Code);
 PARAMETER(PAR.Item_Category_Type_Number);
 PARAMETER(PAR.Item_Category_Type_Code);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?100306 slm changefield size on the total cost
// Total Cost
CUR.Total_Cost_CWT_Usr = ( ( ( CUR.Std_Packaging_Cost_CWT + CUR.Std_Inc_Labor_Cost_CWT )           +
+ CUR.Std_Ingredient_Cost_CWT ) + CUR.Std_Meat_Cost_CWT ) + CUR.Std_Other_Cost_CWT;

//?USER: Print required level totals

// SUPPRESSED PRINT Effective Date totals format

// SUPPRESSED PRINT Item Code totals format

// SUPPRESSED PRINT Company Number totals format

