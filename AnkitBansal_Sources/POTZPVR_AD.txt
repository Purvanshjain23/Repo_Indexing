// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for POTZPVR
// ?Date: 14.08.2025 Time: 03:39:00
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?04/03/2007 slm PACKAGE UPLOAD For Multi Companies
//?           at the present time this is only for Guymon
//?           Adding new file for this to have a upload file
//?           from Triumph Foods.
//?                     Input file is: PACKUPL  - Guymon
//?                     Input file is: PACKUPLTF- Triumph Foods
EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('C/S');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(WRK.Allow_Multi_Company);
PARAMETER(WRK.Default_Printer);
PARAMETER(WRK.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// WRK.USR Display 1 = CND.No
WRK.USR_Display_1 = 'N';

//?USER: Load screen

CASE;

// IF DTL.Company Number is Equal to zero
IF DTL.Company_Number = *ZERO;

// DTL.Company Number = PAR.Company Number
DTL.Company_Number = PAR.Company_Number;

ENDIF;

// DTL.Shift Number = CND.First Shift
DTL.Shift_Number = '1';

// DTL.Status - Y or N = CND.yes
DTL.Status_Y_or_N = 'Y';

//?USER: Validate fields

EXECUTE FUNCTION(Rtv Plant Co Status   RT) TYPE(RTVOBJ) FILE(PDJYREP)           AC1761084;
PARAMETER(DTL.Company_Number);
PARAMETER(LCL.Plant_Company_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF LCL.Plant Company Sts is Plant Company
IF LCL.Plant_Company_Sts = 'P';

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Invalid Company Number'
ERROR(USR1783);
MSGPARM(DTL.Company_Number);

ENDIF;

CASE;

// IF DTL.Shift Number is Not Entered
IF DTL.Shift_Number = *BLANK;

// DTL.Shift Number = CND.First Shift
DTL.Shift_Number = '1';

ENDIF;

CASE;

// IF LCL.Production Date EQ DTL.Production Date
IF LCL.Production_Date = DTL.Production_Date;

// AND LCL.Shift Number EQ DTL.Shift Number
AND LCL.Shift_Number = DTL.Shift_Number;

// AND DTL.Status - Y or N is yes
AND DTL.Status_Y_or_N = 'Y';

// IF *OTHERWISE
IF *OTHERWISE;

EXECUTE FUNCTION(Val Packaging Dly Usg RT) TYPE(RTVOBJ) FILE(POA0CPP)           AC1660066;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Production_Date);
PARAMETER(DTL.Shift_Number);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 // PGM.*Return code = CND.*Record already exists
 PGM.*Return_code = 'Y2U0003';

 QUIT;

}


// WRK.USR Display 1 = CND.No
WRK.USR_Display_1 = 'N';

// DTL.Status - Y or N = CND.yes
DTL.Status_Y_or_N = 'Y';

CASE;

// IF PGM.*Return code is *Record already exists
IF PGM.*Return_code = 'Y2U0003';

// LCL.Production Date = DTL.Production Date
LCL.Production_Date = DTL.Production_Date;

// LCL.Shift Number = DTL.Shift Number
LCL.Shift_Number = DTL.Shift_Number;

// WRK.USR Display 1 = CND.Yes
WRK.USR_Display_1 = 'Y';

// DTL.Status - Y or N = CND.no
DTL.Status_Y_or_N = 'N';

// Send error message - 'Packaging Daily Usage already exists. Enter -Y- to overwrite.'
ERROR(USR3198);
MSGPARM(DTL.Status_Y_or_N);

ENDIF;

ENDIF;

//?USER: User defined action

CASE;

// IF DTL.Status - Y or N is yes
IF DTL.Status_Y_or_N = 'Y';

//?Get the Company Value PACKAGING MP2 UPLOAD file
// LCL.Company Value Code = CND.Packaging Upload Name
LCL.Company_Value_Code = 'PKGUPLNME';

// Call program Rtv Alpha Value       XF.
CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
PARAMETER(DTL.Company_Number);
PARAMETER(LCL.Company_Value_Code);
PARAMETER(LCL.System_Value_Alpha);

// LCL.Label Name Usr = LCL.System Value Alpha
LCL.Label_Name_Usr = LCL.System_Value_Alpha;

//?Read the Packaging Daily Usage by Company, Date and Shift
//?if record is found then delete the record.
//?Delete records from POA0CPL0   Packaging Daily Usage
EXECUTE FUNCTION(Rtv/Del PackagDly Usg RT) TYPE(RTVOBJ) FILE(POA0CPP)           AC1660166;
PARAMETER(DTL.Company_Number);
PARAMETER(DTL.Production_Date);
PARAMETER(DTL.Shift_Number);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Delete Packaging Daily Us) TYPE(DLTOBJ) FILE(POA0CPP)          AC1606909;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Packaging_Item_Code);
 PARAMETER(DB1.Production_Date);
 PARAMETER(DB1.Shift_Number);
}


//?UPLOAD MP2 DAILY USAGE
//?Input file is: PACKUPL  - Guymon
//?Input file is: PACKUPLTF- Triumph Foods
//?Output file is : POA0CPL0   Packaging Daily Usage
//?4/3/2007 slm add new cl to have override to the upload file
// Call program Zzz from MP2 - Clp    UP.
CALL PROGRAM(Zzz from MP2 - Clp    UP) ('POTJUCLP');
PARAMETER(DTL.Production_Date);
PARAMETER(DTL.Shift_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(JOB.*USER);
PARAMETER(DTL.Company_Number);
PARAMETER(LCL.Label_Name_Usr);

//?prior to TF, we just call the user pgm now we need a Cl for
//?override to the Upload file.
//?4/3/2007 SLM On message add the label name of the file and
//?             the shift.  Changed Message to have more
//?             information.
// Send information message - 'Packaging Dly Usage File &2 was uploaded for &1 Shift &3.'
MESSAGE(USR3199 *INFO);
MSGPARM(DTL.Production_Date);
MSGPARM(LCL.Label_Name_Usr);
MSGPARM(DTL.Shift_Number);

// WRK.USR Display 1 = CND.No
WRK.USR_Display_1 = 'N';

// LCL.Production Date = CON.*ZERO
LCL.Production_Date = *ZERO;

// LCL.Shift Number = CON.*BLANK
LCL.Shift_Number = *BLANK;

// LCL.Label Name Usr = CON.*BLANK
LCL.Label_Name_Usr = *BLANK;

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.USR Display 1 = CND.No
WRK.USR_Display_1 = 'N';

ENDIF;

