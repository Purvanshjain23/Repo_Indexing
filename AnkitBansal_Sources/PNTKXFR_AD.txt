// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNTKXFR
// ?Date: 14.08.2025 Time: 03:46:30
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?***PLEASE READ DOCUMENTATION BEFORE CHANGING/RECOMPILING!!!***
//?WI517 DN 10/12/23-Setup Eradani's Environment Libraries.
// Call program Upd Setup Eradani Libs CL.
CALL PROGRAM(Upd Setup Eradani Libs CL) ('PVBFUPC');

// WRK.Event Number = CND.Equal zero
WRK.Event_Number = *ZERO;

EXECUTE FUNCTION(RTV Next Event Number  RT) TYPE(RTVOBJ) FILE(OPEYCPP)          AC1306444;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(WRK.Event_Number);
{
 //?USER: Processing if Data record not found

 // PAR.Event Number = CON.1
 PAR.Event_Number = 1;

 //?USER: Process Data record

 // PAR.Event Number = DB1.Event Number
 PAR.Event_Number = DB1.Event_Number;

}


// WRK.Event Number = WRK.Event Number + CON.1
WRK.Event_Number = WRK.Event_Number + 1;

//?***** GET SHIP TO CUSTOMER FOR ORDER *****
EXECUTE FUNCTION(RTV PFS Close Order   RT) TYPE(RTVOBJ) FILE(OPBFCPP)           AC2003240;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(LCL.Ship_To_Customer);
PARAMETER(LCL.Header_Status_Last);
PARAMETER(LCL.Record_Found_USR);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 // PAR.Record Found USR = CND.Record Not Found
 PAR.Record_Found_USR = 'N';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 // PAR.Record Found USR = CND.Record Found
 PAR.Record_Found_USR = 'Y';

}


CASE;

// IF LCL.Record Found USR is Record Found
IF LCL.Record_Found_USR = 'Y';

EXECUTE FUNCTION(CRT OP Order Events    CR) TYPE(CRTOBJ) FILE(OPEYCPP)          AC1170141;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(WRK.Event_Number);
PARAMETER('04');
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER('IN');
PARAMETER(JOB.*Job_date);
PARAMETER('N');
PARAMETER('N');
PARAMETER('N');
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(LCL.Ship_To_Customer);
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp   IF) TYPE(EXCINTFUN)                      AC1142219;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*JOB
  PAR.Job_Name = JOB.*JOB;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

}


EXECUTE FUNCTION(CHG Ord Event & Stat.  CH) TYPE(CHGOBJ) FILE(OPBFCPP)          AC1306469;
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER('R');
PARAMETER(LCL.Header_Status_Last);
PARAMETER('04');
{
 //?USER: Processing before Data update

 EXECUTE FUNCTION(Set Date/Time Stamp.PgmIF) TYPE(EXCINTFUN)                     AC1425284;
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);
 {
  //?Execute internal function

  // PAR.Job Time = JOB.*Job time
  PAR.Job_Time = JOB.*Job_time;

  // PAR.User Id = JOB.*USER
  PAR.User_Id = JOB.*USER;

  // PAR.Job Name = JOB.*PROGRAM
  PAR.Job_Name = JOB.*PROGRAM;

  // PAR.Job Date = JOB.*Job date
  PAR.Job_Date = JOB.*Job_date;

 }

 // Call program TRG Order Hdr CHG Trig XT.
 CALL PROGRAM(TRG Order Hdr CHG Trig XT) ('PDW9XFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Broker_Order_Status);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.HPB_Ship_to_Warehouse);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.OH_Appt_Confirmation_Dt);
 PARAMETER(DB1.JPN_Invoice_Issuance_Date);
 PARAMETER(DB1.Load_Actual_Shipped_Date);
 PARAMETER(DB1.Load_BOL_Complete_Date);
 PARAMETER(DB1.Load_Truck_Departure_Date);
 PARAMETER(DB1.Maximum_Gross_Weight);
 PARAMETER(DB1.Time_of_Original_Entry);
 PARAMETER(DB1.OH_Appt_Confirmation_Tm);
 PARAMETER(DB1.Load_BOL_Complete_Time);
 PARAMETER(DB1.Load_Truck_Departure_Time);
 PARAMETER(DB1.Act_Frt_Reference_Amount);
 PARAMETER(DB1.Act_Non_Ref_Frt_Amount);
 PARAMETER(DB1.OH_Fuel_Surcharge_Amount);
 PARAMETER(DB1.OH_Total_Non_Ref_Frt_Amt);
 PARAMETER(DB1.OH_Total_Ref_Frt_Amt);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(DB1.EDI_Status_1);
 PARAMETER(DB1.EDI_Status_2);
 PARAMETER(DB1.EDI_Status_3);
 PARAMETER(DB1.Job_Time);
 PARAMETER(DB1.User_Id);
 PARAMETER(DB1.Job_Name);
 PARAMETER(DB1.Job_Date);

}


ENDIF;

//?WI517 DN 10/04/23-Initialize 'Send Email f/Failed API U'.
// LCL.Send Email f/Failed API U = CND.No
LCL.Send_Email_f_Failed_API_U = 'N';

//?WI517 DN 10/04/23-Added 'Called From Program' Input Parm.
//?- Added 'Send Email f/Failed API U' Output Parm.
//?WI609_2 JM 10/11/24-Addition of Parm SSCC Pallet ID Valid USR
// Call program ADD Ready to Confirm   XF.
CALL PROGRAM(ADD Ready to Confirm   XF) ('PDN2XFR');
PARAMETER(PAR.Company_Number);
PARAMETER(PAR.Order_Number);
PARAMETER(PAR.Actual_Shipped_Date);
PARAMETER(PAR.Access_Denied_Y_N);
PARAMETER(PAR.Scheduled_Ship_Date);
PARAMETER('PNTKXFR');
PARAMETER(LCL.Send_Email_f_Failed_API_U);
PARAMETER(*BLANK);

//?WI517 DN 10/04/23-If 'Send Email f/Failed API U=Yes' Then Send Email.
CASE;

// IF LCL.Send Email f/Failed API U is Yes
IF LCL.Send_Email_f_Failed_API_U = 'Y';

// Call program Prc Eml Shipping & IT  XF.
CALL PROGRAM(Prc Eml Shipping & IT  XF) ('PVA9XFR');
PARAMETER('PNTKXFR');

ENDIF;

// PAR.Company Number Alpha = CVTVAR(PAR.Company Number)
PAR.Company_Number_Alpha = CVTVAR(PAR.Company_Number);

// PAR.Order Number Alpha = CVTVAR(PAR.Order Number)
PAR.Order_Number_Alpha = CVTVAR(PAR.Order_Number);

// PAR.Date (Alpha) USR = CVTVAR(PAR.Actual Shipped Date)
PAR.Date_Alpha_USR = CVTVAR(PAR.Actual_Shipped_Date);

// PAR.Date From Alpha       USR = CVTVAR(PAR.Scheduled Ship Date)
PAR.Date_From_Alpha_USR = CVTVAR(PAR.Scheduled_Ship_Date);

// Retrieve message - '&6/&1/&2/&3/&4/&5'
LCL.Pager_Msg_256_USR = RTVMSG(USR4351);
PARAMETER(PAR.Company_Number_Alpha);
PARAMETER(PAR.Order_Number_Alpha);
PARAMETER(PAR.Date_Alpha_USR);
PARAMETER(PAR.Access_Denied_Y_N);
PARAMETER(PAR.Date_From_Alpha_USR);
PARAMETER(PGM.*Return_code);

// Execute command - 'SND Pager Message Aplha'
EXECUTE COMMAND(USR3113);
PARAMETER('PRKDEV3');
PARAMETER(LCL.Pager_Msg_256_USR);
PARAMETER('Add Ready to Confirm');

