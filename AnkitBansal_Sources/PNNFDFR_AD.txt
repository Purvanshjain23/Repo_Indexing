// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PNNFDFR
// ?Date: 14.08.2025 Time: 03:45:46
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Rtv and Center Hdg IF) TYPE(EXCINTFUN)                     AC1258539;
PARAMETER('OMS');
{
 //?Execute internal function

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


//?***** Change Log and comments
DO;

//?FP1322 RMC 11/30/09 New pgm
//?FP1110 RMC 7/24/08 Added Edit RIN option to allow retiring
ENDDO;

//?USER: Initialize subfile record from DBF record

//?Display stuff in RIN field for RFS version 2
CASE;

// IF RCD.COA BHR RFS Version Nbr is RFS 2
IF RCD.COA_BHR_RFS_Version_Nbr = '2';

CASE;

// IF RCD.COA GEN EMTS Sts is Blank
IF RCD.COA_GEN_EMTS_Sts = *BLANK;

// LCL.Count USR = CON.4
LCL.Count_USR = 4;

// IF *OTHERWISE
IF *OTHERWISE;

// LCL.Count USR = CON.2
LCL.Count_USR = 2;

ENDIF;

// LCL.USR 15 Text           USR = CONCAT(CON.GEN EMTS Sts:,RCD.COA GEN EMTS Sts,CON.1)
LCL.USR_15_Text_USR = 'GEN EMTS Sts:' + RCD.COA_GEN_EMTS_Sts (1);

// LCL.USR Description - 15 = CONCAT(CON.RIN EMTS Sts:,RCD.COA RIN EMTS Sts,CON.1)
LCL.USR_Description_15 = 'RIN EMTS Sts:' + RCD.COA_RIN_EMTS_Sts (1);

// RCD.COA Batch Header RIN = CONCAT(LCL.USR 15 Text           USR,LCL.USR Description - 15,LCL.Coun
RCD.COA_Batch_Header_RIN = LCL.USR_15_Text_USR + LCL.USR_Description_15 (LCL.Count_USR);

ENDIF;

//?USER: Process subfile control (Pre-confirm)

CASE;

// IF CTL.*CMD key is *Print List
IF CTL.*CMD_key = '21';

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Print RINS per Batch');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(LCL.PRT_Night_Queue);
PARAMETER('OMS');
PARAMETER(*MISSING);
PARAMETER(1);

CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

// IF *OTHERWISE
IF *OTHERWISE;

// PAR.Company Number Pass   USR = CTL.Company Number
PAR.Company_Number_Pass_USR = CTL.Company_Number;

// PAR.Invoice Number PASS = CTL.COA Batch Number
PAR.Invoice_Number_PASS = CTL.COA_Batch_Number;

// PAR.Seq No 1  PASS        USR = CTL.COA Batch Header RIN Seq
PAR.Seq_No_1_PASS_USR = CTL.COA_Batch_Header_RIN_Seq;

// Call program Zzz Prt Rins per Batch UP.
SBMJOB;
CALL PROGRAM(Zzz Prt Rins per Batch UP) ('PMRKUPR');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(PAR.Company_Number_Pass_USR);
PARAMETER(CTL.COA_ULSD_Company_#);
PARAMETER(PAR.Invoice_Number_PASS);
PARAMETER(PAR.Seq_No_1_PASS_USR);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(*ZERO);
PARAMETER(*ZERO);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(*BLANK);
PARAMETER(*BLANK);
PARAMETER(CTL.RFS_Transaction_Type);
SBMJOBOVR JOB(HPBATCHRIN);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

// Send information message - 'Print has been submitted.'
MESSAGE(USR1832 *INFO);

ENDIF;

ENDIF;

//?USER: Process subfile record (Pre-confirm)

CASE;

// IF RCD.*SFLSEL is *Display
IF RCD.*SFLSEL = '5'/'5';

// Call program Dsp RIN Detail        DR.
CALL PROGRAM(Dsp RIN Detail        DR) ('PNNLD1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.COA_ULSD_Company_#);
PARAMETER(RCD.COA_Batch_Number);
PARAMETER(RCD.COA_Batch_Header_RIN_Seq);
PARAMETER(RCD.COA_Batch_Hdr_RIN_Seq_Sec);

ENDIF;

CASE;

// IF RCD.*SFLSEL is Option 8
IF RCD.*SFLSEL = '8'/'8';

CASE;

// IF RCD.Order Number is Greater then zero
IF RCD.Order_Number > *ZERO;

// Call program DSP Ord Inq Ship Dtl   DF.
CALL PROGRAM(DSP Ord Inq Ship Dtl   DF) ('PDP3DFR');
PARAMETER(RCD.COA_Shipping_Company);
PARAMETER(RCD.Order_Number);
PARAMETER(LCL.Order_Sequence_Number);
PARAMETER(LCL.Application_Code);

// IF *OTHERWISE
IF *OTHERWISE;

// Send error message - 'Option is not allowed.'
ERROR(USR2262);
MSGPARM(RCD.*SFLSEL);

ENDIF;

ENDIF;

