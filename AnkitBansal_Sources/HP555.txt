      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:   HOG PRODUCTION
      * PROGRAM:  HP555
      * TITLE:    SELECT A GROUP FROM A SALES MOVEMENT
      * AUTHOR:   LEANNE FEDOR
      * CREATED:  06/19/95
      *
      * FUNCTION: THIS IS A SELECT FUNCTION WINDOW DISPLAY OF
      *           GROUPS ON SALES MOVEMENTS.
      *
      *         POSITIONERS:  MOVEMENT NUMBER
      *         SELECTORS:    HOG GROUP
      *                       CUSTOMER NUMBER
      *                       MOVEMENT STATUS
      *                       SALES TYPE
      *
      *         IT LOADS THE WINDOW SUBFILE A PAGE AT A TIME.
      *         IT DOES NOT USE THE STANDARD MESSAGE HANDLING PROGRAM.
      *         A RECORD IS SELECTED BY POSITIONING THE CURSOR
      *         ON THE LINE AND PRESSING ENTER.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 11/01/95  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'GROUP TYPE' ADDED TO
      *           HOG GROUP FILE.
      *
      * 02/06/96  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELD 'BOL PRINTED COUNT' ADDED
      *           TO SALES MOVEMENT HEADER FILE.
      *
      * 06/03/97  LEANNE FEDOR
      *           RECOMPILE ONLY. NEW FIELDS 'PURGE FLAG' AND 'DATE OF
      *           FIRST PURGE' ADDED TO HOG GROUP FILE.
      *
      * 02/16/98  LeAnne Fedor
      *           Recompile only. Added the following fields to the
      *           database for sales movement detail and check detail:
      *                     condemned head and pounds
      *                     yard dead head and pounds
      *
      * 01/11/99  LeAnne Fedor
      *           Recompile only. New field 'scheduled kill date' added
      *           to sales movement header file.
      *
      * 10/17/00  LeAnne Fedor
      *           Recompile only. New field 'load type' added to the sales
      *           movement head file.
      *
      * 06/26/01  LeAnne Fedor
      *           Recompile only.
      *           Manager and supervisor fields removed from Hog Group file.
      *
      * 07/06/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD555    CF   E             WORKSTN SFILE(HP555S1:HDRRN1)
     F                                     INFDS(IOFEED)
      *
     FHSL034D   IF   E           K DISK
      *    HOG GROUP
      *
      *
     FHSP053    IF   E           K DISK
      *  MOVEMENT STATUS CODE
      *
      *
     FHSJ085A   IF   E           K DISK    INFDS(DBFEED)
      *  SALES DETAIL + HEADER + HOG GROUP
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *
      *
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  DATE FORMATS
      *---------------------------------------------------------------
      *
      * DATE IN MMDDYY FORMAT
      *
     D                 DS
     D  WKMDY                  1      6  0
     D  WKMM                   1      2  0
     D  WKDD                   3      4  0
     D  WKYY                   5      6  0
      *
      * DATE IN CCYYMMDD FORMAT
      *
     D                 DS
     D  WKCYMD                 1      8  0
     D  WKCEN                  1      2  0
     D  WKYER                  3      4  0
     D  WKMON                  5      6  0
     D  WKDAY                  7      8  0
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
      *
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  CLEAR/FILL THE SUBFILE
      *
     C                   EXSR      $CLR1
     C                   EXSR      $FRSH1
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
     C                   WRITE     HP555K1
     C                   EXFMT     HP555C1
      *
      * SAVE THE VALUE FOR THE LOWEST SLF RRN ON THE SCREEN FOR
      * REPOSITIONING THE SUBFILE
      *
     C                   Z-ADD     IDFLOW        WKFLOW
      * RESET ERROR FLAG
     C                   Z-ADD     0             ERROR
      *
      * GET USER'S ENTRY AND RESET STANDARD RESPONSE
      *
     C                   SELECT
      *
     C     *IN12         WHENEQ    *ON                                          F12=PREVIOUS
     C                   MOVEL     EXIT          ROUTNE
      *
      * REPOSITION THE SUBFILE IF THE USER HAS CHANGED ANY OF THE
      * POSITIONERS OR THE SELECTORS THE CONTROL RECORD.
      *
     C     SVHGCD        WHENNE    C1HGCD                                       IF POSITION
     C     SVCVNO        ORNE      C1CVNO
     C     SVMSCD        ORNE      C1MSCD
     C     SVSTCD        ORNE      C1STCD
     C     SVMVSN        ORNE      C1MVSN
     C                   MOVEL     NO            RESET
     C                   MOVEL     SET1          ROUTNE
     C                   MOVEL     C1HGCD        SVHGCD
     C                   Z-ADD     C1CVNO        SVCVNO
     C                   MOVEL     C1MSCD        SVMSCD
     C                   MOVEL     C1STCD        SVSTCD
     C                   Z-ADD     C1MVSN        SVMVSN
      *
     C     *IN25         WHENEQ    *ON                                          F25-ROLLUP
     C                   EXSR      $LOAD1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * USER HAS PRESSED ENTER
      *
     C     NORECS        IFEQ      YES                                          IF EMPTY SFL
     C                   MOVEL     SET1          ROUTNE
     C                   ELSE
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDIF                                                  IF EMPTY SFL
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * IF THERE ARE NO ERRORS IN THE SUBFILE OPTION SELECTORS ENTERED
      * BY THE USER, THEN EXECUTE THE SUBROUTINE TO READ AND PROCESS
      * THE RECORDS SELECTED BY THE USER.  AFTER COMPLETING THE
      * SUBROUTINE, SET THE ROUTINE TO START OVER.
      *
     C     ERROR         IFEQ      0                                            IF NO ERROR
     C                   EXSR      $PROC1
      *
      * IF THE USER SELECTED A RECORD, THEN SET THE ROUTINE TO EXIT
      * THIS SELECTION PROGRAM.  IF NO RECORD WAS SELECTED, THEN
      * SET TO REDISPLAY THE SCREEN.
      *
     C     RSHGCD        IFNE      *BLANK
     C                   MOVEL     EXIT          ROUTNE
     C                   ELSE
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
      * ELSE THERE WERE ERRORS IN THE SUBFILE OPTIONS ENTERED, SO SET
      * TO REDISPLAY SCREEN AND ERRORS TO USER
      *
     C                   ELSE
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDIF                                                  IF NO ERROR
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $CLR1  - SUBROUTINE TO CLEAR THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $CLR1         BEGSR
      *
     C                   CLEAR                   HP555R1
     C                   WRITE     HP555R1
      *
     C                   CLEAR                   HP555S1
     C                   SETON                                        83        SFLCLR
     C                   WRITE     HP555C1
     C                   SETOFF                                       818283
      *                                                    81=SFLDSP
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $FRSH1 - SUBROUTINE TO REFRESH/FILL THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $FRSH1        BEGSR
      *
      * SET POSITION IN SALES MOVEMENT DETAIL FILE
      *
     C     C1MVSN        IFEQ      0
     C     *HIVAL        SETLL     HSJ085A
     C                   ELSE
     C     C1MVSN        SETLL     HSJ085A
     C                   ENDIF
      *
      * THE LOWEST SUBFILE RRN ON THE SCREEN FROM THE DSPF
      * FEEDBACK AREA (IDFLOW) WAS RETRIEVED EARLIER AND PUT IN WKFLOW.
      * ADD TO WKFLOW THE NUMBER OF LINES ON YOUR SUBFILE PAGE OR THE
      * NUMBER LESS 1 TO DETERMINE A SUBFILE RRN TO REPOSITION TO.
      * RESET IS A FLAG FIELD TO INDICATE WHETHER YOU ARE ATTEMPTING
      * TO REPOSITION THE USER CLOSE TO WHERE HE WAS IN THE SUBFILE.
      * IF RESET IS 'NO' DON'T REPOSITION THE USER--JUST START OVER.
      *
     C     RESET         IFEQ      YES
     C     WKFLOW        ADD       WKRLIN        MAXRRN
     C                   ELSE
     C                   Z-ADD     WKPLIN        MAXRRN
     C                   ENDIF
      *
      * LOAD THE SUBFILE UNTIL YOU HAVE THE REQUIRED NUMBER OF RECORDS.
      * THE NUMBER WILL DEPEND ON WHETHER YOU ARE REPOSITIONING THE
      * SUBFILE OR NOT. STOP IF YOU GET TO THE END OF THE SUBFILE.
      *
     C     HDRRN1        DOUGE     MAXRRN
     C     *IN82         OREQ      *ON
     C                   EXSR      $LOAD1
     C                   ENDDO
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $LOAD1 - SUBROUTINE TO LOAD THE SUBFILE FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $LOAD1        BEGSR
      *
      * SET THE COUNT OF RECORDS ON THE SUBFILE PAGE TO ZERO.
      *
     C                   Z-ADD     0             COUNT
      *
      * FILL THE SUBFILE UNTIL THE END OF THE DATABASE FILE OR YOU
      * HAVE FILLED ALL THE LINES ON THE SUBFILE PAGE
      *
     C                   SETOFF                                       82
     C     *IN82         DOUEQ     *ON                                          DO FILL LOOP
     C     COUNT         ORGE      WKPLIN
      *
      * OMIT 'SCHEDULED' MOVEMENTS
      *
     C                   READ      HSJ085A                                82
     C     *IN82         IFEQ      *OFF                                          IF READ
     C     SHMSCD        ANDNE     'SC'
      *
      * RETRIEVE ALPHA HOG GROUP FOR MATCHING ON USER
      * SELECTION AND FOR DISPLAYING.
      *
     C     SGHGSN        CHAIN     HSL034D                            92
     C     *IN92         IFEQ      *OFF
     C                   MOVEL     HGHGCD        DFHGCD
     C                   ELSE
     C                   MOVEL     'UNKNOWN'     DFHGCD
     C                   ENDIF
      *
      *  RETRIEVE THE 'POSTED FLAG' FOR THE STATUS TO DETERMINE
      *  WHETHER TO INCLUDE THE SALES MOVEMENT--OMIT POSTED ONES.
      *
     C     SHMSCD        CHAIN     HSP053                             92
     C     *IN92         IFEQ      *OFF                                         IF HIT
     C                   MOVEL     MSPOFL        WKPOFL
     C                   ELSE
     C                   MOVE      *BLANK        WKPOFL
     C                   ENDIF                                                  IF HIT
      *
     C     WKPOFL        IFEQ      YES                                          IF POSTED
     C                   ELSE
      *
      *   ONLY INCLUDE RECORDS THAT MATCH THE USER'S SELECTORS
      *
     C     C1HGCD        IFNE      *BLANK                                        IF GROUP
     C     DFHGCD        ANDNE     C1HGCD
     C                   ELSE
      *
     C     C1CVNO        IFNE      0                                             IF CUST
     C     SHCVNO        ANDNE     C1CVNO
     C                   ELSE
      *
     C     C1MSCD        IFNE      *BLANK                                        IF STATUS
     C     SHMSCD        ANDNE     C1MSCD
     C                   ELSE
      *
     C     C1STCD        IFNE      *BLANK                                        IF TYPE
     C     SHSTCD        ANDNE     C1STCD
     C                   ELSE
      *
      * FLIP RECEIVED DATE TO MDY FOR DISPLAY
      *
     C                   Z-ADD     SHRCDT        WKCYMD
     C                   EXSR      $TOMDY
     C                   Z-ADD     WKMDY         DFRMDY
      *
     C                   ADD       1             COUNT
     C                   ADD       1             HDRRN1
     C                   Z-ADD     SHMVSN        DFMVSN
     C                   Z-ADD     SHCVNO        DFCVNO
     C                   Z-ADD     SGSHHD        DFSHHD
     C                   Z-ADD     SGLVHD        DFLVHD
     C                   Z-ADD     SGDOHD        DFDOHD
     C                   MOVEL     SHMSCD        DFMSCD
     C                   MOVEL     SHSTCD        DFSTCD
     C                   WRITE     HP555S1
     C                   SETON                                        81
      *
      * FOR POSITIONING, PLACE THE SUBFILE RELATIVE RECORD NUMBER INTO
      * THE SFLRCDNBR FIELD (HDPAG1)
      *
     C                   Z-ADD     HDRRN1        HDPAG1
      *
     C                   ENDIF                                                  IF TYPE
     C                   ENDIF                                                  IF STATUS
     C                   ENDIF                                                  IF CUST
     C                   ENDIF                                                  IF GROUP
     C                   ENDIF                                                  IF POSTED
     C                   ENDIF                                                  IF READ
     C                   ENDDO                                                  DO FILL LOOP
      *
      * IF NO RECORDS WERE WRITTEN TO THE SUBFILE, THEN ISSUE
      * THE STANDARD MESSAGE 'NO DATA TO DISPLAY'.
      *
     C     HDRRN1        IFEQ      0
     C                   Z-ADD     1             ERROR
     C                   MOVEL     YES           NORECS
     C                   ELSE
     C                   MOVEL     NO            NORECS
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $TOMDY - FLIP DATE FROM CCYYMMDD TO MMDDYY
      *---------------------------------------------------------------
      *
     C     $TOMDY        BEGSR
      *
     C                   Z-ADD     WKMON         WKMM
     C                   Z-ADD     WKDAY         WKDD
     C                   Z-ADD     WKYER         WKYY
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO READ SUBFILE RECORDS AND PROCESS
      *          USER SELECTIONS FOR SCREEN 1
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
     C                   Z-ADD     0             ERROR
      *
      * IF CURSOR LOCATION RETURNED IS THE RRN OF A RCD IN THE SUBFILE,
      * CHAIN THE SUBFILE FOR THAT RECORD AND LOAD THE DATA INTO THE
      * PARM TO RETURN TO THE CALLING PROGRAM.
      *
     C                   SETOFF                                       82
     C     HDRRN         IFNE      0
     C                   Z-ADD     HDRRN         HDRRN1
     C     HDRRN1        CHAIN     HP555S1                            82
     C                   MOVEL     DFHGCD        RSHGCD
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *---------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      *
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * PARM LISTS
      *
     C     *ENTRY        PLIST
     C                   PARM                    RSHGCD
     C     SVCVNO        PARM                    C1CVNO
     C     SVSTCD        PARM                    C1STCD
     C     SVMVSN        PARM                    C1MVSN
      *
     C     *LIKE         DEFINE    DFHGCD        RSHGCD
     C     *LIKE         DEFINE    C1CVNO        SVCVNO
     C     *LIKE         DEFINE    C1MSCD        SVMSCD
     C     *LIKE         DEFINE    C1STCD        SVSTCD
     C     *LIKE         DEFINE    C1MVSN        SVMVSN
     C     *LIKE         DEFINE    C1HGCD        SVHGCD
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        ROUTNE            6            ROUTINE
     C                   Z-ADD     0             MAXRRN            4 0          REPOSITION
     C                   MOVEL     NO            RESET             1            REPOSITION
     C                   MOVEL     NO            NORECS            1            NO RECORDS
     C     *LIKE         DEFINE    IDFLOW        WKFLOW
     C                   Z-ADD     0             COUNT             2 0
     C                   Z-ADD     0             ERROR             2 0
      *
     C     *LIKE         DEFINE    MSPOFL        WKPOFL
      *
      * TO SUPPORT F5-REFRESH, LOGIC REQUIRES THE NUMBER OF LINES ON
      * THE SUBFILE PAGE AND ALSO THE NUMBER OF LINES LESS 1.  BY
      * SETTING THESE VALUES UP AS CONSTANT WORK FIELDS, THE PROCESSING
      * LOGIC CAN BE STANDARDIZED BETWEEN PROGRAMS.
      *
     C                   Z-ADD     8             WKPLIN            2 0          SFLPAG(0008)
     C     WKPLIN        SUB       1             WKRLIN            2 0          SFLPAG - 1
      *
      *  DO ONE TIME ONLY:  MAKE SURE CALLING PROGRAM SCREEN IS NOT
      *  CLEARED AND WRITE THE WINDOW DEFINITION RCDFMT
      *
     C                   WRITE     HP555R2                                      DUMMY FMT
     C                   WRITE     HP555R1                                      REF WINDOW
     C                   ENDSR
      /EJECT
