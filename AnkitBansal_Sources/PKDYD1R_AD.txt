// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKDYD1R
// ?Date: 14.08.2025 Time: 02:49:11
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E14180 JBB 12/03/2018 - HPS Automation
//?- Add HPS Automation flag to screen for output only
//?- Per Susan, we will show the HPS Automation flag only at this
//?  time.  I/T will continue to maintain this field in the file
//?  Producer EXT (PKAECPP).
//?R10690 JJH 06/07/17 - Producer Address
//?- Make this Display look like the revised Edt Producer          E1
//?- Change screen size to 132 Wide
//?- Remove PD VND Address Number (JDE Vendor)
//?- Add Alt Producer Payee, M3 Supplier ID  Alt Payee
//?- Display Producer Address
//?- Display M3 Address
//?T8163 DN  12/30/16 - Recompile only due to M3 Supplier file change.
//?E3580 RMC 08/21/15 - M3 Vendor interfaces changes.
ENDDO;

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


// Call program Val Application/User  XF.
CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
PARAMETER(WRK.Oms_Warehouse_Code);
PARAMETER(LCL.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(WRK.Oms_SalesPerson_Code);
PARAMETER(WRK.Oms_Allow_Multi_Company);
PARAMETER(WRK.Oms_Default_Printer);
PARAMETER(WRK.Oms_Name);
PARAMETER(WRK.Oms_System_Value_Alpha);
PARAMETER(WRK.Oms_Access_Denied_Y_N);

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(LCL.CC_Company_Number);
PARAMETER('M3VEND');
PARAMETER(PAR.Live_with_M3_USR);

//?USER: Load detail screen from DBF record

//?R10690 JJH 06/07/17 - Comment out logic no longer required
//?R10690 JJH 06/07/17 - Display Producer Address
// Call program Rtv Producer Address  XF.
CALL PROGRAM(Rtv Producer Address  XF) ('PWCZXFR');
PARAMETER(DB1.PD_Producer_Code);
PARAMETER(NLL.Address_Number);
PARAMETER(NLL.Pass_Name);
PARAMETER(DTL.Producer_Address_1_USR);
PARAMETER(DTL.Producer_Address_2_USR);
PARAMETER(DTL.Producer_Address_3_USR);
PARAMETER(DTL.Producer_City_USR);
PARAMETER(DTL.Producer_State_USR);
PARAMETER(DTL.Producer_Zip_10_USR);
PARAMETER(DTL.Producer_Area_Code_USR);
PARAMETER(DTL.Producer_Phone_Number_USR);
PARAMETER(DTL.Producer_Fax_Area_Cd_USR);
PARAMETER(DTL.Producer_Fax_Phone_#_USR);
PARAMETER(DTL.Fax_Attn_1);
PARAMETER(DTL.Fax_Area_Code_#);
PARAMETER(DTL.Fax_Telephone);
PARAMETER(DTL.Fax_Attn_2);
PARAMETER(NLL.Vendor_1099);
PARAMETER(NLL.Vendor_Tax_Id);
PARAMETER(DTL.Country_Code_Usr);

//?Fax Attn 1
CASE;

// IF DTL.Producer Fax Area Cd  USR is Not Blank
IF DTL.Producer_Fax_Area_Cd_USR <> *BLANK;

// OR DTL.Producer Fax Phone #  USR is Not Blank
OR DTL.Producer_Fax_Phone_#_USR <> *BLANK;

EXECUTE FUNCTION(Rtv Fax Detail        RT) TYPE(RTVOBJ) FILE(PKEAREP)           AB1206181;
PARAMETER('HPE');
PARAMETER(DTL.Producer_Fax_Area_Cd_USR);
PARAMETER(DTL.Producer_Fax_Phone_#_USR);
PARAMETER(DTL.Fax_Attn_1);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?Fax Attn 2
CASE;

// IF DTL.Fax Area Code # is Not Blank
IF DTL.Fax_Area_Code_# <> *BLANK;

// OR DTL.Fax Telephone is Not Blank
OR DTL.Fax_Telephone <> *BLANK;

EXECUTE FUNCTION(Rtv Fax Detail        RT) TYPE(RTVOBJ) FILE(PKEAREP)           AB1206181;
PARAMETER('HPE');
PARAMETER(DTL.Fax_Area_Code_#);
PARAMETER(DTL.Fax_Telephone);
PARAMETER(DTL.Fax_Attn_2);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?R10690 JJH 06/07/17 - Display M3 Address
EXECUTE FUNCTION(Rtv Get M3 Supplier   IF) TYPE(EXCINTFUN)                      AB1322091;
PARAMETER(DB1.PD_Producer_Code);
PARAMETER(DTL.M3_Supplier_ID);
PARAMETER(DTL.M3_Supplier_Name);
PARAMETER(DTL.M3_Address_Line_1);
PARAMETER(DTL.M3_Address_Line_2);
PARAMETER(DTL.M3_Address_Line_3);
PARAMETER(DTL.M3_City);
PARAMETER(DTL.M3_State);
PARAMETER(DTL.M3_Postal_Code);
PARAMETER(DTL.M3_Telephone_No_1);
PARAMETER(DTL.M3_Telephone_No_2);
PARAMETER(DTL.M3_Fax_Telephone);
PARAMETER(NLL.M3_Supplier_Tax_ID);
PARAMETER(DTL.M3_Country_Code);
{
 //?Execute internal function

 EXECUTE FUNCTION(Rtv Producer EXT2     RT) TYPE(RTVOBJ) FILE(PLB4REP)           AB1322079;
 PARAMETER(PAR.PD_Producer_Code);
 PARAMETER(PAR.M3_Supplier_ID);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(Rtv M# Supplier       RT) TYPE(RTVOBJ) FILE(PLB2REP)           AB1322067;
 PARAMETER(PAR.M3_Supplier_ID);
 PARAMETER(PAR.M3_Supplier_Name);
 PARAMETER(PAR.M3_Address_Line_1);
 PARAMETER(PAR.M3_Address_Line_2);
 PARAMETER(PAR.M3_Address_Line_3);
 PARAMETER(PAR.M3_City);
 PARAMETER(PAR.M3_State);
 PARAMETER(PAR.M3_Postal_Code);
 PARAMETER(PAR.M3_Telephone_No_1);
 PARAMETER(PAR.M3_Telephone_No_2);
 PARAMETER(PAR.M3_Fax_Telephone);
 PARAMETER(PAR.M3_Supplier_Tax_ID);
 PARAMETER(PAR.M3_Country_Code);
 {
  //?USER: Initialize routine

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

}


//?R10690 JJH 06/07/17 - Display other Fields
// DTL.Record Status Desc Usr = Condition name of DB1.RS Record Status
DTL.Record_Status_Desc_Usr = RTVCND(DB1.RS_Record_Status);

// Call program Rtv Alt Prd Py Nm&Vn# XF.
CALL PROGRAM(Rtv Alt Prd Py Nm&Vn# XF) ('PLO7XFR');
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.Alt_Producer_Payee);
PARAMETER(LCL.Alt_Prod_Payee_Vnd_AddUsr);
PARAMETER(DTL.M3_Supplier_ID_Alt_Payee);

EXECUTE FUNCTION(Rtv Source Desc       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1124642;
PARAMETER(DB1.SR_Source_Code);
PARAMETER(DTL.SR_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Hog Buyer Name    RT) TYPE(RTVOBJ) FILE(PKADREP)           AB1124643;
PARAMETER(DB1.HB_Buyer_Code);
PARAMETER(DTL.Name_USR);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(DTL.Commission_Producer_Payee);
PARAMETER(DTL.Name_Producer_USR);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


// DTL.Condition Name 1 USR = Condition name of DTL.PD Freight Exp Paid By
DTL.Condition_Name_1_USR = RTVCND(DTL.PD_Freight_Exp_Paid_By);

EXECUTE FUNCTION(RTV MPR Prdcr Purch TpRT) TYPE(RTVOBJ) FILE(PKE3CPP)           AB1235599;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.MPR_Purchase_Type_Code);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(Rtv MPR Purch Desc    RT) TYPE(RTVOBJ) FILE(PKE2REP)           AB1235607;
PARAMETER(DTL.MPR_Purchase_Type_Code);
PARAMETER(DTL.MPR_Purchase_Type_Desc);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


EXECUTE FUNCTION(Rtv HPS Automation    RT) TYPE(RTVOBJ) FILE(PLAOREP)           AB1342216;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.HPS_Automation_Y_N_Usr);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?12/03/2018 JBB E14180 - Retrieve HPS Automation flag
EXECUTE FUNCTION(Rtv HPS Automation    RT) TYPE(RTVOBJ) FILE(PLAOREP)           AB1342216;
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.HPS_Automation_Y_N_Usr);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Populate HPS Automation description
CASE;

// IF DTL.HPS Automation Y/N Usr is N
IF DTL.HPS_Automation_Y_N_Usr = 'N';

// DTL.Yes/No Text USR 3A = CON.No
DTL.Yes_No_Text_USR_3A = 'No';

//?Populate HPS Automation description
// IF DTL.HPS Automation Y/N Usr is Y
IF DTL.HPS_Automation_Y_N_Usr = 'Y';

// DTL.Yes/No Text USR 3A = CON.Yes
DTL.Yes_No_Text_USR_3A = 'Yes';

//?Populate HPS Automation description
// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Yes/No Text USR 3A = CON.*BLANK
DTL.Yes_No_Text_USR_3A = *BLANK;

ENDIF;

//?USER: Validate detail screen

//?R10690 JJH 06/07/17 - Logic no longer required
// DTL.Record Status Desc Usr = Condition name of DTL.RS Record Status
DTL.Record_Status_Desc_Usr = RTVCND(DTL.RS_Record_Status);

EXECUTE FUNCTION(Rtv Source Desc       RT) TYPE(RTVOBJ) FILE(PKAAREP)           AB1124642;
PARAMETER(DTL.SR_Source_Code);
PARAMETER(DTL.SR_Description);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Hog Buyer Name    RT) TYPE(RTVOBJ) FILE(PKADREP)           AB1124643;
PARAMETER(DTL.HB_Buyer_Code);
PARAMETER(DTL.Name_USR);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(DTL.Commission_Producer_Payee);
PARAMETER(DTL.Name_Producer_USR);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


