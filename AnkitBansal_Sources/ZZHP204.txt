      *****************  RPG PROGRAM HEADING  ************************
      *
      *
      * NOTE!!!  In March 2001, user changes made this function obsolete.
      *          But, Alice felt that there was a high probablity that the users would
      *          change their minds again and request that these transfer functions
      *          be reinstalled.  So, we kept this code just in case!!!
      *
      *
      * SYSTEM:      HPS Data Mart
      * PROGRAM:     HP204 - Update Weekly Production with Transfers
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/08/00
      *
      * Function:    This program reads the Datamart Transferred Gilts/Sows file
      *              and updates the Datamart Weekly Production records for both
      *              the origin and destination farms.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 01/29/01  LeAnne Fedor
      *           Recompile only. The field 'production type' was removed from the
      *           Datamart Farm Site file and added to the Datamart Weekly Production file.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
      *
     Fhsl093a   if   e           k disk
      *    BGF farrowing and pregnancy check events
      *
      *
     Fhppb090   if   e           k disk
      *    DataMart BGF: Transferred Gilts/Sows
      *
      *
     Fhppb092   uf   e           k disk
      *    DataMart BGF: Weekly Production
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Workfields
      *
     D wkfscd          s                   like(bgorfscd)
     D wkevfl          s                   like(beevfl)
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * Mainline
      ****************************************************************
      *
      * Read each record in the Datamart BGF Transferred Gilts/Sows file.
      *
     C     *loval        setll     hppb090
      *
     C                   dou       *in90 = *on                                  Main do
     C                   read      hppb090                                90
     C                   if        *in90 = *off                                 If not EOF
      *
      * For the origin farm of the transfer record just read,
      * retrieve the weekly production record that has a 'calendar year/week'
      * equal to the 'service year/week' of the transfer record.
      *
     C                   z-add     bgorfscd      wkfscd
     C                   exsr      $origin
      *
      *
      * For the destination farm of the transfer record just read,
      * retrieve the weekly production record that has a 'calendar year/week'
      * equal to the 'service year/week' of the transfer record.
      *
     C                   z-add     bgdnfscd      wkfscd
     C                   exsr      $dest
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Logic for origin farm site.
      *---------------------------------------------------------------
      *
     C     $origin       begsr
      *
      * Retrieve the Datamart Weekly Production Record for the
      * service year/week/farm and subtract the 'pregnant' gilts/sows
      * in the Transferred Gilts/Sows file from the weekly 'preg
      * checked positive' head.
      *
     C     key01         chain     hppb092                            92
     C                   if        *in92 = *off                                 If hit
     C                   sub       bgprglhd      bppreghd
     C                   sub       bgprsohd      bppreghd
     C                   sub       bgglsv        bptrglsv
     C                   sub       bgsosv        bptrsosv
     C                   update    bprec
     C                   endif                                                  If hit
      *
      * You now need to subtract the 'serviced' gilts/sows in the
      * Transferred Gilts/Sows record from the 'data entry preg services'
      * field in the corresponding 'data entry' Weekly Production record.
      * To find the correct weekly record to update, you must:
      *  a) retrieve the 'P' event record for this service year/week/farm
      *     to get the associated event year/week
      *  b) retrieve the weekly production record for this event year/week
      *     farm
      *
     C                   move      'P'           wkevfl
     C     key02         chain     hsl093a                            92
     C                   if        *in92 = *off                                 If P event
      *
     C     key03         chain     hppb092                            92
     C                   if        *in92 = *off                                 If hit
     C                   sub       bgglsv        bpdeprsv
     C                   sub       bgsosv        bpdeprsv
     C                   sub       bgprglhd      bpdeprhd
     C                   sub       bgprsohd      bpdeprhd
     C                   update    bprec
     C                   endif                                                  If hit
     C                   endif                                                  If P event
      *
      *
      * You now need to subtract the 'serviced'  and 'pregnant' gilts/sows in
      * the  Transferred Gilts/Sows record from the 'data entry farrowng'
      * fields in the corresponding 'data entry' Weekly Production record.
      * To find the correct weekly record to update, you must:
      *  a) retrieve the 'F' event record for this service year/week/farm
      *     to get the associated event year/week
      *  b) retrieve the weekly production record for this event year/week
      *
      *
     C                   move      'F'           wkevfl
     C     key02         chain     hsl093a                            92
     C                   if        *in92 = *off                                 If F event
      *
     C     key03         chain     hppb092                            92
     C                   if        *in92 = *off                                 If hit
     C                   sub       bgglsv        bpdefasv
     C                   sub       bgsosv        bpdefasv
     C                   sub       bgprglhd      bpdefapr
     C                   sub       bgprsohd      bpdefapr
     C                   sub       bgglsv        bpdegshd
     C                   sub       bgsosv        bpdegshd
     C                   update    bprec
     C                   endif                                                  If hit
     C                   endif                                                  If F event
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Logic for destination farm site.
      *---------------------------------------------------------------
      *
     C     $dest         begsr
      *
      * Retrieve the Datamart Weekly Production Record for the
      * service year/week/destination farm and add the 'pregnant'
      * gilts/sows in the Transferred Gilts/Sows record to the
      * weekly production 'preg checked positive' head.
      *
     C     key01         chain     hppb092                            92
     C                   if        *in92 = *off                                 If hit
     C                   add       bgprglhd      bppreghd
     C                   add       bgprsohd      bppreghd
     C                   add       bgglsv        bptrglsv
     C                   add       bgsosv        bptrsosv
     C                   update    bprec
     C                   endif                                                  If hit
      *
      *
      * You now need to add the 'serviced' gilts/sows in the
      * Transferred Gilts/Sows record to the 'data entry preg services'
      * field in the corresponding 'data entry' Weekly Production record.
      * To find the correct weekly record to update, you must:
      *  a) retrieve the 'P' event record for this service year/week/farm
      *     to get the associated event year/week
      *  b) retrieve the weekly production record for this event year/week
      *
      *
     C                   move      'P'           wkevfl
     C     key02         chain     hsl093a                            92
     C                   if        *in92 = *off                                 If P event
      *
     C     key03         chain     hppb092                            92
     C                   if        *in92 = *off                                 If hit
     C                   add       bgglsv        bpdeprsv
     C                   add       bgsosv        bpdeprsv
     C                   add       bgprglhd      bpdeprhd
     C                   add       bgprsohd      bpdeprhd
     C                   update    bprec
     C                   endif                                                  If hit
     C                   endif                                                  If P event
      *
      *
      * You now need to add the 'serviced'  and 'pregnant' gilts/sows in
      * the Transferred Gilts/Sows record to the 'data entry farrowing'
      * fields in the corresponding 'data entry' Weekly Production record.
      * To find the correct weekly record to update, you must:
      *  a) retrieve the 'F' event record for this service year/week/farm
      *     to get the associated event year/week
      *  b) retrieve the weekly production record for this event year/week
      *     farm
      *
     C                   move      'F'           wkevfl
     C     key02         chain     hsl093a                            92
     C                   if        *in92 = *off                                 If F event
      *
     C     key03         chain     hppb092                            92
     C                   if        *in92 = *off                                 If hit
     C                   add       bgglsv        bpdefasv
     C                   add       bgsosv        bpdefasv
     C                   add       bgprglhd      bpdefapr
     C                   add       bgprsohd      bpdefapr
     C                   add       bgglsv        bpdegshd
     C                   add       bgsosv        bpdegshd
     C                   update    bprec
     C                   endif                                                  If hit
     C                   endif                                                  If F event
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * *inzsr - initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    bgsvyr
     C                   kfld                    bgsvwk
     C                   kfld                    wkfscd
      *
     C     key02         klist
     C                   kfld                    wkfscd
     C                   kfld                    bgsvyr
     C                   kfld                    bgsvwk
     C                   kfld                    wkevfl
      *
     C     key03         klist
     C                   kfld                    beevyr
     C                   kfld                    beevwk
     C                   kfld                    wkfscd
      *
     C                   endsr
      /eject
