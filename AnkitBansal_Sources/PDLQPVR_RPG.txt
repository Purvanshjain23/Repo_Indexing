     H/TITLE PMT Cnfrm Post Request PV Prompt & validate record
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Prompts fields, allowing user changes
     H* - Validates fields
     H* - If valid, performs an action
      *
     H* Generated by  : 2E  Version:  1135
     H* Function type : Prompt & validate record
      *
     H* Company       : OMS Development Model         lopment-
     H* System        : OMS Development Model
     H* User name     : ISRCENT
     H* Date          : 03/30/05  Time  : 11:35:03
     H* Copyright     : OMS Development Model         lopment-
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPDLQPVR#CF  E                    WORKSTN
     F                                              KINFDS INFDS#
      * DSP: PMT Cnfrm Post Request PV Prompt & validate record
      *
     FCAEBREL2IF  E           K        DISK
      * RSQ : Bank Master               Lockbox Number
      *
     FPDJ2CPL1IF  E           K        DISK
      * RTV : A/R Bank Deposit          Retrieval index
      *
     FPDMACPL0UF  E           K        DISK
      * UPD : A/R Lockbox Deposit       Update index
      *
     E                    #L7         7  1
      * Set wdw location allowed?
     E                    YSL         1  1
     I@MACPTR
      * A/R Lockbox Deposit       Update index
      * Renamed input format fields
     I              MABEC3                          WABEC3
     I              MALWDT                          WALWDT
     I              MAYWNX                          WAYWNX
     I              MANMC1                          WANMC1
     I              MANMC2                          WANMC2
     I              MAZXVA                          WAZXVA
     I              MAAWSX                          WAAWSX
      *
     I@EBREJT
      * Bank Master               Lockbox Number
      * Renamed input format fields
     I              EBG4CD                          WBG4CD
     I              EBAUNA                          WBAUNA
     I              EBIVTX                          WBIVTX
     I              EBD4C7                          WBD4C7
     I              EBD5C7                          WBD5C7
     I              EBJOSX                          WBJOSX
     I              EBUVST                          WBUVST
     I              EBUWST                          WBUWST
     I              EBUXST                          WBUXST
     I              EBVSST                          WBVSST
     I              EBAATM                          WBAATM
     I              EBAYNA                          WBAYNA
     I              EBA0NA                          WBA0NA
     I              EBAXDT                          WBAXDT
      *
     I@J2CPCN
      * A/R Bank Deposit          Retrieval index
      * Renamed input format fields
     I              J2G4CD                          WCG4CD
     I              J2HXDT                          WCHXDT
     I              J2YXNX                          WCYXNX
     I              J2UIVA                          WCUIVA
     I              J2UJVA                          WCUJVA
     I              J2AJST                          WCAJST
     I              J2CKNB                          WCCKNB
     I              J2BHNB                          WCBHNB
     I              J2BINB                          WCBINB
     I              J2E2VL                          WCE2VL
     I              J2E3VL                          WCE3VL
     I              J2E4VL                          WCE4VL
     I              J2E5VL                          WCE5VL
     I              J2E6VL                          WCE6VL
     I              J2E7VL                          WCE7VL
     I              J2E8VL                          WCE8VL
     I              J2E9VL                          WCE9VL
     I              J2FAVL                          WCFAVL
     I              J2FBVL                          WCFBVL
     I              J2FCVL                          WCFCVL
     I              J2FDVL                          WCFDVL
     I              J2HYDT                          WCHYDT
     I              J2UVST                          WCUVST
     I              J2UWST                          WCUWST
     I              J2UXST                          WCUXST
     I              J2VSST                          WCVSST
     I              J2AATM                          WCAATM
     I              J2AYNA                          WCAYNA
     I              J2A0NA                          WCA0NA
     I              J2AXDT                          WCAXDT
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
      * Outward parameters
     IPARC        DS                             24
      * RCD : A/R Lockbox Deposit       Retrieval index
      * I :  LckBx Number
     I                                    P   1   40PABEC3
      * I :  LckBx Deposit Date
     I                                    P   5   80PALWDT
      * I :  LckBx Deposit Time
     I                                    P   9  110PAYWNX
      *
     IQPDMA1    E DSPDMACPL0
      * UPD : A/R Lockbox Deposit       Update index
      * Renamed input format fields
     I              MABEC3                          WABEC3
     I              MALWDT                          WALWDT
     I              MAYWNX                          WAYWNX
     I              MANMC1                          WANMC1
     I              MANMC2                          WANMC2
     I              MAZXVA                          WAZXVA
     I              MAAWSX                          WAAWSX
      *
     IYARDCS      DS                             24
      * Message data for message Y2U0009.
     IMD0009      DS
     I                                        1  10 MDPGM
     I                                       11  20 MDACP
     I                                       21  30 MDFMT
     I                                       31  34 MDACT
     I                                       35  40 MDLBL
      /EJECT
     IXDINT       DS
      * Internal date
     I                                        1   70XDINDT
     I                                        1   30XDINYY
     I                                        4   50XDINMM
     I                                        6   70XDINDD
      /EJECT
     IXDEX        DS
      * External date
     I                                        1   80XDEXDT
     I                                        1   40XDEY01
     I                                        1   20XDEX01
     I                                        3   40XDEX02
     I                                        5   80XDEY02
     I                                        5   60XDEX03
     I                                        7   80XDEX04
      /EJECT
      * Parameter declarations
     IP1PARM      DS                             24
      * RCD: A/R Lockbox Deposit       Retrieval index
      * I : MAP LckBx Number
     I                                    P   1   40P1BEC3
      * I : MAP LckBx Deposit Date
     I                                    P   5   80P1LWDT
      * I : MAP LckBx Deposit Time
     I                                    P   9  110P1YWNX
      * Submit job processing data structures.
     I#SRQS       DS                           3000
     I                                        1   1 #SDMY1
     I#SSTR       DS                           3000
     I                                        1   1 #SDMY2
     I#SWRK       DS                           3000
     I                                        1   1 #SDMY3
     I#SMRG       DS                            256
     I                                        1   1 #SDMY4
     I            DS
     I I            'CMD(CALL PGM('           1  13 #SCLL
     I I            'PARM('                  14  18 #SPRM
     I I            ')'                      19  19 #SPRN
     I I            '          '             20  29 #SPRG
      * Submit job command strings.
     I            DS
     I I            'SBMJOB     JOB(*JOBD-    1 256 #S0001
     I              ') JOBD(*USRPRF)     '
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
     C                     PARM           P1PARM           RCD: A/R Lockbo
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
      * Conduct screen conversation
     C                     DO   *HIVAL
      * Start new transaction
     C                     MOVEL'Y'       W0TRN   1
      * Process current transaction
     C           W0TRN     DOWEQ'Y'
      * Convert fields to external form
     C                     EXSR MNCV#1
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Reset screen fields
     C   30                CAS            MALDSC
      * Reposition window
     C   26                CAS            ZRRPWD
      * Process screen input
     C                     CAS            DAPRSC
     C                     END
      *
     C                     END
      *
     C                     END
      *****************************************************************
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen and process HELP requests
      *================================================================
      * Update screen time
     C                     TIME           ##TME
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
     C                     Z-ADD1         YWPNNO  10       Panel number
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
     C                     Z-ADD1         W0WASM  10
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#RCDDTL1
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPRSC    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
      * Validate screen input
     C                     EXSR DBVLSC
      * If error, exit
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      * USER: User defined action
      * CASE: DTL.@Yes/No Flag is Yes
     C           #DAASX    IFEQ 'Y'                        *IF
      * *** Submit Post to Batch. ***
      * SBMJOB: PRC Lckbx to A/R Post  XF - A/R Lockbox Deposit  * 
     C                     CLEARPARC
     C                     Z-ADD#1BEC3    PABEC3           LckBx Number
     C                     Z-ADD#1LWDT    PALWDT           LckBx Deposit D
     C                     Z-ADD#1YWNX    PAYWNX           LckBx Deposit T
      *
      *
     C                     MOVEL*BLANK    W0RTN
      * Build call string for processing in batch.
     C                     MOVEL#S0001    #SRQS     P
     C           #SRQS     CAT  #SCLL:1   #SRQS            Call command
     C                     MOVEL'PDLMXFR '#SPRG     P      Load pgm name
     C           #SRQS     CAT  #SPRG:0   #SRQS            Add pgm name
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
      * Build parameters string.
     C           #SRQS     CAT  #SPRM:1   #SRQS            Parameters
      *
     C                     MOVELW0RTN     #SSTR     P      *Return code
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 7         #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C                     MOVELPARC      #SSTR     P      RCD: A/R Lockbo
     C                     CALL 'Y2BLSJR'
     C                     PARM           W0RTN
     C                     PARM           #SSTR
     C                     PARM 'A'       #STYP   1
     C                     PARM 24        #SLEN   50
     C                     PARM           #SDEC   10
     C                     PARM           #SRQS
      *
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *................................................................
     C           #SRQS     CAT  #SPRN:0   #SRQS            Parenthesis
      *
     C           W0RTN     IFNE *BLANK
      * Build of submit job string ended in error.
     C                     MOVEL'Y2U0065' W0RTN
     C                     MOVEL'PDLMXFR 'W0CLPG 10 P
      * Send message '*Error occured on SBMJOB'
     C                     MOVEL'Y2U0065' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     ELSE
      *
     C           W0SJO     IFNE *BLANK
      * Merge variable submit job overrides.
     C                     CALL 'Y2MGRQR'              90  *
     C                     PARM #SRQS     #SWRK
     C                     PARM W0SJO     #SMRG
     C  N90                MOVEL#SWRK     #SRQS     P
     C                     MOVE *BLANK    W0SJO
     C                     END
      * Submit request.
     C                     CALL 'Y2CMEXC'              90  *
     C                     PARM           #SRQS
     C                     PARM 3000      #SRQL  155
     C                     PARM           W0JVN  10
     C                     PARM           W0JUN  10
     C                     PARM           W0JNB   6
     C                     END
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PDLMXFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     99    *
     C                     END
      * *** Change the status of the Lockbox Deposit Record to posted. **
      * CHG Lockbox Status     CH - A/R Lockbox Deposit  * 
     C                     EXSR SACHRC
     C                     END                             *FI
      * Exit program
     C                     EXSR ZXEXPG
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBVLSC    BEGSR
      *================================================================
      * Validate screen input
      *================================================================
      * Validate @Yes/No Flag
     C                     MOVEL*BLANK    W0RTN
      * Name search required?
     C           '#DAASX'  IFEQ YPMTFD
      * @Yes/No Flag
     C                     MOVEL#DAASX    W0INVL 25
      * Set current value in drop down list.
     C                     MOVEL*ZEROS    ZHAASX
     C                     SELEC
     C           W0INVL    WHEQ 'N'                        N
     C                     Z-ADD1         ZHAASX
     C           W0INVL    WHEQ 'Y'                        Y
     C                     Z-ADD2         ZHAASX
     C                     ENDSL
     C                     EXFMTZGAASX
      * Set selected value from drop down list.
     C                     MOVEL*BLANKS   W0INVL
     C                     SELEC
     C           ZHAASX    WHEQ 1
     C                     MOVEL'N'       W0INVL           N
     C           ZHAASX    WHEQ 2
     C                     MOVEL'Y'       W0INVL           Y
     C                     ENDSL
     C                     SETOF                     90    *
     C                     MOVELW0INVL    #DAASX
      * Defer confirm
     C                     MOVEL'Y'       W0DCF   1
     C                     MOVEL'*DONE'   YPMTFD
     C                     END
      *
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate fields
      * RTV Bank Cd f/Lckbx   RT - Bank Master  * 
     C                     EXSR SBRVGN
      * VAL Bank Deposit Exist RT - A/R Bank Deposit  * 
     C                     EXSR SCRVGN
      * CASE: PGM.*Return code is *Normal
     C           W0RTN     IFEQ *BLANK                     *IF
      * Send message 'A/R Bank Deposit       EX'
     C                     MOVEL'USR2040' ZAMSID
     C                     EXSR ZASNMS
     C                     SETON                     99    *
      *
     C                     END                             *FI
     C                     END
      * Bypass ref file checks if error already detected
     C   99                GOTO DBEXIT
     C           YPMTFD    IFEQ *BLANKS
      * USER: Validate relations
      * CASE: DTL.@Yes/No Flag is No
     C           #DAASX    IFEQ 'N'                        *IF
     C                     MOVEL'Y'       W0DCF            *Defer confirm
     C                     END                             *FI
     C                     END
      * @Yes/No Flag required
     C           #DAASX    IFEQ *BLANK                     IF
     C           YPMTFD    ANDEQ*BLANKS
     C                     SETON                     9931  *
      * Send message '*Value required'
     C                     MOVEL'Y2U0001' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         MALDSC    BEGSR
      *================================================================
      * Load screen from passed parameters
      *================================================================
     C                     Z-ADD*ZERO     #1NMC1           LckBx Dpst Nbr
     C                     Z-ADD*ZERO     #1NMC2           LckBx Dpst Nbr
     C                     Z-ADD*ZERO     #1ZXVA           LckBx Deposit A
     C                     MOVEL*BLANK    #1AWSX           LckBx Deposit S
     C                     Z-ADDP1BEC3    #1BEC3           LckBx Number
      * Clear external version also
     C                     MOVEL*BLANK    V1BEC3
     C                     Z-ADDP1LWDT    #1LWDT           LckBx Deposit D
      * Clear external version also
     C                     Z-ADD*ZERO     V1LWDT
     C                     Z-ADDP1YWNX    #1YWNX           LckBx Deposit T
     C                     MOVEL*BLANK    #DAASX           @Yes/No Flag
      * USER: Load screen
     C                     MOVEL'N'       #DAASX           @Yes/No Flag
      *================================================================
     CSR         MAEXIT    ENDSR
      /EJECT
     CSR         MNCV#1    BEGSR
      *================================================================
      * Convert fields into external form
      *================================================================
      * Convert LckBx Number to external.
      * CD7 Int/Ext
      * CASE: PAR.CD7 Int Numeric Key is not equal zero
     C           #1BEC3    IFNE *ZERO                      *IF
     C                     MOVEL*BLANK    WUEOCD           CD7 Ext Numeric
     C                     MOVEL#1BEC3    WUEOCD           CD7 Ext Numeric
      * CD7 Int/Ext EXCUSRSRC - *Field attribute types  * 
     C                     MOVEAWUEOCD    #L7              EDIT ARRAY
     C                     Z-ADD1         #E      30
     C                     MOVE *IN61     UUIN61  1
     C                     SETOF                     61
     C                     DO   7
     C           #L7,#E    IFEQ '0'                        ZERO VALUE
     C           *IN61     IFEQ '0'
     C                     MOVE ' '       #L7,#E
     C                     ADD  1         #E
     C                     END
     C                     ELSE
     C                     SETON                     61
     C                     END
     C                     END
     C                     MOVEA#L7       WUEOCD
     C                     MOVE UUIN61    *IN61
     C                     MOVELWUEOCD    V1BEC3           CD7 Ext Numeric
     C                     ELSE
      * CASE: *OTHERWISE
     C                     MOVEL*BLANK    V1BEC3           CD7 Ext Numeric
     C                     END                             *FI
      * Convert LckBx Deposit Date to display format
      * Convert date
     C           1000000   ADD  #1LWDT    XDINDT
     C                     EXSR XDVC2T
     C                     Z-ADDXDEXDT    V1LWDT
      *================================================================
     CSR         MNEXIT    ENDSR
      /EJECT
     CSR         SACHRC    BEGSR
      *================================================================
      * CHG Lockbox Status     CH - A/R Lockbox Deposit  * 
      *================================================================
      *
     C                     Z-ADD*ZERO     WN0001  40       LckBx Dpst Nbr
     C                     Z-ADD*ZERO     WN0002  40       LckBx Dpst Nbr
     C                     Z-ADD*ZERO     WN0003 112       LckBx Deposit A
      *
     C                     MOVEL*BLANK    W0RTN   7
      * Set PGM.*Record Data Changed flag
     C                     MOVE *BLANK    YARDC   1
      *
      * Move key fields to @MACPTR
     C                     Z-ADD#1BEC3    WABEC3           LckBx Number
     C                     Z-ADD#1LWDT    WALWDT           LckBx Deposit D
     C                     Z-ADD#1YWNX    WAYWNX           LckBx Deposit T
      *
     C           KLCHSA    KLIST
     C                     KFLD           WABEC3           LckBx Number
     C                     KFLD           WALWDT           LckBx Deposit D
     C                     KFLD           WAYWNX           LckBx Deposit T
     C           KLCHSA    CHAIN@MACPTR              9091  *
      *
     C           *IN90     IFEQ '1'
      * Record not found
     C                     MOVEL'Y2U0009' W0RTN   7
     C                     MOVEL##PGM     MDPGM
     C                     MOVEL'PDMACPL0'MDACP
     C                     MOVEL'@MACPTR' MDFMT
     C                     MOVEL'*CHG'    MDACT
      * Record not found label: LBL001.
     C                     MOVEL'LBL001'  MDLBL
      * Send message '*Record no longer on file'
     C                     MOVEL'Y2U0009' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELMD0009    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     MOVEL*BLANKS   MD0009
     C                     GOTO SAEXIT
     C                     ENDIF
      *
     C           *IN91     IFEQ '1'
      * Record locked
     C                     MOVEL'Y2U0004' W0RTN   7
      * Send message '*Database operation error'
     C                     MOVEL'Y2U0004' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     GOTO SAEXIT
     C                     ENDIF
      *
      * Store record data for null update check
     C                     MOVE QPDMA1    YARDCS
      * Move non-key fields to @MACPTR
     C                     MOVEL'P'       WAAWSX    P      LckBx Deposit S
      *
      * Set PGM.*Record Data Changed flag
     C           QPDMA1    IFNE YARDCS
     C           YARDC     ANDNE'N'
     C                     MOVE 'Y'       YARDC
     C                     ENDIF
      * If changed update record otherwise release record
     C           YARDC     IFEQ 'Y'
     C                     UPDAT@MACPTR                91  *
     C                     ELSE
      * Release record lock
     C                     UNLCKPDMACPL0               91  *
     C                     ENDIF
     C           *IN91     IFEQ '1'
      * Change error detected
     C                     MOVEL'Y2U0004' W0RTN   7
     C                     ELSE
      *
      * DBF change successful
     C                     ENDIF
      *================================================================
     CSR         SAEXIT    ENDSR
      /EJECT
     CSR         SBRVGN    BEGSR
      *================================================================
      * RTV Bank Cd f/Lckbx   RT - Bank Master  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Declare restrictor key work fields
     C           *LIKE     DEFN WBD4C7    WQSB02           Bank LckBx Numb
      * Define keylist
     C           KRSSB     KLIST
     C                     KFLD           WQSB02           Bank LckBx Numb
      * Setup key
     C                     Z-ADD#1BEC3    WQSB02           Bank LckBx Numb
      * Establish starting position
     C           KRSSB     SETLL@EBREJT                    *
     C           KRSSB     READE@EBREJT                  90*
     C           *IN90     IFEQ '1'
      * Data record not found
     C                     MOVEL'USR0850' W0RTN   7
      * USER: Processing if Data record not found
      * PAR = CON By name
     C                     MOVEL*BLANK    YL0001           Bank Code
     C                     GOTO SBEXIT
     C                     ENDIF
      *
     C           *IN90     DOWEQ'0'
      * USER: Process Data record
      * PAR = DB1 By name
     C                     MOVELWBG4CD    YL0001           Bank Code
     C                     GOTO SBEXIT                     *QUIT
     C           KRSSB     READE@EBREJT                  90*
     C                     ENDDO
      *================================================================
     CSR         SBEXIT    ENDSR
      /EJECT
     CSR         SCRVGN    BEGSR
      *================================================================
      * VAL Bank Deposit Exist RT - A/R Bank Deposit  * 
      *================================================================
     C                     MOVEL*BLANK    W0RTN   7
      * Define keylist
     C           KRSSC     KLIST
     C                     KFLD           WCG4CD           Bank Code
     C                     KFLD           WCHXDT           Deposit Date
     C                     KFLD           WCYXNX           Deposit Time
      * Setup key
     C                     MOVELYL0001    WCG4CD           Bank Code
     C                     Z-ADDP1LWDT    WCHXDT           Deposit Date
     C                     Z-ADDP1YWNX    WCYXNX           Deposit Time
      * Establish starting position
     C           KRSSC     CHAIN@J2CPCN              90    *
      * Data record not found
     C   90                MOVEL'USR2039' W0RTN   7
      *================================================================
     CSR         SCEXIT    ENDSR
      /EJECT
     CSR         XDVC2T    BEGSR
      *================================================================
      * Convert internal to external date format
      *================================================================
      * Map according to date format
     C                     Z-ADD0         XDEX01           CC
     C           XDDTFM    IFEQ 'DMY'
     C                     Z-ADDXDINDD    XDEX02           DD
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
     C           XDDTFM    IFEQ 'MDY'
     C                     Z-ADDXDINMM    XDEX02           MM
     C                     Z-ADDXDINDD    XDEX03           DD
     C                     Z-ADDXDINYY    XDEX04           YY
     C                     ELSE
      * YMD format
     C                     Z-ADDXDINYY    XDEX02           YY
     C                     Z-ADDXDINMM    XDEX03           MM
     C                     Z-ADDXDINDD    XDEX04           DD
     C                     END
     C                     END
      *================================================================
     CSR         XDVC2E    ENDSR
      /EJECT
     CSR         YKDDW1    BEGSR
      *================================================================
      * Calculate window location for drop down lists on screen 1
      *================================================================
      *
      * Calculate window location for DDL - @Yes/No Flag
      * Window width
     C                     Z-ADD8         YWWDWD
      * Window depth
     C                     Z-ADD2         YWWDDP
      * Window reference corner
     C                     MOVEL'*TL  '   YWWDCR
      * Window start row
     C                     Z-ADD##WSR     YWWDRW
     C                     ADD  8         YWWDRW
      * Window start column
     C                     Z-ADD##WSC     YWWDCL
     C                     ADD  30        YWWDCL
      * Retrieve window location
     C                     EXSR ZURTLC
      * Window start row
     C                     Z-ADDYWWDRW    ZG01RW
      * Window start column
     C                     Z-ADDYWWDCL    ZG01CL
      *================================================================
     CSR         YKEXT1    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ##WSR     MULT 256       ZWORK   50
     C                     ADD  ##WSC     ZWORK
     C                     SUB  ZWORK     ZINPOS
     C                     SUB  1         ZINPOS
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
      * If no message file specified, use default
     C           ZAMSGF    IFEQ *BLANK
     C                     MOVELZADFMF    ZAMSGF
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
      *
      * Calculate window offset
     C           008       ADD  ##WSR     YWPORW  30
     C           029       ADD  ##WSC     YWPOC1  30
     C                     ADD  1         YWPOC1
     C           ZHCSRW    IFEQ YWPORW
     C           ZHCSCL    ANDEQYWPOC1
     C           @#DFMT    ANDEQ'#RCDDTL1'
     C                     MOVEL'#DAASX'  YPMTFD           @Yes/No Flag
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C           @#WWRC    DIV  256       ZZCSRW  30       Row
     C                     MVR            ZZCSCL  30       Column
      *
     C           ZHCSRW    SUB  ##WSR     YWPORW  30
     C           ZHCSCL    SUB  ##WSC     YWPOC1  30
     C                     SUB  1         YWPOC1
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM YWPORW    YYRW    50       Row
     C                     PARM YWPOC1    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZRRPWD    BEGSR
      *================================================================
      * *Reposition window
      *================================================================
     C                     MOVEL'Y'       YSL,1            Set wdw locatio
     C                     MOVEL'R'       YWLCTP  1        Locate action t
     C                     EXSR ZSSTLC                     Set window loca
      *
      * Redisplay previous panel
     C                     WRITEASSUME
      *================================================================
     CSR         ZREXIT    ENDSR
      /EJECT
     CSR         ZSSTLC    BEGSR
      *================================================================
      * Set window location
      *================================================================
     C           YSL,1     IFEQ 'Y'                        Set wdw locatio
     C                     MOVEL'*CALC'   YWWDCR           Window referenc
     C                     Z-ADD-3        YWWDRW           Window start ro
     C                     Z-ADD-3        YWWDCL           Window start co
     C                     Z-ADD066       YWWDWD           Window width
     C                     Z-ADD013       YWWDDP           Window depth
     C                     MOVEL'N'       YSL,1            Set wdw locatio
      *
     C                     EXSR ZURTLC                     Retrieve window
     C                     EXSR ZTWDFD                     Move window fie
     C                     END
      *================================================================
     CSR         ZSEXIT    ENDSR
      /EJECT
     CSR         ZTWDFD    BEGSR
      *================================================================
      * Move window fields by panel
      *================================================================
     C                     Z-ADDYWWDRW    ##WSR            Window start ro
     C                     Z-ADDYWWDCL    ##WSC            Window start co
     C                     EXSR YKDDW1
      *================================================================
     CSR         ZTEXIT    ENDSR
      /EJECT
     CSR         ZURTLC    BEGSR
      *================================================================
      * Retrieve window location
      *================================================================
      *
      * Set up parameters to API
      *
      * Return code
     C                     MOVEL*BLANKS   W0RTN
      * Retrieval Function
     C                     MOVEL*BLANKS   YWRTFN
     C                     MOVEL'*WDWLOC' YWRTFN
      *
     C                     SETOF                       90  *
      *
     C                     CALL 'YWRTLCI'              90  *
     C                     PARM           YWRTFN 10        Retrieval Funct
     C                     PARM           YWWDWD  30       Window width
     C                     PARM           YWWDDP  30       Window depth
     C                     PARM           YWWDCR  5        Window referenc
     C                     PARM           YWWDRW  30       *Window start r
     C                     PARM           YWWDCL  30       *Window start c
     C                     PARM           W0RTN            Return code
      * If error on call to API - default window location to top left cor
     C           *IN90     IFEQ '1'
     C           W0RTN     ORNE *BLANKS
     C                     Z-ADD2         YWWDRW           *Window start r
     C                     Z-ADD2         YWWDCL           *Window start c
     C                     END
      *
      *================================================================
     CSR         ZUEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     MOVEL*BLANK    P0RTN
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Initialise Allow Set Window Location flags
     C                     MOVEA*ALL'Y'   YSL
      * Set display size
     C                     SETOF                         93*
     C           @#SCRW    COMP 27                       93*
      * Initialise window location variables.
     C                     Z-ADD*ZEROS    ##WSR
     C                     Z-ADD*ZEROS    ##WSC
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WABEC3           LckBx Number
     C                     Z-ADD*ZERO     WALWDT           LckBx Deposit D
     C                     Z-ADD*ZERO     WAYWNX           LckBx Deposit T
     C                     Z-ADD*ZERO     WANMC1           LckBx Dpst Nbr
     C                     Z-ADD*ZERO     WANMC2           LckBx Dpst Nbr
     C                     Z-ADD*ZERO     WAZXVA           LckBx Deposit A
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WBD4C7           Bank LckBx Numb
     C                     Z-ADD*ZERO     WBD5C7           Bank Unused Nbr
     C                     Z-ADD*ZERO     WBAATM           Job Time
     C                     Z-ADD*ZERO     WBAXDT           Job Date
      * Initialize renamed input format fields
     C                     Z-ADD*ZERO     WCHXDT           Deposit Date
     C                     Z-ADD*ZERO     WCYXNX           Deposit Time
     C                     Z-ADD*ZERO     WCUIVA           Deposit Amount
     C                     Z-ADD*ZERO     WCUJVA           Total Cash Appl
     C                     Z-ADD*ZERO     WCCKNB           G/L Document Nu
     C                     Z-ADD*ZERO     WCBHNB           Number of Depos
     C                     Z-ADD*ZERO     WCBINB           Number of Appli
     C                     Z-ADD*ZERO     WCE2VL           CD TF Internal
     C                     Z-ADD*ZERO     WCE3VL           CD TF Immediate
     C                     Z-ADD*ZERO     WCE4VL           CD TF 1 Day Fun
     C                     Z-ADD*ZERO     WCE5VL           CD TF 2 Day Fun
     C                     Z-ADD*ZERO     WCE6VL           CD SB Exempt Im
     C                     Z-ADD*ZERO     WCE7VL           CD SB 1 Day Exe
     C                     Z-ADD*ZERO     WCE8VL           CD SB 2 Day Exe
     C                     Z-ADD*ZERO     WCE9VL           SBD Exempt Tota
     C                     Z-ADD*ZERO     WCFAVL           ARBD Unused Amt
     C                     Z-ADD*ZERO     WCFBVL           ARBD Unused Amt
     C                     Z-ADD*ZERO     WCFCVL           ARBD Unused Amt
     C                     Z-ADD*ZERO     WCFDVL           ARBD Unused Amt
     C                     Z-ADD*ZERO     WCHYDT           G/L Post Date
     C                     Z-ADD*ZERO     WCAATM           Job Time
     C                     Z-ADD*ZERO     WCAXDT           Job Date
      * Obtain default message file
     C           *NAMVAR   DEFN CAMGFLA   ZADFMF 10
     C                     IN   ZADFMF
      * Define work field CD7 Ext Numeric Key
     C                     MOVEL*BLANK    WUEOCD  7
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     MOVE ZZFFL     @1FFL  10
     C                     MOVE ZZFLB     @1FLB  10
     C                     MOVE ZZFMB     @1FMB  10
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      *
     C                     MOVEL*BLANK    W0SJO 132        *Sbmjob overrid
      * Define local work field Bank Code
     C                     MOVEL*BLANK    YL0001  6
      * Obtain system date format
     C           *NAMVAR   DEFN Y2DTFMA   XDDTFM  3
     C                     IN   XDDTFM
     C                     MOVEL*BLANK    W0GRP   1
      * Load screen
     C                     EXSR MALDSC
      *================================================================
     CSR         ZZEXIT    ENDSR
