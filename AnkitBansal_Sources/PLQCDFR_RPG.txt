     H/TITLE Dsp Producer SC MltPrdDF  Display file
     H            Y
     Z* CRTRPGPGM
     Z* CVTOPT(*DATETIME)
      *
     H* SYNOPSIS :
     H* - Displays the records from DBF as a subfile
     H* - Loads the SFL from the DBF a page at a time
     H* - The DBF record at which the SFL display starts may be
     H*   controlled by positioning fields on the SFL header
     H* - Any key fields on the SFL header will be used as
     H*   positioning values
     H* - Any non-key fields on the SFL header will be used as
     H*   selection values: a maximum of W0SLM records will be
     H*   read from the DBF before giving up
      *
     H* Generated by CA 2E release 8.5 (1351)
     H* Function type : Display file
      *
     H* Company       : HPEDEVMDL                     n
     H* System        : HPEDEVMDL
     H* User name     : ISSMASO
     H* Date          : 06/02/11  Time  : 16:54:12
     H* Copyright     : HPEDEVMDL                     n
      *
      *================================================================
     M* Maintenance   :
      *================================================================
     FPLQCDFR#CF  E                    WORKSTN
     F                                        ##RR  KSFILE #SFLRCD
     F                                              KINFDS INFDS#
      * DSP: Dsp Producer SC MltPrdDF  Display file
      *
     FPLBDREL2IF  E           K        DISK
     F                                              KINFDS INFDS1
      * RTV : Producer SC Multi Price   RTV Active Prd SC Multi
      *
      /EJECT
      * Data structures:
     IPGMDS     ESDSY2PGDSP
      * Modified Program data structure
     IJBDTTM      DS
      * Job date/time
     I                                        1   70##JDT
     I                                        1   10##JCC
     I                                        2   30##JYY
     I                                        4   50##JMM
     I                                        6   70##JDD
     I                                        8  130##JTM
     I                                        8   90##JHH
     I                                       10  110##JNN
     I                                       12  130##JSS
      * ABO DEFINE LARGE STRING FOR CL CMD
     IYARTCM      DS                            512
     I                                        1   1 DUMMY1
     IINFDS#    E DSY2I#DSP
      * Display file information data structure
      *
     IINFDS1    E DSY2I1DSP
      * File information data structure
      *
     I            DS
     I                                        1 132 ZAMSDA
      /EJECT
      *****************************************************************
      * Entry parameters
     C           *ENTRY    PLIST
     C                     PARM           P0RTN   7
      *****************************************************************
      * Initialize
     C                     EXSR ZZINIT
      *
     C                     DO   *HIVAL
      * Initialise & load subfile page
     C                     EXSR BAIZSF
     C                     MOVEL'N'       W0RSF   1
      * Display screen until reload requested
     C           W0RSF     DOWEQ'N'
      * Display screen
     C                     EXSR CAEXFM
      * Process response
      * Cancel & exit program
     C   03                CAS            ZXEXPG
      * HOME: Request subfile reload
     C   30                CAS            FBRQRL
      * Display next SFL page
     C   27                CAS            BBLDSF
      * Process screen input
     C                     CAS            DAPR##
     C                     END
      *
     C                     END                             OD W0RSF
     C                     END                             OD *HIVAL
      *****************************************************************
      /EJECT
     CSR         BAIZSF    BEGSR
      *================================================================
      * Initialise and load subfile page
      *================================================================
      * Clear subfile
     C                     SETON                     80
     C                     WRITE#SFLCTL
     C                     SETOF                     80
      * Reset no of records in subfile
     C                     Z-ADD*ZERO     ##RRMX  50 81     SETOF 81
      * Position DBF file
     C           KPOS      KLIST
     C                     KFLD           BDAKCD           PC Contract Cod
     C                     KFLD           BDALCD           PSC Sub-Contrac
     C                     KFLD           BDPDCD           PSCM Commodity
     C                     KFLD           BDPECD           PSCM Commodity
      * Setup key
     C                     MOVEL#2AKCD    BDAKCD
     C                     MOVEL#2ALCD    BDALCD
     C                     MOVEL#2PDCD    BDPDCD
     C                     MOVEL#2PECD    BDPECD
     C           KPOS      SETLL@BDREQW
     C                     READ @BDREQW                8782*82=EOF
      * Save previous selector values
     C           *LIKE     DEFN #2AKCD    WZAKCD
     C                     MOVEL#2AKCD    WZAKCD           PC Contract Cod
     C           *LIKE     DEFN #2ALCD    WZALCD
     C                     MOVEL#2ALCD    WZALCD           PSC Sub-Contrac
     C           *LIKE     DEFN #2PDCD    WZPDCD
     C                     MOVEL#2PDCD    WZPDCD           PSCM Commodity
     C           *LIKE     DEFN #2PECD    WZPECD
     C                     MOVEL#2PECD    WZPECD           PSCM Commodity
     C           *LIKE     DEFN #2PCCD    WZPCCD
     C                     MOVEL#2PCCD    WZPCCD           PSCM Mkt Percen
     C           *LIKE     DEFN #2WUPR    WZWUPR
     C                     MOVEL#2WUPR    WZWUPR           PSCM Mrkt + or
     C           *LIKE     DEFN #2WVPR    WZWVPR
     C                     MOVEL#2WVPR    WZWVPR           PSCM % of Base
      * Load subfile page
     C                     Z-ADD0         ##RROK  50
     C                     EXSR BBLDSF
      *================================================================
     CSR         BAEXIT    ENDSR
      /EJECT
     CSR         BBLDSF    BEGSR
      *================================================================
      * Load subfile page
      *================================================================
      * Re-establish fields in read-ahead record
     C   27                DO
     C  N82                READP@BDREQW                  90*
     C  N82                READ @BDREQW                  90*
     C                     END
      *
      * Setof record error indicators
     C                     MOVEL*ALL'0'   WKIND0  1
     C                     MOVEAWKIND0    *IN,35
      * Start at previous highest record in SFL
     C                     Z-ADD##RRMX    ##RR    50
      * Reset count of DBF records read
     C                     Z-ADD0         ##RRRD  90
      * Set required pages based on *Set Cursor or *Subfile Pages
     C           W0RR0     IFGT 0
     C           W0RR0     DIV  ##SFPG    ##SPG   30
     C                     MVR            ##SLIN  30
     C           ##SLIN    IFGT 0
     C                     ADD  1         ##SPG
     C                     END
     C           W0SPG     IFGT ##SPG
     C                     Z-ADDW0SPG     ##SPG
     C                     END
     C                     ELSE
     C                     Z-ADDW0SPG     ##SPG
     C                     END
      * Compute lines required based on pages
     C           ##SPG     MULT ##SFPG    ##SFLN  90
     C           ##SFLN    IFGT 999
     C                     Z-ADD999       ##SFLN
     C                     END
      *................................................................
      * Load next SFL page until SFL page full, or
      * Scan limit reached
     C           *IN82     DOWEQ'0'                        DO
     C           ##RROK    ANDLT##SFLN
     C           ##RRRD    ANDLTW0SLM
      * Check selection fields - if fail, read next record
     C           #2AKCD    IFEQ *BLANK                     PC Contract Cod
     C           #2ALCD    IFNE *BLANK                     PSC Sub-Contrac
     C           BDALCD    CABNE#2ALCD    BB020            PSC Sub-Contrac
     C                     END
     C                     END
     C           #2AKCD    IFEQ *BLANK                     PC Contract Cod
     C           #2ALCD    OREQ *BLANK                     PSC Sub-Contrac
     C           #2PDCD    IFNE *BLANK                     PSCM Commodity
     C           BDPDCD    CABNE#2PDCD    BB020            PSCM Commodity
     C                     END
     C                     END
     C           #2AKCD    IFEQ *BLANK                     PC Contract Cod
     C           #2ALCD    OREQ *BLANK                     PSC Sub-Contrac
     C           #2PDCD    OREQ *BLANK                     PSCM Commodity
     C           #2PECD    IFNE *BLANK                     PSCM Commodity
     C           BDPECD    CABNE#2PECD    BB020            PSCM Commodity
     C                     END
     C                     END
     C           #2PCCD    IFNE *ZERO                      PSCM Mkt Percen
     C           BDPCCD    CABNE#2PCCD    BB020            PSCM Mkt Percen
     C                     END
     C           #2WUPR    IFNE *ZERO                      PSCM Mrkt + or
     C           BDWUPR    CABNE#2WUPR    BB020            PSCM Mrkt + or
     C                     END
     C           #2WVPR    IFNE *ZERO                      PSCM % of Base
     C           BDWVPR    CABNE#2WVPR    BB020            PSCM % of Base
     C                     END
      * Load SFL fields
     C                     EXSR MBFL#1
      * Output to subfile
     C                     ADD  1         ##RR
     C                     ADD  1         ##RROK     81    *
      * If SFLRCD invalid, note that errors present
     C   98N99             SETON                     99    *
     C                     WRITE#SFLRCD
     C           BB020     TAG
      * Increment scan check count
     C                     ADD  1         ##RRRD
     C                     READ @BDREQW                  82*82=EOF
     C                     END                             OD 1 - ##SFPG
      *................................................................
     C           BB900     TAG
      *................................................................
      * If no DBF records found, display error message
     C           ##RR      IFEQ *ZERO
     C           *IN82     ANDEQ'1'
      * Send message '*No data to display'
     C                     MOVEL'Y2U0008' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END                             FI ##RR = *ZERO
      *
      *................................................................
      * Save highest SFL record load can continue at end point
     C           ##RR      IFGT ##RRMX
      * Calculate top line
     C           ##RROK    DIV  ##SFPG    ##SPG
     C                     MVR            ##SLIN
     C           ##SLIN    IFGT 0
     C           ##RR      SUB  ##SLIN    ##SFRC
     C                     ELSE
     C           ##RR      SUB  ##SFPG    ##SFRC
     C                     END
     C                     ADD  1         ##SFRC
     C                     Z-ADD##RR      ##RRMX
     C                     END
      * If scan limit reached, display error message
     C           ##RRRD    IFGE W0SLM
      * Send message '*Scan limit reached'
     C                     MOVEL'Y2U0017' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     ELSE
     C                     Z-ADD0         ##RROK
     C                     END
      *================================================================
     CSR         BBEXIT    ENDSR
      /EJECT
     CSR         CAEXFM    BEGSR
      *================================================================
      * Display screen
      *================================================================
     C           W0HLP     DOUEQ'N'
     C                     MOVEL'N'       W0HLP   1
     C                     MOVE *IN04     YPMT04  1
     C                     MOVE *IN25     HELP25  1
     C                     MOVE *ALL'0'   ##OFF  30
     C                     MOVEA##OFF     *IN,1
     C                     MOVE YPMT04    *IN04
     C                     MOVE HELP25    *IN25
      * Update screen time
     C                     TIME           ##TME
      * PUTOVR unless conditioned fields change
     C                     SETON                     86
     C           *IN81     IFNE CAIN81
     C                     SETOF                     86
     C                     END
     C                     MOVE *IN81     CAIN81  1
      * Set cursor by *SET CURSOR data
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y0SET
     C                     END
     C                     WRITE#MSGCTL
     C                     WRITE#CMDTXT1
     C                     EXFMT#SFLCTL
      * Maintain subfile position where possible
     C           @#SFRC    IFGT *ZERO
     C                     Z-ADD@#SFRC    ##SFRC
     C                     END
      * Test cursor
     C                     EXSR Y8TST
      * Check if prompt requested
     C                     EXSR ZDVPMT
      * Clear set cursor DDS indicator
     C           WCSRLC    IFEQ 'OFF'
     C                     SETOF                     94    *
     C                     END
     C                     MOVE *BLANK    WCSRLC
      * If help requested, display help text
     C   25                EXSR ZHHPKY
     C                     END
      * Update job time
     C                     TIME           ##JTM
      * Clear messages from program message queue
     C                     CALL 'Y2CLMSC'
     C                     PARM ##PGM     ZAPGMQ 10
     C                     PARM '*SAME'   ZAPGRL  5
      * Reset first message only flag
     C                     MOVEL'Y'       ZAFSMS  1      99*
     C                     SETOF                       8392*
     C           YSETCS    IFEQ 'Y'
     C                     EXSR Y9CLR
     C                     END
      *================================================================
     CSR         CAEXIT    ENDSR
      /EJECT
     CSR         DAPR##    BEGSR
      *================================================================
      * Process screen input
      *================================================================
      *
      * Confirm/update is not deferred
     C                     MOVEL'N'       W0DCF   1
     C           YPMTFD    IFNE *BLANKS
     C           YPMRRN    ANDEQ*ZERO
     C                     GOTO DAEXIT
     C                     END
     C           YPMTFD    CABNE*BLANKS   DATAG1
      * Change of position specified
     C           WZAKCD    CASNE#2AKCD    FBRQRL
     C           WZALCD    CASNE#2ALCD    FBRQRL
     C           WZPDCD    CASNE#2PDCD    FBRQRL
     C           WZPECD    CASNE#2PECD    FBRQRL
     C                     END
     C           DATAG1    TAG
     C           YPMTFD    IFEQ *BLANKS
      * Reload subfile requested
     C           W0RSF     CABEQ'Y'       DAEXIT
     C                     END
     C           *IN81     IFEQ '1'
      * Process subfile records
     C                     EXSR DBPRSF
     C                     END
     C           YPMTFD    CABNE*BLANKS   DAEXIT
      * If error, quit processing
     C           *IN99     CABEQ'1'       DAEXIT
      * Defer confirm/update requested
     C           W0DCF     CABEQ'Y'       DAEXIT
      *================================================================
     CSR         DAEXIT    ENDSR
      /EJECT
     CSR         DBPRSF    BEGSR
      *================================================================
      * Process modified subfile record
      *================================================================
      * Read first changed slf record
     C           YAFSCH    IFNE *ZERO
     C           YAFSCH    CHAIN#SFLRCD              92    *
     C                     ELSE
     C                     READC#SFLRCD                  92*
     C                     END
     C           *IN92     DOWEQ'0'
      * Process subfile record
     C                     EXSR DCPRSR
     C                     UPDAT#SFLRCD
     C                     READC#SFLRCD                  92*
     C                     END
      *================================================================
     CSR         DBEXIT    ENDSR
      /EJECT
     CSR         DCPRSR    BEGSR
      *================================================================
      * Process subfile record
      *================================================================
      * Setof error indicators and SFLNXTCHG
     C                     MOVEAWKIND0    *IN,35
     C                     SETOF                     98    *
     C           YPMTFD    CABNE*BLANKS   DCEXIT
      * USER: Process subfile record (Pre-confirm)
      * CASE: RCD.*SFLSEL is Select Option 1
     C           #1SEL     IFEQ '1'                        *IF
     C           #1SEL     OREQ ' 1'
      * Clc Base Mkt Price    XF - Pricing Option  * 
     C                     CALL 'PKJ7XFR'              90  Clc Base Mkt Pr
     C                     PARM *BLANK    W0RTN   7
     C                     PARM WUBNNB    WQ0001  50       BOH Buy Order N
     C                     PARM WUBONB    WQ0002  50       BOL Load Number
     C                     PARM WUCVNB    WQ0003  50       TH Tattoo Numbe
     C                     PARM WUAWDT    WQ0004  70       TH Purchase Dat
     C                     PARM WUCYNB    WQ0005  71       TH Live Wgt
     C           WUAMPR    PARM *ZERO     WQ0006  52       TH CM Base Mkt
     C                     PARM WUB0DT    WQ0007  70       TH Kill Date
     C                     PARM 960       WQ0008  30       BOH Company Num
     C                     PARM WUAZPR    WQ0009  52       PSC Floor Price
     C                     PARM WUA0PR    WQ0010  52       PSC Ceiling Pri
     C                     PARM WUA9PC    WQ0011  30       PSC Market Perc
     C                     PARM WUA9PR    WQ0012  52       PSC Mkt Percent
     C           WUBDPR    PARM WUBDPR    WQ0013  52       Market Price US
     C           WUSNST    PARM *BLANK    WQ0014  2        Pricing UOM USR
     C           WUDYDT    PARM *ZERO     WQ0015  70       Pricing Date US
     C                     PARM 'MMP'     WQ0016  3        PO Option Code
     C                     PARM #1AKCD    WQ0017  5        PC Contract Cod
     C                     PARM #1ALCD    WQ0018  5        PSC Sub-Contrac
     C                     PARM WUAAPR    WQ0019  52       BOH Market Add/
     C                     PARM WUAMCD    WQ0020  3        CMP Program Cod
     C                     PARM WUB3ST    WQ0021  2        BOH Quote Price
     C                     PARM WUALPR    WQ0022  52       BOH Quoted Base
     C                     PARM WUETCD    WQ0023  3        BOH Commodity M
     C                     PARM WUEUCD    WQ0024  7        BOH Commodity P
     C                     PARM 'CUR'     WQ0025  3        BOH Market Date
      *
      *
     C           *IN90     IFEQ '1'
      * Call to program ended in error
     C                     MOVEL'Y2U0032' W0RTN
     C                     MOVEL*BLANKS   W0CLPG 10
     C                     MOVEL'PKJ7XFR' W0CLPG
      * Send message '*Error occured on CALL...'
     C                     MOVEL'Y2U0032' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     MOVELW0CLPG    ZAMSDA           Message data
     C                     EXSR ZASNMS
     C                     END
      * Error detected?
     C           W0RTN     IFNE *BLANK
     C                     SETON                     98    *
     C                     END
     C                     END                             *FI
     C           *IN98     IFEQ '1'
      * SFLRCD invalid
     C  N99                Z-ADD##RR      ##SFRC     99    *
      * SFLNXTCHG
     C                     SETON                     84
     C                     ELSE
      * SFLRCD valid
      * SFLNXTCHG
     C                     SETOF                     84
     C                     MOVEL*BLANK    #1SEL
     C                     END                             FI *IN98
      *================================================================
     CSR         DCEXIT    ENDSR
      /EJECT
     CSR         FBRQRL    BEGSR
      *================================================================
      * Request subfile reload
      *================================================================
     C                     MOVEL'Y'       W0RSF
      *================================================================
     CSR         FBEXIT    ENDSR
      /EJECT
     CSR         MBFL#1    BEGSR
      *================================================================
      * Move @BDREQW fields to subfile
      *================================================================
     C                     MOVEL*BLANK    #1SEL
     C                     MOVELBDAAVN    #1AAVN           RS User Changed
     C                     Z-ADDBDAADT    #1AADT           RS Date Changed
     C                     Z-ADDBDAMTM    #1AMTM           RS Time Changed
     C                     MOVELBDAJST    #1AJST           RS Record Statu
     C                     MOVELBDAHVN    #1AHVN           RS Job
     C                     MOVELBDAGVN    #1AGVN           RS Program
     C                     MOVELBDABVN    #1ABVN           RS User Added
     C                     Z-ADDBDABDT    #1ABDT           RS Date Added
     C                     Z-ADDBDABTM    #1ABTM           RS Time Added
     C                     MOVELBDAKCD    #1AKCD           PC Contract Cod
     C                     MOVELBDALCD    #1ALCD           PSC Sub-Contrac
     C                     MOVELBDPDCD    #1PDCD           PSCM Commodity
     C                     MOVELBDPECD    #1PECD           PSCM Commodity
     C                     Z-ADDBDPCCD    #1PCCD           PSCM Mkt Percen
     C                     Z-ADDBDWUPR    #1WUPR           PSCM Mrkt + or
     C                     Z-ADDBDWVPR    #1WVPR           PSCM % of Base
     C                     MOVEL*BLANK    #1SEL            *SFLSEL
      *================================================================
     CSR         MBEXIT    ENDSR
      /EJECT
     CSR         MEIZ#2    BEGSR
      *================================================================
      * Initialise subfile control
      *================================================================
     C                     Z-ADD*ZERO     #CS1A1           Multi Prices Ac
     C                     MOVEL*BLANK    #2AKCD           PC Contract Cod
     C                     MOVEL*BLANK    #2ALCD           PSC Sub-Contrac
     C                     MOVEL*BLANK    #2PDCD           PSCM Commodity
     C                     MOVEL*BLANK    #2PECD           PSCM Commodity
     C                     Z-ADD*ZERO     #2PCCD           PSCM Mkt Percen
     C                     Z-ADD*ZERO     #2WUPR           PSCM Mrkt + or
     C                     Z-ADD*ZERO     #2WVPR           PSCM % of Base
      *================================================================
     CSR         MEEXIT    ENDSR
      /EJECT
     CSR         Y0SET     BEGSR
      *================================================================
      * Set cursor by *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y0EXIT    ENDSR
      /EJECT
     CSR         Y8TST     BEGSR
      *================================================================
      * Test cursor
      *================================================================
     C                     Z-ADD@#RWCL    ZINPOS  50
     C           ZINPOS    DIV  256       W0CRW
     C                     MVR            W0CCL
      *================================================================
     CSR         Y8EXIT    ENDSR
      /EJECT
     CSR         Y9CLR     BEGSR
      *================================================================
      * Clear *SET CURSOR data
      *================================================================
      *================================================================
     CSR         Y9EXIT    ENDSR
      /EJECT
     CSR         ZASNMS    BEGSR
      *================================================================
      * Send message to program's message queue
      *================================================================
     C           ZAPGMQ    IFEQ *BLANK
     C                     MOVEL##PGM     ZAPGMQ
     C                     END
     C                     CALL 'Y2SNMGC'
     C                     PARM           ZAPGMQ 10        Program queue
     C                     PARM           ZAPGRL  5        Rel queue
     C                     PARM           ZAMSID  7        Message ID
     C                     PARM           ZAMSGF 10        Message file
     C                     PARM           ZAMSDA           Message data
     C                     PARM           ZAMSTP  7        Message type
      * Clear all fields for default mechanism next time
     C                     MOVEL*BLANK    ZAPGMQ
     C                     MOVEL*BLANK    ZAPGRL
     C                     MOVEL*BLANK    ZAMSID
     C                     MOVEL*BLANK    ZAMSGF
     C                     MOVEL*BLANK    ZAMSDA
     C                     MOVEL*BLANK    ZAMSTP
      *================================================================
     CSR         ZAEXIT    ENDSR
      /EJECT
     CSR         ZDVPMT    BEGSR
      *================================================================
      * Process prompt request
      *================================================================
      *
      * Initialise prompt workfields
     C                     MOVEL*BLANK    YPMTFD 10
     C                     Z-ADD*ZERO     YAFSCH  40
     C                     Z-ADD*ZERO     YPMRRN  40
      *
     C           *IN04     IFEQ '1'
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50
     C                     MVR            ZHCSCL  50
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      * Save sfl rrn at top of page
     C                     Z-ADD@#SFRC    Y#SFRC  40
      *
      * Initialise sfl workfields
     C                     Z-ADD11        ZHSTRW  40
     C                     Z-ADD20        ZHNDRW  40
     C                     Z-ADD1         ZHRLEN  40
     C                     Z-ADD*ZERO     ZHF4RW  40
     C                     Z-ADD*ZERO     ZHWK1#  40
      *
      * Resolve prompt row number on sfl
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C                     Z-ADDZHWK1#    YZSFDL  40
     C           ZHWK1#    MULT ZHRLEN    ZHWK1#
     C           ZHCSRW    SUB  ZHWK1#    ZHF4RW
     C                     END
      *
     C           YPMTFD    IFEQ *BLANK
      * Error if user defined prompting is not specified.
     C           W0PMT     IFEQ 'N'
     C                     MOVEL'*NONE'   YPMTFD
     C                     MOVEL'Y'       W0HLP   1
     C                     MOVEL'Y'       ZAFSMS
      * Send error message.
     C                     MOVEL'Y2U0101' ZAMSID
     C                     MOVEL'Y2USRMSG'ZAMSGF
     C                     EXSR ZASNMS
     C                     END
     C                     END
      *
      * Save first changed  rrn
     C           ZHCSRW    IFGE ZHSTRW
     C           ZHCSRW    ANDLEZHNDRW
     C           YPMTFD    ANDNE'*NONE'
      *
     C           ##RR      IFNE *ZERO
     C                     READC#SFLRCD                  92*
     C           *IN92     IFEQ '0'
     C                     Z-ADD##RR      YAFSCH
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     END
     C                     END
      *
      * Calculate rrn for prompt slf record
     C           ZHCSRW    SUB  ZHSTRW    ZHWK1#
     C           ZHWK1#    DIV  ZHRLEN    ZHWK1#
     C           ZHWK1#    ADD  Y#SFRC    YPMRRN
      *
      * Chain to sfl record
     C           YPMRRN    CHAIN#SFLRCD              92    *
     C           *IN92     IFEQ '0'
     C                     SETON                     84    *
     C                     UPDAT#SFLRCD
     C                     ELSE
     C                     Z-ADD*ZERO     YPMRRN
     C                     END
      *
      * Test first changed rrn/prompt rrn
     C           YAFSCH    IFEQ *ZERO
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
      * If prompt rrn < first changed rrn
     C           YPMRRN    IFNE *ZERO
     C           YPMRRN    ANDLTYAFSCH
     C                     Z-ADDYPMRRN    YAFSCH
     C                     END
      *
     C                     END
      *
     C                     END
      *================================================================
     CSR         ZDEXIT    ENDSR
      /EJECT
     CSR         ZHHPKY    BEGSR
      *================================================================
      * Display HELP text
      *================================================================
      * Signal help request
     C                     MOVEL'Y'       W0HLP   1
      *
      * Extract cursor row and column
     C           @#RWCL    DIV  256       ZHCSRW  50       Row
     C                     MVR            ZHCSCL  50       Column
      *
      * Save cursor position for redisplay
     C                     Z-ADDZHCSRW    ZZCSRW  30       Row
     C                     Z-ADDZHCSCL    ZZCSCL  30       Column
      *
      *
     C                     CALL 'YDDSHPR'
     C                     PARM ##PGM     W0HPMB 10        Help text sourc
     C                     PARM *BLANK    YYHPFL 10        Help text file
     C                     PARM *BLANK    YYHPLB 10        Help text libra
     C                     PARM           W0RTN   7
     C                     PARM '*CSRLOC' YYHLVN 10        Help label
     C                     PARM '*NORMAL' YYUSOP 10        Options
     C                     PARM ZHCSRW    YYRW    50       Row
     C                     PARM ZHCSCL    YYCL    50       Column
     C                     PARM *ZERO     YYLGCT  50       # of grps
     C                     PARM *BLANK    YYLGVN 10        Label grps
      *
      * Clear set cursor DDS indicator
     C  N94                MOVEL'OFF'     WCSRLC
     C  N94                SETON                     94    *
      *================================================================
     CSR         ZHEXIT    ENDSR
      /EJECT
     CSR         ZXEXPG    BEGSR
      *================================================================
      * Cancel & exit program
      *================================================================
     C                     EXSR ZYEXPG
      *================================================================
     CSR         ZXEXIT    ENDSR
      /EJECT
     CSR         ZYEXPG    BEGSR
      *================================================================
      * Exit program: Direct
      *================================================================
      * Copy any undisplayed messages back to caller
     C                     CALL 'Y2CPMSC'
     C                     PARM           ##PGM
      *
      * Terminate program
     C                     SETON                     LR
      *
      * Exit program
     C                     RETRN
      *
      *================================================================
     CSR         ZYEXIT    ENDSR
      /EJECT
     CSR         ZZINIT    BEGSR
      *================================================================
      * Initialisation
      *================================================================
     C           W0ICL     IFEQ *BLANK
     C                     MOVEL'Y'       W0ICL   1        *Initial call
     C                     ELSE
     C                     MOVEL'N'       W0ICL
     C                     END
     C                     MOVE *BLANK    P0RTN
     C                     MOVE *BLANK    W0RTN   7
     C                     MOVEL*BLANK    W0RSL   1
     C                     MOVEL*BLANK    W0RSF   1
     C                     MOVEL*ZEROS    W0RTW   90
     C                     MOVEL'400'     W0ENV   3
      * Retrieve job attributes
     C                     CALL 'Y2RTJCR'
     C                     PARM           PGMDS
      * Setup job date/time
     C                     Z-ADD##SD7     ##JDT
     C                     TIME           ##JTM
      * Update screen time
     C                     TIME           ##TME   60
      * Define work field BOH Buy Order Number
     C                     Z-ADD*ZERO     WUBNNB  50
      * Define work field BOL Load Number
     C                     Z-ADD*ZERO     WUBONB  50
      * Define work field TH Tattoo Number
     C                     Z-ADD*ZERO     WUCVNB  50
      * Define work field TH Purchase Date
     C                     Z-ADD*ZERO     WUAWDT  70
      * Define work field TH Live Wgt
     C                     Z-ADD*ZERO     WUCYNB  71
      * Define work field TH CM Base Mkt Price
     C                     Z-ADD*ZERO     WUAMPR  52
      * Define work field TH Kill Date
     C                     Z-ADD*ZERO     WUB0DT  70
      * Define work field PSC Floor Price
     C                     Z-ADD*ZERO     WUAZPR  52
      * Define work field PSC Ceiling Price
     C                     Z-ADD*ZERO     WUA0PR  52
      * Define work field PSC Market Percent   NU
     C                     Z-ADD*ZERO     WUA9PC  30
      * Define work field PSC Mkt Percent
     C                     Z-ADD*ZERO     WUA9PR  52
      * Define work field Market Price USR
     C                     Z-ADD*ZERO     WUBDPR  52
      * Define work field Pricing UOM USR
     C                     MOVEL*BLANK    WUSNST  2
      * Define work field Pricing Date USR
     C                     Z-ADD*ZERO     WUDYDT  70
      * Define work field BOH Market Add/Deduct
     C                     Z-ADD*ZERO     WUAAPR  52
      * Define work field CMP Program Code
     C                     MOVEL*BLANK    WUAMCD  3
      * Define work field BOH Quote Price Type
     C                     MOVEL*BLANK    WUB3ST  2
      * Define work field BOH Quoted Base Mkt Price
     C                     Z-ADD*ZERO     WUALPR  52
      * Define work field BOH Commodity Market Code
     C                     MOVEL*BLANK    WUETCD  3
      * Define work field BOH Commodity Price Group
     C                     MOVEL*BLANK    WUEUCD  7
      * Flag no *SET CURSOR in the program
     C                     MOVE 'N'       YSETCS  1
     C                     MOVE *BLANK    WCSRLC  3
      * Define *Synon program work fields
     C                     MOVEL*BLANKS   W0CFL  10        *Cursor field
     C                     Z-ADD*ZEROS    W0CRW   50       *Cursor row
     C                     Z-ADD*ZEROS    W0CCL   50       *Cursor column
      * Move main file information to JOB context
     C                     MOVE @1FFL     ZZFFL  10        Main file name
     C                     MOVE @1FLB     ZZFLB  10        Main file lib
     C                     MOVE @1FMB     ZZFMB  10        Main file mbr
     C                     CALL 'Y2QLVNR'
     C                     PARM           ZZFFL  10
     C                     PARM           ZZFLB  10
     C                     PARM           ZZFQL  21        LIBRARY/FILE
     C                     MOVEL'N'       W0PMT   1
      * *DTAARA = *COMPANY N
     C           *NAMVAR   DEFN YYCOTXA   ##CMP
     C                     IN   *NAMVAR
      *................................................................
     C                     Z-ADD10        ##SFPG  30       SFLPAG
     C                     Z-ADD1         ##SFRC
      * Maximum record number
     C                     Z-ADD*ZERO     ##RRMX
      * Scan limit
     C                     Z-ADD000000500 W0SLM   90
      * Subfile pages
     C                     Z-ADD1         W0SPG   30
      * Processed Subfile record
     C                     Z-ADD0         W0RR0   40
      *................................................................
     C                     MOVEL*BLANK    W0GRP   1
      * Initialise subfile control
     C                     EXSR MEIZ#2
      *================================================================
     CSR         ZZEXIT    ENDSR
