// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMAEXFR
// ?Date: 14.08.2025 Time: 03:44:37
// ?------------------------------------------------------------------------------------------------

//?Execute user function

EXECUTE FUNCTION(RTV SSI Ctl-Not Proc'd IF) TYPE(EXCINTFUN)                     AC1904597;
{
 //?Execute internal function

 EXECUTE FUNCTION(RTV SSI Ctl-Not Proc'd RT) TYPE(RTVOBJ) FILE(PMERREP)          AC1903824;
 PARAMETER(000000001);
 {
  //?USER: Process Data record

  //?** Write the Start of Trans to PNESCPP-SSI Work File
  // Call program Zzz/Snd SSI SOR Rec    CL.
  CALL PROGRAM(Zzz/Snd SSI SOR Rec    CL) ('PMAFUPC');
  PARAMETER(DB1.SSI_SOR_Sequence_ID);
  PARAMETER(DB1.SSI_SOR_Identifier);
  PARAMETER(WRK.Return_Code_Usr);

  //?** Write the SSI Load Header to PNESCPP-SSI Work File
  EXECUTE FUNCTION(Sel/Snd SSI Load HeaderRT) TYPE(RTVOBJ) FILE(PMEICPP)          AC1904656;
  PARAMETER(DB1.SSI_SOR_Sequence_ID);
  PARAMETER(DB1.SSI_SOR_Identifier);
  PARAMETER('01');
  PARAMETER('00');
  {
   //?USER: Initialize routine

   //?***** Change Log and Comments
   DO;

   //?** 08/20/2009 LJB E00461
   //?** Remove Order Comments from the Pick/Stop process - wrong for
   //?** the way we do business. Add new programming to create Load
   //?** Header Comments and send these to the PNESCPP work file
   ENDDO;

   //?USER: Process Data record

   // Call program Zzz Snd SSI LH Rec Bld CL.
   CALL PROGRAM(Zzz Snd SSI LH Rec Bld CL) ('PMAGUPC');
   PARAMETER(PAR.SSI_SOR_Sequence_ID);
   PARAMETER(DB1.SSI_Master_BOL_Number);
   PARAMETER(PAR.SSI_Header_Type);
   PARAMETER(PAR.SSI_Link_Sequence);
   PARAMETER(DB1.SSI_Sub_Type);
   PARAMETER(DB1.SSI_Sub_Type_Sequence);
   PARAMETER(WRK.Return_Code_Usr);

   //?** Write the Pick/Stop & Orders to PNESCPP-SSI Work File
   EXECUTE FUNCTION(SEL/Snd SSI P/S Recs   RT) TYPE(RTVOBJ) FILE(PMEKCPP)          AC1904667;
   PARAMETER(PAR.SSI_SOR_Sequence_ID);
   PARAMETER(1);
   PARAMETER(DB1.SSI_Master_BOL_Number);
   {
    //?USER: Process Data record

    CASE;

    // IF DB1.SSI Master BOL Number EQ PAR.SSI Master BOL Number
    IF DB1.SSI_Master_BOL_Number = PAR.SSI_Master_BOL_Number;

    // Call program Zzz/Snd SSI Pick/Stop  CL.
    CALL PROGRAM(Zzz/Snd SSI Pick/Stop  CL) ('PMAHUPC');
    PARAMETER(PAR.SSI_SOR_Sequence_ID);
    PARAMETER(DB1.SSI_Sequence_Number_70);
    PARAMETER(PAR.SSI_Master_BOL_Number);
    PARAMETER(DB1.SSI_Header_Type);
    PARAMETER(DB1.SSI_Link_Sequence);
    PARAMETER(DB1.SSI_Sub_Type);
    PARAMETER(DB1.SSI_Sub_Type_Sequence);
    PARAMETER(WRK.Return_Code_Usr);

    CASE;

    // IF DB1.SSI Sub Type Sequence is Not Origin
    IF DB1.SSI_Sub_Type_Sequence <> '00';

    EXECUTE FUNCTION(SEL/Snd SSI P/S Orders RT) TYPE(RTVOBJ) FILE(PMEMCPP)          AC1904696;
    PARAMETER(PAR.SSI_SOR_Sequence_ID);
    PARAMETER(PAR.SSI_Master_BOL_Number);
    PARAMETER(DB1.SSI_Header_Type);
    PARAMETER(DB1.SSI_Link_Sequence);
    PARAMETER('07');
    {
     //?USER: Process Data record

     // Call program Zzz/Snd SSI P/S Orders CL.
     CALL PROGRAM(Zzz/Snd SSI P/S Orders CL) ('PMAIUPC');
     PARAMETER(PAR.SSI_SOR_Sequence_ID);
     PARAMETER(PAR.SSI_Master_BOL_Number);
     PARAMETER(DB1.SSI_Header_Type);
     PARAMETER(DB1.SSI_Link_Sequence);
     PARAMETER(DB1.SSI_Sub_Type);
     PARAMETER(WRK.Return_Code_Usr);

     EXECUTE FUNCTION(SEL/Snd SSI Ord CommentRT) TYPE(RTVOBJ) FILE(PMELCPP)          AC1904894;
     PARAMETER(PAR.SSI_SOR_Sequence_ID);
     PARAMETER(PAR.SSI_Master_BOL_Number);
     PARAMETER(DB1.SSI_Header_Type);
     PARAMETER(DB1.SSI_Sub_Type_Sequence);
     PARAMETER('04');
     {
      //?USER: Process Data record

      // Call program Zzz/Snd SSI Ord CommentCL.
      CALL PROGRAM(Zzz/Snd SSI Ord CommentCL) ('PMAJUPC');
      PARAMETER(PAR.SSI_SOR_Sequence_ID);
      PARAMETER(PAR.SSI_Master_BOL_Number);
      PARAMETER(PAR.SSI_Header_Type);
      PARAMETER(PAR.SSI_Link_Sequence);
      PARAMETER(DB1.SSI_Sub_Type);
      PARAMETER(WRK.Return_Code_Usr);

     }

    }

    ENDIF;

    ENDIF;

   }

  }

  //?** Write the End of Trans to PNESCPP-SSI Work File
  // Call program Zzz/Snd SSI EOT Rec    CL.
  CALL PROGRAM(Zzz/Snd SSI EOT Rec    CL) ('PMAKUPC');
  PARAMETER(DB1.SSI_SOR_Sequence_ID);
  PARAMETER(WRK.Return_Code_Usr);

  //?** Update the EOT record with "T" for Transmitted
  CASE;

  // IF WRK.Return Code Usr is *Blank
  IF WRK.Return_Code_Usr = *BLANK;

  EXECUTE FUNCTION(RTV CHG SSI Ctrl EOT   RT) TYPE(RTVOBJ) FILE(PMERREP)          AC1904273;
  PARAMETER(DB1.SSI_SOR_Sequence_ID);
  PARAMETER('#EOT');
  {
   //?USER: Process Data record

   //?** Only update the End of Transmission flag
   CASE;

   // IF DB1.SSI EOT Identifier is Entered
   IF DB1.SSI_EOT_Identifier <> *BLANK;

   // WRK.SSI Transmission Status = CND.Transmitted
   WRK.SSI_Transmission_Status = 'T';

   // WRK.Job Date = JOB.*Job date
   WRK.Job_Date = JOB.*Job_date;

   EXECUTE FUNCTION(CNV cyymmdd to yyyymmdd) TYPE(EXCINTFUN)                       AC1732965;
   PARAMETER(WRK.Job_Date);
   PARAMETER(WRK.DATE);
   {
    //?Execute internal function

    // LCL.Year Code = PAR.Date In  (7,0) USR *YEAR
    LCL.Year_Code = DATEDTLS(PAR.Date_In_70_USR 'YR' 1111111 'NONE' 'N' 1);

    // LCL.Month NBR USR = PAR.Date In  (7,0) USR *MONTH
    LCL.Month_NBR_USR = DATEDTLS(PAR.Date_In_70_USR 'MO' 1111111 'NONE' 'N' 1);

    // LCL.Day of Month USR = PAR.Date In  (7,0) USR *DAY OF MONTH
    LCL.Day_of_Month_USR = DATEDTLS(PAR.Date_In_70_USR 'DM' 1111111 'NONE' 'N' 1);

    // PAR.Year Alpha (YYYY) USR = CVTVAR(LCL.Year Code)
    PAR.Year_Alpha_YYYY_USR = CVTVAR(LCL.Year_Code);

    // PAR.Month (Char) USR = CVTVAR(LCL.Month NBR USR)
    PAR.Month_Char_USR = CVTVAR(LCL.Month_NBR_USR);

    // PAR.Day   (Char) USR = CVTVAR(LCL.Day of Month USR)
    PAR.Day_Char_USR = CVTVAR(LCL.Day_of_Month_USR);

    // PAR.Date (Char-8) USR = CONCAT(PAR.Year Alpha (YYYY) USR,PAR.Month (Char) USR,CON.*ZERO)
    PAR.Date_Char_8_USR = PAR.Year_Alpha_YYYY_USR + PAR.Month_Char_USR (*ZERO);

    // PAR.Date (Char-8) USR = CONCAT(PAR.Date (Char-8) USR,PAR.Day   (Char) USR,CON.*ZERO)
    PAR.Date_Char_8_USR = PAR.Date_Char_8_USR + PAR.Day_Char_USR (*ZERO);

    // PAR.Date Out (8,0) USR = CVTVAR(PAR.Date (Char-8) USR)
    PAR.Date_Out_80_USR = CVTVAR(PAR.Date_Char_8_USR);

   }

   // WRK.Date (Char-8) USR = CVTVAR(WRK.DATE)
   WRK.Date_Char_8_USR = CVTVAR(WRK.DATE);

   // WRK.SSI SOR Date 8,0 alpha = WRK.Date (Char-8) USR
   WRK.SSI_SOR_Date_80_alpha = WRK.Date_Char_8_USR;

   // WRK.USR Time 4.0 = JOB.*Job time
   WRK.USR_Time_4_0 = JOB.*Job_time;

   // WRK.SSI SOR Time 4,0 alpha = CVTVAR(WRK.USR Time 4.0)
   WRK.SSI_SOR_Time_40_alpha = CVTVAR(WRK.USR_Time_4_0);

   EXECUTE FUNCTION(CHG SSI Ctrl EOT Trn=Y CO) TYPE(CHGOBJ) FILE(PMERREP)          AC1904272;
   PARAMETER(DB1.SSI_SOR_Sequence_ID);
   PARAMETER(DB1.SSI_SOR_Identifier);
   PARAMETER(DB1.SSI_EOT_Identifier);
   PARAMETER(DB1.SSI_Sequence_Number_70);
   PARAMETER(DB1.SSI_SOR_SCAC);
   PARAMETER(DB1.SSI_Trading_Partner_Name);
   PARAMETER(WRK.SSI_SOR_Date_80_alpha);
   PARAMETER(WRK.SSI_SOR_Time_40_alpha);
   PARAMETER(DB1.SSI_EOT_Record_Count);
   PARAMETER(WRK.SSI_Transmission_Status);
   ENDIF;

  }

  ENDIF;

 }

}


