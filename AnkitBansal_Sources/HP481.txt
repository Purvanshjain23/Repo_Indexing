      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP481
      * TITLE:       SPECIFY TRANSFER MOVEMENT BOL TO RPINT
      * PROGRAMMER:  LEANNE FEDOR
      * CREATED:     02/09/96
      *
      * FUNCTION:    PRINTS BILL OF LADINGS FOR SCHEDULED TRANSFER
      *              MOVEMENTS.
      *
      *              THIS PROGRAM IS CALLED FROM:
      *                  1) WORK WITH TRANSFERS
      *                  2) WORK WITH SCHEDULED TRANSFERS
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/14/01  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production types, we changed the edit for a farm.  The production type
      *           of a selected farm no longer has to "match" the production type that
      *           the user may have keyed on the screen.
      *
      * 03/26/02  LeAnne Fedor
      *           Added 'cell' as selections on both origin and destination.
      *
      * 07/22/02  LeAnne Fedor
      *           In preparation for allowing groups on a single farm to have different
      *           production phases, we changed the edit for a farm.  The production phase
      *           of a selected farm no longer has to "match" the production phase that
      *           the user may have keyed on the screen.
      *
      * 10/16/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD481    CF   E             WORKSTN
     F                                     INFDS(IOFEED)
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
     FHSP009    IF   E           K DISK
      *    BUSINESS OFFICE
      *
     FHSP010    IF   E           K DISK
      *    PRODUCTION TYPE
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
     FHSP074    IF   E           K DISK
      *    TRANSFER MOVEMENT HEADER
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  STANDARD MESSAGE ARRAYS
      *---------------------------------------------------------------
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAYS FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *---------------------------------------------------------------
      *
      /EJECT
      ****************************************************************
      * INPUT SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  LDA -  WITH THE REQUESTED PRINT SELECTIONS
      *---------------------------------------------------------------
      *
     D LDA             DS
     D  LDORBO                 1      5
     D  LDFYMD                 6     13  0
     D  LDTYMD                14     21  0
     D  LDMVSN                27     33  0
      *
     D  LDORPT                34     38
     D  LDORPP                39     43
     D  LDORFS                44     48  0
      *
     D  LDDNBO                49     53
     D  LDDNPT                54     58
     D  LDDNPP                59     63
     D  LDDNFS                64     68  0
      *
     D  LDORCELL              69     70  0
     D  LDDNCELL              71     72  0
      *
     D  LDFMDY               208    213  0
     D  LDTMDY               214    219  0
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDOUTQ               413    422
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SET1         BEGSR
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP481K1
     C                   WRITE     HP481EC
     C                   EXFMT     HP481R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     *IN12         OREQ      *ON                                          F12-PREVIOUS
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C                   PARM                    XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'QEZOUTPT'
     C                   MOVEL     SCRN1         ROUTNE
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
      * ALWAYS CHECK SECURITY FOR BUSINESS OFFICE
      *
     C                   MOVEL(P)  'HP481'       WKFNCD
     C                   EXSR      $CHKBO
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * VERIFY THAT A VALID FROM DATE IS ENTERED
      *
     C     DFFMDY        IFEQ      0                                            IF NO FROM
     C                   SETON                                        45
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   Z-ADD     DFFMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        45
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDFYMD
     C                   Z-ADD     DFFMDY        LDFMDY
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO FROM
      *
      * VERIFY THAT A VALID TO DATE IS ENTERED
      *
     C     DFTMDY        IFEQ      0                                            IF NO TO
     C                   SETON                                        46
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   Z-ADD     DFTMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        46
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDTYMD
     C                   Z-ADD     DFTMDY        LDTMDY
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO TO
      *
      * VERIFY THAT "TO" DATE IS NOT EARLIER THAN "FROM" DATE
      *
     C     *IN45         IFEQ      *OFF                                         IF EARLIER
     C     *IN46         ANDEQ     *OFF
     C     LDTYMD        ANDLT     LDFYMD
     C                   SETON                                        46
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
      * VALIDATE MOVEMENT
      *
     C     DFMVSN        IFNE      0                                            IF MOVEMENT
     C     DFMVSN        CHAIN     HSP074                             92
     C                   SELECT
     C     *IN92         WHENEQ    *ON                                          WH BAD MOVE
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00733'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C     MHMSCD        WHENNE    'SC'                                         WH NOT SCHED
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00728'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MHMSCD        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   OTHER
      *
     C                   EXSR      $MVSN1
     C                   ENDSL
     C                   ENDIF                                                  IF MOVEMENT
      *
      *
      * EDITS ON 'ORIGIN' SELECTIONS
      *
     C                   EXSR      $ORIG
      *
      * EDITS ON MOVEMENT THAT CANNOT BE PERFORMED UNTIL
      * AFTER ORIGIN INFO IS EDITED AND THERE ARE NO ERRORS
      *
     C     DFMVSN        IFNE      0
     C     *IN32         ANDEQ     *OFF
     C     *IN33         ANDEQ     *OFF
     C     *IN34         ANDEQ     *OFF
     C     *IN35         ANDEQ     *OFF
     C                   EXSR      $MVSN2
     C                   ENDIF
      *
      * EDITS ON 'DESTINATION' SELECTIONS
      *
     C                   EXSR      $DEST
      *
      * You user can not elect to run more than 1 copy. Issue message if
      * user has elected to run multiple copies.
      *
     C                   if        xxcopy > 1 and error < maxmsg
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09134'     MGID(E)
     C                   endif
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $MVSN1 - PERFORM INITIAL EDITS ON MOVEMENT NUMBER
      *----------------------------------------------------------------
      *
      * THE MOVEMENT ENTERED MUST MATCH THE ON-SCREEN USER ENTRIES:
      *   1) ORIGIN BUSINESS OFFICE
      *   2) SCHEDULED SHIP DATE
      *
     C     $MVSN1        BEGSR
      *
     C     *IN30         IFEQ      *OFF                                         IF BO OK
     C     MHORBO        ANDNE     DFORBO
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00727'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MHORBO        MGW(8)
     C                   MOVEA     DFORBO        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BO OK
      *
     C     *IN45         IFEQ      *OFF                                         IF DATES OK
     C     *IN46         ANDEQ     *OFF
     C     MHSCDT        IFLT      LDFYMD                                       IF OUT RANGE
     C     MHSCDT        ORGT      LDTYMD
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
      *
      * FLIP SCHEDULED SHIP DATE FROM CCYYMMDD TO MMDDYY
      *
     C                   Z-ADD     MHSCDT        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'CYMD'        PFRFMT
     C                   MOVEL     'MDY '        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
     C                   EXSR      $DATE
     C                   MOVE      PTO8          XXMDY
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00729'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     XXMDY         MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF OUT RANGE
     C                   ENDIF                                                  IF DATES OK
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $MVSN2 - PERFORM 'MISMATCH' EDITS ON MOVEMENT NUMBER
      *----------------------------------------------------------------
      *
      * THE MOVEMENT ENTERED MUST MATCH THE ON-SCREEN USER ENTRIES:
      *   1) ORIGIN PRODUCTION TYPE
      *   2) ORIGIN PRODUCTION PHASE
      *   3) ORIGIN FARM
      *
     C     $MVSN2        BEGSR
      *
     C     DFORPT        IFNE      *BLANK                                       IF TYPE OK
     C     *IN33         ANDEQ     *OFF
     C     MHORPT        ANDNE     DFORPT
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00734'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MHORPT        MGW(8)
     C                   MOVEA     DFORPT        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF TYPE OK
      *
      *
     C     DFORPP        IFNE      *BLANK                                       IF PHASE OK
     C     *IN34         ANDEQ     *OFF
     C     MHORPP        ANDNE     DFORPP
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00730'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEA     MHORPP        MGW(8)
     C                   MOVEA     DFORPP        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF PHASE OK
      *
      *
     C     DFORFS        IFNE      0                                            IF FARM OK
     C     *IN35         ANDEQ     *OFF
     C     MHORFS        ANDNE     DFORFS
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00732'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEL     DFMVSN        XXMVSN
     C                   MOVEA     XXMVSN        MGW(1)
     C                   MOVEL     MHORFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVEL     DFORFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FARM OK
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $ORIG - EDITS ON 'ORIGIN' SELECTIONS
      *----------------------------------------------------------------
      *
     C     $ORIG         BEGSR
      *
      * IF ORIGIN PRODUCTION TYPE
      *
     C                   MOVE      *BLANK        DFORTD
     C     DFORPT        IFNE      *BLANK                                       IF ORIG TYPE
      *
     C     DFORPT        CHAIN     HSP010                             92
     C     *IN92         IFEQ      *OFF                                         IF BAD TYPE
     C                   MOVEL     PTPTDS        DFORTD
     C                   ELSE
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00180'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFORPT        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD TYPE
     C                   ENDIF                                                  IF ORIG TYPE
      *
      *
      * IF ORIGIN PRODUCTION PHASE
      *
     C                   MOVE      *BLANK        DFORPD
     C     DFORPP        IFNE      *BLANK                                       IF ORIG PHAS
      *
     C     DFORPP        CHAIN     HSP011                             92
     C     *IN92         IFEQ      *OFF                                         IF BAD PHASE
     C                   MOVEL     PPPPDS        DFORPD
     C                   ELSE
     C                   SETON                                        34
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFORPP        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD PHASE
     C                   ENDIF                                                  IF ORIG PHAS
      *
      *
      * IF ORIGIN CELL IS KEYED, IT CANNOT BE NEGATIVE.
      *
     C     DFORCELL      IFLT      0                                            IF NEG CELL
     C                   SETON                                        31
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NEG CELL
      *
      *
      * IF ORIGIN FARM SITE KEYED, VALIDATE AND CHECK FOR MATCHES:
      *    1) BETWEEN FARM'S B.O. AND SCREEN B.O.
      *    2) BETWEEN FARM CELL AND SCREEN CELL
      *
     C                   MOVE      *BLANK        DFORFN
     C     DFORFS        IFNE      0                                            IF ORIG FARM
      *
     C     DFORFS        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *ON                                          IF BAD FARM
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFORFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     FSFSNM        DFORFN
      *
      * CHECK FOR BUSINESS OFFICE MATCH
      *
     C     FSFSBO        IFNE      DFORBO                                       IF MISMATCH
     C     DFORBO        ANDNE     *BLANK
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFORFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFSBO        MGW(6)
     C                   MOVEA     DFORBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF MISMATCH
      *
      *
      * CHECK FOR CELL MATCH
      *
     C     DFORCELL      IFGT      0                                            IF CELL
     C     FSCELL        ANDNE     DFORCELL
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00705'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFORFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(6)
     C                   MOVE      DFORCELL      XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
     C                   ENDIF                                                  IF BAD FARM
     C                   ENDIF                                                  IF ORIG FARM
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $DEST - EDITS ON 'DESTINATION' SELECTIONS
      *----------------------------------------------------------------
      *
     C     $DEST         BEGSR
      *
      * IF DESTINATION BUSINESS OFFICE
      *
     C                   MOVE      *BLANK        DFDNOD
     C     DFDNBO        IFNE      *BLANK                                       IF DEST OFF
      *
     C     DFDNBO        CHAIN     HSP009                             92
     C     *IN92         IFEQ      *ON                                          IF BAD OFF
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00110'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDNBO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
     C                   MOVEL     BOBODS        DFDNOD
      *
      * B.O. MUST HAVE A DIVISION OF 'LIVE'
      *
     C     BODVCD        IFNE      SVDVCD                                       IF NOT LIVE
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00112'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDNBO        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NOT LIVE
      *
     C                   ENDIF                                                  IF BAD OFF
     C                   ENDIF                                                  IF DEST OFF
      *
      *
      * IF DESTINATION PRODUCTION TYPE
      *
     C                   MOVE      *BLANK        DFDNTD
     C     DFDNPT        IFNE      *BLANK                                       IF DEST TYPE
      *
     C     DFDNPT        CHAIN     HSP010                             92
     C     *IN92         IFEQ      *OFF                                         IF BAD TYPE
     C                   MOVEL     PTPTDS        DFDNTD
     C                   ELSE
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00180'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDNPT        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD TYPE
     C                   ENDIF                                                  IF DEST TYPE
      *
      *
      * IF DESTINATION PRODUCTION PHASE
      *
     C                   MOVE      *BLANK        DFDNPD
     C     DFDNPP        IFNE      *BLANK                                       IF DEST PHAS
      *
     C     DFDNPP        CHAIN     HSP011                             92
     C     *IN92         IFEQ      *OFF                                         IF BAD PHASE
     C                   MOVEL     PPPPDS        DFDNPD
     C                   ELSE
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFDNPP        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF BAD PHASE
     C                   ENDIF                                                  IF DEST PHAS
      *
      *
      *
      * IF DESTINATION CELL IS KEYED, IT CANNOT BE NEGATIVE.
      *
     C     DFDNCELL      IFLT      0                                            IF NEG CELL
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF NEG CELL
      *
      *
      * IF DESTINATION FARM SITE, VALIDATE AND CHECK MATCHES:
      *    1) BETWEEN FARM'S B.O. AND SCREEN B.O.
      *
     C                   MOVE      *BLANK        DFDNFN
     C     DFDNFS        IFNE      0                                            IF DEST FARM
      *
     C     DFDNFS        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *ON                                          IF BAD FARM
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFDNFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     FSFSNM        DFDNFN
      *
      * CHECK FOR BUSINESS OFFICE MATCH
      *
     C     FSFSBO        IFNE      DFDNBO                                       IF MISMATCH
     C     DFDNBO        ANDNE     *BLANK
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00158'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFDNFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSFSBO        MGW(6)
     C                   MOVEA     DFDNBO        MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF MISMATCH
      *
      *
      * CHECK FOR CELL MATCH
      *
     C     DFDNCELL      IFGT      0                                            IF CELL
     C     FSCELL        ANDNE     DFDNCELL
     C                   SETON                                        39
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00705'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFDNFS        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(6)
     C                   MOVE      DFDNCELL      XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
     C                   ENDIF                                                  IF BAD FARM
     C                   ENDIF                                                  IF DEST FARM
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFOROD
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFORBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        30
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT REPORT
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   Z-ADD     DFMVSN        LDMVSN
      *
     C                   MOVEL     DFORBO        LDORBO
     C                   MOVEL     DFORPT        LDORPT
     C                   MOVEL     DFORPP        LDORPP
     C                   Z-ADD     DFORFS        LDORFS
     C                   Z-ADD     DFORCELL      LDORCELL
      *
     C                   MOVEL     DFDNBO        LDDNBO
     C                   MOVEL     DFDNPT        LDDNPT
     C                   MOVEL     DFDNPP        LDDNPP
     C                   Z-ADD     DFDNFS        LDDNFS
     C                   Z-ADD     DFDNCELL      LDDNCELL
      *
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING HP675CL TO QCMDEXC.
      *
      *
     C                   MOVEA     XXJOBQ        CMD(49)
     C                   MOVEA     CMD           CMDSBM
      *
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $F4S1 - F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * ORIGIN BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFORBO'
     C                   CALL      'HP503'
     C                   PARM      *BLANK        XXFSBO
     C                   PARM      *BLANK        XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        50
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        DFORBO
     C                   MOVEL     XXBODS        DFOROD
     C                   ENDIF                                                  IF SELECTED
      *
      * MOVEMENT
      *
     C     FLD           WHENEQ    'DFMVSN'
     C                   CALL      'HP500'
     C                   PARM      0             WKMVSN
     C                   PARM      DFFMDY        WKFMDY
     C                   PARM      DFORBO        XXFSBO
     C                   PARM      DFORPT        XXPTCD
     C                   PARM      DFORPP        XXPPCD
     C                   PARM      DFORFS        WKFSCD
     C                   PARM      DFDNBO        XXDNBO
     C                   PARM      DFDNPT        XXDNPT
     C                   PARM      DFDNPP        XXDNPP
     C                   PARM      DFDNFS        WKDNFS
     C                   SETON                                        52
     C     WKMVSN        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKMVSN        DFMVSN
     C                   ENDIF                                                  IF SELECTED
      *
      * ORIGIN PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'DFORPT'
     C                   CALL      'HP504'
     C                   PARM      *BLANK        XXPTCD
     C                   PARM      *BLANK        XXPTDS
     C                   SETON                                        53
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        DFORPT
     C                   MOVEL     XXPTDS        DFORTD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * ORIGIN PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFORPP'
     C                   CALL      'HP507'
     C                   PARM      *BLANK        XXPPCD
     C                   PARM      *BLANK        XXPPDS
     C                   SETON                                        54
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFORPP
     C                   MOVEL     XXPPDS        DFORPD
     C                   ENDIF                                                  IF SELECTED
      *
      * ORIGIN FARM SITE
      *
     C     FLD           WHENEQ    'DFORFS'
     C                   CALL      'HP5040'
     C                   PARM      *blank        xxaist
     C                   PARM      0             WKFSCD
     C                   PARM      *BLANK        XXFSNM
     C                   SETON                                        55
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFORFS
     C                   MOVEL     XXFSNM        DFORFN
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * DESTINATION BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFDNBO'
     C                   CALL      'HP503'
     C                   PARM      *BLANK        XXFSBO
     C                   PARM      *BLANK        XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        56
     C     XXFSBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFSBO        DFDNBO
     C                   MOVEL     XXBODS        DFDNOD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * DESTINATION PRODUCTION TYPE
      *
     C     FLD           WHENEQ    'DFDNPT'
     C                   CALL      'HP504'
     C                   PARM      *BLANK        XXPTCD
     C                   PARM      *BLANK        XXPTDS
     C                   SETON                                        57
     C     XXPTCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPTCD        DFDNPT
     C                   MOVEL     XXPTDS        DFDNTD
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * DESTINATION PRODUCTION PHASE
      *
     C     FLD           WHENEQ    'DFDNPP'
     C                   CALL      'HP507'
     C                   PARM      *BLANK        XXPPCD
     C                   PARM      *BLANK        XXPPDS
     C                   SETON                                        58
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFDNPP
     C                   MOVEL     XXPPDS        DFDNPD
     C                   ENDIF                                                  IF SELECTED
      *
      * DESTINATION FARM SITE
      *
     C     FLD           WHENEQ    'DFDNFS'
     C                   CALL      'HP5040'
     C                   PARM      *blank        xxaist
     C                   PARM      0             WKFSCD
     C                   PARM      *BLANK        XXFSNM
     C                   SETON                                        59
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFDNFS
     C                   MOVEL     XXFSNM        DFDNFN
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      *---------------------------------------------------------------
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZERO         ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * *INZSR - INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * INITIALIZE LDA FIELDS
      *
     C                   Z-ADD     0             LDFYMD
     C                   Z-ADD     0             LDTYMD
     C                   Z-ADD     0             LDFMDY
     C                   Z-ADD     0             LDTMDY
     C                   Z-ADD     0             LDMVSN
      *
     C                   MOVE      *BLANK        LDORBO
     C                   MOVE      *BLANK        LDORPT
     C                   MOVE      *BLANK        LDORPP
     C                   Z-ADD     0             LDORFS
     C                   Z-ADD     0             LDORCELL
      *
     C                   MOVE      *BLANK        LDDNBO
     C                   MOVE      *BLANK        LDDNPT
     C                   MOVE      *BLANK        LDDNPP
     C                   Z-ADD     0             LDDNFS
     C                   Z-ADD     0             LDDNCELL
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL(P)  'PRIORITY'    XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        XXCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     XXCOPY        IFEQ      0
     C                   Z-ADD     1             XXCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * NUMERIC PARM FIELDS
      *
     C     *LIKE         DEFINE    FSFSCD        WKFSCD
     C     *LIKE         DEFINE    FSFSCD        WKDNFS
     C     *LIKE         DEFINE    MHMVSN        WKMVSN
     C     *LIKE         DEFINE    DFFMDY        WKFMDY
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXAIST            1
     C                   MOVE      *BLANK        XXCELL            2
     C                   MOVE      *BLANK        XXFSCD            5
     C                   MOVE      *BLANK        XXMVSN            7
     C                   MOVE      *BLANK        XXMDY             6
     C     *LIKE         DEFINE    FSFSNM        XXFSNM
     C     *LIKE         DEFINE    BOBOBO        XXFSBO
     C     *LIKE         DEFINE    BOBODS        XXBODS
     C     *LIKE         DEFINE    PTPTCD        XXPTCD
     C     *LIKE         DEFINE    PTPTDS        XXPTDS
     C     *LIKE         DEFINE    PPPPCD        XXPPCD
     C     *LIKE         DEFINE    PPPPDS        XXPPDS
      *
     C     *LIKE         DEFINE    DFDNBO        XXDNBO
     C     *LIKE         DEFINE    DFDNPT        XXDNPT
     C     *LIKE         DEFINE    DFDNPP        XXDNPP
      *
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL
      *
      * MOVE RETURNED FIELDS TO SCREEN
      *
     C                   MOVEL     OUBOBO        DFORBO
     C                   MOVEL     OUBODS        DFOROD
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * DEFAULT TODAY'S DATE INTO THE 'FROM' AND 'TO' DATES
      *
     C                   Z-ADD     UDATE         DFFMDY
     C                   Z-ADD     UDATE         DFTMDY
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAY NAMED 'CMD' USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP481CL)) JOB(TRANBOL) JOBQ(__________)
