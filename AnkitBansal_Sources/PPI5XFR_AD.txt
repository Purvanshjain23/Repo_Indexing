// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPI5XFR
// ?Date: 14.08.2025 Time: 03:40:47
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?MAINTENANCE LOG
DO;

//?RMC DLY029 5/25/07 Db Changes - broker to 6A,broker not in OH
//?RMC DLY029 10/08/07 Db Changes - Read shipping dtl accr to determine
//?   if broker needs to be emailed
//?PKD E00019 09/24/08 Removed Broker Proecssing.
//?PKD E00019 09/26/08 This program is no longer needed now that
//?                    sales is moving more towards the Market
//?                    reporting.  Talked to Bret G.
ENDDO;

//?09/24/08 PKD E00019 Sent from New XF Driver
EXECUTE FUNCTION(Crt Fax/Email OrdH INV RT) TYPE(RTVOBJ) FILE(OPBFCPP)          AC1718582;
PARAMETER(PAR.Invoice_Date);
{
 //?USER: Process Data record

 //?RMC 10/08/07 broker is in shipping dtl accrual- so read that file.
 //?by Broker, sel commission only --
 //?Also, a customer can have more than one broker so write a
 //?driver rcd for each broker
 //?Regional Sales person
 DO;

 // LCL.Created Fax/Dtl Drv Usr = CND.no
 LCL.Created_Fax_Dtl_Drv_Usr = 'N';

 // LCL.Brk/Rgn Code Type = CND.Rgn Sls Mgnr
 LCL.Brk_Rgn_Code_Type = 'R';

 EXECUTE FUNCTION(Rtv Fax/Email/Both     RT) TYPE(RTVOBJ) FILE(PDNEREP)          AC1718722;
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(LCL.Regional_Mgr_Fax_Email);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 EXECUTE FUNCTION(RTV Reg Sls Mgr Fax/Em RT) TYPE(RTVOBJ) FILE(PDLWREP)          AC1718237;
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(LCL.Regional_Salesperson_Code);
 PARAMETER(LCL.Salesperson_Name);
 PARAMETER(LCL.Fax_Number);
 PARAMETER(LCL.Email_Address);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  // PAR.Salesperson Code = CON.*BLANK
  PAR.Salesperson_Code = *BLANK;

  // PAR.Salesperson Name = CON.*BLANK
  PAR.Salesperson_Name = *BLANK;

  // PAR.Fax Number FF = CON.*BLANK
  PAR.Fax_Number_FF = *BLANK;

  // PAR.Email Address = CON.*BLANK
  PAR.Email_Address = *BLANK;

  EXECUTE FUNCTION(RTV Reg Sls Mgr Fax/Em RT) TYPE(RTVOBJ) FILE(PDLVREP)          AC1718238;
  PARAMETER(DB1.Territory_Code);
  PARAMETER(LCL.Regional_Salesperson_Code);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   QUIT;

  }

  // PAR.Salesperson Code = LCL.Regional Salesperson Code
  PAR.Salesperson_Code = LCL.Regional_Salesperson_Code;

  //?Salesperson & Salesperson Electronic
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  EXECUTE FUNCTION(RTV Reg Sls Mgr Fax/Em RT) TYPE(RTVOBJ) FILE(CAAPREP)          AC1718239;
  PARAMETER(LCL.Regional_Salesperson_Code);
  PARAMETER(PAR.Fax_Number_FF);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

   // PGM.*Return code = CND.*Normal
   PGM.*Return_code = *BLANK;

   QUIT;

  }

  EXECUTE FUNCTION(RTV Reg Sls Mgr Fax/Em RT) TYPE(RTVOBJ) FILE(PDNFREP)          AC1718240;
  PARAMETER(LCL.Regional_Salesperson_Code);
  PARAMETER(PAR.Email_Address);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?Salesperson & Salesperson Electronic
  // IF *OTHERWISE
  IF *OTHERWISE;

  QUIT;

  ENDIF;

 }

 CASE;

 // IF LCL.Regional Mgr Fax/Email is NONE
 IF LCL.Regional_Mgr_Fax_Email = *BLANK;

 // IF LCL.Regional Mgr Fax/Email is Fax (Not Yet Available)
 IF LCL.Regional_Mgr_Fax_Email = 'F';

 // IF LCL.Regional Mgr Fax/Email is Email Only
 IF LCL.Regional_Mgr_Fax_Email = 'E';

 // AND LCL.Email Address is Entered
 AND LCL.Email_Address <> *BLANK;

 CASE;

 // IF LCL.Regional Salesperson Code is entered
 IF LCL.Regional_Salesperson_Code <> *BLANK;

 // LCL.Brk/Rgn Code = LCL.Regional Salesperson Code
 LCL.Brk_Rgn_Code = LCL.Regional_Salesperson_Code;

 // LCL.Created Fax/Email Dtl Usr = CND.blank
 LCL.Created_Fax_Email_Dtl_Usr = *BLANK;

 EXECUTE FUNCTION(Crt Fax/Email OrdDtlRGNRT) TYPE(RTVOBJ) FILE(OPBGWKP)          AC1718726;
 PARAMETER(DB1.Company_Number);
 PARAMETER(DB1.Order_Number);
 PARAMETER(LCL.Brk_Rgn_Code_Type);
 PARAMETER(LCL.Brk_Rgn_Code);
 PARAMETER(DB1.Order_Type_Sales);
 PARAMETER(DB1.AR_Customer_Number);
 PARAMETER(DB1.Ship_To_Customer);
 PARAMETER(DB1.Ship_To_Name);
 PARAMETER(DB1.Ship_To_Address_Line_1);
 PARAMETER(DB1.Ship_To_Address_Line_2);
 PARAMETER(DB1.Ship_To_Address_Line_3);
 PARAMETER(DB1.Ship_To_City);
 PARAMETER(DB1.Ship_To_State_Code);
 PARAMETER(DB1.Ship_To_Zip_Postal_Code);
 PARAMETER(DB1.Bill_to_Customer);
 PARAMETER(DB1.Bill_to_Name);
 PARAMETER(DB1.Bill_to_Address_Line_1);
 PARAMETER(DB1.Bill_to_Address_Line_2);
 PARAMETER(DB1.Bill_to_Address_Line_3);
 PARAMETER(DB1.Bill_to_City);
 PARAMETER(DB1.Bill_to_State_Code);
 PARAMETER(DB1.Bill_to_Zip_Postal_Code);
 PARAMETER(DB1.Customer_Purchase_Order_#);
 PARAMETER(DB1.Order_Date);
 PARAMETER(DB1.Requested_Ship_Date);
 PARAMETER(DB1.Actual_Shipped_Date);
 PARAMETER(DB1.Cancel_Date);
 PARAMETER(DB1.Terms_Code);
 PARAMETER(DB1.Special_Instructions);
 PARAMETER(DB1.Special_Instructions_2);
 PARAMETER(DB1.Carrier_Code);
 PARAMETER(DB1.Comment_Print_Acknowledge);
 PARAMETER(DB1.Comment_Print_Inv_Cr_Memo);
 PARAMETER(DB1.Comment_Print_Pick_Slip);
 PARAMETER(DB1.Comment_Print_Ship_Doc);
 PARAMETER(DB1.Reason_Code);
 PARAMETER(DB1.Order_in_Use);
 PARAMETER(DB1.Header_Status);
 PARAMETER(DB1.Header_Status_Last);
 PARAMETER(DB1.Order_Type_Print_Status);
 PARAMETER(DB1.Scheduled_Ship_Date);
 PARAMETER(DB1.User_Original_Entry);
 PARAMETER(DB1.Date_of_Original_Entry);
 PARAMETER(DB1.Order_Value_Total);
 PARAMETER(DB1.Order_Weight_Total);
 PARAMETER(DB1.Credit_Hold);
 PARAMETER(DB1.Production_Hold);
 PARAMETER(DB1.New_Customer_Hold);
 PARAMETER(DB1.Requested_Delivery_Date);
 PARAMETER(DB1.Requested_Delivery_Time);
 PARAMETER(DB1.Accounts_Receiv_Ent_1);
 PARAMETER(DB1.Accounts_Receiv_Ent_2);
 PARAMETER(DB1.Load_ID);
 PARAMETER(DB1.Absorbed_Freight_Rate_CWT);
 PARAMETER(DB1.Rated_Freight);
 PARAMETER(DB1.LTL_Flag);
 PARAMETER(DB1.Price_Audit);
 PARAMETER(DB1.Price_Status);
 PARAMETER(DB1.Shipping_Method);
 PARAMETER(DB1.Export_Status);
 PARAMETER(DB1.Palletize);
 PARAMETER(DB1.Shrink_Wrap);
 PARAMETER(DB1.Slip_Sheet);
 PARAMETER(DB1.Age_Code);
 PARAMETER(DB1.Reefer_Temperature);
 PARAMETER(DB1.Load_Type);
 PARAMETER(DB1.Attach_to_Invoice_Number);
 PARAMETER(DB1.Load_Plan_Order);
 PARAMETER(DB1.Print_Pick_Slip);
 PARAMETER(DB1.Resell_Reference_Number);
 PARAMETER(DB1.Special_Comment_1);
 PARAMETER(DB1.Special_Comment_2);
 PARAMETER(DB1.Affect_Auto_Accruals);
 PARAMETER(DB1.Sales_Route_Code);
 PARAMETER(DB1.Manager_Level_Code);
 PARAMETER(DB1.VP_Level_Code);
 PARAMETER(DB1.Attach_to_Order_Number);
 PARAMETER(DB1.Reason_for_Price_Audit);
 PARAMETER(DB1.Invoice_Number);
 PARAMETER(DB1.Invoice_Suffix);
 PARAMETER(DB1.Invoice_Date);
 PARAMETER(DB1.Event_Code);
 PARAMETER(DB1.Trans_Contol_AS400_Plant);
 PARAMETER(DB1.Modified_Flag);
 PARAMETER(DB1.A_R_order_Value_Total);
 PARAMETER(DB1.Billing_Activity_Type);
 PARAMETER(DB1.Block_Order_Flag);
 PARAMETER(DB1.Order_Certification_Flag);
 PARAMETER(DB1.Invoice_Order_Value_Tot);
 PARAMETER(DB1.Process_Sts_for_3C);
 PARAMETER(DB1.Order_Conf_Fax_Sts);
 PARAMETER(DB1.Manifest_Fax_Sts);
 PARAMETER(DB1.Invoice_Fax_Sts);
 PARAMETER(DB1.Transfer_in_Storage_Ind);
 PARAMETER(DB1.Email_Cust_On_Order_Ship);
 PARAMETER(DB1.Order_Emailed);
 PARAMETER(DB1.Export_Docs_Go_w_Driver);
 PARAMETER(DB1.Shipping_Temp_Code_C_F);
 PARAMETER(DB1.Air_Freight_Order);
 PARAMETER(DB1.Order_Requires_Review);
 PARAMETER(DB1.OH_Load_Plan_Ready);
 PARAMETER(DB1.Export_USDA_Approved);
 PARAMETER(DB1.OH_TF_Exempt_Code);
 PARAMETER(DB1.Claim_Number);
 PARAMETER(LCL.Created_Fax_Email_Dtl_Usr);
 {
  //?USER: Process Data record

  CASE;

  // IF DB1.Detail Line Status is Not cancelled
  IF DB1.Detail_Line_Status = 'L'/'A'/'C'/'R'/'E'/'H'/'I';

  //?Reverse all $/Weights if credit memo
  CASE;

  // IF PAR.Billing Activity Type is Credit Memo
  IF PAR.Billing_Activity_Type = '2';

  // LCL.Unit Price = CON.*ZERO - DB1.Unit Price
  LCL.Unit_Price = *ZERO - DB1.Unit_Price;

  // LCL.Invoice Amount = CON.*ZERO - DB1.Extended Amount
  LCL.Invoice_Amount = *ZERO - DB1.Extended_Amount;

  //?Reverse all $/Weights if credit memo
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Unit Price = DB1.Unit Price
  LCL.Unit_Price = DB1.Unit_Price;

  // LCL.Invoice Amount = DB1.Extended Amount
  LCL.Invoice_Amount = DB1.Extended_Amount;

  ENDIF;

  //?RMC DLY029 05/25/07  Pass out Broker for sndbroker field
  EXECUTE FUNCTION(Crt Fax/Email ShpD All RT) TYPE(RTVOBJ) FILE(OMHRCPP)          AC1719264;
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(LCL.Accrual_Rate);
  PARAMETER(LCL.Extended_Amount);
  PARAMETER(LCL.Snd_Broker_Code);
  PARAMETER(LCL.Accrual_Type);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  CASE;

  // IF LCL.Accrual Type is Commission
  IF LCL.Accrual_Type = 'CM';

  // LCL.Billing Activity Desc = Condition name of PAR.Billing Activity Type
  LCL.Billing_Activity_Desc = RTVCND(PAR.Billing_Activity_Type);

  EXECUTE FUNCTION(Crt Fax/Email/Chg Dtl  RT) TYPE(RTVOBJ) FILE(PPASCPP)          AC1718599;
  PARAMETER(PAR.Brk_Rgn_Code_Type);
  PARAMETER(PAR.Brk_Rgn_Code);
  PARAMETER(DB1.Company_Number);
  PARAMETER(DB1.Order_Number);
  PARAMETER(DB1.Order_Sequence_Number);
  PARAMETER(DB1.Order_Secondary_Line_Seq);
  PARAMETER(PAR.Order_Date);
  PARAMETER(PAR.Invoice_Date);
  PARAMETER(PAR.AR_Customer_Number);
  PARAMETER(PAR.Ship_To_Customer);
  PARAMETER(PAR.Actual_Shipped_Date);
  PARAMETER(PAR.Invoice_Number);
  PARAMETER(PAR.Customer_Purchase_Order_#);
  PARAMETER(PAR.Ship_To_Name);
  PARAMETER(PAR.Ship_To_City);
  PARAMETER(PAR.Ship_To_State_Code);
  PARAMETER(PAR.Ship_To_Zip_Postal_Code);
  PARAMETER(DB1.Item_Code);
  PARAMETER(DB1.Order_Desc_Line_One);
  PARAMETER(DB1.Quantity_Ordered);
  PARAMETER(DB1.Quantity_Shipped_Total);
  PARAMETER(DB1.Weight_Shipped_Total);
  PARAMETER(LCL.Unit_Price);
  PARAMETER(DB1.U_M_Base_Price);
  PARAMETER(LCL.Invoice_Amount);
  PARAMETER(LCL.Accrual_Rate);
  PARAMETER(LCL.Extended_Amount);
  PARAMETER(LCL.Billing_Activity_Desc);
  PARAMETER(LCL.Snd_Broker_Code);
  PARAMETER(LCL.FAX_DTL_Status_1);
  PARAMETER(LCL.FAX_DTL_Status_2);
  PARAMETER(LCL.FAX_DTL_Status_3);
  PARAMETER(LCL.FAX_DTL_Status_4);
  {
   //?USER: Processing if Data record not found

   EXECUTE FUNCTION(Crt WF Fax/Email Dtl  CR) TYPE(CRTOBJ) FILE(PPASCPP)           AC1718595;
   PARAMETER(PAR.Brk_Rgn_Code_Type);
   PARAMETER(PAR.Brk_Rgn_Code);
   PARAMETER(PAR.Company_Number);
   PARAMETER(PAR.Order_Number);
   PARAMETER(PAR.Order_Sequence_Number);
   PARAMETER(PAR.Order_Secondary_Line_Seq);
   PARAMETER(PAR.Order_Date);
   PARAMETER(PAR.Invoice_Date);
   PARAMETER(PAR.F_E_A_R_Customer_Number);
   PARAMETER(PAR.F_E_Ship_To_Number);
   PARAMETER(PAR.Actual_Shipped_Date);
   PARAMETER(PAR.Invoice_Number);
   PARAMETER(PAR.Customer_Purchase_Order_#);
   PARAMETER(PAR.Ship_To_Name);
   PARAMETER(PAR.Ship_To_City);
   PARAMETER(PAR.Ship_To_State_Code);
   PARAMETER(PAR.Ship_To_Zip_Postal_Code);
   PARAMETER(PAR.Item_Code);
   PARAMETER(PAR.Item_Description);
   PARAMETER(PAR.Quantity_Ordered);
   PARAMETER(PAR.Quantity_Billed);
   PARAMETER(PAR.Weight_Billed);
   PARAMETER(PAR.Unit_Price);
   PARAMETER(PAR.U_M_Base_Price);
   PARAMETER(PAR.Invoice_Amount);
   PARAMETER(PAR.Accrual_Rate);
   PARAMETER(PAR.Extended_Amount);
   PARAMETER(PAR.Billing_Activity_Desc);
   PARAMETER(PAR.Snd_Broker_Code);
   PARAMETER(PAR.FAX_DTL_Status_1);
   PARAMETER(PAR.FAX_DTL_Status_2);
   PARAMETER(PAR.FAX_DTL_Status_3);
   PARAMETER(PAR.FAX_DTL_Status_4);
   //?USER: Process Data record

   EXECUTE FUNCTION(Change WF Fax/Email Detai) TYPE(CHGOBJ) FILE(PPASCPP)          AC1718596;
   PARAMETER(DB1.Brk_Rgn_Code_Type);
   PARAMETER(DB1.Brk_Rgn_Code);
   PARAMETER(DB1.Company_Number);
   PARAMETER(DB1.Order_Number);
   PARAMETER(DB1.Order_Sequence_Number);
   PARAMETER(DB1.Order_Secondary_Line_Seq);
   PARAMETER(DB1.Order_Date);
   PARAMETER(DB1.Invoice_Date);
   PARAMETER(DB1.F_E_A_R_Customer_Number);
   PARAMETER(DB1.F_E_Ship_To_Number);
   PARAMETER(DB1.Actual_Shipped_Date);
   PARAMETER(DB1.Invoice_Number);
   PARAMETER(DB1.Customer_Purchase_Order_#);
   PARAMETER(DB1.Ship_To_Name);
   PARAMETER(DB1.Ship_To_City);
   PARAMETER(DB1.Ship_To_State_Code);
   PARAMETER(DB1.Ship_To_Zip_Postal_Code);
   PARAMETER(DB1.Item_Code);
   PARAMETER(DB1.Item_Description);
   PARAMETER(DB1.Quantity_Ordered);
   PARAMETER(DB1.Quantity_Billed);
   PARAMETER(DB1.Weight_Billed);
   PARAMETER(DB1.Unit_Price);
   PARAMETER(DB1.U_M_Base_Price);
   PARAMETER(DB1.Invoice_Amount);
   PARAMETER(DB1.Accrual_Rate);
   PARAMETER(DB1.Extended_Amount);
   PARAMETER(DB1.Billing_Activity_Desc);
   PARAMETER(DB1.Snd_Broker_Code);
   PARAMETER(DB1.FAX_DTL_Status_1);
   PARAMETER(DB1.FAX_DTL_Status_2);
   PARAMETER(DB1.FAX_DTL_Status_3);
   PARAMETER(DB1.FAX_DTL_Status_4);
  }

  // PAR.Created Fax/Email Dtl Usr = CND.yes
  PAR.Created_Fax_Email_Dtl_Usr = 'Y';

  ENDIF;

  ENDIF;

 }

 CASE;

 // IF LCL.Created Fax/Email Dtl Usr is yes
 IF LCL.Created_Fax_Email_Dtl_Usr = 'Y';

 //?******* BROKER RECORD TO THE WF FAX/EMAIL DRIVER
 //?Broker driver record only if there was a commission record
 EXECUTE FUNCTION(Crt Fax/Email/Chg Drv  RT) TYPE(RTVOBJ) FILE(PPARCPP)          AC1718586;
 PARAMETER(LCL.Brk_Rgn_Code);
 PARAMETER(LCL.Brk_Rgn_Code_Type);
 PARAMETER(LCL.Fax_Number);
 PARAMETER(LCL.Email_Address);
 PARAMETER(LCL.Fax_Driver_Unused_1);
 PARAMETER(LCL.Fax_Driver_Unused_2);
 PARAMETER(LCL.Fax_Driver_Unused_3);
 PARAMETER(LCL.Fax_Driver_Unused_4);
 {
  //?USER: Processing if Data record not found

  EXECUTE FUNCTION(Create WF Fax/Email Drive) TYPE(CRTOBJ) FILE(PPARCPP)          AC1718583;
  PARAMETER(PAR.Brk_Rgn_Code);
  PARAMETER(PAR.Brk_Rgn_Code_Type);
  PARAMETER(PAR.Fax_Number);
  PARAMETER(PAR.Email_Address);
  PARAMETER(PAR.Fax_Driver_Unused_1);
  PARAMETER(PAR.Fax_Driver_Unused_2);
  PARAMETER(PAR.Fax_Driver_Unused_3);
  PARAMETER(PAR.Fax_Driver_Unused_4);
  //?USER: Process Data record

  EXECUTE FUNCTION(Change WF Fax/Email Drive) TYPE(CHGOBJ) FILE(PPARCPP)          AC1718584;
  PARAMETER(DB1.Brk_Rgn_Code);
  PARAMETER(DB1.Brk_Rgn_Code_Type);
  PARAMETER(DB1.Fax_Number);
  PARAMETER(DB1.Email_Address);
  PARAMETER(DB1.Fax_Driver_Unused_1);
  PARAMETER(DB1.Fax_Driver_Unused_2);
  PARAMETER(DB1.Fax_Driver_Unused_3);
  PARAMETER(DB1.Fax_Driver_Unused_4);
 }

 ENDIF;

 ENDIF;

 // IF *OTHERWISE
 IF *OTHERWISE;

 ENDIF;

 ENDDO;

 //?MAINTENANCE LOG
 DO;

 //?09/24/08 PKD E00019 Removed Broker processing
 ENDDO;

}


