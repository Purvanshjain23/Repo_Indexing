// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PMCXDFR
// ?Date: 14.08.2025 Time: 03:42:38
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

EXECUTE FUNCTION(VAL Set Inter. Access  IF) TYPE(EXCINTFUN)                     AC1144606;
PARAMETER('I/C');
PARAMETER(CTL.Company_Number);
PARAMETER(PAR.Warehouse_Code);
PARAMETER(PAR.Allow_Multi_Company);
PARAMETER(PAR.Default_Printer);
PARAMETER(PAR.Salesperson_Code);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Application   IF) TYPE(EXCINTFUN)                     AC1144188;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // Execute function SET Message Queue Dest US.
  EXECUTE FUNCTION(SET Message Queue Dest US) TYPE(EXCUSRSRC) ('USNCUFR');
  {
   C                     MOVEL'*PRV '   ZAPGRL           PREVIOUS
  }

  // Send completion message - 'Application access denied for user &1 in application area &2'
  MESSAGE(USR0810 *COMPLETION);
  MSGPARM(PAR.User_Profile_Name);
  MSGPARM(PAR.Application_Code);

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Override company with User profile control's company if found
  CASE;

  // IF LCL.Company Number is not equal to zero
  IF LCL.Company_Number <> *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  //?Get prod warehouse, if the appl got a warehouse
  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  // Call program RTV Prod Whse for Co  XF.
  CALL PROGRAM(RTV Prod Whse for Co  XF) ('PNKDXFR');
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Company_Number);

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(SET Screen Headings    IF) TYPE(EXCINTFUN)                     AC1248058;
 PARAMETER(PAR.Application_Code);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function CLC Center Txt Str 40  US.
  EXECUTE FUNCTION(CLC Center Txt Str 40  US) TYPE(EXCUSRSRC) ('PDYJUFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C           UX        DOWGT0
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // Execute function MOV Appl Desc-Co Head  US.
  EXECUTE FUNCTION(MOV Appl Desc-Co Head  US) TYPE(EXCUSRSRC) ('PDYKUFR');
  PARAMETER(WRK.USR_Description_40_2);
  {
   C                     MOVE #IDE40    ##CMP
  }

 }

}


// WRK.First Time Flag = CND.Yes
WRK.First_Time_Flag = 'Y';

//?USER: Initialize subfile control

CASE;

// IF WRK.First Time Flag is Yes
IF WRK.First_Time_Flag = 'Y';

// CTL.Record Status = CND.Active
CTL.Record_Status = 'A';

// WRK.First Time Flag = CND.NO
WRK.First_Time_Flag = 'N';

ENDIF;

//?USER: Initialize subfile record from DBF record

CASE;

// IF RCD.Item Code is Entered
IF RCD.Item_Code <> *ZERO;

EXECUTE FUNCTION(Rtv Descriptions      RT) TYPE(RTVOBJ) FILE(CABZREP)           AC1140665;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Item_Code);
PARAMETER(RCD.Item_Description);
PARAMETER(LCL.Description_Line_Two);
PARAMETER(LCL.UOM_Primary);
PARAMETER(LCL.UOM_Second);
PARAMETER(LCL.UOM_Third);
{
 //?USER: Processing if Data record not found

 // PGM.*Return code = CND.*Record does not exist
 PGM.*Return_code = 'Y2U0005';

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


ENDIF;

//?USER: Process subfile control (Pre-confirm)

//?F6=Create
CASE;

// IF CTL.*CMD key is *Create
IF CTL.*CMD_key = '06';

// Call program EDT Trans Tmpl Items   ER.
CALL PROGRAM(EDT Trans Tmpl Items   ER) ('PMCYE1R');
PARAMETER(CTL.Company_Number);
PARAMETER(CTL.Warehouse_Type);
PARAMETER(*MISSING);
PARAMETER(CTL.Item_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?F21=Print List
CASE;

// IF CTL.*CMD key is *Print List
IF CTL.*CMD_key = '21';

// PAR.PRT Night Queue Run Sts = CND.no
PAR.PRT_Night_Queue_Run_Sts = 'N';

// Call program PMT Prt Opt w/PSz SHR  PV.
CALL PROGRAM(PMT Prt Opt w/PSz SHR  PV) ('PDV8PVR');
PARAMETER('Transfer Template Items');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(PAR.PRT_Night_Queue_Run_Sts);
PARAMETER(PAR.PRT_Night_Queue);
PARAMETER(PAR.Application_Code);
PARAMETER(*MISSING);
PARAMETER(1);

//?** Submit report listing if not F3 from reporting overrides prompt
CASE;

// IF PGM.*Return code is *User QUIT requested
IF PGM.*Return_code = 'Y2U9999';

//?** Submit report listing if not F3 from reporting overrides prompt
// IF *OTHERWISE
IF *OTHERWISE;

//?** Set Company Number into 15.5
CASE;

// IF CTL.Company Number is greater than zero
IF CTL.Company_Number > *ZERO;

// WRK.Company Number Pass   USR = CTL.Company Number
WRK.Company_Number_Pass_USR = CTL.Company_Number;

//?** Set Company Number into 15.5
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Company Number Pass   USR = CON.*ZERO
WRK.Company_Number_Pass_USR = 0;

ENDIF;

//?** Set Customer Number into 15.5
CASE;

// IF CTL.Customer Number       NBR is not equal 0
IF CTL.Customer_Number_NBR <> *ZERO;

// WRK.Customer Number Pass  USR = CTL.Customer Number       NBR
WRK.Customer_Number_Pass_USR = CTL.Customer_Number_NBR;

//?** Set Customer Number into 15.5
// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Customer Number Pass  USR = CON.*ZERO
WRK.Customer_Number_Pass_USR = *ZERO;

ENDIF;

// Call program PRT Xfr Tmplt Items    CL.
SBMJOB;
CALL PROGRAM(PRT Xfr Tmplt Items    CL) ('PMC4UPC');
PARAMETER(LCL.Return_Code_Usr);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(WRK.Company_Number_Pass_USR);
PARAMETER(WRK.Customer_Number_Pass_USR);
PARAMETER(PAR.System_Value_Numeric);
PARAMETER(CTL.Warehouse_Type);
PARAMETER(CTL.Record_Status);
SBMJOBOVR JOB(TTITEMSLST);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

// Send information message - 'The report has been submitted.'
MESSAGE(USR2720 *INFO);

ENDIF;

// CTL.Warehouse Type = CND.Equal blank
CTL.Warehouse_Type = *BLANK;

// CTL.Item Code = CND.Not Entered
CTL.Item_Code = *ZERO;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?USER: Process subfile record (Pre-confirm)

//?2=Edit
CASE;

// IF RCD.*SFLSEL is *Edit
IF RCD.*SFLSEL = '2'/'2';

// Call program EDT Trans Tmpl Items   ER.
CALL PROGRAM(EDT Trans Tmpl Items   ER) ('PMCYE1R');
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Warehouse_Type);
PARAMETER(RCD.Customer_Number_NBR);
PARAMETER(RCD.Item_Code);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

ENDIF;

//?4=Delete
CASE;

// IF RCD.*SFLSEL is *Delete
IF RCD.*SFLSEL = '4'/'4';

EXECUTE FUNCTION(Delete Transfer Template) TYPE(DLTOBJ) FILE(PMAGREP)           AC1804687;
PARAMETER(RCD.Company_Number);
PARAMETER(RCD.Warehouse_Type);
PARAMETER(*MISSING);
PARAMETER(RCD.Item_Code);

// PGM.*Defer confirm = CND.Defer confirm
PGM.*Defer_confirm = 'Y';

// Send error message - 'Record deleted.'
ERROR(Y2U0013);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

