// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLEOPVR
// ?Date: 14.08.2025 Time: 02:53:56
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modification history
DO;

//? 7/02/2021 JBB WHD80995 - Increase rollover values for BO#
//?                          Recompile only after changing the
//?                          RTVOBJ-Rtv Crt Next BOH      RT to
//?                          rollover when the BO# reaches 999999,
//?                          instead of 99999.
//?11/02/2020 ISE H16853 - CHANGE BUY ORDER NUMBER FIELD LENGTH FROM 5 TO 7
ENDDO;

//?USER: Process command keys

EXECUTE FUNCTION(Rtv Buy Ord Info ALL  RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1154917;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOH_Buy_Order_Date);
PARAMETER(DTL.BOH_Kill_Date);
PARAMETER(DTL.BOH_Payment_Type);
PARAMETER(DTL.BOH_Buy_Order_Type);
PARAMETER(DTL.BOH_Market_Add_Deduct);
PARAMETER(DTL.BOH_Status);
PARAMETER(DTL.BOH_Delv_Plan_Printed);
PARAMETER(DTL.BOH_Quote_Price_Type);
PARAMETER(DTL.BOH_Quoted_Base_Mkt_Price);
PARAMETER(DTL.PPWS_Company_Number);
PARAMETER(DTL.CW_Year);
PARAMETER(DTL.CW_Week_Number);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.PC_Contract_Code);
PARAMETER(DTL.PSC_Sub_Contract_Code);
PARAMETER(DTL.GN_Genetic_Code);
PARAMETER(DTL.PO_Option_Code);
PARAMETER(DTL.CMP_Program_Code);
PARAMETER(DTL.HB_Buyer_Code);
PARAMETER(DTL.RS_Record_Status);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?USER: User defined action

EXECUTE FUNCTION(Cpy Buy Order -Cmpny  RT) TYPE(RTVOBJ) FILE(PKAWCPP)           AB1259692;
PARAMETER(DTL.BOH_Company_Number);
PARAMETER(DTL.BOH_Buy_Order_Number);
PARAMETER(DTL.BOH_Buy_Order_Date);
PARAMETER(DTL.BOH_Kill_Date);
PARAMETER(DTL.PD_Producer_Code);
PARAMETER(DTL.PL_Location_Code);
PARAMETER(DTL.Company_Number_USR);
PARAMETER(DTL.Head_BO_USR);
{
 //?USER: Process Data record

 EXECUTE FUNCTION(Rtv/Upd Next BO       RT) TYPE(RTVOBJ) FILE(PKAZREP)           AB1100930;
 PARAMETER(PAR.Company_Number_USR);
 PARAMETER(LCL.Buy_Order_Number_USR);
 {
  //?USER: Initialize routine

  //?Modification history
  DO;

  //? 7/02/2021 JBB WHD80995 - Increase rollover from 99999 to 9999999
  ENDDO;

  //?USER: Process Data record

  // PAR.BOH Buy Order Number = DB1.Next Buy Order Number
  PAR.BOH_Buy_Order_Number = DB1.Next_Buy_Order_Number;

  CASE;

  // IF DB1.Next Buy Order Number is EQ 9999999
  IF DB1.Next_Buy_Order_Number = 9999999;

  EXECUTE FUNCTION(Chg Next BO           CH) TYPE(CHGOBJ) FILE(PKAZREP)           AB1100933;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(10000);
  PARAMETER(DB1.Last_Tattoo_Nbr);
  PARAMETER(DB1.Current_Production_Date);
  PARAMETER(DB1.Next_Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  // WRK.Next Buy Order Number = DB1.Next Buy Order Number + CON.1
  WRK.Next_Buy_Order_Number = DB1.Next_Buy_Order_Number + 1;

  EXECUTE FUNCTION(Chg Next BO           CH) TYPE(CHGOBJ) FILE(PKAZREP)           AB1100933;
  PARAMETER(DB1.CC_Company_Number);
  PARAMETER(WRK.Next_Buy_Order_Number);
  PARAMETER(DB1.Last_Tattoo_Nbr);
  PARAMETER(DB1.Current_Production_Date);
  PARAMETER(DB1.Next_Production_Date);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   {
    //?Execute internal function

    // PAR.RS User Changed = JOB.*USER
    PAR.RS_User_Changed = JOB.*USER;

    // PAR.RS Date Changed = JOB.*Job date
    PAR.RS_Date_Changed = JOB.*Job_date;

    // PAR.RS Time Changed = JOB.*Job time
    PAR.RS_Time_Changed = JOB.*Job_time;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

   }

  }

  ENDIF;

 }

 EXECUTE FUNCTION(Rtv Week Nbr f/ a Dte RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1127384;
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(DB1.BOH_Kill_Date);
 {
  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

  QUIT;

 }

 //?Update Producer Purchase Plan
 CASE;

 // IF DB1.CW Year EQ PAR.CW Year
 IF DB1.CW_Year = PAR.CW_Year;

 // AND DB1.CW Week Number EQ PAR.CW Week Number
 AND DB1.CW_Week_Number = PAR.CW_Week_Number;

 //?Update Producer Purchase Plan
 // IF *OTHERWISE
 IF *OTHERWISE;

 EXECUTE FUNCTION(Crt Prd Prch Pln CPY  RT) TYPE(RTVOBJ) FILE(PKAVCPP)           AB1154922;
 PARAMETER(PAR.Company_Number_USR);
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.BOH_Kill_Date);
 PARAMETER(PAR.Head_BO_USR);
 {
  //?USER: Initialize routine

  EXECUTE FUNCTION(Rtv Dates             RT) TYPE(RTVOBJ) FILE(PKCFREP)           AB1106521;
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.CW_Mon_Date);
  PARAMETER(PAR.CW_Tue_Date);
  PARAMETER(PAR.CW_Wed_Date);
  PARAMETER(PAR.CW_Thu_Date);
  PARAMETER(PAR.CW_Fri_Date);
  PARAMETER(PAR.CW_Sat_Date);
  PARAMETER(PAR.CW_Sun_Date);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?USER: Processing if Data record not found

  //?Update Planned Head
  CASE;

  // IF PAR.BOH Kill Date EQ PAR.CW Mon Date
  IF PAR.BOH_Kill_Date = PAR.CW_Mon_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Tue Date
  IF PAR.BOH_Kill_Date = PAR.CW_Tue_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Wed Date
  IF PAR.BOH_Kill_Date = PAR.CW_Wed_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Thu Date
  IF PAR.BOH_Kill_Date = PAR.CW_Thu_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Fri Date
  IF PAR.BOH_Kill_Date = PAR.CW_Fri_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Sat Date
  IF PAR.BOH_Kill_Date = PAR.CW_Sat_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Sun Date
  IF PAR.BOH_Kill_Date = PAR.CW_Sun_Date;

  EXECUTE FUNCTION(Crt Prd Prch Pln CPY  CR) TYPE(CRTOBJ) FILE(PKAVCPP)           AB1154923;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.PD_Producer_Code);
  PARAMETER(PAR.PL_Location_Code);
  PARAMETER(PAR.PPP_Week_Head_Est);
  PARAMETER(PAR.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(PAR.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(PAR.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(PAR.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(PAR.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(PAR.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(PAR.PPP_Sun_Head_Est);
  PARAMETER(PAR.Head_BO_USR);
  PARAMETER(PAR.RS_User_Changed);
  PARAMETER(PAR.RS_Date_Changed);
  PARAMETER(PAR.RS_Time_Changed);
  PARAMETER(PAR.RS_Record_Status);
  PARAMETER(PAR.RS_Job);
  PARAMETER(PAR.RS_Program);
  PARAMETER(PAR.RS_User_Added);
  PARAMETER(PAR.RS_Date_Added);
  PARAMETER(PAR.RS_Time_Added);
  ENDIF;

  EXECUTE FUNCTION(Upd Purchase Plan CPY RT) TYPE(RTVOBJ) FILE(PKAUCPP)           AB1155007;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.Head_BO_USR);
  {
   //?USER: Process Data record

   // PAR.PPWS Plan Head = DB1.PPWS Plan Head + PAR.Head BO USR
   PAR.PPWS_Plan_Head = DB1.PPWS_Plan_Head + PAR.Head_BO_USR;

   EXECUTE FUNCTION(Chg Purchase Plan Wk  CH) TYPE(CHGOBJ) FILE(PKAUCPP)           AB1100448;
   PARAMETER(DB1.PPWS_Company_Number);
   PARAMETER(DB1.CW_Year);
   PARAMETER(DB1.CW_Week_Number);
   PARAMETER(DB1.PPWS_Head_Est);
   PARAMETER(PAR.PPWS_Plan_Head);
   PARAMETER(DB1.PPWS_Sts);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

  }

  //?USER: Process Data record

  //?Update Planned Head
  CASE;

  // IF PAR.BOH Kill Date EQ PAR.CW Mon Date
  IF PAR.BOH_Kill_Date = PAR.CW_Mon_Date;

  // PAR.PPP Mon Plan Head = DB1.PPP Mon Plan Head + PAR.Head BO USR
  PAR.PPP_Mon_Plan_Head = DB1.PPP_Mon_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(PAR.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(DB1.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(DB1.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(DB1.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(DB1.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(DB1.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(DB1.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Tue Date
  IF PAR.BOH_Kill_Date = PAR.CW_Tue_Date;

  // PAR.PPP Tue Plan Head = DB1.PPP Tue Plan Head + PAR.Head BO USR
  PAR.PPP_Tue_Plan_Head = DB1.PPP_Tue_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(DB1.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(PAR.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(DB1.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(DB1.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(DB1.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(DB1.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(DB1.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Wed Date
  IF PAR.BOH_Kill_Date = PAR.CW_Wed_Date;

  // PAR.PPP Wed Plan Head = DB1.PPP Wed Plan Head + PAR.Head BO USR
  PAR.PPP_Wed_Plan_Head = DB1.PPP_Wed_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(DB1.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(DB1.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(PAR.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(DB1.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(DB1.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(DB1.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(DB1.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Thu Date
  IF PAR.BOH_Kill_Date = PAR.CW_Thu_Date;

  // PAR.PPP Thu Plan Head = DB1.PPP Thu Plan Head + PAR.Head BO USR
  PAR.PPP_Thu_Plan_Head = DB1.PPP_Thu_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(DB1.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(DB1.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(DB1.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(PAR.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(DB1.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(DB1.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(DB1.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Fri Date
  IF PAR.BOH_Kill_Date = PAR.CW_Fri_Date;

  // PAR.PPP Fri Plan Head = DB1.PPP Fri Plan Head + PAR.Head BO USR
  PAR.PPP_Fri_Plan_Head = DB1.PPP_Fri_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(DB1.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(DB1.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(DB1.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(DB1.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(PAR.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(DB1.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(DB1.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Sat Date
  IF PAR.BOH_Kill_Date = PAR.CW_Sat_Date;

  // PAR.PPP Sat Plan Head = DB1.PPP Sat Plan Head + PAR.Head BO USR
  PAR.PPP_Sat_Plan_Head = DB1.PPP_Sat_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(DB1.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(DB1.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(DB1.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(DB1.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(DB1.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(PAR.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(DB1.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  //?Update Planned Head
  // IF PAR.BOH Kill Date EQ PAR.CW Sun Date
  IF PAR.BOH_Kill_Date = PAR.CW_Sun_Date;

  // PAR.PPP Sun Plan Head = DB1.PPP Sun Plan Head + PAR.Head BO USR
  PAR.PPP_Sun_Plan_Head = DB1.PPP_Sun_Plan_Head + PAR.Head_BO_USR;

  EXECUTE FUNCTION(Delete Run Log Header) TYPE(CHGOBJ) FILE(PKAVCPP)              AA1100471;
  PARAMETER(DB1.PPWS_Company_Number);
  PARAMETER(DB1.CW_Year);
  PARAMETER(DB1.CW_Week_Number);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.PPP_Week_Head_Est);
  PARAMETER(DB1.PPP_Mon_Head_Est);
  PARAMETER(DB1.PPP_Mon_Plan_Head);
  PARAMETER(DB1.PPP_Tue_Head_Est);
  PARAMETER(DB1.PPP_Tue_Plan_Head);
  PARAMETER(DB1.PPP_Wed_Head_Est);
  PARAMETER(DB1.PPP_Wed_Plan_Head);
  PARAMETER(DB1.PPP_Thu_Head_Est);
  PARAMETER(DB1.PPP_Thu_Plan_Head);
  PARAMETER(DB1.PPP_Fri_Head_Est);
  PARAMETER(DB1.PPP_Fri_Plan_Head);
  PARAMETER(DB1.PPP_Sat_Head_Est);
  PARAMETER(DB1.PPP_Sat_Plan_Head);
  PARAMETER(DB1.PPP_Sun_Head_Est);
  PARAMETER(PAR.PPP_Sun_Plan_Head);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  ENDIF;

  EXECUTE FUNCTION(Upd Purchase Plan CPY RT) TYPE(RTVOBJ) FILE(PKAUCPP)           AB1155007;
  PARAMETER(PAR.PPWS_Company_Number);
  PARAMETER(PAR.CW_Year);
  PARAMETER(PAR.CW_Week_Number);
  PARAMETER(PAR.Head_BO_USR);
  {
   //?USER: Process Data record

   // PAR.PPWS Plan Head = DB1.PPWS Plan Head + PAR.Head BO USR
   PAR.PPWS_Plan_Head = DB1.PPWS_Plan_Head + PAR.Head_BO_USR;

   EXECUTE FUNCTION(Chg Purchase Plan Wk  CH) TYPE(CHGOBJ) FILE(PKAUCPP)           AB1100448;
   PARAMETER(DB1.PPWS_Company_Number);
   PARAMETER(DB1.CW_Year);
   PARAMETER(DB1.CW_Week_Number);
   PARAMETER(DB1.PPWS_Head_Est);
   PARAMETER(PAR.PPWS_Plan_Head);
   PARAMETER(DB1.PPWS_Sts);
   PARAMETER(DB1.RS_User_Changed);
   PARAMETER(DB1.RS_Date_Changed);
   PARAMETER(DB1.RS_Time_Changed);
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?USER: Processing before Data update

    EXECUTE FUNCTION(Rtv Change Stamp      IF) TYPE(EXCINTFUN)                      AB1100934;
    PARAMETER(DB1.RS_User_Changed);
    PARAMETER(DB1.RS_Date_Changed);
    PARAMETER(DB1.RS_Time_Changed);
    PARAMETER(DB1.RS_Job);
    PARAMETER(DB1.RS_Program);
    {
     //?Execute internal function

     // PAR.RS User Changed = JOB.*USER
     PAR.RS_User_Changed = JOB.*USER;

     // PAR.RS Date Changed = JOB.*Job date
     PAR.RS_Date_Changed = JOB.*Job_date;

     // PAR.RS Time Changed = JOB.*Job time
     PAR.RS_Time_Changed = JOB.*Job_time;

     // PAR.RS Job = JOB.*JOB
     PAR.RS_Job = JOB.*JOB;

     // PAR.RS Program = JOB.*PROGRAM
     PAR.RS_Program = JOB.*PROGRAM;

    }

   }

  }

 }

 ENDIF;

 EXECUTE FUNCTION(Crt Buy Order Header  CR) TYPE(CRTOBJ) FILE(PKAWCPP)           AB1100514;
 PARAMETER(PAR.Company_Number_USR);
 PARAMETER(LCL.Buy_Order_Number_USR);
 PARAMETER(DB1.BOH_Buy_Order_Date);
 PARAMETER(DB1.BOH_Kill_Date);
 PARAMETER(DB1.BOH_Payment_Type);
 PARAMETER(DB1.BOH_Buy_Order_Type);
 PARAMETER(DB1.BOH_Market_Add_Deduct);
 PARAMETER(DB1.BOH_Status);
 PARAMETER(DB1.BOH_Delv_Plan_Printed);
 PARAMETER(DB1.BOH_Quote_Price_Type);
 PARAMETER(DB1.BOH_Quoted_Base_Mkt_Price);
 PARAMETER(DB1.BOH_Commodity_Market_Code);
 PARAMETER(DB1.BOH_Commodity_Price_Group);
 PARAMETER(DB1.BOH_Market_Date_Method);
 PARAMETER(DB1.BOH_MPR_Reporting_Date);
 PARAMETER(DB1.BOH_Hedge_Date);
 PARAMETER(DB1.BOH_Unused_Date_3);
 PARAMETER(DB1.BOH_Unused_Date_4);
 PARAMETER(DB1.BOH_Unused_Date_5);
 PARAMETER(DB1.BOH_Hedge_Head_Total);
 PARAMETER(DB1.BOH_Hedge_Reference_BO);
 PARAMETER(DB1.BOH_Hedge_Time_hhmm);
 PARAMETER(DB1.BOH_Unused_Nbr_4);
 PARAMETER(DB1.BOH_Unused_Nbr_5);
 PARAMETER(DB1.BOH_Unused_Nbr_6);
 PARAMETER(DB1.BOH_Unused_Nbr_7);
 PARAMETER(DB1.BOH_Unused_Nbr_8);
 PARAMETER(DB1.BOH_Unused_Nbr_9);
 PARAMETER(DB1.BOH_Unused_Nbr_10);
 PARAMETER(DB1.BOH_MPR_Reporting_Time);
 PARAMETER(DB1.BOH_MPR_EST_RPT_STS);
 PARAMETER(DB1.BOH_MPR_Purchase_Type);
 PARAMETER(DB1.BOH_Status_4);
 PARAMETER(DB1.BOH_Status_5);
 PARAMETER(DB1.PPWS_Company_Number);
 PARAMETER(PAR.CW_Year);
 PARAMETER(PAR.CW_Week_Number);
 PARAMETER(DB1.PD_Producer_Code);
 PARAMETER(DB1.PL_Location_Code);
 PARAMETER(DB1.PC_Contract_Code);
 PARAMETER(DB1.PSC_Sub_Contract_Code);
 PARAMETER(DB1.GN_Genetic_Code);
 PARAMETER(DB1.PO_Option_Code);
 PARAMETER(DB1.CMP_Program_Code);
 PARAMETER(DB1.HB_Buyer_Code);
 PARAMETER(DB1.RS_User_Changed);
 PARAMETER(DB1.RS_Date_Changed);
 PARAMETER(DB1.RS_Time_Changed);
 PARAMETER(DB1.RS_Record_Status);
 PARAMETER(DB1.RS_Job);
 PARAMETER(DB1.RS_Program);
 PARAMETER(DB1.RS_User_Added);
 PARAMETER(DB1.RS_Date_Added);
 PARAMETER(DB1.RS_Time_Added);
 {
  //?USER: Processing before Data update

  //?RMC 6/19/19 whd 49122 Chg time to 1:45 per Jerry L at tf
  //?RMC 9/23/16 R7307   Chg time as of 10/11/2016  per new MPR Rule:
  //?            compile all functions that call this CRTOBJ
  //?     9:55:59 changed to 9:30:59             9:56 changed to 9:31
  //?     1:55:59 changed to 1:30:59
  //?************************************************************************
  //?RMC  Chg time as of 01/10/07:
  //?     9:30:59 changed to 9:55:59             9:31 changed to 9:56
  //?     1:30:59 changed to 1:55:59
  //?*********************************************************************
  EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?Execute internal function

   // PAR.RS Record Status = CND.Active
   PAR.RS_Record_Status = 'A';

   // PAR.RS User Added = JOB.*USER
   PAR.RS_User_Added = JOB.*USER;

   // PAR.RS Date Added = JOB.*Job date
   PAR.RS_Date_Added = JOB.*Job_date;

   // PAR.RS Time Added = JOB.*Job time
   PAR.RS_Time_Added = JOB.*Job_time;

   // PAR.RS Program = JOB.*PROGRAM
   PAR.RS_Program = JOB.*PROGRAM;

   // PAR.RS Job = JOB.*JOB
   PAR.RS_Job = JOB.*JOB;

  }

  //?** create record boh status as open
  // DB1.BOH Status = CND.Open
  DB1.BOH_Status = 'O';

  //?PK0254 -- MPR Reporting Time and Date       RMC 1/19/2001
  //?  If Current Time < 9:30:59 am
  //?    Reporting Date = Current Date
  //?    Reporting Time = 1
  //?  If 9:31 am < Current Time < 1:30:59 pm
  //?    Reporting Date = Current Date
  //?    Reporting Time = 2
  //?*** replace with R7307 -- effective 10/11/2016
  //?  * Otherwise         (These will not be reported at all.)
  //?  * Reporting Date = 0
  //?  * Reporting Time = 0
  //?*** NEW     with R7307 -- effective 10/11/2016
  //?    Reporting Date = Next kill date - skip sat/sun
  //?    Reporting Time = 1
  // Call program Rtv System Date & Tim UP.
  CALL PROGRAM(Rtv System Date & Tim UP) ('PKWDUPC');
  PARAMETER(LCL.*DATE);
  PARAMETER(LCL.*TIME);

  CASE;

  // IF LCL.*TIME is LE 09:30:59
  IF LCL.*TIME <= 093059;

  // DB1.BOH MPR Reporting Date = LCL.*DATE
  DB1.BOH_MPR_Reporting_Date = LCL.*DATE;

  // DB1.BOH MPR Reporting Time = CND.Reporting Time is 1
  DB1.BOH_MPR_Reporting_Time = 1;

  // IF *OTHERWISE
  IF *OTHERWISE;

  CASE;

  // IF LCL.*TIME is LE 13:45:59
  IF LCL.*TIME <= 134559;

  //?6/19/19 RMC time was LE 13:30:59
  // DB1.BOH MPR Reporting Date = LCL.*DATE
  DB1.BOH_MPR_Reporting_Date = LCL.*DATE;

  // DB1.BOH MPR Reporting Time = CND.Reporting Time is 2
  DB1.BOH_MPR_Reporting_Time = 2;

  // IF *OTHERWISE
  IF *OTHERWISE;

  //?R7307 -- GT 1:30 get reported at next day's 1st submission at 9:30
  // Call program RTV Next WkDy,N=Holidy XF.
  CALL PROGRAM(RTV Next WkDy,N=Holidy XF) ('PBYUXFR');
  PARAMETER(DB1.BOH_Company_Number);
  PARAMETER(LCL.*DATE);
  PARAMETER(LCL.MPR_Reporting_Date);

  // DB1.BOH MPR Reporting Date = LCL.MPR Reporting Date
  DB1.BOH_MPR_Reporting_Date = LCL.MPR_Reporting_Date;

  // DB1.BOH MPR Reporting Time = CND.Reporting Time is 1
  DB1.BOH_MPR_Reporting_Time = 1;

  ENDIF;

  ENDIF;

 }

 EXECUTE FUNCTION(Cpy Bo Ld - Cmpny RT) TYPE(RTVOBJ) FILE(PKAXCPP)               AB1259694;
 PARAMETER(PAR.BOH_Company_Number);
 PARAMETER(PAR.BOH_Buy_Order_Number);
 PARAMETER(LCL.Buy_Order_Number_USR);
 PARAMETER(DB1.BOH_Kill_Date);
 PARAMETER(PAR.Company_Number_USR);
 {
  //?USER: Process Data record

  EXECUTE FUNCTION(Crt Buy Order Detail  CR) TYPE(CRTOBJ) FILE(PKAXCPP)           AB1100530;
  PARAMETER(PAR.Company_Number_USR);
  PARAMETER(PAR.Buy_Order_Number_USR);
  PARAMETER(DB1.BOL_Load_Number);
  PARAMETER(PAR.Kill_Date_Usr);
  PARAMETER(DB1.BOL_Pln_Delv_Start_Time);
  PARAMETER(DB1.BOL_Pln_Delv_End_Time);
  PARAMETER(DB1.BOL_Pln_Head_Delv);
  PARAMETER(*ZERO);
  PARAMETER(PAR.Kill_Date_Usr);
  PARAMETER(WRK.Blank_USR);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*ZERO);
  PARAMETER(*BLANK);
  PARAMETER(DB1.BOL_Freight_Exp_Paid_By);
  PARAMETER(DB1.BOL_Scheduled_Kill_Shift);
  PARAMETER(DB1.BOL_Truck_Scale_Weigh_Sts);
  PARAMETER(DB1.BOL_Shipped_Head);
  PARAMETER(DB1.Reported_to_USDA);
  PARAMETER(DB1.BOL_MPR_Prior_Day_Prch);
  PARAMETER(DB1.BOL_Violated_Auth_Tme_Sts);
  PARAMETER(DB1.BOL_Status_5);
  PARAMETER(DB1.BOL_Status_6);
  PARAMETER(DB1.BOL_Status_7);
  PARAMETER(DB1.BOL_HPS_Movement_Number);
  PARAMETER(DB1.BOL_Head_LFT);
  PARAMETER(DB1.BOL_Head_EUT_KOA);
  PARAMETER(DB1.BOL_Auth_Gate_Entry_Time);
  PARAMETER(DB1.BOL_Head_Received_Market);
  PARAMETER(DB1.BOL_Unused_Wgt_1);
  PARAMETER(DB1.BOL_Unused_Wgt_2);
  PARAMETER(DB1.BOL_Unused_Wgt_3);
  PARAMETER(DB1.BOL_Unused_Wgt_4);
  PARAMETER(DB1.BOL_Unused_Wgt_5);
  PARAMETER(DB1.BOL_Auth_Gate_Entry_Date);
  PARAMETER(DB1.BOL_Unused_Date_2);
  PARAMETER(DB1.BOL_Unused_Date_3);
  PARAMETER(DB1.BOL_Unused_Date_4);
  PARAMETER(DB1.BOL_Unused_Date_5);
  PARAMETER(*BLANK);
  PARAMETER(DB1.PD_Producer_Code);
  PARAMETER(DB1.PL_Location_Code);
  PARAMETER(DB1.RS_User_Changed);
  PARAMETER(DB1.RS_Date_Changed);
  PARAMETER(DB1.RS_Time_Changed);
  PARAMETER(DB1.RS_Record_Status);
  PARAMETER(DB1.RS_Job);
  PARAMETER(DB1.RS_Program);
  PARAMETER(DB1.RS_User_Added);
  PARAMETER(DB1.RS_Date_Added);
  PARAMETER(DB1.RS_Time_Added);
  {
   //?USER: Processing before Data update

   EXECUTE FUNCTION(Rtv Add Stamp         IF) TYPE(EXCINTFUN)                      AB1100935;
   PARAMETER(DB1.RS_Record_Status);
   PARAMETER(DB1.RS_Job);
   PARAMETER(DB1.RS_Program);
   PARAMETER(DB1.RS_User_Added);
   PARAMETER(DB1.RS_Date_Added);
   PARAMETER(DB1.RS_Time_Added);
   {
    //?Execute internal function

    // PAR.RS Record Status = CND.Active
    PAR.RS_Record_Status = 'A';

    // PAR.RS User Added = JOB.*USER
    PAR.RS_User_Added = JOB.*USER;

    // PAR.RS Date Added = JOB.*Job date
    PAR.RS_Date_Added = JOB.*Job_date;

    // PAR.RS Time Added = JOB.*Job time
    PAR.RS_Time_Added = JOB.*Job_time;

    // PAR.RS Program = JOB.*PROGRAM
    PAR.RS_Program = JOB.*PROGRAM;

    // PAR.RS Job = JOB.*JOB
    PAR.RS_Job = JOB.*JOB;

   }

  }

 }

}


