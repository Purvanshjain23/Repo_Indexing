// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PUZVXFR
// ?Date: 14.08.2025 Time: 03:51:46
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?NOTE: Clone from PBOHXFR. Any changes here should consider changing
//?      PBOHXFR also.
EXECUTE FUNCTION(Rtv Auto Inv RestCmpWIMRT) TYPE(RTVOBJ) FILE(PDJYREP)          AC2215225;
PARAMETER(PAR.Module_Release_Status);
{
 //?USER: Process Data record

 //?If record is active, process it
 CASE;

 // IF DB1.Record Status is Active
 IF DB1.Record_Status = 'A';

 //?Determine if Auto Inventory Restoration set up for company
 EXECUTE FUNCTION(RTV WHS Auto Inv Rest  RT) TYPE(RTVOBJ) FILE(CAADREP)          AC2094284;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.WHS_Auto_Inv_Rest_Co_USR);
 PARAMETER(LCL.WHS_Auto_Inv_Rest_Cnt_USR);
 {
  //?USER: Initialize routine

  // PAR.WHS Auto Inv Rest Co  USR = CND.No
  PAR.WHS_Auto_Inv_Rest_Co_USR = 'N';

  // PAR.WHS Auto Inv Rest Cnt USR = CND.Eq Zero
  PAR.WHS_Auto_Inv_Rest_Cnt_USR = *ZERO;

  // LCL.WHS Auto Inv Rest Cnt USR = CND.Eq Zero
  LCL.WHS_Auto_Inv_Rest_Cnt_USR = *ZERO;

  // LCL.Physical Start Date = JOB.*Job date
  LCL.Physical_Start_Date = JOB.*Job_date;

  //?USER: Process Data record

  CASE;

  // IF DB1.WHS Auto Inv Restoration is Yes
  IF DB1.WHS_Auto_Inv_Restoration = 'Y';

  // PAR.WHS Auto Inv Rest Co  USR = CND.Yes
  PAR.WHS_Auto_Inv_Rest_Co_USR = 'Y';

  EXECUTE FUNCTION(Rtv Auto Inv Rest Cmp  RT) TYPE(RTVOBJ) FILE(OMHCCPP)          AC2094281;
  PARAMETER(PAR.Shipping_Company);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.Physical_Start_Date);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   // PGM.*Return code = CND.*Record already exists
   PGM.*Return_code = 'Y2U0003';

  }

  CASE;

  // IF PGM.*Return code is *Record already exists
  IF PGM.*Return_code = 'Y2U0003';

  // LCL.WHS Auto Inv Rest Cnt USR = LCL.WHS Auto Inv Rest Cnt USR + CON.1
  LCL.WHS_Auto_Inv_Rest_Cnt_USR = LCL.WHS_Auto_Inv_Rest_Cnt_USR + 1;

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  // PAR.WHS Auto Inv Rest Cnt USR = LCL.WHS Auto Inv Rest Cnt USR
  PAR.WHS_Auto_Inv_Rest_Cnt_USR = LCL.WHS_Auto_Inv_Rest_Cnt_USR;

 }

 //?Set WHS Auto Inv Rest USR or Send Email if not processed
 CASE;

 // IF LCL.WHS Auto Inv Rest Co  USR is Yes
 IF LCL.WHS_Auto_Inv_Rest_Co_USR = 'Y';

 //?If Count = zero
 CASE;

 // IF LCL.WHS Auto Inv Rest Cnt USR is Eq Zero
 IF LCL.WHS_Auto_Inv_Rest_Cnt_USR = *ZERO;

 //?No Warehouses were processed for Company
 // LCL.WHS Auto Inv Rest Co  USR = CND.No
 LCL.WHS_Auto_Inv_Rest_Co_USR = 'N';

 //?Send Email Message
 // Call program Rtv Alpha Value       XF.
 CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
 PARAMETER(DB1.Company_Number);
 PARAMETER('INVRST');
 PARAMETER(LCL.Email_Address);

 //?If Email address is found, send email
 CASE;

 // IF LCL.Email Address is Entered
 IF LCL.Email_Address <> *BLANK;

 // LCL.Company Number Alpha = CVTVAR(DB1.Company Number)
 LCL.Company_Number_Alpha = CVTVAR(DB1.Company_Number);

 //?S13816 DN 09/28/18-Changed Message Content & use RTV MsgID USR5090.
 // Retrieve message - '*** AUTO INV. RESTORATION not received by 3:30am for Co &1.'
 LCL.Subject_Line_USR = RTVMSG(USR5090);
 PARAMETER(LCL.Company_Number_Alpha);

 //?S13816 DN 09/28/18-Commented Out. Doesn't Work & is Not Required.
 // Execute command - 'ESNDMAIL - Email Address, Subject Line, and Message'
 EXECUTE COMMAND(USR4974);
 PARAMETER(LCL.Email_Address);
 PARAMETER(*BLANK);
 PARAMETER(LCL.Subject_Line_USR);

 ENDIF;

 //?If Count = zero
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?At least one Warehouse was processed for the Company
 // LCL.WHS Auto Inv Rest Co  USR = CND.Yes
 LCL.WHS_Auto_Inv_Rest_Co_USR = 'Y';

 ENDIF;

 //?Set WHS Auto Inv Rest USR or Send Email if not processed
 // IF *OTHERWISE
 IF *OTHERWISE;

 //?This Company is not using Auto Inventory Restoration
 // LCL.WHS Auto Inv Rest Co  USR = CND.No
 LCL.WHS_Auto_Inv_Rest_Co_USR = 'N';

 ENDIF;

 EXECUTE FUNCTION(Rtv Auto Inv RestCmpWIMRT) TYPE(RTVOBJ) FILE(CAADREP)          AC2215230;
 PARAMETER(DB1.Company_Number);
 PARAMETER(LCL.WHS_Auto_Inv_Rest_Co_USR);
 PARAMETER(PAR.Module_Release_Status);
 {
  //?USER: Initialize routine

  // LCL.Company Number Alpha = CVTVAR(PAR.Shipping Company)
  LCL.Company_Number_Alpha = CVTVAR(PAR.Shipping_Company);

  // LCL.Physical Start Date = JOB.*Job date
  LCL.Physical_Start_Date = JOB.*Job_date;

  // LCL.Transaction Date D8# USR = JOB.*Job date
  LCL.Transaction_Date_D8#_USR = JOB.*Job_date;

  // LCL.PFS Transaction Date = LCL.Transaction Date D8# USR
  LCL.PFS_Transaction_Date = LCL.Transaction_Date_D8#_USR;

  //?Initialize for Email Messaging.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Alpha Value        RT) TYPE(RTVOBJ) FILE(PDKMREP)          AC1381513;
  PARAMETER(PAR.Shipping_Company);
  PARAMETER('INVRST');
  PARAMETER(LCL.Email_Address);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // LCL.Send Email USR = CND.No
  LCL.Send_Email_USR = 'N';

  // LCL.Email Message 2 USR = CON.*BLANK
  LCL.Email_Message_2_USR = *BLANK;

  // LCL.Subject Line USR = CONCAT(CON.WIM CARLISLE INVENTORY RE,CON.STORATION FOR,CON.*ZERO)
  LCL.Subject_Line_USR = 'WIM CARLISLE INVENTORY RE' + 'STORATION FOR' (0);

  // LCL.Subject Line USR = CONCAT(LCL.Subject Line USR,LCL.Company Number Alpha,CON.1)
  LCL.Subject_Line_USR = LCL.Subject_Line_USR + LCL.Company_Number_Alpha (1);

  // LCL.Subject Line USR = CONCAT(LCL.Subject Line USR,CON.Date,CON.1)
  LCL.Subject_Line_USR = LCL.Subject_Line_USR + 'Date' (1);

  //?Format Date.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(Cvt DTE to MM/DD/YYYY  IF) TYPE(EXCINTFUN)                     AC2215661;
  PARAMETER(JOB.*Job_date);
  PARAMETER(LCL.Date_mm_dd_yyyy_USR);
  {
   //?Execute internal function

   //?Break apart date.
   // PAR.YYYY numeric USR = PAR.@Date - ATR *YEAR
   PAR.YYYY_numeric_USR = DATEDTLS(PAR.@Date_ATR 'YR' 1111111 'NONE' 'N' 1);

   // PAR.MM   numeric USR = PAR.@Date - ATR *MONTH
   PAR.MM_numeric_USR = DATEDTLS(PAR.@Date_ATR 'MO' 1111111 'NONE' 'N' 1);

   // PAR.DD   numeric USR = PAR.@Date - ATR *DAY OF MONTH
   PAR.DD_numeric_USR = DATEDTLS(PAR.@Date_ATR 'DM' 1111111 'NONE' 'N' 1);

   //?Convert to alpha.
   // PAR.YYYY alpha   USR = CVTVAR(PAR.YYYY numeric USR)
   PAR.YYYY_alpha_USR = CVTVAR(PAR.YYYY_numeric_USR);

   // PAR.MM   alpha   USR = CVTVAR(PAR.MM   numeric USR)
   PAR.MM_alpha_USR = CVTVAR(PAR.MM_numeric_USR);

   // PAR.DD   alpha   USR = CVTVAR(PAR.DD   numeric USR)
   PAR.DD_alpha_USR = CVTVAR(PAR.DD_numeric_USR);

   //?Put back together.
   // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.MM   alpha   USR,CON./,CON.*ZERO)
   PAR.Date_mm_dd_yyyy_USR = PAR.MM_alpha_USR + '/' (*ZERO);

   // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,PAR.DD   alpha   USR,CO
   PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + PAR.DD_alpha_USR (*ZERO);

   // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,CON./,CON.*ZERO)
   PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + '/' (*ZERO);

   // PAR.Date mm/dd/yyyy USR = CONCAT(PAR.Date mm/dd/yyyy USR,PAR.YYYY alpha   USR,CO
   PAR.Date_mm_dd_yyyy_USR = PAR.Date_mm_dd_yyyy_USR + PAR.YYYY_alpha_USR (*ZERO);

  }

  // LCL.Subject Line USR = CONCAT(LCL.Subject Line USR,LCL.Date mm/dd/yyyy USR,CON.1)
  LCL.Subject_Line_USR = LCL.Subject_Line_USR + LCL.Date_mm_dd_yyyy_USR (1);

  ENDIF;

  EXECUTE FUNCTION(RTV Data Libraries     RT) TYPE(RTVOBJ) FILE(CADPREP)          AC1165753;
  PARAMETER('DTALIB');
  PARAMETER(LCL.Library_List_Code);
  PARAMETER(NLL.@Library_List_Code);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.System Value Code is Data File Library
   IF DB1.System_Value_Code = 'DTALIB';

   // PAR.Library List Code = DB1.System Value Alpha
   PAR.Library_List_Code = DB1.System_Value_Alpha;

   // IF DB1.System Value Code is History File Library
   IF DB1.System_Value_Code = 'HISLIB';

   // PAR.@Library List Code = DB1.System Value Alpha
   PAR.@Library_List_Code = DB1.System_Value_Alpha;

   QUIT;

   ENDIF;

  }

  //?If Not PROD Then Append 'TEST' to Subject Line.
  CASE;

  // IF LCL.Library List Code is Not PRKFLIB
  IF LCL.Library_List_Code <> 'PRKFLIB';

  // LCL.Subject Line USR = CONCAT(LCL.Subject Line USR,CON.- TEST,CON.1)
  LCL.Subject_Line_USR = LCL.Subject_Line_USR + '- TEST' (1);

  ENDIF;

  // LCL.Email Msg Line-Posted U = CON.           Posted:
  LCL.Email_Msg_Line_Posted_U = 'Posted:';

  // LCL.Email Msg Line-Not Rcvd U = CON.Not Received:
  LCL.Email_Msg_Line_Not_Rcvd_U = 'Not Received:';

  ENDIF;

  //?USER: Process Data record

  //?If Warehouse Auto Inventory Restoration Company, check warehouse
  CASE;

  // IF PAR.WHS Auto Inv Rest Co  USR is Yes
  IF PAR.WHS_Auto_Inv_Rest_Co_USR = 'Y';

  //?If Whs Auto Inventory Restoration Company, Check WIM REL Status.
  CASE;

  // IF DB1.WHS Auto Inv Restoration is Yes
  IF DB1.WHS_Auto_Inv_Restoration = 'Y';

  //?If WIM REL 1 is 'Live', continue with existing process.
  CASE;

  // IF PAR.Module Release Status is Is Live
  IF PAR.Module_Release_Status = 'Y';

  EXECUTE FUNCTION(Rtv Auto Inv Rest Cmp  RT) TYPE(RTVOBJ) FILE(OMHCCPP)          AC2094281;
  PARAMETER(DB1.Shipping_Company);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.Physical_Start_Date);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   // PGM.*Return code = CND.*Record already exists
   PGM.*Return_code = 'Y2U0003';

  }

  //?Check Return Code.
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  //?WI517 DN 05/04/23-Replaced Item Lot Location with Item Balance File.
  EXECUTE FUNCTION(RTV On Hand Qty f/WIM RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC2215659;
  PARAMETER(PAR.Shipping_Company);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.On_Hand_UOM1_Summary);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.On Hand UOM1 Summary is Greater than zero
   IF DB1.On_Hand_UOM1_Summary > *ZERO;

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

   ENDIF;

  }

  //?Qty On Hand > 0, Send Email.
  CASE;

  // IF LCL.On Hand UOM1 Summary is Greater than zero
  IF LCL.On_Hand_UOM1_Summary > *ZERO;

  //?Add to 'Not Received' Email Msg Line.
  // LCL.Send Email USR = CND.Yes
  LCL.Send_Email_USR = 'Y';

  // LCL.Email Msg Line-Not Rcvd U = CONCAT(LCL.Email Msg Line-Not Rcvd U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Not_Rcvd_U = LCL.Email_Msg_Line_Not_Rcvd_U + DB1.Warehouse_Code (1);

  ENDIF;

  //?Check Return Code.
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Add to 'Posted' Email Message Line.
  // LCL.Send Email USR = CND.Yes
  LCL.Send_Email_USR = 'Y';

  // LCL.Email Msg Line-Posted U = CONCAT(LCL.Email Msg Line-Posted U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Posted_U = LCL.Email_Msg_Line_Posted_U + DB1.Warehouse_Code (1);

  ENDIF;

  ENDIF;

  //?If WIM REL 1 is 'Parallel', check WIM PFS Inv Restoration File.
  CASE;

  // IF PAR.Module Release Status is Parallel
  IF PAR.Module_Release_Status = 'P';

  EXECUTE FUNCTION(Rtv for Existence     RT) TYPE(RTVOBJ) FILE(PUCYCPP)           AC2215639;
  PARAMETER(DB1.Shipping_Company);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.PFS_Transaction_Date);
  //?Check Return Code.
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  //?Add to 'Posted' Email Message Line.
  // LCL.Send Email USR = CND.Yes
  LCL.Send_Email_USR = 'Y';

  // LCL.Email Msg Line-Posted U = CONCAT(LCL.Email Msg Line-Posted U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Posted_U = LCL.Email_Msg_Line_Posted_U + DB1.Warehouse_Code (1);

  //?Check Return Code.
  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV On Hand Qty f/WIM RT) TYPE(RTVOBJ) FILE(CAB0REP)           AC2215659;
  PARAMETER(PAR.Shipping_Company);
  PARAMETER(DB1.Warehouse_Code);
  PARAMETER(LCL.On_Hand_UOM1_Summary);
  {
   //?USER: Initialize routine

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.On Hand UOM1 Summary is Greater than zero
   IF DB1.On_Hand_UOM1_Summary > *ZERO;

   MOVE *ALL (To: PAR From: DB1);

   QUIT;

   ENDIF;

  }

  //?Qty On Hand > 0, Send Email.
  CASE;

  // IF LCL.On Hand UOM1 Summary is Greater than zero
  IF LCL.On_Hand_UOM1_Summary > *ZERO;

  //?Add to 'Not Received' Email Msg Line.
  // LCL.Send Email USR = CND.Yes
  LCL.Send_Email_USR = 'Y';

  // LCL.Email Msg Line-Not Rcvd U = CONCAT(LCL.Email Msg Line-Not Rcvd U,DB1.Warehouse Code,CON.1)
  LCL.Email_Msg_Line_Not_Rcvd_U = LCL.Email_Msg_Line_Not_Rcvd_U + DB1.Warehouse_Code (1);

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  ENDIF;

  //?USER: Exit processing

  //?Send Email?
  CASE;

  // IF LCL.Send Email USR is Yes
  IF LCL.Send_Email_USR = 'Y';

  // AND LCL.Email Address is Entered
  AND LCL.Email_Address <> *BLANK;

  //?Format Email Message Body.
  CASE;

  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Force New Line USR = CND.No
  LCL.Force_New_Line_USR = 'N';

  //?Posted Transactions Exist?
  CASE;

  // IF LCL.Email Msg Line-Posted U is            Posted:
  IF LCL.Email_Msg_Line_Posted_U = '           Posted:';

  //?No Warehouse recorded.
  //?Posted Transactions Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = LCL.Email Msg Line-Posted U
  LCL.Email_Message_2_USR = LCL.Email_Msg_Line_Posted_U;

  // LCL.Force New Line USR = CND.Yes
  LCL.Force_New_Line_USR = 'Y';

  ENDIF;

  //?Not Received Transactions Exist?
  CASE;

  // IF LCL.Email Msg Line-Not Rcvd U is Not Received:
  IF LCL.Email_Msg_Line_Not_Rcvd_U = 'Not Received:';

  //?No Warehouse recorded.
  //?Not Received Transactions Exist?
  // IF *OTHERWISE
  IF *OTHERWISE;

  //?Force New Line?
  CASE;

  // IF LCL.Force New Line USR is Yes
  IF LCL.Force_New_Line_USR = 'Y';

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,CON.&N,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + '&N' (1);

  // LCL.Email Message 2 USR = CONCAT(LCL.Email Message 2 USR,LCL.Email Msg Line-Not Rcvd U,CON.1)
  LCL.Email_Message_2_USR = LCL.Email_Message_2_USR + LCL.Email_Msg_Line_Not_Rcvd_U (1);

  //?Force New Line?
  // IF *OTHERWISE
  IF *OTHERWISE;

  // LCL.Email Message 2 USR = LCL.Email Msg Line-Not Rcvd U
  LCL.Email_Message_2_USR = LCL.Email_Msg_Line_Not_Rcvd_U;

  ENDIF;

  ENDIF;

  ENDIF;

  // Call program Exc ESNDMAIL Generic2 CL.
  CALL PROGRAM(Exc ESNDMAIL Generic2 CL) ('PUX2UPC');
  PARAMETER(LCL.Email_Address);
  PARAMETER(LCL.Subject_Line_USR);
  PARAMETER(LCL.Email_Message_2_USR);

  ENDIF;

 }

 ENDIF;

}


