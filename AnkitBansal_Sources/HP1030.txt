      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP1030
      * TITLE:       Revise Reported Daily Activity
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     10/22/02
      *
      *
      * FUNCTION: Uses an edit record format to add/change/delete records in the
      *           Reported Daily Activity.
      *
      *           This program is called from HP4030 - Work with Reported Daily Activity.
      *
      *           The field 'mode' contains the value passed into
      *           this program from the calling program.  The field
      *           'd1mode' is the screen field that displays the
      *           value of 'mode'.  Mode will be CREATE, REVISE or
      *           DELETE.           Once in the program, mode and
      *           d1mode will never change.  However, the action
      *           being performed can change depending on the function
      *           keys the user takes.
      *
      *           The user may delete an existing record by taking
      *           F11=DELETE from this program or option 4=DELETE
      *           from the WORK WITH. If the user is deleting with
      *           4=DELETE, no panel will be displayed from this program
      *           unless there is an error on the attempted deletion.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 08/24/05  LeAnne Fedor
      *           New field "Man Hours" was added to Reported Daily Activity
      *           file. Added new field to screen.
      *
      * 06/22/06  LeAnne Ramsey
      *           Added additional edits to "daily date":
      *            1) cannot be greater than system date
      *            2) cannot be in a closed period
      *
      * 10/19/07  LeAnne Ramsey
      *           Recompile only. The users are switching "manhours" from being
      *           "total" manhours for the day to being the "average" manhours
      *           for the day. So, added the word "average" to the text on the
      *           screen.
      *
      * 12/26/07  LeAnne Ramsey
      *           Lisa McBride and Sami Wilson were both entering data in HP1030.
      *           Lisa had data area DAAPER locked; Sami couldn't process her data
      *           because she could not get the Data Area.
      *
      * 09/19/08  LeAnne Ramsey
      *           Recompile only.
      *           The users are switching "average manhours" back to "total manhours".
      *           So, removed the word "average" from the screen text.
      *
      * 05/14/09  LeAnne Ramsey
      *           Per Sami Wilson, we will remove Projected Destroyed Head.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhpd1030   cf   e             workstn
     F                                     infds(iofeed)
      *
     Fhsp018    if   e           k disk
      *    Farm site
      *
      *
     Fhsp103    uf a e           k disk
      *    Reported daily activity
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D create          c                   'CREATE'
     D revise          c                   'REVISE'
     D delete          c                   'DELETE'
     D view            c                   'VIEW  '
     D select          c                   'SELECT'
     D yes             c                   'Y'
     D no              c                   'N'
     D set1            c                   'SET1  '
     D edit1           c                   'EDIT1 '
     D scrn1           c                   'SCRN1 '
     D exit            c                   'EXIT  '
     D update          c                   'UPDATE'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Standard fields
      *
     D mode            s              6
     D pgm             s             10
     D msgfl           s             10
     D routne          s              6
     D rtncd           s              2
     D action          s                   like(mode)
     D maxmsg          s              2  0  inz(20)
      *
      *
      * Workfields for date manipulation
      *
     D wkcymdiso       s               d   datfmt(*iso)
     D wkdydt          s                   like(rddydt)
     D wksysdt         s                   like(rddydt)
      *
      *
      * Parm fields
      *
     D xxalphfscd      s              5a
     D xxfsbo          s              5a
     D xxfscd          s                   like(fsfscd)
     D xxfsnm          s                   like(fsfsnm)
     D xxptcd          s                   like(fsptcd)
     D xxppcd          s                   like(fsppcd)
      *
     D xxccyymmdd      s              8  0
     D xxsatdt         s              8  0
     D xxcdyr          s              4  0
     D xxcdwk          s              2  0
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Standard workstation information data structure
      *---------------------------------------------------------------
      *    externally defined as UTWSFR (record format: UTIDFRR)
     D iofeed        e ds                  extname(utwsfr)
      *
      *
      *---------------------------------------------------------------
      * Standard database file information data structure
      *---------------------------------------------------------------
      *    externally defined as UTDBGR (record format: FDBCKD)
     D dbfeed        e ds                  extname(utdbfr)
      *
      *------------------------------------------------------------------
      * Definition for external data area 'DAAPER' for accounting period
      *------------------------------------------------------------------
      *
     D dsdaaper        ds                  dtaara(daaper)
     D  daccyy                        4s 0
     D  daper                         2s 0
     D  dabpdt                        8s 0
     D  daepdt                        8s 0
     D  dapgfl                        1a
     D  dappfl                        1a
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
     C                   eval      routne = set1
      *
     C     *inlr         doweq     *off                                         Main do loop
     C     routne        caseq     set1          $set1
     C     routne        caseq     scrn1         $scrn1
     C     routne        caseq     edit1         $edit1
     C     routne        caseq     update        $upd1
     C     routne        caseq     exit          $exit
     C                   endcs
     C                   enddo                                                  Main do loop
      /EJECT
      *----------------------------------------------------------------
      * Set environment for screen 1
      *----------------------------------------------------------------
      *
     C     $set1         begsr
      *
      * Clear fields on display panel if creating
      *
     C                   select
     C                   when      mode = create                                WH create
     C                   z-add     0             d1mdy
     C                   z-add     0             d1fscd
     C                   z-add     0             d1ddhd
     C                   z-add     0             d1dshd
     C                   z-add     0             d1manhr
     C                   move      *blank        d1fsnm
      *
      * If incoming mode is REVISE or DELETE, then retrieve the database
      * record.  Do not lock the record.  Typically, in DELETE mode, these
      * values will not be displayed. However, if there is an error on the
      * delete action, the panel will be displayed with messages.
      *
     C                   when      mode = revise or mode = delete               WH revise/delete
     C     key01         chain(n)  hsp103                             92
     C                   if        *in92 = *off                                 If found
     C                   z-add     rdddhd        d1ddhd
     C                   z-add     rddshd        d1dshd
     C                   z-add     rdmanhr       d1manhr
      *
      * Retrieve Farm Site name
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *off
     C                   eval      d1fsnm = fsfsnm
     C                   else
     C                   eval      d1fsnm = 'Unknown'
     C                   endif
      *
     C                   else
      *
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If found
     C                   endsl
      *
      * If the user is deleting and there were no errors when retrieving the
      * record, go on to the update routine without displaying the screen.
      * Otherwise, display the screen.
      *
     C                   if        error = 0 and action = delete                If no error
     C                   eval      routne = update
     C                   else
     C                   eval      routne = scrn1
     C                   endif                                                  If no error
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Perform operator I/O for screen 1
      *----------------------------------------------------------------
      *
     C     $scrn1        begsr
      *
      * Write the error messages from the error arrays to the
      * error message subfile
      *
     C                   exsr      $wrmsg
      *
      *
      * Set indicators to control input/output fields and available
      * function keys.
      *
     c                   select
     C                   when      mode = revise
     C                   seton                                        60
      *
     C                   when      mode = create
     C                   seton                                        61
      *
     C                   when      mode = delete
     C                   seton                                        62
     c                   endsl
      *
      * Write screen 1 to CRT
      *
     C                   write     hp1030k1
     C                   write     hp1030ec
     C                   exfmt     hp1030r1
      *
      * Clear messages
      *
     C                   exsr      $clmsg
      *
      * Reset action to be equal to the incoming mode.  This is required
      * in case the user took F11-Delete and got an error on the
      * deletion and now needs to be able to change the record and take
      * an action other than delete
      *
     C                   eval      action = mode
      *
      * Get user's input and set routine
      *
     C                   select
      *
     C                   when      *in03 = *on                                  F3-exit
     C                   eval      rtncd = '03'
     C                   eval      routne = exit
      *
     C                   when      *in04 = *on                                  F4=prompt
     C                   exsr      $f4s1
      *
     C                   when      *in05 = *on                                  F5-refresh
     C                   eval      routne = set1
      *
     C                   when      *in12 = *on                                  F12-previous
     C                   eval      rtncd = '12'
     C                   eval      routne = exit
      *
     C                   when      *in11 = *on or mode = delete                 F11-delete
     C                   eval      action = delete
     C                   eval      routne = update
     C                   other
      *
      * User has pressed enter
      *
     C                   eval      routne = edit1
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Edit input fields for screen 1
      *----------------------------------------------------------------
      *
     C     $edit1        begsr
      *
      * *IN62 will be on if the record the user is trying to access has
      * been deleted by another user.  So, only perform the edits for the
      * fields on the screen if the indicator is off
      *
     C                   if        *in62 = *off                                 If here
      *
      * If creating a new record, validate:
      *   farm site
      *   daily date
      *
     C                   if        action = create                              If create
     C                   exsr      $fscd
     C                   exsr      $dydt
     C                   endif                                                  If create
      *
      * Always validate:
      *    Daily dead head
      *    Destroyed head
      *    Man hours
     C                   exsr      $ddhd
     C                   exsr      $dshd
     C                   exsr      $manhr
     C                   endif                                                  If here
      *
      * If there are no errors, attempt the write/update; otherwise,
      * redisplay the screen.  If a record has been deleted out from
      * under the user (*IN62 is ON), then the error message will be
      * issued in the update subroutine.  So, always perform this code.
      *
     C                   if        error = 0
     C                   exsr      $upd1
     C                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate daily date
      *----------------------------------------------------------------
      *
      *  1) required
      *  2) cannot be negative
      *  3) must be a valid date
      *  4) cannot be a future date
      *
      *
     C     $dydt         begsr
      *
     C                   z-add     0             wkdydt
      *
     C                   select
     C                   when      d1mdy = 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09001'
     C                   endif
      *
     C                   when      d1mdy < 0
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   other
      *
     C     *mdy          test(d)                 d1mdy                  92
     C                   if        *in92 = *on                                  If bad date
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09004'
     C                   endif
     C                   else
      *
      * Flip date from mmddyy to ccyymmdd using the 'date format' field
      * to add the century values.
      *
     C     *mdy          move      d1mdy         wkcymdiso
     C                   move      wkcymdiso     wkdydt
      *
      *
      * If the 'daily date' is valid:
      *     Check that it is not greater than today's date
      *     Check that it is not in a closed period
      *     If it is in the current period,
      *         Check that the period close programs are not running
      *
     C                   in        dsdaaper
      *
     C                   select
     C                   when      wkdydt > wksysdt
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00426'     mgid(e)
     C                   endif
      *
     C                   when      wkdydt < dabpdt
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09007'     mgid(e)
     C                   endif
      *
     C                   when      wkdydt >= dabpdt and
     C                             wkdydt <= daepdt and
     C                             dappfl <> *blank
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09016'     mgid(e)
     C                   endif
     C                   endsl
      *
      * Call a generic program to retrieve the Saturday week-ending date.
      *
     C                   call      'HP8007'
     C                   parm      wkdydt        xxccyymmdd
     C                   parm      0             xxsatdt
     C                   parm      0             xxcdyr
     C                   parm      0             xxcdwk
      *
      * If the returned date is zero, it is an error.
      *
     C                   if        xxsatdt = 0                                  If no OMS date
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09230'
     C                   endif
     C                   endif                                                  If no OMS date
      *
     C                   endif                                                  If bad date
     C                   endsl
      *
      *
      * If farm site and dead date are valid, check that
      * no record already exists for this farm/date.
      *
     C                   if        *in34 = *off and *in36 = *off                If all ok
     C     key01         chain(n)  hsp103                             92
     C                   if        *in92 = *off                                 If already exists
     C                   seton                                        3436
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09136'
     C                   endif
     C                   endif                                                  If already exists
     C                   endif                                                  If all OK
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Edit farm site (in create mode only)
      *---------------------------------------------------------------
      *
     C     $fscd         begsr
      *
     C                   move      *blank        d1fsnm
      *
     C                   select
     C                   when      d1fscd = 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09001'     mgid(e)
     C                   endif
      *
     C                   when      d1fscd < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     d1fscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      d1fscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      fsfsnm        d1fsnm
      *
      * Cannot be a BGF farm
      *
     C                   if        fsppcd =  'BGF'                              If BGF
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09092'     mgid(e)
     C                   endif
     C                   endif                                                  If BGF
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate dead head
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) must be greater than 0 if entered
      *
      *
     C     $ddhd         begsr
      *
     C                   select
     C                   when      d1ddhd < 0
     C                   seton                                        35
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate destroyed head
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) must be greater than 0 if entered
      *
      *
     C     $dshd         begsr
      *
     C                   select
     C                   when      d1dshd < 0
     C                   seton                                        37
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Man Hours
      *----------------------------------------------------------------
      *
      * Validations:
      *  1) optional
      *  2) must be greater than 0 if entered
      *
      *
     C     $manhr        begsr
      *
     C                   select
     C                   when      d1manhr < 0
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09000'
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * F4 prompt on screen 1
      *---------------------------------------------------------------
      *
     C     $f4s1         begsr
      *
      * Farm site
     C                   select
      *
     C                   when      fld = 'D1FSCD' and mode = create
     C                   call      'HP551'
     C                   parm                    xxfsbo
     C                   parm      0             xxfscd
     C                   parm      *blank        xxfsnm
     C                   parm      *blank        xxppcd
     C                   parm      *blank        xxptcd
     C                   seton                                        56
     C                   if        xxfscd <> 0
     C                   z-add     xxfscd        d1fscd
     C                   endif
     C                   other
      *
      * F4 not valid for this field...issue message
      *
     C                   if        error < maxmsg
     C                   add       1             error                                        013
     C                   movel     'HS09011'     mgid(e)
     C                   endif
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Write/update/delete record in database file
      *----------------------------------------------------------------
      *
     C     $upd1         begsr
      *
      * If the user is deleting,
      *   perform deletion integrity checks
      *
      *
      * If user action is revising or deleting, determine that the
      * record he is accessing still exists prior to attempting to
      * update.  Lock the record for update.
      *
     C                   if        error = 0 and                                If OK
     C                             (action = delete or action = revise)
      *
     C     key01         chain     hsp103                             92
     C                   if        *in92 = *on                                  If not found
     C                   seton                                        62
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09008'
     C                   endif
      *
     C                   endif                                                  If not found
     C                   endif                                                  If OK
      *
      * If there are no errors, delete, revise or create the record.
      *
     C                   if        error = 0                                    If no error
      *
     c                   select
     C                   when      action = delete
     C                   delete    rdrec
     C                   other
      *
      * For create/revise mode, move head to database fields
      *
     C                   z-add     d1ddhd        rdddhd
     C                   z-add     d1dshd        rddshd
     C                   z-add     d1manhr       rdmanhr
      *
     C                   if        action = create                              If create
     C                   move      xxfsbo        rdfsbo
     C                   z-add     d1fscd        rdfscd
     C                   z-add     wkdydt        rddydt
     C                   z-add     xxsatdt       rdwedt
     C                   write     rdrec
     C                   else
     C                   update    rdrec
     C                   endif                                                  If create
     C                   endsl
     C                   endif                                                  If no error
      *
      * Set next routine
      *
     C                   select
     C                   when      mode = create                                Wh creating
     C                   if        error = 0
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09040'
     C                   eval      routne = set1
     c                   else
     C                   eval      routne = scrn1
     C                   endif
      *
     C                   when      error <> 0                                   Wh errors
     C                   eval      routne = scrn1
     C                   other
      *
     C                   eval      routne = exit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on. So, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      *
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80045J'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      sdpgm         pgm
     C                   parm      msgfil        msgfl
      *
      * If call to UT80045J failed, a message hardcoded in the DSPF
      * command line format will be set on; so, redisplay screen.
      *
     C                   if        *in43 = *on
     C                   eval      routne = set1
     C                   endif
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Set on last record indicator and end job
      *----------------------------------------------------------------
      *
     C     $exit         begsr
     C                   seton                                        lr
     C                   endsr
      /EJECT
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    d1fscd
     C                   kfld                    wkdydt
      *
      * Parm Lists
      *
     C     *entry        plist
     C     d1mode        parm                    mode
     C                   parm                    xxfsbo
     C                   parm                    d1fscd
     C                   parm                    d1mdy
     C                   parm                    wkdydt
     C                   parm                    rtncd
      *
     C                   eval      action = mode
      *
      *
      * Save system date for date edits for "future" dates
      *
     C     *mdy          move      udate         wkcymdiso
     C                   move      wkcymdiso     wksysdt
      *
      *
      * The following standard code must be included to make the
      * standard error message handling program function properly.
      * This code sets and clears the program message queue.
      *
     C                   movel     '*'           msgpgm
     C                   exsr      $clmsg
      *
     C                   endsr
      /EJECT
