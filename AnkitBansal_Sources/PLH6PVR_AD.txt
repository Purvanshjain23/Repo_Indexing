// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PLH6PVR
// ?Date: 14.08.2025 Time: 02:54:20
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications
//?11/05/2020 ISE H16853 - Recompiled due to change in Buy Order Number
EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.CC_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

//?USER: Load screen

CASE;

// IF WRK.First Time Flag Usr EQ WRK.Blank USR
IF WRK.First_Time_Flag_Usr = WRK.Blank_USR;

// DTL.CC Company Number = WRK.CC Company Number
DTL.CC_Company_Number = WRK.CC_Company_Number;

// WRK.Display Print Prompt  Usr = CND.Prompt is to be displayed
WRK.Display_Print_Prompt_Usr = 'Y';

// WRK.First Time Flag Usr = CND.Yes
WRK.First_Time_Flag_Usr = 'Y';

ENDIF;

EXECUTE FUNCTION(Val Company Number    IF) TYPE(EXCINTFUN)                      AB1129077;
PARAMETER(DTL.CC_Company_Number);
PARAMETER(DTL.Oms_Name);
PARAMETER(WRK.Invalid_Y_N_USR);
{
 //?Execute internal function

 // Call program Val Company Number    XF.
 CALL PROGRAM(Val Company Number    XF) ('PDGZXFR');
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(WRK.Invalid_Y_N_USR);

 CASE;

 // IF WRK.Invalid Y/N USR is Yes
 IF WRK.Invalid_Y_N_USR = 'Y';

 // Send error message - 'Invalid Company Number'
 ERROR(PRK0299);
 MSGPARM(PAR.CC_Company_Number);

 ENDIF;

 // PAR.Invalid Y/N USR = WRK.Invalid Y/N USR
 PAR.Invalid_Y_N_USR = WRK.Invalid_Y_N_USR;

}


//?CALC: Screen function fields

CASE;

// IF DTL.TU Shift is *Blanks
IF DTL.TU_Shift = *BLANK;

// DTL.Description 30 USR = CON.*All Shifts
DTL.Description_30_USR = *All Shifts;

// IF *OTHERWISE
IF *OTHERWISE;

// DTL.Description 30 USR = Condition name of DTL.TU Shift
DTL.Description_30_USR = RTVCND(DTL.TU_Shift);

ENDIF;

//?USER: User defined action

// Call program Pmt Print Options Size XF.
CALL PROGRAM(Pmt Print Options Size XF) ('PDV8PVR');
PARAMETER('Tattoo Cnt/Unloader Cnt');
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(PAR.PRT_Copies);
PARAMETER('N');
PARAMETER(LCL.PRT_Night_Queue);
PARAMETER('HPE');
PARAMETER(1);

CASE;

// IF PGM.*Return code is *Normal
IF PGM.*Return_code = *BLANK;

// WRK.*Return code = CND.*Normal
WRK.*Return_code = *BLANK;

// WRK.Company Number Alpha Usr = CVTVAR(DTL.CC Company Number)
WRK.Company_Number_Alpha_Usr = CVTVAR(DTL.CC_Company_Number);

// WRK.Date Alpha Usr 2 = CVTVAR(DTL.TP Tattoo Date)
WRK.Date_Alpha_Usr_2 = CVTVAR(DTL.TP_Tattoo_Date);

// WRK.Date Alpha Usr 3 = CVTVAR(DTL.Date To   USR)
WRK.Date_Alpha_Usr_3 = CVTVAR(DTL.Date_To_USR);

// WRK.PRT Copies Alpha = CVTVAR(PAR.PRT Copies)
WRK.PRT_Copies_Alpha = CVTVAR(PAR.PRT_Copies);

// Call program Prt Tattoo/Unloader   UP.
SBMJOB;
CALL PROGRAM(Prt Tattoo/Unloader   UP) ('PLH7PCLP');
PARAMETER(WRK.*Return_code);
PARAMETER(WRK.Company_Number_Alpha_Usr);
PARAMETER(WRK.Date_Alpha_Usr_2);
PARAMETER(DTL.TU_Shift);
PARAMETER(WRK.Date_Alpha_Usr_3);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.PRT_Printer_Device);
PARAMETER(PAR.PRT_Hold_Output_Sts);
PARAMETER(PAR.PRT_Save_Output_Sts);
PARAMETER(WRK.PRT_Copies_Alpha);
SBMJOBOVR JOB(TTOUNLOAD);
SBMJOBOVR LOG(4;
SBMJOBOVR 99;
SBMJOBOVR *SECLVL);
SBMJOBEND;

ENDIF;

