      *****************  RPG PROGRAM HEADING  ************************
      *
      * SYSTEM:      Hog Production System
      * PROGRAM:     HP268 - Safedata/WEB: Edit/Write BGF Weekly Production to HPS
      * PROGRAMMER:  LeAnne Fedor
      * CREATED:     01/16/02
      *
      *
      * FUNCTION:     !!!!!!!  This program processes WEB data as well as SAFEDATA data. !!!
      *
      *              The 'data source' code in each record identifies whether the record
      *              got into the file via:
      *                   1) a Safedata upload, or
      *                   2) the WEB
      *
      *
      *              This program reads each record from the Editing file.
      *              It writes the error-free records to the HPS database file.
      *              It generates a listing of the records in error.
      *
      *              This program also writes ALL the records (both those with and without
      *              errors to a History file for I.S. debugging purposes). It populates a
      *              'y/n error flag' in this record.
      *
      *
      *              QPRINT is used for the output file since the command 'CLPRINTA'
      *              prints to QPRINT.  QPRINT is overridden in the submission CLP
      *              to 'SHARE = YES' to allows both this RPG program and the CLP
      *              UT80046A to write to the same print file.
      *
      *              Since the 'CLPRINTA' command logic in UT80046A is not being used
      *              to print headings, count lines or page break, these functions are
      *              controlled from this RPG program by counting the lines.
      *
      *              This program page-breaks when the line count reaches 62 lines
      *              because this listing is designed to run on paper that is 68 lines
      *              long.  Therefore, if the users generate this report on various
      *              laser printers with different page lengths, the page breaks may
      *              be goofy.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 09/17/02  LeAnne Fedor
      *           Added new fields: average lactation
      *                             ending piglet inventory
      *           Added logic to write any/all missing daily records for GDU farms.
      *
      * 11/17/02  LeAnne Fedor
      *           Replaced 'de-pop flag' with 'population code.'
      *
      * 10/22/03  LeAnne Fedor
      *           Added a new field: Total P2 Litters Farrowed.
      *
      * 06/30/04  LeAnne Fedor
      *           Added 1 new field: Number of Gilts Bred with Passed Dates
      *           Removed 10 fields: number of good piglets farrowed
      *                              number of dome heads
      *                              number of splays
      *                              number of weak and lethargic
      *                              number of scours
      *                              number of good piglets weaning next
      *                              number of lame
      *                              number of under 7 pounds
      *                              number of rough hair coat
      *                              number of swollen joints
      *
      * 02/03/05  LeAnne Fedor
      *           Added the following new field to the BGF Production files.
      *                transferred in open gilts
      *
      * 02/07/05  LeAnne Fedor
      *           Removed 'Average Lactation Pounds" from all files.
      *
      * 08/23/05  LeAnne Fedor
      *           Recompile only.
      *           Added the following new field to the BGF Production files.
      *                man hours
      *
      * 03/23/06  LeAnne Fedor
      *           Changed Farrowing "days to subtract" from 119 days to 114 days.
      *
      * 03/27/06  LeAnne Fedor
      *           Changed Farrowing "days to subtract" back to 119 days.
      *
      * 06/15/06  LeAnne Ramsey
      *           Recompile only. New field "Avg Gilt Weight @ 28 Weeks" added
      *           to BGF Weekly Production file.
      *           (Note: Anne Marie's group is going to key this field in. So, we did
      *           not add it to the Safedata stuff. We may add it to the WEB screens at
      *           a later date.)
      *
      * 08/04/08  LeAnne Ramsey
      *           Removed 4 fields:  BPADGB   - Avg gilt age at breeding
      *                              BPPSGLSV - Nbr gilts bred w/passed dates
      *                              BPWSLB   - Wkly ending lbs supplement used
      *                              BPP2LT   - Total P2 litters farrowed
      *
      * 02/22/11  LeAnne Ramsey  (E1370)
      *           Sami Wilson wants HP6050-Listing of Farms with Daily Entries but No Weekly
      *           to generate automatically at the end of the Safedata Upload of BGF Weekly
      *           Data. To do that, I need the Year/Week for the Safedata data. So, I have
      *           added logic to populate the LDA with the Year/Week...in the positions that
      *           HP6050 expects.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      *
      *  2/25/20  Brad Baden   E15763
      *           Use System Date instead of UDATE to calculate the Week Ending Date
      *           and Create Date.
      *
      /eject
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     Fhsp009    if   e           k disk
      *  Business office
      *
      *
     Fhsp018    if   e           k disk
      *  Farm site
      *
      *
     Fhsl082a   if a e           k disk    rename(bdrec:bdreca) prefix(p2)
      *  BGF daily production
      *
      *
     Fhsl082b   if   e           k disk
      *  BGF daily production
      *
      *
     Fhsl092b   uf a e           k disk    rename(bprec:bprecb) prefix(p1)
      *  BGF weekly production
      *
      *
     Fhsl093b   uf   e           k disk    rename(berec:berecb) prefix(p3)
      *  BGF farrowing and pregnancy check events
      *
      *
     Fhsp093    o    e           k disk
      *    BGF farrowing and pregnancy check events
      *
      *
     Fhsp104    if   e           k disk
      *    Population code
      *
      *
     Fhsp268    uf   e           k disk
      *  Safedata/WEB: BGF weekly production editing
      *
      *
     Fhsp992    o    e           k disk    rename(bprec:bprec992) prefix(p4)
      *  Safedata/WEB: BGF weekly production history
      *
      *
     Fqprint    o    f  132        printer oflind(*inof)
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      *
      * Standard fields
      *
     d dash            s            132    inz(*all'-')
     d rtime           s              6  0
     D maxmsg          s              2  0  inz(20)
     D msgfl           s             10
      *
      * System Date
     d sysdate         s               d   inz(*sys)
      *
      *
      * Control fields
      *
     D errorfl         s              1    inz('N')
     D first           s              1    inz('Y')
     D count           s              1  0
      *
      *
      * Work fields for counting lines
      *
     d wkovfl          s              3  0 inz(62)
     d wkcurl          s              3  0
     d wkdifl          s              3  0
      *
      *
      * Work fields
      *
     d wkdpdt          s                   like(bddpdt)
     d wkfsbo          s                   like(fsfsbo)
     d wkgtcd          s                   like(fsgtcd)
     d wkevfl          s              1a
     d wkcdyr          s                   like(p1bpcdyr)
     d wkcdwk          s                   like(p1bpcdwk)
     d wkpicdt         s                   like(p1bppicdt)
     d wkacyr          s                   like(p1bpacyr)
     d wkacpe          s                   like(p1bpacpe)
     d wkacwk          s                   like(p1bpacwk)
      *
      *
      * Work fields for date manipulation
      *
     D wkisodate       s               D   datfmt(*iso)
     D wkcrdt          s              8  0
     D wkccyymmdd      s              8  0
     D wkyymmdd        s              6  0
      *
      *
      * Parm fields
      *
     D xxcocd          s              3  0
     D xxreturn        s              7a
     D xxalphfscd      s              5a
      *
     D xxjulian        s              5  0
     D xxcyymmdd       s              7  0
      *
     D xxhpscdyr       s                   like(p1bpcdyr)
     D xxhpscdwk       s                   like(p1bpcdwk)
     D xxhpspicdt      s                   like(p1bppicdt)
      *
     D xxcdyr          s                   like(p1bpcdyr)
     D xxcdwk          s                   like(p1bpcdwk)
     D xxday           s              1a
      *
     D xxacyr          s              4  0
     D xxacpe          s              2  0
     D xxacwk          s              2  0
      *
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * standard error message handling data structures
      *---------------------------------------------------------------
      *
      * For error message handling, a packed index (3) is required.
      * For program readability, define a corresponding error count
      * field called 'error'
      *
     D                 ds                  inz
     D  error                         2p 0
     D   e                            2p 0 overlay(error)
      *
      * This data structure supplies the name of the message file to
      * the message handling CL program.  The field name MSGFIL must be
      * constant. The value in quotes is the name of the specific
      * message file containing the user defined messages.
      *
     D                 ds                  inz
     D  msgfil                       10    inz('HSMSGF    ')
      *
      *---------------------------------------------------------------
      *  Standard message data structures
      *---------------------------------------------------------------
      *
      * The following 3 data structures are used to speed message
      * handling since it is faster to clear data structures than
      * arrays.  Each is associated with a standard message array.
      *
     D mgi             ds                  inz
     D  mgid                          7    dim(20)
      *
     D mgd             ds                  inz
     D  mgdt                         50    dim(20)
      *
     D mgwk            ds                  inz
     D  mgw                           1    dim(50)
      *
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *
      *---------------------------------------------------------------
      * Data areas
      *---------------------------------------------------------------
      *
      * Local data area.
      *
     Dlda             uds                  dtaara(*lda)
     D  ldcdyr                 1      4  0
     D  ldcdwk                 5      6  0
      *
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      ****************************************************************
      * MAINLINE
      ****************************************************************
      *
      * Print the headings the first time through
      *
     C                   exsr      $prthdr
      *
      * Process each record in the Editing file.
      *
     C     *loval        setll     hsp268
     C                   dou       *in90 = *on                                  Main do
     C                   read      hsp268                                 90
     C                   if        *in90 = *off                                 If not EOF
      *
     C                   move      no            first
      *
      * Edit record
     C                   exsr      $edit
      *
      * Always write the editing record to the history file
      *
     C                   exsr      $write992
      *
      * If there were no errors, write the record to the HPS database;
      * otherwise, print the record followed by any error messages
      *
     C                   select
     C                   when      error = 0
     C                   exsr      $write092
     C                   other
     C                   exsr      $prtrec
     C                   exsr      $prtmsg
     C                   endsl
      *
      * Always delete the record from the editing file.
      *
     C                   delete    bprec
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Main do
      *
      *---------------------------------------------------------------
      * EOF processing
      *---------------------------------------------------------------
      *
     C                   select
     C                   when      first = yes
     C                   except    nodata
      *
     C                   when      errorfl = no
     C                   except    noerror
     C                   endsl
      *
      * Populate the LDA with the Year/Week....so we will have it for the
      * subsequent call to HP6050.
      *
     C                   z-add     wkcdyr        ldcdyr
     C                   z-add     wkcdwk        ldcdwk
      *
     C                   seton                                        lr
      /eject
      *---------------------------------------------------------------
      * Edit record
      *---------------------------------------------------------------
      *
     C     $edit         begsr
      *
      *
      * Validate:
      *  1) population code
      *  2) farm site
      *  3) negative values
      *  4) week-ending date
      *
     C                   exsr      $pocd
     C                   exsr      $fscd
     C                   exsr      $negative
     C                   exsr      $wedt
      *
      * Check that 'gilt farrowed head' is not greater than 'farrowed' head.
      *
     C                   if        bpglfahd > bpfahd and
     C                             error < maxmsg
     C                   add       1             error
     C                   movel     'HS01108'     mgid(e)
     C                   endif
      *
      *
      * Check that 'gilt' pregnancy head is not greater than 'pregnancy' head.
      *
     C                   if        bpglprhd > bpprhd and
     C                             error < maxmsg
     C                   add       1             error
     C                   movel     'HS01108'     mgid(e)
     C                   endif
      *
      *
      * You cannot create a 'weekly' record until there are 7 daily records. So,
      * if there are no errors on this record:
      * 1) For non-GDU farms, retrieve/count the daily records for this week-ending date
      * 2) For GDU farms, write any/all missing daily records for this week-ending date
      *
     C                   if        error = 0                                    If OK so far
      *
     C                   select
     C                   when      wkgtcd = 'G'
     C                   exsr      $gdudaily
     C                   other
     C                   exsr      $daily
     C                   endsl
      *
     C                   endif                                                  If OK so far
      *
     C                   endsr
      /eject
      *--------------------------------------------------------------------
      * Validate Population Code
      *---------------------------------------------------------------------
      *
      * Validations:
      *  1) required
      *  2) must be valid in the master file
      *
     C     $pocd         begsr
      *
     C     bppocd        chain     hsp104                             92
     C                   if        *in92 = *on
     C                   add       1             error
     C                   movel     'HS00190'     mgid(e)
     C                   clear                   mgw
     C                   movea     bppocd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------------
      * Validate farm site
      *-----------------------------------------------------------------------------------------
      *
      * Validations:
      *    1) required
      *    2) must be valid in the Farm Site master
      *    3) must be a BGF farm
      *
     C     $fscd         begsr
      *
     C                   move      *blank        wkfsbo
     C                   move      *blank        wkgtcd
      *
     C                   select
     C                   when      bpfscd = 0
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00837'     mgid(e)
     C                   endif
      *
     C                   when      bpfscd < 0
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00838'     mgid(e)
     C                   endif
     C                   other
      *
     C     bpfscd        chain     hsp018                             92
     C                   if        *in92 = *on                                  If bad farm
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00131'     mgid(e)
     C                   clear                   mgw
     C                   move      bpfscd        xxalphfscd
     C                   movea     xxalphfscd    mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      fsfsbo        wkfsbo
     C                   move      fsgtcd        wkgtcd
      *
      * For the retrieval of date information from the OMS Calendar file,
      * you will need the 'company' associated with the farm's business office.
      * And, you must move it to a numeric field.
      *
     C     fsfsbo        chain     hsp009                             92
     C                   if        *in92 = *off
     C                   movel     bococd        xxcocd
     C                   else
     C                   move      *blank        xxcocd
     C                   endif
      *
      * Must be a BGF farm
      *
     C                   if        fsppcd <> 'BGF'                              If not BGF
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09137'     mgid(e)
     C                   endif
     C                   endif                                                  If not BGF
     C                   endif                                                  If bad farm
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Check numbers for negative values. No number can be negative.
      *---------------------------------------------------------------
      *
     C     $negative     begsr
      *
     C                   if        bpbredpr < 0 or                              If anything neg
     C                             bpglprhd < 0 or
     C                             bpprhd   < 0 or
     C                             bpglfahd < 0 or
     C                             bpfahd   < 0 or
     C                             bpenplhd < 0 or
     C                             bpglsohd < 0 or
     C                             bpbohd   < 0
      *
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09167'     mgid(e)
     C                   endif
      *
     C                   endif                                                  If anything neg
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      *  Retrieve/count daily production records for this week-ending date
      *-----------------------------------------------------------------------
      *
     C     $daily        begsr
      *
     C                   z-add     0             count
     C     key01         setll     hsl082b
      *
     C                   dou       *in91 = *on                                  Do daily
     C     key01         reade     hsl082b                                91
     C                   if        *in91 = *off                                 If read
     C                   add       1             count
     C                   endif                                                  If read
     C                   enddo                                                  Do daily
      *
      * Issue an error if there are not 7 daily records for this farm/week.
      *
     C                   if        count <> 7 and                               If not 7 days
     C                             error < maxmsg
     C                   add       1             error
     C                   movel     'HS01161'     mgid(e)
     C                   endif                                                  If not 7 days
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------
      * Write any/all missing daily records for this GDU farm
      *-----------------------------------------------------------------------
      *
     C     $gdudaily     begsr
      *
     C                   z-add     bpwedt        wkdpdt
      *
     C                   do        7                                            Do GDU
     C     key03         chain     hsl082a                            92
     C                   if        *in92 = *on                                  If no hit
     C                   exsr      $write082
     C                   endif                                                  If no hit
     C                   exsr      $prevday
     C                   enddo                                                  Do GDU
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write a Daily Production record for this GDU farm
      *---------------------------------------------------------------
      *
     C     $write082     begsr
      *
     C                   movel     wkfsbo        p2bdfsbo
     C                   z-add     bpfscd        p2bdfscd
      *
     C                   move      sdusr         p2bdcrusr
     C                   z-add     wkcrdt        p2bdcrdt
     C                   z-add     0             p2bdupdt
      *
     C                   z-add     bpwedt        p2bdwedt
     C                   z-add     wkcdyr        p2bdcdyr
     C                   z-add     wkcdwk        p2bdcdwk
      *
     C                   z-add     wkdpdt        p2bddpdt
      *
      * Call a SYNON program to retrieve the PIC date associated with the 'daily
      * production date.
      *
     C                   z-add     wkdpdt        wkccyymmdd
     C                   exsr      $synon
     C                   if        xxreturn = *blank
     C                   z-add     xxhpspicdt    p2bdpicdt
     C                   endif
      *
     C                   write     bdreca
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Find the date of the previous day
      *---------------------------------------------------------------
      *
     C     $prevday      begsr
      *
     C                   move      wkdpdt        wkisodate
     C     wkisodate     subdur    1:*days       wkisodate
     C                   move      wkisodate     wkdpdt
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Validate week-ending date
      *---------------------------------------------------------------
      *
     C     $wedt         begsr
      *
      * Retrieve the following info from the OMS Calendar file and verify
      * that the date is a Saturday.
      *   1) accounting year
      *   2) accounting period
      *   3) accounting week
      *   4) HPS calendar year
      *   5) HPS calendar week
      *   6) HPS PIC date
      *
      * You will call a SYNON program for this retrieval using as
      * input parms 1) company number and 2) date in the SYNON format of
      * CYYMMDD.
      *
     C                   z-add     bpwedt        wkccyymmdd
     C                   exsr      $synon
      *
      * Check the returned SYNON values.
      *
     C                   select
     C                   when      xxreturn <> *blank
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09138'
     C                   clear                   mgw
     C                   movea     bococd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
      *
      * Must be Saturday.
     C                   when      xxday <> '7'
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS09030'
     C                   endif
      *
     C                   other
     C                   z-add     xxhpscdyr     wkcdyr
     C                   z-add     xxhpscdwk     wkcdwk
     C                   z-add     xxhpspicdt    wkpicdt
     C                   z-add     xxacyr        wkacyr
     C                   z-add     xxacpe        wkacpe
     C                   z-add     xxacwk        wkacwk
     C                   endsl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write records to the HPS database file
      *---------------------------------------------------------------
      *
     C     $write092     begsr
      *
      * Determine if a weekly production record already exists for this farm/date.
      * If it exists, delete it.  Then, write the new record.
      *
     C     key01         chain     hsl092b                            92
     C                   if        *in92 = *off                                 If exists
     C                   delete    bprecb
     C                   endif                                                  If exists
      *
      * Populate database fields
      *
     C                   move      wkfsbo        p1bpfsbo
     C                   z-add     bpfscd        p1bpfscd
     C                   move      bppocd        p1bppocd
      *
     C                   z-add     bpwedt        p1bpwedt
     C                   z-add     wkcdyr        p1bpcdyr
     C                   z-add     wkcdwk        p1bpcdwk
     C                   z-add     wkpicdt       p1bppicdt
     C                   z-add     wkacyr        p1bpacyr
     C                   z-add     wkacwk        p1bpacwk
     C                   z-add     wkacpe        p1bpacpe
      *
      *
     C                   z-add     bpbredpr      p1bpbredpr
      *
     C                   z-add     bpenplhd      p1bpenplhd
     C                   z-add     bpglsohd      p1bpglsohd
     C                   z-add     bpbohd        p1bpbohd
      *
     C                   z-add     wkcrdt        p1bpcrdt
      *
     C                   select
     C                   when      bpdscd = 'S'
     C                   eval      p1bpcrusr = 'Safedata'
     C                   when      bpdscd = 'W'
     C                   eval      p1bpcrusr = 'WEB'
     C                   other
     C                   eval      p1bpcrusr = 'Unknown'
     C                   endsl
      *
     C                   write     bprecb
      *
      * Call program to 'roll-up' daily records and update 'weekly' record.
      *
     C                   call      'HP8002'
     C                   parm                    p1bpfscd
     C                   parm                    p1bpwedt
      *
      *
      * Create farrowing and pregnancy event records
      *
     C                   exsr      $farrow
     C                   exsr      $pregnancy
      *
      * Clear the BGF Weekly Production record
      *
     C                   clear                   bprecb
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Farrowing event
      *---------------------------------------------------------------
      *
     C     $farrow       begsr
      *
      * The farrowing year/week will be 119 days prior to this calendar year/week.
      * Calculate the week-ending date of 119 days ago.
      *
     C     *iso          move      p1bpwedt      wkisodate
     C     wkisodate     subdur    119:*days     wkisodate
     C                   move      wkisodate     wkccyymmdd
      *
      * Call the SYNON program to retrieve the year/week associated with
      * this date.
     C                   exsr      $synon
      *
      * Move the returned SYNON year/week to event file fields.
      *
     C                   if        xxreturn = *blank and
     C                             xxhpscdyr <> 0
     C                   move      'F'           wkevfl
     C                   z-add     bpfahd        beevhd
     C                   z-add     bpglfahd      beglevhd
     C                   exsr      $write093
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Create any/all records for this farm/week for the Farrowing and Pregnancy
      * Events file
      *---------------------------------------------------------------
      *
     C     $write093     begsr
      *
      * If a record already exists, delete it before writing the new
      * version of the record.
      *
     C     key02         chain     hsl093b                            92
     C                   if        *in92 = *off                                 If exists
     C                   delete    berecb
     C                   endif                                                  If exists
      *
     C                   z-add     p1bpfscd      befscd
     C                   z-add     p1bpcdyr      beevyr
     C                   z-add     p1bpcdwk      beevwk
     C                   move      wkevfl        beevfl
     C                   z-add     xxhpscdyr     besvyr
     C                   z-add     xxhpscdwk     besvwk
     C                   write     berec
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Preg checked positive event
      *---------------------------------------------------------------
      *
     C     $pregnancy    begsr
      *
      * The year/week will be 5 weeks (35 days) prior to the week-ending date.
      * Calculate the week-ending date of 5 weeks ago.
      *
      *
     C     *iso          move      p1bpwedt      wkisodate
     C     wkisodate     subdur    35:*days      wkisodate
     C                   move      wkisodate     wkccyymmdd
      *
      * Call the SYNON program to retrieve the year/week associated with
      * this date.
     C                   exsr      $synon
      *
      * Move the returned SYNON year/week to event file fields.
      *
     C                   if        xxreturn = *blank and
     C                             xxhpscdyr <> 0
     C                   move      'P'           wkevfl
     C                   z-add     bpprhd        beevhd
     C                   z-add     bpglprhd      beglevhd
     C                   exsr      $write093
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      *  Use SYNON program to validate date
      *---------------------------------------------------------------
      *
     C     $synon        begsr
      *
      * Get the date into the SYNON format.
      *
     C                   z-add     wkccyymmdd    wkyymmdd
     C                   if        wkccyymmdd >= 20000000
     C     wkyymmdd      add       1000000       xxcyymmdd
     C                   else
     C                   z-add     wkyymmdd      xxcyymmdd
     C                   endif
      *
     C                   call      'POF3XFR'
     C                   parm      *blank        xxreturn
     C                   parm                    xxcocd
     C                   parm                    xxcyymmdd
     C                   parm      0             xxjulian
     C                   parm      0             xxacyr
     C                   parm      0             xxacpe
     C                   parm      0             xxacwk
     C                   parm      *blank        xxday
     C                   parm      0             xxcdwk
     C                   parm      0             xxhpspicdt
     C                   parm      0             xxhpscdyr
     C                   parm      0             xxhpscdwk
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write the edit record to the history file
      *---------------------------------------------------------------
      *
     C     $write992     begsr
      *
     C                   if        error > 0
     C                   move      yes           p4bperfl
     C                   else
     C                   move      no            p4bperfl
     C                   endif
      *
      * Populate database fields
      *
     C                   move      bpdscd        p4bpdscd
     C                   move      bppocd        p4bppocd
     C                   z-add     bpfscd        p4bpfscd
      *
     C                   z-add     bpwedt        p4bpwedt
     C                   z-add     wkcrdt        p4bpcrdt
      *
      *
     C                   z-add     bpbredpr      p4bpbredpr
      *
     C                   z-add     bpglprhd      p4bpglprhd
     C                   z-add     bpprhd        p4bpprhd
      *
     C                   z-add     bpglfahd      p4bpglfahd
     C                   z-add     bpfahd        p4bpfahd
      *
     C                   z-add     bpenplhd      p4bpenplhd
     C                   z-add     bpglsohd      p4bpglsohd
     C                   z-add     bpbohd        p4bpbohd
      *
     C                   write     bprec992
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Print report headings
      *---------------------------------------------------------------
      *
     C     $prthdr       begsr
      *
     C                   z-add     0             wkcurl
     C                   except    h1hdr
     C                   add       8             wkcurl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Print record
      *---------------------------------------------------------------
      *
     C     $prtrec       begsr
      *
     C                   move      yes           errorfl
      *
     C                   if        wkcurl > wkovfl
     C                   exsr      $prthdr
     C                   endif
      *
      * Program UT80046A does not print headings or check for page breaks.
      * Before calling  UT80046A, determine if all 8 lines required for the
      * record will fit on the current page. Calculate the remaining lines
      * on the page using the overflow line and the current line.
      *
     C     wkovfl        sub       wkcurl        wkdifl
      *
      * If you have more messages than will fit on the page, then page break
      * and print headings.
      *
     C                   if        wkdifl < 8
     C                   exsr      $prthdr
     C                   endif
      *
     C                   except    l1dtl
     C                   add       1             wkcurl
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------------
      * Print error messages
      *-------------------------------------------------------------------
      *
     C     $prtmsg       begsr
      *
     C                   if        error <> 0
     C                   exsr      $wrmsg
     C                   z-add     0             error
     C                   exsr      $clmsg
     C                   endif
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Write error messages
      *---------------------------------------------------------------
      *
     C     $wrmsg        begsr
      *
      * If overflow, print headings.
      *
     C                   if        wkcurl > wkovfl
     C                   exsr      $prthdr
     C                   endif
      *
      * Program UT80046A does not print headings or check for page breaks.
      * Before calling  UT80046A, determine if all the error messages can be
      * printed on the current page.  Calculate the remaining print lines
      * on the page using the overflow line and the current line.
      *
     C     wkovfl        sub       wkcurl        wkdifl
      *
      * If you have more messages than will fit on the page, then page break
      * and print headings.
      *
     C                   if        error > wkdifl
     C                   exsr      $prthdr
     C                   endif
      *
      * Increment the current line by the number of error messages you will be
      * printing in UT80046A plus one for the space after.  This sets the current
      * line number properly for when you return from UT80046A.
      *
     C     wkcurl        add       error         wkcurl
     C                   add       1             wkcurl
      *
     C                   call      'UT80046A'                           43
     C                   parm                    mgid
     C                   parm                    mgdt
     C                   parm                    error
     C                   parm      msgfil        msgfl
      *
     C                   endsr
      /eject
      *----------------------------------------------------------------
      * Clear messages
      *----------------------------------------------------------------
      *
     C     $clmsg        begsr
      *
     C                   call      'UT80046A'                           43
     C                   parm      *blank        mgi
     C                   parm      *blank        mgd
     C                   parm      *zero         error
     C                   parm      msgfil        msgfl
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    bpfscd
     C                   kfld                    bpwedt
      *
     C     key02         klist
     C                   kfld                    p1bpcdyr
     C                   kfld                    p1bpcdwk
     C                   kfld                    p1bpfscd
     C                   kfld                    wkevfl
      *
     C     key03         klist
     C                   kfld                    bpfscd
     C                   kfld                    wkdpdt
      *
      * Save date for record stamp
      *
      **  2/26/2020 JBB E15763 - Use System Date instead of UDATE
     C*    *mdy          move      udate         wkisodate
     c                   movel     sysdate       wkisodate
     C                   move      wkisodate     wkcrdt
      *
     C                   time                    rtime
      *
     C                   endsr
      /eject
      *-------------------------------------------------------------
      * Report heading lines
      *-------------------------------------------------------------
      *
     Oqprint    e            h1hdr          1 01
     O                       sdpgm               10
     O                                           78 'HOG PRODUCTION SYSTEM'
     O                                          122 'DATE'
     O                       udate         y    132
      *
     O          e            h1hdr          1
     O                       sdusr               10
     O                                           65 'BGF WEEKLY PRODUCTION '
     O                                           91 'SAFEDATA/WEB ERROR LISTING'
     O                                          122 'TIME'
     O                       rtime              132 '  :  :  '
      *
     O          e            h1hdr          2
     O                                          122 'PAGE'
     O                       page          z    132
      *
     O          e            h1hdr          1
     O                                            5 'FARM'
     O                                           19 'WEEK-ENDING'
      *
     O          e            h1hdr          1
     O                                            5 'SITE'
     O                                           19 'DATE'
      *
     O          e            h1hdr          1
     O                       dash               132
      *
      *
      *-------------------------------------------------------------
      * Detail line
      *-------------------------------------------------------------
      *
     O          e            l1dtl       1
     O                       bpfscd        m      6
     O                       bpwedt        z     19
      *
      *-------------------------------------------------------------
      * No data message line
      *-------------------------------------------------------------
      *
     O          e            nodata      1
     O                                           24 'There was no BGF weekly '
     O                                           48 'production data to edit.'
      *-------------------------------------------------------------
      * There were no errors
      *-------------------------------------------------------------
      *
     O          e            noerror     1
     O                                           21 'There were no errors.'
      /eject
