// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PPQ8XFR
// ?Date: 14.08.2025 Time: 03:41:39
// ?------------------------------------------------------------------------------------------------

//?Execute user function

//?************************************************************
//?Submit from the Job Scheduler to create the prior week closing bals
//?JS = PRKINVSTK  ; For IVG 'G'.
//?JS = PRKINVSTK2 ; For IVG 'S'.
//?************************************************************
//?Rerun =  NO from scheduler
// WRK.Status - Y or N = CND.no
WRK.Status_Y_or_N = 'N';

//?Validate that the prior week has been posted.  QUIT if not!
// PAR.ISC Week Ending Date = CND.eq 20991231
PAR.ISC_Week_Ending_Date = 20991231;

//?R9083 05/09/17 DN-Get Company Number for ISC Valuation Grouping.
EXECUTE FUNCTION(RTV Cmp/Dsc by Val/SysVRT) TYPE(RTVOBJ) FILE(PDKMREP)          AC2136752;
PARAMETER('IVFGROUP');
PARAMETER(LCL.Company_Number);
PARAMETER(NLL.Description);
PARAMETER(PAR.ISC_Valuation_Grouping);
{
 //?USER: Initialize routine

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF PAR.System Value Alpha EQ DB1.System Value Alpha
 IF PAR.System_Value_Alpha = DB1.System_Value_Alpha;

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

 ENDIF;

}


// Call program Rtv Alpha Value       XF.
CALL PROGRAM(Rtv Alpha Value       XF) ('POMTXFR');
PARAMETER(LCL.Company_Number);
PARAMETER('PRKSTKPST');
PARAMETER(WRK.DL_List_ID);

//?R9083 02/17/17 DN-Modified to also RST by Valuation Grouping.
EXECUTE FUNCTION(Rtv Last Week Post St RT) TYPE(RTVOBJ) FILE(PPBSCPP)           AC1743606;
PARAMETER(PAR.ISC_Valuation_Grouping);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(WRK.ISC_Post_Balance_Sts);
PARAMETER(WRK.ISC_Post_Warehouse_Sts);
{
 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 //?Get the latest week ending date & post status' in the file
 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?Snd pager msg if ISC prior week not posted
CASE;

// IF PAR.ISC Week Ending Date is Not Entered
IF PAR.ISC_Week_Ending_Date = *ZERO;

//?Snd pager msg if ISC prior week not posted
// IF *OTHERWISE
IF *OTHERWISE;

CASE;

// IF WRK.ISC Post Balance Sts is Open
IF WRK.ISC_Post_Balance_Sts = 'O';

// OR WRK.ISC Post Warehouse Sts is Open
OR WRK.ISC_Post_Warehouse_Sts = 'O';

//?R9083 02/17/17 DN-Modified to Add Grouping to Message.
// Retrieve message - 'Inventory Stock Close not posted for group &2 week &1.'
WRK.Office_Message_USR = RTVMSG(USR3557);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

// Call program SND Pager Msg (MPLUS) UP.
CALL PROGRAM(SND Pager Msg (MPLUS) UP) ('POMSUPC');
PARAMETER(WRK.DL_List_ID);
PARAMETER(WRK.Office_Message_USR);

QUIT;

ENDIF;

ENDIF;

// WRK.IVF Post Inventory Sts = CND.Open
WRK.IVF_Post_Inventory_Sts = 'O';

//?R9083 02/17/17 DN-Modified to also RST by Valuation Grouping.
EXECUTE FUNCTION(Rtv Post Inv Sts-1st  RT) TYPE(RTVOBJ) FILE(PPBTCPP)           AC1740674;
PARAMETER(PAR.ISC_Valuation_Grouping);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(WRK.IVF_Post_Inventory_Sts);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

 QUIT;

}


//?Snd pager msg if IVF prior week not posted
CASE;

// IF WRK.IVF Post Inventory Sts is Open
IF WRK.IVF_Post_Inventory_Sts = 'O';

//?R9083 02/17/17 DN-Modified to Add Grouping to Message.
// Retrieve message - 'Inventory Values not posted for group &2 week &1. Cannot create new week.'
WRK.Office_Message_USR = RTVMSG(USR3558);
PARAMETER(PAR.ISC_Week_Ending_Date);
PARAMETER(PAR.ISC_Valuation_Grouping);

// Call program SND Pager Msg (MPLUS) UP.
CALL PROGRAM(SND Pager Msg (MPLUS) UP) ('POMSUPC');
PARAMETER(WRK.DL_List_ID);
PARAMETER(WRK.Office_Message_USR);

QUIT;

ENDIF;

//?************************************************************
//?New week ending saturday date
//?JRB 05/29/07 Changed to use default Co Num
//?R9083 05/09/17 DN-Set 'NLL' for Company Number.
EXECUTE FUNCTION(VAL Set Int. Acc EXTNL IF) TYPE(EXCINTFUN)                     AC1277374;
PARAMETER('I/C');
PARAMETER(NLL.Company_Number);
PARAMETER(NLL.Warehouse_Code);
PARAMETER(NLL.Allow_Multi_Company);
PARAMETER(NLL.Default_Printer);
PARAMETER(NLL.Salesperson_Code);
PARAMETER(NLL.Name);
PARAMETER(NLL.System_Value_Alpha);
PARAMETER(NLL.Access_Denied_Y_N);
{
 //?Execute internal function

 // PAR.User Profile Name = JOB.*USER
 PAR.User_Profile_Name = JOB.*USER;

 EXECUTE FUNCTION(VAL User/Appl EXTERNAL IF) TYPE(EXCINTFUN)                     AC1277611;
 PARAMETER(PAR.User_Profile_Name);
 PARAMETER(PAR.Application_Code);
 PARAMETER(WRK.Company_Number);
 PARAMETER(PAR.Warehouse_Code);
 PARAMETER(PAR.Allow_Multi_Company);
 PARAMETER(PAR.Default_Printer);
 PARAMETER(PAR.Salesperson_Code);
 PARAMETER(WRK.Access_Denied_Y_N);
 {
  //?Execute internal function

  //?RMC 5/11/09 Rtv default company from user profile --
  //?  Override user code model company if it exists
  EXECUTE FUNCTION(RTV Program Setup w/Co RT) TYPE(RTVOBJ) FILE(CADRREP)          AC1935572;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Allow_Multi_Company);
  PARAMETER(PAR.Default_Printer);
  PARAMETER(PAR.Salesperson_Code);
  PARAMETER(LCL.Company_Number);
  PARAMETER(PAR.User_Code_Model);
  {
   //?USER: Processing if Data record not found

   // PGM.*Return code = CND.*Record does not exist
   PGM.*Return_code = 'Y2U0005';

   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  //?User Profile Record Not found
  CASE;

  // IF PGM.*Return code is *Record does not exist
  IF PGM.*Return_code = 'Y2U0005';

  // PAR.Access Denied (Y/N) = CND.yes
  PAR.Access_Denied_Y_N = 'Y';

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  //?User Profile Record Not found
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

  ENDIF;

  CASE;

  // IF PAR.User Code Model is equal to blank
  IF PAR.User_Code_Model = *BLANK;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Profile_Name);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  // IF *OTHERWISE
  IF *OTHERWISE;

  EXECUTE FUNCTION(RTV Appl. Profile      RT) TYPE(RTVOBJ) FILE(CADTREP)          AC1143177;
  PARAMETER(PAR.User_Code_Model);
  PARAMETER(PAR.Application_Code);
  PARAMETER(PAR.Company_Number);
  PARAMETER(LCL.Warehouse_Code);
  {
   //?USER: Process Data record

   MOVE *ALL (To: PAR From: DB1);

  }

  ENDIF;

  // PAR.Warehouse Code = LCL.Warehouse Code
  PAR.Warehouse_Code = LCL.Warehouse_Code;

  //?Return code when not normal for Application Profile
  CASE;

  // IF PGM.*Return code is *Normal
  IF PGM.*Return_code = *BLANK;

  // PAR.Access Denied (Y/N) = CND.no
  PAR.Access_Denied_Y_N = 'N';

  //?Return code when not normal for Application Profile
  // IF *OTHERWISE
  IF *OTHERWISE;

  // PAR.Access Denied (Y/N) = CND.yes
  PAR.Access_Denied_Y_N = 'Y';

  PGM.*Return_code = 'Y2U9999';

  RETURN;

  ENDIF;

  //?Use User Profile Control company if entered,get whse if the appl got one
  CASE;

  // IF LCL.Company Number is greater than zero
  IF LCL.Company_Number > *ZERO;

  // PAR.Company Number = LCL.Company Number
  PAR.Company_Number = LCL.Company_Number;

  CASE;

  // IF LCL.Warehouse Code is Not Blanks
  IF LCL.Warehouse_Code <> *BLANK;

  EXECUTE FUNCTION(RTV Prod Whse for Co  RT) TYPE(RTVOBJ) FILE(CAADREP)           AC1757887;
  PARAMETER(PAR.Warehouse_Code);
  PARAMETER(LCL.Shipping_Company);
  {
   //?USER: Processing if Data record not found

   MOVE *ALL (To: PAR From: CON);

   //?USER: Process Data record

   CASE;

   // IF DB1.Record Status is Active
   IF DB1.Record_Status = 'A';

   CASE;

   // IF DB1.Production Warehouse Code is Warehouse Code not Blank
   IF DB1.Production_Warehouse_Code <> *BLANK;

   // PAR.Warehouse Code = DB1.Production Warehouse Code
   PAR.Warehouse_Code = DB1.Production_Warehouse_Code;

   QUIT;

   ENDIF;

   ENDIF;

  }

  ENDIF;

  ENDIF;

 }

 // PAR.Company Number = WRK.Company Number
 PAR.Company_Number = WRK.Company_Number;

 // PAR.Access Denied (Y/N) = WRK.Access Denied (Y/N)
 PAR.Access_Denied_Y_N = WRK.Access_Denied_Y_N;

 //?If access denied is no, rtv co. name
 CASE;

 // IF WRK.Access Denied (Y/N) is no
 IF WRK.Access_Denied_Y_N = 'N';

 EXECUTE FUNCTION(RTV Company Name       RT) TYPE(RTVOBJ) FILE(CAABREP)          AC1255767;
 PARAMETER(WRK.Company_Number);
 PARAMETER(PAR.Name);
 {
  //?USER: Processing if Data record not found

  MOVE *ALL (To: PAR From: CON);

  //?USER: Process Data record

  MOVE *ALL (To: PAR From: DB1);

 }

 ENDIF;

 EXECUTE FUNCTION(RTV Screen Heading     RT) TYPE(EXCINTFUN)                     AC1277375;
 PARAMETER(PAR.Application_Code);
 PARAMETER(PAR.System_Value_Alpha);
 {
  //?Execute internal function

  EXECUTE FUNCTION(RTV Applic. Group Desc RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1274118;
  PARAMETER(PAR.Application_Code);
  PARAMETER(WRK.Description);
  {
   //?USER: Process Data record

   CASE;

   // IF DB1.Application Group is Blank
   IF DB1.Application_Group = *BLANK;

   MOVE *ALL (To: PAR From: DB1);

   // IF *OTHERWISE
   IF *OTHERWISE;

   EXECUTE FUNCTION(RTV Application Desc   RT) TYPE(RTVOBJ) FILE(CADNREP)          AC1249881;
   PARAMETER(DB1.Application_Group);
   PARAMETER(PAR.Description);
   {
    //?USER: Processing if Data record not found

    MOVE *ALL (To: PAR From: CON);

    // PGM.*Return code = CND.*Record does not exist
    PGM.*Return_code = 'Y2U0005';

    //?USER: Process Data record

    MOVE *ALL (To: PAR From: DB1);

   }

   ENDIF;

  }

  // WRK.USR Description 40 = WRK.Description
  WRK.USR_Description_40 = WRK.Description;

  // Execute function DSP Center Text Str 40 US.
  EXECUTE FUNCTION(DSP Center Text Str 40 US) TYPE(EXCUSRSRC) ('PDA0UFR');
  PARAMETER(WRK.USR_Description_40);
  PARAMETER(WRK.USR_Description_40_2);
  {
   E                    UCT        40  1               CENTER TABLE
   C                     MOVEA#IDSC4    UCT              LOAD ARRAY
   C                     Z-ADD40        UX      20       SET COUNTER
   C                     MOVE 'N'       FLAG    1        FLAG
   C           UX        DOWGT0
   C           FLAG      ANDEQ'N'
   C           UCT,UX    IFEQ ' '
   C                     SUB  1         UX
   C                     ELSE
   C                     Z-ADDUX        UXH     20
   C                     Z-ADD0         UX
   C                     MOVE 'Y'       FLAG
   C                     END
   C                     END
   C           40        SUB  UXH       UX
   C           UX        DIV  2         UX
   *** ADDED FOR HPE, THERE HEADER FOOTER IS OFF   MEA 042494
   C                     SUB  1         UX
   C           UX        IFGT 0
   C                     MOVE *BLANKS   UCT
   C                     MOVEA#IDSC4    UCT,UX
   C                     END
   C                     MOVEAUCT       #ODE40           LOAD OUTPUT
  }

  // PAR.System Value Alpha = WRK.USR Description 40   2
  PAR.System_Value_Alpha = WRK.USR_Description_40_2;

 }

}


EXECUTE FUNCTION(Rtv Prior Saturday    RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1618543;
PARAMETER(LCL.Company_Number);
PARAMETER(JOB.*Job_date);
PARAMETER(PAR.Date_Out);
{
 //?USER: Initialize routine

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Date Out = DB1.Post to G/L Date
 PAR.Date_Out = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

 ENDIF;

}


// WRK.Date (Alpha) USR = CVTVAR(PAR.Date Out)
WRK.Date_Alpha_USR = CVTVAR(PAR.Date_Out);

// WRK.Date (Char-6) USR = SUBSTRING(WRK.Date (Alpha) USR,CON.2,CON.6)
WRK.Date_Char_6_USR = SUBSTRING(WRK.Date_Alpha_USR:2:6);

// PAR.Date (Char-8) USR = CONCAT(CON.20,WRK.Date (Char-6) USR,CON.*ZERO)
PAR.Date_Char_8_USR = '20' + WRK.Date_Char_6_USR (*ZERO);

//?prior week ending saturday date
EXECUTE FUNCTION(Rtv Prior Saturday    RT) TYPE(RTVOBJ) FILE(CAAFREP)           AC1618543;
PARAMETER(LCL.Company_Number);
PARAMETER(PAR.Date_Out);
PARAMETER(WRK.Last_Used_Date);
{
 //?USER: Initialize routine

 // LCL.First Time Flag = CND.Yes
 LCL.First_Time_Flag = 'Y';

 //?USER: Processing if Data record not found

 MOVE *ALL (To: PAR From: CON);

 //?USER: Process Data record

 CASE;

 // IF LCL.First Time Flag is Yes
 IF LCL.First_Time_Flag = 'Y';

 // LCL.First Time Flag = CND.NO
 LCL.First_Time_Flag = 'N';

 // IF *OTHERWISE
 IF *OTHERWISE;

 CASE;

 // IF DB1.Day of Week is Saturday
 IF DB1.Day_of_Week = '7';

 // PAR.Date Out = DB1.Post to G/L Date
 PAR.Date_Out = DB1.Post_to_G_L_Date;

 QUIT;

 ENDIF;

 ENDIF;

}


// WRK.Date (Alpha) USR = CVTVAR(WRK.Last Used Date)
WRK.Date_Alpha_USR = CVTVAR(WRK.Last_Used_Date);

// WRK.Date (Char-6) USR = SUBSTRING(WRK.Date (Alpha) USR,CON.2,CON.6)
WRK.Date_Char_6_USR = SUBSTRING(WRK.Date_Alpha_USR:2:6);

// PAR.Last week ending dt 8 Alp = CONCAT(CON.20,WRK.Date (Char-6) USR,CON.*ZERO)
PAR.Last_week_ending_dt_8_Alp = '20' + WRK.Date_Char_6_USR (*ZERO);

// LCL.Company Number Pass   USR = LCL.Company Number
LCL.Company_Number_Pass_USR = LCL.Company_Number;

// WRK.Company Number Pass   USR = LCL.Company Number Pass   USR
WRK.Company_Number_Pass_USR = LCL.Company_Number_Pass_USR;

// PAR.Date (Alpha) USR = CVTVAR(PAR.Date Out)
PAR.Date_Alpha_USR = CVTVAR(PAR.Date_Out);

//?par.Last Week Ending Date usr = Last ISC week posted
//?par.date (char-8) usr  = new week end date 8 long
//?par.Date alpha usr = new isc week end date 7 long
//?R9083 02/17/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Exc Crt New Week ISC  UP.
SBMJOB;
CALL PROGRAM(Exc Crt New Week ISC  UP) ('PPQIUPC');
PARAMETER(WRK.Return_Code_Usr);
PARAMETER(LCL.Company_Number_Pass_USR);
PARAMETER(PAR.Date_Char_8_USR);
PARAMETER(PAR.Date_Alpha_USR);
PARAMETER(PAR.Last_week_ending_dt_8_Alp);
PARAMETER(WRK.Status_Y_or_N);
PARAMETER(PAR.ISC_Valuation_Grouping);
SBMJOBOVR JOB(CRT_STKBAL);
SBMJOBOVR JOBD(*USRPRF);
SBMJOBEND;

//?RMC FP1100 Build ISC workfiles and email  04/06/07
//?R9083 05/08/17 DN-Added ISC Valuation Grouping to Parm.
// Call program Exc Bld Workf Dwn-SCD XF.
CALL PROGRAM(Exc Bld Workf Dwn-SCD XF) ('PMFRXFR');
PARAMETER(PAR.Date_Char_8_USR);
PARAMETER(PAR.ISC_Valuation_Grouping);

