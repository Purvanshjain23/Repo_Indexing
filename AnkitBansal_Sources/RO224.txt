     h option(*SRCSTMT:*NODEBUGIO)
      *
      * ENVIRONMENT: Pork Division
      * SYSTEM:      Resource Optimization
      * PROGRAM:     RO224
      * TITLE:       Byproduct Mix Recap
      * PROGRAMMER:  LeAnne Ramsey
      * CREATED:     04/23/07
      *
      * FUNCTION:    This program performs 2 functions:
      *                  1) Calculates the Amount Due and updates the "summary" record
      *                  2) Sum the Amounts Due by TF Classification and writes Recap
      *                     records
      *
      ***************************************************************************************
      * MODIFICATIONS:
      ***************************************************************************************
      * DATE      PROGRAMMER
      *
      * 08/06/07  LeAnne Ramsey
      *           To make our report match Damon's spreadsheet, we had to add a new/separate
      *           'Amounts' file. Prior to this, the Amount Due was in the Summary record.
      *
      * 11/28/07  Alice Brownfield
      *           Recompile only when we combined the Credit Item Meat Costs with the
      *           Byproduct MIX processing/files.
      *
      * 06/05/08  LeAnne Ramsey
      *           Changed program name.
      *
      * 06/06/08  LeAnne Ramsey
      *           Recompile only. New fields (Ingredient and Other Cost) added to
      *           multiple files.
      *
      * 06/26/08  LeAnne Ramsey
      *           Changed to use new "summary level" logic.
      *           The "amount due" fields are now in the TF ByProduct Mix Summary file.
      *           We no longer need/use file ROP125-TF ByProduct Mix Amounts.
      *           File ROP125 will be removed/deleted/eliminated from the system.
      *
      * 11/21/08  LeAnne Ramsey
      *           As part of synchronizing the LDAs between the TFS Margin Adjustment Close
      *           and the Meat Costing, we changed the LDA positions.
      /EJECT
      ***************************************************************************************
      * FILE SPECIFICATION
      ***************************************************************************************
      *
     Fppamrel1  if   e           k disk
      *    TF Classification
      *
      *
     frol121c   uf   e           k disk
      *  TF byproduct mix summary
      *
      *
     frol121d   if   e           k disk    rename(ysrec:ysrecd) prefix(p1)
      *  TF byproduct mix summary  (LF selects only WP records that are NOT standalone)
      *
      *
     frop123    o    e           k disk
      *  TF byproduct mix recap
      *
      /eject
      ****************************************************************
      * DEFINITION SPECIFICATIONS
      ****************************************************************
      *
      ****************************************************************
      * CONSTANTS
      ****************************************************************
      *
     D yes             c                   'Y'
     D no              c                   'N'
      *
      ****************************************************************
      * ARRAYS AND TABLES
      ****************************************************************
      *
      ****************************************************************
      * STANDALONE FIELDS
      ****************************************************************
      *
      * Control fields
      *
     D first           s              1    inz('Y')
     D svtfclcd        s                   like(ystfclcd)
      *
      ****************************************************************
      * DATA STRUCTURES
      ****************************************************************
      *
      *---------------------------------------------------------------
      * Standard program status data structure
      *---------------------------------------------------------------
      *    externally defined as UTPGFR (record format: PGMDSR)
     D pgmds         esds                  extname(utpgfr)
      *
      *---------------------------------------------------------------
      * Local data area
      *---------------------------------------------------------------
      *
     Dlda             uds                  dtaara(*lda)
     D  ldwedt                29     36  0
      *
      * The following is a dummy C-spec to keep the D-specs from
      * running over into the C-specs on the compile listing. It
      * serves no other purpose and can be deleted at any time.
      *
     C                   if        sdpgm = *blank
     C                   endif
      /EJECT
      **********************************************************************************
      * Mainline
      **********************************************************************************
      *
      * Update the Summary records with Amount Due
      *
     C                   exsr      $amount
      *
      * Write Recap records at TF "Classification" level from the updated Summary records
      *
     C                   exsr      $recap
      *
     C                   seton                                        lr
      /eject
      *-----------------------------------------------------------------------------------
      * Calculate the Amount Due (at the Summary Level)
      *-----------------------------------------------------------------------------------
      *
     C     $amount       begsr
      *
      * For each "standalone" record in the TF Byproduct Mix Summary file for the week:
      *   1) calculate amount due
      *   2) update the summary record
      * Note: "Standalone" records are: all the FG records
      *                                 any WP record with no companion FG record
      *
     C     ldwedt        setll     rol121c
     C                   dou       *in90 = *on                                  Do summary
     C     ldwedt        reade     rol121c                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             yssafl = yes
      *
     C                   exsr      $upd121
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do summary
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Update Summary record with Amounts Due
      *-----------------------------------------------------------------------------------
      *
     C     $upd121       begsr
      *
      * Work in Process
     C                   select
     C                   when      ysittycd = 'WP'
     C                   z-add     ysstrpam      yssduam
      *
      * Finished Goods
      *   1) Calculate 'Mix Amount' from FG summary record fields
      *   2) Retrieve 'SBF CoOwned Transfer Product Cost Amount' from the companion
      *      WP summary record
      *   3) Calcualte 'Due Amount'
      *
     C                   when      ysittycd = 'FG'
      *         Mix $$
     C                   eval(h)   yssmixam = (ysanpupr - yssnpupr) * ysspulb
      *         CoOwn $$
     C     key01         chain     rol121d                            92
     C                   if        *in92 = *off
     C                   z-add     p1ysstrpam    ysstrpam
     C                   endif
      *          Due $$
     C                   eval(h)   yssduam = yssmixam + ysstrpam
     C                   endsl
      *
      * Upate Summary record
      *
     C                   update    ysrec
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Recap processing
      *-----------------------------------------------------------------------------------
      *
     C     $recap        begsr
      *
      * Process each "standalone" record in the TF Byproduct Mix Summary file for this Week.
      * Write a "recap" record for each TF Classification code.
      *
     C     ldwedt        setll     rol121c
     C                   dou       *in90 = *on                                  Do recap
     C     ldwedt        reade(n)  rol121c                                90
     C                   if        *in90 = *off and                             If not EOF
     C                             yssafl = yes
      *
     C                   select
     C                   when      first = yes
     C                   move      no            first
     C                   move      ystfclcd      svtfclcd
      *
     C                   when      ystfclcd <> svtfclcd
     C                   exsr      $wrt123
     C                   endsl
      *
      * Detail processing
     C                   add       yssmixam      yrsmixam
     C                   add       ysstrpam      yrstrpam
     C                   add       yssduam       yrsduam
      *
     C                   endif                                                  If not EOF
     C                   enddo                                                  Do recap
      *
      * Write out last Recap record
      *
     C                   if        first = no
     C                   exsr      $wrt123
     C                   endif
      *
     C                   endsr
      /eject
      *-----------------------------------------------------------------------------------
      * Write a Recap record
      *-----------------------------------------------------------------------------------
      *
     C     $wrt123       begsr
      *
     C                   z-add     ldwedt        yrwedt
     C                   move      svtfclcd      yrtfclcd
      *
     C     svtfclcd      chain     ppamrel1                           92
     C                   if        *in92 = *off
     C                   eval      yrtfclds = amq0na
     C                   else
     C                   move      *blank        yrtfclds
     C                   endif
      *
     C                   write     yrrec
     C                   clear                   yrrec
      *
      * Save control field
     C                   move      ystfclcd      svtfclcd
      *
     C                   endsr
      /eject
      *---------------------------------------------------------------
      * Initialization subroutine
      *---------------------------------------------------------------
      *
     C     *inzsr        begsr
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    yswedt
     C                   kfld                    yssumlev
      *
     C                   endsr
      /eject
