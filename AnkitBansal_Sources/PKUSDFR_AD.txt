// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKUSDFR
// ?Date: 14.08.2025 Time: 02:52:57
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

//?E3625 JJH 12/04/14 - Recompile because PrklISTesting List for
//? field *USER to add users Julius High (ISJHIGH) and Collin Lynch
//? ISCLYNC.
ENDDO;

EXECUTE FUNCTION(Val Application/User  IF) TYPE(EXCINTFUN)                      AB1129080;
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(WRK.BOH_Company_Number);
PARAMETER('HPE');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);
{
 //?Execute internal function

 // Call program Val Application/User  XF.
 CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
 PARAMETER(PAR.Oms_Warehouse_Code);
 PARAMETER(PAR.CC_Company_Number);
 PARAMETER(PAR.Oms_Application_Code);
 PARAMETER(PAR.Oms_SalesPerson_Code);
 PARAMETER(PAR.Oms_Allow_Multi_Company);
 PARAMETER(PAR.Oms_Default_Printer);
 PARAMETER(PAR.Oms_Name);
 PARAMETER(PAR.Oms_System_Value_Alpha);
 PARAMETER(PAR.Oms_Access_Denied_Y_N);

 CASE;

 // IF PAR.Oms Access Denied (Y/N) is Yes
 IF PAR.Oms_Access_Denied_Y_N = 'Y';

 // Send error message - 'Access Denied for User'
 ERROR(PRK0298);

 // IF *OTHERWISE
 IF *OTHERWISE;

 // Execute function Mov ApplN to Company  US.
 EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
 PARAMETER(PAR.Oms_System_Value_Alpha);
 {
  C***   MOVE USER SOURCE                      ***
  C                     MOVEL#IEVTX    ##CMP
 }

 ENDIF;

}


CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

RETURN;

ENDIF;

// LCL.First Time Flag Usr = CND.Yes
LCL.First_Time_Flag_Usr = 'Y';

// PGM.*Scan limit = CON.0035000
PGM.*Scan_limit = 0035000;

//?USER: Initialize subfile control

CASE;

// IF LCL.First Time Flag Usr is Yes
IF LCL.First_Time_Flag_Usr = 'Y';

// CTL.EA Company Number = WRK.BOH Company Number
CTL.EA_Company_Number = WRK.BOH_Company_Number;

// LCL.First Time Flag Usr = CND.No
LCL.First_Time_Flag_Usr = 'N';

ENDIF;

// Call program Rtv Paym Proc Pms/StpsXF.
CALL PROGRAM(Rtv Paym Proc Pms/StpsXF) ('PLLPXFR');
PARAMETER(WRK.BOH_Company_Number);
PARAMETER(CTL.Pmt_Current_Payment_Date);
PARAMETER(CTL.Pmt_Current_Payment_Step);

//?USER: Initialize subfile record from DBF record

//?RU date selection
CASE;

// IF CTL.RU Date NE WRK.Zero USR
IF CTL.RU_Date <> WRK.Zero_USR;

CASE;

// IF CTL.RU Date EQ DB1.RU Date
IF CTL.RU_Date = DB1.RU_Date;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?RU time selection
CASE;

// IF CTL.RU Time NE WRK.Zero USR
IF CTL.RU_Time <> WRK.Zero_USR;

CASE;

// IF CTL.RU Time EQ DB1.RU Time
IF CTL.RU_Time = DB1.RU_Time;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Tattoo number selection
CASE;

// IF CTL.EA Tattoo Number NE WRK.Zero USR
IF CTL.EA_Tattoo_Number <> WRK.Zero_USR;

CASE;

// IF CTL.EA Tattoo Number EQ DB1.EA Tattoo Number
IF CTL.EA_Tattoo_Number = DB1.EA_Tattoo_Number;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Trolley selection
CASE;

// IF CTL.EA Trolley Id NE WRK.Blank USR
IF CTL.EA_Trolley_Id <> WRK.Blank_USR;

CASE;

// IF CTL.EA Trolley Id EQ DB1.EA Trolley Id
IF CTL.EA_Trolley_Id = DB1.EA_Trolley_Id;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?Process Flag Selection
CASE;

// IF CTL.EA Record Processed NE WRK.Blank USR
IF CTL.EA_Record_Processed <> WRK.Blank_USR;

CASE;

// IF CTL.EA Record Processed EQ DB1.EA Record Processed
IF CTL.EA_Record_Processed = DB1.EA_Record_Processed;

// IF *OTHERWISE
IF *OTHERWISE;

// PGM.*Record selected = CND.*NO
PGM.*Record_selected = 'N';

ENDIF;

ENDIF;

//?USER: Process subfile control (Pre-confirm)

CASE;

// IF CTL.*CMD key is CF10
IF CTL.*CMD_key = '10';

// Call program Dsp EvalTrans Inv Upl DF.
CALL PROGRAM(Dsp EvalTrans Inv Upl DF) ('PLIPDFR');
PARAMETER(CTL.EA_Company_Number);

QUIT;

// IF CTL.*CMD key is CF12
IF CTL.*CMD_key = '12';

//?Validate for specific rules on allow user to continue & process
CASE;

// IF CTL.Pmt Current Payment Step is Payment in process
IF CTL.Pmt_Current_Payment_Step <> 1;

// Send error message - 'Payment Process not Allow'
ERROR(PRK0453);
MSGPARM(WRK.Sel_Processing);

QUIT;

//?Validate for specific rules on allow user to continue & process
// IF *OTHERWISE
IF *OTHERWISE;

// Call program Val Application/User  XF.
CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('UET');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);

CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

// Send error message - 'Access Denied for User'
ERROR(PRK0298);

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

//?Busy Flag - Rule only want one person use this
DO;

//?Get the Busy Flag for the Eval Trans Upl
//?If the value is a Y, then this process is being used
//?by another party, if not then the user will have to call
//?for a reset for this function to continue.
ENDDO;

// Call program Rtv Company Values    XF.
CALL PROGRAM(Rtv Company Values    XF) ('PDGKXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER('HPEEVRMMO');
PARAMETER(LCL.System_Value_Alpha_USR);

CASE;

// IF LCL.System Value Alpha    USR is Yes
IF LCL.System_Value_Alpha_USR = 'Y';

//?insert a window to tell the user that this
//?program is busy and can not be used at this time.
// WRK.Text description = CONCAT(CON.Eval Trans Upl Maintenanc,CON.e is busy,CON.*ZERO)
WRK.Text_description = 'Eval Trans Upl Maintenanc' + 'e is busy' (0);

// Call program Pmt EvalMaintenceAllowPV.
CALL PROGRAM(Pmt EvalMaintenceAllowPV) ('PLPQPVR');
PARAMETER(WRK.Text_description);

RETURN;

ENDIF;

// Call program WW EvalTran UplMovRmv XP.
CALL PROGRAM(WW EvalTran UplMovRmv XP) ('PLPGXFR');
PARAMETER(PAR.CC_Company_Number);
PARAMETER(CTL.Pmt_Current_Payment_Date);
PARAMETER(CTL.Pmt_Current_Payment_Step);

ENDIF;

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

// IF CTL.*CMD key is CF14
IF CTL.*CMD_key = '14';

// AND JOB.*USER is PorkISTesting
AND JOB.*USER = 'PRKTEST'/'ISPPATE'/'ISSMASO'/'ISRCENT'/'ISPURVAP'/'ISROSEM'/'ISSHARONZ'           +
/'ISSZURN'/'ISJHIGH'/'ISJBADE'/'ISJAMESB'/'ISDNGUY'/'ISDANNYN'/'PRKTESTGU'/'PRKTESTST'             +
/'PRKTESTTF'/'TPMTEST'/'TFTST961'/'ISSUSANM'/'ISJULIUSH'/'ISBGUTI'/'ISBARBG'/'ISBBARK'             +
/'ISNFOY'/'ISNATHANF'/'ISDREDD'/'ISABANS';

// Call program Val Application/User  XF.
CALL PROGRAM(Val Application/User  XF) ('PDGXXFR');
PARAMETER(PAR.Oms_Warehouse_Code);
PARAMETER(PAR.CC_Company_Number);
PARAMETER('UET');
PARAMETER(PAR.Oms_SalesPerson_Code);
PARAMETER(PAR.Oms_Allow_Multi_Company);
PARAMETER(PAR.Oms_Default_Printer);
PARAMETER(PAR.Oms_Name);
PARAMETER(PAR.Oms_System_Value_Alpha);
PARAMETER(PAR.Oms_Access_Denied_Y_N);

CASE;

// IF PAR.Oms Access Denied (Y/N) is Yes
IF PAR.Oms_Access_Denied_Y_N = 'Y';

// Send error message - 'Access Denied for User'
ERROR(PRK0298);

QUIT;

// IF *OTHERWISE
IF *OTHERWISE;

ENDIF;

// Send status message - 'Processing...'
MESSAGE(PRK0957 *STATUS);

//?Only after call from user and you have review the
//?the condition
//?Set company flag to no longer busy WILL BE DONE INSIDE NEXT SCREEN
// Call program Dsp Eval Trans Upl RestDF.
CALL PROGRAM(Dsp Eval Trans Upl RestDF) ('PLPDDFR');
PARAMETER(PAR.CC_Company_Number);

// PGM.*Reload subfile = CND.*YES
PGM.*Reload_subfile = 'Y';

QUIT;

ENDIF;

