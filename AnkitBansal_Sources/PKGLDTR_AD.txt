// ?------------------------------------------------------------------------------------------------
// ?Synon action diagram for PKGLDTR
// ?Date: 14.08.2025 Time: 02:51:37
// ?------------------------------------------------------------------------------------------------

//?USER: Initialize program

//?Modifications and Comments
DO;

EXECUTE FUNCTION(C2156 DOA HELD OVERS) TYPE(EXCINTFUN)                          AB1188624;
{
 //?Execute internal function

 //?12/24/96   SLM     User was report of Doa after scale tickets
 //?                   were done.  The tattoo was sent to kill and they
 //?                   missed reporting doas.  So if the user had the
 //?                   scaling pgm up for this tattoo before the sent
 //?                   was completed then when the scaleing exits the
 //?                   scale ticket file is recounted which puts the
 //?                   held overs back on the org day.  Tattoo scale
 //?                   tickets are not moved for held overs.
 //?                   Validate if there is one tattoo detail for this
 //?                   tattoo that has been driven then do not allow
 //?                   user to change the tattoo scale file.
 //?                   Also if error go to display pgm
 //?                   Only if no error, and all open tattoo detail
 //?                   will the edits be allowed.
}


EXECUTE FUNCTION(C2287 Scale Tickets Afk) TYPE(EXCINTFUN)                       AB1190985;
{
 //?Execute internal function

 //?01/24/97   SLM     User is needs to be allow to print scale
 //?                   tickets after sent to kill because they are not
 //?                   the shipped weight from the producer until later
 //?                   in the day.  The hogs could already be sent to
 //?                   kill.
 //?                   Create a routine that will not recount the
 //?                   tattoo scale to the tattoo hdr, or the
 //?                   buy order, or the pens.
}


//?E3625 JJH 12/04/14 - Recompile because PrklISTesting List for
//? field *USER to add users Julius High (ISJHIGH) and Collin Lynch
//? ISCLYNC.
//?H16853 ISE 01/23/21 - Increased the length from 5 to 7 and corrected the
//?                      alignment for Buy Order Number field.
ENDDO;

// Execute function Mov ApplN to Company  US.
EXECUTE FUNCTION(Mov ApplN to Company  US) TYPE(EXCUSRSRC) ('PKMFUFR');
PARAMETER(PAR.Oms_System_Value_Alpha);
{
 C***   MOVE USER SOURCE                      ***
 C                     MOVEL#IEVTX    ##CMP
}


//?USER: Initialize subfile record

CASE;

// IF RCD.TST Head is Not Zero
IF RCD.TST_Head <> *ZERO;

// RCD.TD Avg Live Wgt = RCD.TST Wgt / RCD.TST Head *
RCD.TD_Avg_Live_Wgt = RCD.TST_Wgt / RCD.TST_Head;

// IF *OTHERWISE
IF *OTHERWISE;

// RCD.TD Avg Live Wgt = CON.*ZERO
RCD.TD_Avg_Live_Wgt = *ZERO;

ENDIF;

// RCD.Head Total USR = RCD.TST Head
RCD.Head_Total_USR = RCD.TST_Head;

// RCD.Weight Tot USR = RCD.TST Wgt
RCD.Weight_Tot_USR = RCD.TST_Wgt;

EXECUTE FUNCTION(Rtv Pen Type          RT) TYPE(RTVOBJ) FILE(PKA3REP)           AB1170335;
PARAMETER(RCD.Pen_Company_Number);
PARAMETER(RCD.Pen_Number);
PARAMETER(WRK.Pen_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


//?Manual / Live Scale
CASE;

// IF DB2.TST Record Created Status is Manual Record
IF DB2.TST_Record_Created_Status = 'M';

// RCD.@Desc 15 = CON.Manual Entry
RCD.@Desc_15 = 'Manual Entry';

//?Manual / Live Scale
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.@Desc 15 = CON.Live Scale
RCD.@Desc_15 = 'Live Scale';

ENDIF;

//?Scale ticket printed or not
CASE;

// IF DB2.RS Record Status is Active
IF DB2.RS_Record_Status = 'A';

// RCD.@Desc 30 = WRK.Blank USR
RCD.@Desc_30 = WRK.Blank_USR;

//?Scale ticket printed or not
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.@Desc 30 = CON.Printed
RCD.@Desc_30 = 'Printed';

ENDIF;

//?USER: Validate header non-key fields

EXECUTE FUNCTION(Rtv Producer Name     RT) TYPE(RTVOBJ) FILE(PKACREP)           AB1101542;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PD_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Pdctn Loc Name    RT) TYPE(RTVOBJ) FILE(PKAFREP)           AB1101543;
PARAMETER(CTL.PD_Producer_Code);
PARAMETER(CTL.PL_Location_Code);
PARAMETER(CTL.PL_Name);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Hog Class         RT) TYPE(RTVOBJ) FILE(PKA8REP)           AB1127629;
PARAMETER(CTL.HC_Class_Code);
PARAMETER(CTL.HC_Description);
PARAMETER(WRK.HC_Defect_Required);
PARAMETER(WRK.HC_Price_Required);
PARAMETER(WRK.HC_Resolution);
PARAMETER(WRK.HC_Qualification);
PARAMETER(CTL.TH_Hog_Class_Type);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


EXECUTE FUNCTION(Rtv Hog Defect Desc   RT) TYPE(RTVOBJ) FILE(PKA7REP)           AB1127787;
PARAMETER(CTL.DF_Defect_Code);
PARAMETER(CTL.DF_Description);
{
 //?USER: Processing if Data record not found

 // *MO.VE             1183529*Bu = ilt. in functions
 PAR.DF_Description = WRK.Blank_USR;

 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF CTL.TH Scale Ticket Sts is Printed
IF CTL.TH_Scale_Ticket_Sts = 'P';

// CTL.TH Scale Ticket Sts = CND.Reprint
CTL.TH_Scale_Ticket_Sts = 'R';

ENDIF;

//?USER: Validate subfile record fields

// RCD.TD Avg Live Wgt = RCD.TST Wgt / RCD.TST Head *
RCD.TD_Avg_Live_Wgt = RCD.TST_Wgt / RCD.TST_Head;

CASE;

// IF CTL.TH Scale Ticket Sts is Printed
IF CTL.TH_Scale_Ticket_Sts = 'P';

// CTL.TH Scale Ticket Sts = CND.Reprint
CTL.TH_Scale_Ticket_Sts = 'R';

ENDIF;

//?CALC: Subfile record function fields

CTL.Head_Received_SUM = SUM(RCD.TST_Head);

CTL.Weight_SUM = SUM(RCD.TST_Wgt);

//?Manual / Live Scale
CASE;

// IF DB2.TST Record Created Status is Manual Record
IF DB2.TST_Record_Created_Status = 'M';

// RCD.@Desc 15 = CON.Manual Entry
RCD.@Desc_15 = 'Manual Entry';

//?Manual / Live Scale
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.@Desc 15 = CON.Live Scale
RCD.@Desc_15 = 'Live Scale';

ENDIF;

//?Scale ticket printed or not
CASE;

// IF DB2.RS Record Status is Active
IF DB2.RS_Record_Status = 'A';

// RCD.@Desc 30 = WRK.Blank USR
RCD.@Desc_30 = WRK.Blank_USR;

//?Scale ticket printed or not
// IF *OTHERWISE
IF *OTHERWISE;

// RCD.@Desc 30 = CON.Printed
RCD.@Desc_30 = 'Printed';

ENDIF;

//?CALC: Header function fields

CASE;

// IF CTL.Head Received  SUM is Not Zero
IF CTL.Head_Received_SUM <> *ZERO;

// CTL.TH Avg Live Wgt = CTL.Weight SUM / CTL.Head Received  SUM *
CTL.TH_Avg_Live_Wgt = CTL.Weight_SUM / CTL.Head_Received_SUM;

// IF *OTHERWISE
IF *OTHERWISE;

// CTL.TH Avg Live Wgt = CON.*ZERO
CTL.TH_Avg_Live_Wgt = *ZERO;

ENDIF;

//?USER: Process command keys

CASE;

// IF CTL.*CMD key is CF16
IF CTL.*CMD_key = '16';

//?User selected to reprint scale ticket with out update
// Call program Pmt Prt Scale Tkt AFK PV.
CALL PROGRAM(Pmt Prt Scale Tkt AFK PV) ('PKHCPVR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);

// IF CTL.*CMD key is CF17
IF CTL.*CMD_key = '17';

// Call program Dsp Tattoo Defect     DF.
CALL PROGRAM(Dsp Tattoo Defect     DF) ('PKJ6DFR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);

ENDIF;

//?THIS IS CURRENTLY BEING DEVELOPED BY SusanMason 2/21/2014
//?F19=ReApply Scale Ticket  ONLY if already done with this tattoo scl tick
CASE;

// IF CTL.*CMD key is CF19
IF CTL.*CMD_key = '19';

// WRK.Allow Change Usr Y/N = CND.Yes
WRK.Allow_Change_Usr_Y_N = 'Y';

CASE;

// IF JOB.*USER is PorkISTesting
IF JOB.*USER = 'PRKTEST'/'ISPPATE'/'ISSMASO'/'ISRCENT'/'ISPURVAP'/'ISROSEM'/'ISSHARONZ'            +
/'ISSZURN'/'ISJHIGH'/'ISJBADE'/'ISJAMESB'/'ISDNGUY'/'ISDANNYN'/'PRKTESTGU'/'PRKTESTST'             +
/'PRKTESTTF'/'TPMTEST'/'TFTST961'/'ISSUSANM'/'ISJULIUSH'/'ISBGUTI'/'ISBARBG'/'ISBBARK'             +
/'ISNFOY'/'ISNATHANF'/'ISDREDD'/'ISABANS';

// IF JOB.*USER is Receiving Group
IF JOB.*USER = 'OKJGLOV';

// IF *OTHERWISE
IF *OTHERWISE;

// WRK.Allow Change Usr Y/N = CND.No
WRK.Allow_Change_Usr_Y_N = 'N';

// Send error message - 'Option ReApply Not Allow'
ERROR(PRK1295);

QUIT;

ENDIF;

EXECUTE FUNCTION(Vry BOL Head InfoPay  RT) TYPE(RTVOBJ) FILE(PKAXCPP)           AB1318771;
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(LCL.BOL_Freight_Allocation);
PARAMETER(LCL.BOL_Head_Received);
PARAMETER(LCL.BOL_Live_Wgt_Received);
{
 //?USER: Process Data record

 MOVE *ALL (To: PAR From: DB1);

}


CASE;

// IF WRK.Allow Change Usr Y/N is Yes
IF WRK.Allow_Change_Usr_Y_N = 'Y';

EXECUTE FUNCTION(Rtv Tattoo InforReApp RT) TYPE(RTVOBJ) FILE(PKA1CPP)           AB1318770;
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);
PARAMETER(LCL.TH_Held_Over);
PARAMETER(LCL.TH_Payment_Sts);
PARAMETER(LCL.TH_Held_Over_Record);
PARAMETER(LCL.TH_Held_Ovr_Completed_Dte);

//?Tattoo validation
CASE;

// IF LCL.TH Payment Sts is Paid Anything
IF LCL.TH_Payment_Sts = 'PL'/'PC'/'NC'/'NL';

// WRK.Allow Change Usr Y/N = CND.No
WRK.Allow_Change_Usr_Y_N = 'N';

// Send error message - 'Tattoo Is either in payment process or paid. This option is not allowed'
ERROR(PRK0724);

QUIT;

//?Tattoo validation
// IF LCL.TH Held Over is greater than 0
IF LCL.TH_Held_Over > *ZERO;

// WRK.Allow Change Usr Y/N = CND.No
WRK.Allow_Change_Usr_Y_N = 'N';

// Send error message - 'Held Overs on Tattoo, please contact the Seaboard I.S. for this correction'
ERROR(PRK1242);

QUIT;

//?Tattoo validation
// IF LCL.TH Held/Ovr Completed Dte is Greater than 0
IF LCL.TH_Held_Ovr_Completed_Dte > *ZERO;

// WRK.Allow Change Usr Y/N = CND.No
WRK.Allow_Change_Usr_Y_N = 'N';

// Send error message - 'Held Overs on Tattoo, please contact the Seaboard I.S. for this correction'
ERROR(PRK1242);

QUIT;

ENDIF;

ENDIF;

CASE;

// IF WRK.Allow Change Usr Y/N is Yes
IF WRK.Allow_Change_Usr_Y_N = 'Y';

//?THIS IS CURRENTLY BEING DEVELOPED BY SusanMason 2/21/2014
//?Re-Apply the Tattoo Scale data
// Send status message - 'Processing...'
MESSAGE(PRK0957 *STATUS);

// Call program zExc Scl Tkt,w/Upd ReApXF.
CALL PROGRAM(zExc Scl Tkt,w/Upd ReApXF) ('PLUFXFR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);
PARAMETER('N');
PARAMETER(WRK.Print_Scale_Tkt_USR);

// Call program Crt Tattoo Action Comm XF.
CALL PROGRAM(Crt Tattoo Action Comm XF) ('PKV4XFR');
PARAMETER(CTL.BOH_Company_Number);
PARAMETER(CTL.BOH_Buy_Order_Number);
PARAMETER(CTL.BOL_Load_Number);
PARAMETER(CTL.TH_Tattoo_Number);
PARAMETER(CTL.TH_Kill_Date);
PARAMETER(WRK.TH_Head_Received);
PARAMETER(WRK.TH_Held_Over);
PARAMETER(WRK.TH_AP_Voucher_Document#);
PARAMETER(WRK.TH_Voucher_Payment_Date);
PARAMETER('TS');
PARAMETER(WRK.Tattoo_Nbr_Alpha_Usr);

ENDIF;

ENDIF;

