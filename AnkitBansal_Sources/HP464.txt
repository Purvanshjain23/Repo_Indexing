      *****************  RPG PROGRAM HEADING  ************************
      * SYSTEM:      HOG PRODUCTION
      * PROGRAM:     HP464
      * TITLE:       SPECIFY FEED TICKET DETAIL REPORT OPTIONS
      * PROGRAMMER:  MARY PALMER
      * CREATED:     04/28/94
      *
      * FUNCTION: ALLOWS USER TO ENTER REPORT SELECTIONS.
      *
      *           THIS PROGRAM IS CALLED FROM A MENU.
      *
      ****************************************************************
      * MODIFICATIONS:
      ****************************************************************
      * DATE      PROGRAMMER
      *
      * 02/03/00  LeAnne Fedor
      *           Removed print options (hold, copies, outque, etc.) from screen
      *           and replaced them with a function key that calls the pop-up
      *           window of print options.
      *
      * 01/22/01  LeAnne Fedor
      *           Added a selection on cell.
      *
      * 01/30/01  LeAnne Fedor
      *           Removed the selection on production type since we have removed
      *           production type from the feed files.  If the users demand that
      *           production type be a selector, we will put it back on the screen
      *           and go to a workfile arrangement.
      *
      * 04/17/01  LeAnne Fedor
      *           Removed check for match on business office and farm since
      *           feed tickets from any mill can now be delivered to any farm.
      *
      * 06/12/01  LeAnne Fedor
      *           'Feed mill business office' is now an optional selection.
      *           Removed all reference to the report 'by vendor invoice'. We now
      *           have only one report....the one 'by production phase'.
      *
      * 08/13/01  LeAnne Fedor
      *           Added new optional selection on 'transaction code'.
      *
      * 09/12/01  LeAnne Fedor
      *           Added a new report selection on 'production manager'.
      *
      * 07/16/02  LeAnne Fedor
      *           Removed check for match on production phase and farm since
      *           a farm can now be multiple phases.
      *
      * 04/20/05  LeAnne Fedor
      *           Added new selections:
      *                      Feed delivery zone
      *                      Company relationship
      *                      Produced flag
      *
      * 07/02/09  LeAnne Ramsey
      *           Recompile only. Added new field 'Continuous Flow Flag' to Hog Group file.
      *
      * 11/08/12  LeAnne Ramsey (E2321)
      *           Added an option to allow users to email an XLS instead of printing the
      *           report. (Requested by Kim Humbard). Because of how many columns are one the
      *           XLS, we are limited to 26,700 records.
      *
      * 10/15/13  LeAnne Ramsey (E2831)
      *           Recompile only. Added field 'MTech Reference'.
      /EJECT
      ****************************************************************
      * FILE SPECIFICATIONS
      ****************************************************************
      *
     FHPD464    CF   E             WORKSTN INFDS(IOFEED)
      *
      *
     FHSP002    IF   E           K DISK
      *    FUNCTIONS
      *
      *
     FHSP011    IF   E           K DISK
      *    PRODUCTION PHASE
      *
      *
     FHSP012    IF   E           K DISK
      *    COMPANY RELATIONSHIP
      *
      *
      *
     Fhsl013a   if   e           k disk    rename(dzrec:dzreca)
      *    Feed delivery zones
      *
      *
     Fhsp016    if   e           k disk
      *    Manager
      *
      *
     FHSP018    IF   E           K DISK
      *    FARM SITE
      *
      *
     FHSP034    IF   E           K DISK
      *    HOG GROUP
      *
      *
     FHSP071    IF   E           K DISK
      *    RATION
      *
      /EJECT
      ****************************************************************
      * TABLE AND ARRAY SPECIFICATIONS
      ****************************************************************
      *
      *---------------------------------------------------------------
      *  COMPILE TIME ARRAY FOR SUBMIT JOB COMMAND USED IN QCMDEXC
      *---------------------------------------------------------------
     D CMD             S              1    DIM(80) CTDATA PERRCD(80)
      *
      *---------------------------------------------------------------
      * DEFINE STATUS CODES AND DESCRIPTIONS IN COMPILE-TIME ARRAYS
      *---------------------------------------------------------------
      *
     D CDE             S              1    DIM(3) CTDATA PERRCD(3)
     D DSC             S             10    DIM(3) CTDATA PERRCD(1)
      *
      *---------------------------------------------------------------
      * STANDARD ERROR MESSAGE HANDLING DATA STRUCTURES
      *---------------------------------------------------------------
      *
      * FOR ERROR MESSAGE HANDLING, A PACKED INDEX (E) IS REQUIRED.
      * FOR PROGRAM READABILITY, DEFINE A CORRESPONDING ERROR COUNT
      * FIELD CALLED 'ERROR'
      *
     D                 DS                  INZ
     D  ERROR                  1      2P 0
     D  E                      1      2P 0
      *
      * THIS DATA STRUCTURE SUPPLIES THE NAME OF THE MESSAGE FILE TO
      * THE MESSAGE HANDLING CL PROGRAM.  THE FIELD NAME MSGFIL MUST BE
      * CONSTANT. THE VALUE IN QUOTES IS THE NAME OF THE SPECIFIC
      * MESSAGE FILE CONTAINING THE USER DEFINED MESSAGES.
      *
     D                 DS                  INZ
     D  MSGFIL                 1     10    INZ('HSMSGF    ')
      *
      * THE FOLLOWING 3 DATA STRUCTURES ARE USED TO SPEED MESSAGE
      * HANDLING SINCE IT IS FASTER TO CLEAR DATA STRUCTURES THAN
      * ARRAYS.  EACH IS ASSOCIATED WITH A STANDARD MESSAGE ARRAY.
      *
     D MGI             DS           140    INZ
     D  MGID                   1    140
     D                                     DIM(20)                              MSG ID ARRAY
      *
     D MGD             DS          1000    INZ
     D  MGDT                   1   1000
     D                                     DIM(20)                              MSG PARMS
      *
     D MGWK            DS            50    INZ
     D  MGW                    1     50
     D                                     DIM(50)                              MSG WORK PARMS
      *
      *---------------------------------------------------------------
      * STANDARD PROGRAM STATUS DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTPGFR (RECORD FORMAT: PGMDSR)
     D PGMDS         ESDS                  EXTNAME(UTPGFR)
      *
      *---------------------------------------------------------------
      * STANDARD WORKSTATION INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTWSFR (RECORD FORMAT: UTIDFRR)
     D IOFEED        E DS                  EXTNAME(UTWSFR)
      *
      *---------------------------------------------------------------
      * STANDARD DATABASE FILE INFORMATION DATA STRUCTURE
      *---------------------------------------------------------------
      *    EXTERNALLY DEFINED AS UTDBFR (RECORD FORMAT: FDBCKD)
     D DBFEED        E DS                  EXTNAME(UTDBFR)
      *
      *---------------------------------------------------------------
      *  NAMED CONSTANTS
      *---------------------------------------------------------------
      *
     D CREATE          C                   CONST('CREATE')
     D REVISE          C                   CONST('REVISE')
     D DELETE          C                   CONST('DELETE')
     D VIEW            C                   CONST('VIEW  ')
     D SELECT          C                   CONST('SELECT')
     D YES             C                   CONST('Y')
     D NO              C                   CONST('N')
     D SET1            C                   CONST('SET1  ')
     D EDIT1           C                   CONST('EDIT1 ')
     D SCRN1           C                   CONST('SCRN1 ')
     D EXIT            C                   CONST('EXIT  ')
     D UPDATE          C                   CONST('UPDATE')
     D ALL             C                   CONST('A')
      *
      * Workfields
     d alphfmdy        s              6
     d alphtmdy        s              6
      *
      *---------------------------------------------------------------
      *  LDA - FEED TICKET REPORT OPTIONS
      *---------------------------------------------------------------
      *
     D LDA            UDS
     D  LDFMBO                 1      5
     D  LDFYMD                 6     13  0
     D  LDTYMD                14     21  0
     D  LDPMGCD               22     26
     D  LDPPCD                27     31
     D  LDFSCD                32     36  0
     D  LDRNCD                37     41
     D  LDHGSN                42     48  0
     D  LDTRCD                49     49
     D  LDBODS                50     79
     D  LDRPFL                80     80
     D  LDPPDS                90    119
     D  LDFSNM               120    144
     D  LDRNDS               145    164
     D  LDFMDY               165    170  0
     D  LDTMDY               171    176  0
      *
     D  LDPBFL               178    178
     D  LDCELL               179    180  0
     D  LDTRDS               181    190
     D  LDPMGNM              191    215
     D  LDRPDS               216    236
      *
     D  LDPRFL               237    237
     D  LDCRCD               238    242
     D  LDCRDS               243    252
     D  LDDZCD               253    257
     D  LDDZDS               258    277
      *
     D  ldemail              278    327
      *
     D  LDOUTU               401    410
     D  LDHOLD               411    411
     D  LDCOPY               412    412  0
     D  LDOUTQ               413    422
      *
     D  ldsel                451    580
      *
      * Array indexes
      *
     D x               s              1  0
      /EJECT
      ****************************************************************
      * MAIN LINE
      ****************************************************************
      *
     C                   MOVEL     SET1          ROUTNE
      *
     C     *INLR         DOWEQ     *OFF                                         MAIN DO LOOP
      *
     C     ROUTNE        CASEQ     SET1          $SET1
     C     ROUTNE        CASEQ     SCRN1         $SCRN1
     C     ROUTNE        CASEQ     EDIT1         $EDIT1
      *
     C     ROUTNE        CASEQ     EXIT          $EXIT
     C                   ENDCS
     C                   ENDDO                                                  MAIN DO LOOP
      *
      /EJECT
      *----------------------------------------------------------------
      * $SET1 - SUBROUTINE TO SET ENVIRONMENT FOR SCREEN 1
      *----------------------------------------------------------------
      *
      *  SET ROUTINE TO DISPLAY SCREEN
      *
     C     $SET1         BEGSR
     C                   MOVEL     SCRN1         ROUTNE
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $SCRN1 - SUBROUTINE TO PERFORM OPERATOR I/O FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $SCRN1        BEGSR
      *
      * IF THE USER FAILED THE INITIAL SECURITY CHECKS, SETON 99
      * TO PROTECT INPUT FIELDS AND INVALIDATE FUNCTION KEYS.
      *
     C     TERMFL        IFEQ      YES
     C                   SETON                                        99
     C                   ENDIF
      *
      * WRITE THE ERROR MESSAGES FROM THE ERROR ARRAYS TO THE
      * ERROR MESSAGE SUBFILE
      *
     C                   EXSR      $WRMSG
      *
      * WRITE SCREEN 1 TO CRT
      *
     C                   WRITE     HP464K1
     C                   WRITE     HP464EC
     C                   EXFMT     HP464R1
      *
      * CLEAR THE MESSAGES FROM THE MESSAGE DATA STRUCTURES AND PROGRAM
      * MESSAGE QUEUE.
      *
     C                   EXSR      $CLMSG
      *
      * GET USER'S ENTRY AND SET THE NEXT ROUTINE
      *
     C                   SELECT                                                 MAIN SELECT
     C     *IN03         WHENEQ    *ON                                          F3-EXIT
     C     TERMFL        OREQ      YES                                          BAD USER
     C                   MOVEL     EXIT          ROUTNE
      *
     C     *IN17         WHENEQ    *ON                                          F17-PRINT OPT
     C                   MOVEL     SCRN1         ROUTNE
     C                   CALL      'HP451'
     C                   PARM                    SDPGM
     C     LDCOPY        PARM      LDCOPY        XXCOPY
     C                   PARM                    LDHOLD
     C                   PARM                    LDOUTQ
     C                   PARM                    XXNITE
     C                   PARM                    XXJOBQ
      *
     C     *IN20         WHENEQ    *ON                                          F20-WRKSPLF
     C                   CALL      'UTWRKSPL'
     C                   MOVEL     SCRN1         ROUTNE
      *
      *
      * CHECK FOR A USER PROMPT FIRST. THE USER MAY WANT
      * TO SELECT A NEW BUSINESS OFFICE.
      *
     C     *IN04         WHENEQ    *ON                                          WH PROMPT
     C                   EXSR      $F4S1
     C                   MOVEL     SCRN1         ROUTNE
     C                   OTHER
      *
     C                   MOVEL     EDIT1         ROUTNE
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $EDIT1 - SUBROUTINE TO EDIT INPUT FIELDS FOR SCREEN 1
      *----------------------------------------------------------------
      *
     C     $EDIT1        BEGSR
      *
      * CLEAR HOG GROUP WORK FIELD
      *
     C                   Z-ADD     0             WKHGSN
     C                   Z-ADD     0             LDTYMD
     C                   Z-ADD     0             LDFYMD
      *
      * VALIDATE:
      *   FROM DATE
      *   TO DATE
     C                   EXSR      $FRDT
     C                   EXSR      $TODT
      *
      *
      * VERIFY THAT THE "TO" DATE IS NOT EARLIER THAN "FROM" DATE
      *
     C     *IN32         IFEQ      *OFF                                         IF EARLIER
     C     *IN33         ANDEQ     *OFF
     C     LDTYMD        ANDLT     LDFYMD
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09009'     MGID(E)
     C                   ENDIF
     C                   ENDIF                                                  IF EARLIER
      *
      * VALIDATE:
      *   REPORT
      *   PAGE BREAK
     C                   EXSR      $RPFL
     C                   EXSR      $PBFL
      *
      * VALIDATE:
      *   FEED MILL BUSINESS OFFICE
      *   PRODUCTION PHASE
      *   PRODUCTION MANAGER
      *   FARM SITE
      *   COMPANY RELATIONSHIP
      *   FEED DELIVERY ZONE
      *   CELL
      *   RATION CODE
      *   HOG GROUP CODE
      *   TRANSACTION CODE
      *
      *
     C                   MOVEL(P)  'HP464'       WKFNCD
     C                   EXSR      $CHKBO
      *
     C                   EXSR      $PHCD
     C                   EXSR      $PMGCD
     C                   EXSR      $CELL
     C                   EXSR      $FSCD
     C                   exsr      $CRCD
     C                   EXSR      $DZCD
     C                   EXSR      $RNCD
     C                   EXSR      $PRFL
     C                   EXSR      $HGCD
     C                   EXSR      $TRCD
      *
      * IF THERE ARE NO ERRORS, EXECUTE THE SUBROUTINE TO PROCESS THE
      * USERS REQUEST
      *
     C     ERROR         IFEQ      0
     C     *IN44         IFEQ      *OFF
     C                   SETON                                        44
     C                   ELSE
     C                   EXSR      $PROC1
     C                   ENDIF
     C                   ELSE
     C                   SETOFF                                       44
     C                   ENDIF
      *
     C                   MOVEL     SCRN1         ROUTNE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $FRDT - VALIDATE FROM DATE
      *----------------------------------------------------------------
      *
     C     $FRDT         BEGSR
      *
     C     DFFMDY        IFEQ      0                                            IF NO DATE
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * VERIFY THAT THE DATE IS VALID
      *
     C                   Z-ADD     DFFMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        32
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDFYMD
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO DATE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $TODT - VALIDATE TO DATE
      *----------------------------------------------------------------
      *
     C     $TODT         BEGSR
      *
      * VERIFY THAT A TO DATE IS ENTERED
      *
     C     DFTMDY        IFEQ      0                                            IF NO TO
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
     C                   ELSE
      *
      * VERIFY THAT THE DATE IS VALID
      *
     C                   Z-ADD     DFTMDY        PFRM8
     C                   Z-ADD     0             PTO8
     C                   MOVEL     'MDY '        PFRFMT
     C                   MOVEL     'CYMD'        PTOFMT
     C                   Z-ADD     0             PDAYS
     C                   MOVE      *BLANK        PCODE
     C                   MOVE      *BLANK        PRTRN
      *
     C                   EXSR      $DATE
      *
     C     PRTRN         IFNE      *BLANK                                       IF INVALID
     C                   SETON                                        33
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09004'     MGID(E)
     C                   ENDIF
     C                   ELSE
     C                   Z-ADD     PTO8          LDTYMD
     C                   ENDIF                                                  IF INVALID
     C                   ENDIF                                                  IF NO TO
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Validate Company Relationship
      *----------------------------------------------------------------
      *
     C     $crcd         begsr
      *
     C                   move      *blank        dfcrds
      *
     C                   select
     C                   when      dfcrcd = *blank
     C                   other
      *
     C     dfcrcd        chain     hsp012                             92
     C                   if        *in92 = *off                                 If hit
     C                   movel     crcrds        dfcrds
     C                   else
      *
     C                   seton                                        48
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00175'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfcrcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If no hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate Delivery Zone
      *----------------------------------------------------------------
      *
     C     $dzcd         begsr
      *
     C                   move      *blank        dfdzds
      *
     C                   select
     C                   when      dfdzcd = *blank
     C                   other
      *
      * Check that this zone exists.
      *
     C     dfdzcd        chain     hsl013a                            92
     C                   if        *in92 = *off                                 If hit
     C                   movel     dzdzds        dfdzds
     C                   else
     C                   seton                                        42
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00193'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfdzcd        mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If hit
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Produced Flag
      *----------------------------------------------------------------
      *
     C     $prfl         begsr
      *
     C                   select
     C                   when      dfprfl = *blank
      *
     C                   when      dfprfl <> yes and dfprfl <> no
     C                   seton                                        49
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09106'     mgid(e)
     C                   endif
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * $PHCD - VALIDATE PRODUCTION PHASE
      *----------------------------------------------------------------
      *
     C     $PHCD         BEGSR
      *
      * IF PRODUCTION PHASE KEYED, CHECK TO SEE IF IT IS VALID
      *
     C                   MOVE      *BLANK        DFPPDS
     C     DFPPCD        IFNE      *BLANK                                       IF PHASE
     C     DFPPCD        CHAIN     HSP011                             91
     C     *IN91         IFEQ      *OFF                                         IF PHASE OK
     C                   MOVEL     PPPPDS        DFPPDS
     C                   ELSE
     C                   SETON                                        35
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00170'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFPPCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF PHASE OK
     C                   ENDIF                                                  IF PHASE
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * Validate production manager
      *---------------------------------------------------------------
      *
     C     $pmgcd        begsr
      *
     C                   move      *blank        dfpmgnm
      *
     C                   select
     C                   when      dfpmgcd = *blank
     C                   other
      *
     C     dfpmgcd       chain     hsp016                             92
     C                   if        *in92 = *on                                  If invalid mgr
     C                   seton                                        34
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00151'     mgid(e)
     C                   clear                   mgw
     C                   movea     dfpmgcd       mgw(1)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   else
      *
     C                   move      mgmgnm        dfpmgnm
      *
     C                   endif                                                  If invalid mgr
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * Validate cell
      *----------------------------------------------------------------
      *
     C     $cell         begsr
      *
     C                   SELECT
     C     DFCELL        WHENLT    0
     C                   SETON                                        40
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09000'     MGID(E)
     C                   ENDIF
     C                   ENDSL
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE FARM SITE
      *----------------------------------------------------------------
      *
     C     $FSCD         BEGSR
      *
     C                   MOVE      *BLANK        DFFSNM
      *
     C                   select
     C                   when      dffscd = 0
      *
     C                   when      dffscd < 0
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS09000'     mgid(e)
     C                   endif
     C                   other
      *
     C     DFFSCD        CHAIN     HSP018                             92
     C     *IN92         IFEQ      *ON                                          IF BAD FARM
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00131'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ELSE
      *
     C                   MOVEL     FSFSNM        DFFSNM
      *
      * VALID FARM SITE WAS KEYED, SO CHECK FOR MATCHES BETWEEN:
      *     FARM PRODUCTION MANAGER AND SCREEN PRODUCTION MANAGER
      *     FARM CELL AND SCREEN CELL
      *
      * CHECK FOR PRODUCTION MANAGER MATCH
      *
     C     DFPMGCD       IFNE      *BLANK                                       IF MANAGER
     C     FSPMGCD       ANDNE     DFPMGCD
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00494'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVEA     FSPMGCD       MGW(6)
     C                   MOVEA     DFPMGCD       MGW(11)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF MANAGER
      *
      * CHECK FOR CELL MATCH
      *
     C     DFCELL        IFNE      0                                            IF CELL
     C     FSCELL        ANDNE     DFCELL
     C                   SETON                                        36
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09152'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(6)
     C                   MOVE      DFCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
      * Check for Company Relationship match
      *
     C                   if        dfcrcd <> *blank and                         If company rel
     C                             dfcrcd <> fscrcd
     C                   seton                                        36
     C                   if        error < maxmsg
     C                   add       1             error
     C                   movel     'HS00852'     mgid(e)
     C                   clear                   mgw
     C                   move      dffscd        xxfscd
     C                   movea     xxfscd        mgw(1)
     C                   movea     fscrcd        mgw(6)
     C                   movea     dfcrcd        mgw(11)
     C                   movea     mgw           mgdt(e)
     C                   endif
     C                   endif                                                  If company rel
      *
     C                   ENDIF                                                  IF BAD FARM
     C                   endsl
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $RNCD - VALIDATE RATION CODE
      *----------------------------------------------------------------
      *
     C     $RNCD         BEGSR
      *
      * IF RATION CODE KEYED, VALIDATE THAT IT EXISTS
      *
     C                   MOVE      *BLANK        DFRNDS
     C     DFRNCD        IFNE      *BLANK                                       IF RAT CODE
     C     DFRNCD        CHAIN     HSP071                             93
     C     *IN93         IFEQ      *OFF                                         IF FOUND
     C                   MOVEL     RNRNDS        DFRNDS
     C                   ELSE
     C                   SETON                                        37
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00236'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFRNCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF FOUND
     C                   ENDIF                                                  IF RAT CODE
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $HGCD - VALIDATE HOG GROUP CODE
      *----------------------------------------------------------------
      *
     C     $HGCD         BEGSR
      *
      * IF THE HOG GROUP IS KEYED, VALIDATE IT.
      *    CHECK FOR MATCH ON PRODUCTION PHASE
      *    CHECK FOR MATCH ON FARM SITE
      *    CHECK FOR MATCH ON PRODUCTION MANAGER
      *
     C     DFHGCD        IFNE      *BLANK                                       IF GROUP
     C     DFHGCD        CHAIN     HSP034                             93
     C     *IN93         IFEQ      *OFF                                         IF GOOD GRP
     C                   Z-ADD     HGHGSN        WKHGSN
      *
      * THE GROUP'S PRODUCTION PHASE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGPPCD        IFNE      DFPPCD                                       IF DIFF PP
     C     DFPPCD        ANDNE     *BLANK
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00462'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     HGPPCD        MGW(8)
     C                   MOVEA     DFPPCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF PP
      *
      *
      * THE GROUP'S FARM SITE MUST MATCH THE ONE KEYED
      * BY THE USER.
      *
     C     HGFSCD        IFNE      DFFSCD                                       IF DIFF FARM
     C     DFFSCD        ANDNE     0
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00468'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVE      HGFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVE      DFFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(13)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF DIFF FARM
      *
      * CHECK FOR CELL MATCH
      *
     C     DFCELL        IFNE      0                                            IF CELL
     C     FSCELL        ANDNE     DFCELL
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09153'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVE      FSCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(8)
     C                   MOVE      DFCELL        XXCELL
     C                   MOVEA     XXCELL        MGW(10)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  IF CELL
      *
      * CHECK FOR PRODUCTION MANAGER MATCH
      *
     C     DFPMGCD       IFNE      *BLANK                                       IF MANAGER
     C     HGFSCD        CHAIN     HSP018                             92
     C                   IF        *IN92 = *OFF AND                             If mismatch
     C                             FSPMGCD <> DFPMGCD
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00495'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     HGHGCD        MGW(1)
     C                   MOVE      HGFSCD        XXFSCD
     C                   MOVEA     XXFSCD        MGW(8)
     C                   MOVEA     FSPMGCD       MGW(13)
     C                   MOVEA     DFPMGCD       MGW(18)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
     C                   ENDIF                                                  If mismatch
     C                   ENDIF                                                  IF MANAGER
     C                   ELSE
      *
     C                   SETON                                        38
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00261'     MGID(E)
     C                   CLEAR                   MGW
     C                   MOVEA     DFHGCD        MGW(1)
     C                   MOVEA     MGW           MGDT(E)
     C                   ENDIF
      *
     C                   ENDIF                                                  IF GOOD GRP
     C                   ENDIF                                                  IF GROUP
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * Validate transaction code
      *----------------------------------------------------------------
      *
     C     $trcd         begsr
      *
     C                   move      *blank        dftrds
      *
     C                   select
     C                   when      dftrcd = *blank
     C                   other
      *
     C                   eval      x = 1
     C     dftrcd        lookup    cde(x)                                 92
     C                   if        *in92 = *on                                  If found
     C                   move      dsc(x)        dftrds
     C                   else
     C                   seton                                        39
     C                   if        error < maxmsg
     C                   add       1             error
     C                   eval      mgid(e) = 'HS00330'
     C                   endif
     C                   endif                                                  If found
      *
     C                   endsl
      *
     C                   endsr
      /EJECT
      *----------------------------------------------------------------
      * VALIDATE REPORT
      *----------------------------------------------------------------
      *
     C     $RPFL         BEGSR
      *
      * USER MUST SELECT WHICH REPORT
      *
     C                   MOVE      *BLANK        DFRPDS
      *
     C                   SELECT
     C     DFRPFL        WHENEQ    *BLANK
     C                   SETON                                        47
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09001'     MGID(E)
     C                   ENDIF
      *
     C     DFRPFL        WHENNE    'P'
     C     DFRPFL        ANDNE     'M'
     C                   SETON                                        47
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS00484'     MGID(E)
     C                   ENDIF
      *
     C     DFRPFL        WHENEQ    'P'
     C                   eval      dfrpds = 'By Production Phase'
      *
     C     DFRPFL        WHENEQ    'M'
     C                   eval      dfrpds = 'By Production Manager'
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $PBFL - VALIDATE PAGE BREAK ON FARM SITE
      *----------------------------------------------------------------
      *
     C     $PBFL         BEGSR
      *
     C     DFPBFL        IFNE      YES
     C     DFPBFL        ANDNE     NO
     C                   SETON                                        30
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09106'     MGID(E)
     C                   ENDIF
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *----------------------------------------------------------------
      * $CHKBO - CHECK THE BUSINESS OFFICE ENTERED AS A RESTRICTOR
      *----------------------------------------------------------------
      *
      * THE BUSINESS OFFICE ENTERED MUST:
      *    BE A VALID OFFICE IN THE BUSINESS OFFICE MASTER
      *    BE A 'FEED MILL' DIVISION OFFICE
      *    HAVE A SECURITY LOCATION TO WHICH THE USER IS AUTHORIZED
      *
     C     $CHKBO        BEGSR
      *
      * SET THE 'VALIDATE B.O.' FLAG DEPENDING ON WHETHER THE
      * USER LEFT B.O. BLANK TO GET ALL BUSINESS OFFICES OR ENTERED
      * A SPECIFIC OFFICE.
      *
     C     DFFMBO        IFEQ      *BLANK
     C                   MOVEL     ALL           INBOFL
     C                   ELSE
     C                   MOVEL     YES           INBOFL
     C                   ENDIF
      *
      * CHECK THE USER'S SECURITY TO THIS BUSINESS OFFICE.
      * SET INDVFL TO YES TO TELL SECURITY PROGRAM TO COMPARE THE
      * FUNCTION DIVISION CODE TO THE B.O. DIVISION CODE.
      *
     C                   MOVEL     YES           INDVFL
     C                   EXSR      $SEC
     C                   MOVEL     NO            INDVFL
      *
     C                   MOVEL     OUBODS        DFBODS
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $SEC   - CALL SECURITY PROGRAM
      *---------------------------------------------------------------
      *
     C     $SEC          BEGSR
      *
      * SETUP THE FIELDS TO SEND INTO THE SECURITY PROGRAM
      *
     C                   MOVEL     WKFNCD        INFNCD                         PGM NAME
     C                   MOVEL     DFFMBO        INBOBO                         SCREEN BO
      *
     C                   MOVE      *BLANK        OUBOBO                         BO CODE
     C                   MOVE      *BLANK        OUBODS                         BO DESC
     C                   MOVE      *BLANK        OUDVCD                         FUNCTION DIV
     C                   MOVEL     NO            TERMFL            1            TERMINAL FLG
      *
     C                   CALL      'HPSEC  '
      **** IN
     C                   PARM                    MGID                           MSGID ARRAY
     C                   PARM                    MGDT                           MSGDTA DATA
     C                   PARM                    ERROR                          # OF ERRORS
     C                   PARM                    INFNCD           10            FUNC CODE
     C                   PARM                    INBOBO            5            BO CODE
     C                   PARM                    INDVFL            1            CHECK DIV?
     C                   PARM                    INBOFL            1            CHECK B.O.?
      **** OUT
     C                   PARM                    OUBOBO            5            BO CODE
     C                   PARM                    OUBODS           30            BO DESC.
     C                   PARM                    OUDVCD            5            DIV CODE
     C                   PARM                    SECFL             1            SEC FLAG
     C                   PARM                    OUBOFL            1            BO ERRFLG
     C                   PARM                    OURMFL            1
      *
     C     OUBOFL        IFEQ      YES
     C                   SETON                                        31
     C                   ENDIF
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $PROC1 - SUBROUTINE TO PROCESS THE USER'S REQUEST
      *---------------------------------------------------------------
      *
     C     $PROC1        BEGSR
      *
      *  IF USER TOOK F8=SUBMIT EXCEPTION REPORT
      *
     C     *IN08         IFEQ      *ON                                          IF F8=SBMJOB
      *
      * MOVE DISPLAY FILE FIELDS INTO LDA
      *
     C                   MOVEL     DFFMBO        LDFMBO
     C                   MOVEL     DFBODS        LDBODS
     C                   MOVEL     DFPPCD        LDPPCD
     C                   MOVEL     DFPPDS        LDPPDS
     C                   MOVEL     DFPMGCD       LDPMGCD
     C                   MOVEL     DFPMGNM       LDPMGNM
     C                   Z-ADD     DFCELL        LDCELL
     C                   Z-ADD     DFFSCD        LDFSCD
     C                   MOVEL     DFFSNM        LDFSNM
     C                   MOVEL     DFRNCD        LDRNCD
     C                   MOVEL     DFRNDS        LDRNDS
     C                   Z-ADD     DFFMDY        LDFMDY
     C                   Z-ADD     DFTMDY        LDTMDY
     C                   MOVEL     DFRPFL        LDRPFL
     C                   MOVEL     DFRPDS        LDRPDS
      *
     C                   Z-ADD     WKHGSN        LDHGSN
     C                   MOVEL     DFTRCD        LDTRCD
     C                   MOVEL     DFTRDS        LDTRDS
     C                   MOVEL     DFPBFL        LDPBFL
      *
      *
     C                   movel     dfprfl        ldprfl
     C                   movel     dfcrcd        ldcrcd
     C                   movel     dfcrds        ldcrds
     C                   movel     dfdzcd        lddzcd
     C                   movel     dfdzds        lddzds
      *
     C                   move      dfemail       ldemail
     C                   if        dfemail = *blank
     C                   move      *blank        ldsel
     C                   else
     C                   exsr      $bldsel
     C                   endif
      *
     C                   OUT       LDA
      *
      * MOVE THE 80-CHARACTER COMPILE TIME ARRAY 'CMD' TO A
      * 80-CHARACTER FIELD FOR SUBMITTING JOB TO QCMDEXC.
      *
     C                   MOVEA     XXJOBQ        CMD(51)
     C                   MOVEA     CMD           CMDSBM
     C                   CALL      'QCMDEXC'
     C                   PARM                    CMDSBM
     C                   PARM                    LENGTH
      *
      * ISSUE STANDARD REQUEST SUBMISSION MESSAGE
      *
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09003'     MGID(E)
     C                   ENDIF                                                  IF F8=SBMJOB
      *
     C                   ENDSR
      /EJECT
      *--------------------------------------------------------------------------
      * If the user is emailing a XLS, build the date range and sort sequence
      * into a single field to use in the email "message".
      *--------------------------------------------------------------------------
      *
     C     $bldsel       begsr
      *
     C                   move(p)   dffmdy        alphfmdy
     C                   move(p)   dftmdy        alphtmdy
      *
     C                   eval      ldsel = dfrpds  + '     ' +
     C                             ' Date Range: ' + alphfmdy + ' to '
     C                                             + alphtmdy
      *
     C                   endsr
      /EJECT
      ****************************************************************
      * $DATE -  MANIPULATE DATES WITH DATE UTILITY
      ****************************************************************
      *
     C     $DATE         BEGSR
      *
     C                   CALL      'UT80060R'
     C                   PARM                    PFRM8             8 0
     C                   PARM                    PTO8              8 0
     C                   PARM                    PFRFMT            4
     C                   PARM                    PTOFMT            4
     C                   PARM                    PDAYS             4 0
     C                   PARM                    PCODE             1
     C                   PARM                    PRTRN             1
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * $WRMSG - SUBROUTINE TO WRITE ERROR MESSAGES
      *---------------------------------------------------------------
      *
     C     $WRMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM                    MGID
     C                   PARM                    MGDT
     C                   PARM                    ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $CLMSG - SUBROUTINE TO CLEAR MESSAGES
      *----------------------------------------------------------------
      *
     C     $CLMSG        BEGSR
      *
     C                   CALL      'UT80045J'                           43
     C                   PARM      *BLANK        MGI
     C                   PARM      *BLANK        MGD
     C                   PARM      *ZEROS        ERROR
     C                   PARM      SDPGM         PGM
     C                   PARM      MSGFIL        MSGFL
      *
      * IF CALL TO UT80045J FAILED, A MESSAGE HARDCODED IN THE DSPF
      * COMMAND KEY RECORD WILL BE SET ON. SO, REDISPLAY SCREEN TO USER
      *
     C     *IN43         IFEQ      *ON
     C                   MOVEL     SET1          ROUTNE
     C                   ENDIF
      *
     C                   ENDSR
      *
      *----------------------------------------------------------------
      * $EXIT - SUBROUTINE TO SET ON LR AND END JOB
      *----------------------------------------------------------------
      *
     C     $EXIT         BEGSR
     C                   SETON                                        LR
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * F4 PROMPT ON SCREEN 1
      *---------------------------------------------------------------
      *
     C     $F4S1         BEGSR
      *
     C                   SELECT
      *
      * IF BUSINESS OFFICE
      *
     C     FLD           WHENEQ    'DFFMBO'
     C                   MOVE      *BLANK        XXFMBO
     C                   MOVE      *BLANK        XXBODS
     C                   CALL      'HP503'
     C                   PARM                    XXFMBO
     C                   PARM                    XXBODS
     C                   PARM                    SVDVCD
     C                   SETON                                        51
     C     XXFMBO        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXFMBO        DFFMBO
     C                   MOVEL     XXBODS        DFBODS
     C                   ENDIF                                                  IF SELECTED
      *
      *
      * IF FEED DELIVERY ZONE
      *
     C     FLD           WHENEQ    'DFDZCD'
     C                   CALL      'HP511'
     C                   PARM      *BLANK        XXDZCD
     C                   PARM      *BLANK        XXDZDS
     C                   PARM      *blank        XXFMBO
     C                   SETON                                        52
     C     XXDZCD        IFNE      *BLANK
     C                   MOVEL     XXDZCD        DFDZCD
     C                   MOVEL     XXDZDS        DFDZDS
     C                   ENDIF
      *
      * IF PRODUCTION PHASE SELECTED
      *
     C     FLD           WHENEQ    'DFPPCD'
     C                   MOVE      *BLANK        XXPPCD
     C                   MOVE      *BLANK        XXPPDS
     C                   CALL      'HP507'
     C                   PARM                    XXPPCD
     C                   PARM                    XXPPDS
     C                   SETON                                        53
     C     XXPPCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPPCD        DFPPCD
     C                   MOVEL     XXPPDS        DFPPDS
     C                   ENDIF                                                  IF SELECTED
      *
      * Production manager
      *
     C                   when      fld = 'DFPMGCD'
     C                   call      'HP508'
     C                   parm      *blank        xxmgcd
     C                   parm      *blank        xxmgnm
     C                   seton                                        54
     C                   if        xxmgcd <> *blank
     C                   movel     xxmgcd        dfpmgcd
     C                   movel     xxmgnm        dfpmgnm
     C                   endif
      *
      *
      * IF COMPANY RELATIONSHIP
      *
     C     FLD           WHENEQ    'DFCRCD'
     C                   CALL      'HP506'
     C                   PARM      *BLANK        XXCRCD
     C                   PARM      *BLANK        XXCRDS
     C                   SETON                                        78
     C     XXCRCD        IFNE      *BLANK
     C                   MOVEL     XXCRCD        DFCRCD
     C                   MOVEL     XXCRDS        DFCRDS
     C                   ENDIF
      *
      *
      * IF FARM SITE SELECTED
      *
     C     FLD           WHENEQ    'DFFSCD'
     C                   MOVEL     DFFMBO        XXFMBO
     C                   Z-ADD     0             WKFSCD
     C                   MOVE      *BLANK        XXFSNM
     C                   CALL      'HP528'
     C                   PARM                    XXFMBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXFSNM
     C                   SETON                                        56
     C     WKFSCD        IFNE      0                                            IF SELECTED
     C                   Z-ADD     WKFSCD        DFFSCD
     C                   MOVEL     XXFSNM        DFFSNM
     C                   ENDIF                                                  IF SELECTED
      *
      *
      *  Produced Flag
      *
     C                   when      fld = 'DFPRFL'
     C                   call      'HP522'
     C                   parm                    xxynfl
     C                   seton                                        79
     C                   if        xxynfl <> *blank
     C                   movel     xxynfl        dfprfl
     C                   endif
      *
      *
      *
      * IF RATION SELECTED
      *
     C     FLD           WHENEQ    'DFRNCD'
     C                   MOVE      *BLANK        XXRNCD
     C                   CALL      'HP540'
     C                   PARM                    XXRNCD
     C                   PARM                    XXRNDS
     C                   SETON                                        55
     C     XXRNCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRNCD        DFRNCD
     C                   MOVEL     XXRNDS        DFRNDS
     C                   ENDIF                                                  IF SELECTED
      *
      *  HOG GROUP
      *
     C     FLD           WHENEQ    'DFHGCD'
     C                   MOVE      *BLANK        XXFSBO
     C                   Z-ADD     0             WKFSCD
     C                   MOVE      *BLANK        XXHGCD
     C                   CALL      'HP541'
     C                   PARM                    XXFSBO
     C                   PARM                    WKFSCD
     C                   PARM                    XXHGCD
     C                   SETON                                        58
      *
     C     XXHGCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXHGCD        DFHGCD
     C                   ENDIF                                                  IF SELECTED
      *
      * IF TRANSACTION CODE
      *
     C     FLD           WHENEQ    'DFTRCD'
     C                   CALL      'HP536'
     C                   PARM      *blank        XXTRCD
     C                   PARM      *blank        XXTRDS
     C                   SETON                                        59
     C     XXTRCD        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXTRCD        DFTRCD
     C                   MOVEL     XXTRDS        DFTRDS
     C                   ENDIF                                                  IF SELECTED
      *
      * IF PAGE BREAK ON FARM SITE FLAG
      *
     C     FLD           WHENEQ    'DFPBFL'
     C                   MOVE      *BLANK        XXPBFL
     C                   CALL      'HP522'
     C                   PARM                    XXPBFL
     C                   SETON                                        50
     C     XXPBFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXPBFL        DFPBFL
     C                   ENDIF                                                  IF SELECTED
      *
      * IF REPORT SELECTED
      *
     C     FLD           WHENEQ    'DFRPFL'
     C                   CALL      'HP521'
     C                   PARM      *BLANK        XXRPFL
     C                   PARM      *BLANK        XXRPDS
     C                   SETON                                        57
     C     XXRPFL        IFNE      *BLANK                                       IF SELECTED
     C                   MOVEL     XXRPFL        DFRPFL
     C                   MOVEL     XXRPDS        DFRPDS
     C                   ENDIF                                                  IF SELECTED
     C                   OTHER
      *
      * F4 NOT VALID FOR THIS FIELD SO ISSUE MESSAGE
      *
     C     ERROR         IFLT      MAXMSG
     C                   ADD       1             ERROR
     C                   MOVEL     'HS09011'     MGID(E)
     C                   ENDIF
      *
     C                   ENDSL
      *
     C                   ENDSR
      /EJECT
      *---------------------------------------------------------------
      * INITIALIZATION SUBROUTINE
      *---------------------------------------------------------------
      *
     C     *INZSR        BEGSR
      *
      * Key lists
      *
     C     key01         klist
     C                   kfld                    dffmbo
     C                   kfld                    dfdzcd
      *
      * DEFINE LDA
     C     *DTAARA       DEFINE    *LDA          LDA
     C                   IN        LDA
      *
      * Initialize LDA fields for printing
      *
     C                   MOVE      *BLANK        LDHOLD
     C                   Z-ADD     0             LDCOPY
     C                   MOVEL     LDOUTU        LDOUTQ
     C                   MOVEL     '*JOBD'       XXJOBQ           10
     C                   MOVEL     NO            XXNITE            1
     C                   Z-ADD     0             XXCOPY            1 0
      *
      * GET THIS FUNCTION'S NUMBER OF COPIES, HOLD YES/NO
      *
     C     SDPGM         CHAIN     HSP002                             92
     C     *IN92         IFEQ      *OFF
     C                   Z-ADD     FNCOPY        LDCOPY
     C                   MOVEL     FNHOLD        LDHOLD
     C                   ENDIF
      *
     C     LDCOPY        IFEQ      0
     C                   Z-ADD     1             LDCOPY
     C                   ENDIF
      *
     C     LDHOLD        IFEQ      *BLANK
     C                   MOVEL     NO            LDHOLD
     C                   ENDIF
      *
      * GLOBAL DEFINES
      *
     C                   MOVE      *BLANK        PGM              10            USED IN MSG
     C                   MOVE      *BLANK        MSGFL            10            USED IN MSG
     C                   MOVE      *BLANK        ROUTNE            6
     C                   MOVEL     '00'          RTNCD             2            RETURN CODE
      *
      * NUMERIC PARM FIELDS
      *
     C     *LIKE         DEFINE    DFFSCD        WKFSCD
      *
      * ALPHA PARM FIELDS
      *
     C                   MOVE      *BLANK        XXFSCD            5
     C                   MOVE      *BLANK        XXCELL            2
     C     *LIKE         DEFINE    DFFMBO        XXFMBO
     C     *LIKE         DEFINE    DFFMBO        XXFSBO
     C     *LIKE         DEFINE    DFBODS        XXBODS
     C     *LIKE         DEFINE    DFFSNM        XXFSNM
     C     *LIKE         DEFINE    DFPPCD        XXPPCD
     C     *LIKE         DEFINE    DFPPDS        XXPPDS
     C     *LIKE         DEFINE    RNRNCD        XXRNCD
     C     *LIKE         DEFINE    RNRNDS        XXRNDS
     C     *LIKE         DEFINE    DFHGCD        XXHGCD
     C     *LIKE         DEFINE    DFPBFL        XXPBFL
     C     *LIKE         DEFINE    DFTRCD        XXTRCD
     C     *LIKE         DEFINE    DFTRDS        XXTRDS
     C     *LIKE         DEFINE    dfpmgcd       XXMGCD
     C     *LIKE         DEFINE    dfpmgnm       XXMGNM
     C     *LIKE         DEFINE    DFRPFL        XXRPFL
     C     *LIKE         DEFINE    DFRPDS        XXRPDS
     C     *LIKE         DEFINE    CRCRCD        XXCRCD
     C     *LIKE         DEFINE    CRCRDS        XXCRDS
     C     *LIKE         DEFINE    DZDZCD        XXDZCD
     C     *LIKE         DEFINE    DZDZDS        XXDZDS
     C                   MOVE      *BLANK        XXYNFL            1
      *
      *
      *  PARMS FOR USE WITH QCMDEXC.  'LENGTH' IS THE LENGTH OF THE
      *  COMMAND THAT WILL BE ISSUED WITH QCMDEXC.  QCMDEXC REQUIRES
      *  THE FIELD CONTAINING LENGTH TO BE DEFINED AS 15 WITH 5 DECIMAL
      *  POSITIONS.  THE FIELD 'CMDSBM' WILL HOLD THE VALUES OF THE
      *  THE SUBMIT JOB COMMAND WHEN PASSED AS A PARM ON THE CALL TO
      *  QCMDEXC.
      *
     C                   Z-ADD     80            LENGTH           15 5          QCMDEXC PARM
     C                   MOVE      *BLANK        CMDSBM           80            QCMDEXC PARM
      *
      * THE FOLLOWING STANDARD CODE MUST BE INCLUDED TO MAKE THE
      * STANDARD ERROR MESSAGE HANDLING PROGRAM FUNCTION PROPERLY.
      * THIS CODE SETS AND CLEARS THE PROGRAM MESSAGE QUEUE.
      *
     C                   Z-ADD     20            MAXMSG            2 0
     C                   MOVEL     '*'           MSGPGM                         SET QUEUE
     C                   EXSR      $CLMSG                                       CLEAR MSG
      *
     C     *LIKE         DEFINE    HGHGSN        WKHGSN
      *
      * EXECUTE THE SECURITY SUBROUTINE TO DETERMINE USER
      * AUTHORIZATIONS.
      *
     C                   MOVEL(P)  SDPGM         WKFNCD           10
     C                   MOVEL     NO            INBOFL
     C                   EXSR      $SEC
     C                   MOVEL     YES           INBOFL            1
      *
      * IF ERRORS ON INITIAL CALL, SET TERMINAL FLAG TO YES.
      *
     C     SECFL         IFEQ      YES
     C                   MOVEL     YES           TERMFL
     C                   ENDIF
      *
      * SAVE THIS FUNCTION'S DIVISION CODE
      *
     C     *LIKE         DEFINE    OUDVCD        SVDVCD
     C                   MOVEL     OUDVCD        SVDVCD
      *
      * DEFAULT FOR PAGE BREAK ON FARM
      *
     C                   MOVE      NO            DFPBFL
      *
     C                   ENDSR
      /EJECT
      *****************************************************************
      * COMPILE TIME ARRAYS USED IN QCMDEXC
      *****************************************************************
** CMD TABLE
SBMJOB CMD(CALL PGM(HP464CL)) JOB(FEEDRPTS ) JOBQ(__________)
**  TICKET TRANSACTION CODES
DAP
**  TICKET TRANSACTION CODE DESCRIPTIONS
DELIVERY
ADJUSTMENT
PICKUP
